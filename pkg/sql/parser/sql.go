// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:868
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13565

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1567,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	260, 406,
	-2, 0,
	-1, 74,
	242, 243,
	515, 243,
	-2, 0,
	-1, 87,
	230, 1303,
	244, 1303,
	260, 402,
	389, 402,
	400, 1059,
	439, 402,
	452, 1059,
	499, 1059,
	526, 402,
	552, 1059,
	-2, 0,
	-1, 93,
	132, 1567,
	237, 1567,
	537, 1567,
	538, 1567,
	-2, 0,
	-1, 109,
	150, 1538,
	169, 1538,
	182, 1538,
	240, 1538,
	273, 1538,
	340, 1538,
	350, 1538,
	532, 1538,
	-2, 1509,
	-1, 149,
	158, 908,
	259, 908,
	392, 870,
	457, 870,
	498, 870,
	518, 908,
	520, 870,
	-2, 0,
	-1, 153,
	4, 1569,
	21, 1569,
	22, 1569,
	23, 1569,
	24, 1569,
	25, 1569,
	26, 1569,
	27, 1569,
	29, 1569,
	30, 1569,
	36, 1569,
	41, 1569,
	42, 1569,
	44, 1569,
	45, 1569,
	46, 1569,
	47, 1569,
	48, 1569,
	49, 1569,
	50, 1569,
	51, 1569,
	53, 1569,
	54, 1569,
	55, 1569,
	56, 1569,
	58, 1569,
	59, 1569,
	60, 1569,
	61, 1569,
	62, 1569,
	63, 1569,
	64, 1569,
	68, 1569,
	69, 1569,
	70, 1569,
	71, 1569,
	73, 1569,
	74, 1569,
	75, 1569,
	79, 1569,
	80, 1569,
	81, 1569,
	82, 1569,
	83, 1569,
	84, 1569,
	85, 1569,
	88, 1569,
	89, 1569,
	90, 1569,
	91, 1569,
	92, 1569,
	94, 1569,
	96, 1569,
	97, 1569,
	98, 1569,
	99, 1569,
	100, 1569,
	101, 1569,
	103, 1569,
	104, 1569,
	105, 1569,
	107, 1569,
	108, 1569,
	109, 1569,
	117, 1569,
	118, 1569,
	119, 1569,
	120, 1569,
	121, 1569,
	123, 1569,
	124, 1569,
	125, 1569,
	127, 1569,
	128, 1569,
	129, 1569,
	131, 1569,
	132, 1569,
	133, 1569,
	135, 1569,
	136, 1569,
	137, 1569,
	140, 1569,
	141, 1569,
	142, 1569,
	144, 1569,
	145, 1569,
	147, 1569,
	148, 1569,
	149, 1569,
	151, 1569,
	152, 1569,
	153, 1569,
	154, 1569,
	155, 1569,
	156, 1569,
	157, 1569,
	158, 1569,
	159, 1569,
	160, 1569,
	161, 1569,
	162, 1569,
	163, 1569,
	164, 1569,
	165, 1569,
	166, 1569,
	168, 1569,
	174, 1569,
	175, 1569,
	176, 1569,
	177, 1569,
	181, 1569,
	183, 1569,
	184, 1569,
	188, 1569,
	189, 1569,
	190, 1569,
	191, 1569,
	192, 1569,
	193, 1569,
	194, 1569,
	195, 1569,
	196, 1569,
	197, 1569,
	198, 1569,
	199, 1569,
	200, 1569,
	201, 1569,
	203, 1569,
	204, 1569,
	206, 1569,
	207, 1569,
	209, 1569,
	210, 1569,
	211, 1569,
	212, 1569,
	213, 1569,
	214, 1569,
	215, 1569,
	216, 1569,
	217, 1569,
	219, 1569,
	220, 1569,
	222, 1569,
	223, 1569,
	224, 1569,
	225, 1569,
	226, 1569,
	230, 1569,
	231, 1569,
	232, 1569,
	233, 1569,
	234, 1569,
	237, 1569,
	238, 1569,
	239, 1569,
	241, 1569,
	243, 1569,
	244, 1569,
	246, 1569,
	248, 1569,
	249, 1569,
	250, 1569,
	252, 1569,
	256, 1569,
	257, 1569,
	258, 1569,
	259, 1569,
	260, 1569,
	261, 1569,
	263, 1569,
	264, 1569,
	265, 1569,
	267, 1569,
	268, 1569,
	270, 1569,
	271, 1569,
	274, 1569,
	278, 1569,
	279, 1569,
	280, 1569,
	283, 1569,
	284, 1569,
	285, 1569,
	286, 1569,
	288, 1569,
	289, 1569,
	290, 1569,
	291, 1569,
	292, 1569,
	293, 1569,
	294, 1569,
	295, 1569,
	296, 1569,
	297, 1569,
	298, 1569,
	299, 1569,
	300, 1569,
	301, 1569,
	302, 1569,
	303, 1569,
	304, 1569,
	305, 1569,
	306, 1569,
	307, 1569,
	308, 1569,
	309, 1569,
	311, 1569,
	313, 1569,
	314, 1569,
	315, 1569,
	316, 1569,
	317, 1569,
	318, 1569,
	319, 1569,
	320, 1569,
	321, 1569,
	322, 1569,
	323, 1569,
	324, 1569,
	325, 1569,
	327, 1569,
	328, 1569,
	330, 1569,
	332, 1569,
	333, 1569,
	335, 1569,
	336, 1569,
	337, 1569,
	338, 1569,
	339, 1569,
	342, 1569,
	345, 1569,
	346, 1569,
	347, 1569,
	348, 1569,
	351, 1569,
	352, 1569,
	353, 1569,
	355, 1569,
	357, 1569,
	358, 1569,
	359, 1569,
	360, 1569,
	361, 1569,
	362, 1569,
	363, 1569,
	364, 1569,
	365, 1569,
	366, 1569,
	367, 1569,
	368, 1569,
	369, 1569,
	371, 1569,
	372, 1569,
	373, 1569,
	374, 1569,
	375, 1569,
	376, 1569,
	377, 1569,
	378, 1569,
	379, 1569,
	380, 1569,
	381, 1569,
	382, 1569,
	383, 1569,
	384, 1569,
	385, 1569,
	387, 1569,
	388, 1569,
	390, 1569,
	391, 1569,
	392, 1569,
	393, 1569,
	394, 1569,
	395, 1569,
	396, 1569,
	397, 1569,
	398, 1569,
	399, 1569,
	400, 1569,
	401, 1569,
	402, 1569,
	404, 1569,
	406, 1569,
	407, 1569,
	408, 1569,
	414, 1569,
	416, 1569,
	417, 1569,
	418, 1569,
	419, 1569,
	420, 1569,
	421, 1569,
	422, 1569,
	423, 1569,
	424, 1569,
	425, 1569,
	427, 1569,
	428, 1569,
	429, 1569,
	431, 1569,
	432, 1569,
	433, 1569,
	434, 1569,
	435, 1569,
	436, 1569,
	437, 1569,
	439, 1569,
	440, 1569,
	441, 1569,
	442, 1569,
	443, 1569,
	444, 1569,
	445, 1569,
	446, 1569,
	447, 1569,
	448, 1569,
	449, 1569,
	450, 1569,
	452, 1569,
	453, 1569,
	454, 1569,
	455, 1569,
	456, 1569,
	457, 1569,
	459, 1569,
	460, 1569,
	461, 1569,
	462, 1569,
	463, 1569,
	464, 1569,
	466, 1569,
	467, 1569,
	468, 1569,
	469, 1569,
	470, 1569,
	471, 1569,
	472, 1569,
	473, 1569,
	475, 1569,
	477, 1569,
	478, 1569,
	479, 1569,
	480, 1569,
	481, 1569,
	482, 1569,
	483, 1569,
	484, 1569,
	485, 1569,
	486, 1569,
	487, 1569,
	488, 1569,
	489, 1569,
	490, 1569,
	491, 1569,
	492, 1569,
	494, 1569,
	495, 1569,
	497, 1569,
	498, 1569,
	500, 1569,
	501, 1569,
	502, 1569,
	503, 1569,
	504, 1569,
	505, 1569,
	506, 1569,
	507, 1569,
	508, 1569,
	510, 1569,
	511, 1569,
	512, 1569,
	513, 1569,
	514, 1569,
	516, 1569,
	518, 1569,
	519, 1569,
	520, 1569,
	521, 1569,
	522, 1569,
	523, 1569,
	525, 1569,
	526, 1569,
	527, 1569,
	528, 1569,
	530, 1569,
	531, 1569,
	534, 1569,
	535, 1569,
	536, 1569,
	537, 1569,
	538, 1569,
	539, 1569,
	540, 1569,
	542, 1569,
	545, 1569,
	546, 1569,
	547, 1569,
	548, 1569,
	549, 1569,
	550, 1569,
	552, 1569,
	553, 1569,
	554, 1569,
	555, 1569,
	557, 1569,
	562, 1569,
	563, 1569,
	564, 1569,
	565, 1569,
	566, 1569,
	567, 1569,
	-2, 0,
	-1, 154,
	1, 1420,
	130, 1420,
	248, 1420,
	329, 1420,
	387, 1420,
	396, 1420,
	571, 1420,
	600, 1420,
	-2, 0,
	-1, 156,
	1, 1420,
	600, 1420,
	-2, 0,
	-1, 157,
	1, 1420,
	600, 1420,
	-2, 0,
	-1, 158,
	1, 1420,
	515, 1420,
	600, 1420,
	-2, 0,
	-1, 187,
	150, 1537,
	169, 1537,
	182, 1537,
	240, 1537,
	273, 1537,
	340, 1537,
	350, 1537,
	532, 1537,
	-2, 1512,
	-1, 235,
	4, 1576,
	5, 1576,
	6, 1576,
	7, 1576,
	8, 1576,
	9, 1576,
	10, 1576,
	21, 1576,
	22, 1576,
	23, 1576,
	24, 1576,
	25, 1576,
	26, 1576,
	27, 1576,
	29, 1576,
	30, 1576,
	36, 1576,
	37, 1576,
	41, 1576,
	42, 1576,
	43, 1576,
	44, 1576,
	45, 1576,
	46, 1576,
	47, 1576,
	48, 1576,
	49, 1576,
	50, 1576,
	51, 1576,
	53, 1576,
	54, 1576,
	55, 1576,
	56, 1576,
	58, 1576,
	59, 1576,
	60, 1576,
	61, 1576,
	62, 1576,
	63, 1576,
	64, 1576,
	65, 1576,
	66, 1576,
	67, 1576,
	68, 1576,
	69, 1576,
	70, 1576,
	71, 1576,
	73, 1576,
	74, 1576,
	75, 1576,
	77, 1576,
	79, 1576,
	80, 1576,
	81, 1576,
	82, 1576,
	83, 1576,
	84, 1576,
	85, 1576,
	88, 1576,
	89, 1576,
	90, 1576,
	91, 1576,
	92, 1576,
	94, 1576,
	96, 1576,
	97, 1576,
	98, 1576,
	99, 1576,
	100, 1576,
	101, 1576,
	103, 1576,
	104, 1576,
	105, 1576,
	106, 1576,
	107, 1576,
	108, 1576,
	109, 1576,
	110, 1576,
	111, 1576,
	112, 1576,
	113, 1576,
	114, 1576,
	115, 1576,
	116, 1576,
	117, 1576,
	118, 1576,
	119, 1576,
	120, 1576,
	121, 1576,
	122, 1576,
	123, 1576,
	124, 1576,
	125, 1576,
	126, 1576,
	127, 1576,
	128, 1576,
	129, 1576,
	131, 1576,
	132, 1576,
	133, 1576,
	135, 1576,
	136, 1576,
	137, 1576,
	140, 1576,
	141, 1576,
	142, 1576,
	144, 1576,
	145, 1576,
	147, 1576,
	148, 1576,
	149, 1576,
	151, 1576,
	152, 1576,
	153, 1576,
	154, 1576,
	155, 1576,
	156, 1576,
	157, 1576,
	158, 1576,
	159, 1576,
	160, 1576,
	161, 1576,
	162, 1576,
	163, 1576,
	164, 1576,
	165, 1576,
	166, 1576,
	167, 1576,
	168, 1576,
	174, 1576,
	175, 1576,
	176, 1576,
	177, 1576,
	181, 1576,
	183, 1576,
	184, 1576,
	187, 1576,
	188, 1576,
	189, 1576,
	190, 1576,
	191, 1576,
	192, 1576,
	193, 1576,
	194, 1576,
	195, 1576,
	196, 1576,
	197, 1576,
	198, 1576,
	199, 1576,
	200, 1576,
	201, 1576,
	203, 1576,
	204, 1576,
	206, 1576,
	207, 1576,
	209, 1576,
	210, 1576,
	211, 1576,
	212, 1576,
	213, 1576,
	214, 1576,
	215, 1576,
	216, 1576,
	217, 1576,
	218, 1576,
	219, 1576,
	220, 1576,
	222, 1576,
	223, 1576,
	224, 1576,
	225, 1576,
	226, 1576,
	230, 1576,
	231, 1576,
	232, 1576,
	233, 1576,
	234, 1576,
	236, 1576,
	237, 1576,
	238, 1576,
	239, 1576,
	241, 1576,
	243, 1576,
	244, 1576,
	245, 1576,
	246, 1576,
	247, 1576,
	248, 1576,
	249, 1576,
	250, 1576,
	251, 1576,
	252, 1576,
	256, 1576,
	257, 1576,
	258, 1576,
	259, 1576,
	260, 1576,
	261, 1576,
	263, 1576,
	264, 1576,
	265, 1576,
	267, 1576,
	268, 1576,
	269, 1576,
	270, 1576,
	271, 1576,
	272, 1576,
	274, 1576,
	278, 1576,
	279, 1576,
	280, 1576,
	281, 1576,
	282, 1576,
	283, 1576,
	284, 1576,
	285, 1576,
	286, 1576,
	288, 1576,
	289, 1576,
	290, 1576,
	291, 1576,
	292, 1576,
	293, 1576,
	294, 1576,
	295, 1576,
	296, 1576,
	297, 1576,
	298, 1576,
	299, 1576,
	300, 1576,
	301, 1576,
	302, 1576,
	303, 1576,
	304, 1576,
	305, 1576,
	306, 1576,
	307, 1576,
	308, 1576,
	309, 1576,
	311, 1576,
	312, 1576,
	313, 1576,
	314, 1576,
	315, 1576,
	316, 1576,
	317, 1576,
	318, 1576,
	319, 1576,
	320, 1576,
	321, 1576,
	322, 1576,
	323, 1576,
	324, 1576,
	325, 1576,
	326, 1576,
	327, 1576,
	328, 1576,
	329, 1576,
	330, 1576,
	331, 1576,
	332, 1576,
	333, 1576,
	334, 1576,
	335, 1576,
	336, 1576,
	337, 1576,
	338, 1576,
	339, 1576,
	342, 1576,
	346, 1576,
	347, 1576,
	348, 1576,
	351, 1576,
	352, 1576,
	353, 1576,
	354, 1576,
	355, 1576,
	356, 1576,
	357, 1576,
	358, 1576,
	359, 1576,
	360, 1576,
	361, 1576,
	362, 1576,
	363, 1576,
	364, 1576,
	365, 1576,
	366, 1576,
	367, 1576,
	368, 1576,
	369, 1576,
	371, 1576,
	372, 1576,
	373, 1576,
	374, 1576,
	375, 1576,
	376, 1576,
	377, 1576,
	378, 1576,
	379, 1576,
	380, 1576,
	381, 1576,
	382, 1576,
	383, 1576,
	384, 1576,
	385, 1576,
	387, 1576,
	388, 1576,
	390, 1576,
	391, 1576,
	392, 1576,
	393, 1576,
	394, 1576,
	395, 1576,
	396, 1576,
	397, 1576,
	398, 1576,
	399, 1576,
	400, 1576,
	401, 1576,
	402, 1576,
	404, 1576,
	406, 1576,
	407, 1576,
	408, 1576,
	414, 1576,
	416, 1576,
	417, 1576,
	418, 1576,
	419, 1576,
	420, 1576,
	421, 1576,
	422, 1576,
	423, 1576,
	424, 1576,
	425, 1576,
	427, 1576,
	428, 1576,
	429, 1576,
	430, 1576,
	431, 1576,
	432, 1576,
	433, 1576,
	434, 1576,
	435, 1576,
	436, 1576,
	437, 1576,
	439, 1576,
	440, 1576,
	441, 1576,
	442, 1576,
	443, 1576,
	444, 1576,
	445, 1576,
	446, 1576,
	447, 1576,
	448, 1576,
	449, 1576,
	450, 1576,
	452, 1576,
	453, 1576,
	454, 1576,
	455, 1576,
	456, 1576,
	457, 1576,
	458, 1576,
	459, 1576,
	460, 1576,
	461, 1576,
	462, 1576,
	463, 1576,
	464, 1576,
	465, 1576,
	466, 1576,
	467, 1576,
	468, 1576,
	469, 1576,
	470, 1576,
	471, 1576,
	472, 1576,
	473, 1576,
	475, 1576,
	477, 1576,
	478, 1576,
	479, 1576,
	480, 1576,
	481, 1576,
	482, 1576,
	483, 1576,
	484, 1576,
	485, 1576,
	486, 1576,
	487, 1576,
	488, 1576,
	489, 1576,
	490, 1576,
	491, 1576,
	492, 1576,
	494, 1576,
	495, 1576,
	496, 1576,
	497, 1576,
	498, 1576,
	500, 1576,
	501, 1576,
	502, 1576,
	503, 1576,
	504, 1576,
	505, 1576,
	506, 1576,
	507, 1576,
	508, 1576,
	510, 1576,
	511, 1576,
	512, 1576,
	513, 1576,
	514, 1576,
	516, 1576,
	518, 1576,
	519, 1576,
	520, 1576,
	521, 1576,
	522, 1576,
	523, 1576,
	524, 1576,
	525, 1576,
	526, 1576,
	527, 1576,
	528, 1576,
	530, 1576,
	531, 1576,
	533, 1576,
	534, 1576,
	535, 1576,
	536, 1576,
	537, 1576,
	538, 1576,
	539, 1576,
	540, 1576,
	541, 1576,
	542, 1576,
	545, 1576,
	546, 1576,
	547, 1576,
	548, 1576,
	549, 1576,
	550, 1576,
	552, 1576,
	553, 1576,
	554, 1576,
	555, 1576,
	557, 1576,
	562, 1576,
	563, 1576,
	564, 1576,
	565, 1576,
	566, 1576,
	567, 1576,
	568, 1576,
	581, 1576,
	588, 1576,
	589, 1576,
	590, 1576,
	597, 1576,
	601, 1576,
	-2, 0,
	-1, 740,
	4, 1301,
	21, 1301,
	22, 1301,
	23, 1301,
	24, 1301,
	25, 1301,
	26, 1301,
	27, 1301,
	29, 1301,
	30, 1301,
	36, 1301,
	41, 1301,
	42, 1301,
	44, 1301,
	45, 1301,
	46, 1301,
	47, 1301,
	48, 1301,
	49, 1301,
	50, 1301,
	51, 1301,
	53, 1301,
	54, 1301,
	55, 1301,
	56, 1301,
	58, 1301,
	59, 1301,
	60, 1301,
	61, 1301,
	62, 1301,
	63, 1301,
	64, 1301,
	68, 1301,
	69, 1301,
	70, 1301,
	71, 1301,
	73, 1301,
	74, 1301,
	75, 1301,
	79, 1301,
	80, 1301,
	81, 1301,
	82, 1301,
	83, 1301,
	84, 1301,
	85, 1301,
	88, 1301,
	89, 1301,
	90, 1301,
	91, 1301,
	92, 1301,
	94, 1301,
	96, 1301,
	97, 1301,
	98, 1301,
	99, 1301,
	100, 1301,
	101, 1301,
	103, 1301,
	104, 1301,
	105, 1301,
	107, 1301,
	108, 1301,
	109, 1301,
	117, 1301,
	118, 1301,
	119, 1301,
	120, 1301,
	121, 1301,
	123, 1301,
	124, 1301,
	125, 1301,
	127, 1301,
	128, 1301,
	129, 1301,
	131, 1301,
	132, 1301,
	133, 1301,
	135, 1301,
	136, 1301,
	137, 1301,
	140, 1301,
	141, 1301,
	142, 1301,
	144, 1301,
	145, 1301,
	147, 1301,
	148, 1301,
	149, 1301,
	151, 1301,
	152, 1301,
	153, 1301,
	154, 1301,
	155, 1301,
	156, 1301,
	157, 1301,
	158, 1301,
	159, 1301,
	160, 1301,
	161, 1301,
	162, 1301,
	163, 1301,
	164, 1301,
	165, 1301,
	166, 1301,
	168, 1301,
	174, 1301,
	175, 1301,
	176, 1301,
	177, 1301,
	181, 1301,
	183, 1301,
	184, 1301,
	188, 1301,
	189, 1301,
	190, 1301,
	191, 1301,
	192, 1301,
	193, 1301,
	194, 1301,
	195, 1301,
	196, 1301,
	197, 1301,
	198, 1301,
	199, 1301,
	200, 1301,
	201, 1301,
	203, 1301,
	204, 1301,
	206, 1301,
	207, 1301,
	209, 1301,
	210, 1301,
	211, 1301,
	212, 1301,
	213, 1301,
	214, 1301,
	215, 1301,
	216, 1301,
	217, 1301,
	219, 1301,
	220, 1301,
	222, 1301,
	223, 1301,
	224, 1301,
	225, 1301,
	226, 1301,
	230, 1301,
	231, 1301,
	232, 1301,
	233, 1301,
	234, 1301,
	237, 1301,
	238, 1301,
	239, 1301,
	241, 1301,
	243, 1301,
	244, 1301,
	246, 1301,
	248, 1301,
	249, 1301,
	250, 1301,
	252, 1301,
	256, 1301,
	257, 1301,
	258, 1301,
	259, 1301,
	260, 1301,
	261, 1301,
	263, 1301,
	264, 1301,
	265, 1301,
	267, 1301,
	268, 1301,
	270, 1301,
	271, 1301,
	274, 1301,
	278, 1301,
	279, 1301,
	280, 1301,
	283, 1301,
	284, 1301,
	285, 1301,
	286, 1301,
	288, 1301,
	289, 1301,
	290, 1301,
	291, 1301,
	292, 1301,
	293, 1301,
	294, 1301,
	295, 1301,
	296, 1301,
	297, 1301,
	298, 1301,
	299, 1301,
	300, 1301,
	301, 1301,
	302, 1301,
	303, 1301,
	304, 1301,
	305, 1301,
	306, 1301,
	307, 1301,
	308, 1301,
	309, 1301,
	311, 1301,
	313, 1301,
	314, 1301,
	315, 1301,
	316, 1301,
	317, 1301,
	318, 1301,
	319, 1301,
	320, 1301,
	321, 1301,
	322, 1301,
	323, 1301,
	324, 1301,
	325, 1301,
	327, 1301,
	328, 1301,
	330, 1301,
	332, 1301,
	333, 1301,
	335, 1301,
	336, 1301,
	337, 1301,
	338, 1301,
	339, 1301,
	342, 1301,
	346, 1301,
	347, 1301,
	348, 1301,
	351, 1301,
	352, 1301,
	353, 1301,
	355, 1301,
	357, 1301,
	358, 1301,
	359, 1301,
	360, 1301,
	361, 1301,
	362, 1301,
	363, 1301,
	364, 1301,
	365, 1301,
	366, 1301,
	367, 1301,
	368, 1301,
	369, 1301,
	371, 1301,
	372, 1301,
	373, 1301,
	374, 1301,
	375, 1301,
	376, 1301,
	377, 1301,
	378, 1301,
	379, 1301,
	380, 1301,
	381, 1301,
	382, 1301,
	383, 1301,
	384, 1301,
	385, 1301,
	387, 1301,
	388, 1301,
	390, 1301,
	391, 1301,
	392, 1301,
	393, 1301,
	394, 1301,
	395, 1301,
	396, 1301,
	397, 1301,
	398, 1301,
	399, 1301,
	400, 1301,
	401, 1301,
	402, 1301,
	404, 1301,
	406, 1301,
	407, 1301,
	408, 1301,
	414, 1301,
	416, 1301,
	417, 1301,
	418, 1301,
	419, 1301,
	420, 1301,
	421, 1301,
	422, 1301,
	423, 1301,
	424, 1301,
	425, 1301,
	427, 1301,
	428, 1301,
	429, 1301,
	431, 1301,
	432, 1301,
	433, 1301,
	434, 1301,
	435, 1301,
	436, 1301,
	437, 1301,
	439, 1301,
	440, 1301,
	441, 1301,
	442, 1301,
	443, 1301,
	444, 1301,
	445, 1301,
	446, 1301,
	447, 1301,
	448, 1301,
	449, 1301,
	450, 1301,
	452, 1301,
	453, 1301,
	454, 1301,
	455, 1301,
	456, 1301,
	457, 1301,
	459, 1301,
	460, 1301,
	461, 1301,
	462, 1301,
	463, 1301,
	464, 1301,
	466, 1301,
	467, 1301,
	468, 1301,
	469, 1301,
	470, 1301,
	471, 1301,
	472, 1301,
	473, 1301,
	475, 1301,
	477, 1301,
	478, 1301,
	479, 1301,
	480, 1301,
	481, 1301,
	482, 1301,
	483, 1301,
	484, 1301,
	485, 1301,
	486, 1301,
	487, 1301,
	488, 1301,
	489, 1301,
	490, 1301,
	491, 1301,
	492, 1301,
	494, 1301,
	495, 1301,
	497, 1301,
	498, 1301,
	500, 1301,
	501, 1301,
	502, 1301,
	503, 1301,
	504, 1301,
	505, 1301,
	506, 1301,
	507, 1301,
	508, 1301,
	510, 1301,
	511, 1301,
	512, 1301,
	513, 1301,
	514, 1301,
	516, 1301,
	518, 1301,
	519, 1301,
	520, 1301,
	521, 1301,
	522, 1301,
	523, 1301,
	525, 1301,
	526, 1301,
	527, 1301,
	528, 1301,
	530, 1301,
	531, 1301,
	534, 1301,
	535, 1301,
	536, 1301,
	537, 1301,
	538, 1301,
	539, 1301,
	540, 1301,
	542, 1301,
	545, 1301,
	546, 1301,
	547, 1301,
	548, 1301,
	549, 1301,
	550, 1301,
	552, 1301,
	553, 1301,
	554, 1301,
	555, 1301,
	557, 1301,
	562, 1301,
	563, 1301,
	564, 1301,
	565, 1301,
	566, 1301,
	567, 1301,
	-2, 0,
	-1, 759,
	186, 2364,
	515, 2364,
	580, 2364,
	599, 2364,
	-2, 0,
	-1, 760,
	186, 2471,
	515, 2471,
	580, 2471,
	599, 2471,
	-2, 0,
	-1, 761,
	186, 2351,
	515, 2351,
	580, 2351,
	599, 2351,
	-2, 0,
	-1, 763,
	186, 2608,
	515, 2608,
	580, 2608,
	599, 2608,
	-2, 0,
	-1, 765,
	186, 2649,
	515, 2649,
	580, 2649,
	599, 2649,
	-2, 0,
	-1, 774,
	186, 2498,
	515, 2498,
	580, 2498,
	599, 2498,
	-2, 696,
	-1, 809,
	599, 2300,
	602, 2300,
	-2, 988,
	-1, 810,
	599, 2302,
	602, 2302,
	-2, 989,
	-1, 811,
	599, 2301,
	602, 2301,
	-2, 990,
	-1, 812,
	602, 2226,
	-2, 991,
	-1, 835,
	182, 258,
	-2, 0,
	-1, 859,
	43, 2273,
	-2, 0,
	-1, 860,
	552, 1279,
	-2, 1060,
	-1, 876,
	4, 1706,
	21, 1706,
	22, 1706,
	23, 1706,
	24, 1706,
	25, 1706,
	26, 1706,
	27, 1706,
	29, 1706,
	30, 1706,
	36, 1706,
	41, 1706,
	42, 1706,
	44, 1706,
	45, 1706,
	46, 1706,
	47, 1706,
	48, 1706,
	49, 1706,
	50, 1706,
	51, 1706,
	53, 1706,
	54, 1706,
	55, 1706,
	56, 1706,
	58, 1706,
	59, 1706,
	60, 1706,
	61, 1706,
	62, 1706,
	63, 1706,
	64, 1706,
	68, 1706,
	69, 1706,
	70, 1706,
	71, 1706,
	73, 1706,
	74, 1706,
	75, 1706,
	79, 1706,
	80, 1706,
	81, 1706,
	82, 1706,
	83, 1706,
	84, 1706,
	85, 1706,
	88, 1706,
	89, 1706,
	90, 1706,
	91, 1706,
	92, 1706,
	94, 1706,
	96, 1706,
	97, 1706,
	98, 1706,
	99, 1706,
	100, 1706,
	101, 1706,
	103, 1706,
	104, 1706,
	105, 1706,
	107, 1706,
	108, 1706,
	109, 1706,
	117, 1706,
	118, 1706,
	119, 1706,
	120, 1706,
	121, 1706,
	123, 1706,
	124, 1706,
	125, 1706,
	127, 1706,
	128, 1706,
	129, 1706,
	131, 1706,
	132, 1706,
	133, 1706,
	135, 1706,
	136, 1706,
	137, 1706,
	140, 1706,
	141, 1706,
	142, 1706,
	144, 1706,
	145, 1706,
	147, 1706,
	148, 1706,
	149, 1706,
	151, 1706,
	152, 1706,
	153, 1706,
	154, 1706,
	155, 1706,
	156, 1706,
	157, 1706,
	158, 1706,
	159, 1706,
	160, 1706,
	161, 1706,
	162, 1706,
	163, 1706,
	164, 1706,
	165, 1706,
	166, 1706,
	168, 1706,
	174, 1706,
	175, 1706,
	176, 1706,
	177, 1706,
	181, 1706,
	183, 1706,
	184, 1706,
	188, 1706,
	189, 1706,
	190, 1706,
	191, 1706,
	192, 1706,
	193, 1706,
	194, 1706,
	195, 1706,
	196, 1706,
	197, 1706,
	198, 1706,
	199, 1706,
	200, 1706,
	201, 1706,
	203, 1706,
	204, 1706,
	206, 1706,
	207, 1706,
	209, 1706,
	210, 1706,
	211, 1706,
	212, 1706,
	213, 1706,
	214, 1706,
	215, 1706,
	216, 1706,
	217, 1706,
	219, 1706,
	220, 1706,
	222, 1706,
	223, 1706,
	224, 1706,
	225, 1706,
	226, 1706,
	230, 1706,
	231, 1706,
	232, 1706,
	233, 1706,
	234, 1706,
	237, 1706,
	238, 1706,
	239, 1706,
	241, 1706,
	243, 1706,
	244, 1706,
	246, 1706,
	248, 1706,
	249, 1706,
	250, 1706,
	252, 1706,
	256, 1706,
	257, 1706,
	258, 1706,
	259, 1706,
	260, 1706,
	261, 1706,
	263, 1706,
	264, 1706,
	265, 1706,
	267, 1706,
	268, 1706,
	270, 1706,
	271, 1706,
	274, 1706,
	278, 1706,
	279, 1706,
	280, 1706,
	283, 1706,
	284, 1706,
	285, 1706,
	286, 1706,
	288, 1706,
	289, 1706,
	290, 1706,
	291, 1706,
	292, 1706,
	293, 1706,
	294, 1706,
	295, 1706,
	296, 1706,
	297, 1706,
	298, 1706,
	299, 1706,
	300, 1706,
	301, 1706,
	302, 1706,
	303, 1706,
	304, 1706,
	305, 1706,
	306, 1706,
	307, 1706,
	308, 1706,
	309, 1706,
	311, 1706,
	313, 1706,
	314, 1706,
	315, 1706,
	316, 1706,
	317, 1706,
	318, 1706,
	319, 1706,
	320, 1706,
	321, 1706,
	322, 1706,
	323, 1706,
	324, 1706,
	325, 1706,
	327, 1706,
	328, 1706,
	330, 1706,
	332, 1706,
	333, 1706,
	335, 1706,
	336, 1706,
	337, 1706,
	338, 1706,
	339, 1706,
	342, 1706,
	346, 1706,
	347, 1706,
	348, 1706,
	351, 1706,
	352, 1706,
	353, 1706,
	355, 1706,
	357, 1706,
	358, 1706,
	359, 1706,
	360, 1706,
	361, 1706,
	362, 1706,
	363, 1706,
	364, 1706,
	365, 1706,
	366, 1706,
	367, 1706,
	368, 1706,
	369, 1706,
	371, 1706,
	372, 1706,
	373, 1706,
	374, 1706,
	375, 1706,
	376, 1706,
	377, 1706,
	378, 1706,
	379, 1706,
	380, 1706,
	381, 1706,
	382, 1706,
	383, 1706,
	384, 1706,
	385, 1706,
	387, 1706,
	388, 1706,
	390, 1706,
	391, 1706,
	392, 1706,
	393, 1706,
	394, 1706,
	395, 1706,
	396, 1706,
	397, 1706,
	398, 1706,
	399, 1706,
	400, 1706,
	401, 1706,
	402, 1706,
	404, 1706,
	406, 1706,
	407, 1706,
	408, 1706,
	414, 1706,
	416, 1706,
	417, 1706,
	418, 1706,
	419, 1706,
	420, 1706,
	421, 1706,
	422, 1706,
	423, 1706,
	424, 1706,
	425, 1706,
	427, 1706,
	428, 1706,
	429, 1706,
	431, 1706,
	432, 1706,
	433, 1706,
	434, 1706,
	435, 1706,
	436, 1706,
	437, 1706,
	439, 1706,
	440, 1706,
	441, 1706,
	442, 1706,
	443, 1706,
	444, 1706,
	445, 1706,
	446, 1706,
	447, 1706,
	448, 1706,
	449, 1706,
	450, 1706,
	452, 1706,
	453, 1706,
	454, 1706,
	455, 1706,
	456, 1706,
	457, 1706,
	459, 1706,
	460, 1706,
	461, 1706,
	462, 1706,
	463, 1706,
	464, 1706,
	466, 1706,
	467, 1706,
	468, 1706,
	469, 1706,
	470, 1706,
	471, 1706,
	472, 1706,
	473, 1706,
	475, 1706,
	477, 1706,
	478, 1706,
	479, 1706,
	480, 1706,
	481, 1706,
	482, 1706,
	483, 1706,
	484, 1706,
	485, 1706,
	486, 1706,
	487, 1706,
	488, 1706,
	489, 1706,
	490, 1706,
	491, 1706,
	492, 1706,
	494, 1706,
	495, 1706,
	497, 1706,
	498, 1706,
	500, 1706,
	501, 1706,
	502, 1706,
	503, 1706,
	504, 1706,
	505, 1706,
	506, 1706,
	507, 1706,
	508, 1706,
	510, 1706,
	511, 1706,
	512, 1706,
	513, 1706,
	514, 1706,
	516, 1706,
	518, 1706,
	519, 1706,
	520, 1706,
	521, 1706,
	522, 1706,
	523, 1706,
	525, 1706,
	526, 1706,
	527, 1706,
	528, 1706,
	530, 1706,
	531, 1706,
	534, 1706,
	535, 1706,
	536, 1706,
	537, 1706,
	538, 1706,
	539, 1706,
	540, 1706,
	542, 1706,
	545, 1706,
	546, 1706,
	547, 1706,
	548, 1706,
	549, 1706,
	550, 1706,
	552, 1706,
	553, 1706,
	554, 1706,
	555, 1706,
	557, 1706,
	562, 1706,
	563, 1706,
	564, 1706,
	565, 1706,
	566, 1706,
	567, 1706,
	-2, 0,
	-1, 886,
	260, 406,
	-2, 0,
	-1, 958,
	392, 871,
	457, 871,
	498, 871,
	520, 871,
	-2, 0,
	-1, 959,
	392, 870,
	457, 870,
	498, 870,
	520, 870,
	-2, 806,
	-1, 963,
	1, 922,
	596, 922,
	598, 922,
	600, 922,
	-2, 0,
	-1, 965,
	1, 845,
	596, 845,
	598, 845,
	600, 845,
	-2, 0,
	-1, 966,
	1, 849,
	596, 849,
	598, 849,
	600, 849,
	-2, 0,
	-1, 967,
	1, 987,
	182, 987,
	596, 987,
	598, 987,
	600, 987,
	-2, 0,
	-1, 975,
	1, 876,
	596, 876,
	598, 876,
	600, 876,
	-2, 0,
	-1, 982,
	1, 922,
	596, 922,
	598, 922,
	600, 922,
	-2, 0,
	-1, 983,
	1, 924,
	596, 924,
	598, 924,
	600, 924,
	-2, 0,
	-1, 984,
	1, 927,
	596, 927,
	598, 927,
	600, 927,
	-2, 0,
	-1, 990,
	1, 951,
	596, 951,
	598, 951,
	600, 951,
	-2, 0,
	-1, 991,
	1, 953,
	596, 953,
	598, 953,
	600, 953,
	-2, 0,
	-1, 996,
	1, 981,
	596, 981,
	598, 981,
	600, 981,
	-2, 0,
	-1, 1046,
	169, 1580,
	182, 1580,
	273, 1580,
	340, 1580,
	-2, 1516,
	-1, 1061,
	169, 1579,
	182, 1579,
	273, 1579,
	340, 1579,
	-2, 1513,
	-1, 1088,
	599, 2299,
	-2, 704,
	-1, 1117,
	5, 2291,
	597, 2289,
	-2, 2280,
	-1, 1125,
	5, 2312,
	597, 2309,
	-2, 2300,
	-1, 1126,
	5, 2313,
	597, 2310,
	-2, 2301,
	-1, 1134,
	599, 2297,
	-2, 2279,
	-1, 1135,
	597, 2732,
	-2, 2298,
	-1, 1158,
	597, 2731,
	-2, 2314,
	-1, 1159,
	5, 1781,
	-2, 2702,
	-1, 1160,
	5, 1782,
	-2, 2703,
	-1, 1161,
	5, 1783,
	-2, 2717,
	-1, 1162,
	5, 1784,
	-2, 2681,
	-1, 1163,
	5, 1785,
	-2, 2715,
	-1, 1164,
	5, 1793,
	-2, 2694,
	-1, 1165,
	5, 1780,
	-2, 2690,
	-1, 1166,
	5, 1780,
	-2, 2689,
	-1, 1167,
	5, 1780,
	-2, 2708,
	-1, 1168,
	5, 1791,
	-2, 2683,
	-1, 1169,
	5, 1796,
	-2, 2682,
	-1, 1170,
	5, 1798,
	-2, 2727,
	-1, 1173,
	5, 1820,
	-2, 2720,
	-1, 1174,
	5, 1812,
	-2, 2721,
	-1, 1175,
	5, 1820,
	-2, 2722,
	-1, 1176,
	5, 1816,
	-2, 2723,
	-1, 1177,
	5, 1766,
	-2, 2695,
	-1, 1178,
	5, 1767,
	-2, 2696,
	-1, 1179,
	5, 1768,
	-2, 2684,
	-1, 1207,
	5, 1803,
	-2, 2728,
	-1, 1208,
	5, 1804,
	-2, 2718,
	-1, 1209,
	5, 1805,
	553, 1805,
	-2, 2685,
	-1, 1210,
	5, 1806,
	553, 1806,
	-2, 2686,
	-1, 1247,
	597, 2309,
	-2, 2300,
	-1, 1248,
	597, 2310,
	-2, 2301,
	-1, 1349,
	186, 2649,
	515, 2649,
	580, 2649,
	599, 2649,
	-2, 0,
	-1, 1352,
	1, 680,
	600, 680,
	-2, 1428,
	-1, 1481,
	359, 2274,
	416, 2274,
	459, 2274,
	590, 2274,
	-2, 2264,
	-1, 1492,
	601, 2274,
	-2, 2276,
	-1, 1500,
	1, 1276,
	421, 1240,
	459, 1240,
	574, 1240,
	596, 1276,
	598, 1276,
	600, 1276,
	-2, 1565,
	-1, 1506,
	202, 1373,
	221, 1373,
	429, 1373,
	-2, 0,
	-1, 1551,
	400, 1059,
	552, 1059,
	-2, 401,
	-1, 1568,
	43, 2272,
	-2, 1025,
	-1, 1575,
	1, 1276,
	596, 1276,
	598, 1276,
	600, 1276,
	-2, 1565,
	-1, 1583,
	4, 1301,
	21, 1301,
	22, 1301,
	23, 1301,
	24, 1301,
	25, 1301,
	26, 1301,
	27, 1301,
	29, 1301,
	30, 1301,
	36, 1301,
	41, 1301,
	42, 1301,
	44, 1301,
	45, 1301,
	46, 1301,
	47, 1301,
	48, 1301,
	49, 1301,
	50, 1301,
	51, 1301,
	53, 1301,
	54, 1301,
	55, 1301,
	56, 1301,
	58, 1301,
	59, 1301,
	60, 1301,
	61, 1301,
	62, 1301,
	63, 1301,
	64, 1301,
	68, 1301,
	69, 1301,
	70, 1301,
	71, 1301,
	73, 1301,
	74, 1301,
	75, 1301,
	79, 1301,
	80, 1301,
	81, 1301,
	82, 1301,
	83, 1301,
	84, 1301,
	85, 1301,
	88, 1301,
	89, 1301,
	90, 1301,
	91, 1301,
	92, 1301,
	94, 1301,
	96, 1301,
	97, 1301,
	98, 1301,
	99, 1301,
	100, 1301,
	101, 1301,
	103, 1301,
	104, 1301,
	105, 1301,
	107, 1301,
	108, 1301,
	109, 1301,
	117, 1301,
	118, 1301,
	119, 1301,
	120, 1301,
	121, 1301,
	123, 1301,
	124, 1301,
	125, 1301,
	127, 1301,
	128, 1301,
	129, 1301,
	131, 1301,
	132, 1301,
	133, 1301,
	135, 1301,
	136, 1301,
	137, 1301,
	140, 1301,
	141, 1301,
	142, 1301,
	144, 1301,
	145, 1301,
	147, 1301,
	148, 1301,
	149, 1301,
	151, 1301,
	152, 1301,
	153, 1301,
	154, 1301,
	155, 1301,
	156, 1301,
	157, 1301,
	158, 1301,
	159, 1301,
	160, 1301,
	161, 1301,
	162, 1301,
	163, 1301,
	164, 1301,
	165, 1301,
	166, 1301,
	174, 1301,
	175, 1301,
	176, 1301,
	177, 1301,
	181, 1301,
	183, 1301,
	184, 1301,
	188, 1301,
	189, 1301,
	190, 1301,
	191, 1301,
	192, 1301,
	193, 1301,
	194, 1301,
	195, 1301,
	196, 1301,
	197, 1301,
	198, 1301,
	199, 1301,
	200, 1301,
	201, 1301,
	203, 1301,
	204, 1301,
	206, 1301,
	207, 1301,
	209, 1301,
	210, 1301,
	211, 1301,
	212, 1301,
	213, 1301,
	214, 1301,
	215, 1301,
	216, 1301,
	217, 1301,
	219, 1301,
	220, 1301,
	222, 1301,
	223, 1301,
	224, 1301,
	225, 1301,
	226, 1301,
	231, 1301,
	232, 1301,
	233, 1301,
	234, 1301,
	237, 1301,
	238, 1301,
	239, 1301,
	241, 1301,
	243, 1301,
	244, 1301,
	246, 1301,
	248, 1301,
	249, 1301,
	250, 1301,
	252, 1301,
	256, 1301,
	257, 1301,
	258, 1301,
	259, 1301,
	260, 1301,
	261, 1301,
	263, 1301,
	264, 1301,
	265, 1301,
	267, 1301,
	268, 1301,
	270, 1301,
	271, 1301,
	274, 1301,
	278, 1301,
	279, 1301,
	280, 1301,
	283, 1301,
	284, 1301,
	285, 1301,
	286, 1301,
	288, 1301,
	289, 1301,
	290, 1301,
	291, 1301,
	292, 1301,
	293, 1301,
	294, 1301,
	295, 1301,
	296, 1301,
	297, 1301,
	298, 1301,
	299, 1301,
	300, 1301,
	301, 1301,
	302, 1301,
	303, 1301,
	304, 1301,
	305, 1301,
	306, 1301,
	307, 1301,
	308, 1301,
	309, 1301,
	311, 1301,
	313, 1301,
	314, 1301,
	315, 1301,
	316, 1301,
	317, 1301,
	318, 1301,
	319, 1301,
	320, 1301,
	321, 1301,
	322, 1301,
	323, 1301,
	324, 1301,
	325, 1301,
	327, 1301,
	328, 1301,
	332, 1301,
	333, 1301,
	335, 1301,
	336, 1301,
	337, 1301,
	338, 1301,
	339, 1301,
	342, 1301,
	344, 1301,
	346, 1301,
	347, 1301,
	348, 1301,
	351, 1301,
	352, 1301,
	353, 1301,
	355, 1301,
	357, 1301,
	358, 1301,
	359, 1301,
	360, 1301,
	361, 1301,
	362, 1301,
	363, 1301,
	364, 1301,
	365, 1301,
	366, 1301,
	367, 1301,
	368, 1301,
	369, 1301,
	371, 1301,
	372, 1301,
	373, 1301,
	374, 1301,
	375, 1301,
	376, 1301,
	377, 1301,
	378, 1301,
	379, 1301,
	380, 1301,
	381, 1301,
	382, 1301,
	383, 1301,
	384, 1301,
	385, 1301,
	387, 1301,
	388, 1301,
	390, 1301,
	391, 1301,
	392, 1301,
	393, 1301,
	394, 1301,
	395, 1301,
	396, 1301,
	397, 1301,
	398, 1301,
	399, 1301,
	400, 1301,
	401, 1301,
	402, 1301,
	404, 1301,
	406, 1301,
	407, 1301,
	408, 1301,
	414, 1301,
	416, 1301,
	417, 1301,
	418, 1301,
	419, 1301,
	420, 1301,
	421, 1301,
	422, 1301,
	423, 1301,
	424, 1301,
	425, 1301,
	427, 1301,
	428, 1301,
	429, 1301,
	431, 1301,
	432, 1301,
	433, 1301,
	434, 1301,
	435, 1301,
	436, 1301,
	437, 1301,
	439, 1301,
	440, 1301,
	441, 1301,
	442, 1301,
	443, 1301,
	444, 1301,
	445, 1301,
	446, 1301,
	447, 1301,
	448, 1301,
	449, 1301,
	450, 1301,
	452, 1301,
	453, 1301,
	454, 1301,
	455, 1301,
	456, 1301,
	457, 1301,
	459, 1301,
	460, 1301,
	461, 1301,
	462, 1301,
	463, 1301,
	464, 1301,
	466, 1301,
	467, 1301,
	468, 1301,
	469, 1301,
	470, 1301,
	471, 1301,
	472, 1301,
	473, 1301,
	475, 1301,
	477, 1301,
	478, 1301,
	479, 1301,
	480, 1301,
	481, 1301,
	482, 1301,
	483, 1301,
	484, 1301,
	485, 1301,
	486, 1301,
	487, 1301,
	488, 1301,
	489, 1301,
	490, 1301,
	491, 1301,
	492, 1301,
	494, 1301,
	495, 1301,
	497, 1301,
	498, 1301,
	500, 1301,
	501, 1301,
	502, 1301,
	503, 1301,
	504, 1301,
	505, 1301,
	506, 1301,
	507, 1301,
	508, 1301,
	510, 1301,
	511, 1301,
	512, 1301,
	513, 1301,
	514, 1301,
	516, 1301,
	518, 1301,
	519, 1301,
	520, 1301,
	521, 1301,
	522, 1301,
	523, 1301,
	525, 1301,
	526, 1301,
	527, 1301,
	528, 1301,
	530, 1301,
	531, 1301,
	534, 1301,
	535, 1301,
	536, 1301,
	537, 1301,
	538, 1301,
	539, 1301,
	540, 1301,
	542, 1301,
	545, 1301,
	546, 1301,
	547, 1301,
	548, 1301,
	549, 1301,
	550, 1301,
	552, 1301,
	553, 1301,
	554, 1301,
	555, 1301,
	557, 1301,
	562, 1301,
	563, 1301,
	564, 1301,
	565, 1301,
	566, 1301,
	567, 1301,
	-2, 0,
	-1, 1606,
	1, 546,
	596, 546,
	598, 546,
	600, 546,
	-2, 1536,
	-1, 1609,
	4, 2726,
	11, 2726,
	12, 2726,
	14, 2726,
	15, 2726,
	16, 2726,
	17, 2726,
	18, 2726,
	19, 2726,
	21, 2726,
	22, 2726,
	23, 2726,
	24, 2726,
	25, 2726,
	26, 2726,
	27, 2726,
	29, 2726,
	30, 2726,
	33, 2726,
	34, 2726,
	36, 2726,
	38, 2726,
	41, 2726,
	42, 2726,
	44, 2726,
	45, 2726,
	46, 2726,
	47, 2726,
	48, 2726,
	49, 2726,
	50, 2726,
	51, 2726,
	53, 2726,
	54, 2726,
	55, 2726,
	56, 2726,
	58, 2726,
	59, 2726,
	60, 2726,
	61, 2726,
	62, 2726,
	63, 2726,
	64, 2726,
	67, 2726,
	68, 2726,
	69, 2726,
	70, 2726,
	71, 2726,
	73, 2726,
	74, 2726,
	75, 2726,
	76, 2726,
	79, 2726,
	80, 2726,
	81, 2726,
	82, 2726,
	83, 2726,
	84, 2726,
	85, 2726,
	86, 2726,
	88, 2726,
	89, 2726,
	90, 2726,
	91, 2726,
	92, 2726,
	94, 2726,
	95, 2726,
	96, 2726,
	97, 2726,
	98, 2726,
	99, 2726,
	100, 2726,
	101, 2726,
	103, 2726,
	104, 2726,
	105, 2726,
	106, 2726,
	107, 2726,
	108, 2726,
	109, 2726,
	117, 2726,
	118, 2726,
	119, 2726,
	120, 2726,
	121, 2726,
	123, 2726,
	124, 2726,
	125, 2726,
	127, 2726,
	128, 2726,
	129, 2726,
	131, 2726,
	132, 2726,
	133, 2726,
	135, 2726,
	136, 2726,
	137, 2726,
	140, 2726,
	141, 2726,
	142, 2726,
	144, 2726,
	145, 2726,
	147, 2726,
	148, 2726,
	149, 2726,
	151, 2726,
	152, 2726,
	153, 2726,
	154, 2726,
	155, 2726,
	156, 2726,
	157, 2726,
	158, 2726,
	159, 2726,
	160, 2726,
	161, 2726,
	162, 2726,
	163, 2726,
	164, 2726,
	165, 2726,
	166, 2726,
	170, 2726,
	171, 2726,
	172, 2726,
	173, 2726,
	174, 2726,
	175, 2726,
	176, 2726,
	177, 2726,
	180, 2726,
	181, 2726,
	183, 2726,
	184, 2726,
	187, 2726,
	188, 2726,
	189, 2726,
	190, 2726,
	191, 2726,
	192, 2726,
	193, 2726,
	194, 2726,
	195, 2726,
	196, 2726,
	197, 2726,
	198, 2726,
	199, 2726,
	200, 2726,
	201, 2726,
	203, 2726,
	204, 2726,
	206, 2726,
	207, 2726,
	209, 2726,
	210, 2726,
	211, 2726,
	212, 2726,
	213, 2726,
	214, 2726,
	215, 2726,
	216, 2726,
	217, 2726,
	218, 2726,
	219, 2726,
	220, 2726,
	221, 2726,
	222, 2726,
	223, 2726,
	224, 2726,
	225, 2726,
	226, 2726,
	228, 2726,
	229, 2726,
	231, 2726,
	232, 2726,
	233, 2726,
	234, 2726,
	236, 2726,
	237, 2726,
	238, 2726,
	239, 2726,
	241, 2726,
	243, 2726,
	244, 2726,
	245, 2726,
	246, 2726,
	247, 2726,
	248, 2726,
	249, 2726,
	250, 2726,
	251, 2726,
	252, 2726,
	254, 2726,
	255, 2726,
	256, 2726,
	257, 2726,
	258, 2726,
	259, 2726,
	260, 2726,
	261, 2726,
	263, 2726,
	264, 2726,
	265, 2726,
	267, 2726,
	268, 2726,
	269, 2726,
	270, 2726,
	271, 2726,
	272, 2726,
	274, 2726,
	278, 2726,
	279, 2726,
	280, 2726,
	283, 2726,
	284, 2726,
	285, 2726,
	286, 2726,
	287, 2726,
	288, 2726,
	289, 2726,
	290, 2726,
	291, 2726,
	292, 2726,
	293, 2726,
	294, 2726,
	295, 2726,
	296, 2726,
	297, 2726,
	298, 2726,
	299, 2726,
	300, 2726,
	301, 2726,
	302, 2726,
	303, 2726,
	304, 2726,
	305, 2726,
	306, 2726,
	307, 2726,
	308, 2726,
	309, 2726,
	311, 2726,
	312, 2726,
	313, 2726,
	314, 2726,
	315, 2726,
	316, 2726,
	317, 2726,
	318, 2726,
	319, 2726,
	320, 2726,
	321, 2726,
	322, 2726,
	323, 2726,
	324, 2726,
	325, 2726,
	327, 2726,
	328, 2726,
	331, 2726,
	332, 2726,
	333, 2726,
	335, 2726,
	336, 2726,
	337, 2726,
	338, 2726,
	339, 2726,
	342, 2726,
	346, 2726,
	347, 2726,
	348, 2726,
	349, 2726,
	351, 2726,
	352, 2726,
	353, 2726,
	355, 2726,
	357, 2726,
	358, 2726,
	359, 2726,
	360, 2726,
	361, 2726,
	362, 2726,
	363, 2726,
	364, 2726,
	365, 2726,
	366, 2726,
	367, 2726,
	368, 2726,
	369, 2726,
	371, 2726,
	372, 2726,
	373, 2726,
	374, 2726,
	375, 2726,
	376, 2726,
	377, 2726,
	378, 2726,
	379, 2726,
	380, 2726,
	381, 2726,
	382, 2726,
	383, 2726,
	384, 2726,
	385, 2726,
	387, 2726,
	388, 2726,
	390, 2726,
	391, 2726,
	392, 2726,
	393, 2726,
	394, 2726,
	395, 2726,
	396, 2726,
	397, 2726,
	398, 2726,
	399, 2726,
	400, 2726,
	401, 2726,
	402, 2726,
	404, 2726,
	406, 2726,
	407, 2726,
	408, 2726,
	414, 2726,
	415, 2726,
	416, 2726,
	417, 2726,
	418, 2726,
	419, 2726,
	420, 2726,
	421, 2726,
	422, 2726,
	423, 2726,
	424, 2726,
	425, 2726,
	427, 2726,
	428, 2726,
	429, 2726,
	430, 2726,
	431, 2726,
	432, 2726,
	433, 2726,
	434, 2726,
	435, 2726,
	436, 2726,
	437, 2726,
	438, 2726,
	439, 2726,
	440, 2726,
	441, 2726,
	442, 2726,
	443, 2726,
	444, 2726,
	445, 2726,
	446, 2726,
	447, 2726,
	448, 2726,
	449, 2726,
	450, 2726,
	452, 2726,
	453, 2726,
	454, 2726,
	455, 2726,
	456, 2726,
	457, 2726,
	459, 2726,
	460, 2726,
	461, 2726,
	462, 2726,
	463, 2726,
	464, 2726,
	465, 2726,
	466, 2726,
	467, 2726,
	468, 2726,
	469, 2726,
	470, 2726,
	471, 2726,
	472, 2726,
	473, 2726,
	475, 2726,
	477, 2726,
	478, 2726,
	479, 2726,
	480, 2726,
	481, 2726,
	482, 2726,
	483, 2726,
	484, 2726,
	485, 2726,
	486, 2726,
	487, 2726,
	488, 2726,
	489, 2726,
	490, 2726,
	491, 2726,
	492, 2726,
	494, 2726,
	495, 2726,
	496, 2726,
	497, 2726,
	498, 2726,
	500, 2726,
	501, 2726,
	502, 2726,
	503, 2726,
	504, 2726,
	505, 2726,
	506, 2726,
	507, 2726,
	508, 2726,
	510, 2726,
	511, 2726,
	512, 2726,
	513, 2726,
	514, 2726,
	516, 2726,
	518, 2726,
	519, 2726,
	520, 2726,
	521, 2726,
	522, 2726,
	523, 2726,
	525, 2726,
	526, 2726,
	527, 2726,
	528, 2726,
	530, 2726,
	531, 2726,
	534, 2726,
	535, 2726,
	536, 2726,
	537, 2726,
	538, 2726,
	539, 2726,
	540, 2726,
	542, 2726,
	545, 2726,
	546, 2726,
	547, 2726,
	548, 2726,
	549, 2726,
	550, 2726,
	552, 2726,
	553, 2726,
	554, 2726,
	555, 2726,
	557, 2726,
	562, 2726,
	563, 2726,
	564, 2726,
	565, 2726,
	566, 2726,
	567, 2726,
	568, 2726,
	570, 2726,
	578, 2726,
	579, 2726,
	580, 2726,
	581, 2726,
	582, 2726,
	583, 2726,
	585, 2726,
	586, 2726,
	587, 2726,
	588, 2726,
	589, 2726,
	590, 2726,
	591, 2726,
	592, 2726,
	593, 2726,
	595, 2726,
	598, 2726,
	599, 2726,
	601, 2726,
	602, 2726,
	-2, 0,
	-1, 1614,
	186, 2608,
	515, 2608,
	580, 2608,
	599, 2608,
	-2, 0,
	-1, 1663,
	392, 871,
	457, 871,
	498, 871,
	520, 871,
	-2, 0,
	-1, 1674,
	1, 1373,
	596, 1373,
	598, 1373,
	600, 1373,
	-2, 0,
	-1, 1691,
	1, 866,
	596, 866,
	598, 866,
	600, 866,
	-2, 0,
	-1, 1692,
	1, 909,
	596, 909,
	598, 909,
	600, 909,
	-2, 0,
	-1, 1693,
	1, 917,
	596, 917,
	598, 917,
	600, 917,
	-2, 0,
	-1, 1696,
	1, 875,
	596, 875,
	598, 875,
	600, 875,
	-2, 0,
	-1, 1698,
	1, 881,
	596, 881,
	598, 881,
	600, 881,
	-2, 0,
	-1, 1701,
	1, 877,
	596, 877,
	598, 877,
	600, 877,
	-2, 0,
	-1, 1706,
	1, 891,
	596, 891,
	598, 891,
	600, 891,
	-2, 0,
	-1, 1737,
	1, 2591,
	596, 2591,
	598, 2591,
	599, 2591,
	600, 2591,
	-2, 0,
	-1, 1741,
	1, 962,
	596, 962,
	598, 962,
	600, 962,
	-2, 0,
	-1, 1756,
	1, 1423,
	600, 1423,
	-2, 1428,
	-1, 1759,
	169, 1579,
	182, 1579,
	273, 1579,
	340, 1579,
	-2, 1517,
	-1, 1859,
	150, 1538,
	169, 1538,
	182, 1538,
	240, 1538,
	273, 1538,
	340, 1538,
	350, 1538,
	532, 1538,
	-2, 1985,
	-1, 1920,
	598, 2160,
	-2, 0,
	-1, 1955,
	150, 1538,
	169, 1538,
	182, 1538,
	240, 1538,
	273, 1538,
	340, 1538,
	350, 1538,
	532, 1538,
	-2, 1667,
	-1, 1992,
	515, 2605,
	599, 2605,
	602, 2605,
	-2, 0,
	-1, 2009,
	597, 1808,
	-2, 1796,
	-1, 2041,
	186, 2605,
	599, 2605,
	602, 2605,
	-2, 0,
	-1, 2083,
	1, 682,
	600, 682,
	-2, 1428,
	-1, 2223,
	221, 259,
	-2, 2308,
	-1, 2224,
	221, 260,
	-2, 308,
	-1, 2330,
	1, 868,
	596, 868,
	598, 868,
	600, 868,
	-2, 0,
	-1, 2331,
	1, 911,
	596, 911,
	598, 911,
	600, 911,
	-2, 0,
	-1, 2332,
	1, 919,
	596, 919,
	598, 919,
	600, 919,
	-2, 0,
	-1, 2333,
	1, 964,
	596, 964,
	598, 964,
	600, 964,
	-2, 0,
	-1, 2373,
	1, 893,
	596, 893,
	598, 893,
	600, 893,
	-2, 0,
	-1, 2391,
	1, 947,
	596, 947,
	598, 947,
	600, 947,
	-2, 0,
	-1, 2436,
	436, 1606,
	437, 1606,
	-2, 1841,
	-1, 2467,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1861,
	-1, 2468,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1862,
	-1, 2469,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1863,
	-1, 2470,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1864,
	-1, 2471,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1865,
	-1, 2472,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1866,
	-1, 2473,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1867,
	-1, 2474,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1868,
	-1, 2486,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1880,
	-1, 2487,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1881,
	-1, 2488,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1882,
	-1, 2492,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1889,
	-1, 2498,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1893,
	-1, 2500,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1901,
	-1, 2501,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1902,
	-1, 2502,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1903,
	-1, 2503,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1904,
	-1, 2677,
	5, 2312,
	186, 2171,
	597, 2309,
	-2, 2300,
	-1, 2678,
	186, 2172,
	-2, 2677,
	-1, 2679,
	186, 2173,
	-2, 2497,
	-1, 2680,
	186, 2174,
	-2, 2382,
	-1, 2681,
	186, 2175,
	-2, 2437,
	-1, 2682,
	186, 2176,
	-2, 2482,
	-1, 2683,
	186, 2177,
	-2, 2603,
	-1, 2684,
	186, 2178,
	-2, 1968,
	-1, 2755,
	1, 1668,
	2, 1668,
	106, 1668,
	150, 1668,
	169, 1668,
	182, 1668,
	187, 1668,
	205, 1668,
	208, 1668,
	236, 1668,
	240, 1668,
	251, 1668,
	269, 1668,
	273, 1668,
	312, 1668,
	340, 1668,
	344, 1668,
	350, 1668,
	426, 1668,
	430, 1668,
	532, 1668,
	543, 1668,
	559, 1668,
	560, 1668,
	561, 1668,
	571, 1668,
	596, 1668,
	598, 1668,
	600, 1668,
	602, 1668,
	-2, 1667,
	-1, 2768,
	597, 2281,
	-2, 2295,
	-1, 2770,
	1, 325,
	559, 325,
	-2, 1565,
	-1, 2799,
	597, 1807,
	-2, 1797,
	-1, 2984,
	1, 1276,
	421, 1240,
	459, 1240,
	574, 1240,
	596, 1276,
	598, 1276,
	600, 1276,
	-2, 1565,
	-1, 3168,
	345, 1609,
	-2, 2716,
	-1, 3169,
	345, 1610,
	-2, 2588,
	-1, 3173,
	436, 2237,
	437, 2237,
	-2, 1966,
	-1, 3174,
	436, 2241,
	437, 2241,
	-2, 1967,
	-1, 3175,
	436, 2238,
	437, 2238,
	-2, 1966,
	-1, 3176,
	436, 2242,
	437, 2242,
	-2, 1967,
	-1, 3189,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1891,
	-1, 3190,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1895,
	-1, 3196,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1897,
	-1, 3419,
	1, 679,
	596, 679,
	598, 679,
	600, 679,
	-2, 1428,
	-1, 3583,
	43, 2272,
	-2, 1026,
	-1, 3588,
	1, 1276,
	596, 1276,
	598, 1276,
	600, 1276,
	-2, 1565,
	-1, 3698,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1899,
	-1, 3705,
	245, 0,
	247, 0,
	331, 0,
	-2, 1918,
	-1, 3773,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1947,
	-1, 3774,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1948,
	-1, 3775,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1949,
	-1, 3779,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1953,
	-1, 3780,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1954,
	-1, 3781,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1955,
	-1, 3828,
	597, 2282,
	-2, 2296,
	-1, 4002,
	599, 2834,
	-2, 1491,
	-1, 4062,
	245, 0,
	247, 0,
	331, 0,
	-2, 1919,
	-1, 4065,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1922,
	-1, 4066,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1924,
	-1, 4164,
	599, 2297,
	-2, 1311,
	-1, 4317,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1923,
	-1, 4318,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1925,
	-1, 4329,
	245, 0,
	-2, 1958,
	-1, 4516,
	245, 0,
	-2, 1959,
	-1, 4712,
	50, 0,
	218, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 2680,
}

const sqlPrivate = 57344

const sqlLast = 131469

var sqlAct = [...]int{
	271, 4705, 4906, 3572, 4438, 4547, 4814, 3058, 3327, 4768,
	4827, 3071, 4583, 4378, 4711, 2861, 4722, 4693, 4843, 3571,
	4555, 4604, 4704, 2133, 4680, 4579, 4661, 4658, 4723, 4640,
	4724, 4445, 4045, 2052, 2220, 2930, 4360, 2905, 4781, 4469,
	4423, 4520, 2295, 3738, 4273, 1071, 4268, 4234, 3690, 4209,
	4383, 4306, 4338, 3440, 2446, 4710, 1321, 3605, 3994, 1240,
	4255, 4248, 3986, 4454, 1251, 1117, 1314, 3922, 3182, 4160,
	4141, 4257, 1325, 700, 1996, 811, 4161, 4278, 2065, 2710,
	4483, 2515, 3500, 3599, 3967, 3567, 3949, 2454, 3443, 2447,
	3951, 3557, 1768, 1630, 2141, 1979, 4334, 1386, 3095, 3646,
	3080, 811, 3648, 2306, 1307, 3014, 3047, 771, 3082, 3028,
	1961, 3350, 3831, 4101, 3550, 3549, 1316, 1062, 3342, 2268,
	4044, 3310, 3371, 3079, 3090, 3073, 1478, 2304, 711, 3331,
	1997, 1671, 3042, 888, 2943, 3044, 2207, 3059, 2209, 1070,
	178, 884, 4, 4815, 2991, 3462, 2152, 2863, 2168, 2748,
	3309, 3333, 1930, 3799, 1906, 4521, 2451, 2593, 2747, 1867,
	1837, 3166, 1570, 2528, 3437, 2750, 3089, 1319, 879, 1485,
	2208, 806, 3018, 1231, 1515, 2960, 2203, 766, 2191, 2184,
	2904, 2063, 3029, 1121, 2125, 2121, 1756, 2728, 2584, 2512,
	1931, 1126, 265, 1293, 1367, 264, 1950, 2707, 3378, 2111,
	2435, 2418, 2782, 2416, 744, 3569, 1607, 1628, 3052, 1573,
	2255, 812, 2886, 4605, 952, 687, 813, 2849, 808, 709,
	3083, 2781, 1354, 1901, 3943, 2587, 1940, 2718, 1213, 1234,
	2565, 2639, 187, 178, 2673, 1851, 1947, 1769, 1248, 188,
	1304, 2417, 752, 2737, 2419, 1706, 1770, 1691, 764, 1230,
	2281, 2217, 1128, 1510, 1605, 1598, 2140, 2254, 4769, 4828,
	2440, 1102, 3025, 2595, 1124, 704, 44, 817, 43, 41,
	820, 1236, 32, 727, 30, 28, 3219, 701, 801, 712,
	860, 1211, 1755, 1775, 1521, 973, 3213, 3813, 108, 3814,
	4919, 4749, 861, 817, 2727, 2054, 820, 2054, 1514, 3329,
	4909, 4353, 4893, 1246, 3624, 2054, 2727, 2054, 4892, 2054,
	2054, 4882, 2727, 1123, 4863, 2229, 4861, 4800, 4382, 903,
	4382, 2229, 4757, 4746, 4744, 4741, 4758, 2727, 2727, 4742,
	4350, 4738, 2229, 4708, 1697, 4739, 1100, 2229, 1066, 4707,
	3280, 3281, 3614, 2229, 4706, 4701, 4700, 4691, 2075, 2075,
	2075, 4382, 4689, 4686, 3024, 4656, 4382, 4457, 4629, 4382,
	4622, 4621, 2790, 4616, 2727, 2727, 4615, 4382, 4609, 4575,
	4382, 4518, 2229, 4225, 4500, 2790, 4497, 4494, 4031, 4447,
	2229, 4382, 4401, 4448, 4400, 1363, 2229, 4389, 2229, 1228,
	4388, 2229, 4122, 4381, 4382, 1214, 1214, 4382, 4345, 4319,
	4297, 1056, 2229, 2790, 2075, 4286, 4204, 1363, 4187, 3624,
	2727, 1047, 2727, 3615, 3624, 1066, 2305, 2072, 1046, 1783,
	1784, 3387, 1816, 1817, 1818, 1827, 1828, 1829, 4064, 2810,
	4010, 4004, 2790, 2229, 3641, 3641, 1783, 1784, 3803, 3965,
	3823, 1820, 1814, 3966, 3824, 3404, 3821, 2229, 3806, 1786,
	3822, 93, 2727, 3722, 3402, 3228, 2720, 2229, 1833, 3280,
	3281, 3229, 1264, 3718, 3640, 1061, 1786, 2727, 3641, 3631,
	3326, 3181, 3321, 3632, 2727, 1839, 2727, 3320, 1067, 3271,
	2786, 2727, 3269, 3272, 1785, 1271, 3270, 3261, 1783, 1784,
	2727, 3262, 3259, 3230, 1805, 3099, 2727, 2727, 235, 2075,
	3069, 1785, 1243, 1802, 2291, 2590, 3068, 4630, 2072, 3286,
	2291, 1814, 1215, 2833, 1523, 2789, 2229, 2727, 1786, 2790,
	2779, 2229, 2772, 4522, 2727, 2726, 2229, 3280, 3281, 2727,
	1217, 2290, 1218, 4513, 3295, 2291, 4501, 4457, 2075, 3803,
	2719, 4266, 4225, 2072, 1839, 1265, 237, 4188, 4031, 1265,
	3632, 1242, 2933, 1785, 2848, 2090, 2053, 2069, 3020, 2228,
	2145, 2953, 2846, 1805, 1926, 3280, 3281, 1509, 3905, 3693,
	3667, 1948, 1802, 2196, 1244, 3280, 3281, 3616, 1808, 1809,
	1810, 1811, 1327, 1673, 2764, 2763, 2762, 2761, 1791, 2760,
	2727, 235, 1219, 1216, 2591, 236, 3617, 1514, 1055, 1054,
	1053, 1052, 1051, 1050, 1049, 1791, 1045, 1044, 229, 1043,
	1042, 1041, 1040, 1039, 1038, 1037, 3296, 230, 1036, 1035,
	1034, 3140, 4373, 1033, 1032, 1031, 1824, 1030, 3286, 1834,
	1029, 1028, 1010, 950, 949, 948, 1813, 1815, 947, 237,
	1535, 946, 945, 944, 189, 943, 942, 1808, 1809, 1810,
	1811, 941, 940, 1830, 2055, 1831, 2055, 1791, 939, 938,
	937, 936, 1800, 1801, 2055, 73, 2055, 3218, 2055, 2055,
	1637, 935, 934, 933, 932, 931, 2592, 930, 2589, 929,
	1822, 928, 74, 927, 926, 925, 924, 923, 236, 1836,
	922, 921, 920, 919, 918, 1806, 3286, 917, 78, 916,
	906, 905, 901, 900, 894, 1813, 1815, 893, 878, 2541,
	2542, 2543, 2560, 2561, 2562, 3037, 877, 2072, 834, 833,
	832, 831, 823, 822, 821, 787, 778, 777, 776, 2563,
	758, 1800, 1801, 259, 3286, 3296, 258, 189, 87, 1832,
	4117, 235, 257, 1623, 3286, 1330, 1126, 256, 255, 1529,
	254, 253, 252, 251, 149, 250, 249, 1821, 248, 247,
	246, 3055, 1839, 245, 1806, 244, 1522, 3297, 1836, 243,
	242, 241, 240, 1126, 1126, 1126, 239, 238, 886, 4280,
	4076, 2553, 3845, 235, 3817, 1836, 3642, 3374, 3241, 237,
	2549, 1389, 107, 3224, 3215, 1389, 3123, 93, 104, 3001,
	3280, 3281, 1330, 3296, 2794, 2769, 1951, 2754, 1836, 3324,
	2622, 2620, 2606, 2604, 1783, 1784, 2119, 2074, 1371, 1372,
	1373, 1974, 1878, 1812, 1517, 1375, 1126, 1250, 1126, 3614,
	1126, 237, 2594, 2229, 1782, 2820, 1330, 1836, 236, 3280,
	3281, 3296, 2366, 2053, 1786, 2072, 1807, 2069, 2411, 3325,
	1523, 229, 1534, 4729, 4709, 4688, 94, 1909, 4590, 2298,
	230, 1265, 1330, 1493, 1908, 2554, 2555, 2556, 2557, 1358,
	2072, 1869, 2719, 1825, 1488, 2548, 1836, 4510, 1171, 1785,
	236, 4504, 1330, 4525, 4333, 4287, 3297, 189, 4502, 1330,
	1699, 1912, 1812, 229, 4265, 4128, 4099, 1126, 1483, 1126,
	4098, 1265, 230, 1330, 1838, 1909, 4092, 4091, 1641, 1126,
	4090, 1126, 1908, 4083, 1836, 1807, 3290, 3282, 3283, 3284,
	3285, 3287, 3288, 1523, 1836, 4082, 1513, 1876, 4080, 189,
	1579, 1582, 1298, 1301, 1627, 4075, 4072, 4071, 3970, 1907,
	1227, 3964, 3849, 2297, 3848, 1311, 1523, 3847, 2588, 2558,
	2559, 3827, 1352, 3794, 3297, 3793, 3792, 3714, 1330, 3709,
	3369, 1528, 3039, 1382, 3317, 1475, 1480, 3308, 1498, 3286,
	3279, 1585, 3276, 1838, 1338, 3275, 1823, 3273, 1126, 2803,
	1069, 1126, 2551, 1791, 4282, 3268, 1797, 1798, 1804, 1826,
	1803, 1799, 3297, 1796, 1794, 1795, 1787, 1788, 1789, 1790,
	1792, 1793, 97, 3267, 3266, 3263, 4643, 817, 3286, 3260,
	820, 3240, 1347, 1787, 1788, 1789, 1790, 1792, 1793, 3223,
	1871, 4913, 178, 178, 3216, 3214, 1512, 1568, 3070, 2755,
	1870, 1511, 1868, 3291, 3289, 3290, 3282, 3283, 3284, 3285,
	3287, 3288, 2577, 1782, 2271, 1781, 1642, 4853, 1869, 4852,
	3971, 1610, 1612, 2236, 4816, 2234, 4767, 186, 100, 1803,
	1799, 103, 1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792,
	1793, 3903, 4765, 1252, 3394, 3740, 4648, 1126, 1126, 1126,
	1126, 1126, 1126, 1126, 1126, 4582, 235, 235, 4566, 235,
	4563, 4562, 4561, 4540, 4524, 887, 4523, 4498, 4482, 4481,
	149, 3291, 3289, 3290, 3282, 3283, 3284, 3285, 3287, 3288,
	1126, 2518, 4467, 4526, 1715, 3296, 1126, 3322, 1358, 235,
	4464, 1358, 4463, 4458, 4397, 4368, 1601, 4331, 4314, 4313,
	4294, 4293, 4251, 2552, 237, 237, 4226, 237, 4116, 4097,
	3289, 3290, 3282, 3283, 3284, 3285, 3287, 3288, 4032, 4024,
	4021, 4254, 3282, 3283, 3284, 3285, 3287, 3288, 3891, 3890,
	3873, 153, 3872, 3870, 1760, 3038, 3809, 237, 1647, 3797,
	1067, 3704, 1856, 3643, 3625, 3591, 190, 3517, 3475, 3442,
	3396, 3245, 1622, 236, 236, 1754, 236, 3366, 1836, 3244,
	3239, 1838, 235, 3971, 1636, 3205, 229, 229, 235, 229,
	3013, 1915, 1914, 1913, 1910, 230, 230, 1902, 230, 2524,
	1900, 2801, 2800, 2766, 2759, 235, 236, 4372, 1858, 2725,
	2602, 1126, 1126, 1126, 1855, 1973, 1929, 1126, 1924, 229,
	1923, 1922, 3054, 189, 1248, 189, 1248, 4281, 230, 1921,
	237, 1920, 1919, 1918, 1917, 1664, 237, 1916, 1897, 1896,
	1895, 1389, 1894, 1893, 1892, 1891, 1890, 1889, 1888, 1887,
	1700, 1126, 1886, 237, 811, 189, 3297, 1885, 1783, 1784,
	2014, 811, 1761, 2538, 2539, 2540, 2564, 2550, 2544, 1928,
	2546, 2547, 2545, 2532, 2533, 2534, 2535, 2536, 2537, 236,
	1884, 235, 4190, 1883, 1882, 236, 1871, 1857, 1786, 1246,
	1757, 1246, 229, 1047, 1765, 1854, 1937, 1764, 229, 1849,
	1046, 230, 236, 1599, 1346, 1269, 1260, 230, 4124, 4068,
	3844, 3820, 1983, 1759, 3812, 229, 3227, 2757, 4351, 1604,
	1911, 2792, 2059, 1785, 230, 2061, 1984, 4126, 189, 237,
	1987, 2066, 3620, 3843, 189, 2068, 1870, 1126, 1778, 1779,
	2071, 1330, 1969, 39, 2299, 3392, 1852, 235, 1978, 2102,
	2101, 189, 1368, 2110, 2112, 3280, 3281, 1370, 1126, 4725,
	4850, 4842, 2110, 2931, 1934, 1935, 1389, 178, 1214, 3284,
	3285, 3287, 3288, 235, 2135, 4564, 2110, 1958, 236, 2110,
	1903, 1904, 4459, 1789, 1790, 1792, 1793, 4450, 1067, 4449,
	4285, 229, 4228, 4227, 2108, 237, 2621, 2619, 2605, 2603,
	230, 4189, 4119, 2117, 4035, 4034, 3282, 3283, 3284, 3285,
	3287, 3288, 4033, 235, 2909, 3815, 2081, 1977, 3645, 235,
	3644, 237, 1369, 1959, 3627, 3626, 4796, 189, 4794, 1993,
	1982, 2179, 1363, 1951, 1909, 3974, 2042, 3691, 2044, 1364,
	4505, 1908, 2080, 1358, 236, 1363, 817, 4503, 3917, 820,
	4455, 1752, 3265, 817, 1608, 1956, 820, 229, 1949, 3888,
	3264, 237, 3509, 2096, 3187, 2891, 230, 237, 1663, 2958,
	236, 2105, 1988, 1366, 3574, 1026, 3573, 3444, 2145, 2037,
	2193, 2057, 1716, 229, 1927, 2210, 2322, 1892, 1243, 1892,
	1243, 1880, 230, 189, 1968, 1953, 1967, 1966, 1330, 1330,
	1964, 1672, 1963, 1962, 2077, 1363, 2590, 4779, 1389, 1877,
	236, 3636, 2008, 2296, 1067, 3478, 236, 3329, 4446, 189,
	1027, 1994, 4753, 229, 4734, 1226, 2083, 4721, 3558, 229,
	3096, 1673, 230, 2211, 3978, 3742, 3961, 1242, 230, 1242,
	3919, 3914, 3896, 3664, 3417, 2303, 4335, 2585, 4392, 2939,
	4364, 3233, 2888, 4730, 2799, 1925, 1905, 1360, 3565, 189,
	1244, 2265, 1244, 1578, 1505, 189, 1341, 1297, 2175, 1603,
	2183, 4743, 2079, 2188, 2950, 4740, 3610, 3865, 4556, 2947,
	2945, 1651, 3122, 4269, 2178, 4655, 2107, 4536, 3447, 3883,
	3077, 2221, 2226, 2272, 3051, 2591, 3541, 4797, 4395, 4391,
	4370, 3685, 1330, 2086, 1330, 4798, 1330, 3421, 3932, 2938,
	4419, 4177, 2887, 873, 1553, 1695, 1545, 2113, 2103, 1713,
	4731, 1695, 1330, 1330, 2106, 4175, 2834, 1507, 4908, 4570,
	4412, 1024, 4172, 1330, 4832, 2852, 4403, 1022, 1365, 4218,
	1020, 1018, 4217, 1015, 3930, 1330, 1604, 1330, 1330, 1330,
	2850, 2151, 3393, 2379, 3929, 2852, 4156, 1065, 3921, 2377,
	3911, 3910, 3908, 3907, 2213, 2214, 1714, 3895, 2993, 2215,
	2850, 811, 3860, 1006, 3859, 3547, 3931, 2592, 2308, 2589,
	2331, 1370, 3546, 2097, 3386, 3238, 1692, 2173, 2321, 2261,
	4149, 3237, 817, 1126, 3236, 820, 1361, 3235, 3191, 2956,
	2955, 1554, 2266, 2952, 2941, 1362, 2925, 2924, 2919, 2918,
	2917, 1512, 2896, 2895, 2278, 2856, 1511, 2780, 874, 2499,
	1712, 1694, 1758, 3423, 2635, 4428, 2084, 1694, 1126, 2634,
	2456, 3048, 2172, 2169, 1119, 2187, 1353, 1591, 2245, 1590,
	2314, 2807, 2301, 2332, 4150, 2784, 1369, 1064, 1589, 1693,
	1588, 1012, 1549, 2227, 3665, 1644, 2286, 2408, 2326, 750,
	4312, 1649, 1126, 2893, 1126, 2400, 2391, 2318, 2426, 1283,
	4393, 1126, 4365, 1750, 2014, 2014, 1389, 2410, 1126, 1126,
	1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126,
	1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126,
	1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126,
	1126, 1126, 1126, 1126, 2275, 1126, 2247, 1126, 1126, 1126,
	1126, 2390, 2246, 3507, 2745, 2211, 2296, 2424, 2288, 1562,
	2309, 2142, 1601, 2594, 2283, 4171, 2283, 2284, 2280, 2889,
	1793, 4833, 2889, 1126, 3444, 750, 2841, 1126, 1126, 2181,
	4173, 2153, 2428, 1347, 1364, 1126, 2292, 1066, 2293, 1126,
	2415, 1126, 1126, 817, 1364, 2138, 820, 4134, 2514, 1389,
	4191, 2514, 4837, 1645, 2157, 1126, 1126, 1126, 1126, 2793,
	1363, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 2351,
	1067, 2313, 1067, 1370, 2143, 2144, 1603, 785, 3102, 699,
	1508, 2865, 2330, 2771, 2452, 2453, 1567, 1126, 1126, 1126,
	1126, 1126, 1126, 1126, 1126, 1126, 2341, 2426, 2403, 1729,
	1126, 3477, 2879, 2087, 2139, 694, 2566, 2567, 2383, 2913,
	4133, 2154, 1248, 2114, 2115, 3164, 2338, 3288, 3880, 1389,
	2566, 2582, 2906, 2907, 2373, 1725, 3179, 4145, 1248, 2588,
	3280, 3281, 4146, 3298, 3299, 3300, 2906, 2907, 1369, 2906,
	2907, 1665, 4151, 2439, 1126, 1389, 2585, 2630, 4838, 4865,
	2878, 4429, 1360, 2285, 3674, 2425, 2424, 4549, 1969, 1711,
	3868, 1763, 1360, 4427, 3508, 749, 2676, 2676, 2690, 4425,
	2566, 2412, 2414, 2711, 2713, 2413, 2427, 1246, 1047, 2717,
	1661, 1047, 1047, 2420, 4148, 2443, 2530, 783, 2444, 2445,
	4797, 2510, 2335, 1246, 2868, 2522, 1751, 3940, 876, 875,
	2581, 4152, 2520, 2225, 3673, 3295, 2008, 2008, 2402, 4311,
	2837, 4727, 2892, 2329, 2399, 2594, 4424, 1345, 2158, 1063,
	2508, 1673, 3137, 2767, 1574, 2197, 2339, 2949, 3731, 2423,
	2204, 2839, 871, 1365, 870, 3420, 3878, 2422, 4216, 914,
	1673, 3909, 4174, 1365, 4426, 2855, 1330, 1330, 2855, 1939,
	3906, 749, 3892, 2742, 3941, 3146, 2526, 3852, 4840, 2948,
	3178, 2815, 1214, 2734, 2946, 2944, 4811, 2819, 2840, 3839,
	1337, 2579, 2851, 907, 3553, 751, 1572, 2783, 4551, 1958,
	3545, 2830, 3505, 3607, 2159, 2160, 2951, 895, 2756, 2838,
	1389, 1361, 2916, 2894, 2233, 2232, 1708, 3939, 2733, 3286,
	1362, 1361, 1650, 2829, 2425, 178, 2823, 2787, 2155, 1058,
	1362, 1000, 1548, 1067, 2741, 2409, 2746, 2672, 2011, 2752,
	2753, 2702, 2685, 1067, 2014, 2715, 2806, 1067, 1016, 1282,
	1943, 4147, 2723, 2724, 1016, 1060, 2632, 1016, 1017, 2735,
	1016, 2633, 2822, 2198, 2636, 1726, 2637, 2638, 4819, 2378,
	1520, 2156, 1527, 1911, 1533, 2376, 4169, 1956, 2739, 2740,
	2826, 751, 2504, 1358, 1608, 3149, 1608, 1389, 3728, 2831,
	4157, 4158, 3202, 4818, 4846, 2778, 1243, 4868, 2423, 1946,
	4786, 1059, 2505, 1330, 2594, 4050, 4728, 2506, 2126, 3171,
	3172, 2511, 1243, 2127, 1941, 2867, 4049, 2857, 2145, 3668,
	3494, 3200, 3486, 784, 1126, 1126, 3296, 1126, 2802, 3554,
	2825, 3893, 1944, 1648, 2853, 1000, 1067, 1903, 1904, 3551,
	2814, 1621, 1551, 1626, 2817, 1242, 2818, 1001, 1013, 811,
	2805, 1330, 1646, 1635, 2795, 1640, 2692, 2854, 2809, 1060,
	3143, 1242, 4636, 2824, 2942, 2832, 1000, 2929, 1244, 695,
	3729, 2988, 786, 4839, 2899, 1942, 782, 3495, 4896, 3487,
	2914, 2165, 1330, 2054, 1244, 3608, 4356, 4695, 2898, 4696,
	1060, 3062, 2161, 824, 2932, 1363, 1330, 2401, 1330, 1836,
	2921, 2882, 2835, 2148, 1727, 1363, 3091, 3344, 2920, 2206,
	4726, 2496, 4557, 1330, 2897, 2337, 2194, 4577, 3148, 1698,
	3493, 3193, 3485, 3035, 2513, 4626, 2128, 2915, 2989, 2908,
	2910, 2911, 2912, 1574, 1256, 2870, 2873, 2860, 2166, 2996,
	908, 909, 2923, 2132, 2998, 3103, 3104, 2957, 3459, 3145,
	696, 1001, 2985, 2986, 896, 897, 3110, 3111, 3112, 2126,
	2149, 1126, 2866, 3197, 2127, 4550, 2205, 3607, 2162, 3520,
	3431, 2987, 3094, 3879, 3422, 3031, 1253, 3297, 2922, 4167,
	2201, 2164, 1001, 2770, 2927, 1723, 3093, 1674, 3198, 3097,
	2937, 748, 3203, 1945, 4170, 1506, 2008, 2507, 1728, 697,
	3656, 698, 1267, 2147, 2182, 3458, 1898, 2509, 3120, 3649,
	4243, 817, 3390, 2994, 820, 4785, 2129, 2134, 3017, 1258,
	178, 3076, 1126, 3463, 1724, 2180, 2594, 3100, 1126, 1126,
	1512, 2194, 3105, 3119, 3106, 2999, 2852, 2199, 1002, 915,
	1762, 817, 4308, 3064, 820, 4844, 3011, 2136, 3129, 3066,
	3131, 2871, 3133, 4046, 3147, 4760, 3126, 3021, 3117, 1660,
	1662, 4324, 4808, 2521, 3954, 4761, 3552, 3022, 4678, 3151,
	4666, 3153, 2334, 3952, 3128, 3465, 3130, 2128, 3132, 2494,
	2200, 4201, 2497, 3057, 1126, 1126, 1257, 717, 3067, 1848,
	1126, 2194, 2576, 2328, 2132, 3078, 1344, 3243, 3154, 2130,
	2738, 3156, 3141, 1126, 1126, 3098, 3343, 3651, 3046, 1126,
	1126, 3124, 4624, 3125, 4869, 1126, 3065, 3292, 3293, 3294,
	2751, 1066, 3650, 3744, 3291, 3289, 3290, 3282, 3283, 3284,
	3285, 3287, 3288, 2493, 4856, 910, 911, 2994, 4168, 3464,
	825, 826, 1002, 3127, 2190, 4253, 4040, 2136, 4854, 898,
	899, 3956, 4221, 4845, 3840, 4625, 1272, 4051, 1003, 4584,
	1126, 1126, 1126, 3687, 1679, 2928, 1126, 2129, 2134, 3194,
	3162, 2189, 4671, 1002, 4603, 3159, 1126, 3432, 3199, 4307,
	4258, 1965, 4466, 1057, 1943, 1004, 3955, 3170, 3201, 4847,
	4220, 4219, 3954, 1126, 3992, 3595, 2253, 1936, 1270, 4259,
	3426, 3952, 1263, 686, 4492, 2185, 3161, 3160, 3969, 1772,
	1773, 4047, 3647, 4156, 4095, 1387, 4784, 2442, 2146, 1486,
	2098, 2439, 3165, 4874, 1939, 3379, 3180, 4390, 4244, 3783,
	4475, 2095, 4535, 1946, 2143, 2144, 3993, 4897, 1005, 3925,
	3221, 3222, 2055, 3912, 3864, 3225, 1772, 4149, 2736, 3438,
	2130, 4142, 2011, 2011, 3596, 3587, 3434, 4484, 3036, 1767,
	3030, 3015, 1003, 2279, 2186, 2273, 1944, 2267, 4140, 2259,
	4485, 2239, 3727, 1542, 2432, 3217, 3192, 4144, 1274, 3956,
	757, 3656, 3798, 828, 827, 1126, 1126, 1126, 1126, 1004,
	3649, 3352, 3833, 1003, 3469, 1126, 1126, 1126, 2136, 2900,
	1126, 4150, 1254, 4486, 4641, 1943, 3688, 2093, 4759, 2855,
	1126, 1248, 1389, 1771, 3955, 1772, 1126, 4309, 1126, 4606,
	1004, 4585, 3336, 3337, 3856, 3995, 2495, 1248, 2384, 2091,
	2131, 4274, 3657, 3652, 3653, 3654, 3655, 4444, 3012, 4052,
	1285, 3226, 1005, 4143, 2872, 1389, 3834, 829, 830, 2094,
	1771, 3467, 4442, 2319, 1946, 1255, 3953, 1248, 2729, 4367,
	1389, 3450, 3232, 3446, 3445, 3185, 4488, 3163, 1324, 1941,
	3811, 3341, 3835, 1005, 3832, 3340, 1246, 1702, 1701, 3319,
	1773, 2014, 1696, 2777, 2776, 1389, 3353, 1944, 3651, 4487,
	1597, 1595, 1246, 2732, 3468, 3338, 2170, 1067, 2775, 2774,
	2773, 1330, 3960, 3650, 3950, 3359, 913, 4489, 3019, 1075,
	1848, 4256, 2433, 1064, 4096, 4544, 3372, 1773, 1583, 1771,
	3784, 4439, 1246, 1126, 4053, 1500, 4379, 1945, 4235, 3785,
	1942, 4873, 1584, 2087, 2731, 2876, 3351, 1126, 3407, 2730,
	2135, 3409, 3410, 3871, 3348, 3637, 3413, 1330, 3414, 2277,
	3415, 3561, 2014, 4805, 4581, 3427, 3428, 4291, 4354, 1538,
	3368, 2992, 2145, 3403, 1608, 3861, 3388, 3101, 3418, 3356,
	1126, 2176, 2901, 2902, 2135, 3373, 3448, 2997, 3346, 3452,
	2995, 2131, 3424, 2307, 3953, 1575, 1330, 2210, 1654, 3411,
	3347, 4645, 3314, 3315, 3316, 3357, 4545, 3521, 3365, 3377,
	3330, 3360, 3361, 4362, 4145, 3358, 1680, 4375, 1330, 4146,
	1330, 3391, 1616, 3345, 2171, 3449, 4374, 4586, 3454, 4151,
	3857, 3456, 4652, 4638, 4102, 2193, 1629, 3800, 1358, 4290,
	2601, 4380, 1389, 4809, 2193, 1746, 4673, 2395, 1748, 3430,
	1745, 4810, 3363, 1330, 3364, 3385, 1743, 1330, 1945, 4363,
	3435, 3523, 4807, 3525, 3380, 4745, 3529, 4573, 3510, 1983,
	3535, 4148, 3480, 3381, 3382, 3383, 3384, 756, 1720, 3400,
	4565, 4330, 1330, 3836, 4431, 1243, 3354, 3355, 4152, 4646,
	3482, 1655, 3439, 1718, 4546, 4094, 1330, 3959, 1330, 1690,
	1688, 1243, 1389, 3412, 3503, 3311, 1686, 3703, 3662, 811,
	3408, 3661, 3496, 1684, 2002, 3401, 3484, 3274, 1682, 3204,
	1330, 3419, 3016, 3657, 3652, 3653, 3654, 3655, 1676, 3570,
	3506, 1243, 2011, 3425, 1242, 1330, 3862, 2940, 2890, 1670,
	1596, 1594, 2804, 2008, 2404, 3498, 1976, 3530, 1668, 1593,
	1242, 3536, 1248, 1972, 1749, 2367, 912, 1244, 1632, 3603,
	2375, 3579, 3312, 2343, 3397, 3398, 4490, 3399, 3466, 2219,
	3091, 3683, 4491, 1244, 3682, 1767, 3518, 1330, 1330, 3091,
	1242, 1084, 3139, 3138, 3601, 1975, 3476, 3489, 3542, 3556,
	3490, 3559, 3108, 2421, 3491, 1707, 3586, 3492, 2346, 2258,
	2238, 2043, 1330, 1244, 1881, 1643, 1566, 2600, 3594, 4720,
	4202, 1014, 3511, 3623, 2008, 3612, 3522, 1246, 4147, 3916,
	4203, 3543, 3519, 3915, 4186, 4637, 4272, 2397, 4208, 4782,
	3532, 2396, 1747, 4199, 1744, 3538, 2923, 4138, 3991, 3982,
	1742, 2167, 3928, 3913, 4773, 3886, 1389, 3884, 3863, 1389,
	4543, 2180, 3666, 3590, 3602, 3544, 3585, 4157, 4158, 3575,
	3049, 3041, 1719, 3034, 3548, 3405, 3023, 3009, 2182, 3555,
	2990, 2821, 2816, 2237, 2235, 2212, 2898, 1717, 2195, 3597,
	3563, 3604, 1126, 1689, 1687, 2163, 3584, 2150, 1126, 1126,
	1685, 3583, 1126, 1126, 1126, 3582, 1126, 1683, 2177, 3659,
	4267, 817, 1681, 2179, 820, 1126, 2014, 2137, 178, 178,
	2120, 3433, 1675, 2076, 1126, 2073, 2070, 2067, 3635, 1126,
	1986, 3609, 3611, 1669, 3639, 1389, 3658, 2062, 3681, 2060,
	3618, 2056, 1667, 1592, 1126, 2047, 263, 3621, 3622, 3724,
	2374, 2174, 1389, 2342, 3600, 1776, 3680, 4258, 3633, 2218,
	3483, 3678, 2014, 2014, 1126, 1126, 4798, 1126, 1126, 1126,
	3684, 3670, 3533, 3671, 3183, 3672, 4259, 2204, 1019, 1021,
	1023, 3689, 3497, 2181, 3499, 1126, 2099, 1223, 2407, 1126,
	3706, 2014, 2014, 1126, 1126, 1126, 1126, 1126, 1126, 1126,
	1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126,
	1126, 1126, 1126, 1224, 1126, 3157, 3155, 3531, 3756, 3660,
	3757, 3537, 1126, 1126, 2014, 3677, 1243, 2983, 3676, 1126,
	4683, 4296, 4289, 4288, 2405, 4215, 4130, 3686, 3092, 2118,
	1126, 1547, 2852, 2852, 4477, 2877, 4470, 4003, 3716, 3717,
	2333, 1248, 1248, 1067, 2276, 1126, 2145, 2850, 2874, 1740,
	1741, 1305, 2230, 1306, 2370, 1777, 2178, 2365, 4682, 3184,
	2340, 4178, 1783, 1784, 4210, 1242, 1666, 1783, 1784, 2880,
	2406, 4512, 4377, 4103, 4081, 1389, 3713, 3711, 3461, 2881,
	3534, 2903, 2452, 3747, 1780, 3829, 1339, 1273, 1244, 3723,
	4801, 4792, 1786, 2087, 3730, 3732, 3733, 3924, 3795, 3739,
	260, 2881, 2947, 4754, 3008, 2372, 1246, 1246, 3746, 3979,
	2260, 2452, 3762, 1225, 2934, 1350, 2945, 2954, 3754, 3923,
	2936, 2885, 3755, 3816, 1126, 2883, 4644, 1785, 3759, 1306,
	3389, 3787, 1785, 2935, 2884, 4631, 1306, 3761, 4597, 2087,
	4591, 4542, 3854, 1126, 3791, 4461, 3855, 683, 4437, 4355,
	3989, 3981, 3968, 3826, 3589, 3056, 2716, 2082, 2008, 3802,
	1995, 3788, 178, 4841, 3796, 4376, 2926, 1504, 1503, 4675,
	4872, 3280, 3281, 1514, 4676, 4593, 1126, 1126, 2087, 1783,
	1784, 4073, 4675, 2844, 2845, 3988, 3885, 4676, 3887, 2596,
	3804, 3805, 3807, 3808, 4813, 2842, 2843, 3842, 2844, 2842,
	2087, 1653, 2087, 3734, 2008, 2008, 2631, 1652, 1722, 4462,
	4413, 1721, 4212, 3818, 4207, 4206, 4069, 3841, 1126, 3735,
	3527, 3524, 1875, 3819, 1874, 4858, 3753, 4820, 2002, 2002,
	4635, 4634, 4633, 2008, 2008, 2087, 4572, 4571, 4528, 2087,
	4440, 4407, 1330, 4352, 4349, 4347, 4246, 1330, 4232, 4176,
	4125, 4027, 4009, 3963, 3882, 3897, 3874, 3593, 3592, 3927,
	3455, 3837, 3838, 3406, 3144, 3136, 2008, 3116, 3115, 3114,
	3113, 2014, 3040, 3010, 3902, 3904, 3850, 3851, 2875, 3853,
	2812, 2808, 2797, 2796, 2785, 3901, 3002, 2525, 3867, 3005,
	3926, 3007, 2398, 3918, 2371, 2364, 2363, 3920, 2362, 2361,
	2360, 2274, 1330, 2248, 2244, 1243, 1243, 3889, 1126, 2243,
	2242, 2241, 3894, 2240, 2050, 2049, 1248, 1126, 2048, 2046,
	2455, 1985, 4005, 1739, 1738, 3942, 3944, 1330, 1330, 1330,
	3062, 1677, 1561, 1560, 1559, 3053, 3996, 4012, 3053, 2898,
	1558, 3936, 1557, 1556, 1330, 1330, 1330, 1555, 1550, 2294,
	1546, 1544, 3958, 1543, 1242, 1242, 1497, 3091, 1496, 1495,
	3846, 1380, 1330, 1379, 4000, 1324, 2310, 3938, 1389, 2011,
	3946, 1378, 4016, 1377, 3997, 1376, 2312, 1244, 1244, 1343,
	3975, 1246, 1342, 1134, 3948, 3962, 1292, 3957, 2320, 3976,
	2323, 2324, 2325, 3935, 1389, 1291, 1290, 1126, 1126, 3947,
	4028, 3439, 1289, 1126, 1126, 2014, 1288, 1287, 1126, 1126,
	3985, 1126, 3980, 2597, 1286, 1284, 1126, 1279, 1278, 3134,
	1277, 3999, 1276, 1275, 1206, 3983, 2089, 1126, 1025, 267,
	267, 267, 1011, 689, 690, 4548, 705, 689, 705, 715,
	2011, 3998, 755, 1126, 4155, 4007, 775, 885, 8, 4154,
	4011, 781, 4006, 4153, 2394, 4038, 4019, 4036, 267, 92,
	4001, 4054, 1552, 847, 4017, 4018, 4026, 86, 2202, 4022,
	3881, 4748, 979, 4023, 4025, 4672, 1536, 4576, 892, 4063,
	855, 4654, 3977, 3457, 267, 2959, 2345, 1678, 4037, 2347,
	4067, 3367, 2758, 4623, 4077, 3242, 4519, 4323, 2599, 1879,
	3323, 88, 4048, 1110, 1248, 1156, 4242, 4043, 4241, 2768,
	4139, 3866, 1248, 3081, 4239, 4238, 1389, 1999, 1389, 2001,
	1074, 1392, 4694, 2008, 2100, 1248, 1116, 2116, 4055, 2109,
	2798, 2675, 1133, 1130, 2003, 2005, 1330, 1330, 1132, 1131,
	2004, 1899, 1129, 1998, 3987, 3060, 1389, 3619, 1602, 1600,
	981, 2104, 2519, 2583, 3231, 1872, 1090, 1112, 2580, 1268,
	1101, 1089, 3349, 3328, 3606, 3825, 2431, 865, 3277, 1246,
	2586, 1248, 1259, 1248, 2699, 4131, 4132, 1246, 2691, 2687,
	1243, 4093, 3416, 3050, 3372, 1753, 4337, 1850, 3061, 1374,
	1246, 1094, 2517, 1863, 3209, 2441, 1330, 3613, 2002, 3370,
	4179, 3937, 2791, 4679, 3743, 3142, 1389, 2252, 1330, 1222,
	1221, 1330, 1266, 689, 689, 1220, 4660, 4657, 4105, 4106,
	2192, 267, 1389, 4020, 3568, 4110, 2092, 4107, 2836, 1242,
	4162, 2529, 4162, 4114, 3576, 1106, 1246, 178, 1246, 4100,
	4180, 1491, 4165, 4118, 4211, 4135, 4213, 4115, 2388, 3334,
	4111, 3638, 1244, 1563, 2847, 4104, 4123, 2008, 780, 4384,
	1330, 1330, 1118, 4109, 4137, 1835, 2980, 2979, 4539, 4129,
	1359, 1357, 1356, 1355, 4829, 4895, 3877, 3876, 3875, 1315,
	1330, 234, 4236, 3177, 4108, 1774, 1766, 231, 233, 4184,
	232, 4247, 1389, 3830, 3376, 4752, 4200, 1330, 4214, 3899,
	3560, 23, 4193, 22, 21, 4196, 112, 42, 20, 151,
	129, 148, 147, 121, 146, 145, 4230, 144, 143, 150,
	142, 141, 1248, 136, 140, 139, 138, 4233, 4195, 1481,
	137, 4275, 1492, 1315, 1330, 1330, 1330, 135, 4198, 133,
	4224, 134, 128, 132, 131, 130, 127, 1389, 4166, 4229,
	4264, 126, 125, 124, 4231, 123, 4205, 122, 120, 1126,
	1126, 1126, 4223, 4222, 152, 4181, 4182, 119, 1243, 4276,
	118, 117, 116, 115, 114, 4237, 1243, 1389, 4252, 113,
	767, 4162, 1126, 769, 2011, 1126, 1126, 1246, 61, 1243,
	4261, 4292, 4279, 60, 111, 1126, 110, 19, 2014, 40,
	1315, 1315, 4263, 1126, 1126, 4277, 14, 65, 66, 2828,
	1324, 18, 13, 35, 91, 102, 101, 1242, 1389, 36,
	1330, 99, 98, 4284, 4315, 1242, 4270, 34, 4301, 2087,
	2011, 2011, 4299, 17, 4298, 1243, 4303, 1243, 1242, 16,
	1244, 15, 96, 1389, 4310, 95, 33, 31, 1244, 11,
	9, 1126, 37, 1960, 12, 5, 183, 182, 185, 2011,
	2011, 1244, 181, 184, 1126, 90, 4304, 180, 179, 89,
	29, 4326, 4332, 1126, 10, 175, 4453, 3973, 2014, 81,
	177, 176, 174, 173, 1242, 172, 1242, 1126, 4320, 82,
	1126, 1861, 2011, 79, 4358, 1866, 171, 85, 170, 4295,
	80, 84, 4343, 4344, 1126, 83, 27, 1244, 6, 1244,
	64, 1389, 7, 4398, 4399, 4387, 4305, 3663, 1330, 105,
	106, 38, 77, 4346, 76, 75, 26, 63, 1330, 1330,
	4359, 25, 169, 216, 215, 4406, 4366, 3470, 3471, 4357,
	3472, 3473, 3474, 4414, 214, 4416, 2984, 4417, 213, 212,
	4185, 211, 210, 209, 204, 203, 208, 206, 205, 207,
	202, 4430, 4194, 226, 4418, 4197, 225, 3570, 219, 218,
	224, 223, 4452, 1389, 222, 221, 1330, 220, 217, 228,
	4443, 201, 4409, 200, 199, 197, 1243, 4408, 3512, 3513,
	193, 3514, 3515, 3516, 1248, 1248, 4404, 192, 4415, 196,
	198, 195, 194, 191, 227, 72, 4410, 167, 4396, 168,
	4471, 71, 4420, 4433, 1126, 1126, 4432, 166, 165, 164,
	163, 4441, 4435, 4436, 162, 161, 160, 70, 4460, 24,
	4480, 1126, 2014, 2, 4260, 1242, 4474, 4451, 4422, 1,
	4499, 0, 0, 0, 0, 0, 0, 0, 4472, 0,
	2008, 0, 0, 4162, 4162, 0, 3109, 4456, 1244, 1246,
	1246, 4473, 4478, 4495, 4496, 0, 0, 4479, 0, 1126,
	0, 1126, 4493, 1126, 0, 1261, 0, 4279, 0, 0,
	0, 0, 0, 1248, 0, 0, 0, 0, 0, 0,
	0, 4507, 0, 4508, 4509, 0, 1126, 0, 1248, 4534,
	0, 0, 0, 0, 0, 0, 4517, 4468, 1281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 267, 267, 0, 1310, 267, 1320, 0, 4533,
	2008, 0, 0, 0, 0, 0, 0, 4530, 1340, 0,
	2135, 4511, 4162, 0, 0, 0, 4559, 775, 1246, 2011,
	1126, 1126, 4568, 4553, 0, 0, 4476, 4162, 0, 4552,
	1126, 0, 4580, 1246, 0, 1248, 0, 4560, 1248, 0,
	0, 0, 1330, 267, 0, 267, 267, 1310, 2087, 267,
	267, 4567, 1330, 1330, 1320, 0, 4569, 0, 0, 0,
	2087, 0, 0, 2087, 1492, 4588, 4589, 0, 267, 1330,
	1516, 0, 0, 0, 0, 4574, 0, 0, 0, 0,
	4587, 0, 0, 1126, 1126, 4614, 0, 4592, 0, 4595,
	0, 1540, 0, 1126, 4162, 4527, 4599, 4162, 4529, 4594,
	1246, 4610, 4608, 1246, 4600, 2002, 4611, 4602, 4612, 4613,
	1565, 1492, 0, 1320, 4607, 0, 0, 267, 267, 0,
	1310, 0, 4647, 4618, 0, 4617, 3335, 4456, 1243, 1243,
	4651, 0, 2087, 0, 1126, 1126, 0, 1126, 4628, 0,
	0, 775, 4421, 267, 267, 4632, 0, 0, 0, 0,
	0, 0, 0, 2011, 2008, 0, 0, 0, 0, 3362,
	0, 0, 4627, 2436, 4659, 4662, 892, 0, 4681, 4677,
	0, 0, 4649, 0, 3375, 4650, 2002, 1242, 1242, 0,
	4664, 0, 4674, 0, 0, 0, 0, 0, 4699, 4668,
	4702, 0, 0, 0, 0, 1126, 1126, 1126, 0, 3395,
	1244, 1244, 0, 0, 0, 0, 4703, 0, 4684, 0,
	0, 0, 4697, 4663, 0, 0, 4667, 1243, 4690, 0,
	0, 0, 0, 4698, 0, 0, 1126, 0, 0, 0,
	0, 0, 1243, 0, 0, 0, 0, 0, 0, 0,
	4732, 0, 4718, 267, 0, 4719, 0, 4737, 4619, 0,
	4620, 4716, 4717, 0, 0, 0, 0, 0, 0, 4762,
	4755, 0, 0, 0, 0, 267, 1242, 4766, 0, 0,
	0, 0, 4747, 0, 4750, 0, 0, 4776, 4778, 4777,
	4764, 1242, 4751, 1126, 0, 0, 0, 4763, 4735, 1244,
	0, 0, 0, 0, 0, 0, 0, 4783, 0, 1243,
	4770, 0, 1243, 0, 1244, 4771, 0, 0, 4772, 2693,
	0, 0, 4803, 4774, 4775, 4669, 4799, 0, 4670, 4780,
	0, 0, 0, 4795, 4793, 4789, 4790, 4791, 0, 0,
	0, 0, 0, 0, 2135, 4802, 1248, 4804, 1248, 4806,
	4823, 4825, 4659, 0, 4681, 4662, 4822, 0, 1242, 3206,
	3207, 1242, 4835, 4817, 0, 0, 4580, 4836, 4821, 4812,
	0, 0, 0, 0, 4831, 0, 0, 0, 0, 4834,
	2087, 1244, 0, 0, 1244, 0, 0, 0, 4849, 2264,
	0, 0, 0, 0, 0, 0, 0, 4848, 0, 4851,
	0, 0, 0, 4733, 0, 4162, 0, 4162, 4860, 0,
	0, 1246, 0, 1246, 0, 4824, 3375, 4826, 4866, 0,
	0, 4859, 1126, 1126, 0, 0, 0, 0, 4862, 4864,
	0, 1126, 2126, 1126, 1126, 0, 4870, 2127, 4867, 0,
	0, 0, 0, 0, 0, 4876, 4886, 0, 4880, 4887,
	0, 4891, 4883, 4889, 4888, 4890, 0, 0, 0, 0,
	0, 3062, 4885, 4884, 0, 0, 0, 0, 4899, 4879,
	4898, 4900, 4902, 4894, 4907, 4901, 689, 0, 4904, 4903,
	4905, 0, 0, 0, 0, 4911, 0, 0, 4910, 0,
	0, 0, 0, 0, 1126, 0, 4915, 267, 4917, 267,
	0, 4907, 4921, 267, 4918, 4912, 4920, 0, 0, 0,
	2523, 0, 4877, 4878, 4914, 0, 1516, 1310, 1980, 267,
	0, 267, 0, 3984, 0, 4830, 1861, 267, 1516, 705,
	2002, 0, 0, 0, 267, 1516, 73, 1516, 0, 0,
	0, 3304, 3305, 3306, 3307, 0, 0, 0, 0, 2051,
	2128, 2389, 0, 74, 0, 0, 2011, 0, 0, 0,
	1486, 267, 0, 1387, 0, 4855, 0, 2132, 267, 78,
	0, 4857, 0, 4916, 0, 0, 2002, 2002, 0, 0,
	0, 2698, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3539, 4039, 0, 0, 0,
	0, 0, 0, 1516, 0, 2002, 2002, 0, 775, 87,
	1243, 0, 1243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3580, 0, 0, 2011, 0, 2002, 3720,
	2129, 2134, 0, 0, 0, 0, 0, 0, 3588, 886,
	0, 0, 0, 0, 0, 0, 3736, 0, 0, 1242,
	0, 1242, 0, 107, 0, 0, 0, 0, 93, 104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1244, 73, 1244, 0, 0, 1783, 1784, 0,
	3629, 3630, 0, 0, 0, 0, 0, 0, 0, 0,
	74, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 0, 0, 0, 0, 0, 78, 1786, 0, 0,
	0, 0, 0, 2130, 0, 0, 0, 94, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 1805, 0, 0, 0, 0, 2124, 0, 267,
	0, 2136, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3828,
	2011, 0, 0, 0, 0, 0, 886, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1315, 0, 49, 0,
	107, 0, 0, 0, 0, 93, 104, 0, 0, 0,
	0, 0, 0, 0, 2122, 0, 267, 0, 0, 0,
	267, 3167, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 1808, 1809, 1810, 1811,
	0, 0, 0, 2788, 0, 1315, 1791, 0, 267, 0,
	267, 0, 0, 0, 689, 0, 267, 2123, 0, 0,
	0, 0, 0, 97, 94, 0, 0, 0, 775, 0,
	0, 0, 892, 0, 0, 0, 1315, 1315, 0, 0,
	0, 0, 0, 0, 0, 2002, 0, 0, 0, 0,
	0, 0, 4245, 0, 1813, 1815, 0, 267, 0, 1310,
	267, 0, 2693, 2693, 0, 4262, 0, 0, 0, 0,
	0, 0, 0, 0, 775, 0, 0, 0, 186, 100,
	0, 267, 103, 0, 0, 0, 0, 0, 4283, 2344,
	0, 0, 0, 0, 267, 267, 0, 267, 0, 267,
	0, 267, 0, 267, 2131, 0, 0, 0, 235, 0,
	0, 0, 0, 1806, 0, 0, 887, 0, 0, 0,
	0, 149, 0, 0, 0, 0, 0, 0, 2380, 0,
	1481, 2381, 0, 2382, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 267, 267, 267, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 1492, 0, 0, 0, 0, 2975, 0, 0,
	97, 0, 755, 0, 0, 0, 775, 0, 0, 2002,
	0, 0, 153, 0, 0, 0, 1836, 0, 0, 3699,
	3700, 0, 0, 0, 0, 0, 0, 190, 0, 0,
	2967, 2965, 0, 0, 0, 236, 0, 2969, 2971, 2961,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 186, 100, 230, 0, 103,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 0, 2698, 2693, 2693, 2693, 2693, 0, 0,
	0, 0, 0, 0, 189, 235, 0, 0, 0, 0,
	0, 0, 0, 887, 1807, 0, 0, 0, 149, 2531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3763,
	3764, 3765, 3766, 3767, 3768, 3769, 3770, 3771, 3772, 3773,
	3774, 3775, 3776, 3777, 3778, 3779, 3780, 3781, 3782, 0,
	3786, 0, 0, 237, 0, 3933, 1492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1315, 0, 0,
	0, 0, 1838, 0, 2698, 2698, 0, 0, 0, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 190, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 267, 3280, 3281, 0, 3298,
	3299, 3300, 0, 0, 689, 229, 0, 1492, 0, 1492,
	0, 267, 0, 689, 230, 0, 0, 0, 4060, 0,
	0, 0, 4113, 0, 0, 267, 0, 0, 2963, 0,
	4013, 4014, 4015, 0, 0, 0, 0, 0, 0, 2977,
	0, 189, 0, 267, 1320, 0, 0, 1324, 4029, 4030,
	4127, 1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793,
	2976, 2968, 2966, 2970, 2972, 2962, 2964, 2978, 0, 0,
	0, 3295, 0, 0, 0, 0, 2974, 0, 0, 0,
	0, 0, 0, 0, 3280, 3281, 0, 3298, 3299, 3300,
	0, 0, 267, 1320, 0, 0, 0, 705, 0, 1783,
	1784, 2811, 0, 0, 0, 0, 4059, 267, 0, 2981,
	267, 0, 0, 0, 267, 0, 267, 0, 0, 0,
	0, 1310, 1814, 267, 267, 0, 1320, 1320, 2827, 1786,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2698, 2698, 2698, 2698,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 3295,
	0, 4578, 0, 0, 1785, 3286, 0, 0, 0, 0,
	0, 0, 0, 0, 1805, 0, 0, 0, 0, 0,
	2864, 0, 0, 1802, 0, 4598, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 2002, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 775, 0,
	3302, 0, 0, 0, 0, 0, 0, 4058, 0, 4120,
	4121, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 1387, 0, 3286, 0, 0, 0, 0, 1808, 1809,
	1810, 1811, 0, 0, 0, 0, 0, 0, 1791, 0,
	0, 0, 3296, 0, 0, 0, 1081, 0, 0, 0,
	0, 4321, 267, 3000, 0, 0, 0, 0, 0, 2982,
	0, 0, 2002, 0, 0, 0, 0, 0, 2973, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 0,
	267, 0, 267, 0, 0, 4685, 1813, 1815, 3302, 267,
	0, 4687, 4321, 0, 0, 0, 0, 0, 0, 3045,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2864,
	0, 689, 1800, 1801, 0, 1836, 0, 2455, 0, 0,
	3074, 892, 0, 2864, 2864, 0, 0, 0, 0, 0,
	3296, 0, 0, 1324, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 1806, 0, 0, 0, 0,
	0, 0, 2693, 2693, 0, 0, 0, 0, 0, 0,
	0, 267, 1310, 267, 0, 0, 0, 0, 0, 0,
	1516, 0, 1516, 1320, 267, 0, 0, 1310, 0, 1310,
	0, 1310, 0, 0, 0, 2455, 0, 0, 0, 0,
	0, 0, 0, 3297, 0, 73, 0, 1492, 1492, 0,
	0, 0, 0, 1836, 0, 0, 0, 4300, 0, 4302,
	0, 0, 74, 0, 0, 0, 2002, 0, 1836, 0,
	0, 0, 0, 267, 267, 267, 267, 1310, 78, 0,
	1310, 0, 267, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 2693, 2693, 2693, 2693, 2693, 2693, 2693, 2693,
	2693, 2693, 2693, 2693, 2693, 2693, 2693, 2693, 2693, 2693,
	2693, 2693, 0, 2693, 0, 0, 267, 0, 87, 0,
	1492, 0, 0, 1812, 267, 0, 0, 0, 0, 0,
	0, 3297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4348, 0, 2264, 1807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 886, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 0, 107, 0, 0, 0, 0, 93, 104, 0,
	0, 0, 0, 3292, 3293, 3294, 0, 0, 880, 0,
	3291, 3289, 3290, 3282, 3283, 3284, 3285, 3287, 3288, 0,
	0, 0, 0, 0, 1838, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 73, 0, 883, 882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 74, 0, 0, 0, 94, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 78, 0,
	1516, 4434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2698, 2698, 0, 0, 1315, 0,
	0, 3292, 3293, 3294, 0, 0, 0, 0, 3291, 3289,
	3290, 3282, 3283, 3284, 3285, 3287, 3288, 0, 87, 0,
	1803, 1799, 0, 1796, 1794, 1795, 1787, 1788, 1789, 1790,
	1792, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3280, 3281, 0, 3298, 3299, 3300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 886, 0,
	0, 0, 0, 0, 3708, 0, 0, 0, 0, 0,
	49, 0, 107, 0, 0, 0, 0, 93, 104, 0,
	0, 4329, 0, 0, 2698, 2698, 2698, 2698, 2698, 2698,
	2698, 2698, 2698, 2698, 2698, 2698, 2698, 2698, 2698, 2698,
	2698, 2698, 2698, 2698, 0, 2698, 1492, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 3295, 0, 0,
	0, 0, 0, 0, 267, 0, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 94, 4369, 0, 0,
	267, 0, 0, 0, 0, 689, 0, 0, 0, 0,
	689, 0, 0, 689, 0, 0, 689, 689, 0, 0,
	0, 0, 689, 0, 0, 0, 0, 186, 100, 0,
	267, 103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 887, 0, 0, 1516, 0,
	149, 3286, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 267, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1324, 1324, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	0, 0, 1324, 2864, 2864, 267, 0, 1980, 0, 0,
	0, 0, 0, 2864, 0, 0, 3441, 0, 0, 0,
	0, 153, 0, 0, 2864, 3441, 3302, 2864, 3441, 0,
	0, 3441, 97, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 267, 267, 1980, 0,
	267, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 4516, 3296, 0,
	1980, 0, 267, 0, 3502, 3502, 0, 0, 0, 1310,
	0, 0, 0, 0, 0, 0, 0, 186, 100, 0,
	0, 103, 0, 1613, 0, 0, 0, 0, 0, 2864,
	0, 2864, 0, 3528, 2864, 1980, 0, 4538, 2864, 1980,
	0, 0, 775, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 887, 0, 0, 0, 0,
	149, 0, 4558, 0, 0, 0, 0, 1310, 0, 0,
	0, 1836, 0, 0, 267, 0, 0, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 3280, 3281, 0, 3298,
	3299, 3300, 267, 3564, 0, 237, 3566, 2864, 0, 0,
	267, 0, 0, 0, 267, 0, 0, 1320, 3707, 0,
	0, 1783, 1784, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 267, 0, 0, 0, 0,
	3045, 0, 0, 1310, 1814, 267, 190, 0, 2864, 0,
	689, 1786, 0, 0, 236, 0, 0, 2864, 0, 3297,
	0, 0, 0, 0, 1783, 1784, 0, 229, 0, 0,
	1315, 3295, 0, 0, 0, 0, 230, 1839, 267, 3045,
	0, 0, 3045, 0, 0, 0, 1785, 1814, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 881, 0, 0, 0, 0, 1783, 1784,
	0, 1816, 1817, 1818, 1827, 1828, 1829, 3669, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 1785,
	1820, 1814, 2264, 0, 3675, 0, 0, 1516, 1786, 0,
	1310, 267, 0, 267, 0, 0, 0, 1833, 0, 1310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 3286, 0, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 3280, 3281, 267,
	3298, 3299, 3300, 1805, 0, 0, 0, 0, 0, 0,
	1791, 0, 1802, 0, 0, 0, 0, 0, 0, 3292,
	3293, 3294, 0, 0, 0, 0, 3291, 3289, 3290, 3282,
	3283, 3284, 3285, 3287, 3288, 0, 0, 0, 1938, 0,
	0, 0, 0, 0, 2693, 0, 0, 0, 0, 0,
	3302, 0, 0, 1791, 0, 0, 0, 3741, 1813, 1815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1808, 1809, 1810,
	1811, 0, 3296, 0, 0, 0, 0, 1791, 0, 0,
	2693, 1813, 1815, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 1806, 1088, 1088,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 1473, 0, 1834, 0,
	1473, 0, 0, 0, 0, 1813, 1815, 0, 0, 0,
	0, 0, 0, 0, 267, 267, 0, 0, 0, 0,
	1806, 0, 1830, 0, 1831, 1836, 3286, 0, 0, 0,
	0, 1800, 1801, 0, 0, 0, 0, 689, 689, 0,
	0, 3280, 3281, 0, 3298, 3299, 3300, 0, 0, 1822,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 1516, 0, 0, 1806, 0, 0, 3303, 0, 0,
	0, 0, 0, 0, 0, 1516, 1516, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1073,
	0, 3302, 0, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3297, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 3295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1821, 0, 1807, 0,
	0, 0, 0, 3296, 0, 0, 0, 1836, 2264, 0,
	2693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 775, 0, 0, 0, 0, 0, 0, 1315, 0,
	0, 0, 0, 0, 0, 0, 2698, 0, 0, 0,
	0, 1807, 0, 0, 0, 0, 0, 0, 0, 0,
	2693, 0, 0, 0, 3502, 0, 1838, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 2693, 1836, 0, 0, 0,
	3286, 0, 0, 0, 0, 1807, 0, 0, 0, 1980,
	0, 267, 2698, 0, 0, 705, 705, 1320, 0, 1838,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 1825, 3292, 3293, 3294, 0, 0, 0, 267,
	3291, 3289, 3290, 3282, 3283, 3284, 3285, 3287, 3288, 267,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 267,
	0, 0, 0, 1838, 0, 3302, 1794, 1795, 1787, 1788,
	1789, 1790, 1792, 1793, 3297, 0, 0, 0, 2864, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 3074, 3074,
	0, 0, 0, 0, 892, 892, 2864, 0, 0, 0,
	3045, 3045, 0, 0, 892, 2864, 0, 3296, 1796, 1794,
	1795, 1787, 1788, 1789, 1790, 1792, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 1798, 1804, 1826, 1803,
	1799, 0, 1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792,
	1793, 0, 0, 0, 0, 4086, 0, 0, 0, 4085,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2698, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4078, 1819, 0, 0, 0, 0,
	0, 1819, 0, 0, 3292, 3293, 3294, 1819, 0, 0,
	0, 3291, 3289, 3290, 3282, 3283, 3284, 3285, 3287, 3288,
	0, 0, 2698, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2698, 3297, 0,
	0, 0, 0, 1783, 1784, 0, 0, 267, 0, 1827,
	1828, 1829, 0, 1516, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 267, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 1320, 0, 0, 1819, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 1320, 0, 0, 1839,
	1819, 0, 0, 2864, 2864, 1819, 3502, 2864, 1785, 1492,
	0, 0, 0, 0, 4164, 0, 4164, 1516, 1805, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 2864, 0,
	3441, 788, 0, 0, 1516, 1516, 267, 1980, 0, 0,
	0, 0, 0, 1088, 0, 0, 0, 0, 0, 0,
	1980, 1473, 267, 1980, 0, 267, 799, 3502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 2864, 0, 2864, 267, 1819, 0, 3292, 3293,
	3294, 0, 0, 1783, 1784, 3291, 3289, 3290, 3282, 3283,
	3284, 3285, 3287, 3288, 0, 0, 0, 0, 0, 0,
	0, 0, 1808, 1809, 1810, 1811, 1814, 0, 0, 0,
	2864, 0, 1791, 1786, 1335, 4249, 1315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 1839,
	0, 1073, 1073, 1073, 0, 0, 0, 0, 1785, 793,
	1824, 0, 0, 1834, 0, 805, 0, 0, 1805, 0,
	1813, 1815, 0, 0, 0, 4164, 0, 1802, 1516, 798,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1800, 1801, 0, 0,
	0, 0, 0, 1473, 1518, 0, 1524, 0, 1530, 0,
	0, 0, 0, 0, 1822, 0, 0, 1819, 1819, 1819,
	1819, 1819, 1819, 1819, 1819, 0, 0, 797, 0, 1806,
	0, 3702, 0, 0, 0, 1783, 1784, 1819, 0, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 0,
	1819, 0, 1808, 1809, 1810, 1811, 0, 0, 1814, 0,
	0, 0, 1791, 0, 0, 1786, 0, 0, 0, 795,
	0, 0, 0, 0, 0, 1619, 0, 1624, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1633, 0, 1638,
	0, 1839, 2864, 0, 3441, 0, 2697, 4361, 0, 0,
	1785, 0, 1836, 0, 0, 0, 267, 0, 0, 1819,
	1813, 1815, 0, 0, 0, 1819, 4385, 0, 4385, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 804, 0,
	0, 0, 0, 0, 0, 0, 1800, 1801, 0, 0,
	0, 0, 775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3502, 0, 1310, 1703, 1812, 0, 1709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	1980, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4361, 0, 0,
	0, 0, 790, 0, 1791, 2864, 0, 1825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 794, 0, 1516, 0, 0, 1838, 0,
	0, 0, 1836, 0, 0, 0, 0, 4164, 4164, 0,
	0, 0, 1813, 1815, 0, 1840, 1841, 1842, 1843, 1844,
	1845, 1846, 1847, 0, 0, 267, 267, 0, 0, 0,
	749, 1473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 800, 0, 0, 1860, 3741,
	0, 792, 0, 0, 1873, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 1516, 0, 0, 1516, 3502, 4532,
	1823, 1806, 0, 0, 0, 0, 4361, 0, 0, 0,
	1807, 0, 0, 1826, 1803, 1799, 0, 1796, 1794, 1795,
	1787, 1788, 1789, 1790, 1792, 1793, 4164, 0, 789, 0,
	0, 0, 0, 0, 0, 0, 0, 1783, 1784, 0,
	0, 4164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1473, 0, 796, 0, 0, 0,
	1814, 0, 0, 267, 0, 0, 0, 1786, 1838, 0,
	751, 0, 0, 0, 1836, 705, 0, 0, 0, 0,
	0, 791, 0, 0, 0, 0, 0, 0, 0, 1932,
	1932, 1932, 4249, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 1785, 0, 802, 803, 0, 0, 4164, 0,
	267, 4164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3441, 0, 0, 1473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 1516,
	1473, 0, 1807, 0, 1803, 1799, 0, 1796, 1794, 1795,
	1787, 1788, 1789, 1790, 1792, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4385, 0,
	0, 267, 0, 0, 0, 0, 1791, 0, 0, 0,
	1838, 0, 0, 0, 1516, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 0, 0, 2864, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 1073, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 1813, 1815, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 0, 1473, 0, 1819, 0, 0,
	0, 1819, 1787, 1788, 1789, 1790, 1792, 1793, 0, 0,
	0, 0, 0, 1806, 0, 1819, 0, 0, 0, 0,
	0, 0, 267, 0, 1819, 1819, 1819, 1819, 1819, 1819,
	1819, 1819, 1819, 1819, 1819, 1819, 1819, 1819, 1819, 1819,
	1819, 1819, 1819, 1819, 1819, 1819, 1819, 1819, 1819, 1819,
	1819, 1819, 1819, 1819, 1819, 1819, 1819, 1819, 1819, 1819,
	0, 0, 0, 0, 4361, 1819, 0, 1819, 1819, 1819,
	1819, 0, 1473, 0, 0, 0, 0, 0, 0, 2697,
	2697, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 2864, 0, 0, 0, 0, 73, 0, 4164,
	0, 4164, 0, 0, 1516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	78, 0, 0, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 0,
	1516, 0, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 0, 0, 1819, 0,
	87, 1819, 0, 0, 1819, 0, 0, 1158, 0, 0,
	1819, 1819, 1819, 1819, 1819, 1819, 1819, 0, 0, 0,
	3074, 0, 0, 0, 0, 0, 0, 0, 0, 2864,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	886, 73, 1838, 46, 45, 3074, 0, 0, 0, 0,
	0, 0, 49, 0, 107, 0, 0, 0, 74, 93,
	104, 154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 78, 0, 1819, 0, 0, 3301,
	0, 2697, 2697, 2697, 2697, 67, 0, 0, 1819, 0,
	1819, 2368, 48, 0, 156, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 47, 0, 87, 0, 0, 0, 94, 0,
	0, 0, 0, 0, 0, 0, 2392, 0, 0, 0,
	0, 0, 0, 1795, 1787, 1788, 1789, 1790, 1792, 1793,
	50, 68, 0, 0, 0, 0, 0, 0, 0, 51,
	0, 0, 0, 0, 57, 0, 0, 0, 157, 0,
	2430, 0, 2434, 0, 0, 0, 49, 0, 107, 2448,
	0, 0, 0, 93, 104, 0, 2457, 2458, 2459, 2460,
	2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470,
	2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480,
	2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 0, 2498, 52, 2500, 2501, 2502, 2503, 2668,
	2669, 2670, 2671, 2664, 2665, 2666, 2667, 0, 0, 0,
	0, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 2527, 0, 0, 0, 1249, 0, 0, 0, 0,
	0, 0, 0, 1860, 0, 0, 0, 2578, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	0, 0, 0, 2608, 2611, 2614, 2617, 0, 0, 2623,
	2624, 2625, 2626, 2627, 2628, 2629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2644, 2645, 2646, 2647, 0, 0, 2689, 0, 2701,
	2703, 2708, 0, 0, 0, 0, 0, 0, 0, 186,
	100, 0, 0, 103, 2656, 2657, 2658, 2659, 2652, 2653,
	2654, 2655, 2660, 2661, 2662, 2663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 887, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 1819, 0, 1819, 0, 0, 53, 237, 0, 0,
	2640, 2641, 2642, 2643, 2648, 2649, 2650, 2651, 0, 0,
	0, 56, 0, 0, 0, 0, 59, 1473, 0, 0,
	0, 0, 0, 153, 0, 0, 69, 0, 0, 0,
	0, 0, 58, 186, 100, 0, 0, 103, 190, 0,
	0, 54, 0, 0, 0, 158, 236, 0, 0, 0,
	1473, 0, 0, 55, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 235, 0, 1473, 0, 0, 230, 0,
	0, 62, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1473, 155, 0, 0, 0, 1611, 0, 1783, 1784, 0,
	1816, 1817, 1818, 1827, 1828, 1829, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 1820,
	1814, 0, 1819, 0, 0, 0, 0, 1786, 1088, 0,
	0, 0, 0, 0, 0, 0, 1833, 153, 0, 0,
	0, 0, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 1839, 0, 0, 0, 0, 0, 0,
	236, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1805, 229, 0, 0, 1819, 1819, 0, 2697,
	2697, 1802, 230, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3301, 3301, 0, 0, 1819, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 0, 189,
	0, 0, 3, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 3003, 3004, 0, 3006, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 1473, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1808, 1809, 1810, 1811,
	0, 0, 0, 0, 0, 0, 1791, 0, 0, 2697,
	2697, 2697, 2697, 2697, 2697, 2697, 2697, 2697, 2697, 2697,
	2697, 2697, 2697, 2697, 2697, 2697, 2697, 2697, 2697, 0,
	2697, 3301, 3301, 3301, 3301, 0, 0, 1473, 0, 0,
	0, 0, 0, 0, 1824, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 1813, 1815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 1830, 0, 1831, 0, 0, 0, 0, 0, 0,
	1800, 1801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1249, 0, 0, 0, 0, 0, 1822, 3135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1249, 0,
	0, 0, 1249, 0, 0, 0, 0, 0, 0, 1249,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 1841, 0, 0,
	0, 0, 0, 0, 0, 1821, 0, 0, 0, 0,
	0, 1473, 0, 1249, 1473, 0, 1836, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3189, 3190, 0, 0, 0, 0, 3196, 1249,
	0, 0, 0, 0, 0, 0, 1249, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 3210, 3211, 0,
	1249, 0, 0, 2578, 0, 0, 0, 0, 0, 0,
	1473, 0, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1473, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 3220, 0,
	0, 0, 0, 0, 0, 1249, 0, 0, 0, 0,
	0, 0, 0, 0, 3234, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 3246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 1798, 1804, 1826, 1803, 1799,
	1473, 1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793,
	0, 1819, 1819, 0, 4639, 1819, 3301, 3301, 1819, 0,
	0, 0, 1819, 2708, 2708, 2708, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 1932, 0,
	0, 0, 1819, 0, 0, 0, 3339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 1819, 1819, 1819, 1819,
	0, 0, 0, 0, 0, 1819, 0, 1819, 0, 0,
	3301, 3301, 3301, 3301, 3301, 3301, 3301, 3301, 3301, 3301,
	3301, 3301, 3301, 3301, 3301, 3301, 3301, 3301, 3301, 3301,
	0, 0, 0, 3301, 0, 0, 1819, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1073, 0, 0, 0, 0,
	0, 1249, 0, 1249, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 0, 1249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3460, 0,
	0, 0, 0, 0, 0, 0, 0, 2015, 0, 0,
	0, 0, 0, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 0, 719,
	0, 0, 0, 0, 0, 0, 0, 0, 1249, 0,
	0, 1783, 1784, 1473, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1249, 1814, 0, 0, 0, 720, 1473,
	0, 1786, 0, 0, 0, 1819, 0, 0, 0, 721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	722, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1805, 0, 0, 0,
	0, 0, 741, 1819, 1819, 1802, 0, 0, 1819, 1819,
	0, 0, 1819, 1819, 0, 0, 0, 1819, 0, 0,
	0, 1819, 723, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2697, 0, 0, 0, 724, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3697,
	0, 0, 0, 0, 0, 0, 0, 725, 0, 0,
	726, 1473, 0, 1473, 0, 1249, 1249, 0, 0, 0,
	1808, 1809, 1810, 1811, 0, 1249, 0, 750, 0, 0,
	1791, 0, 0, 0, 0, 0, 0, 2697, 0, 0,
	0, 1473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2448, 0, 0, 0, 0, 0, 3694, 3695, 1813, 1815,
	3698, 0, 0, 0, 3701, 0, 0, 0, 0, 0,
	0, 0, 0, 3705, 0, 0, 0, 0, 0, 0,
	0, 1473, 3712, 0, 1800, 1801, 0, 3339, 0, 0,
	0, 737, 0, 0, 0, 0, 0, 1473, 0, 1249,
	0, 1249, 3725, 1249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 1249,
	1249, 0, 3748, 3749, 0, 3750, 3751, 3752, 0, 0,
	1249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1249, 3758, 1249, 1249, 1249, 3760, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	747, 0, 728, 0, 0, 0, 0, 1473, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3789, 3790, 0, 1819, 1819, 1819, 0, 0, 0, 0,
	1836, 748, 0, 729, 1819, 1819, 3301, 2697, 3801, 0,
	0, 0, 0, 1819, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 3810, 0, 0, 0, 0, 0, 0,
	0, 0, 1473, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 749, 0, 0, 3301, 2697, 0, 0,
	0, 730, 0, 0, 0, 1812, 745, 746, 743, 0,
	0, 0, 1473, 1819, 738, 0, 0, 731, 0, 0,
	0, 1819, 2697, 0, 0, 0, 0, 0, 1807, 1819,
	0, 2015, 2015, 1249, 1122, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3858, 1473, 0, 0, 0, 0, 0, 732,
	0, 739, 0, 0, 0, 0, 0, 0, 0, 0,
	733, 3869, 0, 0, 0, 0, 0, 0, 1473, 0,
	266, 266, 266, 0, 734, 0, 1838, 0, 0, 742,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 751, 0, 3898, 0, 0, 0, 818,
	0, 0, 0, 0, 736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1088, 1249, 0, 0, 0,
	0, 0, 0, 0, 0, 818, 0, 0, 0, 0,
	0, 0, 0, 3301, 0, 0, 1473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 3301, 0, 0, 1819, 0,
	0, 0, 1803, 1799, 0, 1796, 1794, 1795, 1787, 1788,
	1789, 1790, 1792, 1793, 0, 3301, 0, 1783, 1784, 1249,
	1816, 1817, 1818, 1827, 1828, 1829, 1249, 0, 0, 0,
	0, 0, 0, 0, 0, 1249, 0, 0, 1473, 1820,
	1814, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 1249, 1819, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1932, 0, 0, 0,
	0, 0, 0, 1839, 0, 4008, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1805, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1249, 1249, 4056, 4057, 0, 0, 0,
	0, 4061, 4062, 0, 0, 0, 4065, 4066, 0, 0,
	0, 0, 1819, 0, 4070, 0, 1808, 1809, 1810, 1811,
	0, 0, 0, 0, 0, 4074, 1791, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 1249, 0, 0,
	0, 4079, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1088, 1088, 0, 0, 0,
	0, 0, 0, 0, 1824, 0, 0, 1834, 0, 0,
	0, 2015, 0, 0, 1813, 1815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 0, 1831, 0, 0, 0, 0, 0, 0,
	1800, 1801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1249, 0, 0, 0, 1822, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1249, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	1088, 0, 1819, 0, 0, 0, 0, 1832, 1249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 1249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1249, 0, 1249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 1783, 1784, 0, 1816, 1817, 1818,
	1827, 1828, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 1814, 0, 0,
	0, 0, 1838, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 0, 4316, 4317, 4318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 1785,
	2448, 0, 0, 4327, 4328, 0, 0, 0, 0, 1805,
	0, 0, 0, 0, 0, 0, 0, 0, 1802, 0,
	0, 4336, 4339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 1798, 1804, 1826, 1803, 1799,
	0, 1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793,
	0, 266, 0, 266, 266, 0, 0, 266, 4084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4386, 0, 0, 0, 0, 0, 0, 0,
	0, 4394, 0, 1808, 1809, 1810, 1811, 0, 0, 0,
	0, 0, 0, 1791, 0, 4402, 0, 0, 1073, 0,
	0, 0, 0, 0, 266, 0, 266, 266, 0, 0,
	266, 266, 4411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 818,
	0, 1824, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 1813, 1815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	1831, 0, 0, 0, 0, 0, 0, 1800, 1801, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 266,
	0, 0, 0, 0, 0, 1822, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 0, 266, 266, 0, 0, 0, 0,
	0, 1783, 1784, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 1832, 0, 0, 0, 1249, 1249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 0, 1249, 0, 0, 1839, 0, 0,
	0, 0, 0, 1836, 0, 0, 1785, 4537, 0, 0,
	0, 4541, 1249, 0, 0, 0, 1805, 0, 0, 0,
	0, 0, 0, 0, 1249, 1802, 0, 1249, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2015, 0,
	0, 0, 1249, 0, 0, 0, 266, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3696,
	0, 1807, 0, 0, 0, 0, 0, 0, 1073, 1073,
	0, 0, 0, 0, 0, 0, 0, 0, 4596, 0,
	1808, 1809, 1810, 1811, 0, 0, 0, 0, 1825, 0,
	1791, 0, 0, 0, 1249, 0, 0, 0, 0, 2015,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2448, 1249, 0, 0, 0, 0, 1813, 1815,
	0, 4339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1249, 0, 1249, 0, 0,
	0, 0, 0, 0, 1800, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1249,
	0, 0, 0, 1073, 0, 0, 0, 0, 0, 0,
	1249, 1823, 0, 0, 1249, 0, 0, 1806, 0, 0,
	0, 1797, 1798, 1804, 1826, 1803, 1799, 0, 1796, 1794,
	1795, 1787, 1788, 1789, 1790, 1792, 1793, 0, 0, 1249,
	0, 3255, 0, 0, 0, 3256, 0, 0, 0, 0,
	0, 0, 0, 1249, 0, 1249, 0, 0, 0, 1249,
	0, 0, 0, 4715, 4715, 4715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1249, 1954, 0,
	1245, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	1836, 0, 1249, 0, 4736, 0, 0, 0, 0, 0,
	266, 1954, 266, 0, 0, 0, 0, 0, 818, 1249,
	0, 0, 0, 0, 0, 818, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1249, 1249, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 1812, 0, 0, 0, 266,
	0, 4715, 0, 0, 0, 0, 0, 0, 0, 1249,
	0, 0, 0, 0, 0, 0, 0, 0, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1249, 0, 0, 1249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2015, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4715, 4871, 1249, 0, 0, 0, 0, 0, 0, 4875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2015,
	2015, 0, 1803, 1799, 0, 1796, 1794, 1795, 1787, 1788,
	1789, 1790, 1792, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2015, 2015,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 818, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2015, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1249, 1249,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 1249, 0, 0, 0, 0, 0, 0, 266,
	0, 266, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 266, 0, 1238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 818, 266, 0, 266, 0,
	266, 0, 266, 0, 266, 0, 0, 0, 0, 262,
	262, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 1784, 0, 1816, 1817, 1818, 1827, 1828, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 1814, 0, 266, 266, 266, 266,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 1249,
	0, 0, 0, 0, 1249, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1805, 0, 2015, 0,
	0, 0, 0, 0, 0, 1802, 0, 0, 0, 0,
	0, 0, 1135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1249, 1249, 1249, 0, 268, 268,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1249, 1249, 1249, 0, 0, 0, 0, 0, 0,
	1808, 1809, 1810, 1811, 0, 0, 0, 268, 0, 1249,
	1791, 0, 0, 0, 0, 1249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 1249, 0, 0, 0, 0, 0, 0, 1824, 0,
	0, 1834, 2015, 0, 0, 0, 0, 0, 1813, 1815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 1245, 1831, 0, 0,
	0, 0, 0, 0, 1800, 1801, 0, 0, 0, 0,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1249, 0, 0, 0, 0, 0, 0, 0, 1249,
	0, 1832, 0, 1249, 0, 1249, 0, 0, 0, 0,
	0, 0, 1249, 266, 0, 0, 0, 0, 0, 1821,
	0, 0, 0, 1249, 1249, 0, 0, 0, 266, 0,
	1836, 266, 0, 1249, 0, 266, 0, 266, 0, 0,
	0, 0, 0, 0, 266, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 1249, 0,
	1249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1249, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 1249, 0, 1249, 0, 0, 1249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1807, 1249,
	0, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 1783, 1784, 0,
	0, 0, 0, 0, 0, 1825, 0, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 1249, 1249, 0,
	1814, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 1249, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 1249,
	0, 0, 0, 1839, 1249, 0, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1805, 818, 0, 0, 0, 0, 0, 1249,
	0, 1802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1249, 1249, 1249, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 818, 1249, 0, 0, 0, 1823, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 1797, 1798,
	1804, 1826, 1803, 1799, 0, 1796, 1794, 1795, 1787, 1788,
	1789, 1790, 1792, 1793, 1249, 3195, 0, 0, 2574, 0,
	0, 0, 2575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2015, 1808, 1809, 1810, 1811,
	0, 0, 0, 266, 0, 0, 1791, 0, 0, 0,
	0, 0, 0, 0, 0, 1249, 0, 1249, 0, 0,
	0, 0, 266, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	1249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 1815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1296, 0, 1296, 1296, 0, 2015, 0, 0, 0, 0,
	1800, 1801, 0, 0, 266, 266, 266, 266, 0, 0,
	0, 0, 0, 266, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1249, 0,
	0, 0, 0, 1806, 0, 1249, 0, 0, 0, 0,
	0, 0, 0, 1384, 0, 1249, 1249, 266, 0, 1490,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1249, 0, 0, 1249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 1249, 1249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 268, 268, 1617, 1618, 268, 0, 1333, 0, 2015,
	0, 1783, 1784, 0, 1816, 1817, 1818, 1827, 1828, 1829,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 1814, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 1807, 0, 0, 0, 0, 0,
	1833, 0, 268, 1333, 268, 268, 0, 1333, 268, 268,
	1249, 0, 0, 0, 1333, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 1249, 1785, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 1805, 0, 0, 0,
	0, 0, 0, 0, 0, 1802, 0, 0, 1333, 0,
	0, 0, 1838, 1730, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1333, 0, 268, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1249, 0, 1333, 1249, 0, 0, 0, 1249,
	0, 1333, 268, 268, 0, 0, 0, 0, 0, 1249,
	1249, 0, 0, 0, 0, 1333, 0, 0, 0, 0,
	1808, 1809, 1810, 1811, 0, 0, 1249, 0, 0, 0,
	1791, 0, 0, 0, 0, 1245, 0, 0, 1803, 1799,
	0, 1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793,
	0, 1245, 0, 0, 0, 836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	1333, 1834, 0, 0, 0, 838, 0, 0, 1813, 1815,
	839, 1954, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 1831, 0, 0,
	0, 0, 268, 0, 1800, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 840,
	0, 857, 1822, 0, 268, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 266, 266, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 841, 0, 1111, 109,
	0, 842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 866, 0, 0, 0, 0, 0, 843,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 864, 0, 0, 0, 0, 0, 1821,
	0, 0, 0, 1970, 0, 0, 0, 266, 266, 0,
	1836, 266, 0, 0, 0, 0, 837, 0, 1954, 1981,
	0, 1490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 1783, 1784, 844, 0,
	0, 845, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 868, 0, 0, 0, 0, 750, 1814,
	0, 1296, 0, 0, 0, 1812, 1786, 0, 1490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1807, 0,
	0, 0, 1839, 1249, 0, 1249, 0, 0, 0, 0,
	0, 1785, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 1805, 0, 0, 0, 1825, 0, 0, 0, 0,
	1802, 0, 0, 818, 0, 0, 0, 1048, 0, 0,
	0, 266, 867, 0, 0, 266, 0, 0, 1068, 0,
	0, 0, 862, 0, 0, 0, 1838, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 1333, 0, 0, 1245, 0, 268, 268,
	268, 0, 0, 0, 3188, 0, 268, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 1232, 0, 0, 0,
	0, 0, 0, 0, 0, 1808, 1809, 1810, 1811, 266,
	0, 0, 846, 0, 0, 1791, 0, 0, 0, 0,
	268, 0, 0, 848, 0, 0, 0, 268, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 1798,
	1804, 1826, 1803, 1799, 0, 1796, 1794, 1795, 1787, 1788,
	1789, 1790, 1792, 1793, 849, 0, 0, 0, 0, 0,
	0, 0, 3710, 1813, 1815, 0, 0, 0, 0, 0,
	0, 0, 266, 1333, 266, 0, 0, 0, 0, 0,
	0, 0, 858, 0, 0, 0, 0, 0, 0, 1800,
	1801, 0, 0, 0, 749, 0, 0, 0, 1333, 0,
	0, 0, 0, 0, 0, 0, 0, 835, 0, 859,
	266, 0, 0, 0, 0, 0, 0, 0, 850, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2250, 0, 0, 0,
	2257, 0, 0, 856, 0, 0, 0, 0, 0, 0,
	0, 0, 2270, 0, 0, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 852, 871, 0, 870, 2282, 0,
	2282, 853, 0, 0, 0, 0, 2289, 0, 0, 0,
	0, 0, 0, 0, 0, 854, 0, 0, 0, 0,
	863, 0, 0, 0, 0, 1836, 872, 0, 869, 0,
	0, 0, 0, 0, 751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2257, 0, 0,
	2316, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	1333, 1333, 268, 0, 0, 0, 0, 0, 0, 0,
	1333, 2336, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 2352, 0, 2354, 0, 2356,
	0, 2358, 0, 2359, 0, 1245, 1245, 0, 0, 0,
	0, 0, 0, 1807, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 2385, 2386, 2387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 268,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 1838, 0, 0, 1333, 0, 1333, 0, 1333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1333, 1333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 268, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 1333, 0, 1333,
	1333, 1333, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 268, 0, 268, 0, 268, 0,
	268, 0, 268, 0, 0, 0, 0, 1803, 1799, 0,
	1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 268, 268, 268, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 109, 0, 0, 1333, 0,
	266, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1245, 0, 0, 0, 0, 2765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 109, 0, 109,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2813, 0, 0,
	1296, 0, 0, 0, 1296, 0, 1296, 0, 0, 0,
	1068, 109, 109, 0, 0, 0, 0, 0, 0, 735,
	0, 0, 0, 2270, 0, 0, 109, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 718,
	109, 1333, 0, 0, 719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 1333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 721, 0, 0, 0, 1245, 0,
	0, 0, 0, 0, 109, 0, 1245, 0, 0, 0,
	0, 0, 0, 0, 0, 722, 0, 0, 0, 1954,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 741, 0, 1490,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 268,
	0, 0, 0, 268, 0, 268, 0, 723, 0, 0,
	0, 0, 268, 268, 0, 1954, 0, 1954, 1333, 1333,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	724, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1048,
	2257, 0, 725, 266, 0, 726, 266, 0, 0, 2270,
	1783, 1784, 1333, 1816, 1817, 1818, 1827, 1828, 1829, 0,
	1853, 0, 750, 0, 0, 272, 266, 0, 0, 0,
	268, 0, 1820, 1814, 0, 0, 0, 0, 1859, 0,
	1786, 0, 1865, 268, 0, 0, 0, 740, 0, 1833,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 3107, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 266, 0, 0,
	0, 3118, 0, 3121, 0, 1805, 0, 266, 268, 1333,
	0, 0, 0, 0, 1802, 0, 0, 0, 0, 0,
	810, 0, 0, 0, 0, 1333, 737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3150, 1490, 3152, 1490, 0, 0, 268,
	0, 268, 3158, 1333, 0, 0, 0, 0, 268, 0,
	0, 0, 1952, 0, 1955, 0, 109, 0, 0, 1808,
	1809, 1810, 1811, 0, 0, 0, 0, 728, 0, 1791,
	0, 0, 0, 0, 1333, 0, 1296, 0, 0, 0,
	0, 0, 0, 0, 3186, 0, 0, 0, 1333, 0,
	1333, 0, 0, 0, 0, 0, 748, 0, 729, 0,
	0, 268, 0, 0, 0, 1333, 0, 1824, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 1813, 1815, 0,
	268, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 1830, 0, 1831, 266, 749, 0,
	0, 0, 0, 1800, 1801, 0, 730, 0, 0, 0,
	0, 745, 746, 743, 0, 0, 0, 0, 0, 738,
	0, 1822, 731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 0, 0, 0,
	0, 0, 268, 268, 268, 268, 0, 0, 0, 0,
	1127, 268, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 732, 0, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 268, 0, 0, 0, 734,
	0, 0, 0, 268, 742, 0, 0, 0, 1821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 751, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 1954,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 266, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1825, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1068, 0, 1068, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	1296, 266, 1954, 0, 1490, 1490, 0, 1823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 1798, 1804,
	1826, 1803, 1799, 0, 1796, 1794, 1795, 1787, 1788, 1789,
	1790, 1792, 1793, 0, 0, 3429, 0, 0, 0, 0,
	0, 3258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 3479, 3481, 0, 0,
	2270, 0, 0, 0, 0, 0, 0, 1333, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 1333, 1048, 0, 0, 1048, 1048, 268,
	0, 0, 0, 268, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 1333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3577, 0, 0, 2516, 3581, 0, 0, 0, 0, 0,
	1331, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1068, 0, 268, 268, 0, 1333, 268,
	0, 0, 0, 1859, 0, 0, 268, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 268, 1333, 0, 0, 0, 1390, 0, 0, 0,
	1390, 0, 0, 0, 0, 0, 0, 1331, 3634, 0,
	0, 0, 0, 0, 1333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 0, 0, 0, 1333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 1331, 1954, 0, 0, 0, 0, 0, 0, 0,
	1232, 0, 0, 0, 1333, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 1955, 1331, 1333, 0,
	1333, 3679, 0, 1490, 1333, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 1331, 0, 268,
	0, 0, 1333, 268, 1331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 1333, 1331, 3692,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1333,
	1333, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 1331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 1784, 0, 1816, 1817,
	1818, 1827, 1828, 1829, 0, 0, 0, 0, 1333, 0,
	268, 1333, 268, 0, 0, 1332, 0, 1820, 1814, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 1391, 0, 0, 0, 1391, 0, 0, 0, 0,
	1805, 0, 1332, 0, 0, 0, 0, 0, 0, 1802,
	0, 0, 0, 0, 0, 0, 0, 1333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1333, 0, 1332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 1332, 0, 109, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1332, 0, 1808, 1809, 1810, 1811, 0, 1332,
	0, 0, 0, 0, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 1332, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 109, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 1813, 1815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1332, 1830,
	0, 1831, 0, 0, 0, 0, 0, 1333, 1800, 1801,
	0, 0, 0, 0, 0, 0, 1390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1822, 0, 0, 810,
	0, 2270, 0, 0, 109, 0, 810, 0, 0, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 2270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2270, 0, 0, 0, 0, 3990,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 0, 1331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1390, 0, 0, 0, 0, 0, 0, 0, 4041,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2516, 0, 0, 1812,
	0, 0, 0, 0, 1333, 0, 0, 0, 0, 1333,
	268, 0, 0, 0, 0, 0, 0, 1859, 0, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 1825,
	0, 0, 0, 268, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 1333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 1333,
	1333, 1333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1331, 1331, 0, 1333, 1333, 1333, 0,
	0, 0, 0, 1390, 0, 0, 0, 0, 0, 0,
	0, 1391, 0, 0, 1333, 0, 0, 0, 268, 0,
	1333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 1333, 0, 0, 0,
	0, 0, 1797, 1798, 1804, 1826, 1803, 1799, 0, 1796,
	1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 3257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4183, 1331, 0, 1331,
	0, 1331, 0, 0, 0, 0, 0, 0, 0, 1232,
	0, 1332, 2270, 0, 0, 0, 0, 1331, 1331, 0,
	0, 0, 0, 0, 0, 1232, 0, 0, 1331, 0,
	0, 0, 0, 0, 0, 0, 1391, 0, 0, 0,
	1331, 0, 1331, 1331, 1331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 810, 0, 1333, 0,
	1333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2270, 0, 1333, 1333,
	0, 0, 0, 0, 0, 0, 4271, 0, 1333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 1333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1333, 0,
	1333, 268, 0, 1333, 268, 0, 0, 0, 1332, 1332,
	0, 1390, 109, 109, 1333, 109, 109, 109, 1391, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1333, 1333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 109, 0, 109, 109, 109, 0,
	0, 0, 1333, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 1333, 268, 0, 0, 0, 1333,
	0, 0, 0, 0, 0, 0, 4371, 0, 0, 0,
	0, 0, 0, 0, 1390, 0, 0, 0, 0, 0,
	0, 0, 1332, 0, 1332, 0, 1332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1333, 1333, 1333, 0,
	0, 0, 1332, 1332, 0, 0, 0, 0, 0, 1333,
	0, 0, 0, 1332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1332, 0, 1332, 1332, 1332,
	0, 0, 2270, 0, 0, 0, 0, 0, 0, 1333,
	0, 0, 0, 0, 1390, 0, 0, 0, 0, 0,
	1232, 0, 0, 1068, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 109, 0,
	1390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 0, 1333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4506, 1490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 1784, 0, 1816, 1817,
	1818, 1827, 1828, 1829, 0, 0, 1391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 1814, 0,
	0, 1331, 1331, 1333, 0, 1786, 0, 0, 0, 0,
	1333, 268, 0, 0, 1833, 0, 0, 0, 0, 0,
	1333, 1333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 1390, 0, 0, 0, 0,
	1805, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	0, 0, 0, 0, 0, 1333, 0, 0, 1333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 268, 0, 0, 0, 0,
	4601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1808, 1809, 1810, 1811, 1331, 0,
	0, 0, 0, 0, 1791, 0, 0, 0, 0, 1391,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1232,
	1232, 0, 0, 0, 0, 1391, 0, 0, 0, 0,
	0, 0, 1824, 0, 810, 1834, 1331, 0, 0, 0,
	0, 0, 1813, 1815, 0, 0, 0, 0, 0, 0,
	0, 4653, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 1831, 268, 0, 0, 0, 0, 1331, 1800, 1801,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 0, 1331, 0, 0, 1822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4692, 1331, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 1333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1333, 1333, 1332, 1332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1333, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1821, 0, 0, 0, 0, 0, 0,
	1391, 0, 4756, 0, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 1391, 0, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1332, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 1332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 1332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1332, 0, 1332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1332, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 1798, 1804, 1826, 1803, 1799, 0, 1796,
	1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 3254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1783, 1784, 0, 1816, 1817, 1818,
	1827, 1828, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 1814, 0, 0,
	0, 0, 0, 0, 1786, 0, 109, 0, 0, 0,
	0, 0, 1232, 1833, 0, 0, 0, 0, 0, 0,
	1232, 0, 0, 0, 0, 0, 0, 1390, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1805,
	0, 0, 0, 0, 0, 0, 0, 0, 1802, 0,
	1390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1808, 1809, 1810, 1811, 0, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 1824, 0, 0, 1834, 0, 0, 0, 0, 0,
	109, 1813, 1815, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 0, 0, 0, 0, 0, 0, 1830, 0,
	1831, 0, 0, 109, 0, 0, 0, 1800, 1801, 0,
	0, 0, 0, 1331, 0, 1331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1390, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 1331, 0,
	0, 0, 1331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1331, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 1331, 1391, 1331, 0, 0, 0, 1390, 0, 0,
	0, 0, 1821, 0, 810, 0, 0, 0, 0, 0,
	0, 0, 0, 1836, 0, 1331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1391, 0, 0, 0, 0,
	1331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1391, 0, 0, 1812, 0,
	0, 0, 1331, 1331, 0, 0, 0, 0, 0, 0,
	0, 1332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 0, 0, 0, 0, 0, 1331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 1332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1390, 0, 0, 1390, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2516, 0, 0, 0, 1332, 0,
	1332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1391, 0, 0, 0, 0, 0, 0, 0,
	1390, 1823, 0, 1332, 0, 0, 0, 1332, 0, 0,
	0, 1797, 1798, 1804, 1826, 1803, 1799, 1390, 1796, 1794,
	1795, 1787, 1788, 1789, 1790, 1792, 1793, 0, 0, 0,
	0, 0, 1332, 0, 0, 3253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1332, 0, 1332, 0,
	0, 0, 1391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1332, 1332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1390, 0, 1332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 1784, 0, 1816, 1817, 1818, 1827, 1828, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 1814, 0, 1391, 0, 0, 1391,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1805, 0, 0, 0,
	0, 0, 0, 0, 0, 1802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 1391, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1331, 0, 0,
	0, 0, 1331, 0, 0, 0, 0, 0, 0, 0,
	1808, 1809, 1810, 1811, 0, 0, 0, 0, 0, 0,
	1791, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 1784, 0, 1816, 1817, 1818, 1827, 1828,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 1814, 0, 1331, 1824, 0,
	0, 1834, 1786, 0, 0, 0, 0, 0, 1813, 1815,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 1331, 1331, 1830, 0, 1831, 1839, 0,
	0, 0, 0, 0, 1800, 1801, 0, 1785, 0, 1331,
	1331, 1331, 0, 0, 0, 1391, 0, 1805, 0, 0,
	0, 0, 1822, 0, 0, 0, 1802, 1331, 0, 0,
	0, 0, 0, 1390, 0, 0, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	0, 1808, 1809, 1810, 1811, 0, 0, 0, 0, 0,
	1836, 1791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 1813,
	1815, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 1831, 0,
	0, 1390, 1332, 1390, 0, 1800, 1801, 1332, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 1331, 1822, 0, 0, 0, 0, 0, 0,
	0, 1390, 0, 0, 0, 1825, 0, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1332, 0, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 1832, 0, 0, 0, 0, 1332, 1332, 1332,
	0, 1390, 0, 1331, 0, 0, 1331, 0, 0, 0,
	1821, 0, 0, 0, 1332, 1332, 1332, 1390, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1332, 0, 0, 0, 0, 0, 1391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 1331, 1331, 0, 1797, 1798,
	1804, 1826, 1803, 1799, 1391, 1796, 1794, 1795, 1787, 1788,
	1789, 1790, 1792, 1793, 0, 1331, 1812, 0, 0, 0,
	0, 0, 3252, 0, 0, 0, 0, 1390, 0, 0,
	0, 0, 1331, 0, 0, 0, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1825, 0, 0, 1331,
	1331, 1331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1391, 0, 1391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1332, 1332, 0, 0,
	0, 0, 0, 1390, 0, 1331, 1391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 1390, 1797,
	1798, 1804, 1826, 1803, 1799, 0, 1796, 1794, 1795, 1787,
	1788, 1789, 1790, 1792, 1793, 0, 951, 0, 1000, 0,
	0, 0, 0, 2575, 0, 0, 1332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1391, 0, 1332, 0,
	0, 1332, 959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1391, 0, 0, 0, 0, 0, 974, 0,
	957, 956, 0, 0, 0, 0, 1390, 0, 0, 0,
	0, 0, 0, 1331, 0, 0, 0, 0, 0, 0,
	0, 0, 976, 1331, 1331, 0, 0, 0, 958, 0,
	1332, 1332, 0, 961, 0, 0, 0, 0, 1009, 0,
	0, 0, 0, 0, 0, 0, 0, 971, 972, 0,
	1332, 0, 0, 0, 0, 0, 989, 0, 0, 0,
	0, 0, 1391, 0, 0, 0, 0, 1332, 1390, 0,
	0, 1331, 0, 0, 1001, 963, 0, 0, 0, 0,
	964, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 965, 0, 1332, 1332, 1332, 0, 0, 0,
	0, 998, 0, 0, 0, 0, 0, 1391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 999, 0, 0, 0, 0, 0, 1391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 967, 0, 0,
	0, 0, 0, 0, 0, 955, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 968, 969, 0, 0, 1391, 0,
	1332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 977, 975, 0, 0, 0, 0, 0,
	0, 970, 0, 1391, 0, 986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1006, 997, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1002, 0, 1331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1331, 1331, 0,
	0, 1391, 0, 0, 0, 0, 0, 0, 1332, 0,
	0, 0, 0, 0, 1331, 0, 0, 0, 1332, 1332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 962, 0,
	0, 1008, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1391, 960, 0, 1332, 0, 993, 994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 996, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1003, 991, 0, 0, 0,
	0, 0, 0, 0, 1007, 987, 0, 0, 980, 978,
	0, 983, 0, 0, 0, 0, 0, 984, 0, 0,
	953, 0, 1004, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 995, 0, 985, 0,
	0, 0, 0, 0, 982, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1005, 0, 0, 0, 0,
	0, 0, 0, 988, 0, 0, 0, 0, 0, 0,
	0, 0, 966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 992, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1388,
	0, 0, 1332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1332, 1332, 0, 0, 276, 278, 277, 279,
	280, 281, 282, 1393, 283, 284, 1394, 1395, 1396, 1332,
	1397, 631, 1398, 1399, 1400, 1401, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 1402, 636, 295, 296, 297, 298, 299, 300,
	1403, 1404, 0, 301, 637, 638, 639, 1405, 302, 303,
	640, 1406, 1334, 1407, 304, 305, 306, 307, 308, 309,
	310, 0, 1408, 312, 313, 314, 311, 315, 1409, 316,
	0, 317, 318, 319, 320, 321, 322, 1410, 323, 324,
	325, 1190, 326, 327, 328, 1411, 1412, 1414, 1413, 1415,
	1416, 1417, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 1418, 338, 335, 336, 1419, 339, 337, 340, 1420,
	341, 342, 343, 1421, 1422, 344, 345, 346, 1423, 347,
	348, 1424, 349, 350, 351, 1425, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 1426, 273, 1427, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 1428, 370, 371,
	1429, 1430, 1191, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 1431, 384, 649,
	1432, 650, 385, 1433, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 1193, 391, 392, 1434, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	1435, 1192, 401, 654, 655, 1436, 656, 1437, 403, 404,
	1194, 657, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 1438, 415, 417,
	416, 1439, 418, 658, 1197, 419, 420, 1198, 1440, 421,
	0, 0, 0, 422, 423, 426, 1441, 1442, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 1443, 275, 1201, 467, 468, 1444,
	659, 469, 660, 471, 472, 1445, 0, 473, 0, 1446,
	1447, 475, 476, 477, 1448, 1449, 478, 479, 661, 1202,
	480, 1203, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 1450, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 1451, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 1452, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 1453, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 1454, 557, 558, 556,
	559, 560, 561, 1455, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 1456, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 1457, 589,
	590, 0, 586, 577, 1458, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 1459, 599, 672, 673, 674, 675,
	1460, 608, 1461, 600, 601, 602, 676, 603, 677, 1462,
	604, 605, 606, 607, 0, 609, 610, 1463, 1464, 611,
	612, 613, 615, 616, 614, 617, 1465, 618, 1466, 0,
	619, 620, 621, 678, 679, 680, 1467, 623, 622, 624,
	681, 1468, 625, 1469, 1470, 1471, 1472, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1388, 0, 0, 0, 0, 0, 0, 0,
	2743, 0, 0, 0, 0, 0, 0, 0, 2744, 276,
	278, 277, 279, 280, 281, 282, 1393, 283, 284, 1394,
	1395, 1396, 0, 1397, 631, 1398, 1399, 1400, 1401, 285,
	286, 1189, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 1402, 636, 295, 296, 297,
	298, 299, 300, 1403, 1404, 0, 301, 637, 638, 639,
	1405, 302, 303, 640, 1406, 1334, 1407, 304, 305, 306,
	307, 308, 309, 310, 0, 1408, 312, 313, 314, 311,
	315, 1409, 316, 0, 317, 318, 319, 320, 321, 322,
	1410, 323, 324, 325, 1190, 326, 327, 328, 1411, 1412,
	1414, 1413, 1415, 1416, 1417, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 1418, 338, 335, 336, 1419, 339,
	337, 340, 1420, 341, 342, 343, 1421, 1422, 344, 345,
	346, 1423, 347, 348, 1424, 349, 350, 351, 1425, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 1426, 273, 1427, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	1428, 370, 371, 1429, 1430, 1191, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	1431, 384, 649, 1432, 650, 385, 1433, 386, 387, 388,
	389, 390, 651, 652, 653, 470, 1193, 391, 392, 1434,
	393, 394, 395, 396, 397, 0, 0, 0, 274, 398,
	399, 400, 402, 1435, 1192, 401, 654, 655, 1436, 656,
	1437, 403, 404, 1194, 657, 1195, 405, 406, 407, 1196,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	1438, 415, 417, 416, 1439, 418, 658, 1197, 419, 420,
	1198, 1440, 421, 0, 0, 0, 422, 423, 426, 1441,
	1442, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	1199, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 1200, 466, 455, 1443, 275, 1201,
	467, 468, 1444, 659, 469, 660, 471, 472, 1445, 0,
	473, 0, 1446, 1447, 475, 476, 477, 1448, 1449, 478,
	479, 661, 1202, 480, 1203, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 1450, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 1451, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 1452, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 1453, 532, 533, 534, 1204, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 1454,
	557, 558, 556, 559, 560, 561, 1455, 562, 563, 545,
	546, 564, 565, 1205, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 1456, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 1457, 589, 590, 0, 586, 577, 1458, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 1459, 599, 672,
	673, 674, 675, 1460, 608, 1461, 600, 601, 602, 676,
	603, 677, 1462, 604, 605, 606, 607, 0, 609, 610,
	1463, 1464, 611, 612, 613, 615, 616, 614, 617, 1465,
	618, 1466, 0, 619, 620, 621, 678, 679, 680, 1467,
	623, 622, 624, 681, 1468, 625, 1469, 1470, 1471, 1472,
	626, 627, 682, 628, 629, 630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1388, 0, 0, 0, 0, 3719, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3721,
	276, 278, 277, 279, 280, 281, 282, 1393, 283, 284,
	1394, 1395, 1396, 0, 1397, 631, 1398, 1399, 1400, 1401,
	285, 286, 1189, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 1402, 636, 295, 296,
	297, 298, 299, 300, 1403, 1404, 0, 301, 637, 638,
	639, 1405, 302, 303, 640, 1406, 1334, 1407, 304, 305,
	306, 307, 308, 309, 310, 0, 1408, 312, 313, 314,
	311, 315, 1409, 316, 0, 317, 318, 319, 320, 321,
	322, 1410, 323, 324, 325, 1190, 326, 327, 328, 1411,
	1412, 1414, 1413, 1415, 1416, 1417, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 1418, 338, 335, 336, 1419,
	339, 337, 340, 1420, 341, 342, 343, 1421, 1422, 344,
	345, 346, 1423, 347, 348, 1424, 349, 350, 351, 1425,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 1426, 273, 1427, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 1428, 370, 371, 1429, 1430, 1191, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 1431, 384, 649, 1432, 650, 385, 1433, 386, 387,
	388, 389, 390, 651, 652, 653, 470, 1193, 391, 392,
	1434, 393, 394, 395, 396, 397, 0, 0, 0, 274,
	398, 399, 400, 402, 1435, 1192, 401, 654, 655, 1436,
	656, 1437, 403, 404, 1194, 657, 1195, 405, 406, 407,
	1196, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 1438, 415, 417, 416, 1439, 418, 658, 1197, 419,
	420, 1198, 1440, 421, 0, 0, 0, 422, 423, 426,
	1441, 1442, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 1199, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 1200, 466, 455, 1443, 275,
	1201, 467, 468, 1444, 659, 469, 660, 471, 472, 1445,
	0, 473, 0, 1446, 1447, 475, 476, 477, 1448, 1449,
	478, 479, 661, 1202, 480, 1203, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 1450,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 1451, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 1452, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 1453, 532, 533, 534, 1204,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	1454, 557, 558, 556, 559, 560, 561, 1455, 562, 563,
	545, 546, 564, 565, 1205, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 1456, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 1457, 589, 590, 0, 586, 577, 1458, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 1459, 599,
	672, 673, 674, 675, 1460, 608, 1461, 600, 601, 602,
	676, 603, 677, 1462, 604, 605, 606, 607, 0, 609,
	610, 1463, 1464, 611, 612, 613, 615, 616, 614, 617,
	1465, 618, 1466, 0, 619, 620, 621, 678, 679, 680,
	1467, 623, 622, 624, 681, 1468, 625, 1469, 1470, 1471,
	1472, 626, 627, 682, 628, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4112, 276, 278, 277, 279, 280,
	281, 282, 1393, 283, 284, 1394, 1395, 1396, 0, 1397,
	631, 1398, 1399, 1400, 1401, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 1402, 636, 295, 296, 297, 298, 299, 300, 1403,
	1404, 0, 301, 637, 638, 639, 1405, 302, 303, 640,
	1406, 1334, 1407, 304, 305, 306, 307, 308, 309, 310,
	0, 1408, 312, 313, 314, 311, 315, 1409, 316, 0,
	317, 318, 319, 320, 321, 322, 1410, 323, 324, 325,
	1190, 326, 327, 328, 1411, 1412, 1414, 1413, 1415, 1416,
	1417, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	1418, 338, 335, 336, 1419, 339, 337, 340, 1420, 341,
	342, 343, 1421, 1422, 344, 345, 346, 1423, 347, 348,
	1424, 349, 350, 351, 1425, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 1426, 273, 1427, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 1428, 370, 371, 1429,
	1430, 1191, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 1431, 384, 649, 1432,
	650, 385, 1433, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 1193, 391, 392, 1434, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 1435,
	1192, 401, 654, 655, 1436, 656, 1437, 403, 404, 1194,
	657, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 1438, 415, 417, 416,
	1439, 418, 658, 1197, 419, 420, 1198, 1440, 421, 0,
	0, 0, 422, 423, 426, 1441, 1442, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 1443, 275, 1201, 467, 468, 1444, 659,
	469, 660, 471, 472, 1445, 0, 473, 0, 1446, 1447,
	475, 476, 477, 1448, 1449, 478, 479, 661, 1202, 480,
	1203, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 1450, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	1451, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 1452, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	1453, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 1454, 557, 558, 556, 559,
	560, 561, 1455, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	1456, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 1457, 589, 590,
	0, 586, 577, 1458, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 1459, 599, 672, 673, 674, 675, 1460,
	608, 1461, 600, 601, 602, 676, 603, 677, 1462, 604,
	605, 606, 607, 0, 609, 610, 1463, 1464, 611, 612,
	613, 615, 616, 614, 617, 1465, 618, 1466, 0, 619,
	620, 621, 678, 679, 680, 1467, 623, 622, 624, 681,
	1468, 625, 1469, 1470, 1471, 1472, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 0, 0, 0, 1388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4322, 276, 278, 277, 279, 280,
	281, 282, 1393, 283, 284, 1394, 1395, 1396, 0, 1397,
	631, 1398, 1399, 1400, 1401, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 1402, 636, 295, 296, 297, 298, 299, 300, 1403,
	1404, 0, 301, 637, 638, 639, 1405, 302, 303, 640,
	1406, 1334, 1407, 304, 305, 306, 307, 308, 309, 310,
	0, 1408, 312, 313, 314, 311, 315, 1409, 316, 0,
	317, 318, 319, 320, 321, 322, 1410, 323, 324, 325,
	1190, 326, 327, 328, 1411, 1412, 1414, 1413, 1415, 1416,
	1417, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	1418, 338, 335, 336, 1419, 339, 337, 340, 1420, 341,
	342, 343, 1421, 1422, 344, 345, 346, 1423, 347, 348,
	1424, 349, 350, 351, 1425, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 1426, 273, 1427, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 1428, 370, 371, 1429,
	1430, 1191, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 1431, 384, 649, 1432,
	650, 385, 1433, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 1193, 391, 392, 1434, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 1435,
	1192, 401, 654, 655, 1436, 656, 1437, 403, 404, 1194,
	657, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 1438, 415, 417, 416,
	1439, 418, 658, 1197, 419, 420, 1198, 1440, 421, 0,
	0, 0, 422, 423, 426, 1441, 1442, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 1443, 275, 1201, 467, 468, 1444, 659,
	469, 660, 471, 472, 1445, 0, 473, 0, 1446, 1447,
	475, 476, 477, 1448, 1449, 478, 479, 661, 1202, 480,
	1203, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 1450, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	1451, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 1452, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	1453, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 1454, 557, 558, 556, 559,
	560, 561, 1455, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	1456, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 1457, 589, 590,
	0, 586, 577, 1458, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 1459, 599, 672, 673, 674, 675, 1460,
	608, 1461, 600, 601, 602, 676, 603, 677, 1462, 604,
	605, 606, 607, 0, 609, 610, 1463, 1464, 611, 612,
	613, 615, 616, 614, 617, 1465, 618, 1466, 0, 619,
	620, 621, 678, 679, 680, 1467, 623, 622, 624, 681,
	1468, 625, 1469, 1470, 1471, 1472, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 0, 0, 0, 1388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4192, 276, 278, 277, 279, 280,
	281, 282, 1393, 283, 284, 1394, 1395, 1396, 0, 1397,
	631, 1398, 1399, 1400, 1401, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 1402, 636, 295, 296, 297, 298, 299, 300, 1403,
	1404, 0, 301, 637, 638, 639, 1405, 302, 303, 640,
	1406, 1334, 1407, 304, 305, 306, 307, 308, 309, 310,
	0, 1408, 312, 313, 314, 311, 315, 1409, 316, 0,
	317, 318, 319, 320, 321, 322, 1410, 323, 324, 325,
	1190, 326, 327, 328, 1411, 1412, 1414, 1413, 1415, 1416,
	1417, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	1418, 338, 335, 336, 1419, 339, 337, 340, 1420, 341,
	342, 343, 1421, 1422, 344, 345, 346, 1423, 347, 348,
	1424, 349, 350, 351, 1425, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 1426, 273, 1427, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 1428, 370, 371, 1429,
	1430, 1191, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 1431, 384, 649, 1432,
	650, 385, 1433, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 1193, 391, 392, 1434, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 1435,
	1192, 401, 654, 655, 1436, 656, 1437, 403, 404, 1194,
	657, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 1438, 415, 417, 416,
	1439, 418, 658, 1197, 419, 420, 1198, 1440, 421, 0,
	0, 0, 422, 423, 426, 1441, 1442, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 1443, 275, 1201, 467, 468, 1444, 659,
	469, 660, 471, 472, 1445, 0, 473, 0, 1446, 1447,
	475, 476, 477, 1448, 1449, 478, 479, 661, 1202, 480,
	1203, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 1450, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	1451, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 1452, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	1453, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 1454, 557, 558, 556, 559,
	560, 561, 1455, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	1456, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 1457, 589, 590,
	0, 586, 577, 1458, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 1459, 599, 672, 673, 674, 675, 1460,
	608, 1461, 600, 601, 602, 676, 603, 677, 1462, 604,
	605, 606, 607, 0, 609, 610, 1463, 1464, 611, 612,
	613, 615, 616, 614, 617, 1465, 618, 1466, 0, 619,
	620, 621, 678, 679, 680, 1467, 623, 622, 624, 681,
	1468, 625, 1469, 1470, 1471, 1472, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 0, 0, 0, 1388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4042, 276, 278, 277, 279, 280,
	281, 282, 1393, 283, 284, 1394, 1395, 1396, 0, 1397,
	631, 1398, 1399, 1400, 1401, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 1402, 636, 295, 296, 297, 298, 299, 300, 1403,
	1404, 0, 301, 637, 638, 639, 1405, 302, 303, 640,
	1406, 1334, 1407, 304, 305, 306, 307, 308, 309, 310,
	0, 1408, 312, 313, 314, 311, 315, 1409, 316, 0,
	317, 318, 319, 320, 321, 322, 1410, 323, 324, 325,
	1190, 326, 327, 328, 1411, 1412, 1414, 1413, 1415, 1416,
	1417, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	1418, 338, 335, 336, 1419, 339, 337, 340, 1420, 341,
	342, 343, 1421, 1422, 344, 345, 346, 1423, 347, 348,
	1424, 349, 350, 351, 1425, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 1426, 273, 1427, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 1428, 370, 371, 1429,
	1430, 1191, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 1431, 384, 649, 1432,
	650, 385, 1433, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 1193, 391, 392, 1434, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 1435,
	1192, 401, 654, 655, 1436, 656, 1437, 403, 404, 1194,
	657, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 1438, 415, 417, 416,
	1439, 418, 658, 1197, 419, 420, 1198, 1440, 421, 0,
	0, 0, 422, 423, 426, 1441, 1442, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 1443, 275, 1201, 467, 468, 1444, 659,
	469, 660, 471, 472, 1445, 0, 473, 0, 1446, 1447,
	475, 476, 477, 1448, 1449, 478, 479, 661, 1202, 480,
	1203, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 1450, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	1451, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 1452, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	1453, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 1454, 557, 558, 556, 559,
	560, 561, 1455, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	1456, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 1457, 589, 590,
	0, 586, 577, 1458, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 1459, 599, 672, 673, 674, 675, 1460,
	608, 1461, 600, 601, 602, 676, 603, 677, 1462, 604,
	605, 606, 607, 0, 609, 610, 1463, 1464, 611, 612,
	613, 615, 616, 614, 617, 1465, 618, 1466, 0, 619,
	620, 621, 678, 679, 680, 1467, 623, 622, 624, 681,
	1468, 625, 1469, 1470, 1471, 1472, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 0, 0, 0, 1388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3737, 276, 278, 277, 279, 280,
	281, 282, 1393, 283, 284, 1394, 1395, 1396, 0, 1397,
	631, 1398, 1399, 1400, 1401, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 1402, 636, 295, 296, 297, 298, 299, 300, 1403,
	1404, 0, 301, 637, 638, 639, 1405, 302, 303, 640,
	1406, 1334, 1407, 304, 305, 306, 307, 308, 309, 310,
	0, 1408, 312, 313, 314, 311, 315, 1409, 316, 0,
	317, 318, 319, 320, 321, 322, 1410, 323, 324, 325,
	1190, 326, 327, 328, 1411, 1412, 1414, 1413, 1415, 1416,
	1417, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	1418, 338, 335, 336, 1419, 339, 337, 340, 1420, 341,
	342, 343, 1421, 1422, 344, 345, 346, 1423, 347, 348,
	1424, 349, 350, 351, 1425, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 1426, 273, 1427, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 1428, 370, 371, 1429,
	1430, 1191, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 1431, 384, 649, 1432,
	650, 385, 1433, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 1193, 391, 392, 1434, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 1435,
	1192, 401, 654, 655, 1436, 656, 1437, 403, 404, 1194,
	657, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 1438, 415, 417, 416,
	1439, 418, 658, 1197, 419, 420, 1198, 1440, 421, 0,
	0, 0, 422, 423, 426, 1441, 1442, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 1443, 275, 1201, 467, 468, 1444, 659,
	469, 660, 471, 472, 1445, 0, 473, 0, 1446, 1447,
	475, 476, 477, 1448, 1449, 478, 479, 661, 1202, 480,
	1203, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 1450, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	1451, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 1452, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	1453, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 1454, 557, 558, 556, 559,
	560, 561, 1455, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	1456, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 1457, 589, 590,
	0, 586, 577, 1458, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 1459, 599, 672, 673, 674, 675, 1460,
	608, 1461, 600, 601, 602, 676, 603, 677, 1462, 604,
	605, 606, 607, 0, 609, 610, 1463, 1464, 611, 612,
	613, 615, 616, 614, 617, 1465, 618, 1466, 0, 619,
	620, 621, 678, 679, 680, 1467, 623, 622, 624, 681,
	1468, 625, 1469, 1470, 1471, 1472, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 0, 0, 0, 1388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3562, 276, 278, 277, 279, 280,
	281, 282, 1393, 283, 284, 1394, 1395, 1396, 0, 1397,
	631, 1398, 1399, 1400, 1401, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 1402, 636, 295, 296, 297, 298, 299, 300, 1403,
	1404, 0, 301, 637, 638, 639, 1405, 302, 303, 640,
	1406, 1334, 1407, 304, 305, 306, 307, 308, 309, 310,
	0, 1408, 312, 313, 314, 311, 315, 1409, 316, 0,
	317, 318, 319, 320, 321, 322, 1410, 323, 324, 325,
	1190, 326, 327, 328, 1411, 1412, 1414, 1413, 1415, 1416,
	1417, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	1418, 338, 335, 336, 1419, 339, 337, 340, 1420, 341,
	342, 343, 1421, 1422, 344, 345, 346, 1423, 347, 348,
	1424, 349, 350, 351, 1425, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 1426, 273, 1427, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 1428, 370, 371, 1429,
	1430, 1191, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 1431, 384, 649, 1432,
	650, 385, 1433, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 1193, 391, 392, 1434, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 1435,
	1192, 401, 654, 655, 1436, 656, 1437, 403, 404, 1194,
	657, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 1438, 415, 417, 416,
	1439, 418, 658, 1197, 419, 420, 1198, 1440, 421, 0,
	0, 0, 422, 423, 426, 1441, 1442, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 1443, 275, 1201, 467, 468, 1444, 659,
	469, 660, 471, 472, 1445, 0, 473, 0, 1446, 1447,
	475, 476, 477, 1448, 1449, 478, 479, 661, 1202, 480,
	1203, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 1450, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	1451, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 1452, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	1453, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 1454, 557, 558, 556, 559,
	560, 561, 1455, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	1456, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 1457, 589, 590,
	0, 586, 577, 1458, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 1459, 599, 672, 673, 674, 675, 1460,
	608, 1461, 600, 601, 602, 676, 603, 677, 1462, 604,
	605, 606, 607, 0, 609, 610, 1463, 1464, 611, 612,
	613, 615, 616, 614, 617, 1465, 618, 1466, 0, 619,
	620, 621, 678, 679, 680, 1467, 623, 622, 624, 681,
	1468, 625, 1469, 1470, 1471, 1472, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 0, 0, 0, 1388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2598, 276, 278, 277, 279, 280,
	281, 282, 1393, 283, 284, 1394, 1395, 1396, 0, 1397,
	631, 1398, 1399, 1400, 1401, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 1402, 636, 295, 296, 297, 298, 299, 300, 1403,
	1404, 0, 301, 637, 638, 639, 1405, 302, 303, 640,
	1406, 1334, 1407, 304, 305, 306, 307, 308, 309, 310,
	0, 1408, 312, 313, 314, 311, 315, 1409, 316, 0,
	317, 318, 319, 320, 321, 322, 1410, 323, 324, 325,
	1190, 326, 327, 328, 1411, 1412, 1414, 1413, 1415, 1416,
	1417, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	1418, 338, 335, 336, 1419, 339, 337, 340, 1420, 341,
	342, 343, 1421, 1422, 344, 345, 346, 1423, 347, 348,
	1424, 349, 350, 351, 1425, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 1426, 273, 1427, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 1428, 370, 371, 1429,
	1430, 1191, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 1431, 384, 649, 1432,
	650, 385, 1433, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 1193, 391, 392, 1434, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 1435,
	1192, 401, 654, 655, 1436, 656, 1437, 403, 404, 1194,
	657, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 1438, 415, 417, 416,
	1439, 418, 658, 1197, 419, 420, 1198, 1440, 421, 0,
	0, 0, 422, 423, 426, 1441, 1442, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 1443, 275, 1201, 467, 468, 1444, 659,
	469, 660, 471, 472, 1445, 0, 473, 0, 1446, 1447,
	475, 476, 477, 1448, 1449, 478, 479, 661, 1202, 480,
	1203, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 1450, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	1451, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 1452, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	1453, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 1454, 557, 558, 556, 559,
	560, 561, 1455, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	1456, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 1457, 589, 590,
	0, 586, 577, 1458, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 1459, 599, 672, 673, 674, 675, 1460,
	608, 1461, 600, 601, 602, 676, 603, 677, 1462, 604,
	605, 606, 607, 0, 609, 610, 1463, 1464, 611, 612,
	613, 615, 616, 614, 617, 1465, 618, 1466, 0, 619,
	620, 621, 678, 679, 680, 1467, 623, 622, 624, 681,
	1468, 625, 1469, 1470, 1471, 1472, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 0, 1484, 0, 1388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2231, 276, 278, 277, 279, 280,
	281, 282, 1393, 283, 284, 1394, 1395, 1396, 0, 1397,
	631, 1398, 1399, 1400, 1401, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 1402, 636, 295, 296, 297, 298, 299, 300, 1403,
	1404, 0, 301, 637, 638, 639, 1405, 302, 303, 640,
	1406, 1334, 1407, 304, 305, 306, 307, 308, 309, 310,
	0, 1408, 312, 313, 314, 311, 315, 1409, 316, 0,
	317, 318, 319, 320, 321, 322, 1410, 323, 324, 325,
	1190, 326, 327, 328, 1411, 1412, 1414, 1413, 1415, 1416,
	1417, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	1418, 338, 335, 336, 1419, 339, 337, 340, 1420, 341,
	342, 343, 1421, 1422, 344, 345, 346, 1423, 347, 348,
	1424, 349, 350, 351, 1425, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 1426, 273, 1427, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 1428, 370, 371, 1429,
	1430, 1191, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 1431, 384, 649, 1432,
	650, 385, 1433, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 1193, 391, 392, 1434, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 1435,
	1192, 401, 654, 655, 1436, 656, 1437, 403, 404, 1194,
	657, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 1438, 415, 417, 416,
	1439, 418, 658, 1197, 419, 420, 1198, 1440, 421, 0,
	0, 0, 422, 423, 426, 1441, 1442, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 1443, 275, 1201, 467, 468, 1444, 659,
	469, 660, 471, 472, 1445, 0, 473, 0, 1446, 1447,
	475, 476, 477, 1448, 1449, 478, 479, 661, 1202, 480,
	1203, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 1450, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	1451, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 1452, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	1453, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 1454, 557, 558, 556, 559,
	560, 561, 1455, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	1456, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 1457, 589, 590,
	0, 586, 577, 1458, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 1459, 599, 672, 673, 674, 675, 1460,
	608, 1461, 600, 601, 602, 676, 603, 677, 1462, 604,
	605, 606, 607, 0, 609, 610, 1463, 1464, 611, 612,
	613, 615, 616, 614, 617, 1465, 618, 1466, 0, 619,
	620, 621, 678, 679, 680, 1467, 623, 622, 624, 681,
	1468, 625, 1469, 1470, 1471, 1472, 626, 627, 682, 628,
	629, 630, 1385, 0, 1388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 278, 277, 279, 280, 281, 282, 1393, 283,
	284, 1394, 1395, 1396, 0, 1397, 631, 1398, 1399, 1400,
	1401, 285, 286, 1189, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 1402, 636, 295,
	296, 297, 298, 299, 300, 1403, 1404, 0, 301, 637,
	638, 639, 1405, 302, 303, 640, 1406, 1334, 1407, 304,
	305, 306, 307, 308, 309, 310, 0, 1408, 312, 313,
	314, 311, 315, 1409, 316, 0, 317, 318, 319, 320,
	321, 322, 1410, 323, 324, 325, 1190, 326, 327, 328,
	1411, 1412, 1414, 1413, 1415, 1416, 1417, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 1418, 338, 335, 336,
	1419, 339, 337, 340, 1420, 341, 342, 343, 1421, 1422,
	344, 345, 346, 1423, 347, 348, 1424, 349, 350, 351,
	1425, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 1426, 273, 1427,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 1428, 370, 371, 1429, 1430, 1191, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 1431, 384, 649, 1432, 650, 385, 1433, 386,
	387, 388, 389, 390, 651, 652, 653, 470, 1193, 391,
	392, 1434, 393, 394, 395, 396, 397, 0, 0, 0,
	274, 398, 399, 400, 402, 1435, 1192, 401, 654, 655,
	1436, 656, 1437, 403, 404, 1194, 657, 1195, 405, 406,
	407, 1196, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 1438, 415, 417, 416, 1439, 418, 658, 1197,
	419, 420, 1198, 1440, 421, 0, 0, 0, 422, 423,
	426, 1441, 1442, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 1199, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 1200, 466, 455, 1443,
	275, 1201, 467, 468, 1444, 659, 469, 660, 471, 472,
	1445, 0, 473, 0, 1446, 1447, 475, 476, 477, 1448,
	1449, 478, 479, 661, 1202, 480, 1203, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	1450, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 1451, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 1452, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 1453, 532, 533, 534,
	1204, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 1454, 557, 558, 556, 559, 560, 561, 1455, 562,
	563, 545, 546, 564, 565, 1205, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 1456, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 1457, 589, 590, 0, 586, 577, 1458,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 1459,
	599, 672, 673, 674, 675, 1460, 608, 1461, 600, 601,
	602, 676, 603, 677, 1462, 604, 605, 606, 607, 0,
	609, 610, 1463, 1464, 611, 612, 613, 615, 616, 614,
	617, 1465, 618, 1466, 0, 619, 620, 621, 678, 679,
	680, 1467, 623, 622, 624, 681, 1468, 625, 1469, 1470,
	1471, 1472, 626, 627, 682, 628, 629, 630, 1388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 278, 277, 279, 280,
	281, 282, 1393, 283, 284, 1394, 1395, 1396, 0, 1397,
	631, 1398, 1399, 1400, 1401, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 1402, 636, 295, 296, 297, 298, 299, 300, 1403,
	1404, 0, 301, 637, 638, 639, 1405, 302, 303, 640,
	1406, 1334, 1407, 304, 305, 306, 307, 308, 309, 310,
	0, 1408, 312, 313, 314, 311, 315, 1409, 316, 0,
	317, 318, 319, 320, 321, 322, 1410, 323, 324, 325,
	1190, 326, 327, 328, 1411, 1412, 1414, 1413, 1415, 1416,
	1417, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	1418, 338, 335, 336, 1419, 339, 337, 340, 1420, 341,
	342, 343, 1421, 1422, 344, 345, 346, 1423, 347, 348,
	1424, 349, 350, 351, 1425, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 1426, 273, 1427, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 1428, 370, 371, 1429,
	1430, 1191, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 1431, 384, 649, 1432,
	650, 385, 1433, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 1193, 391, 392, 1434, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 1435,
	1192, 401, 654, 655, 1436, 656, 1437, 403, 404, 1194,
	657, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 1438, 415, 417, 416,
	1439, 418, 658, 1197, 419, 420, 1198, 1440, 421, 0,
	0, 0, 422, 423, 426, 1441, 1442, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 1443, 275, 1201, 467, 468, 1444, 659,
	469, 660, 471, 472, 1445, 0, 473, 0, 1446, 1447,
	475, 476, 477, 1448, 1449, 478, 479, 661, 1202, 480,
	1203, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 1450, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	1451, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 1452, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	1453, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 1454, 557, 558, 556, 559,
	560, 561, 1455, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	1456, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 1457, 589, 590,
	0, 586, 577, 1458, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 1459, 599, 672, 673, 674, 675, 1460,
	608, 1461, 600, 601, 602, 676, 603, 677, 1462, 604,
	605, 606, 607, 0, 609, 610, 1463, 1464, 611, 612,
	613, 615, 616, 614, 617, 1465, 618, 1466, 0, 619,
	620, 621, 678, 679, 680, 1467, 623, 622, 624, 681,
	1468, 625, 1469, 1470, 1471, 1472, 626, 627, 682, 628,
	629, 630, 2573, 0, 1125, 1097, 1098, 1099, 1095, 1096,
	1108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 278, 277, 279, 280, 281, 282, 2570, 283,
	284, 0, 0, 0, 0, 0, 1149, 1113, 0, 0,
	0, 285, 286, 1189, 287, 288, 289, 290, 291, 292,
	632, 1162, 0, 293, 1169, 294, 1168, 0, 1179, 295,
	296, 297, 298, 299, 300, 1115, 1148, 1080, 301, 1209,
	1210, 639, 0, 302, 303, 1155, 0, 1136, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 1190, 326, 327, 328,
	1139, 1137, 1138, 1145, 1141, 1140, 1144, 329, 330, 331,
	332, 333, 1172, 334, 1166, 1165, 1085, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 2571, 0,
	344, 1157, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 1091, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 1180, 1181, 365, 1104, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 1164, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 1191, 372, 373,
	374, 1177, 1178, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 1187, 0, 1114, 385, 0, 386,
	387, 388, 389, 390, 1150, 1151, 1154, 470, 1193, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	274, 398, 399, 400, 402, 0, 1192, 401, 1159, 1160,
	0, 1120, 0, 403, 404, 1194, 1152, 1195, 405, 406,
	407, 1196, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 1188, 1197,
	419, 420, 1198, 0, 421, 0, 0, 0, 422, 423,
	426, 1143, 1142, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 1199, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 1200, 466, 455, 1082,
	275, 1201, 467, 468, 1105, 1153, 469, 1167, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 1202, 480, 1203, 1182, 481, 482,
	1092, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 1183, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 1163, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	1204, 535, 536, 537, 538, 539, 1093, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 1146, 562,
	563, 545, 546, 564, 565, 1205, 566, 567, 568, 569,
	570, 571, 572, 1161, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 1208, 580, 581, 582, 583,
	1184, 587, 588, 0, 589, 590, 1079, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 1173, 1174, 1175, 1176, 0, 608, 0, 600, 601,
	602, 1185, 603, 1186, 1103, 604, 605, 606, 607, 0,
	609, 610, 0, 1086, 611, 612, 613, 615, 616, 614,
	617, 1147, 618, 0, 0, 619, 620, 621, 678, 1170,
	1207, 2569, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 1083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1078, 0, 0, 0, 0, 0, 0, 1076, 1077,
	2572, 0, 0, 0, 0, 0, 0, 1109, 2568, 0,
	1069, 1107, 1125, 1097, 1098, 1099, 1095, 1096, 1108, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 1149, 1113, 0, 0, 0, 285,
	286, 1189, 287, 288, 289, 290, 291, 292, 632, 1162,
	0, 293, 1169, 294, 1168, 0, 1179, 295, 296, 297,
	298, 299, 300, 1115, 1148, 1080, 301, 1209, 1210, 639,
	0, 302, 303, 1155, 0, 1136, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 1190, 326, 327, 328, 1139, 1137,
	1138, 1145, 1141, 1140, 1144, 329, 330, 331, 332, 333,
	1172, 334, 1166, 1165, 1085, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 1157,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 1091, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 1180, 1181, 365, 1104, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 1164, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 1191, 372, 373, 374, 1177,
	1178, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 1187, 0, 1114, 385, 0, 386, 387, 388,
	389, 390, 1150, 1151, 1154, 470, 1193, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 274, 398,
	399, 400, 402, 0, 1192, 401, 1159, 1160, 0, 1120,
	0, 403, 404, 1194, 1152, 1195, 405, 406, 407, 1196,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 1188, 1197, 419, 420,
	1198, 0, 421, 0, 0, 0, 422, 423, 426, 1143,
	1142, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	1199, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 1200, 466, 455, 1082, 275, 1201,
	467, 468, 1105, 1153, 469, 1167, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 1202, 480, 1203, 1182, 481, 482, 1092, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 1183,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 1163, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 1204, 535,
	536, 537, 538, 539, 1093, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 235,
	557, 558, 556, 559, 560, 561, 1146, 562, 563, 545,
	546, 564, 565, 1205, 566, 567, 568, 569, 570, 571,
	572, 1161, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 1208, 580, 581, 582, 583, 1184, 587,
	588, 0, 589, 590, 1079, 586, 577, 237, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 1173,
	1174, 1175, 1176, 0, 608, 0, 600, 601, 602, 1185,
	603, 1186, 1103, 604, 605, 606, 607, 0, 609, 610,
	0, 1086, 611, 612, 613, 615, 616, 614, 617, 1147,
	618, 0, 0, 619, 620, 621, 1609, 1170, 1207, 0,
	623, 622, 624, 681, 0, 625, 0, 0, 0, 229,
	626, 627, 682, 628, 629, 630, 1083, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1078,
	0, 0, 0, 0, 0, 0, 1076, 1077, 1125, 1097,
	1098, 1099, 1095, 1096, 1108, 1864, 1862, 0, 0, 1107,
	0, 0, 0, 0, 0, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	1149, 1113, 0, 0, 0, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 1162, 0, 293, 1169, 294,
	1168, 0, 1179, 295, 296, 297, 298, 299, 300, 1115,
	1148, 1080, 301, 1209, 1210, 639, 0, 302, 303, 1155,
	0, 1136, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140,
	1144, 329, 330, 331, 332, 333, 1172, 334, 1166, 1165,
	1085, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 1157, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 1091, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 1180, 1181,
	365, 1104, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 1164, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 1191, 372, 373, 374, 1177, 1178, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 1187, 0,
	1114, 385, 0, 386, 387, 388, 389, 390, 1150, 1151,
	1154, 470, 1193, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 0,
	1192, 401, 1159, 1160, 0, 1120, 0, 403, 404, 1194,
	1152, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 1188, 1197, 419, 420, 1198, 0, 421, 0,
	0, 0, 422, 423, 426, 1143, 1142, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 1082, 275, 1201, 467, 468, 1105, 1153,
	469, 1167, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 1202, 480,
	1203, 1182, 481, 482, 1092, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 1183, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 1163, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	1093, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 235, 557, 558, 556, 559,
	560, 561, 1146, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 1161, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 1208,
	580, 581, 582, 583, 1184, 587, 588, 0, 589, 590,
	1079, 586, 577, 237, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 1173, 1174, 1175, 1176, 0,
	608, 0, 600, 601, 602, 1185, 603, 1186, 1103, 604,
	605, 606, 607, 0, 609, 610, 0, 1086, 611, 612,
	613, 615, 616, 614, 617, 1147, 618, 0, 0, 619,
	620, 621, 1609, 1170, 1207, 0, 623, 622, 624, 681,
	0, 625, 0, 0, 0, 229, 626, 627, 682, 628,
	629, 630, 1083, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1078, 0, 0, 0, 0,
	0, 0, 1076, 1077, 1125, 1097, 1098, 1099, 1095, 1096,
	1108, 1864, 3208, 0, 0, 1107, 0, 0, 0, 0,
	0, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 1149, 1113, 0, 0,
	0, 285, 286, 1189, 287, 288, 289, 290, 291, 292,
	632, 1162, 0, 293, 1169, 294, 1168, 0, 1179, 295,
	296, 297, 298, 299, 300, 1115, 1148, 1080, 301, 1209,
	1210, 639, 0, 302, 303, 1155, 0, 1136, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 1190, 326, 327, 328,
	1139, 1137, 1138, 1145, 1141, 1140, 1144, 329, 330, 331,
	332, 333, 1172, 334, 1166, 1165, 1085, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 1157, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 1091, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 1180, 1181, 365, 1104, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 1164, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 1191, 372, 373,
	374, 1177, 1178, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 1187, 0, 1114, 385, 0, 386,
	387, 388, 389, 390, 1150, 1151, 1154, 470, 1193, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	274, 398, 399, 400, 402, 0, 1192, 401, 1159, 1160,
	0, 1120, 0, 403, 404, 1194, 1152, 1195, 405, 406,
	407, 1196, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 1188, 1197,
	419, 420, 1198, 0, 421, 0, 0, 0, 422, 423,
	426, 1143, 1142, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 1199, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 1200, 466, 455, 1082,
	275, 1201, 467, 468, 1105, 1153, 469, 1167, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 1202, 480, 1203, 1182, 481, 482,
	1092, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 1183, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 1163, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	1204, 535, 536, 537, 538, 539, 1093, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 235, 557, 558, 556, 559, 560, 561, 1146, 562,
	563, 545, 546, 564, 565, 1205, 566, 567, 568, 569,
	570, 571, 572, 1161, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 1208, 580, 581, 582, 583,
	1184, 587, 588, 0, 589, 590, 1079, 586, 577, 237,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 1173, 1174, 1175, 1176, 0, 608, 0, 600, 601,
	602, 1185, 603, 1186, 1103, 604, 605, 606, 607, 0,
	609, 610, 0, 1086, 611, 612, 613, 615, 616, 614,
	617, 1147, 618, 0, 0, 619, 620, 621, 1609, 1170,
	1207, 0, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 229, 626, 627, 682, 628, 629, 630, 1083, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1078, 0, 0, 0, 0, 0, 0, 1076, 1077,
	1125, 1097, 1098, 1099, 1095, 1096, 1108, 1864, 1862, 0,
	0, 1107, 0, 0, 0, 0, 0, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 1149, 1113, 0, 0, 0, 285, 286, 1189,
	287, 288, 289, 290, 291, 292, 632, 1162, 0, 293,
	1169, 294, 1168, 2704, 1179, 295, 296, 297, 298, 299,
	300, 1115, 1148, 1080, 301, 1209, 1210, 639, 0, 302,
	303, 1155, 0, 1136, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145,
	1141, 1140, 1144, 329, 330, 331, 332, 333, 1172, 334,
	1166, 1165, 1085, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 1157, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 1091,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	1180, 1181, 365, 1104, 273, 0, 0, 0, 0, 0,
	366, 367, 368, 1164, 0, 0, 0, 369, 0, 370,
	371, 0, 2709, 1191, 372, 373, 374, 1177, 1178, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	1187, 0, 1114, 385, 0, 386, 387, 388, 389, 390,
	1150, 1151, 1154, 470, 1193, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 274, 398, 399, 400,
	402, 0, 1192, 401, 1159, 1160, 0, 1120, 0, 403,
	404, 1194, 1152, 1195, 405, 406, 407, 1196, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 2705, 418, 1188, 1197, 419, 420, 1198, 0,
	421, 0, 0, 0, 422, 423, 426, 1143, 1142, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 1199, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 1200, 466, 455, 1082, 275, 1201, 467, 468,
	1105, 1153, 469, 1167, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	1202, 480, 1203, 1182, 481, 482, 1092, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 1183, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 1163, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 1204, 535, 536, 537,
	538, 539, 1093, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 1146, 562, 563, 545, 546, 564,
	565, 1205, 566, 567, 568, 569, 570, 571, 572, 1161,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 1208, 580, 581, 582, 583, 1184, 587, 588, 0,
	589, 590, 1079, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 1173, 1174, 1175,
	1176, 0, 608, 2706, 600, 601, 602, 1185, 603, 1186,
	1103, 604, 605, 606, 607, 0, 609, 610, 0, 1086,
	611, 612, 613, 615, 616, 614, 617, 1147, 618, 0,
	0, 619, 620, 621, 678, 1170, 1207, 0, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 1083, 0, 0, 2618, 0, 1125,
	1097, 1098, 1099, 1095, 1096, 1108, 0, 1078, 0, 0,
	0, 0, 0, 0, 1076, 1077, 276, 278, 277, 279,
	280, 281, 282, 1109, 283, 284, 0, 1107, 0, 0,
	0, 1149, 1113, 0, 0, 0, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 1162, 0, 293, 1169,
	294, 1168, 0, 1179, 295, 296, 297, 298, 299, 300,
	1115, 1148, 1080, 301, 1209, 1210, 639, 0, 302, 303,
	1155, 0, 1136, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141,
	1140, 1144, 329, 330, 331, 332, 333, 1172, 334, 1166,
	1165, 1085, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 1157, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 1091, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 1180,
	1181, 365, 1104, 273, 0, 0, 0, 0, 0, 366,
	367, 368, 1164, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 1191, 372, 373, 374, 1177, 1178, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 1187,
	0, 1114, 385, 0, 386, 387, 388, 389, 390, 1150,
	1151, 1154, 470, 1193, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	0, 1192, 401, 1159, 1160, 0, 1120, 0, 403, 404,
	1194, 1152, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 1188, 1197, 419, 420, 1198, 0, 421,
	0, 0, 0, 422, 423, 426, 1143, 1142, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 1082, 275, 1201, 467, 468, 1105,
	1153, 469, 1167, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 1202,
	480, 1203, 1182, 481, 482, 1092, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 1183, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 1163, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 1093, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 1146, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 1161, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	1208, 580, 581, 582, 583, 1184, 587, 588, 0, 589,
	590, 1079, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 1173, 1174, 1175, 1176,
	0, 608, 0, 600, 601, 602, 1185, 603, 1186, 1103,
	604, 605, 606, 607, 0, 609, 610, 0, 1086, 611,
	612, 613, 615, 616, 614, 617, 1147, 618, 0, 0,
	619, 620, 621, 678, 1170, 1207, 0, 623, 622, 624,
	681, 0, 625, 0, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 1083, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1078, 0, 0, 0,
	0, 0, 0, 1076, 1077, 0, 0, 0, 0, 0,
	0, 0, 1109, 2616, 0, 2615, 1107, 1125, 1097, 1098,
	1099, 1095, 1096, 1108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 1149,
	1113, 0, 0, 0, 285, 286, 1189, 287, 288, 289,
	290, 291, 292, 632, 1162, 0, 293, 1169, 294, 1168,
	0, 1179, 295, 296, 297, 298, 299, 300, 1115, 1148,
	1080, 301, 1209, 1210, 639, 0, 302, 303, 1155, 0,
	1136, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 1190,
	326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140, 1144,
	329, 330, 331, 332, 333, 1172, 334, 1166, 1165, 1085,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 1157, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 1091, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 1180, 1181, 365,
	1104, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	1164, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	1191, 372, 373, 374, 1177, 1178, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 1187, 0, 1114,
	385, 0, 386, 387, 388, 389, 390, 1150, 1151, 1154,
	470, 1193, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 274, 398, 399, 400, 402, 0, 1192,
	401, 1159, 1160, 0, 1120, 0, 403, 404, 1194, 1152,
	1195, 405, 406, 407, 1196, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 1188, 1197, 419, 420, 1198, 0, 421, 0, 0,
	0, 422, 423, 426, 1143, 1142, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 1199, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 1200,
	466, 455, 1082, 275, 1201, 467, 468, 1105, 1153, 469,
	1167, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 1202, 480, 1203,
	1182, 481, 482, 1092, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 1183, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	1163, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 1204, 535, 536, 537, 538, 539, 1093,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 1146, 562, 563, 545, 546, 564, 565, 1205, 566,
	567, 568, 569, 570, 571, 572, 1161, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 1208, 580,
	581, 582, 583, 1184, 587, 588, 0, 589, 590, 1079,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 1173, 1174, 1175, 1176, 0, 608,
	0, 600, 601, 602, 1185, 603, 1186, 1103, 604, 605,
	606, 607, 0, 609, 610, 0, 1086, 611, 612, 613,
	615, 616, 614, 617, 1147, 618, 0, 0, 619, 620,
	621, 678, 1170, 1207, 0, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 1083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1078, 0, 0, 0, 0, 0,
	0, 1076, 1077, 0, 0, 0, 0, 0, 0, 0,
	1109, 2613, 0, 2612, 1107, 1125, 1097, 1098, 1099, 1095,
	1096, 1108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 278, 277, 279, 280, 281, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 1149, 1113, 0,
	0, 0, 285, 286, 1189, 287, 288, 289, 290, 291,
	292, 632, 1162, 0, 293, 1169, 294, 1168, 0, 1179,
	295, 296, 297, 298, 299, 300, 1115, 1148, 1080, 301,
	1209, 1210, 639, 0, 302, 303, 1155, 0, 1136, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 1190, 326, 327,
	328, 1139, 1137, 1138, 1145, 1141, 1140, 1144, 329, 330,
	331, 332, 333, 1172, 334, 1166, 1165, 1085, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 1157, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 1091, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 1180, 1181, 365, 1104, 273,
	0, 0, 0, 0, 0, 366, 367, 368, 1164, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 1191, 372,
	373, 374, 1177, 1178, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 1187, 0, 1114, 385, 0,
	386, 387, 388, 389, 390, 1150, 1151, 1154, 470, 1193,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 274, 398, 399, 400, 402, 0, 1192, 401, 1159,
	1160, 0, 1120, 0, 403, 404, 1194, 1152, 1195, 405,
	406, 407, 1196, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 1188,
	1197, 419, 420, 1198, 0, 421, 0, 0, 0, 422,
	423, 426, 1143, 1142, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 1199, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 1200, 466, 455,
	1082, 275, 1201, 467, 468, 1105, 1153, 469, 1167, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 1202, 480, 1203, 1182, 481,
	482, 1092, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 1183, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 1163, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 1204, 535, 536, 537, 538, 539, 1093, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 1146,
	562, 563, 545, 546, 564, 565, 1205, 566, 567, 568,
	569, 570, 571, 572, 1161, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 1208, 580, 581, 582,
	583, 1184, 587, 588, 0, 589, 590, 1079, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 1173, 1174, 1175, 1176, 0, 608, 0, 600,
	601, 602, 1185, 603, 1186, 1103, 604, 605, 606, 607,
	0, 609, 610, 0, 1086, 611, 612, 613, 615, 616,
	614, 617, 1147, 618, 0, 0, 619, 620, 621, 678,
	1170, 1207, 0, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 1083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1078, 0, 0, 0, 0, 0, 0, 1076,
	1077, 0, 0, 0, 0, 0, 0, 0, 1109, 2610,
	0, 2609, 1107, 1125, 1097, 1098, 1099, 1095, 1096, 1108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 1149, 1113, 0, 0, 0,
	285, 286, 1189, 287, 288, 289, 290, 291, 292, 632,
	1162, 0, 293, 1169, 294, 1168, 0, 1179, 295, 296,
	297, 298, 299, 300, 1115, 1148, 1080, 301, 1209, 1210,
	639, 0, 302, 303, 1155, 0, 1136, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 1190, 326, 327, 328, 1139,
	1137, 1138, 1145, 1141, 1140, 1144, 329, 330, 331, 332,
	333, 1172, 334, 1166, 1165, 1085, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	1157, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 1091, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 1180, 1181, 365, 1104, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 1164, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 1191, 372, 373, 374,
	1177, 1178, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 1187, 0, 1114, 385, 0, 386, 387,
	388, 389, 390, 1150, 1151, 1154, 470, 1193, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 274,
	398, 399, 400, 402, 0, 1192, 401, 1159, 1160, 0,
	1120, 0, 403, 404, 1194, 1152, 1195, 405, 406, 407,
	1196, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 1188, 1197, 419,
	420, 1198, 0, 421, 0, 0, 0, 422, 423, 426,
	1143, 1142, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 1199, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 1200, 466, 455, 1082, 275,
	1201, 467, 468, 1105, 1153, 469, 1167, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 1202, 480, 1203, 1182, 481, 482, 1092,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	1183, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 1163, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 1204,
	535, 536, 537, 538, 539, 1093, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 1146, 562, 563,
	545, 546, 564, 565, 1205, 566, 567, 568, 569, 570,
	571, 572, 1161, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 1208, 580, 581, 582, 583, 1184,
	587, 588, 0, 589, 590, 1079, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	1173, 1174, 1175, 1176, 0, 608, 0, 600, 601, 602,
	1185, 603, 1186, 1103, 604, 605, 606, 607, 0, 609,
	610, 0, 1086, 611, 612, 613, 615, 616, 614, 617,
	1147, 618, 0, 0, 619, 620, 621, 678, 1170, 1207,
	0, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 1083, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1078, 0, 0, 0, 0, 0, 0, 1076, 1077, 0,
	0, 0, 0, 0, 0, 0, 1109, 2607, 0, 1705,
	1107, 1125, 1097, 1098, 1099, 1095, 1096, 1108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 1149, 1113, 0, 0, 0, 285, 286,
	1189, 287, 288, 289, 290, 291, 292, 632, 1162, 0,
	293, 1169, 294, 1168, 0, 1179, 295, 296, 297, 298,
	299, 300, 1115, 1148, 1080, 301, 1209, 1210, 639, 0,
	302, 303, 1155, 0, 1136, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 1190, 326, 327, 328, 1139, 1137, 1138,
	1145, 1141, 1140, 1144, 329, 330, 331, 332, 333, 1172,
	334, 1166, 1165, 1085, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 1157, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	1091, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 1180, 1181, 365, 1104, 273, 0, 0, 0, 0,
	0, 366, 367, 368, 1164, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 1191, 372, 373, 374, 1177, 1178,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 1187, 0, 1114, 385, 0, 386, 387, 388, 389,
	390, 1150, 1151, 1154, 470, 1193, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 274, 398, 399,
	400, 402, 0, 1192, 401, 1159, 1160, 0, 1120, 0,
	403, 404, 1194, 1152, 1195, 405, 406, 407, 1196, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 1188, 1197, 419, 420, 1198,
	0, 421, 0, 0, 0, 422, 423, 426, 1143, 1142,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 1199,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 1200, 466, 455, 1082, 275, 1201, 467,
	468, 1105, 1153, 469, 1167, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 1202, 480, 1203, 1182, 481, 482, 1092, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 1183, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 1163, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 1204, 535, 536,
	537, 538, 539, 1093, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 1146, 562, 563, 545, 546,
	564, 565, 1205, 566, 567, 568, 569, 570, 571, 572,
	1161, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 1208, 580, 581, 582, 583, 1184, 587, 588,
	0, 589, 590, 1079, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 1173, 1174,
	1175, 1176, 0, 608, 0, 600, 601, 602, 1185, 603,
	1186, 1103, 604, 605, 606, 607, 0, 609, 610, 0,
	1086, 611, 612, 613, 615, 616, 614, 617, 1147, 618,
	0, 0, 619, 620, 621, 678, 1170, 1207, 0, 623,
	622, 624, 681, 0, 625, 1704, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 1083, 0, 0, 1072, 0,
	1125, 1097, 1098, 1099, 1095, 1096, 1108, 0, 1078, 0,
	0, 0, 0, 0, 0, 1076, 1077, 276, 278, 277,
	279, 280, 281, 282, 1109, 283, 284, 0, 1107, 0,
	0, 0, 1149, 1113, 0, 0, 0, 285, 286, 1189,
	287, 288, 289, 290, 291, 292, 632, 1162, 0, 293,
	1169, 294, 1168, 0, 1179, 295, 296, 297, 298, 299,
	300, 1115, 1148, 1080, 301, 1209, 1210, 639, 0, 302,
	303, 1155, 0, 1136, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145,
	1141, 1140, 1144, 329, 330, 331, 332, 333, 1172, 334,
	1166, 1165, 1085, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 1157, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 1091,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	1180, 1181, 365, 1104, 273, 0, 0, 0, 0, 0,
	366, 367, 368, 1164, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 1191, 372, 373, 374, 1177, 1178, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	1187, 0, 1114, 385, 0, 386, 387, 388, 389, 390,
	1150, 1151, 1154, 470, 1193, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 274, 398, 399, 400,
	402, 0, 1192, 401, 1159, 1160, 0, 1120, 0, 403,
	404, 1194, 1152, 1195, 405, 406, 407, 1196, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 1188, 1197, 419, 420, 1198, 0,
	421, 0, 0, 0, 422, 423, 426, 1143, 1142, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 1199, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 1200, 466, 455, 1082, 275, 1201, 467, 468,
	1105, 1153, 469, 1167, 471, 472, 0, 0, 473, 0,
	1087, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	1202, 480, 1203, 1182, 481, 482, 1092, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 1183, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 1163, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 1204, 535, 536, 537,
	538, 539, 1093, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 1146, 562, 563, 545, 546, 564,
	565, 1205, 566, 567, 568, 569, 570, 571, 572, 1161,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 1208, 580, 581, 582, 583, 1184, 587, 588, 0,
	589, 590, 1079, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 1173, 1174, 1175,
	1176, 0, 608, 0, 600, 601, 602, 1185, 603, 1186,
	1103, 604, 605, 606, 607, 0, 609, 610, 0, 1086,
	611, 612, 613, 615, 616, 614, 617, 1147, 618, 0,
	0, 619, 620, 621, 678, 1170, 1207, 0, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 1083, 0, 0, 0, 0, 1125,
	1097, 1098, 1099, 1095, 1096, 1108, 0, 1078, 0, 0,
	0, 0, 0, 0, 1076, 1077, 276, 278, 277, 279,
	280, 281, 282, 1109, 283, 284, 0, 1107, 0, 0,
	0, 1149, 1113, 0, 0, 0, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 1162, 0, 293, 1169,
	294, 1168, 0, 1179, 295, 296, 297, 298, 299, 300,
	1115, 1148, 1080, 301, 1209, 1210, 639, 0, 302, 303,
	1155, 0, 1136, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 4665, 322, 0, 323, 324,
	325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141,
	1140, 1144, 329, 330, 331, 332, 333, 1172, 334, 1166,
	1165, 1085, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 1157, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 1091, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 1180,
	1181, 365, 1104, 273, 0, 0, 0, 0, 0, 366,
	367, 368, 1164, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 1191, 372, 373, 374, 1177, 1178, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 1187,
	0, 1114, 385, 0, 386, 387, 388, 389, 390, 1150,
	1151, 1154, 470, 1193, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	0, 1192, 401, 1159, 1160, 0, 1120, 0, 403, 404,
	1194, 1152, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 1188, 1197, 419, 420, 1198, 0, 421,
	0, 0, 0, 422, 423, 426, 1143, 1142, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 1082, 275, 1201, 467, 468, 1105,
	1153, 469, 1167, 471, 472, 0, 0, 473, 0, 1087,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 1202,
	480, 1203, 1182, 481, 482, 1092, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 1183, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 1163, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 1093, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 1146, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 1161, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	1208, 580, 581, 582, 583, 1184, 587, 588, 0, 589,
	590, 1079, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 1173, 1174, 1175, 1176,
	0, 608, 0, 600, 601, 602, 1185, 603, 1186, 1103,
	604, 605, 606, 607, 0, 609, 610, 0, 1086, 611,
	612, 613, 615, 616, 614, 617, 1147, 618, 0, 0,
	619, 620, 621, 678, 1170, 1207, 0, 623, 622, 624,
	681, 0, 625, 0, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 1083, 0, 0, 0, 0, 1125, 1097,
	1098, 1099, 1095, 1096, 1108, 0, 1078, 0, 0, 0,
	0, 0, 0, 1076, 1077, 276, 278, 277, 279, 280,
	281, 282, 1109, 283, 284, 0, 1107, 0, 0, 0,
	1149, 1113, 0, 0, 0, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 1162, 0, 293, 1169, 294,
	1168, 0, 1179, 295, 296, 297, 298, 299, 300, 1115,
	1148, 1080, 301, 1209, 1210, 639, 0, 302, 303, 1155,
	0, 1136, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140,
	1144, 329, 330, 331, 332, 333, 1172, 334, 1166, 1165,
	1085, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 1157, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 1091, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 1180, 1181,
	365, 1104, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 1164, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 1191, 372, 373, 374, 1177, 1178, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 1187, 0,
	1114, 385, 0, 386, 387, 388, 389, 390, 1150, 1151,
	1154, 470, 1193, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 2450, 398, 399, 400, 402, 0,
	1192, 401, 1159, 1160, 0, 1120, 0, 403, 404, 1194,
	1152, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 1188, 1197, 419, 420, 1198, 0, 421, 0,
	0, 0, 422, 423, 426, 1143, 1142, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 1082, 275, 1201, 467, 468, 1105, 1153,
	469, 1167, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 1202, 480,
	1203, 1182, 481, 482, 1092, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 1183, 500, 666, 501, 502,
	2449, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 1163, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	1093, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 1146, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 1161, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 1208,
	580, 581, 582, 583, 1184, 587, 588, 0, 589, 590,
	1079, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 1173, 1174, 1175, 1176, 0,
	608, 0, 600, 601, 602, 1185, 603, 1186, 1103, 604,
	605, 606, 607, 0, 609, 610, 0, 1086, 611, 612,
	613, 615, 616, 614, 617, 1147, 618, 0, 0, 619,
	620, 621, 678, 1170, 1207, 0, 623, 622, 624, 681,
	0, 625, 0, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 1083, 0, 0, 0, 0, 1125, 1097, 1098,
	1099, 1095, 1096, 1108, 0, 1078, 0, 0, 0, 0,
	0, 0, 1076, 1077, 276, 278, 277, 279, 280, 281,
	282, 1109, 283, 284, 0, 1107, 0, 0, 0, 1149,
	1113, 0, 0, 0, 285, 286, 1189, 287, 288, 289,
	290, 291, 292, 632, 1162, 0, 293, 1169, 294, 1168,
	0, 1179, 295, 296, 297, 298, 299, 300, 1115, 1148,
	1080, 301, 1209, 1210, 639, 0, 302, 303, 1155, 0,
	1136, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 1190,
	326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140, 1144,
	329, 330, 331, 332, 333, 1172, 334, 1166, 1165, 1085,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 1157, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 1091, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 1180, 1181, 365,
	1104, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	1164, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	1191, 372, 373, 374, 1177, 1178, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 1187, 0, 1114,
	385, 0, 386, 387, 388, 389, 390, 1150, 1151, 1154,
	470, 1193, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 274, 398, 399, 400, 402, 0, 1192,
	401, 1159, 1160, 0, 1120, 0, 403, 404, 1194, 1152,
	1195, 405, 406, 407, 1196, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 1188, 1197, 419, 420, 1198, 0, 421, 0, 0,
	0, 422, 423, 426, 1143, 1142, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 1199, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 1200,
	466, 455, 1082, 275, 1201, 467, 468, 1105, 1153, 469,
	1167, 471, 472, 0, 0, 473, 0, 1087, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 1202, 480, 1203,
	1182, 481, 482, 1092, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 1183, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	1163, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 1204, 535, 536, 537, 538, 539, 1093,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 1146, 562, 563, 545, 546, 564, 565, 1205, 566,
	567, 568, 569, 570, 571, 572, 1161, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 1208, 580,
	581, 582, 583, 1184, 587, 588, 0, 589, 590, 1079,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 1173, 1174, 1175, 1176, 0, 608,
	0, 600, 601, 602, 1185, 603, 1186, 1103, 604, 605,
	606, 607, 0, 609, 610, 0, 1086, 611, 612, 613,
	615, 616, 614, 617, 1147, 618, 0, 0, 619, 620,
	621, 678, 1170, 1207, 0, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 1083, 0, 0, 0, 0, 1125, 1097, 1098, 1099,
	1095, 1096, 1108, 0, 1078, 0, 0, 0, 0, 0,
	0, 1076, 1077, 276, 278, 277, 279, 280, 281, 282,
	1109, 283, 284, 0, 1107, 0, 0, 0, 1149, 1113,
	0, 0, 0, 285, 286, 1189, 287, 288, 289, 290,
	291, 292, 632, 1162, 0, 293, 1169, 294, 1168, 0,
	1179, 295, 296, 297, 298, 299, 300, 1115, 1148, 1080,
	301, 1209, 1210, 639, 0, 302, 303, 1155, 0, 1136,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 4405, 322, 0, 323, 324, 325, 1190, 326,
	327, 328, 1139, 1137, 1138, 1145, 1141, 1140, 1144, 329,
	330, 331, 332, 333, 1172, 334, 1166, 1165, 1085, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 1157, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 1091, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 1180, 1181, 365, 1104,
	273, 0, 0, 0, 0, 0, 366, 367, 368, 1164,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 1191,
	372, 373, 374, 1177, 1178, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 1187, 0, 1114, 385,
	0, 386, 387, 388, 389, 390, 1150, 1151, 1154, 470,
	1193, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 274, 398, 399, 400, 402, 0, 1192, 401,
	1159, 1160, 0, 1120, 0, 403, 404, 1194, 1152, 1195,
	405, 406, 407, 1196, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	1188, 1197, 419, 420, 1198, 0, 421, 0, 0, 0,
	422, 423, 426, 1143, 1142, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 1199, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 1200, 466,
	455, 1082, 275, 1201, 467, 468, 1105, 1153, 469, 1167,
	471, 472, 0, 0, 473, 0, 1087, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 1202, 480, 1203, 1182,
	481, 482, 1092, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 1183, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 1163,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 1204, 535, 536, 537, 538, 539, 1093, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	1146, 562, 563, 545, 546, 564, 565, 1205, 566, 567,
	568, 569, 570, 571, 572, 1161, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 1208, 580, 581,
	582, 583, 1184, 587, 588, 0, 589, 590, 1079, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 1173, 1174, 1175, 1176, 0, 608, 0,
	600, 601, 602, 1185, 603, 1186, 1103, 604, 605, 606,
	607, 0, 609, 610, 0, 1086, 611, 612, 613, 615,
	616, 614, 617, 1147, 618, 0, 0, 619, 620, 621,
	678, 1170, 1207, 0, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	1083, 0, 0, 0, 0, 1125, 1097, 1098, 1099, 1095,
	1096, 1108, 0, 1078, 0, 0, 0, 0, 0, 0,
	1076, 1077, 276, 278, 277, 279, 280, 281, 282, 1109,
	283, 284, 0, 1107, 0, 0, 0, 1149, 1113, 0,
	0, 0, 285, 286, 1189, 287, 288, 289, 290, 291,
	292, 632, 1162, 0, 293, 1169, 294, 1168, 0, 1179,
	295, 296, 297, 298, 299, 300, 1115, 1148, 1080, 301,
	1209, 1210, 639, 0, 302, 303, 1155, 0, 1136, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 1190, 326, 327,
	328, 1139, 1137, 1138, 1145, 1141, 1140, 1144, 329, 330,
	331, 332, 333, 1172, 334, 1166, 1165, 1085, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 1157, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 1091, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 1180, 1181, 365, 1104, 273,
	0, 0, 0, 0, 0, 366, 367, 368, 1164, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 1191, 372,
	373, 374, 1177, 1178, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 1187, 0, 1114, 385, 0,
	386, 387, 388, 389, 390, 1150, 1151, 1154, 470, 1193,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 274, 398, 399, 400, 402, 0, 1192, 401, 1159,
	1160, 0, 1120, 0, 403, 404, 1194, 1152, 1195, 405,
	406, 407, 1196, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 1188,
	1197, 419, 420, 1198, 0, 421, 0, 0, 0, 422,
	423, 426, 1143, 1142, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 1199, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 1200, 466, 455,
	1082, 4002, 1201, 467, 468, 1105, 1153, 469, 1167, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 1202, 480, 1203, 1182, 481,
	482, 1092, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 1183, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 1163, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 1204, 535, 536, 537, 538, 539, 1093, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 1146,
	562, 563, 545, 546, 564, 565, 1205, 566, 567, 568,
	569, 570, 571, 572, 1161, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 1208, 580, 581, 582,
	583, 1184, 587, 588, 0, 589, 590, 1079, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 1173, 1174, 1175, 1176, 0, 608, 0, 600,
	601, 602, 1185, 603, 1186, 1103, 604, 605, 606, 607,
	0, 609, 610, 0, 1086, 611, 612, 613, 615, 616,
	614, 617, 1147, 618, 0, 0, 619, 620, 621, 678,
	1170, 1207, 0, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 1083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1078, 0, 0, 0, 0, 0, 0, 1076,
	1077, 1933, 0, 0, 0, 0, 0, 0, 1109, 0,
	0, 0, 1107, 1125, 1097, 1098, 1099, 1095, 1096, 1108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 1149, 1113, 0, 0, 0,
	285, 286, 1189, 287, 288, 289, 290, 291, 292, 632,
	1162, 0, 293, 1169, 294, 1168, 0, 1179, 295, 296,
	297, 298, 299, 300, 1115, 1148, 1080, 301, 1209, 1210,
	639, 0, 302, 303, 1155, 0, 1136, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 1190, 326, 327, 328, 1139,
	1137, 1138, 1145, 1141, 1140, 1144, 329, 330, 331, 332,
	333, 1172, 334, 1166, 1165, 1085, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	1157, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 1091, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 1180, 1181, 365, 1104, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 1164, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 1191, 372, 373, 374,
	1177, 1178, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 1187, 0, 1114, 385, 0, 386, 387,
	388, 389, 390, 1150, 1151, 1154, 470, 1193, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 274,
	398, 399, 400, 402, 0, 1192, 401, 1159, 1160, 0,
	1120, 0, 403, 404, 1194, 1152, 1195, 405, 406, 407,
	1196, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 1188, 1197, 419,
	420, 1198, 0, 421, 0, 0, 0, 422, 423, 426,
	1143, 1142, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 1199, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 1200, 466, 455, 1082, 275,
	1201, 467, 468, 1105, 1153, 469, 1167, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 1202, 480, 1203, 1182, 481, 482, 1092,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	1183, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 1163, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 1204,
	535, 536, 537, 538, 539, 1093, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 1146, 562, 563,
	545, 546, 564, 565, 1205, 566, 567, 568, 569, 570,
	571, 572, 1161, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 1208, 580, 581, 582, 583, 1184,
	587, 588, 0, 589, 590, 1079, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	1173, 1174, 1175, 1176, 0, 608, 0, 600, 601, 602,
	1185, 603, 1186, 1103, 604, 605, 606, 607, 0, 609,
	610, 0, 1086, 611, 612, 613, 615, 616, 614, 617,
	1147, 618, 0, 0, 619, 620, 621, 678, 1170, 1207,
	3715, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 1083, 0, 0,
	0, 0, 1125, 1097, 1098, 1099, 1095, 1096, 1108, 0,
	1078, 0, 0, 0, 0, 0, 0, 1076, 1077, 276,
	278, 277, 279, 280, 281, 282, 1109, 283, 284, 0,
	1107, 0, 0, 0, 1149, 1113, 0, 0, 0, 285,
	286, 1189, 287, 288, 289, 290, 291, 292, 632, 1162,
	0, 293, 1169, 294, 1168, 0, 1179, 295, 296, 297,
	298, 299, 300, 1115, 1148, 1080, 301, 1209, 1210, 639,
	0, 302, 303, 1155, 0, 1136, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 1190, 326, 327, 328, 1139, 1137,
	1138, 1145, 1141, 1140, 1144, 329, 330, 331, 332, 333,
	1172, 334, 1166, 1165, 1085, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 1157,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 1091, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 1180, 1181, 365, 1104, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 1164, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 1191, 372, 373, 374, 1177,
	1178, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 1187, 0, 1114, 385, 0, 386, 387, 388,
	389, 390, 1150, 1151, 1154, 470, 1193, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 274, 398,
	399, 400, 402, 0, 1192, 401, 1159, 1160, 0, 1120,
	0, 403, 404, 1194, 1152, 1195, 405, 406, 407, 1196,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 1188, 1197, 419, 420,
	1198, 0, 421, 0, 0, 0, 422, 423, 426, 1143,
	1142, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	1199, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 1200, 466, 455, 1082, 275, 1201,
	467, 468, 1105, 1153, 469, 1167, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 1202, 480, 1203, 1182, 481, 482, 1092, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 1183,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 1163, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 1204, 535,
	536, 537, 538, 539, 1093, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 1146, 562, 563, 545,
	546, 564, 565, 1205, 566, 567, 568, 569, 570, 571,
	572, 1161, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 1208, 580, 581, 582, 583, 1184, 587,
	588, 0, 589, 590, 1079, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 1173,
	1174, 1175, 1176, 0, 608, 0, 600, 601, 602, 1185,
	603, 1186, 1103, 604, 605, 606, 607, 0, 609, 610,
	0, 1086, 611, 612, 613, 615, 616, 614, 617, 1147,
	618, 0, 0, 619, 620, 621, 678, 1170, 1207, 0,
	623, 622, 624, 681, 0, 625, 0, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 1083, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1078,
	0, 0, 0, 0, 0, 0, 1076, 1077, 1933, 0,
	0, 0, 0, 0, 0, 1109, 0, 0, 0, 1107,
	1125, 1097, 1098, 1099, 1095, 1096, 1108, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 1149, 1113, 0, 0, 0, 285, 286, 1189,
	287, 288, 289, 290, 291, 292, 632, 1162, 0, 293,
	1169, 294, 1168, 0, 1179, 295, 296, 297, 298, 299,
	300, 1115, 1148, 1080, 301, 1209, 1210, 639, 0, 302,
	303, 1155, 0, 1136, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145,
	1141, 1140, 1144, 329, 330, 331, 332, 333, 1172, 334,
	1166, 1165, 1085, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 1157, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 1091,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	1180, 1181, 365, 1104, 273, 0, 0, 0, 0, 0,
	366, 367, 368, 1164, 0, 0, 0, 369, 0, 370,
	371, 0, 2709, 1191, 372, 373, 374, 1177, 1178, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	1187, 0, 1114, 385, 0, 386, 387, 388, 389, 390,
	1150, 1151, 1154, 470, 1193, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 274, 398, 399, 400,
	402, 0, 1192, 401, 1159, 1160, 0, 1120, 0, 403,
	404, 1194, 1152, 1195, 405, 406, 407, 1196, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 1188, 1197, 419, 420, 1198, 0,
	421, 0, 0, 0, 422, 423, 426, 1143, 1142, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 1199, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 1200, 466, 455, 1082, 275, 1201, 467, 468,
	1105, 1153, 469, 1167, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	1202, 480, 1203, 1182, 481, 482, 1092, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 1183, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 1163, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 1204, 535, 536, 537,
	538, 539, 1093, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 1146, 562, 563, 545, 546, 564,
	565, 1205, 566, 567, 568, 569, 570, 571, 572, 1161,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 1208, 580, 581, 582, 583, 1184, 587, 588, 0,
	589, 590, 1079, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 1173, 1174, 1175,
	1176, 0, 608, 0, 600, 601, 602, 1185, 603, 1186,
	1103, 604, 605, 606, 607, 0, 609, 610, 0, 1086,
	611, 612, 613, 615, 616, 614, 617, 1147, 618, 0,
	0, 619, 620, 621, 678, 1170, 1207, 0, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 1083, 0, 0, 0, 0, 1125,
	1097, 1098, 1099, 1095, 1096, 1108, 0, 1078, 0, 0,
	0, 0, 0, 0, 1076, 1077, 276, 278, 277, 279,
	280, 281, 282, 1109, 283, 284, 0, 1107, 0, 0,
	0, 1149, 1113, 0, 0, 0, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 1162, 0, 293, 1169,
	294, 1168, 0, 1179, 295, 296, 297, 298, 299, 300,
	1115, 1148, 1080, 301, 1209, 1210, 639, 0, 302, 303,
	1155, 0, 1136, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141,
	1140, 1144, 329, 330, 331, 332, 333, 1172, 334, 1166,
	1165, 1085, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 1157, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 1091, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 1180,
	1181, 365, 1104, 273, 0, 0, 0, 0, 0, 366,
	367, 368, 1164, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 1191, 372, 373, 374, 1177, 1178, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 1187,
	0, 1114, 385, 0, 386, 387, 388, 389, 390, 1150,
	1151, 1154, 470, 1193, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	0, 1192, 401, 1159, 1160, 0, 1120, 0, 403, 404,
	1194, 1152, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 1188, 1197, 419, 420, 1198, 0, 421,
	0, 0, 0, 422, 423, 426, 1143, 1142, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 1082, 275, 1201, 467, 468, 1105,
	1153, 469, 1167, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 1202,
	480, 1203, 1182, 481, 482, 1092, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 1183, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 1163, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 1093, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 1146, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 1161, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	1208, 580, 581, 582, 583, 1184, 587, 588, 0, 589,
	590, 1079, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 1173, 1174, 1175, 1176,
	0, 608, 0, 600, 601, 602, 1185, 603, 1186, 1103,
	604, 605, 606, 607, 0, 609, 610, 0, 1086, 611,
	612, 613, 615, 616, 614, 617, 1147, 618, 0, 0,
	619, 620, 621, 678, 1170, 1207, 0, 623, 622, 624,
	681, 0, 625, 0, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 1083, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1078, 0, 0, 0,
	0, 0, 0, 1076, 1077, 0, 0, 0, 0, 0,
	0, 0, 1109, 1862, 0, 2714, 1107, 1125, 1097, 1098,
	1099, 1095, 1096, 1108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 1149,
	1113, 0, 0, 0, 285, 286, 1189, 287, 288, 289,
	290, 291, 292, 632, 1162, 0, 293, 1169, 294, 1168,
	0, 1179, 295, 296, 297, 298, 299, 300, 1115, 1148,
	1080, 301, 1209, 1210, 639, 0, 302, 303, 1155, 0,
	1136, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 1190,
	326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140, 1144,
	329, 330, 331, 332, 333, 1172, 334, 1166, 1165, 1085,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 1157, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 1091, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 1180, 1181, 365,
	1104, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	1164, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	1191, 372, 373, 374, 1177, 1178, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 1187, 0, 1114,
	385, 0, 386, 387, 388, 389, 390, 1150, 1151, 1154,
	470, 1193, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 274, 398, 399, 400, 402, 0, 1192,
	401, 1159, 1160, 0, 1120, 0, 403, 404, 1194, 1152,
	1195, 405, 406, 407, 1196, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 1188, 1197, 419, 420, 1198, 0, 421, 0, 0,
	0, 422, 423, 426, 1143, 1142, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 1199, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 1200,
	466, 455, 1082, 275, 1201, 467, 468, 1105, 1153, 469,
	1167, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 1202, 480, 1203,
	1182, 481, 482, 1092, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 1183, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	1163, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 1204, 535, 536, 537, 538, 539, 1093,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 1146, 562, 563, 545, 546, 564, 565, 1205, 566,
	567, 568, 569, 570, 571, 572, 1161, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 1208, 580,
	581, 582, 583, 1184, 587, 588, 0, 589, 590, 1079,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 1173, 1174, 1175, 1176, 0, 608,
	0, 600, 601, 602, 1185, 603, 1186, 1103, 604, 605,
	606, 607, 0, 609, 610, 0, 1086, 611, 612, 613,
	615, 616, 614, 617, 1147, 618, 0, 0, 619, 620,
	621, 678, 1170, 1207, 0, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 1083, 0, 0, 2712, 0, 1125, 1097, 1098, 1099,
	1095, 1096, 1108, 0, 1078, 0, 0, 0, 0, 0,
	0, 1076, 1077, 276, 278, 277, 279, 280, 281, 282,
	1109, 283, 284, 0, 1107, 0, 0, 0, 1149, 1113,
	0, 0, 0, 285, 286, 1189, 287, 288, 289, 290,
	291, 292, 632, 1162, 0, 293, 1169, 294, 1168, 0,
	1179, 295, 296, 297, 298, 299, 300, 1115, 1148, 1080,
	301, 1209, 1210, 639, 0, 302, 303, 1155, 0, 1136,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 1190, 326,
	327, 328, 1139, 1137, 1138, 1145, 1141, 1140, 1144, 329,
	330, 331, 332, 333, 1172, 334, 1166, 1165, 1085, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 1157, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 1091, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 1180, 1181, 365, 1104,
	273, 0, 0, 0, 0, 0, 366, 367, 368, 1164,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 1191,
	372, 373, 374, 1177, 1178, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 1187, 0, 1114, 385,
	0, 386, 387, 388, 389, 390, 1150, 1151, 1154, 470,
	1193, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 274, 398, 399, 400, 402, 0, 1192, 401,
	1159, 1160, 0, 1120, 0, 403, 404, 1194, 1152, 1195,
	405, 406, 407, 1196, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	1188, 1197, 419, 420, 1198, 0, 421, 0, 0, 0,
	422, 423, 426, 1143, 1142, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 1199, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 1200, 466,
	455, 1082, 275, 1201, 467, 468, 1105, 1153, 469, 1167,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 1202, 480, 1203, 1182,
	481, 482, 1092, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 1183, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 1163,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 1204, 535, 536, 537, 538, 539, 1093, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	1146, 562, 563, 545, 546, 564, 565, 1205, 566, 567,
	568, 569, 570, 571, 572, 1161, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 1208, 580, 581,
	582, 583, 1184, 587, 588, 0, 589, 590, 1079, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 1173, 1174, 1175, 1176, 0, 608, 0,
	600, 601, 602, 1185, 603, 1186, 1103, 604, 605, 606,
	607, 0, 609, 610, 0, 1086, 611, 612, 613, 615,
	616, 614, 617, 1147, 618, 0, 0, 619, 620, 621,
	678, 1170, 1207, 0, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	1083, 0, 0, 2700, 0, 1125, 1097, 1098, 1099, 1095,
	1096, 1108, 0, 1078, 0, 0, 0, 0, 0, 0,
	1076, 1077, 276, 278, 277, 279, 280, 281, 282, 1109,
	283, 284, 0, 1107, 0, 0, 0, 1149, 1113, 0,
	0, 0, 285, 286, 1189, 287, 288, 289, 290, 291,
	292, 632, 1162, 0, 293, 1169, 294, 1168, 0, 1179,
	295, 296, 297, 298, 299, 300, 1115, 1148, 1080, 301,
	1209, 1210, 639, 0, 302, 303, 1155, 0, 1136, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 1190, 326, 327,
	328, 1139, 1137, 1138, 1145, 1141, 1140, 1144, 329, 330,
	331, 332, 333, 1172, 334, 1166, 1165, 1085, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 1157, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 1091, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 1180, 1181, 365, 1104, 273,
	0, 0, 0, 0, 0, 366, 367, 368, 1164, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 1191, 372,
	373, 374, 1177, 1178, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 1187, 0, 1114, 385, 0,
	386, 387, 388, 389, 390, 1150, 1151, 1154, 470, 1193,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 274, 398, 399, 400, 402, 0, 1192, 401, 1159,
	1160, 0, 1120, 0, 403, 404, 1194, 1152, 1195, 405,
	406, 407, 1196, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 1188,
	1197, 419, 420, 1198, 0, 421, 0, 0, 0, 422,
	423, 426, 1143, 1142, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 1199, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 1200, 466, 455,
	1082, 275, 1201, 467, 468, 1105, 1153, 469, 1167, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 1202, 480, 1203, 1182, 481,
	482, 1092, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 1183, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 1163, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 1204, 535, 536, 537, 538, 539, 1093, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 1146,
	562, 563, 545, 546, 564, 565, 1205, 566, 567, 568,
	569, 570, 571, 572, 1161, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 1208, 580, 581, 582,
	583, 1184, 587, 588, 0, 589, 590, 1079, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 1173, 1174, 1175, 1176, 0, 608, 0, 600,
	601, 602, 1185, 603, 1186, 1103, 604, 605, 606, 607,
	0, 609, 610, 0, 1086, 611, 612, 613, 615, 616,
	614, 617, 1147, 618, 0, 0, 619, 620, 621, 678,
	1170, 1207, 0, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 1083,
	0, 0, 2688, 0, 1125, 1097, 1098, 1099, 1095, 1096,
	1108, 0, 1078, 0, 0, 0, 0, 0, 0, 1076,
	1077, 276, 278, 277, 279, 280, 281, 282, 1109, 283,
	284, 0, 1107, 0, 0, 0, 1149, 1113, 0, 0,
	0, 285, 286, 1189, 287, 288, 289, 290, 291, 292,
	632, 1162, 0, 293, 1169, 294, 1168, 0, 1179, 295,
	296, 297, 298, 299, 300, 1115, 1148, 1080, 301, 1209,
	1210, 639, 0, 302, 303, 1155, 0, 1136, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 1190, 326, 327, 328,
	1139, 1137, 1138, 1145, 1141, 1140, 1144, 329, 330, 331,
	332, 333, 1172, 334, 1166, 1165, 1085, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 1157, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 1091, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 1180, 1181, 365, 1104, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 1164, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 1191, 372, 373,
	374, 1177, 1178, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 1187, 0, 1114, 385, 0, 386,
	387, 388, 389, 390, 1150, 1151, 1154, 470, 1193, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	274, 398, 399, 400, 402, 0, 1192, 401, 1159, 1160,
	0, 1120, 0, 403, 404, 1194, 1152, 1195, 405, 406,
	407, 1196, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 1188, 1197,
	419, 420, 1198, 0, 421, 0, 0, 0, 422, 423,
	426, 1143, 1142, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 1199, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 1200, 466, 455, 1082,
	275, 1201, 467, 468, 1105, 1153, 469, 1167, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 1202, 480, 1203, 1182, 481, 482,
	1092, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 1183, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 1163, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	1204, 535, 536, 537, 538, 539, 1093, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 1146, 562,
	563, 545, 546, 564, 565, 1205, 566, 567, 568, 569,
	570, 571, 572, 1161, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 1208, 580, 581, 582, 583,
	1184, 587, 588, 0, 589, 590, 1079, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 1173, 1174, 1175, 1176, 0, 608, 0, 600, 601,
	602, 1185, 603, 1186, 1103, 604, 605, 606, 607, 0,
	609, 610, 0, 1086, 611, 612, 613, 615, 616, 614,
	617, 1147, 618, 0, 0, 619, 620, 621, 678, 1170,
	1207, 0, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 1083, 0,
	0, 2686, 0, 2677, 2684, 1098, 1099, 1095, 1096, 1108,
	0, 1078, 0, 0, 0, 0, 0, 0, 1076, 1077,
	276, 278, 277, 279, 280, 281, 282, 1109, 283, 284,
	0, 1107, 0, 0, 0, 1149, 1113, 0, 0, 0,
	285, 286, 1189, 287, 288, 289, 290, 291, 292, 632,
	1162, 0, 293, 1169, 294, 1168, 0, 1179, 295, 296,
	297, 298, 299, 300, 1115, 1148, 1080, 301, 1209, 1210,
	639, 0, 302, 303, 1155, 0, 1136, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 1190, 326, 327, 328, 1139,
	1137, 1138, 1145, 1141, 1140, 1144, 329, 330, 331, 332,
	333, 1172, 2680, 1166, 1165, 1085, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	1157, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 1091, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 1180, 1181, 365, 1104, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 1164, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 1191, 372, 373, 374,
	1177, 1178, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 1187, 0, 1114, 385, 0, 386, 387,
	388, 2681, 390, 1150, 1151, 1154, 470, 1193, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 274,
	398, 399, 400, 402, 0, 1192, 401, 1159, 1160, 0,
	1120, 0, 403, 404, 1194, 1152, 1195, 405, 406, 407,
	1196, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 1188, 1197, 419,
	420, 1198, 0, 421, 0, 0, 0, 422, 423, 426,
	1143, 1142, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 2682, 436, 2679, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 1199, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 1200, 466, 455, 1082, 275,
	1201, 467, 468, 1105, 1153, 469, 1167, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 1202, 480, 1203, 1182, 481, 482, 1092,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	1183, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 1163, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 1204,
	535, 536, 537, 538, 539, 1093, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 2683,
	0, 557, 558, 556, 559, 560, 561, 1146, 562, 563,
	545, 546, 564, 565, 1205, 566, 567, 568, 569, 570,
	571, 572, 1161, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 1208, 580, 581, 582, 583, 1184,
	587, 588, 0, 589, 590, 1079, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	1173, 1174, 1175, 1176, 0, 608, 0, 600, 601, 602,
	1185, 603, 1186, 1103, 604, 605, 606, 607, 0, 609,
	610, 0, 1086, 611, 612, 613, 615, 616, 614, 617,
	1147, 618, 0, 0, 619, 620, 621, 678, 1170, 1207,
	0, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	0, 626, 627, 682, 628, 2678, 630, 1083, 0, 0,
	2674, 0, 2677, 2684, 1098, 1099, 1095, 1096, 1108, 0,
	1078, 0, 0, 0, 0, 0, 0, 1076, 1077, 276,
	278, 277, 279, 280, 281, 282, 1109, 283, 284, 0,
	1107, 0, 0, 0, 1149, 1113, 0, 0, 0, 285,
	286, 1189, 287, 288, 289, 290, 291, 292, 632, 1162,
	0, 293, 1169, 294, 1168, 0, 1179, 295, 296, 297,
	298, 299, 300, 1115, 1148, 1080, 301, 1209, 1210, 639,
	0, 302, 303, 1155, 0, 1136, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 1190, 326, 327, 328, 1139, 1137,
	1138, 1145, 1141, 1140, 1144, 329, 330, 331, 332, 333,
	1172, 2680, 1166, 1165, 1085, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 1157,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 1091, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 1180, 1181, 365, 1104, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 1164, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 1191, 372, 373, 374, 1177,
	1178, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 1187, 0, 1114, 385, 0, 386, 387, 388,
	2681, 390, 1150, 1151, 1154, 470, 1193, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 274, 398,
	399, 400, 402, 0, 1192, 401, 1159, 1160, 0, 1120,
	0, 403, 404, 1194, 1152, 1195, 405, 406, 407, 1196,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 1188, 1197, 419, 420,
	1198, 0, 421, 0, 0, 0, 422, 423, 426, 1143,
	1142, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 2682, 436, 2679, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	1199, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 1200, 466, 455, 1082, 275, 1201,
	467, 468, 1105, 1153, 469, 1167, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 1202, 480, 1203, 1182, 481, 482, 1092, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 1183,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 1163, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 1204, 535,
	536, 537, 538, 539, 1093, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 2683, 0,
	557, 558, 556, 559, 560, 561, 1146, 562, 563, 545,
	546, 564, 565, 1205, 566, 567, 568, 569, 570, 571,
	572, 1161, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 1208, 580, 581, 582, 583, 1184, 587,
	588, 0, 589, 590, 1079, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 1173,
	1174, 1175, 1176, 0, 608, 0, 600, 601, 602, 1185,
	603, 1186, 1103, 604, 605, 606, 607, 0, 609, 610,
	0, 1086, 611, 612, 613, 615, 616, 614, 617, 1147,
	618, 0, 0, 619, 620, 621, 678, 1170, 1207, 0,
	623, 622, 624, 681, 0, 625, 0, 0, 0, 0,
	626, 627, 682, 628, 2678, 630, 1083, 0, 0, 0,
	0, 1125, 1097, 1098, 1099, 1095, 1096, 1108, 0, 1078,
	0, 0, 0, 0, 0, 0, 1076, 1077, 276, 278,
	277, 279, 280, 281, 282, 1109, 283, 284, 0, 1107,
	0, 0, 0, 1149, 1113, 0, 0, 0, 285, 286,
	1189, 287, 288, 289, 290, 291, 292, 632, 1162, 0,
	293, 1169, 294, 1168, 0, 1179, 295, 296, 297, 298,
	299, 300, 1115, 1148, 1080, 301, 1209, 1210, 639, 0,
	302, 303, 1155, 0, 1136, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 1190, 326, 327, 328, 1139, 1137, 1138,
	1145, 1141, 1140, 1144, 329, 330, 331, 332, 333, 1172,
	334, 1166, 1165, 1085, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 1157, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	1091, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 1180, 1181, 365, 1104, 273, 0, 0, 0, 0,
	0, 366, 367, 368, 1164, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 1191, 372, 373, 374, 1177, 1178,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 1187, 0, 1114, 385, 0, 386, 387, 388, 389,
	390, 1150, 1151, 1154, 470, 1193, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 274, 398, 399,
	400, 402, 0, 1192, 401, 1159, 1160, 0, 1120, 0,
	403, 404, 1194, 1152, 1195, 405, 406, 407, 1196, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 1188, 1197, 419, 420, 1198,
	0, 421, 0, 0, 0, 422, 423, 426, 1143, 1142,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 1199,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 1200, 466, 455, 1082, 275, 1201, 467,
	468, 1105, 1153, 469, 1167, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 1202, 480, 1203, 1182, 481, 482, 1092, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 1183, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 1163, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 1204, 535, 536,
	537, 538, 539, 1093, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 1146, 562, 563, 545, 546,
	564, 565, 1205, 566, 567, 568, 569, 570, 571, 572,
	1161, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 1208, 580, 581, 582, 583, 1184, 587, 588,
	0, 589, 590, 1079, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 1173, 1174,
	1175, 1176, 0, 608, 0, 600, 601, 602, 1185, 603,
	1186, 1103, 604, 605, 606, 607, 0, 609, 610, 0,
	1086, 611, 612, 613, 615, 616, 614, 617, 1147, 618,
	0, 0, 619, 620, 621, 678, 1170, 1207, 0, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 1083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1078, 0,
	0, 0, 0, 0, 0, 1076, 1077, 0, 0, 0,
	0, 0, 1870, 0, 1109, 0, 0, 0, 1107, 1125,
	1097, 1098, 1099, 1095, 1096, 1108, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 278, 277, 279,
	280, 281, 282, 2429, 283, 284, 0, 0, 0, 0,
	0, 1149, 1113, 0, 0, 0, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 1162, 0, 293, 1169,
	294, 1168, 0, 1179, 295, 296, 297, 298, 299, 300,
	1115, 1148, 1080, 301, 1209, 1210, 639, 0, 302, 303,
	1155, 0, 1136, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141,
	1140, 1144, 329, 330, 331, 332, 333, 1172, 334, 1166,
	1165, 1085, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 1157, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 1091, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 1180,
	1181, 365, 1104, 273, 0, 0, 0, 0, 0, 366,
	367, 368, 1164, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 1191, 372, 373, 374, 1177, 1178, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 1187,
	0, 1114, 385, 0, 386, 387, 388, 389, 390, 1150,
	1151, 1154, 470, 1193, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	0, 1192, 401, 1159, 1160, 0, 1120, 0, 403, 404,
	1194, 1152, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 1188, 1197, 419, 420, 1198, 0, 421,
	0, 0, 0, 422, 423, 426, 1143, 1142, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 1082, 275, 1201, 467, 468, 1105,
	1153, 469, 1167, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 1202,
	480, 1203, 1182, 481, 482, 1092, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 1183, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 1163, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 1093, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 1146, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 1161, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	1208, 580, 581, 582, 583, 1184, 587, 588, 0, 589,
	590, 1079, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 1173, 1174, 1175, 1176,
	0, 608, 0, 600, 601, 602, 1185, 603, 1186, 1103,
	604, 605, 606, 607, 0, 609, 610, 0, 1086, 611,
	612, 613, 615, 616, 614, 617, 1147, 618, 0, 0,
	619, 620, 621, 678, 1170, 1207, 0, 623, 622, 624,
	681, 0, 625, 0, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 1083, 0, 0, 2393, 0, 1125, 1097,
	1098, 1099, 1095, 1096, 1108, 0, 1078, 0, 0, 0,
	0, 0, 0, 1076, 1077, 276, 278, 277, 279, 280,
	281, 282, 1109, 283, 284, 0, 1107, 0, 0, 0,
	1149, 1113, 0, 0, 0, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 1162, 0, 293, 1169, 294,
	1168, 0, 1179, 295, 296, 297, 298, 299, 300, 1115,
	1148, 1080, 301, 1209, 1210, 639, 0, 302, 303, 1155,
	0, 1136, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140,
	1144, 329, 330, 331, 332, 333, 1172, 334, 1166, 1165,
	1085, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 1157, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 1091, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 1180, 1181,
	365, 1104, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 1164, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 1191, 372, 373, 374, 1177, 1178, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 1187, 0,
	1114, 385, 0, 386, 387, 388, 389, 390, 1150, 1151,
	1154, 470, 1193, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 0,
	1192, 401, 1159, 1160, 0, 1120, 0, 403, 404, 1194,
	1152, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 1188, 1197, 419, 420, 1198, 0, 421, 0,
	0, 0, 422, 423, 426, 1143, 1142, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 1082, 275, 1201, 467, 468, 1105, 1153,
	469, 1167, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 1202, 480,
	1203, 1182, 481, 482, 1092, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 1183, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 1163, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	1093, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 1146, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 1161, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 1208,
	580, 581, 582, 583, 1184, 587, 588, 0, 589, 590,
	1079, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 1173, 1174, 1175, 1176, 0,
	608, 0, 600, 601, 602, 1185, 603, 1186, 1103, 604,
	605, 606, 607, 0, 609, 610, 0, 1086, 611, 612,
	613, 615, 616, 614, 617, 1147, 618, 0, 0, 619,
	620, 621, 678, 1170, 1207, 0, 623, 622, 624, 681,
	0, 625, 0, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 1083, 0, 0, 2369, 0, 1125, 1097, 1098,
	1099, 1095, 1096, 1108, 0, 1078, 0, 0, 0, 0,
	0, 0, 1076, 1077, 276, 278, 277, 279, 280, 281,
	282, 1109, 283, 284, 0, 1107, 0, 0, 0, 1149,
	1113, 0, 0, 0, 285, 286, 1189, 287, 288, 289,
	290, 291, 292, 632, 1162, 0, 293, 1169, 294, 1168,
	0, 1179, 295, 296, 297, 298, 299, 300, 1115, 1148,
	1080, 301, 1209, 1210, 639, 0, 302, 303, 1155, 0,
	1136, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 1190,
	326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140, 1144,
	329, 330, 331, 332, 333, 1172, 334, 1166, 1165, 1085,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 1157, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 1091, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 1180, 1181, 365,
	1104, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	1164, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	1191, 372, 373, 374, 1177, 1178, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 1187, 0, 1114,
	385, 0, 386, 387, 388, 389, 390, 1150, 1151, 1154,
	470, 1193, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 274, 398, 399, 400, 402, 0, 1192,
	401, 1159, 1160, 0, 1120, 0, 403, 404, 1194, 1152,
	1195, 405, 406, 407, 1196, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 1188, 1197, 419, 420, 1198, 0, 421, 0, 0,
	0, 422, 423, 426, 1143, 1142, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 1199, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 1200,
	466, 455, 1082, 275, 1201, 467, 468, 1105, 1153, 469,
	1167, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 1202, 480, 1203,
	1182, 481, 482, 1092, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 1183, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	1163, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 1204, 535, 536, 537, 538, 539, 1093,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 1146, 562, 563, 545, 546, 564, 565, 1205, 566,
	567, 568, 569, 570, 571, 572, 1161, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 1208, 580,
	581, 582, 583, 1184, 587, 588, 0, 589, 590, 1079,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 1173, 1174, 1175, 1176, 0, 608,
	0, 600, 601, 602, 1185, 603, 1186, 1103, 604, 605,
	606, 607, 0, 609, 610, 0, 1086, 611, 612, 613,
	615, 616, 614, 617, 1147, 618, 0, 0, 619, 620,
	621, 678, 1170, 1207, 0, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 1083, 0, 0, 1710, 0, 1125, 1097, 1098, 1099,
	1095, 1096, 1108, 0, 1078, 0, 0, 0, 0, 0,
	0, 1076, 1077, 276, 278, 277, 279, 280, 281, 282,
	1109, 283, 284, 0, 1107, 0, 0, 0, 1149, 1113,
	0, 0, 0, 285, 286, 1189, 287, 288, 289, 290,
	291, 292, 632, 1162, 0, 293, 1169, 294, 1168, 0,
	1179, 295, 296, 297, 298, 299, 300, 1115, 1148, 1080,
	301, 1209, 1210, 639, 0, 302, 303, 1155, 0, 1136,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 1190, 326,
	327, 328, 1139, 1137, 1138, 1145, 1141, 1140, 1144, 329,
	330, 331, 332, 333, 1172, 334, 1166, 1165, 1085, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 1157, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 1091, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 1180, 1181, 365, 1104,
	273, 0, 0, 0, 0, 0, 366, 367, 368, 1164,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 1191,
	372, 373, 374, 1177, 1178, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 1187, 0, 1114, 385,
	0, 386, 387, 388, 389, 390, 1150, 1151, 1154, 470,
	1193, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 274, 398, 399, 400, 402, 0, 1192, 401,
	1159, 1160, 0, 1120, 0, 403, 404, 1194, 1152, 1195,
	405, 406, 407, 1196, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	1188, 1197, 419, 420, 1198, 0, 421, 0, 0, 0,
	422, 423, 426, 1143, 1142, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 1199, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 1200, 466,
	455, 1082, 275, 1201, 467, 468, 1105, 1153, 469, 1167,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 1202, 480, 1203, 1182,
	481, 482, 1092, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 1183, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 1163,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 1204, 535, 536, 537, 538, 539, 1093, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	1146, 562, 563, 545, 546, 564, 565, 1205, 566, 567,
	568, 569, 570, 571, 572, 1161, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 1208, 580, 581,
	582, 583, 1184, 587, 588, 0, 589, 590, 1079, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 1173, 1174, 1175, 1176, 0, 608, 0,
	600, 601, 602, 1185, 603, 1186, 1103, 604, 605, 606,
	607, 0, 609, 610, 0, 1086, 611, 612, 613, 615,
	616, 614, 617, 1147, 618, 0, 0, 619, 620, 621,
	678, 1170, 1207, 0, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	1083, 0, 0, 1639, 0, 1125, 1097, 1098, 1099, 1095,
	1096, 1108, 0, 1078, 0, 0, 0, 0, 0, 0,
	1076, 1077, 276, 278, 277, 279, 280, 281, 282, 1109,
	283, 284, 0, 1107, 0, 0, 0, 1149, 1113, 0,
	0, 0, 285, 286, 1189, 287, 288, 289, 290, 291,
	292, 632, 1162, 0, 293, 1169, 294, 1168, 0, 1179,
	295, 296, 297, 298, 299, 300, 1115, 1148, 1080, 301,
	1209, 1210, 639, 0, 302, 303, 1155, 0, 1136, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 1190, 326, 327,
	328, 1139, 1137, 1138, 1145, 1141, 1140, 1144, 329, 330,
	331, 332, 333, 1172, 334, 1166, 1165, 1085, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 1157, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 1091, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 1180, 1181, 365, 1104, 273,
	0, 0, 0, 0, 0, 366, 367, 368, 1164, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 1191, 372,
	373, 374, 1177, 1178, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 1187, 0, 1114, 385, 0,
	386, 387, 388, 389, 390, 1150, 1151, 1154, 470, 1193,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 274, 398, 399, 400, 402, 0, 1192, 401, 1159,
	1160, 0, 1120, 0, 403, 404, 1194, 1152, 1195, 405,
	406, 407, 1196, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 1188,
	1197, 419, 420, 1198, 0, 421, 0, 0, 0, 422,
	423, 426, 1143, 1142, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 1199, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 1200, 466, 455,
	1082, 275, 1201, 467, 468, 1105, 1153, 469, 1167, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 1202, 480, 1203, 1182, 481,
	482, 1092, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 1183, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 1163, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 1204, 535, 536, 537, 538, 539, 1093, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 1146,
	562, 563, 545, 546, 564, 565, 1205, 566, 567, 568,
	569, 570, 571, 572, 1161, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 1208, 580, 581, 582,
	583, 1184, 587, 588, 0, 589, 590, 1079, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 1173, 1174, 1175, 1176, 0, 608, 0, 600,
	601, 602, 1185, 603, 1186, 1103, 604, 605, 606, 607,
	0, 609, 610, 0, 1086, 611, 612, 613, 615, 616,
	614, 617, 1147, 618, 0, 0, 619, 620, 621, 678,
	1170, 1207, 0, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 1083,
	0, 0, 1634, 0, 1125, 1097, 1098, 1099, 1095, 1096,
	1108, 0, 1078, 0, 0, 0, 0, 0, 0, 1076,
	1077, 276, 278, 277, 279, 280, 281, 282, 1109, 283,
	284, 0, 1107, 0, 0, 0, 1149, 1113, 0, 0,
	0, 285, 286, 1189, 287, 288, 289, 290, 291, 292,
	632, 1162, 0, 293, 1169, 294, 1168, 0, 1179, 295,
	296, 297, 298, 299, 300, 1115, 1148, 1080, 301, 1209,
	1210, 639, 0, 302, 303, 1155, 0, 1136, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 1190, 326, 327, 328,
	1139, 1137, 1138, 1145, 1141, 1140, 1144, 329, 330, 331,
	332, 333, 1172, 334, 1166, 1165, 1085, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 1157, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 1091, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 1180, 1181, 365, 1104, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 1164, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 1191, 372, 373,
	374, 1177, 1178, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 1187, 0, 1114, 385, 0, 386,
	387, 388, 389, 390, 1150, 1151, 1154, 470, 1193, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	274, 398, 399, 400, 402, 0, 1192, 401, 1159, 1160,
	0, 1120, 0, 403, 404, 1194, 1152, 1195, 405, 406,
	407, 1196, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 1188, 1197,
	419, 420, 1198, 0, 421, 0, 0, 0, 422, 423,
	426, 1143, 1142, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 1199, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 1200, 466, 455, 1082,
	275, 1201, 467, 468, 1105, 1153, 469, 1167, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 1202, 480, 1203, 1182, 481, 482,
	1092, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 1183, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 1163, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	1204, 535, 536, 537, 538, 539, 1093, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 1146, 562,
	563, 545, 546, 564, 565, 1205, 566, 567, 568, 569,
	570, 571, 572, 1161, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 1208, 580, 581, 582, 583,
	1184, 587, 588, 0, 589, 590, 1079, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 1173, 1174, 1175, 1176, 0, 608, 0, 600, 601,
	602, 1185, 603, 1186, 1103, 604, 605, 606, 607, 0,
	609, 610, 0, 1086, 611, 612, 613, 615, 616, 614,
	617, 1147, 618, 0, 0, 619, 620, 621, 678, 1170,
	1207, 0, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 1083, 0,
	0, 1625, 0, 1125, 1097, 1098, 1099, 1095, 1096, 1108,
	0, 1078, 0, 0, 0, 0, 0, 0, 1076, 1077,
	276, 278, 277, 279, 280, 281, 282, 1109, 283, 284,
	0, 1107, 0, 0, 0, 1149, 1113, 0, 0, 0,
	285, 286, 1189, 287, 288, 289, 290, 291, 292, 632,
	1162, 0, 293, 1169, 294, 1168, 0, 1179, 295, 296,
	297, 298, 299, 300, 1115, 1148, 1080, 301, 1209, 1210,
	639, 0, 302, 303, 1155, 0, 1136, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 1190, 326, 327, 328, 1139,
	1137, 1138, 1145, 1141, 1140, 1144, 329, 330, 331, 332,
	333, 1172, 334, 1166, 1165, 1085, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	1157, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 1091, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 1180, 1181, 365, 1104, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 1164, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 1191, 372, 373, 374,
	1177, 1178, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 1187, 0, 1114, 385, 0, 386, 387,
	388, 389, 390, 1150, 1151, 1154, 470, 1193, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 274,
	398, 399, 400, 402, 0, 1192, 401, 1159, 1160, 0,
	1120, 0, 403, 404, 1194, 1152, 1195, 405, 406, 407,
	1196, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 1188, 1197, 419,
	420, 1198, 0, 421, 0, 0, 0, 422, 423, 426,
	1143, 1142, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 1199, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 1200, 466, 455, 1082, 275,
	1201, 467, 468, 1105, 1153, 469, 1167, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 1202, 480, 1203, 1182, 481, 482, 1092,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	1183, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 1163, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 1204,
	535, 536, 537, 538, 539, 1093, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 1146, 562, 563,
	545, 546, 564, 565, 1205, 566, 567, 568, 569, 570,
	571, 572, 1161, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 1208, 580, 581, 582, 583, 1184,
	587, 588, 0, 589, 590, 1079, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	1173, 1174, 1175, 1176, 0, 608, 0, 600, 601, 602,
	1185, 603, 1186, 1103, 604, 605, 606, 607, 0, 609,
	610, 0, 1086, 611, 612, 613, 615, 616, 614, 617,
	1147, 618, 0, 0, 619, 620, 621, 678, 1170, 1207,
	0, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 1083, 0, 0,
	1620, 0, 1125, 1097, 1098, 1099, 1095, 1096, 1108, 0,
	1078, 0, 0, 0, 0, 0, 0, 1076, 1077, 276,
	278, 277, 279, 280, 281, 282, 1109, 283, 284, 0,
	1107, 0, 0, 0, 1149, 1113, 0, 0, 0, 285,
	286, 1189, 287, 288, 289, 290, 291, 292, 632, 1162,
	0, 293, 1169, 294, 1168, 0, 1179, 295, 296, 297,
	298, 299, 300, 1115, 1148, 1080, 301, 1209, 1210, 639,
	0, 302, 303, 1155, 0, 1136, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 1190, 326, 327, 328, 1139, 1137,
	1138, 1145, 1141, 1140, 1144, 329, 330, 331, 332, 333,
	1172, 334, 1166, 1165, 1085, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 1157,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 1091, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 1180, 1181, 365, 1104, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 1164, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 1191, 372, 373, 374, 1177,
	1178, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 1187, 0, 1114, 385, 0, 386, 387, 388,
	389, 390, 1150, 1151, 1154, 470, 1193, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 274, 398,
	399, 400, 402, 0, 1192, 401, 1159, 1160, 0, 1120,
	0, 403, 404, 1194, 1152, 1195, 405, 406, 407, 1196,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 1188, 1197, 419, 420,
	1198, 0, 421, 0, 0, 0, 422, 423, 426, 1143,
	1142, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	1199, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 1200, 466, 455, 1082, 275, 1201,
	467, 468, 1105, 1153, 469, 1167, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 1202, 480, 1203, 1182, 481, 482, 1092, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 1183,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 1163, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 1204, 535,
	536, 537, 538, 539, 1093, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 1146, 562, 563, 545,
	546, 564, 565, 1205, 566, 567, 568, 569, 570, 571,
	572, 1161, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 1208, 580, 581, 582, 583, 1184, 587,
	588, 0, 589, 590, 1079, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 1173,
	1174, 1175, 1176, 0, 608, 0, 600, 601, 602, 1185,
	603, 1186, 1103, 604, 605, 606, 607, 0, 609, 610,
	0, 1086, 611, 612, 613, 615, 616, 614, 617, 1147,
	618, 0, 0, 619, 620, 621, 678, 1170, 1207, 0,
	623, 622, 624, 681, 0, 625, 0, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 1083, 0, 0, 1532,
	0, 1125, 1097, 1098, 1099, 1095, 1096, 1108, 0, 1078,
	0, 0, 0, 0, 0, 0, 1076, 1077, 276, 278,
	277, 279, 280, 281, 282, 1109, 283, 284, 0, 1107,
	0, 0, 0, 1149, 1113, 0, 0, 0, 285, 286,
	1189, 287, 288, 289, 290, 291, 292, 632, 1162, 0,
	293, 1169, 294, 1168, 0, 1179, 295, 296, 297, 298,
	299, 300, 1115, 1148, 1080, 301, 1209, 1210, 639, 0,
	302, 303, 1155, 0, 1136, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 1190, 326, 327, 328, 1139, 1137, 1138,
	1145, 1141, 1140, 1144, 329, 330, 331, 332, 333, 1172,
	334, 1166, 1165, 1085, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 1157, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	1091, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 1180, 1181, 365, 1104, 273, 0, 0, 0, 0,
	0, 366, 367, 368, 1164, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 1191, 372, 373, 374, 1177, 1178,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 1187, 0, 1114, 385, 0, 386, 387, 388, 389,
	390, 1531, 1151, 1154, 470, 1193, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 274, 398, 399,
	400, 402, 0, 1192, 401, 1159, 1160, 0, 1120, 0,
	403, 404, 1194, 1152, 1195, 405, 406, 407, 1196, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 1188, 1197, 419, 420, 1198,
	0, 421, 0, 0, 0, 422, 423, 426, 1143, 1142,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 1199,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 1200, 466, 455, 1082, 275, 1201, 467,
	468, 1105, 1153, 469, 1167, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 1202, 480, 1203, 1182, 481, 482, 1092, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 1183, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 1163, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 1204, 535, 536,
	537, 538, 539, 1093, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 1146, 562, 563, 545, 546,
	564, 565, 1205, 566, 567, 568, 569, 570, 571, 572,
	1161, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 1208, 580, 581, 582, 583, 1184, 587, 588,
	0, 589, 590, 1079, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 1173, 1174,
	1175, 1176, 0, 608, 0, 600, 601, 602, 1185, 603,
	1186, 1103, 604, 605, 606, 607, 0, 609, 610, 0,
	1086, 611, 612, 613, 615, 616, 614, 617, 1147, 618,
	0, 0, 619, 620, 621, 678, 1170, 1207, 0, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 1083, 0, 0, 1526, 0,
	1125, 1097, 1098, 1099, 1095, 1096, 1108, 0, 1078, 0,
	0, 0, 0, 0, 0, 1076, 1077, 276, 278, 277,
	279, 280, 281, 282, 1109, 283, 284, 0, 1107, 0,
	0, 0, 1149, 1113, 0, 0, 0, 285, 286, 1189,
	287, 288, 289, 290, 291, 292, 632, 1162, 0, 293,
	1169, 294, 1168, 0, 1179, 295, 296, 297, 298, 299,
	300, 1115, 1148, 1080, 301, 1209, 1210, 639, 0, 302,
	303, 1155, 0, 1136, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145,
	1141, 1140, 1144, 329, 330, 331, 332, 333, 1172, 334,
	1166, 1165, 1085, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 1157, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 1091,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	1180, 1181, 365, 1104, 273, 0, 0, 0, 0, 0,
	366, 367, 368, 1164, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 1191, 372, 373, 374, 1177, 1178, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	1187, 0, 1114, 385, 0, 386, 387, 388, 389, 390,
	1525, 1151, 1154, 470, 1193, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 274, 398, 399, 400,
	402, 0, 1192, 401, 1159, 1160, 0, 1120, 0, 403,
	404, 1194, 1152, 1195, 405, 406, 407, 1196, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 1188, 1197, 419, 420, 1198, 0,
	421, 0, 0, 0, 422, 423, 426, 1143, 1142, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 1199, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 1200, 466, 455, 1082, 275, 1201, 467, 468,
	1105, 1153, 469, 1167, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	1202, 480, 1203, 1182, 481, 482, 1092, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 1183, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 1163, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 1204, 535, 536, 537,
	538, 539, 1093, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 1146, 562, 563, 545, 546, 564,
	565, 1205, 566, 567, 568, 569, 570, 571, 572, 1161,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 1208, 580, 581, 582, 583, 1184, 587, 588, 0,
	589, 590, 1079, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 1173, 1174, 1175,
	1176, 0, 608, 0, 600, 601, 602, 1185, 603, 1186,
	1103, 604, 605, 606, 607, 0, 609, 610, 0, 1086,
	611, 612, 613, 615, 616, 614, 617, 1147, 618, 0,
	0, 619, 620, 621, 678, 1170, 1207, 0, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 1083, 0, 0, 1519, 0, 1125,
	1097, 1098, 1099, 1095, 1096, 1108, 0, 1078, 0, 0,
	0, 0, 0, 0, 1076, 1077, 276, 278, 277, 279,
	280, 281, 282, 1109, 283, 284, 0, 1107, 0, 0,
	0, 1149, 1113, 0, 0, 0, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 1162, 0, 293, 1169,
	294, 1168, 0, 1179, 295, 296, 297, 298, 299, 300,
	1115, 1148, 1080, 301, 1209, 1210, 639, 0, 302, 303,
	1155, 0, 1136, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141,
	1140, 1144, 329, 330, 331, 332, 333, 1172, 334, 1166,
	1165, 1085, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 1157, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 1091, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 1180,
	1181, 365, 1104, 273, 0, 0, 0, 0, 0, 366,
	367, 368, 1164, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 1191, 372, 373, 374, 1177, 1178, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 1187,
	0, 1114, 385, 0, 386, 387, 388, 389, 390, 1150,
	1151, 1154, 470, 1193, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	0, 1192, 401, 1159, 1160, 0, 1120, 0, 403, 404,
	1194, 1152, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 1188, 1197, 419, 420, 1198, 0, 421,
	0, 0, 0, 422, 423, 426, 1143, 1142, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 1082, 275, 1201, 467, 468, 1105,
	1153, 469, 1167, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 1202,
	480, 1203, 1182, 481, 482, 1092, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 1183, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 1163, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 1093, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 1146, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 1161, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	1208, 580, 581, 582, 583, 1184, 587, 588, 0, 589,
	590, 1079, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 1173, 1174, 1175, 1176,
	0, 608, 0, 600, 601, 602, 1185, 603, 1186, 1103,
	604, 605, 606, 607, 0, 609, 610, 0, 1086, 611,
	612, 613, 615, 616, 614, 617, 1147, 618, 0, 0,
	619, 620, 621, 678, 1170, 1207, 0, 623, 622, 624,
	681, 0, 625, 0, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 1083, 0, 0, 1336, 0, 1125, 1097,
	1098, 1099, 1095, 1096, 1108, 0, 1078, 0, 0, 0,
	0, 0, 0, 1076, 1077, 276, 278, 277, 279, 280,
	281, 282, 1109, 283, 284, 0, 1107, 0, 0, 0,
	1149, 1113, 0, 0, 0, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 1162, 0, 293, 1169, 294,
	1168, 0, 1179, 295, 296, 297, 298, 299, 300, 1115,
	1148, 1080, 301, 1209, 1210, 639, 0, 302, 303, 1155,
	0, 1136, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140,
	1144, 329, 330, 331, 332, 333, 1172, 334, 1166, 1165,
	1085, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 1157, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 1091, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 1180, 1181,
	365, 1104, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 1164, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 1191, 372, 373, 374, 1177, 1178, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 1187, 0,
	1114, 385, 0, 386, 387, 388, 389, 390, 1150, 1151,
	1154, 470, 1193, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 0,
	1192, 401, 1159, 1160, 0, 1120, 0, 403, 404, 1194,
	1152, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 1188, 1197, 419, 420, 1198, 0, 421, 0,
	0, 0, 422, 423, 426, 1143, 1142, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 1082, 275, 1201, 467, 468, 1105, 1153,
	469, 1167, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 1202, 480,
	1203, 1182, 481, 482, 1092, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 1183, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 1163, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	1093, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 1146, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 1161, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 1208,
	580, 581, 582, 583, 1184, 587, 588, 0, 589, 590,
	1079, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 1173, 1174, 1175, 1176, 0,
	608, 0, 600, 601, 602, 1185, 603, 1186, 1103, 604,
	605, 606, 607, 0, 609, 610, 0, 1086, 611, 612,
	613, 615, 616, 614, 617, 1147, 618, 0, 0, 619,
	620, 621, 678, 1170, 1207, 0, 623, 622, 624, 681,
	0, 625, 0, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 1083, 0, 0, 0, 0, 1125, 1097, 1098,
	1099, 1095, 1096, 1108, 0, 1078, 0, 0, 0, 0,
	0, 0, 1076, 1077, 276, 278, 277, 279, 280, 281,
	282, 1109, 283, 284, 0, 1107, 0, 0, 0, 1149,
	1113, 0, 0, 0, 285, 286, 1189, 287, 288, 289,
	290, 291, 292, 632, 1162, 0, 293, 1169, 294, 1168,
	0, 1179, 295, 296, 297, 298, 299, 300, 1115, 1148,
	1080, 301, 1209, 1210, 639, 0, 302, 303, 1155, 0,
	1136, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 1190,
	326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140, 1144,
	329, 330, 331, 332, 333, 1172, 334, 1166, 1165, 1085,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 1157, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 1091, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 1180, 1181, 365,
	1104, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	1164, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	1191, 372, 373, 374, 1177, 1178, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 1187, 0, 1114,
	385, 0, 386, 387, 388, 389, 390, 1150, 1151, 1154,
	470, 1193, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 274, 398, 399, 400, 402, 0, 1192,
	401, 1159, 1160, 0, 1120, 0, 403, 404, 1194, 1152,
	1195, 405, 406, 407, 1196, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 1188, 1197, 419, 420, 1198, 0, 421, 0, 0,
	0, 422, 423, 426, 1143, 1142, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 1199, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 1200,
	466, 455, 1082, 275, 1201, 467, 468, 1105, 1153, 469,
	1167, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 1202, 480, 1203,
	1182, 481, 482, 1092, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 1183, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	1163, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 1204, 535, 536, 537, 538, 539, 1093,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 1146, 562, 563, 545, 546, 564, 565, 1205, 566,
	567, 568, 569, 570, 571, 572, 1161, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 1208, 580,
	581, 582, 583, 1184, 587, 588, 0, 589, 590, 1079,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 1173, 1174, 1175, 1176, 0, 608,
	0, 600, 601, 602, 1185, 603, 1186, 1103, 604, 605,
	606, 607, 0, 609, 610, 0, 1086, 611, 612, 613,
	615, 616, 614, 617, 1147, 618, 0, 0, 619, 620,
	621, 678, 1170, 1207, 0, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 1083, 0, 0, 0, 0, 1125, 1097, 1098, 1099,
	1095, 1096, 1108, 0, 1078, 0, 0, 0, 0, 0,
	0, 1076, 1077, 276, 278, 277, 279, 280, 281, 282,
	1109, 283, 284, 0, 1107, 0, 0, 0, 1149, 1113,
	0, 0, 0, 285, 286, 1189, 287, 288, 289, 290,
	291, 292, 632, 1162, 0, 293, 1169, 294, 1168, 0,
	1179, 295, 296, 297, 298, 299, 300, 1115, 1148, 1080,
	301, 1209, 1210, 639, 0, 302, 303, 1155, 0, 1136,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 1190, 326,
	327, 4714, 1139, 1137, 1138, 1145, 1141, 1140, 1144, 329,
	330, 331, 332, 333, 1172, 334, 1166, 1165, 1085, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 1157, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 1091, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 1180, 1181, 365, 1104,
	273, 0, 0, 0, 0, 0, 366, 367, 368, 1164,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 1191,
	372, 373, 374, 1177, 1178, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 1187, 0, 1114, 385,
	0, 386, 387, 388, 389, 390, 1150, 1151, 1154, 470,
	1193, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 274, 398, 399, 400, 402, 0, 1192, 401,
	1159, 1160, 0, 1120, 0, 403, 404, 1194, 1152, 1195,
	405, 406, 407, 1196, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	1188, 1197, 419, 420, 1198, 0, 421, 0, 0, 0,
	422, 423, 426, 1143, 1142, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 1199, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 1200, 466,
	455, 1082, 275, 1201, 467, 468, 1105, 1153, 469, 1167,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 1202, 480, 1203, 1182,
	481, 482, 1092, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 1183, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 1163,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 1204, 535, 536, 537, 538, 539, 1093, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	1146, 562, 563, 545, 546, 564, 565, 1205, 566, 567,
	568, 569, 570, 571, 572, 1161, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 1208, 580, 581,
	582, 583, 1184, 587, 588, 0, 589, 590, 1079, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 1173, 1174, 1175, 1176, 0, 608, 0,
	600, 601, 602, 1185, 603, 1186, 1103, 604, 605, 606,
	607, 0, 4713, 610, 0, 1086, 611, 612, 613, 615,
	616, 614, 617, 1147, 618, 0, 0, 619, 620, 621,
	678, 1170, 1207, 0, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	1083, 0, 0, 0, 0, 1125, 1097, 1098, 1099, 1095,
	1096, 1108, 0, 1078, 0, 0, 0, 0, 0, 0,
	1076, 1077, 276, 278, 277, 279, 280, 281, 282, 1109,
	283, 284, 0, 1107, 0, 0, 0, 1149, 1113, 0,
	0, 0, 285, 286, 1189, 287, 288, 289, 290, 291,
	292, 4712, 1162, 0, 293, 1169, 294, 1168, 0, 1179,
	295, 296, 297, 298, 299, 300, 1115, 1148, 1080, 301,
	1209, 1210, 639, 0, 302, 303, 1155, 0, 1136, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 1190, 326, 327,
	4714, 1139, 1137, 1138, 1145, 1141, 1140, 1144, 329, 330,
	331, 332, 333, 1172, 334, 1166, 1165, 1085, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 1157, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 1091, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 1180, 1181, 365, 1104, 273,
	0, 0, 0, 0, 0, 366, 367, 368, 1164, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 1191, 372,
	373, 374, 1177, 1178, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 1187, 0, 1114, 385, 0,
	386, 387, 388, 389, 390, 1150, 1151, 1154, 470, 1193,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 274, 398, 399, 400, 402, 0, 1192, 401, 1159,
	1160, 0, 1120, 0, 403, 404, 1194, 1152, 1195, 405,
	406, 407, 1196, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 1188,
	1197, 419, 420, 1198, 0, 421, 0, 0, 0, 422,
	423, 426, 1143, 1142, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 1199, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 1200, 466, 455,
	1082, 275, 1201, 467, 468, 1105, 1153, 469, 1167, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 1202, 480, 1203, 1182, 481,
	482, 1092, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 1183, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 1163, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 1204, 535, 536, 537, 538, 539, 1093, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 1146,
	562, 563, 545, 546, 564, 565, 1205, 566, 567, 568,
	569, 570, 571, 572, 1161, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 1208, 580, 581, 582,
	583, 1184, 587, 588, 0, 589, 590, 1079, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 1173, 1174, 1175, 1176, 0, 608, 0, 600,
	601, 602, 1185, 603, 1186, 1103, 604, 605, 606, 607,
	0, 4713, 610, 0, 1086, 611, 612, 613, 615, 616,
	614, 617, 1147, 618, 0, 0, 619, 620, 621, 678,
	1170, 1207, 0, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 1083,
	0, 0, 0, 0, 1125, 1097, 1098, 1099, 1095, 1096,
	1108, 0, 1078, 0, 0, 0, 0, 0, 0, 1076,
	1077, 276, 278, 277, 279, 280, 281, 282, 1109, 283,
	284, 0, 1107, 0, 0, 0, 1149, 1113, 0, 0,
	0, 285, 286, 1189, 287, 288, 289, 290, 291, 292,
	632, 1162, 0, 293, 1169, 294, 1168, 0, 1179, 295,
	296, 297, 298, 299, 300, 1115, 1148, 1080, 301, 1209,
	1210, 639, 0, 302, 303, 1155, 0, 1136, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 1190, 326, 4341, 328,
	1139, 1137, 1138, 1145, 1141, 1140, 1144, 329, 330, 331,
	332, 333, 1172, 334, 1166, 1165, 1085, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 1157, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 1091, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 1180, 1181, 365, 1104, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 1164, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 1191, 372, 373,
	374, 1177, 1178, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 1187, 0, 4342, 385, 0, 386,
	387, 388, 389, 390, 1150, 1151, 1154, 470, 1193, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	274, 398, 399, 400, 402, 0, 1192, 401, 1159, 1160,
	0, 1120, 0, 403, 404, 1194, 1152, 1195, 405, 406,
	407, 1196, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 1188, 1197,
	419, 420, 1198, 0, 421, 0, 0, 0, 422, 423,
	426, 1143, 1142, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 1199, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 1200, 466, 455, 1082,
	275, 1201, 467, 468, 1105, 1153, 469, 1167, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 1202, 480, 1203, 1182, 481, 482,
	1092, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 1183, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 1163, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	1204, 535, 536, 537, 4340, 539, 1093, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 1146, 562,
	563, 545, 546, 564, 565, 1205, 566, 567, 568, 569,
	570, 571, 572, 1161, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 1208, 580, 581, 582, 583,
	1184, 587, 588, 0, 589, 590, 1079, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 1173, 1174, 1175, 1176, 0, 608, 0, 600, 601,
	602, 1185, 603, 1186, 1103, 604, 605, 606, 607, 0,
	609, 610, 0, 1086, 611, 612, 613, 615, 616, 614,
	617, 1147, 618, 0, 0, 619, 620, 621, 678, 1170,
	1207, 0, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 1083, 0,
	0, 0, 0, 1125, 1097, 1098, 1099, 3175, 3176, 1108,
	0, 1078, 0, 0, 0, 0, 0, 0, 1076, 1077,
	276, 278, 277, 279, 280, 281, 282, 1109, 283, 284,
	0, 1107, 0, 0, 0, 1149, 1113, 0, 0, 0,
	285, 286, 1189, 287, 288, 289, 290, 291, 292, 632,
	1162, 0, 293, 1169, 294, 1168, 0, 1179, 295, 296,
	297, 298, 299, 300, 1115, 1148, 1080, 301, 1209, 1210,
	639, 0, 302, 303, 1155, 0, 1136, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 1190, 326, 327, 328, 1139,
	1137, 1138, 1145, 1141, 1140, 1144, 329, 330, 331, 332,
	333, 1172, 334, 1166, 1165, 1085, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	1157, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 1091, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 1180, 1181, 365, 1104, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 1164, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 1191, 372, 373, 374,
	1177, 1178, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 1187, 0, 1114, 385, 0, 386, 387,
	388, 389, 390, 1150, 1151, 1154, 470, 1193, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 274,
	398, 399, 400, 402, 0, 1192, 401, 1159, 1160, 0,
	1120, 0, 403, 404, 1194, 1152, 1195, 405, 406, 407,
	1196, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 1188, 1197, 419,
	420, 1198, 0, 421, 0, 0, 0, 422, 423, 426,
	1143, 1142, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 1199, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 1200, 466, 455, 1082, 275,
	1201, 467, 468, 1105, 1153, 469, 1167, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 1202, 480, 1203, 1182, 481, 482, 1092,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	1183, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 1163, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 1204,
	535, 536, 537, 538, 539, 1093, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 1146, 562, 563,
	545, 546, 564, 565, 1205, 566, 567, 568, 569, 570,
	571, 572, 1161, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 1208, 580, 581, 582, 583, 1184,
	587, 588, 0, 589, 590, 1079, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	1173, 1174, 1175, 1176, 0, 608, 0, 600, 601, 602,
	1185, 603, 1186, 1103, 604, 605, 606, 607, 0, 609,
	610, 0, 1086, 611, 612, 613, 615, 616, 614, 617,
	1147, 618, 0, 0, 619, 620, 621, 678, 1170, 1207,
	0, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 1083, 0, 0,
	0, 0, 1125, 1097, 1098, 1099, 3173, 3174, 1108, 0,
	1078, 0, 0, 0, 0, 0, 0, 1076, 1077, 276,
	278, 277, 279, 280, 281, 282, 1109, 283, 284, 0,
	1107, 0, 0, 0, 1149, 1113, 0, 0, 0, 285,
	286, 1189, 287, 288, 289, 290, 291, 292, 632, 1162,
	0, 293, 1169, 294, 1168, 0, 1179, 295, 296, 297,
	298, 299, 300, 1115, 1148, 1080, 301, 1209, 1210, 639,
	0, 302, 303, 1155, 0, 1136, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 1190, 326, 327, 328, 1139, 1137,
	1138, 1145, 1141, 1140, 1144, 329, 330, 331, 332, 333,
	1172, 334, 1166, 1165, 1085, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 1157,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 1091, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 1180, 1181, 365, 1104, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 1164, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 1191, 372, 373, 374, 1177,
	1178, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 1187, 0, 1114, 385, 0, 386, 387, 388,
	389, 390, 1150, 1151, 1154, 470, 1193, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 274, 398,
	399, 400, 402, 0, 1192, 401, 1159, 1160, 0, 1120,
	0, 403, 404, 1194, 1152, 1195, 405, 406, 407, 1196,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 1188, 1197, 419, 420,
	1198, 0, 421, 0, 0, 0, 422, 423, 426, 1143,
	1142, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	1199, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 1200, 466, 455, 1082, 275, 1201,
	467, 468, 1105, 1153, 469, 1167, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 1202, 480, 1203, 1182, 481, 482, 1092, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 1183,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 1163, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 1204, 535,
	536, 537, 538, 539, 1093, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 1146, 562, 563, 545,
	546, 564, 565, 1205, 566, 567, 568, 569, 570, 571,
	572, 1161, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 1208, 580, 581, 582, 583, 1184, 587,
	588, 0, 589, 590, 1079, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 1173,
	1174, 1175, 1176, 0, 608, 0, 600, 601, 602, 1185,
	603, 1186, 1103, 604, 605, 606, 607, 0, 609, 610,
	0, 1086, 611, 612, 613, 615, 616, 614, 617, 1147,
	618, 0, 0, 619, 620, 621, 678, 1170, 1207, 0,
	623, 622, 624, 681, 0, 625, 0, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 1083, 0, 0, 0,
	0, 1125, 1097, 1098, 1099, 1095, 1096, 1108, 0, 1078,
	0, 0, 0, 0, 0, 0, 1076, 1077, 276, 278,
	277, 279, 280, 281, 282, 1109, 283, 284, 0, 1107,
	0, 0, 0, 1149, 1113, 0, 0, 0, 285, 286,
	1189, 287, 288, 289, 290, 291, 292, 632, 1162, 0,
	293, 1169, 294, 1168, 0, 1179, 295, 296, 297, 298,
	299, 300, 1115, 1148, 1080, 301, 1209, 1210, 639, 0,
	302, 303, 1155, 0, 1136, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 1190, 326, 327, 328, 1139, 1137, 1138,
	1145, 1141, 1140, 1144, 329, 330, 331, 332, 333, 1172,
	334, 1166, 1165, 1085, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 1157, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	1091, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 1180, 1181, 365, 1104, 273, 0, 0, 0, 0,
	0, 366, 367, 368, 1164, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 1191, 372, 373, 374, 1177, 1178,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 1187, 0, 1114, 385, 0, 386, 387, 388, 389,
	390, 1150, 1151, 1154, 470, 1193, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 274, 398, 399,
	400, 402, 0, 1192, 401, 1159, 1160, 0, 1120, 0,
	403, 404, 1194, 1152, 1195, 405, 406, 407, 1196, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 1188, 1197, 419, 420, 1198,
	0, 421, 0, 0, 0, 422, 423, 426, 1143, 1142,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 1199,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 1200, 466, 455, 1082, 275, 1201, 467,
	468, 1105, 1153, 469, 1167, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 1202, 480, 1203, 1182, 481, 482, 1092, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 1183, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 1163, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 1204, 535, 536,
	537, 538, 539, 1093, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 1146, 562, 563, 545, 546,
	564, 565, 1205, 566, 567, 568, 569, 570, 571, 572,
	1161, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 1208, 580, 581, 582, 583, 1184, 587, 588,
	0, 589, 590, 1079, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 1173, 1174,
	1175, 1176, 0, 608, 0, 600, 601, 602, 1185, 603,
	1186, 1103, 604, 605, 606, 607, 0, 609, 610, 0,
	1086, 611, 612, 613, 615, 616, 614, 617, 1147, 618,
	0, 0, 619, 620, 621, 678, 1170, 1207, 0, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 1083, 0, 0, 0, 0,
	1125, 1097, 1098, 1099, 1095, 1096, 1108, 0, 1078, 0,
	0, 0, 0, 0, 0, 2437, 2438, 276, 278, 277,
	279, 280, 281, 282, 1109, 283, 284, 0, 1107, 0,
	0, 0, 1149, 1113, 0, 0, 0, 285, 286, 1189,
	287, 288, 289, 290, 291, 292, 632, 1162, 0, 293,
	1169, 294, 1168, 0, 1179, 295, 296, 297, 298, 299,
	300, 1115, 1148, 0, 301, 1209, 1210, 639, 0, 302,
	303, 1155, 0, 1136, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145,
	1141, 1140, 1144, 329, 330, 331, 332, 333, 1172, 334,
	1166, 1165, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 1157, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 1091,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	1180, 1181, 365, 1104, 273, 0, 0, 0, 0, 0,
	366, 367, 368, 1164, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 1191, 372, 373, 374, 1177, 1178, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	1187, 0, 1114, 385, 0, 386, 387, 388, 389, 390,
	1150, 1151, 1154, 470, 1193, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 274, 398, 399, 400,
	402, 0, 1192, 401, 1159, 1160, 0, 1120, 0, 403,
	404, 1194, 1152, 1195, 405, 406, 407, 1196, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 1188, 1197, 419, 420, 1198, 0,
	421, 0, 0, 0, 422, 423, 426, 1143, 1142, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 1199, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 1200, 466, 455, 0, 275, 1201, 467, 468,
	1105, 1153, 469, 1167, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	1202, 480, 1203, 1182, 481, 482, 1092, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 1183, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 1163, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 1204, 535, 536, 537,
	538, 539, 1093, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 1146, 562, 563, 545, 546, 564,
	565, 1205, 566, 567, 568, 569, 570, 571, 572, 1161,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 1208, 580, 581, 582, 583, 1184, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 1173, 1174, 1175,
	1176, 0, 608, 0, 600, 601, 602, 1185, 603, 1186,
	1103, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 1147, 618, 0,
	0, 619, 620, 621, 678, 1170, 1207, 0, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 0, 0, 0, 0, 0, 1125,
	1097, 1098, 1099, 1095, 1096, 1108, 0, 2696, 0, 0,
	0, 0, 0, 0, 2694, 2695, 276, 278, 277, 279,
	280, 281, 282, 1109, 283, 284, 0, 1107, 0, 0,
	0, 1149, 1113, 0, 0, 0, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 1162, 0, 293, 1169,
	294, 1168, 0, 1179, 295, 296, 297, 298, 299, 300,
	1115, 1148, 0, 301, 1209, 1210, 639, 0, 302, 303,
	1155, 0, 1136, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141,
	1140, 1144, 329, 330, 331, 332, 333, 1172, 334, 1166,
	1165, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 1157, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 1091, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 1180,
	1181, 365, 1104, 273, 0, 0, 0, 0, 0, 366,
	367, 368, 1164, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 1191, 372, 373, 374, 1177, 1178, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 1187,
	0, 1114, 385, 0, 386, 387, 388, 389, 390, 1150,
	1151, 1154, 470, 1193, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	0, 1192, 401, 1159, 1160, 0, 1120, 0, 403, 404,
	1194, 1152, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 1188, 1197, 419, 420, 1198, 0, 421,
	0, 0, 0, 422, 423, 426, 1143, 1142, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 0, 275, 1201, 467, 468, 1105,
	1153, 469, 1167, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 1202,
	480, 1203, 1182, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 1183, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 1163, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 3168, 3169, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 1146, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 1161, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	1208, 580, 581, 582, 583, 1184, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 1173, 1174, 1175, 1176,
	0, 608, 0, 600, 601, 602, 1185, 603, 1186, 1103,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 1147, 618, 0, 0,
	619, 620, 621, 678, 1170, 1207, 0, 623, 622, 624,
	681, 0, 625, 0, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 0, 1125, 1097,
	1098, 1099, 1095, 1096, 1108, 0, 0, 0, 0, 0,
	0, 0, 0, 2114, 2115, 276, 278, 277, 279, 280,
	281, 282, 1109, 283, 284, 0, 1107, 0, 0, 0,
	1149, 1113, 0, 0, 0, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 0, 1162, 0, 293, 1169, 294,
	1168, 0, 1179, 295, 296, 297, 298, 299, 300, 1115,
	1148, 1080, 301, 1209, 1210, 639, 0, 302, 303, 1155,
	0, 1136, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	1190, 326, 327, 4714, 1139, 1137, 1138, 1145, 1141, 1140,
	1144, 329, 330, 331, 332, 333, 1172, 334, 1166, 1165,
	1085, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 1157, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 1091, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 1180, 1181,
	365, 1104, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 1164, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 1191, 372, 373, 374, 1177, 1178, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 1187, 0,
	1114, 385, 0, 386, 387, 388, 389, 390, 1150, 1151,
	1154, 470, 0, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 0,
	1192, 401, 1159, 1160, 0, 1120, 0, 403, 404, 0,
	1152, 0, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 1188, 1197, 419, 420, 0, 0, 421, 0,
	0, 0, 422, 423, 426, 1143, 1142, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 1082, 275, 0, 467, 468, 1105, 1153,
	469, 1167, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 1202, 480,
	1203, 1182, 481, 482, 1092, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 1183, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 1163, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	1093, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 1146, 562, 563, 545, 546, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 1161, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 1208,
	580, 581, 582, 583, 1184, 587, 588, 0, 589, 590,
	1079, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 1173, 1174, 1175, 1176, 0,
	608, 0, 600, 601, 602, 1185, 603, 1186, 1103, 604,
	605, 606, 607, 0, 4713, 610, 0, 1086, 611, 612,
	613, 615, 616, 614, 617, 1147, 618, 0, 0, 619,
	620, 621, 678, 1170, 1207, 0, 623, 622, 624, 681,
	0, 625, 0, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 1069, 0, 1247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1076, 1077, 276, 278, 277, 279, 280, 281,
	282, 1109, 283, 284, 0, 1107, 0, 0, 0, 1149,
	0, 0, 0, 0, 285, 286, 1189, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 1148,
	0, 301, 637, 638, 639, 0, 302, 303, 1155, 0,
	1136, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 1190,
	326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140, 1144,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 1180, 1181, 365,
	0, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	1191, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 1187, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 1150, 1151, 1154,
	470, 1193, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 274, 398, 399, 400, 402, 0, 1192,
	401, 654, 655, 0, 656, 0, 403, 404, 1194, 1152,
	1195, 405, 406, 407, 1196, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 1233, 415, 417, 416, 0,
	418, 1188, 1197, 419, 420, 1198, 0, 421, 0, 0,
	0, 422, 423, 426, 1143, 1142, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 1199, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 1200,
	466, 455, 0, 275, 1201, 467, 468, 0, 1153, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 1239, 475,
	476, 477, 0, 0, 478, 479, 661, 1202, 480, 1203,
	1182, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 1183, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 1204, 535, 536, 537, 538, 539, 668,
	1241, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 235, 557, 558, 556, 559, 560,
	561, 1146, 562, 563, 545, 546, 564, 565, 1205, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 1184, 587, 588, 0, 589, 590, 0,
	586, 577, 237, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 1185, 603, 1186, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 1147, 618, 0, 0, 619, 620,
	621, 1609, 679, 680, 0, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 229, 626, 627, 682, 628, 629,
	630, 1247, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 1237, 0,
	1957, 0, 0, 1149, 0, 0, 0, 0, 285, 286,
	1189, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 1148, 0, 301, 637, 638, 639, 0,
	302, 303, 1155, 0, 1136, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 1190, 326, 327, 328, 1139, 1137, 1138,
	1145, 1141, 1140, 1144, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 1180, 1181, 365, 0, 273, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 1191, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 1187, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 1150, 1151, 1154, 470, 1193, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 274, 398, 399,
	400, 402, 0, 1192, 401, 654, 655, 0, 656, 0,
	403, 404, 1194, 1152, 1195, 405, 406, 407, 1196, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 1233,
	415, 417, 416, 0, 418, 1188, 1197, 419, 420, 1198,
	0, 421, 0, 0, 0, 422, 423, 426, 1143, 1142,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 1199,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 1200, 466, 455, 0, 275, 1201, 467,
	468, 0, 1153, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 1239, 475, 476, 477, 0, 0, 478, 479,
	661, 1202, 480, 1203, 1182, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 1183, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 1204, 535, 536,
	537, 538, 539, 668, 1241, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 235, 557,
	558, 556, 559, 560, 561, 1146, 562, 563, 545, 546,
	564, 565, 1205, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 1184, 587, 588,
	0, 589, 590, 0, 586, 577, 237, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 1185, 603,
	1186, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 1147, 618,
	0, 0, 619, 620, 621, 1609, 679, 680, 0, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 229, 626,
	627, 682, 628, 629, 630, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 3332, 0, 1247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1237, 0, 1957, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	1149, 0, 0, 0, 0, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	1148, 0, 301, 637, 638, 639, 0, 302, 303, 1155,
	0, 1136, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140,
	1144, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 1180, 1181,
	365, 0, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 1191, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 1187, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 1150, 1151,
	1154, 470, 1193, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 0,
	1192, 401, 654, 655, 0, 656, 0, 403, 404, 1194,
	1152, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 1233, 415, 417, 416,
	0, 418, 1188, 1197, 419, 420, 1198, 0, 421, 0,
	0, 0, 422, 423, 426, 1143, 1142, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 0, 275, 1201, 467, 468, 0, 1153,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 1239,
	475, 476, 477, 0, 0, 478, 479, 661, 1202, 480,
	1203, 1182, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 1183, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	668, 1241, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 1146, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 1184, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 1185, 603, 1186, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 1147, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 0, 623, 622, 624, 681,
	0, 625, 0, 1229, 0, 1247, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 278, 277, 279, 280, 281, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 1149, 0, 1237,
	0, 1235, 285, 286, 1189, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 1148, 0, 301,
	637, 638, 639, 0, 302, 303, 1155, 0, 1136, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 1190, 326, 327,
	328, 1139, 1137, 1138, 1145, 1141, 1140, 1144, 329, 330,
	331, 332, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 1180, 1181, 365, 0, 273,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 1191, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 1187, 0, 650, 385, 0,
	386, 387, 388, 389, 390, 1150, 1151, 1154, 470, 1193,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 274, 398, 399, 400, 402, 0, 1192, 401, 654,
	655, 0, 656, 0, 403, 404, 1194, 1152, 1195, 405,
	406, 407, 1196, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 1233, 415, 417, 416, 0, 418, 1188,
	1197, 419, 420, 1198, 0, 421, 0, 0, 0, 422,
	423, 426, 1143, 1142, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 1199, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 1200, 466, 455,
	0, 275, 1201, 467, 468, 0, 1153, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 1239, 475, 476, 477,
	0, 0, 478, 479, 661, 1202, 480, 1203, 1182, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 1183, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 1204, 535, 536, 537, 538, 539, 668, 1241, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 1146,
	562, 563, 545, 546, 564, 565, 1205, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 1184, 587, 588, 0, 589, 590, 0, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 672, 673, 674, 675, 0, 608, 0, 600,
	601, 602, 1185, 603, 1186, 0, 604, 605, 606, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 1147, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 0, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 1247, 626, 627, 682, 628, 629, 630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 1149, 0, 1237, 0, 1235, 285,
	286, 1189, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 1148, 0, 301, 637, 638, 639,
	0, 302, 303, 1155, 0, 1136, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 1190, 326, 327, 328, 1139, 1137,
	1138, 1145, 1141, 1140, 1144, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 1180, 1181, 365, 0, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 1191, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 1187, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 1150, 1151, 1154, 470, 1193, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 274, 398,
	399, 400, 402, 0, 1192, 401, 654, 655, 0, 656,
	0, 403, 404, 1194, 1152, 1195, 405, 406, 407, 1196,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	1233, 415, 417, 416, 0, 418, 1188, 1197, 419, 420,
	1198, 0, 421, 0, 0, 0, 422, 423, 426, 1143,
	1142, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	1199, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 1200, 466, 455, 0, 275, 1201,
	467, 468, 0, 1153, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 1239, 475, 476, 477, 0, 0, 478,
	479, 661, 1202, 480, 1203, 1182, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 1183,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 1204, 535,
	536, 537, 538, 539, 668, 1241, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 1146, 562, 563, 545,
	546, 564, 565, 1205, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 1184, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 1185,
	603, 1186, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 1147,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 0,
	623, 622, 624, 681, 0, 625, 0, 0, 0, 1247,
	626, 627, 682, 628, 629, 630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 278, 277, 279,
	280, 281, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 1149, 0, 1237, 0, 1235, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 1148, 0, 301, 637, 638, 639, 0, 302, 303,
	1155, 0, 1136, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141,
	1140, 1144, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 1180,
	1181, 365, 0, 273, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 1191, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 1187,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 1150,
	1151, 1154, 470, 1193, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	0, 1192, 401, 654, 655, 0, 656, 0, 403, 404,
	1194, 1152, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 1188, 1197, 419, 420, 1198, 0, 421,
	0, 0, 0, 422, 423, 426, 1143, 1142, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 0, 275, 1201, 467, 468, 0,
	1153, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 1202,
	480, 1203, 1182, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 1183, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 1146, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 1184, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 1185, 603, 1186, 0,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 1147, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 0, 623, 622, 624,
	681, 0, 625, 0, 0, 0, 1247, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 1149, 0,
	0, 0, 4163, 285, 286, 1189, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 1148, 0,
	301, 637, 638, 639, 0, 302, 303, 1155, 0, 1136,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 1190, 326,
	327, 328, 1139, 1137, 1138, 1145, 1141, 1140, 1144, 329,
	330, 331, 332, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 1180, 1181, 365, 0,
	273, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 1191,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 1187, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 1150, 1151, 1154, 470,
	1193, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 274, 398, 399, 400, 402, 0, 1192, 401,
	654, 655, 0, 656, 0, 403, 404, 1194, 1152, 1195,
	405, 406, 407, 1196, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	1188, 1197, 419, 420, 1198, 0, 421, 0, 0, 0,
	422, 423, 426, 1143, 1142, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 1199, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 1200, 466,
	455, 0, 275, 1201, 467, 468, 0, 1153, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 1202, 480, 1203, 1182,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 1183, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 1204, 535, 536, 537, 538, 539, 668, 1241,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	1146, 562, 563, 545, 546, 564, 565, 1205, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 1184, 587, 588, 0, 589, 590, 0, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 1185, 603, 1186, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 1147, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 0, 623, 622, 624, 681, 0, 625,
	270, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	2541, 2542, 2543, 2560, 2561, 2562, 0, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	2563, 0, 631, 0, 0, 0, 0, 285, 286, 1854,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 0, 1839, 301, 637, 638, 639, 0, 302,
	303, 640, 0, 0, 0, 304, 305, 306, 307, 308,
	309, 310, 2553, 0, 312, 313, 314, 311, 315, 0,
	316, 2549, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 0, 0, 0, 2554, 2555, 2556, 2557,
	366, 367, 368, 646, 0, 0, 2548, 369, 0, 370,
	371, 0, 0, 0, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	649, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	651, 652, 653, 470, 0, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 0, 398, 399, 400,
	402, 0, 0, 401, 654, 655, 0, 656, 0, 403,
	404, 0, 657, 0, 405, 406, 407, 0, 408, 0,
	2558, 2559, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 658, 0, 419, 420, 0, 0,
	421, 0, 0, 0, 422, 423, 426, 0, 0, 424,
	425, 427, 428, 2551, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 0, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 0, 466, 455, 0, 0, 0, 467, 468,
	0, 659, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	0, 480, 0, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 668, 540, 2552, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 0, 562, 563, 545, 546, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 0,
	589, 590, 1838, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 672, 673, 674,
	675, 0, 608, 0, 600, 601, 602, 676, 603, 677,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 0, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 0, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 0, 0, 0, 0, 0, 0,
	0, 1069, 0, 1329, 2538, 2539, 2540, 2564, 2550, 2544,
	0, 2546, 2547, 2545, 2532, 2533, 2534, 2535, 2536, 2537,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 1189, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 1334, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 1190, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 1191, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 651, 652, 653, 470, 1193, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 0,
	398, 399, 400, 402, 0, 1192, 401, 654, 655, 0,
	656, 0, 403, 404, 1194, 657, 1195, 405, 406, 407,
	1196, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 1197, 419,
	420, 1198, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 1199, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 1200, 466, 455, 0, 0,
	1201, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 1202, 480, 1203, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 1204,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	235, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 1205, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 237, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 1609, 679, 680,
	0, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	229, 626, 627, 682, 628, 629, 630, 0, 0, 230,
	1606, 0, 1329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	278, 277, 279, 280, 281, 282, 189, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 1189, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 1334, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 1190, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 1191, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 651, 652, 653, 470, 1193, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 0, 398,
	399, 400, 402, 0, 1192, 401, 654, 655, 0, 656,
	0, 403, 404, 1194, 657, 1195, 405, 406, 407, 1196,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 1197, 419, 420,
	1198, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	1199, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 1200, 466, 455, 0, 0, 1201,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 1202, 480, 1203, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 1204, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 235,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 1205, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 237, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 1609, 679, 680, 0,
	623, 622, 624, 681, 0, 625, 0, 0, 0, 229,
	626, 627, 682, 628, 629, 630, 1329, 1328, 230, 0,
	0, 0, 1326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 189, 0, 0, 631, 0,
	0, 0, 0, 285, 286, 1189, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 0, 0,
	301, 637, 638, 639, 0, 302, 303, 640, 0, 1334,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 1190, 326,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 332, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 644, 645, 365, 0,
	273, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 1191,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 649, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 651, 652, 653, 470,
	1193, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 0, 398, 399, 400, 402, 0, 1192, 401,
	654, 655, 0, 656, 0, 403, 404, 1194, 657, 1195,
	405, 406, 407, 1196, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	658, 1197, 419, 420, 1198, 0, 421, 0, 0, 0,
	422, 423, 426, 0, 0, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 1199, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 1200, 466,
	455, 0, 0, 1201, 467, 468, 0, 659, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 1202, 480, 1203, 662,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 665, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 1204, 535, 536, 537, 538, 539, 668, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	0, 562, 563, 545, 546, 564, 565, 1205, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 671, 587, 588, 0, 589, 590, 0, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 676, 603, 677, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 0, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 0, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	1329, 1328, 0, 0, 0, 0, 1326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 1631,
	0, 0, 631, 0, 0, 0, 0, 285, 286, 1189,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 0, 0, 301, 637, 638, 639, 0, 302,
	303, 640, 0, 1334, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 1190, 326, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 0, 273, 0, 0, 0, 0, 0,
	366, 367, 368, 646, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 1191, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	649, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	651, 652, 653, 470, 1193, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 0, 398, 399, 400,
	402, 0, 1192, 401, 654, 655, 0, 656, 0, 403,
	404, 1194, 657, 1195, 405, 406, 407, 1196, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 658, 1197, 419, 420, 1198, 0,
	421, 0, 0, 0, 422, 423, 426, 0, 0, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 1199, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 1200, 466, 455, 0, 0, 1201, 467, 468,
	0, 659, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	1202, 480, 1203, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 1204, 535, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 0, 562, 563, 545, 546, 564,
	565, 1205, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 672, 673, 674,
	675, 0, 608, 0, 600, 601, 602, 676, 603, 677,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 0, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 0, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 1329, 1328, 0, 0, 0, 0,
	1326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 3628, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 1189, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 303, 640, 0, 1334, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 1190, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 1191, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 651, 652, 653, 470, 1193, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	0, 398, 399, 400, 402, 0, 1192, 401, 654, 655,
	0, 656, 0, 403, 404, 1194, 657, 1195, 405, 406,
	407, 1196, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 1197,
	419, 420, 1198, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 1199, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 1200, 466, 455, 0,
	0, 1201, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 1202, 480, 1203, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 2311,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	1204, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 0, 562,
	563, 545, 546, 564, 565, 1205, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 672, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 0, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 1329, 2223,
	0, 0, 0, 0, 2224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 1631, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 1334, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	1190, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 1191, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 1193, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 0, 398, 399, 400, 402, 0,
	1192, 401, 654, 655, 0, 656, 0, 403, 404, 1194,
	657, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 2222, 417, 416,
	0, 418, 658, 1197, 419, 420, 1198, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 0, 0, 1201, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 1202, 480,
	1203, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 0, 623, 622, 624, 681,
	0, 625, 0, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 1329, 1328, 0, 0, 0, 0, 1326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 1631, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 1189, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 1334, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 1190, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 1191, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 651, 652, 653, 470, 1193, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 0, 398,
	399, 400, 402, 0, 1192, 401, 654, 655, 0, 656,
	0, 403, 404, 1194, 657, 1195, 405, 406, 407, 1196,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 1197, 419, 420,
	1198, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	1199, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 1200, 466, 455, 0, 0, 1201,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 1202, 480, 1203, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 1204, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 1205, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 0,
	623, 622, 624, 681, 1069, 625, 270, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 0, 0, 0, 0,
	0, 0, 0, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 285, 286, 1615, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 0, 0,
	301, 637, 638, 639, 0, 302, 303, 640, 0, 0,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 332, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 644, 645, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 0,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 649, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 651, 652, 653, 470,
	0, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 0, 398, 399, 400, 402, 0, 0, 401,
	654, 655, 0, 656, 0, 403, 404, 0, 657, 0,
	405, 406, 407, 0, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	658, 0, 419, 420, 0, 0, 421, 0, 0, 0,
	422, 423, 426, 0, 0, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 0, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 0, 466,
	455, 0, 0, 0, 467, 468, 0, 659, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 0, 480, 0, 662,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 665, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 668, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 235, 557, 558, 556, 559, 560, 561,
	0, 562, 563, 545, 546, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 671, 587, 588, 0, 589, 590, 0, 586,
	577, 237, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 676, 603, 677, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 0, 618, 0, 0, 619, 620, 621,
	1609, 679, 680, 0, 623, 622, 624, 681, 0, 625,
	270, 0, 0, 229, 626, 627, 682, 628, 629, 630,
	0, 0, 230, 0, 0, 0, 0, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 285, 286, 189,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 0, 0, 301, 637, 638, 639, 0, 302,
	303, 640, 0, 0, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 0, 273, 0, 0, 0, 0, 0,
	366, 367, 368, 646, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 0, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	649, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	651, 652, 653, 470, 0, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 274, 398, 399, 400,
	402, 0, 0, 401, 654, 655, 0, 656, 0, 403,
	404, 0, 657, 0, 405, 406, 407, 0, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 658, 0, 419, 420, 0, 0,
	421, 0, 0, 0, 422, 423, 426, 0, 0, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 0, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 0, 466, 455, 0, 275, 0, 467, 468,
	0, 659, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	0, 480, 0, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 0, 562, 563, 545, 546, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 672, 673, 674,
	675, 0, 608, 0, 600, 601, 602, 676, 603, 677,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 0, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 0, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 1247, 626, 627,
	682, 628, 629, 630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 1149,
	0, 0, 0, 1971, 285, 286, 1189, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 1148,
	0, 301, 637, 638, 639, 0, 302, 303, 1155, 0,
	1136, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 1190,
	326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140, 1144,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 1180, 1181, 365,
	0, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	1191, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 1187, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 1150, 1151, 1154,
	470, 1193, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 274, 398, 399, 400, 402, 0, 1192,
	401, 654, 655, 0, 656, 0, 403, 404, 1194, 1152,
	1195, 405, 406, 407, 1196, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 1188, 1197, 419, 420, 1198, 0, 421, 0, 0,
	0, 422, 423, 426, 1143, 1142, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 1199, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 1200,
	466, 455, 0, 275, 1201, 467, 468, 0, 1153, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 1202, 480, 1203,
	1182, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 1183, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 1204, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 1146, 562, 563, 545, 546, 564, 565, 1205, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 1184, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 1185, 603, 1186, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 1147, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 0, 623, 622, 624, 681, 0,
	625, 270, 3075, 0, 0, 626, 627, 682, 628, 629,
	630, 0, 0, 0, 0, 0, 0, 0, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	0, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 651, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 0, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 404, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 0,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 0, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 0, 623,
	622, 624, 681, 0, 625, 270, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 0, 0, 0, 0, 0,
	0, 0, 276, 278, 277, 279, 280, 281, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 285, 286, 4881, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 0, 0, 301,
	637, 638, 639, 0, 302, 303, 640, 0, 0, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	328, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 332, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 0, 273,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 0, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 649, 0, 650, 385, 0,
	386, 387, 388, 389, 390, 651, 652, 653, 470, 0,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 274, 398, 399, 400, 402, 0, 0, 401, 654,
	655, 0, 656, 0, 403, 404, 0, 657, 0, 405,
	406, 407, 0, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 658,
	0, 419, 420, 0, 0, 421, 0, 0, 0, 422,
	423, 426, 0, 0, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 0, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 0, 466, 455,
	0, 275, 0, 467, 468, 0, 659, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 0, 480, 0, 662, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 668, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 0,
	562, 563, 545, 546, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 0, 589, 590, 0, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 672, 673, 674, 675, 0, 608, 0, 600,
	601, 602, 676, 603, 677, 0, 604, 605, 606, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 0, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 0, 623, 622, 624, 681, 270, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 0,
	0, 0, 0, 0, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 285, 286, 3578, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 0, 302, 303, 640, 0,
	0, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	0, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 651, 652, 653,
	470, 0, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 274, 398, 399, 400, 402, 0, 0,
	401, 654, 655, 0, 656, 0, 403, 404, 0, 657,
	0, 405, 406, 407, 0, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 0, 419, 420, 0, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 0, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 0,
	466, 455, 0, 275, 0, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 0, 480, 0,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 0, 562, 563, 545, 546, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 0, 623, 622, 624, 681, 270,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 0, 0, 0, 0, 0, 276, 278, 277, 279,
	280, 281, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 285, 286, 1603, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 0, 0, 301, 637, 638, 639, 0, 302, 303,
	640, 0, 0, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 0, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 649,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 0, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 0, 398, 399, 400, 402,
	0, 0, 401, 654, 655, 0, 656, 0, 403, 404,
	0, 657, 0, 405, 406, 407, 0, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 658, 0, 419, 420, 0, 0, 421,
	0, 0, 0, 422, 423, 426, 0, 0, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 0, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 0, 466, 455, 0, 0, 0, 467, 468, 0,
	659, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 0,
	480, 0, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 0, 562, 563, 545, 546, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 676, 603, 677, 0,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 0, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 0, 623, 622, 624,
	681, 0, 625, 270, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 0, 0, 0,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 3063, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 0, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 0, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 651, 652, 653, 470, 0, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 0,
	398, 399, 400, 402, 0, 0, 401, 654, 655, 0,
	656, 0, 403, 404, 0, 657, 0, 405, 406, 407,
	0, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 0, 419,
	420, 0, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 0, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 0, 466, 455, 0, 0,
	0, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 0, 480, 0, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	0, 623, 622, 624, 681, 0, 625, 270, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 285, 286, 3740, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 0, 302, 303, 640, 0,
	0, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	0, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 651, 652, 653,
	470, 0, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 0, 398, 399, 400, 402, 0, 0,
	401, 654, 655, 0, 656, 0, 403, 404, 0, 657,
	0, 405, 406, 407, 0, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 0, 419, 420, 0, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 0, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 0,
	466, 455, 0, 0, 0, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 0, 480, 0,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 0, 562, 563, 545, 546, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 0, 623, 622, 624, 681, 904,
	625, 809, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 0, 0, 0, 0, 0, 0, 0, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	2300, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 816, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 273, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 902, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 651, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 274, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 404, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 0,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 275, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 814, 591, 592, 593,
	594, 595, 815, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 809, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 276, 278, 277, 279, 280,
	281, 282, 2040, 283, 284, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 819, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 0, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 816, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 0, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 0, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 0,
	0, 401, 654, 655, 0, 656, 0, 403, 404, 0,
	657, 0, 405, 406, 407, 0, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 0, 419, 420, 0, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 0, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	0, 466, 455, 0, 275, 0, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 0, 480,
	0, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	2039, 552, 553, 554, 555, 0, 2041, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 814, 591, 592, 593, 594, 595, 815,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 2038, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 809, 623, 622, 624, 681,
	0, 625, 0, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 276, 278, 277, 279, 280, 281, 282, 1991,
	283, 284, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 285, 286, 819, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 0, 0, 301,
	637, 638, 639, 0, 302, 303, 640, 0, 0, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	328, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 816, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 0, 273,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 0, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 649, 0, 650, 385, 0,
	386, 387, 388, 389, 390, 651, 652, 653, 470, 0,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 274, 398, 399, 400, 402, 0, 0, 401, 654,
	655, 0, 656, 0, 403, 404, 0, 657, 0, 405,
	406, 407, 0, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 658,
	0, 419, 420, 0, 0, 421, 0, 0, 0, 422,
	423, 426, 0, 0, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 0, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 0, 466, 455,
	0, 275, 0, 467, 468, 0, 659, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 0, 480, 0, 662, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 668, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 1990, 552, 553,
	554, 555, 0, 1992, 558, 556, 559, 560, 561, 0,
	562, 563, 545, 546, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 0, 589, 590, 0, 586, 577,
	814, 591, 592, 593, 594, 595, 815, 597, 359, 598,
	0, 599, 672, 673, 674, 675, 0, 608, 0, 600,
	601, 602, 676, 603, 677, 0, 604, 605, 1989, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 0, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 0, 623, 622, 624, 681, 0, 625, 807,
	0, 809, 0, 626, 627, 682, 628, 629, 630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 819, 0, 631, 0, 0, 0, 0, 285, 286,
	0, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 816, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 273, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 651, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 274, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 404, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 0,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 275, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 814, 591, 592, 593,
	594, 595, 815, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 0, 623,
	622, 624, 681, 2013, 625, 0, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 0, 0, 0, 0, 0,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 819, 0, 0,
	285, 286, 1189, 287, 288, 289, 290, 291, 292, 0,
	2019, 0, 293, 2009, 294, 2025, 0, 2032, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 2035, 2036,
	0, 0, 302, 303, 0, 0, 1334, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 1190, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 1172, 334, 2023, 2022, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	1157, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 0, 0, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 2021, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 1191, 372, 373, 374,
	2030, 2031, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 0, 0, 0, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 470, 1193, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 0,
	398, 399, 400, 402, 0, 1192, 401, 2016, 2017, 0,
	2012, 0, 403, 404, 1194, 0, 1195, 405, 406, 407,
	1196, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 0, 1197, 419,
	420, 1198, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 1199, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 1200, 466, 455, 0, 0,
	1201, 467, 468, 0, 0, 469, 2024, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 0, 1202, 480, 1203, 0, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 2006, 494, 495, 496, 2007, 497, 498, 499,
	0, 500, 0, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 2020, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 1204,
	535, 536, 537, 538, 539, 0, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 1205, 566, 567, 568, 569, 570,
	571, 572, 2018, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 2034, 580, 581, 582, 583, 0,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	2026, 2027, 2028, 2029, 0, 608, 0, 600, 601, 602,
	0, 603, 0, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 0, 2010, 2033,
	0, 623, 622, 624, 0, 0, 625, 0, 0, 0,
	0, 626, 627, 0, 628, 629, 630, 809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 631,
	2000, 0, 0, 0, 285, 286, 0, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 0, 302, 303, 640, 0,
	0, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 816, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	0, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 651, 652, 653,
	470, 0, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 274, 398, 399, 400, 402, 0, 0,
	401, 654, 655, 0, 656, 0, 403, 404, 0, 657,
	0, 405, 406, 407, 0, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 0, 419, 420, 0, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 0, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 0,
	466, 455, 0, 275, 0, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 0, 480, 0,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 0, 562, 563, 545, 546, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 814, 591, 592, 593, 594, 595, 815, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 809, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 819, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 303, 640, 0, 0, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	816, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 0, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 651, 652, 653, 470, 0, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	274, 398, 399, 400, 402, 0, 0, 401, 654, 655,
	0, 656, 0, 403, 404, 0, 657, 0, 405, 406,
	407, 0, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 0,
	419, 420, 0, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 0, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 0, 466, 455, 0,
	275, 0, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 0, 480, 0, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	0, 2348, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 2349, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 0, 562,
	563, 545, 546, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 814,
	591, 592, 593, 594, 595, 815, 597, 359, 598, 0,
	599, 672, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 2350, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 270, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	819, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 273, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 651, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 274, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 404, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 0,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 275, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 0, 623,
	622, 624, 681, 0, 625, 0, 1329, 2088, 0, 626,
	627, 682, 628, 629, 630, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 0, 0, 819, 631, 0,
	0, 0, 0, 285, 286, 1189, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 0, 0,
	301, 637, 638, 639, 0, 302, 303, 640, 0, 1334,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 1190, 326,
	327, 328, 0, 0, 0, 0, 0, 0, 3026, 329,
	330, 331, 332, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 644, 645, 365, 0,
	273, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 1191,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 649, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 651, 652, 653, 470,
	1193, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 0, 398, 399, 400, 402, 0, 1192, 401,
	654, 655, 0, 656, 0, 403, 404, 1194, 657, 1195,
	405, 406, 407, 1196, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	658, 1197, 419, 420, 1198, 0, 421, 0, 0, 0,
	422, 423, 426, 0, 0, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 1199, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 1200, 466,
	455, 0, 0, 1201, 467, 468, 0, 659, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 1202, 480, 1203, 662,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 665, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 1204, 535, 536, 537, 538, 539, 668, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	3027, 562, 563, 545, 546, 564, 565, 1205, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 671, 587, 588, 0, 589, 590, 0, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 676, 603, 677, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 0, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 0, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	1329, 1328, 0, 0, 0, 0, 1326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 285, 286, 1189,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 0, 0, 301, 637, 638, 639, 0, 302,
	303, 640, 0, 1334, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 1190, 326, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 0, 273, 0, 0, 0, 0, 0,
	366, 367, 368, 646, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 1191, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	649, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	651, 652, 653, 470, 1193, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 0, 398, 399, 400,
	402, 0, 1192, 401, 654, 655, 0, 656, 0, 403,
	404, 1194, 657, 1195, 405, 406, 407, 1196, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 658, 1197, 419, 420, 1198, 0,
	421, 0, 0, 0, 422, 423, 426, 0, 0, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 1199, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 1200, 466, 455, 0, 0, 1201, 467, 468,
	3934, 659, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	1202, 480, 1203, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 1204, 535, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 0, 562, 563, 545, 546, 564,
	565, 1205, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 672, 673, 674,
	675, 0, 608, 0, 600, 601, 602, 676, 603, 677,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 0, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 0, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 1329, 1328, 0, 0, 0, 0,
	1326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 1189, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 303, 640, 0, 1334, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 1190, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 1191, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 651, 652, 653, 470, 1193, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	0, 398, 399, 400, 402, 0, 1192, 401, 654, 655,
	0, 656, 0, 403, 404, 1194, 657, 1195, 405, 406,
	407, 1196, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 1197,
	419, 420, 1198, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 1199, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 1200, 466, 455, 0,
	0, 1201, 467, 468, 3540, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 1202, 480, 1203, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	1204, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 0, 562,
	563, 545, 546, 564, 565, 1205, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 672, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 0, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 1659, 0,
	1329, 1328, 0, 0, 0, 0, 1326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 285, 286, 1189,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 0, 0, 301, 637, 638, 639, 0, 302,
	303, 640, 0, 1334, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 1190, 326, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 0, 273, 0, 0, 0, 0, 0,
	1658, 367, 368, 646, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 1191, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	649, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	651, 652, 653, 470, 1193, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 0, 398, 399, 400,
	402, 0, 1192, 401, 654, 655, 0, 656, 0, 403,
	404, 1194, 657, 1195, 405, 406, 407, 1196, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 658, 1197, 419, 420, 1198, 0,
	421, 0, 0, 0, 422, 423, 426, 0, 0, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 1199, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 1200, 466, 455, 0, 0, 1201, 467, 468,
	0, 659, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	1202, 480, 1203, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 1657, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 1204, 535, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 1656, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 0, 562, 563, 545, 546, 564,
	565, 1205, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 672, 673, 674,
	675, 0, 608, 0, 600, 601, 602, 676, 603, 677,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 0, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 0, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 1577, 0, 1329, 1328, 0, 0,
	0, 0, 1326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 285, 286, 1189, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 0, 0,
	301, 637, 638, 639, 0, 302, 303, 640, 0, 1334,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 1190, 326,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 332, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 644, 645, 365, 0,
	273, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 1191,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 649, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 1576, 652, 653, 470,
	1193, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 0, 398, 399, 400, 402, 0, 1192, 401,
	654, 655, 0, 656, 0, 403, 404, 1194, 657, 1195,
	405, 406, 407, 1196, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	658, 1197, 419, 420, 1198, 0, 421, 0, 0, 0,
	422, 423, 426, 0, 0, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 1199, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 1200, 466,
	455, 0, 0, 1201, 467, 468, 0, 659, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 1202, 480, 1203, 662,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 665, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 1204, 535, 536, 537, 538, 539, 668, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	0, 562, 563, 545, 546, 564, 565, 1205, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 671, 587, 588, 0, 589, 590, 0, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 676, 603, 677, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 0, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 0, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	1537, 0, 1329, 1328, 0, 0, 0, 0, 1326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 1189, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 1334, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 1190, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 1191, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 651, 652, 653, 470, 1193, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 0, 398,
	399, 400, 402, 0, 1192, 401, 654, 655, 0, 656,
	0, 403, 404, 1194, 657, 1195, 405, 406, 407, 1196,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 1197, 419, 420,
	1198, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	1199, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 1200, 466, 455, 0, 0, 1201,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 1202, 480, 1203, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 1204, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 1205, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 0,
	623, 622, 624, 681, 0, 625, 0, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 1502, 0, 1329, 1328,
	0, 0, 0, 0, 1326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 1334, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	1190, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 1191, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 1501, 652,
	653, 470, 1193, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 0, 398, 399, 400, 402, 0,
	1192, 401, 654, 655, 0, 656, 0, 403, 404, 1194,
	657, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 1197, 419, 420, 1198, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 0, 0, 1201, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 1202, 480,
	1203, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 0, 623, 622, 624, 681,
	0, 625, 0, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 1323, 0, 1329, 1328, 0, 0, 0, 0,
	1326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 1189, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 303, 640, 0, 1334, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 1190, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 1191, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 1322, 652, 653, 470, 1193, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	0, 398, 399, 400, 402, 0, 1192, 401, 654, 655,
	0, 656, 0, 403, 404, 1194, 657, 1195, 405, 406,
	407, 1196, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 1197,
	419, 420, 1198, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 1199, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 1200, 466, 455, 0,
	0, 1201, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 1202, 480, 1203, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	1204, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 0, 562,
	563, 545, 546, 564, 565, 1205, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 672, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 0, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 1329, 1328,
	0, 0, 0, 0, 1326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 1334, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	1190, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 1191, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 1193, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 0, 398, 399, 400, 402, 0,
	1192, 401, 654, 655, 0, 656, 0, 403, 404, 1194,
	657, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 1197, 419, 420, 1198, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 0, 0, 1201, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 1202, 480,
	1203, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 0, 623, 622, 624, 681,
	0, 625, 1329, 2088, 0, 0, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 0, 0, 0, 0, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 1189, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 1334, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 1190, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 2085, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 1191, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 651, 652, 653, 470, 1193, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 0, 398,
	399, 400, 402, 0, 1192, 401, 654, 655, 0, 656,
	0, 403, 404, 1194, 657, 1195, 405, 406, 407, 1196,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 1197, 419, 420,
	1198, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	1199, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 1200, 466, 455, 0, 0, 1201,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 1202, 480, 1203, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 1204, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 1205, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 0,
	623, 622, 624, 681, 0, 625, 1329, 1328, 0, 0,
	626, 627, 682, 628, 629, 630, 0, 0, 0, 0,
	0, 0, 0, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 285, 286, 1189, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 0, 0,
	301, 637, 638, 639, 0, 302, 303, 640, 0, 1334,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 1190, 326,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 332, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 644, 645, 365, 0,
	273, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 1191,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 649, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 651, 652, 653, 470,
	1193, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 0, 398, 399, 400, 402, 0, 1192, 401,
	654, 655, 0, 656, 0, 403, 404, 1194, 657, 1195,
	405, 406, 407, 1196, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	658, 1197, 419, 420, 1198, 0, 421, 0, 0, 0,
	422, 423, 426, 0, 0, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 1199, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 1200, 466,
	455, 0, 0, 1201, 467, 468, 0, 659, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 1202, 480, 1203, 662,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 665, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 1204, 535, 536, 537, 538, 539, 668, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	0, 562, 563, 545, 546, 564, 565, 1205, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 671, 587, 588, 0, 589, 590, 0, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 676, 603, 677, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 0, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 1329, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 1189, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 1334, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 1190, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 1191, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 651, 652, 653, 470, 1193, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 0,
	398, 399, 400, 402, 0, 1192, 401, 654, 655, 0,
	656, 0, 403, 404, 1194, 657, 1195, 405, 406, 407,
	1196, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 1197, 419,
	420, 1198, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 1199, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 1200, 466, 455, 0, 0,
	1201, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 1202, 480, 1203, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 1204,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 1205, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	270, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 285, 286, 0,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 0, 0, 301, 637, 638, 639, 2865, 302,
	303, 640, 0, 0, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 2862,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 2869, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 0, 3088, 0, 0, 0, 0, 0,
	366, 367, 368, 646, 0, 0, 0, 369, 0, 370,
	371, 2868, 0, 0, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	649, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	651, 652, 653, 470, 0, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 3085, 398, 399, 400,
	402, 0, 0, 401, 654, 655, 0, 656, 0, 403,
	3087, 0, 657, 0, 405, 406, 407, 0, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 658, 0, 419, 420, 3084, 0,
	421, 0, 0, 0, 422, 423, 426, 0, 0, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 0, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 0, 466, 455, 0, 0, 0, 467, 468,
	0, 659, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	0, 480, 0, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 2867, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 0, 562, 563, 545, 546, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 672, 673, 674,
	675, 0, 608, 0, 600, 601, 602, 676, 603, 677,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 3086,
	611, 612, 613, 615, 616, 614, 617, 0, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 270, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 285, 286, 0, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 2865, 302, 303, 640, 0,
	0, 2859, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 2862, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 2869, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 2868, 0,
	0, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 2858, 652, 653,
	470, 0, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 0, 398, 399, 400, 402, 0, 0,
	401, 654, 655, 0, 656, 0, 403, 404, 0, 657,
	0, 405, 406, 407, 0, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 0, 419, 420, 0, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 0, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 0,
	466, 455, 0, 0, 0, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 0, 480, 0,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 2867,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 0, 562, 563, 545, 546, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 2866, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 0, 623, 622, 624, 681, 1736,
	625, 270, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 0, 0, 0, 0, 0, 0, 0, 276, 278,
	277, 279, 280, 281, 282, 1735, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	0, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 1734, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 273, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 651, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 274, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 404, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 0,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 275, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 1737, 544, 551, 552, 553, 554, 555, 0, 1733,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 1731, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 0, 1732,
	622, 624, 681, 1477, 625, 270, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 0, 0, 0, 0, 0,
	0, 0, 276, 278, 277, 279, 280, 281, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 285, 286, 0, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 0, 0, 301,
	637, 638, 639, 0, 302, 303, 640, 0, 0, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	328, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 332, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 0, 273,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 0, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 649, 0, 650, 385, 0,
	386, 387, 388, 389, 390, 1479, 652, 653, 470, 0,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 274, 398, 399, 400, 402, 0, 0, 401, 654,
	655, 0, 656, 0, 403, 404, 0, 657, 0, 405,
	406, 407, 0, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 658,
	0, 419, 420, 0, 0, 421, 0, 0, 0, 422,
	423, 426, 0, 0, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 0, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 0, 466, 455,
	0, 275, 0, 467, 468, 0, 659, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 1239, 475, 476, 477,
	0, 0, 478, 479, 661, 0, 480, 0, 662, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 668, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 0,
	562, 563, 545, 546, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 0, 589, 590, 0, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 672, 673, 674, 675, 0, 608, 0, 600,
	601, 602, 676, 603, 677, 0, 604, 605, 606, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 0, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 0, 623, 622, 624, 681, 1474, 625, 270,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 0,
	0, 0, 0, 0, 0, 0, 276, 278, 277, 279,
	280, 281, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 285, 286, 0, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 0, 0, 301, 637, 638, 639, 0, 302, 303,
	640, 0, 0, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 0, 273, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 0, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 649,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 1476,
	652, 653, 470, 0, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	0, 0, 401, 654, 655, 0, 656, 0, 403, 404,
	0, 657, 0, 405, 406, 407, 0, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 658, 0, 419, 420, 0, 0, 421,
	0, 0, 0, 422, 423, 426, 0, 0, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 0, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 0, 466, 455, 0, 275, 0, 467, 468, 0,
	659, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	1239, 475, 476, 477, 0, 0, 478, 479, 661, 0,
	480, 0, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 0, 562, 563, 545, 546, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 676, 603, 677, 0,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 0, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 0, 623, 622, 624,
	681, 1381, 625, 270, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 0, 0, 0,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 0, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 0, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 0, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 1383, 652, 653, 470, 0, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 274,
	398, 399, 400, 402, 0, 0, 401, 654, 655, 0,
	656, 0, 403, 404, 0, 657, 0, 405, 406, 407,
	0, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 0, 419,
	420, 0, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 0, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 0, 466, 455, 0, 275,
	0, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 1239, 475, 476, 477, 0, 0,
	478, 479, 661, 0, 480, 0, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	0, 623, 622, 624, 681, 714, 625, 270, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 276, 278, 277, 279, 713, 281,
	282, 703, 283, 284, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 285, 286, 0, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 0, 302, 303, 640, 0,
	0, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 706, 323, 324, 325, 0,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	0, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 707, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 651, 652, 653,
	470, 0, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 0, 398, 399, 400, 402, 0, 0,
	401, 654, 655, 0, 656, 0, 403, 404, 0, 657,
	0, 405, 406, 407, 0, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 0, 419, 420, 0, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 0, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 0,
	466, 455, 0, 0, 0, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 0, 480, 0,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 708, 557, 558, 556, 559, 560,
	561, 0, 562, 563, 545, 546, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 0, 623, 622, 624, 681, 702,
	625, 270, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 0, 0, 0, 0, 0, 0, 0, 276, 278,
	277, 279, 280, 281, 282, 703, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	0, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 706,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 707,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 651, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 0, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 404, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 0,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 0, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 708, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 270, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 276, 278, 277, 279, 280,
	281, 282, 703, 283, 284, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 0, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 0, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 706, 323, 324, 325,
	0, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 0, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 707, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 0, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 0, 398, 399, 400, 402, 0,
	0, 401, 654, 655, 0, 656, 0, 403, 404, 0,
	657, 0, 405, 406, 407, 0, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 0, 419, 420, 0, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 0, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	0, 466, 455, 0, 0, 0, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 0, 480,
	0, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 708, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 270, 623, 622, 624, 681,
	0, 625, 0, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 276, 278, 277, 279, 280, 281, 282, 703,
	283, 284, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 285, 286, 0, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 0, 0, 301,
	637, 638, 639, 0, 302, 303, 640, 0, 0, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 706, 323, 324, 325, 0, 326, 327,
	328, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 332, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 0, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 3945, 384, 649, 0, 650, 385, 0,
	386, 387, 388, 389, 390, 651, 652, 653, 470, 0,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 0, 398, 399, 400, 402, 0, 0, 401, 654,
	655, 0, 656, 0, 403, 404, 0, 657, 0, 405,
	406, 407, 0, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 658,
	0, 419, 420, 0, 0, 421, 0, 0, 0, 422,
	423, 426, 0, 0, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 0, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 0, 466, 455,
	0, 0, 0, 467, 468, 0, 659, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 0, 480, 0, 662, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 668, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 708, 557, 558, 556, 559, 560, 561, 0,
	562, 563, 545, 546, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 0, 589, 590, 0, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 672, 673, 674, 675, 0, 608, 0, 600,
	601, 602, 676, 603, 677, 0, 604, 605, 606, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 0, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 270, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 0, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 0, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 0, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 651, 652, 653, 470, 0, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 274, 398,
	399, 400, 402, 0, 0, 401, 654, 655, 0, 656,
	0, 403, 404, 0, 657, 0, 405, 406, 407, 0,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 0, 419, 420,
	0, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	0, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 0, 466, 455, 0, 275, 0,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 1239, 475, 476, 477, 0, 0, 478,
	479, 661, 0, 480, 0, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 270,
	623, 622, 624, 681, 0, 625, 0, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 276, 278, 277, 279,
	280, 281, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 285, 286, 0, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 0, 0, 301, 637, 638, 639, 0, 302, 303,
	640, 0, 0, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 0, 273, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 0, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 649,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 0, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	0, 0, 401, 654, 655, 0, 656, 0, 403, 404,
	0, 657, 0, 405, 406, 407, 0, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 658, 0, 419, 420, 0, 0, 421,
	0, 0, 0, 422, 423, 426, 0, 0, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 0, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 3488, 466, 455, 0, 275, 0, 467, 468, 0,
	659, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 0,
	480, 0, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 0, 562, 563, 545, 546, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 676, 603, 677, 0,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 0, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 0, 623, 622, 624,
	681, 3033, 625, 270, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 0, 0, 0,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 0, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 0, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 0, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 3032, 652, 653, 470, 0, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 274,
	398, 399, 400, 402, 0, 0, 401, 654, 655, 0,
	656, 0, 403, 404, 0, 657, 0, 405, 406, 407,
	0, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 0, 419,
	420, 0, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 0, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 0, 466, 455, 0, 275,
	0, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 0, 480, 0, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	0, 623, 622, 624, 681, 2317, 625, 270, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 285, 286, 0, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 0, 302, 303, 640, 0,
	0, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	0, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 651, 652, 653,
	470, 0, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 274, 398, 399, 400, 402, 0, 0,
	401, 654, 655, 0, 656, 0, 403, 404, 0, 657,
	0, 405, 406, 407, 0, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 0, 419, 420, 0, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 0, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 0,
	466, 455, 0, 275, 0, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 0, 480, 0,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 0, 562, 563, 545, 546, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 270, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 0, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 303, 640, 0, 0, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 0, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 651, 652, 653, 470, 0, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	274, 398, 399, 400, 402, 0, 0, 401, 654, 655,
	0, 656, 0, 403, 404, 0, 657, 0, 405, 406,
	407, 0, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 0,
	419, 420, 0, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 0, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 0, 466, 455, 0,
	275, 0, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 0, 480, 0, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 0, 562,
	563, 545, 546, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 2256,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 672, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 0, 623, 622, 624, 681, 2263, 625, 270, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 0, 0,
	0, 0, 0, 0, 0, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 0, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 0, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 0, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 2262, 652,
	653, 470, 0, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 0,
	0, 401, 654, 655, 0, 656, 0, 403, 404, 0,
	657, 0, 405, 406, 407, 0, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 0, 419, 420, 0, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 0, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	0, 466, 455, 0, 275, 0, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 0, 480,
	0, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 0, 623, 622, 624, 681,
	2249, 625, 270, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 0, 0, 0, 0, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 0, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 0, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 0, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 2251, 652, 653, 470, 0, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 274, 398,
	399, 400, 402, 0, 0, 401, 654, 655, 0, 656,
	0, 403, 404, 0, 657, 0, 405, 406, 407, 0,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 0, 419, 420,
	0, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	0, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 0, 466, 455, 0, 275, 0,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 0, 480, 0, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 270,
	623, 622, 624, 681, 0, 625, 0, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 276, 278, 277, 279,
	280, 281, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 285, 286, 0, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 0, 0, 301, 637, 638, 639, 0, 302, 303,
	640, 0, 0, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 0, 273, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 0, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 649,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 2216,
	652, 653, 470, 0, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	0, 0, 401, 654, 655, 0, 656, 0, 403, 404,
	0, 657, 0, 405, 406, 407, 0, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 658, 0, 419, 420, 0, 0, 421,
	0, 0, 0, 422, 423, 426, 0, 0, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 0, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 0, 466, 455, 0, 275, 0, 467, 468, 0,
	659, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	1239, 475, 476, 477, 0, 0, 478, 479, 661, 0,
	480, 0, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 0, 562, 563, 545, 546, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 676, 603, 677, 0,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 0, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 0, 623, 622, 624,
	681, 1581, 625, 270, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 0, 0, 0,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 0, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 0, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 0, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 1580, 652, 653, 470, 0, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 274,
	398, 399, 400, 402, 0, 0, 401, 654, 655, 0,
	656, 0, 403, 404, 0, 657, 0, 405, 406, 407,
	0, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 0, 419,
	420, 0, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 0, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 0, 466, 455, 0, 275,
	0, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 0, 480, 0, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	0, 623, 622, 624, 681, 1494, 625, 270, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 285, 286, 0, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 0, 302, 303, 640, 0,
	0, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	0, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 651, 652, 653,
	470, 0, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 274, 398, 399, 400, 402, 0, 0,
	401, 654, 655, 0, 656, 0, 403, 404, 0, 657,
	0, 405, 406, 407, 0, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 0, 419, 420, 0, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 0, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 0,
	466, 455, 0, 275, 0, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 0, 480, 0,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 0, 562, 563, 545, 546, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 0, 623, 622, 624, 681, 1487,
	625, 270, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 0, 0, 0, 0, 0, 0, 0, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	0, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 273, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 1489, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 274, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 404, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 0,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 275, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 0, 623,
	622, 624, 681, 1313, 625, 270, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 0, 0, 0, 0, 0,
	0, 0, 276, 278, 277, 279, 280, 281, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 285, 286, 0, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 0, 0, 301,
	637, 638, 639, 0, 302, 303, 640, 0, 0, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	328, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 332, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 0, 273,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 0, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 649, 0, 650, 385, 0,
	386, 387, 388, 389, 390, 1312, 652, 653, 470, 0,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 274, 398, 399, 400, 402, 0, 0, 401, 654,
	655, 0, 656, 0, 403, 404, 0, 657, 0, 405,
	406, 407, 0, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 658,
	0, 419, 420, 0, 0, 421, 0, 0, 0, 422,
	423, 426, 0, 0, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 0, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 0, 466, 455,
	0, 275, 0, 467, 468, 0, 659, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 0, 480, 0, 662, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 668, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 0,
	562, 563, 545, 546, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 0, 589, 590, 0, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 672, 673, 674, 675, 0, 608, 0, 600,
	601, 602, 676, 603, 677, 0, 604, 605, 606, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 0, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 0, 623, 622, 624, 681, 1303, 625, 270,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 0,
	0, 0, 0, 0, 0, 0, 276, 278, 277, 279,
	280, 281, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 285, 286, 0, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 0, 0, 301, 637, 638, 639, 0, 302, 303,
	640, 0, 0, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 0, 273, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 0, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 649,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 1302,
	652, 653, 470, 0, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	0, 0, 401, 654, 655, 0, 656, 0, 403, 404,
	0, 657, 0, 405, 406, 407, 0, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 658, 0, 419, 420, 0, 0, 421,
	0, 0, 0, 422, 423, 426, 0, 0, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 0, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 0, 466, 455, 0, 275, 0, 467, 468, 0,
	659, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 0,
	480, 0, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 0, 562, 563, 545, 546, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 676, 603, 677, 0,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 0, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 0, 623, 622, 624,
	681, 1300, 625, 270, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 0, 0, 0,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 0, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 0, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 0, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 1299, 652, 653, 470, 0, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 274,
	398, 399, 400, 402, 0, 0, 401, 654, 655, 0,
	656, 0, 403, 404, 0, 657, 0, 405, 406, 407,
	0, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 0, 419,
	420, 0, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 0, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 0, 466, 455, 0, 275,
	0, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 0, 480, 0, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	0, 623, 622, 624, 681, 1295, 625, 270, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 285, 286, 0, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 0, 302, 303, 640, 0,
	0, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	0, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 1294, 652, 653,
	470, 0, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 274, 398, 399, 400, 402, 0, 0,
	401, 654, 655, 0, 656, 0, 403, 404, 0, 657,
	0, 405, 406, 407, 0, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 0, 419, 420, 0, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 0, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 0,
	466, 455, 0, 275, 0, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 0, 480, 0,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 0, 562, 563, 545, 546, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 0, 623, 622, 624, 681, 684,
	625, 270, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 0, 0, 0, 0, 0, 0, 0, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	0, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 273, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 651, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 274, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 404, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 0,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 275, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 0, 623,
	622, 624, 681, 261, 625, 270, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 0, 0, 0, 0, 0,
	0, 0, 276, 278, 277, 279, 280, 281, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 285, 286, 0, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 0, 0, 301,
	637, 638, 639, 0, 302, 303, 640, 0, 0, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	328, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 332, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 0, 273,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 0, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 649, 0, 650, 385, 0,
	386, 387, 388, 389, 390, 651, 652, 653, 470, 0,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 274, 398, 399, 400, 402, 0, 0, 401, 654,
	655, 0, 656, 0, 403, 404, 0, 657, 0, 405,
	406, 407, 0, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 658,
	0, 419, 420, 0, 0, 421, 0, 0, 0, 422,
	423, 426, 0, 0, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 0, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 0, 466, 455,
	0, 275, 0, 467, 468, 0, 659, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 0, 480, 0, 662, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 668, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 0,
	562, 563, 545, 546, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 0, 589, 590, 0, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 672, 673, 674, 675, 0, 608, 0, 600,
	601, 602, 676, 603, 677, 0, 604, 605, 606, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 0, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 270, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 0, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 0, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 0, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 651, 652, 653, 470, 0, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 274, 398,
	399, 400, 402, 0, 0, 401, 654, 655, 0, 656,
	0, 403, 404, 0, 657, 0, 405, 406, 407, 0,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 0, 419, 420,
	0, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	0, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 0, 466, 455, 0, 275, 0,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 0, 480, 0, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 270,
	623, 622, 624, 681, 0, 625, 0, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 276, 278, 277, 279,
	280, 281, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 285, 286, 0, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 0, 0, 301, 637, 638, 639, 0, 302, 303,
	640, 0, 0, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 706, 323, 324,
	325, 0, 326, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 0, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 707, 384, 649,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 0, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 0, 398, 399, 400, 402,
	0, 0, 401, 654, 655, 0, 656, 0, 403, 404,
	0, 657, 0, 405, 406, 407, 0, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 658, 0, 419, 420, 0, 0, 421,
	0, 0, 0, 422, 423, 426, 0, 0, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 0, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 0, 466, 455, 0, 0, 0, 467, 468, 0,
	659, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 0,
	480, 0, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 708, 557, 558, 556,
	559, 560, 561, 0, 562, 563, 545, 546, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 676, 603, 677, 0,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 0, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 270, 623, 622, 624,
	681, 0, 625, 0, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 285, 286, 0, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 0, 0,
	301, 637, 638, 639, 0, 302, 303, 640, 0, 0,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 2357, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 644, 645, 365, 0,
	273, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 0,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 649, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 651, 652, 653, 470,
	0, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 274, 398, 399, 400, 402, 0, 0, 401,
	654, 655, 0, 656, 0, 403, 404, 0, 657, 0,
	405, 406, 407, 0, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	658, 0, 419, 420, 0, 0, 421, 0, 0, 0,
	422, 423, 426, 0, 0, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 0, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 0, 466,
	455, 0, 275, 0, 467, 468, 0, 659, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 0, 480, 0, 662,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 665, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 668, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	0, 562, 563, 545, 546, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 671, 587, 588, 0, 589, 590, 0, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 676, 603, 677, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 0, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 270, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 0, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 0, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 2355,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 0, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 651, 652, 653, 470, 0, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 274,
	398, 399, 400, 402, 0, 0, 401, 654, 655, 0,
	656, 0, 403, 404, 0, 657, 0, 405, 406, 407,
	0, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 0, 419,
	420, 0, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 0, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 0, 466, 455, 0, 275,
	0, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 0, 480, 0, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	270, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 285, 286, 0,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 0, 0, 301, 637, 638, 639, 0, 302,
	303, 640, 0, 0, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 2353, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 0, 273, 0, 0, 0, 0, 0,
	366, 367, 368, 646, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 0, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	649, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	651, 652, 653, 470, 0, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 274, 398, 399, 400,
	402, 0, 0, 401, 654, 655, 0, 656, 0, 403,
	404, 0, 657, 0, 405, 406, 407, 0, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 658, 0, 419, 420, 0, 0,
	421, 0, 0, 0, 422, 423, 426, 0, 0, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 0, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 0, 466, 455, 0, 275, 0, 467, 468,
	0, 659, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	0, 480, 0, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 0, 562, 563, 545, 546, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 672, 673, 674,
	675, 0, 608, 0, 600, 601, 602, 676, 603, 677,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 0, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 270, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 285, 286, 0, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 0, 302, 303, 640, 0,
	0, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	0, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 2269, 652, 653,
	470, 0, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 274, 398, 399, 400, 402, 0, 0,
	401, 654, 655, 0, 656, 0, 403, 404, 0, 657,
	0, 405, 406, 407, 0, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 0, 419, 420, 0, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 0, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 0,
	466, 455, 0, 275, 0, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 0, 480, 0,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 0, 562, 563, 545, 546, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 270, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 0, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 303, 640, 0, 0, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 0, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 2064, 652, 653, 470, 0, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	274, 398, 399, 400, 402, 0, 0, 401, 654, 655,
	0, 656, 0, 403, 404, 0, 657, 0, 405, 406,
	407, 0, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 0,
	419, 420, 0, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 0, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 0, 466, 455, 0,
	275, 0, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 0, 480, 0, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 0, 562,
	563, 545, 546, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 672, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 270, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	0, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 273, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 2058, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 274, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 404, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 0,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 275, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 0, 623,
	622, 624, 681, 891, 625, 270, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 0, 0, 0, 0, 0,
	0, 0, 276, 278, 277, 279, 280, 281, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 285, 286, 0, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 0, 0, 301,
	637, 638, 639, 0, 302, 303, 640, 0, 0, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	328, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 332, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 0, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 649, 0, 650, 385, 0,
	386, 387, 388, 389, 390, 651, 652, 653, 470, 0,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 0, 398, 399, 400, 402, 0, 0, 401, 654,
	655, 0, 656, 890, 403, 404, 0, 657, 0, 405,
	406, 407, 0, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 658,
	0, 419, 420, 0, 0, 421, 0, 0, 0, 422,
	423, 426, 0, 0, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 0, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 0, 466, 455,
	0, 0, 0, 467, 468, 0, 659, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 0, 480, 0, 662, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 668, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 0,
	562, 563, 545, 546, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 0, 589, 590, 0, 586, 577,
	889, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 672, 673, 674, 675, 0, 608, 0, 600,
	601, 602, 676, 603, 677, 0, 604, 605, 606, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 0, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 270, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 0, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 0, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 3088, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 0, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 651, 652, 653, 470, 0, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 0, 398,
	399, 400, 402, 0, 0, 401, 654, 655, 0, 656,
	0, 403, 404, 0, 657, 0, 405, 406, 407, 0,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 0, 419, 420,
	0, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	0, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 0, 466, 455, 0, 0, 0,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 0, 480, 0, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 4240, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 0,
	623, 622, 624, 681, 768, 625, 270, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 0, 0, 0, 0,
	0, 0, 0, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 285, 286, 1350, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 0, 0,
	301, 637, 638, 1348, 0, 302, 303, 640, 0, 0,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 332, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 644, 645, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 0,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 649, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 651, 652, 653, 470,
	0, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 0, 398, 399, 400, 402, 0, 0, 401,
	654, 655, 0, 656, 0, 403, 404, 0, 657, 0,
	405, 406, 407, 0, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	658, 0, 419, 420, 0, 0, 421, 0, 0, 0,
	422, 423, 426, 0, 0, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 774, 0, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 0, 466,
	455, 0, 0, 0, 467, 468, 0, 659, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 0, 480, 0, 662,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 665, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 0, 773, 536, 537, 538, 539, 668, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 772, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 1351, 561,
	0, 562, 563, 545, 546, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 671, 587, 588, 0, 589, 590, 0, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 770, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 676, 603, 677, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 0, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 0, 623, 622, 624, 681, 768, 625,
	270, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	0, 0, 0, 0, 0, 0, 0, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 285, 286, 1350,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 0, 0, 301, 637, 638, 1348, 0, 302,
	303, 640, 0, 0, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 646, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 0, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	649, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	651, 652, 653, 470, 0, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 0, 398, 399, 400,
	402, 0, 0, 401, 654, 655, 0, 656, 0, 403,
	404, 0, 657, 0, 405, 406, 407, 0, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 658, 0, 419, 420, 0, 0,
	421, 0, 0, 0, 422, 423, 426, 0, 0, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 774, 0, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 0, 466, 455, 0, 0, 0, 467, 468,
	0, 659, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	0, 480, 0, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 0, 773, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 772, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 1351, 561, 0, 562, 563, 545, 546, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 770, 673, 674,
	675, 0, 608, 0, 600, 1349, 602, 676, 603, 677,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 0, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 0, 623, 622,
	624, 681, 693, 625, 270, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 0, 0, 0, 0, 0, 0,
	0, 276, 278, 277, 279, 280, 281, 282, 692, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 0, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 303, 640, 0, 0, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 0, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 651, 652, 653, 470, 0, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	0, 398, 399, 400, 402, 0, 0, 401, 654, 655,
	0, 656, 0, 403, 404, 0, 657, 0, 405, 406,
	407, 0, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 0,
	419, 420, 0, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 0, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 0, 466, 455, 0,
	0, 0, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 0, 480, 0, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 691, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 0, 562,
	563, 545, 546, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 672, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 0, 623, 622, 624, 681, 0, 625, 270, 3075,
	0, 0, 626, 627, 682, 628, 629, 630, 0, 0,
	0, 0, 0, 0, 0, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 0, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 0, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 0, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 0, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 0, 398, 399, 400, 402, 0,
	0, 401, 654, 655, 0, 656, 0, 403, 404, 0,
	657, 0, 405, 406, 407, 0, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 0, 419, 420, 0, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 0, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	0, 466, 455, 0, 0, 0, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 0, 480,
	0, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 0, 623, 622, 624, 681,
	0, 625, 270, 4250, 0, 0, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 0, 0, 0, 0, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 0, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 0, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 0, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 651, 652, 653, 470, 0, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 0, 398,
	399, 400, 402, 0, 0, 401, 654, 655, 0, 656,
	0, 403, 404, 0, 657, 0, 405, 406, 407, 0,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 0, 419, 420,
	0, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	0, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 0, 466, 455, 0, 0, 0,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 0, 480, 0, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 270,
	623, 622, 624, 681, 0, 625, 0, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 276, 278, 277, 279,
	280, 281, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 285, 286, 0, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 0, 0, 301, 637, 638, 639, 0, 302, 303,
	640, 0, 0, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 0, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 649,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 0, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 0, 398, 399, 400, 402,
	0, 0, 401, 654, 655, 0, 656, 0, 403, 404,
	0, 657, 0, 405, 406, 407, 0, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 658, 0, 419, 420, 0, 0, 421,
	0, 0, 0, 422, 423, 426, 0, 0, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 0, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 0, 466, 455, 0, 0, 0, 467, 468, 0,
	659, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 0,
	480, 0, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 4531, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 0, 562, 563, 545, 546, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 676, 603, 677, 0,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 0, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 270, 623, 622, 624,
	681, 0, 625, 0, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 285, 286, 0, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 0, 0,
	301, 637, 638, 639, 0, 302, 303, 640, 0, 0,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 332, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 644, 645, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 0,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 649, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 651, 652, 653, 470,
	0, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 0, 398, 399, 400, 402, 0, 0, 401,
	654, 655, 0, 656, 0, 403, 404, 0, 657, 0,
	405, 406, 407, 0, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	658, 0, 419, 420, 0, 0, 421, 0, 0, 0,
	422, 423, 426, 0, 0, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 0, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 0, 466,
	455, 0, 0, 0, 467, 468, 0, 659, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 0, 480, 0, 662,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 665, 500, 666, 501, 502, 4136, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 668, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	0, 562, 563, 545, 546, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 671, 587, 588, 0, 589, 590, 0, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 676, 603, 677, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 0, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 270, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 0, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 0, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 3900, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 0, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 651, 652, 653, 470, 0, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 0,
	398, 399, 400, 402, 0, 0, 401, 654, 655, 0,
	656, 0, 403, 404, 0, 657, 0, 405, 406, 407,
	0, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 0, 419,
	420, 0, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 0, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 0, 466, 455, 0, 0,
	0, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 0, 480, 0, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	270, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 631, 0, 2749, 0, 0, 285, 286, 0,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 0, 0, 301, 637, 638, 639, 0, 302,
	303, 640, 0, 0, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 646, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 0, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	649, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	651, 652, 653, 470, 0, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 0, 398, 399, 400,
	402, 0, 0, 401, 654, 655, 0, 656, 0, 403,
	404, 0, 657, 0, 405, 406, 407, 0, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 658, 0, 419, 420, 0, 0,
	421, 0, 0, 0, 422, 423, 426, 0, 0, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 0, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 0, 466, 455, 0, 0, 0, 467, 468,
	0, 659, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	0, 480, 0, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 0, 562, 563, 545, 546, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 672, 673, 674,
	675, 0, 608, 0, 600, 601, 602, 676, 603, 677,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 0, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 0, 623, 622,
	624, 681, 0, 625, 270, 3075, 0, 0, 626, 627,
	682, 628, 629, 630, 0, 0, 0, 0, 0, 0,
	0, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 0, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 303, 640, 0, 0, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 0, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 651, 652, 653, 470, 0, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	0, 398, 399, 400, 402, 0, 0, 401, 654, 655,
	0, 656, 0, 403, 404, 0, 657, 0, 405, 406,
	407, 0, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 0,
	419, 420, 0, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 0, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 0, 466, 455, 0,
	0, 0, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 3072, 0,
	0, 478, 479, 661, 0, 480, 0, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 0, 562,
	563, 545, 546, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 672, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 270, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	0, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 651, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 0, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 404, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 0,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 0, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 2182, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 773, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 772, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 770, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 270, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 276, 278, 277, 279, 280,
	281, 282, 2327, 283, 284, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 0, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 0, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 0, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 0, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 0, 398, 399, 400, 402, 0,
	0, 401, 654, 655, 0, 656, 0, 403, 404, 0,
	657, 0, 405, 406, 407, 0, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 0, 419, 420, 0, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 0, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	0, 466, 455, 0, 0, 0, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 0, 480,
	0, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 0, 623, 622, 624, 681,
	2315, 625, 270, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 0, 0, 0, 0, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 0, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 0, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 0, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 651, 652, 653, 470, 0, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 0, 398,
	399, 400, 402, 0, 0, 401, 654, 655, 0, 656,
	0, 403, 404, 0, 657, 0, 405, 406, 407, 0,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 0, 419, 420,
	0, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	0, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 0, 466, 455, 0, 0, 0,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 0, 480, 0, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 0,
	623, 622, 624, 681, 2078, 625, 270, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 0, 0, 0, 0,
	0, 0, 0, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 285, 286, 0, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 0, 0,
	301, 637, 638, 639, 0, 302, 303, 640, 0, 0,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 332, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 644, 645, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 0,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 649, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 651, 652, 653, 470,
	0, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 0, 398, 399, 400, 402, 0, 0, 401,
	654, 655, 0, 656, 0, 403, 404, 0, 657, 0,
	405, 406, 407, 0, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	658, 0, 419, 420, 0, 0, 421, 0, 0, 0,
	422, 423, 426, 0, 0, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 0, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 0, 466,
	455, 0, 0, 0, 467, 468, 0, 659, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 0, 480, 0, 662,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 665, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 668, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	0, 562, 563, 545, 546, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 671, 587, 588, 0, 589, 590, 0, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 676, 603, 677, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 0, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 0, 623, 622, 624, 681, 2045, 625,
	270, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	0, 0, 0, 0, 0, 0, 0, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 285, 286, 0,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 0, 0, 301, 637, 638, 639, 0, 302,
	303, 640, 0, 0, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 646, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 0, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	649, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	651, 652, 653, 470, 0, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 0, 398, 399, 400,
	402, 0, 0, 401, 654, 655, 0, 656, 0, 403,
	404, 0, 657, 0, 405, 406, 407, 0, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 658, 0, 419, 420, 0, 0,
	421, 0, 0, 0, 422, 423, 426, 0, 0, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 0, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 0, 466, 455, 0, 0, 0, 467, 468,
	0, 659, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	0, 480, 0, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 0, 562, 563, 545, 546, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 672, 673, 674,
	675, 0, 608, 0, 600, 601, 602, 676, 603, 677,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 0, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 0, 623, 622,
	624, 681, 768, 625, 270, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 0, 0, 0, 0, 0, 0,
	0, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 0, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 761, 640, 0, 0, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 0, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 651, 652, 653, 470, 0, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	0, 398, 399, 400, 402, 0, 0, 401, 654, 655,
	0, 656, 0, 403, 404, 0, 657, 0, 405, 406,
	407, 0, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 0,
	419, 420, 0, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 774, 0, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 0, 466, 455, 0,
	0, 0, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 0, 480, 0, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	0, 773, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 772, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 1614, 561, 0, 562,
	563, 545, 546, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 770, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 0, 623, 622, 624, 681, 1587, 625, 270, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 0, 0,
	0, 0, 0, 0, 0, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 0, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 0, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 0, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 1586, 652,
	653, 470, 0, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 0, 398, 399, 400, 402, 0,
	0, 401, 654, 655, 0, 656, 0, 403, 404, 0,
	657, 0, 405, 406, 407, 0, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 0, 419, 420, 0, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 0, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	0, 466, 455, 0, 0, 0, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 0, 480,
	0, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 0, 623, 622, 624, 681,
	1571, 625, 270, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 0, 0, 0, 0, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 0, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 0, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 0, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 1569, 652, 653, 470, 0, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 0, 398,
	399, 400, 402, 0, 0, 401, 654, 655, 0, 656,
	0, 403, 404, 0, 657, 0, 405, 406, 407, 0,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 0, 419, 420,
	0, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	0, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 0, 466, 455, 0, 0, 0,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 0, 480, 0, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 0,
	623, 622, 624, 681, 1564, 625, 270, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 0, 0, 0, 0,
	0, 0, 0, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 285, 286, 0, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 0, 0,
	301, 637, 638, 639, 0, 302, 303, 640, 0, 0,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 332, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 644, 645, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 0,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 649, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 651, 652, 653, 470,
	0, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 0, 398, 399, 400, 402, 0, 0, 401,
	654, 655, 0, 656, 0, 403, 404, 0, 657, 0,
	405, 406, 407, 0, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	658, 0, 419, 420, 0, 0, 421, 0, 0, 0,
	422, 423, 426, 0, 0, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 0, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 0, 466,
	455, 0, 0, 0, 467, 468, 0, 659, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 0, 480, 0, 662,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 665, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 668, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	0, 562, 563, 545, 546, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 671, 587, 588, 0, 589, 590, 0, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 676, 603, 677, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 0, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 0, 623, 622, 624, 681, 1541, 625,
	270, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	0, 0, 0, 0, 0, 0, 0, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 285, 286, 0,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 0, 0, 301, 637, 638, 639, 0, 302,
	303, 640, 0, 0, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 646, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 0, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	649, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	1539, 652, 653, 470, 0, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 0, 398, 399, 400,
	402, 0, 0, 401, 654, 655, 0, 656, 0, 403,
	404, 0, 657, 0, 405, 406, 407, 0, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 658, 0, 419, 420, 0, 0,
	421, 0, 0, 0, 422, 423, 426, 0, 0, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 0, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 0, 466, 455, 0, 0, 0, 467, 468,
	0, 659, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	0, 480, 0, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 0, 562, 563, 545, 546, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 672, 673, 674,
	675, 0, 608, 0, 600, 601, 602, 676, 603, 677,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 0, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 0, 623, 622,
	624, 681, 1499, 625, 270, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 0, 0, 0, 0, 0, 0,
	0, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 0, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 303, 640, 0, 0, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 0, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 651, 652, 653, 470, 0, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	0, 398, 399, 400, 402, 0, 0, 401, 654, 655,
	0, 656, 0, 403, 404, 0, 657, 0, 405, 406,
	407, 0, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 0,
	419, 420, 0, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 0, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 0, 466, 455, 0,
	0, 0, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 0, 480, 0, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 0, 562,
	563, 545, 546, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 672, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 0, 623, 622, 624, 681, 1482, 625, 270, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 0, 0,
	0, 0, 0, 0, 0, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 0, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 0, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 0, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 0, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 0, 398, 399, 400, 402, 0,
	0, 401, 654, 655, 0, 656, 0, 403, 404, 0,
	657, 0, 405, 406, 407, 0, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 0, 419, 420, 0, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 0, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	0, 466, 455, 0, 0, 0, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 0, 480,
	0, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 0, 623, 622, 624, 681,
	1318, 625, 270, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 0, 0, 0, 0, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 0, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 0, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 0, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 1317, 652, 653, 470, 0, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 0, 398,
	399, 400, 402, 0, 0, 401, 654, 655, 0, 656,
	0, 403, 404, 0, 657, 0, 405, 406, 407, 0,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 0, 419, 420,
	0, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	0, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 0, 466, 455, 0, 0, 0,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 0, 480, 0, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 0,
	623, 622, 624, 681, 1309, 625, 270, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 0, 0, 0, 0,
	0, 0, 0, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 285, 286, 0, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 0, 0,
	301, 637, 638, 639, 0, 302, 303, 640, 0, 0,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 332, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 644, 645, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 0,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 649, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 1308, 652, 653, 470,
	0, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 0, 398, 399, 400, 402, 0, 0, 401,
	654, 655, 0, 656, 0, 403, 404, 0, 657, 0,
	405, 406, 407, 0, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	658, 0, 419, 420, 0, 0, 421, 0, 0, 0,
	422, 423, 426, 0, 0, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 0, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 0, 466,
	455, 0, 0, 0, 467, 468, 0, 659, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 0, 480, 0, 662,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 665, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 668, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	0, 562, 563, 545, 546, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 671, 587, 588, 0, 589, 590, 0, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 676, 603, 677, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 0, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 270, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	276, 278, 277, 279, 280, 281, 282, 1262, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 0, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 0, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 0, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 651, 652, 653, 470, 0, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 0,
	398, 399, 400, 402, 0, 0, 401, 654, 655, 0,
	656, 0, 403, 404, 0, 657, 0, 405, 406, 407,
	0, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 0, 419,
	420, 0, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 0, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 0, 466, 455, 0, 0,
	0, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 0, 480, 0, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	270, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 276, 278, 277,
	279, 280, 281, 282, 779, 283, 284, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 285, 286, 0,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 0, 0, 301, 637, 638, 639, 0, 302,
	303, 640, 0, 0, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 646, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 0, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	649, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	651, 652, 653, 470, 0, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 0, 398, 399, 400,
	402, 0, 0, 401, 654, 655, 0, 656, 0, 403,
	404, 0, 657, 0, 405, 406, 407, 0, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 658, 0, 419, 420, 0, 0,
	421, 0, 0, 0, 422, 423, 426, 0, 0, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 0, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 0, 466, 455, 0, 0, 0, 467, 468,
	0, 659, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	0, 480, 0, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 0, 562, 563, 545, 546, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 672, 673, 674,
	675, 0, 608, 0, 600, 601, 602, 676, 603, 677,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 0, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 0, 623, 622,
	624, 681, 768, 625, 270, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 0, 0, 0, 0, 0, 0,
	0, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 0, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 761, 640, 0, 0, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 759, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 0, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 651, 652, 653, 470, 0, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	0, 398, 399, 400, 402, 0, 0, 401, 654, 655,
	0, 656, 0, 403, 404, 0, 657, 0, 405, 406,
	407, 0, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 0,
	419, 420, 0, 0, 421, 0, 0, 0, 422, 760,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 774, 0, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 0, 466, 455, 0,
	0, 0, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 0, 480, 0, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	0, 773, 536, 537, 538, 539, 762, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 772, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 763, 561, 0, 562,
	563, 545, 546, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 770, 673, 674, 675, 0, 608, 0, 600, 765,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 0, 623, 622, 624, 681, 753, 625, 270, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 0, 0,
	0, 0, 0, 0, 0, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 0, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 0, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 0, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 0, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 0, 398, 399, 400, 402, 0,
	0, 401, 654, 655, 0, 656, 0, 403, 404, 0,
	657, 0, 405, 406, 407, 0, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 0, 419, 420, 0, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 0, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	0, 466, 455, 0, 0, 0, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 0, 480,
	0, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 754, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 0, 623, 622, 624, 681,
	716, 625, 270, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 0, 0, 0, 0, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 0, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 0, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 0, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 651, 652, 653, 470, 0, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 0, 398,
	399, 400, 402, 0, 0, 401, 654, 655, 0, 656,
	0, 403, 404, 0, 657, 0, 405, 406, 407, 0,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 0, 419, 420,
	0, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	0, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 0, 466, 455, 0, 0, 0,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 0, 480, 0, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 0,
	623, 622, 624, 681, 710, 625, 270, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 0, 0, 0, 0,
	0, 0, 0, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 285, 286, 0, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 0, 0,
	301, 637, 638, 639, 0, 302, 303, 640, 0, 0,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 332, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 644, 645, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 0,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 649, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 651, 652, 653, 470,
	0, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 0, 398, 399, 400, 402, 0, 0, 401,
	654, 655, 0, 656, 0, 403, 404, 0, 657, 0,
	405, 406, 407, 0, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	658, 0, 419, 420, 0, 0, 421, 0, 0, 0,
	422, 423, 426, 0, 0, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 0, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 0, 466,
	455, 0, 0, 0, 467, 468, 0, 659, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 0, 480, 0, 662,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 665, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 668, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	0, 562, 563, 545, 546, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 671, 587, 588, 0, 589, 590, 0, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 676, 603, 677, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 0, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 0, 623, 622, 624, 681, 688, 625,
	270, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	0, 0, 0, 0, 0, 0, 0, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 285, 286, 0,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 0, 0, 301, 637, 638, 639, 0, 302,
	303, 640, 0, 0, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 646, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 0, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	649, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	651, 652, 653, 470, 0, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 0, 398, 399, 400,
	402, 0, 0, 401, 654, 655, 0, 656, 0, 403,
	404, 0, 657, 0, 405, 406, 407, 0, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 658, 0, 419, 420, 0, 0,
	421, 0, 0, 0, 422, 423, 426, 0, 0, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 0, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 0, 466, 455, 0, 0, 0, 467, 468,
	0, 659, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	0, 480, 0, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 0, 562, 563, 545, 546, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 672, 673, 674,
	675, 0, 608, 0, 600, 601, 602, 676, 603, 677,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 0, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 270, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 285, 286, 0, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 0, 302, 303, 640, 0,
	0, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	0, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 651, 652, 653,
	470, 0, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 0, 398, 399, 400, 402, 0, 0,
	401, 654, 655, 0, 656, 0, 403, 404, 0, 657,
	0, 405, 406, 407, 0, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 0, 419, 420, 0, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 0, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 0,
	466, 455, 0, 0, 0, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 0, 480, 0,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 0, 562, 563, 545, 546, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 270, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 0, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 303, 640, 0, 0, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 0, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 3598, 652, 653, 470, 0, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	0, 398, 399, 400, 402, 0, 0, 401, 654, 655,
	0, 656, 0, 403, 404, 0, 657, 0, 405, 406,
	407, 0, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 0,
	419, 420, 0, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 0, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 0, 466, 455, 0,
	0, 0, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 0, 480, 0, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 0, 562,
	563, 545, 546, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 672, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 270, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	0, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 651, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 0, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 404, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 0,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 0, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 773, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 772, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 770, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 270, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 0, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 0, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 0, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 3526, 652,
	653, 470, 0, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 0, 398, 399, 400, 402, 0,
	0, 401, 654, 655, 0, 656, 0, 403, 404, 0,
	657, 0, 405, 406, 407, 0, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 0, 419, 420, 0, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 0, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	0, 466, 455, 0, 0, 0, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 0, 480,
	0, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 270, 623, 622, 624, 681,
	0, 625, 0, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 276, 278, 277, 279, 280, 281, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 285, 286, 0, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 0, 0, 301,
	637, 638, 639, 0, 302, 303, 640, 0, 0, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	328, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 332, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 0, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 649, 0, 650, 385, 0,
	386, 387, 388, 389, 390, 3504, 652, 653, 470, 0,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 0, 398, 399, 400, 402, 0, 0, 401, 654,
	655, 0, 656, 0, 403, 404, 0, 657, 0, 405,
	406, 407, 0, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 658,
	0, 419, 420, 0, 0, 421, 0, 0, 0, 422,
	423, 426, 0, 0, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 0, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 0, 466, 455,
	0, 0, 0, 467, 468, 0, 659, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 0, 480, 0, 662, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 668, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 0,
	562, 563, 545, 546, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 0, 589, 590, 0, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 672, 673, 674, 675, 0, 608, 0, 600,
	601, 602, 676, 603, 677, 0, 604, 605, 606, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 0, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 270, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 0, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 0, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 0, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 3501, 652, 653, 470, 0, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 0, 398,
	399, 400, 402, 0, 0, 401, 654, 655, 0, 656,
	0, 403, 404, 0, 657, 0, 405, 406, 407, 0,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 0, 419, 420,
	0, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	0, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 0, 466, 455, 0, 0, 0,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 0, 480, 0, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 270,
	623, 622, 624, 681, 0, 625, 0, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 276, 278, 277, 279,
	280, 281, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 285, 286, 0, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 0, 0, 301, 637, 638, 639, 0, 302, 303,
	640, 0, 0, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 0, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 649,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 3453,
	652, 653, 470, 0, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 0, 398, 399, 400, 402,
	0, 0, 401, 654, 655, 0, 656, 0, 403, 404,
	0, 657, 0, 405, 406, 407, 0, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 658, 0, 419, 420, 0, 0, 421,
	0, 0, 0, 422, 423, 426, 0, 0, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 0, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 0, 466, 455, 0, 0, 0, 467, 468, 0,
	659, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 0,
	480, 0, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 0, 562, 563, 545, 546, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 676, 603, 677, 0,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 0, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 270, 623, 622, 624,
	681, 0, 625, 0, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 285, 286, 0, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 0, 0,
	301, 637, 638, 639, 0, 302, 303, 640, 0, 0,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 332, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 644, 645, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 0,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 649, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 3451, 652, 653, 470,
	0, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 0, 398, 399, 400, 402, 0, 0, 401,
	654, 655, 0, 656, 0, 403, 404, 0, 657, 0,
	405, 406, 407, 0, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	658, 0, 419, 420, 0, 0, 421, 0, 0, 0,
	422, 423, 426, 0, 0, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 0, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 0, 466,
	455, 0, 0, 0, 467, 468, 0, 659, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 0, 480, 0, 662,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 665, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 668, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	0, 562, 563, 545, 546, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 671, 587, 588, 0, 589, 590, 0, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 676, 603, 677, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 0, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 270, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 0, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 0, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 0, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 3436, 652, 653, 470, 0, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 0,
	398, 399, 400, 402, 0, 0, 401, 654, 655, 0,
	656, 0, 403, 404, 0, 657, 0, 405, 406, 407,
	0, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 0, 419,
	420, 0, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 0, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 0, 466, 455, 0, 0,
	0, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 0, 480, 0, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	270, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 285, 286, 0,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 0, 0, 301, 637, 638, 639, 0, 302,
	303, 640, 0, 0, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 646, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 0, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	649, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	3043, 652, 653, 470, 0, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 0, 398, 399, 400,
	402, 0, 0, 401, 654, 655, 0, 656, 0, 403,
	404, 0, 657, 0, 405, 406, 407, 0, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 658, 0, 419, 420, 0, 0,
	421, 0, 0, 0, 422, 423, 426, 0, 0, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 0, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 0, 466, 455, 0, 0, 0, 467, 468,
	0, 659, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	0, 480, 0, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 0, 562, 563, 545, 546, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 672, 673, 674,
	675, 0, 608, 0, 600, 601, 602, 676, 603, 677,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 0, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 270, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 285, 286, 0, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 0, 302, 303, 640, 0,
	0, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	0, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 651, 652, 653,
	470, 0, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 0, 398, 399, 400, 402, 0, 0,
	401, 654, 655, 0, 656, 0, 403, 404, 0, 657,
	0, 405, 406, 407, 0, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 0, 419, 420, 0, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 0, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 0,
	466, 455, 0, 0, 0, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 0, 480, 0,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 754, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 0, 562, 563, 545, 546, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 270, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 2287, 0,
	0, 285, 286, 0, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 303, 640, 0, 0, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 0, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 651, 652, 653, 470, 0, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	0, 398, 399, 400, 402, 0, 0, 401, 654, 655,
	0, 656, 0, 403, 404, 0, 657, 0, 405, 406,
	407, 0, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 0,
	419, 420, 0, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 0, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 0, 466, 455, 0,
	0, 0, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 0, 480, 0, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 0, 0,
	563, 545, 546, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 672, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 270, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	0, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 1280, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 0, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 404, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 0,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 0, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 270, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 0, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 0, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 0, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 0, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 0, 398, 399, 400, 402, 0,
	0, 401, 654, 655, 0, 656, 0, 403, 404, 0,
	657, 0, 405, 406, 407, 0, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 0, 419, 420, 0, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 0, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	0, 466, 455, 0, 0, 0, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 0, 480,
	0, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 1212, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 270, 623, 622, 624, 681,
	0, 625, 0, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 276, 278, 277, 279, 280, 281, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 285, 286, 0, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 0, 0, 301,
	637, 638, 639, 0, 302, 303, 640, 0, 0, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	328, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 332, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 0, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 649, 0, 650, 0, 0,
	386, 387, 388, 389, 390, 651, 652, 653, 470, 0,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 0, 398, 399, 400, 402, 0, 0, 401, 654,
	655, 0, 656, 0, 403, 404, 0, 657, 0, 405,
	406, 407, 0, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 658,
	0, 419, 420, 0, 0, 421, 0, 0, 0, 422,
	423, 426, 0, 0, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 0, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 0, 466, 455,
	0, 0, 0, 467, 468, 0, 659, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 0, 480, 0, 662, 481,
	482, 474, 483, 484, 0, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 0, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 668, 0, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 0,
	562, 563, 545, 546, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 0, 589, 590, 0, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 672, 673, 674, 675, 0, 608, 0, 600,
	601, 602, 676, 603, 677, 0, 604, 605, 606, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 0, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 0, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 1783,
	1784, 0, 1816, 1817, 1818, 1827, 1828, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 1814, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 1783, 1784, 1785, 1816, 1817, 1818, 1827, 1828,
	1829, 0, 0, 0, 1805, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 1820, 1814, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1805, 0, 0,
	0, 0, 0, 0, 0, 0, 1802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1808, 1809,
	1810, 1811, 0, 0, 0, 0, 0, 0, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 1784, 0, 1816, 1817, 1818, 1827, 1828, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 1814, 0, 1824, 0, 0, 1834,
	0, 1786, 0, 0, 0, 0, 1813, 1815, 0, 0,
	1833, 1808, 1809, 1810, 1811, 0, 0, 0, 0, 0,
	0, 1791, 0, 1830, 0, 1831, 0, 1839, 0, 0,
	0, 0, 1800, 1801, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1805, 0, 0, 0,
	1822, 0, 0, 0, 0, 1802, 0, 0, 0, 1824,
	0, 0, 1834, 0, 0, 1806, 0, 0, 0, 1813,
	1815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 1831, 0,
	0, 0, 0, 0, 0, 1800, 1801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1821, 1806, 0,
	1808, 1809, 1810, 1811, 0, 0, 0, 0, 1836, 0,
	1791, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 1824, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 1813, 1815,
	1821, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 1830, 0, 1831, 0, 0,
	0, 0, 0, 0, 1800, 1801, 1807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 0, 0, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1825, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 1798, 1804, 1826,
	1803, 1799, 0, 1796, 1794, 1795, 1787, 1788, 1789, 1790,
	1792, 1793, 0, 0, 0, 1812, 4554, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	1798, 1804, 1826, 1803, 1799, 1825, 1796, 1794, 1795, 1787,
	1788, 1789, 1790, 1792, 1793, 0, 0, 1783, 1784, 4515,
	1816, 1817, 1818, 1827, 1828, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 1820,
	1814, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1805, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 0, 0, 0, 0, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 1798,
	1804, 1826, 1803, 1799, 0, 1796, 1794, 1795, 1787, 1788,
	1789, 1790, 1792, 1793, 0, 0, 1783, 1784, 4514, 1816,
	1817, 1818, 1827, 1828, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 1814,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 1808, 1809, 1810, 1811,
	0, 0, 0, 0, 0, 0, 1791, 0, 0, 0,
	0, 0, 1839, 0, 0, 0, 0, 0, 0, 1783,
	1784, 1785, 1816, 1817, 1818, 1827, 1828, 1829, 0, 0,
	0, 1805, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 1820, 1814, 0, 1824, 0, 0, 1834, 0, 1786,
	0, 0, 0, 0, 1813, 1815, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 0, 1831, 0, 1839, 0, 0, 0, 0,
	1800, 1801, 0, 0, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1805, 0, 0, 0, 1822, 0,
	0, 0, 0, 1802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 1808, 1809, 1810, 1811, 0,
	0, 0, 0, 0, 0, 1791, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 1824, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 1813, 1815, 1821, 0, 0, 1808, 1809,
	1810, 1811, 0, 0, 0, 0, 1836, 0, 1791, 0,
	1830, 0, 1831, 0, 0, 0, 0, 0, 0, 1800,
	1801, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 0, 0, 1834,
	0, 0, 1806, 0, 0, 0, 1813, 1815, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 1831, 0, 0, 0, 0,
	0, 0, 1800, 1801, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 1821, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1821, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 1798, 1804, 1826, 1803, 1799,
	1825, 1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793,
	0, 0, 0, 1812, 4325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 1807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1783, 1784, 0, 1816, 1817, 1818,
	1827, 1828, 1829, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 1814, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 1838, 0, 0, 0, 0, 0,
	0, 0, 0, 1823, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 1797, 1798, 1804, 1826, 1803, 1799, 1785,
	1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793, 1805,
	0, 0, 0, 4159, 0, 0, 0, 0, 1802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 1798, 1804, 1826,
	1803, 1799, 0, 1796, 1794, 1795, 1787, 1788, 1789, 1790,
	1792, 1793, 0, 0, 0, 0, 4089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1808, 1809, 1810, 1811, 0, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 1784, 0, 1816, 1817,
	1818, 1827, 1828, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 1814, 0,
	0, 1824, 0, 0, 1834, 1786, 0, 0, 0, 0,
	0, 1813, 1815, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	1831, 1839, 0, 0, 0, 0, 0, 1800, 1801, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1805, 0, 0, 0, 0, 1822, 0, 0, 0, 1802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 1783, 1784, 0, 1816, 1817, 1818, 1827,
	1828, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1820, 1814, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 1821, 0, 1808, 1809, 1810, 1811, 1785, 0,
	0, 0, 0, 1836, 1791, 0, 0, 0, 1805, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 1813, 1815, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 1831, 0, 0, 0, 0, 0, 0, 1800, 1801,
	0, 1807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1808, 1809, 1810, 1811, 1822, 0, 0, 0,
	0, 0, 1791, 0, 0, 0, 0, 0, 1825, 0,
	0, 1806, 0, 0, 1783, 1784, 0, 1816, 1817, 1818,
	1827, 1828, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 1814, 0, 1838,
	1824, 0, 0, 1834, 1786, 0, 0, 0, 0, 0,
	1813, 1815, 0, 1833, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 1831,
	1839, 0, 0, 1821, 0, 0, 1800, 1801, 0, 1785,
	0, 0, 0, 0, 1836, 0, 0, 0, 0, 1805,
	0, 0, 0, 0, 1822, 0, 0, 0, 1802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 1798, 1804, 1826, 1803, 1799, 0, 1796, 1794,
	1795, 1787, 1788, 1789, 1790, 1792, 1793, 0, 0, 1812,
	0, 4088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 1821, 0, 1808, 1809, 1810, 1811, 0, 0, 0,
	0, 0, 1836, 1791, 0, 0, 0, 0, 0, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 1824, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 1813, 1815, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	1831, 0, 0, 0, 0, 0, 0, 1800, 1801, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 0, 0,
	1806, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 1798, 1804, 1826, 1803, 1799, 0, 1796,
	1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793, 1838, 0,
	0, 0, 4087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 1798, 1804, 1826, 1803, 1799, 0, 1796, 1794, 1795,
	1787, 1788, 1789, 1790, 1792, 1793, 0, 0, 1812, 0,
	3745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 0, 0, 1783, 1784, 0, 1816, 1817, 1818,
	1827, 1828, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 1814, 1825, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1805,
	0, 0, 0, 0, 0, 0, 0, 0, 1802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 1798, 1804, 1826, 1803, 1799, 0, 1796, 1794,
	1795, 1787, 1788, 1789, 1790, 1792, 1793, 0, 0, 0,
	0, 3250, 0, 1808, 1809, 1810, 1811, 0, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 1784, 0, 1816, 1817,
	1818, 1827, 1828, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 1814, 0,
	0, 1824, 0, 0, 1834, 1786, 0, 0, 0, 0,
	0, 1813, 1815, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	1831, 1839, 0, 0, 0, 0, 0, 1800, 1801, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1805, 0, 0, 0, 0, 1822, 0, 0, 0, 1802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 1783, 1784, 0, 1816, 1817, 1818, 1827,
	1828, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1820, 1814, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 1821, 0, 1808, 1809, 1810, 1811, 1785, 0,
	0, 0, 0, 1836, 1791, 0, 0, 0, 1805, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 1813, 1815, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 1831, 0, 0, 0, 0, 0, 0, 1800, 1801,
	0, 1807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1808, 1809, 1810, 1811, 1822, 0, 0, 0,
	0, 0, 1791, 0, 0, 0, 0, 0, 1825, 0,
	0, 1806, 0, 0, 1783, 1784, 0, 1816, 1817, 1818,
	1827, 1828, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 1814, 0, 1838,
	1824, 0, 0, 1834, 1786, 0, 0, 0, 0, 0,
	1813, 1815, 0, 1833, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 1831,
	1839, 0, 0, 1821, 0, 0, 1800, 1801, 0, 1785,
	0, 0, 0, 0, 1836, 0, 0, 0, 0, 1805,
	0, 0, 0, 0, 1822, 0, 0, 0, 1802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 1798, 1804, 1826, 1803, 1799, 0, 1796, 1794,
	1795, 1787, 1788, 1789, 1790, 1792, 1793, 0, 0, 1812,
	0, 3249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 1821, 0, 1808, 1809, 1810, 1811, 0, 0, 0,
	0, 0, 1836, 1791, 0, 0, 0, 0, 0, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 1824, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 1813, 1815, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	1831, 0, 0, 0, 0, 0, 0, 1800, 1801, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 0, 0,
	1806, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 1798, 1804, 1826, 1803, 1799, 0, 1796,
	1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793, 1838, 0,
	0, 0, 3248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 1798, 1804, 1826, 1803, 1799, 0, 1796, 1794, 1795,
	1787, 1788, 1789, 1790, 1792, 1793, 0, 0, 1812, 0,
	3247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 1783, 1784, 0, 1816, 1817, 1818, 1827, 1828,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 1814, 0, 0, 1825, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 1838,
	0, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1805, 0, 0,
	0, 0, 0, 0, 0, 0, 1802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 1798, 1804, 1826, 1803, 1799, 0, 1796, 1794,
	1795, 1787, 1788, 1789, 1790, 1792, 1793, 0, 0, 3212,
	0, 1808, 1809, 1810, 1811, 0, 0, 0, 0, 0,
	0, 1791, 4788, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1783, 1784, 0, 1816, 1817, 1818, 1827,
	1828, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1820, 1814, 0, 0, 1824,
	0, 0, 1834, 1786, 0, 0, 0, 0, 0, 1813,
	1815, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 1831, 1839,
	0, 0, 0, 0, 0, 1800, 1801, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1805, 0,
	0, 0, 0, 1822, 0, 0, 0, 1802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 0,
	0, 1783, 1784, 0, 1816, 1817, 1818, 1827, 1828, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 1814, 0, 0, 0, 0, 3183,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	1821, 0, 1808, 1809, 1810, 1811, 1785, 0, 0, 0,
	0, 1836, 1791, 0, 3312, 0, 1805, 0, 3311, 0,
	0, 0, 0, 0, 0, 1802, 0, 0, 0, 0,
	0, 0, 0, 4787, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	1813, 1815, 0, 0, 3184, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 1831,
	0, 0, 0, 0, 0, 0, 1800, 1801, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1808, 1809, 1810, 1811, 1822, 0, 0, 0, 0, 0,
	1791, 0, 0, 0, 0, 2722, 1825, 0, 0, 1806,
	0, 0, 1783, 1784, 0, 1816, 1817, 1818, 1827, 1828,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 1814, 0, 1838, 1824, 2721,
	0, 1834, 1786, 0, 0, 0, 0, 0, 1813, 1815,
	0, 1833, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 1831, 1839, 0,
	0, 1821, 0, 0, 1800, 1801, 0, 1785, 0, 0,
	0, 0, 1836, 0, 0, 0, 0, 1805, 0, 0,
	0, 0, 1822, 0, 0, 0, 1802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	1798, 1804, 1826, 1803, 1799, 0, 1796, 1794, 1795, 1787,
	1788, 1789, 1790, 1792, 1793, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	0, 1808, 1809, 1810, 1811, 0, 0, 0, 0, 0,
	1836, 1791, 0, 0, 0, 0, 0, 1825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 1824,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 1813,
	1815, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 1831, 0,
	0, 0, 0, 0, 0, 1800, 1801, 0, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1825, 0, 0, 1806, 0,
	1823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 1798, 1804, 1826, 1803, 1799, 0, 1796, 1794, 1795,
	1787, 1788, 1789, 1790, 1792, 1793, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 1798,
	1804, 1826, 1803, 1799, 0, 1796, 1794, 1795, 1787, 1788,
	1789, 1790, 1792, 1793, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1783, 1784, 1807,
	1816, 1817, 1818, 1827, 1828, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	1814, 0, 0, 0, 0, 0, 1825, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 0, 0, 0, 1838, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1805, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	1798, 1804, 1826, 1803, 1799, 0, 1796, 1794, 1795, 1787,
	1788, 1789, 1790, 1792, 1793, 0, 1808, 1809, 1810, 1811,
	0, 0, 0, 0, 0, 0, 1791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 1784,
	0, 1816, 1817, 1818, 1827, 1828, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1820, 1814, 0, 0, 1824, 0, 0, 1834, 1786, 0,
	0, 0, 0, 0, 1813, 1815, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 0, 1831, 1839, 0, 0, 0, 0, 0,
	1800, 1801, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1805, 0, 0, 0, 0, 1822, 0,
	0, 0, 1802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 1784, 0, 1816,
	1817, 1818, 1827, 1828, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 1814,
	0, 0, 0, 0, 0, 0, 1786, 1832, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1821, 1066, 1808, 1809, 1810,
	1811, 0, 1839, 0, 0, 0, 1836, 1791, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1805, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 1813, 1815, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 0, 1831, 0, 0, 0, 0, 0,
	0, 1800, 1801, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 0, 0, 0, 0, 1808, 1809, 1810, 1811, 0,
	0, 1825, 0, 0, 1806, 1791, 0, 0, 0, 0,
	0, 3318, 0, 0, 0, 0, 0, 1783, 1784, 0,
	1816, 1817, 1818, 1827, 1828, 1829, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 1820,
	1814, 0, 0, 1824, 3313, 0, 1834, 1786, 1832, 0,
	0, 0, 0, 1813, 1815, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1821, 0, 0, 0,
	1830, 0, 1831, 1839, 0, 0, 0, 1836, 0, 1800,
	1801, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1805, 0, 0, 0, 0, 1822, 0, 0,
	0, 1802, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 1797, 1798, 1804, 1826, 1803, 1799,
	0, 1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1821, 0, 1808, 1809, 1810, 1811,
	0, 0, 1825, 0, 0, 1836, 1791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 0, 3726, 1834, 0, 0,
	0, 0, 0, 0, 1813, 1815, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 0, 1831, 0, 0, 0, 0, 0, 0,
	1800, 1801, 0, 1807, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1822, 0,
	0, 0, 0, 0, 0, 1823, 0, 0, 0, 0,
	1825, 0, 0, 1806, 0, 1797, 1798, 1804, 1826, 1803,
	1799, 0, 1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 1798, 1804, 1826, 1803, 1799, 0,
	1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 1784, 1807, 1816, 1817, 1818, 1827, 1828,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 1814, 0, 0, 0, 0,
	0, 1825, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 0, 1838, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1805, 0, 0,
	0, 0, 0, 0, 0, 0, 1802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 1798, 1804, 1826, 1803, 1799,
	0, 1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793,
	0, 1808, 1809, 1810, 1811, 0, 0, 0, 0, 0,
	0, 1791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1783, 1784, 0, 1816, 1817, 1818, 1827,
	1828, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1820, 1814, 0, 0, 1824,
	3251, 0, 1834, 1786, 0, 0, 0, 0, 0, 1813,
	1815, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 1831, 1839,
	0, 0, 0, 0, 0, 1800, 1801, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1805, 0,
	0, 0, 0, 1822, 0, 0, 0, 1802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 0,
	0, 1783, 1784, 0, 1816, 1817, 1818, 1827, 1828, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 1814, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	1821, 0, 1808, 1809, 1810, 1811, 1785, 0, 0, 0,
	0, 1836, 1791, 0, 0, 0, 1805, 0, 0, 0,
	0, 3278, 0, 0, 0, 1802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	1813, 1815, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 1831,
	0, 0, 0, 0, 0, 0, 1800, 1801, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1808, 1809, 1810, 1811, 1822, 0, 0, 0, 0, 0,
	1791, 0, 0, 0, 0, 0, 1825, 0, 0, 1806,
	0, 0, 1783, 1784, 0, 1816, 1817, 1818, 1827, 1828,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 1814, 0, 1838, 1824, 0,
	0, 1834, 1786, 0, 0, 0, 0, 0, 1813, 1815,
	0, 1833, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 1831, 1839, 0,
	0, 1821, 0, 0, 1800, 1801, 0, 1785, 0, 0,
	0, 0, 1836, 0, 0, 0, 0, 1805, 0, 0,
	0, 0, 1822, 0, 0, 0, 1802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	1798, 1804, 1826, 1803, 1799, 0, 1796, 1794, 1795, 1787,
	1788, 1789, 1790, 1792, 1793, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	0, 1808, 1809, 1810, 1811, 0, 0, 0, 0, 0,
	1836, 1791, 0, 0, 0, 0, 0, 1825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 1824,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 1813,
	1815, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 1831, 0,
	0, 0, 0, 0, 0, 1800, 1801, 0, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1825, 0, 0, 1806, 0,
	1823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 1798, 1804, 1826, 1803, 1799, 0, 1796, 1794, 1795,
	1787, 1788, 1789, 1790, 1792, 1793, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2302, 0, 0, 0, 0, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 1798,
	1804, 1826, 1803, 1799, 0, 1796, 1794, 1795, 1787, 1788,
	1789, 1790, 1792, 1793, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1783, 1784, 1807,
	1816, 1817, 1818, 1827, 1828, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	1814, 0, 0, 0, 0, 0, 1825, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 0, 0, 0, 1838, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1805, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	1798, 1804, 1826, 1803, 1799, 0, 1796, 1794, 1795, 1787,
	1788, 1789, 1790, 1792, 1793, 0, 1808, 1809, 1810, 1811,
	0, 0, 0, 0, 0, 0, 1791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 1784,
	0, 1816, 1817, 1818, 1827, 1828, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 0, 1824, 0, 0, 1834, 1786, 0,
	0, 0, 0, 0, 1813, 1815, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 0, 1831, 1839, 0, 0, 0, 0, 0,
	1800, 1801, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1805, 0, 0, 0, 0, 1822, 0,
	0, 0, 1802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 1783, 1784, 0, 1816,
	1817, 1818, 1827, 1828, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 0, 0, 0, 1808, 1809, 1810,
	1811, 1785, 0, 0, 0, 0, 1836, 1791, 0, 0,
	0, 1805, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 1813, 1815, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 0, 1831, 0, 0, 0, 0, 0,
	0, 1800, 1801, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1808, 1809, 1810, 1811, 1822,
	0, 0, 0, 0, 0, 1791, 0, 0, 0, 0,
	0, 1825, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 1824, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 1813, 1815, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	1801, 0, 0, 0, 0, 0, 0, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 1798, 1804, 1826, 1803, 1799,
	0, 1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 1825, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1825, 0, 0, 0, 0, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 1798, 1804, 1826, 1803,
	1799, 0, 1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792,
	1793, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 1798, 1804, 1826, 1803, 1799, 0,
	1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793,
}

var sqlPact = [...]int{
	8532, -1000, -1000, -1000, -1000, 177, -1000, -1000, 176, 172,
	171, 170, 169, 165, 163, 160, 159, 158, 156, -1000,
	-1000, -1000, -1000, -1000, -1000, 155, -1000, -1000, 153, -1000,
	152, 151, 150, -1000, -1000, 148, -1000, 147, -1000, -1000,
	-1000, -1000, 142, 136, 133, 93521, 92967, 94068, 2269, 116116,
	100660, 1907, 83037, 115562, 82483, 115008, 2139, 9842, 114454, 2688,
	130, -1000, 113900, 128, 127, 126, -1000, 113346, -1000, 1787,
	-1000, 125, -1000, 7569, 69677, 124, 123, 122, 2301, 121,
	-1000, 120, 119, -1000, -1000, 118, -1000, 13053, 1491, -1000,
	116, 108, -1000, 6196, 98451, 107, 104, 2115, 103, 102,
	68027, 101, 100, 2101, 2814, -1000, -1000, 2001, -1000, -1000,
	99, 97, 94, 93, 92, 91, 90, 87, 86, 85,
	84, 83, -1000, 81, 79, 77, 75, 74, -1000, 73,
	72, 71, -1000, 61, -1000, 60, 59, 58, 52, 51,
	46, 45, 43, 42, 41, 38, 35, 34, 33, 18404,
	-1000, -1000, 32, 1759, 1651, 1649, 1648, 1645, 1639, 966,
	31, 30, 27, 25, 24, 23, 20, 19, 18, 15,
	14, 13, 12, 11, 10, 9, 7, 6, 140, 4,
	3, 2, 1, 0, -1, -2, 2137, -1000, 1517, 978,
	32296, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 123774,
	116663, -7, -70, -8, -1000, 3275, 938, 56301, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 228, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 476, 2266, 719, -1000, -1000,
	-1000, 112799, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2268, -53, -1000, 2024, -1000, -1000, -1000, -1000, -1000, 718,
	-1000, 2264, 299, 2219, -1000, -1000, -1000, 3327, 2395, 3721,
	3720, 3718, 3716, 3715, 123227, 1660, 3713, 2490, 3712, 3705,
	3704, 3700, 3694, 3693, 3684, -1000, 92413, 1025, 91859, 91305,
	3349, 112252, 90751, 111698, 76400, 48344, 972, 3326, -1000, -1000,
	-1000, -1000, -1000, -1000, 116663, -1000, 1024, -1000, -1000, 3680,
	3677, 2045, 717, 100106, -1000, 1744, -1000, -1000, -1000, -1000,
	916, 1176, 34003, 34003, 34003, 226, -1000, -1000, -1000, -1000,
	-1000, -1000, 3673, 3671, 3669, 3661, 3659, -1000, -1000, 81929,
	25280, 81375, 80821, 111144, 24714, 90197, 89643, 3657, 3656, 3654,
	110590, 75834, 3440, 3439, 1022, 2017, 1395, -1000, -1000, -1000,
	-1000, -1000, -1000, -35, 71887, 3465, 116663, -1000, 225, -1000,
	-1000, -1000, -1000, -1000, -1000, 47775, 764, 47206, 747, 46637,
	638, -1000, -1000, -1000, -1000, 75268, -1000, 110036, 2390, 3651,
	3649, 1104, 3648, 3233, 1643, 3646, 1834, 1185, 3645, 3641,
	3640, 3638, 3632, 3631, 3630, 1340, 109482, 2924, 1433, 108928,
	1654, 74702, 1021, 89089, 94068, 2598, 108374, 1256, 1245, -1000,
	-1000, -1000, -1000, 3047, 2799, 2798, 1311, -1000, -1000, -1000,
	-1000, 59668, 8418, 6026, -1000, -1000, 14037, 107820, 62488, 94068,
	94068, -1000, -1000, -1000, -1000, -1000, 46068, 741, 45499, 932,
	-1000, -1000, 60232, 2872, -1000, -1000, -1000, -1000, 44930, 668,
	44361, 906, 116663, -1000, 2923, 1763, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2241, 1589, 3499, 2677, 74136, 2008, 1404,
	3292, 3046, 3037, 1509, 2009, 3026, 3629, 2572, 3016, 3011,
	3004, 2998, 2997, 1239, 2542, 332, 2538, 31727, 2913, 1681,
	43792, 1471, 1490, 2991, 2976, 3506, 2002, 1953, 1927, 80267,
	3622, 3621, 3261, 2954, 2948, 2744, 2946, -1000, 2868, 1284,
	-1000, -1000, -1000, -1000, -1000, 1459, -1000, -1000, -1000, -1000,
	-1000, 84678, -1000, -1000, 1319, -1000, -1000, 1319, -1000, -1000,
	-1000, -1000, -1000, 1217, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1517, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2272, -1000, 1989,
	-1000, -1000, 2487, 3217, 3217, 3217, 3324, 447, 445, -1000,
	140, -1000, -1000, 130171, -1000, -1000, 48913, 48913, 48913, 48913,
	48913, 48913, 48913, 48913, 2143, -1000, 712, -1000, -1000, 761,
	-1000, 708, 627, 575, -1000, -1000, -1000, -1000, -1000, -1000,
	700, -1000, -1000, -1000, -1000, -1000, -1000, 3465, -1000, 28180,
	-1000, -1000, -1000, 435, 699, 48913, -1000, -1000, 3519, 3517,
	922, -1000, 223, 939, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2922, 697, 696, -1000,
	693, 670, 665, 662, 661, -1000, 660, -1000, 659, 658,
	657, 656, 655, 653, 652, 651, -1000, 2033, -1000, -1000,
	-1000, -1000, -1000, -1000, 613, 610, 610, 610, -1000, 1013,
	-1000, -1000, -1000, 342, 607, 294, 606, 605, 604, -1000,
	650, 647, 646, 645, 644, 642, 634, 633, 631, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1012, -1000, -1000, -1000,
	-1000, -38, 116663, -1000, 476, -38, -1000, -1000, 629, -1000,
	36308, 36308, 36308, -1000, -1000, 2263, 48913, -1000, 2528, -1000,
	-30, -30, 873, 57972, -1000, 55167, 873, 290, 762, 63596,
	-1000, 2867, -1000, -1000, 628, 222, -1000, -1000, -1000, -1000,
	25844, 2860, 116663, 116663, 116663, 94068, 94068, 94068, 3619, 3083,
	48913, -1000, -1000, 69121, 116663, 94615, -1000, -1000, 3422, 70229,
	68574, 116663, 2919, 107266, 3617, -1000, -1000, -1000, -1000, -1000,
	3082, 3616, 3613, 3612, -1000, 116663, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 241, 3078, -1000, -1000, 97897, 241, 3076,
	-1000, 241, 3074, -1000, 97350, -1000, -1000, 2229, 3064, -1000,
	-1000, 245, 3063, -1000, -1000, -1000, 243, 3062, -1000, -1000,
	218, -64, 3060, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 130171, -1000, -1000, -1000, 106712,
	-1000, 3266, -1000, -1000, 116663, -1000, 48913, -1000, 3419, 1734,
	77518, 3372, -47, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2468, 2431, 1128, 2292, -1000, 3146, 1355, 34003, 3220, -1000,
	-1000, -1000, -1000, -1000, 217, 25844, -1000, -1000, -1000, -1000,
	-1000, -1000, 4828, 3054, 1398, -1000, 2290, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1954, 3034, -1000, 1823, 3032,
	1932, -1000, -1000, 2782, -1000, 3256, -1000, -1000, 2138, 3025,
	-28, -1000, -1000, 2031, -1000, -1000, -1000, -1000, 1960, -1000,
	1274, 3022, -1000, 2676, 2676, 88535, 3067, 61924, 60232, 71887,
	-43, -1000, -1000, -1000, -1000, -155, -1000, 24144, 130171, -1000,
	-1000, -1000, -1000, 1680, 130171, 902, -1000, -1000, 3021, -1000,
	130171, 900, -1000, -1000, 3020, -1000, 2918, -1000, -1000, 2352,
	-1000, -1000, 3611, -1000, -1000, 3609, -1000, 3608, 3607, 3602,
	-1000, 1560, 2012, 3601, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 87988, 2262, -1000, -1000, 86880, 2917, -1000, 2350,
	3367, -1000, 87434, 1019, -1000, 982, 2348, -1000, 96803, 1006,
	2346, -1000, 3599, 3342, 2629, 982, 2344, -1000, -1000, -1000,
	-1000, -1000, 984, -1000, 65813, -1000, 65813, -1000, 1524, -1000,
	122680, -30, 94068, 3465, -1000, -67, -1000, -1000, -1000, 938,
	-1000, 59099, -1000, 59099, 99552, 76964, 962, 757, 67473, 129990,
	-1000, 994, -1000, -1000, 130171, -1000, -1000, -1000, -186, 2672,
	-1000, 76964, 61360, 130171, -1000, -1000, -1000, -1000, 130171, -1000,
	-1000, -1000, 76964, 86880, -1000, 106158, 86333, -1000, -1000, 1278,
	2511, -1000, -1000, -1000, 76964, 1275, 76964, 76964, 76964, -1000,
	105604, -1000, -1000, 2041, 1233, 3251, 2020, 94068, -1000, 1826,
	-1000, -1000, -1000, 3280, 3061, 116663, -1000, -1000, 2916, -1000,
	71340, 96256, -1000, 95709, -1000, 95162, -1000, 94068, -1000, 94068,
	-1000, 3598, 3597, 3596, -1000, -1000, 3594, -1000, 3593, 3272,
	-1000, 840, 43223, 130171, 3269, -1000, 3592, 3359, 2913, 130171,
	-1000, 3058, 1667, 1661, 116663, -1000, -1000, 116663, -1000, 116663,
	-1000, -1000, -1000, 1458, -1000, -1000, 2467, -1000, -1000, -1000,
	-1000, 94068, 94068, 94068, 94068, 1331, -1000, 42654, -1000, -1000,
	2945, 3590, 1545, -1000, 1808, -1000, 2858, 3250, -1000, 1268,
	1703, -1000, -1000, 246, -1000, -1000, -47, -1000, 122133, -1000,
	2487, -1000, 116663, -1000, 2450, 2893, 2911, 1671, 2280, 2556,
	-1000, 42085, 2508, 52327, 2289, 140, -1000, -1000, 140, 140,
	33434, -1000, -1000, 70229, 70229, 25844, 1229, 48913, 48913, 48913,
	48913, 48913, 48913, 48913, 48913, 48913, 48913, 48913, 48913, 48913,
	48913, 48913, 48913, 48913, 48913, 48913, 48913, 48913, 48913, 48913,
	48913, 48913, 48913, 48913, 48913, 48913, 48913, 48913, 48913, 48913,
	48913, 48913, 48913, 2271, 48913, 1214, 48913, 48913, 48913, 48913,
	1883, -1000, -1000, 1841, 514, 1997, 627, -1000, -1000, -1000,
	3468, 3468, 3468, 425, 425, 425, 130777, 130777, 612, 3585,
	761, -1000, 48913, -1000, 47, 58526, 48913, 26410, -1000, 445,
	12010, 2464, -1000, 444, 27008, -1000, -1000, -1000, 28180, 575,
	41487, 48913, 999, 130171, -1000, -1000, 1393, 3481, 23574, 2932,
	2735, 623, 811, 810, 31129, 30531, 29933, 29335, 809, 808,
	48913, 48913, 48913, 48913, 48913, 48913, 48913, 48913, -1000, -1000,
	3498, -1000, 3481, -1000, -1000, -1000, -1000, 3481, 1228, 1223,
	3481, -1000, 3481, 3481, 8547, 8547, 40918, 40349, 39780, 52896,
	39211, 48913, 28766, 38642, 38073, -1000, 116663, -38, 3418, 48913,
	270, -1000, 128391, -1000, 270, 270, 622, -73, 130171, 2559,
	2559, 56858, 2407, 2156, 2156, 2156, -1000, 873, 18985, 873,
	103956, 2179, 873, 873, 208, 236, 431, 54603, 2528, 103956,
	731, 617, -11, -13, -14, -1000, -1000, -15, -16, -1000,
	-1000, 94068, 616, 26410, 25844, 206, 1911, -76, 2565, 2564,
	-1000, 2563, 2549, -1000, 2548, -1000, 1768, -78, 1212, 94068,
	116663, 1255, 3582, -81, -1000, 4927, -83, -1000, 1294, 205,
	3481, -1000, -1000, -1000, -1000, -1000, 3581, 3580, -1000, 1011,
	615, 614, 382, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 613, 610, 610, 610, -1000, 342, 607, 294, 606,
	605, 604, -1000, -1000, -1000, -1000, -1000, 2856, 94068, 116663,
	1251, 3579, -155, 94615, -86, -1000, -1000, 116663, -1000, -1000,
	-1000, 3578, -1000, 94068, -1000, -1000, 94068, 241, 3019, -1000,
	94068, -1000, 94068, 233, 3018, -1000, -1000, 116663, -1000, 94068,
	94068, -1000, 116663, 116663, 116663, 76964, 76964, 231, -1000, 94068,
	852, -85, 1117, -47, -1000, -1000, -1000, -1000, -1000, 1319,
	-1000, 1644, -1000, -1000, -1000, -1000, -1000, -1000, 1361, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 922, -1000, -1000,
	-1000, -1000, -1000, -1000, 3487, 3475, -40, -1000, -1000, 25844,
	-1000, -48, 1587, 1798, 1210, -1000, 79713, 2368, 3255, 3576,
	2613, 3242, 1521, -1000, 1452, -1000, 3341, 84678, 3384, 3393,
	1295, -1000, 2852, -1000, -1000, 908, 1543, 1677, 1208, 1207,
	84678, 1823, -1000, 70229, -1000, 2591, 3321, 1381, 1364, 1381,
	1381, 1378, -1000, 84678, 1676, 1205, 1204, 1203, -1000, -1000,
	1912, 1904, -1000, -1000, 105057, -1000, 1202, 1201, 3438, 2272,
	2151, 793, 1898, -1000, -50, 3373, 3392, 1292, -1000, 2851,
	1199, -1000, -1000, -1000, 3319, 94068, 25844, 1548, 1547, 1542,
	1670, 1198, -41, -1000, 3375, 1195, 1194, -1000, 1020, 5374,
	3197, -1000, 76964, 1020, 1020, 1922, 3017, 2650, 1650, -1000,
	2669, 871, 2666, -1000, -1000, -1000, 871, -43, 71887, 116663,
	200, -1000, 47, 48913, 48913, 47, 48913, 47, 3358, 3014,
	-1000, -1000, -1000, -1000, -1000, 3571, 1943, 2488, -1000, -1000,
	603, 2342, 2836, 116663, 2576, -44, 94068, -1000, 70793, 3013,
	72442, 1823, 2341, -1000, -1000, 85779, -1000, 3010, 476, 2339,
	-1000, 568, 3570, 3008, -1000, 121586, -1000, 3266, 1238, 3007,
	1061, 635, 3417, -1000, 635, 66365, -1000, 116663, -1000, -30,
	5074, 78619, -92, -98, 430, -1000, 104510, 116663, 1057, 79166,
	116663, 3209, 1998, 1984, 979, 60232, -1000, 60232, -103, -186,
	2656, 1425, 962, 962, 871, -1000, 871, -1000, 94068, 2910,
	-1000, -1000, 76964, 962, 962, 962, -1000, -1000, -1000, -1000,
	3568, 3567, 3566, 3565, -1000, -1000, 980, 94068, 116663, 94068,
	-1000, -1000, 1564, -1000, 197, -1000, 116663, -1000, 116663, 116663,
	94068, -1000, 980, 116663, 980, 116663, 980, 116663, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 47, -1000, -1000, 130171, -1000,
	48913, -1000, -1000, 3563, 1596, -1000, 2901, -1000, 2900, -1000,
	22, -1000, -1000, 1844, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3562, 130171, -1000, 1965, -1000, -1000, -1000, -1000, 94068,
	94068, 94068, 94068, 116663, 3186, -1000, 116663, 3184, 94068, -1000,
	-1000, 84678, -1000, 2450, 2893, -1000, -1000, -1000, -1000, -1000,
	-1000, 1522, 2235, -1000, 2521, -1000, 1482, -1000, -1000, -1000,
	130171, 53465, -1000, -1000, 130171, 1783, -1000, 51758, 51189, -1000,
	-1000, 1623, 94068, 2583, -1000, 2583, -131, -1000, 128210, 2519,
	94068, -1000, -1000, -1000, -1000, -1000, 907, 803, 803, 1257,
	1257, 1257, 1257, 3351, 8066, 7754, 6700, 7472, 7472, 5096,
	5096, 5096, 5096, 5096, 7472, 6743, 425, 425, 6743, 6743,
	6743, 6743, 6743, 425, 425, 425, 7472, 7472, 7472, 425,
	130777, 130596, 13225, 48913, 48913, 1193, 1838, 514, 12456, 48913,
	477, 477, 477, 477, -1000, 2064, -1000, -1000, -1000, -1000,
	2833, 598, 52896, 52896, -1000, -1000, -1000, -1000, 27594, 48913,
	-1000, -1000, -1000, -1000, 37475, -1000, -1000, 127503, -319, 427,
	-1000, 195, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 426, -112, 65, -1000, 48913,
	48913, 48913, 421, -1000, 194, 48913, 116663, -1000, 17811, 730,
	-141, -1000, -105, 1418, -1000, 48913, -1000, -1000, 1192, -1000,
	1189, 1186, 1180, -1000, 593, 413, -1000, 189, -1000, 2152,
	592, 584, 48913, -1000, -1000, -1000, -1000, -1000, 127322, -1000,
	-1000, 127224, -1000, -1000, 127043, -1000, -1000, 126613, -1000, -1000,
	-1000, -1000, -1000, 129892, 17630, 16903, 16284, 10913, 15234, 14219,
	-106, 411, -111, 407, 903, 895, 406, 405, 387, -116,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -119, 379, -1000, 2831, -112, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 377, -1000, 374, -1000, 129711,
	-112, 372, 6856, -1000, 52896, 52896, 52896, 52896, -1000, 369,
	-1000, 128112, -1000, 129286, 36906, 36906, 36906, 366, 129105, 48913,
	-112, -121, -1000, -126, -1000, -1000, 520, -128, 968, 36308,
	55744, 25844, -1000, 968, 968, 48913, -1000, 48913, 2534, -1000,
	-1000, -1000, -1000, 2530, 1973, 2559, 56858, -1000, -1000, -1000,
	-1000, 103956, -1000, 3465, 2662, -1000, 103956, -1000, -1000, 116663,
	476, -1000, 103956, 103956, 25844, 873, -1000, 873, 103956, 589,
	-1000, -1000, -1000, -1000, -1000, 362, 64153, 65, 188, 25844,
	982, -1000, -1000, 2630, 2630, 2630, 2630, 2630, -1000, -1000,
	116663, 1179, -45, -94, 2655, -1000, 3405, -1000, 2051, -1000,
	70229, -1000, 760, 1066, 25844, -1000, -1000, -1000, 583, -1000,
	3481, 3481, -1000, 3481, 116663, 2829, 268, 2652, -1000, 259,
	72442, 3561, -1000, -1000, 241, -1000, 94068, 241, 241, -1000,
	94068, 94068, 2229, -1000, 245, -1000, 243, -1000, -1000, -64,
	-1000, 993, 34003, -1000, 1319, -1000, -1000, 1534, -1000, 1988,
	-1000, 1222, -1000, -1000, -1000, -1000, 34003, -1000, 2194, 116663,
	116663, 94068, -1000, 116663, -1000, 2180, 72442, -1000, 2337, 121039,
	2330, 70229, 116663, -1000, -1000, 582, 924, 2518, 2517, 1055,
	116663, 116663, 2515, 120492, 119945, -1000, 3558, 116663, 2019, 48913,
	3318, 2155, 2345, 47, 47, -1000, 47, 47, 47, -1000,
	581, 1388, 94068, 94068, 116663, 72442, 94068, 1873, -1000, -1000,
	-1000, -1000, -1000, 85225, -1000, -1000, 3491, 3490, -1000, 1381,
	-1000, -1000, -1000, 1381, 1823, 1871, 116663, 72442, 94068, 72442,
	119398, 118851, -1000, -1000, 1666, 116663, -1000, -1000, -1000, -1000,
	1427, -1000, 793, 2078, 47, 47, -1000, 47, 47, 47,
	580, 25844, 1963, -1000, 2902, 116663, 3516, 118304, 3515, 116663,
	116663, 116663, 72442, 3238, 116663, 116663, 72442, -1000, 117757, 5374,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 73570, 1067, 116663, 1274, -1000, -1000, 1664, 1177, 1170,
	84678, 2047, 1658, 1807, 116663, 60232, 977, 60232, 2635, -1000,
	-1000, 23004, -1000, 130171, 130171, -1000, 130171, -1000, 70793, 116663,
	-1000, 1016, 116663, 79166, 923, 3006, 65261, -155, 962, 76964,
	94068, -44, 2576, 116663, -1000, -1000, -1000, -1000, -1000, 1823,
	3003, 476, 2336, -1000, 76964, 3416, 3000, 578, 3556, 3555,
	-1000, 94068, 2261, 2335, -1000, -1000, 117210, 3100, 793, 116663,
	968, 56858, 1951, -1000, 63042, 1038, 116663, 1687, 227, -1000,
	-1000, -1000, -3, 116663, -1000, 752, -1000, -1000, 5074, 5074,
	962, -188, 577, -1000, 855, 854, 60796, 76964, -129, -1000,
	-1000, -1000, -1000, 2330, 94068, 116663, 1291, 2625, 116663, -134,
	-1000, 187, 576, 850, 848, -1000, 2274, -1000, -186, -1000,
	979, 60232, 2825, 2822, -1000, -1000, 992, -1000, 1265, 962,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -31, 1797, 116663, -155, -155, -59, -45, -1000, 980,
	-1000, 980, -1000, 980, -1000, 130171, -1000, -1000, 1578, 1528,
	116663, -1000, -1000, 116663, -1000, 25844, 116663, 94068, 25844, 94068,
	2892, 2889, -1000, -1000, -1000, 116663, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1074, -1000, 1783, 2228, -1000, 575, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2433, -1000,
	-46, 33434, 878, -1000, -1000, 94068, -32, 48913, 48913, 11200,
	9870, 48913, 52896, 52896, -1000, 48913, 7612, -1000, -1000, -1000,
	-1000, -1000, 2821, 574, 48913, 70229, 6675, 6311, -1000, 361,
	12850, 6743, -1000, 48913, -1000, 695, -1000, 359, 35739, -1000,
	128816, -12, -135, -1000, 19568, -112, -145, -1000, -1000, 751,
	-1000, 3093, -1000, 48913, 128997, 2386, 1986, 1764, 1595, 3481,
	3514, 22434, -1000, 66919, 986, 2183, 126432, -1000, -1000, -1000,
	-1000, 70229, 70229, 48913, 48913, -1000, 48913, 48913, 48913, -1000,
	-1000, -1000, 3481, 881, -1000, -1000, -1000, 881, -1000, -1000,
	1381, -1000, 1381, -1000, 48913, -1000, -1000, 2819, 48913, -1000,
	70229, 70229, 52896, 52896, 52896, 52896, 52896, 52896, 52896, 52896,
	52896, 52896, 52896, 52896, 52896, 52896, 52896, 52896, 52896, 52896,
	52896, 52896, 2501, 52896, 3460, 3460, 3460, 564, -1000, 2880,
	2819, 48913, 48913, 70229, 358, 357, 355, -1000, 48913, -112,
	-1000, -1000, 636, 572, -1000, 2403, -1000, 2732, -1000, 48913,
	-1000, -164, -1000, 2528, -1000, -1000, 2732, 2732, -150, 130171,
	56858, 56858, -1000, 569, 48913, 2529, -1000, -1000, 728, -315,
	-1000, 845, -1000, -1000, -1000, -1000, -1000, -1000, 476, -1000,
	-1000, -1000, 185, 103956, 103956, 725, -1000, -152, -1000, -1000,
	-158, -1000, 3415, 353, 25844, -1000, 968, 2649, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -155, 116663, 116663, 1653, 2217,
	3512, -1000, 3489, 748, 724, 183, 3481, 349, 346, 344,
	-155, 116663, 116663, 1641, 116663, -1000, -1000, -1000, 241, -1000,
	-1000, -1000, 233, -1000, -1000, -1000, -1000, 2615, -1000, -47,
	-1000, -1000, -1000, 48913, -1000, -1000, 3254, 1169, 1167, -1000,
	-1000, -1000, 2815, -1000, 2995, -1000, 2325, -1000, 1042, -1000,
	1839, -1000, 48913, 566, 2623, 565, 563, 3554, 1924, 3552,
	1056, 2994, 2229, 2992, 2229, -1000, -1000, -1000, 904, -1000,
	130171, 2155, -1000, 562, 561, -1000, -48, 1567, 1795, 1162,
	991, -1000, -1000, -1000, -1000, 48913, 48913, 103409, -1000, 470,
	3256, -33, -1000, -1000, -1000, 1634, 1158, 1157, -1000, -1000,
	-1000, -1000, 1823, 1625, 1156, 1155, -1000, -1000, -1000, -1000,
	-1000, 2324, -1000, -1000, 2990, 990, -1000, 2957, 2953, 891,
	116663, -1000, 989, -1000, -1000, -1000, -1000, 48913, -1000, -50,
	1153, 3371, 2320, 94068, -1000, 2229, 2989, 1149, -1000, 1139,
	-1000, -1000, -1000, 3374, 3360, 1159, -1000, -1000, -1000, -1000,
	-1000, 73006, -1000, -1000, 1020, 116663, 72442, 94068, 1668, -1000,
	-1000, 83584, 84131, 116663, 2650, -155, 871, -1000, 2466, 871,
	977, 2811, -1000, 2570, 985, 94068, 3551, 343, -159, -52,
	70229, 3414, -1000, 2276, 596, 94068, 884, -1000, 3465, -1000,
	-1000, -1000, 983, -1000, 3366, 94068, 3413, 2986, 982, 47,
	94068, 3480, -1000, -1000, 3412, 94068, 2985, 2260, 2317, 2470,
	793, 78072, 982, 2181, -63, -1000, 1687, 35141, 3246, -167,
	-1000, -1000, -1000, 968, 66365, 56858, 48913, 3550, -168, -1000,
	-1000, -1000, -1000, -1000, 101214, 101214, 76964, 76964, 76964, 962,
	116663, 116663, 79166, -1000, -1000, 553, 116663, 116663, 552, -1000,
	116663, 116663, 3549, 76964, 76964, 76964, -54, 551, -1000, 842,
	835, 834, -1000, -1000, -1000, -1000, -1000, -1000, 979, -1000,
	-186, 60232, 47, -1000, 2208, 94068, -1000, 21864, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 980, -155, -1000, -1000, 2100,
	2283, 2100, 1790, 1779, -1000, -1000, 2222, -1000, -1000, -1000,
	-1000, 2573, 3225, 25844, 3356, 477, 48913, 48913, 5718, 5703,
	5615, 477, 48913, 48913, 70229, 130875, -170, 48913, 48913, -1000,
	48913, 723, 130171, -1000, 3511, 48913, 339, 338, -1000, -1000,
	-1000, 3473, -1000, -1000, -1000, 130171, 48913, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 337, -1000, 181, -1000, -1000, -1000,
	124321, -1000, 48913, 330, 3314, -1000, 327, 315, 10456, 6787,
	126334, 126153, 125708, 312, -1000, -1000, 309, 308, 130171, 2880,
	130171, -1000, -1000, 789, 789, 1354, 1354, 1354, 1354, 3460,
	329, 828, 554, 448, 448, 448, 516, 564, 564, 448,
	448, 448, 564, 2809, 2486, 542, 7040, -1000, -1000, 130171,
	130171, 302, -1000, -1000, -1000, -112, 298, 636, -1000, 2726,
	3313, 130171, -1000, 56858, 2726, 2726, -1000, -1000, 1973, 116663,
	130171, 56858, -1000, 2662, -1000, 20149, -1000, 25844, -1000, -1000,
	-1000, -1000, 3465, -1000, 64153, -1000, 541, -1000, 141, -1000,
	2649, -1000, 832, -1000, -1000, 76964, 76964, -155, -169, 116663,
	-1000, -1000, 722, 3548, 742, 25844, 297, -1000, -1000, -1000,
	-155, -155, 116663, -155, -1000, -1000, -1000, 3207, 130171, 116663,
	116663, 1441, 102862, 116663, 2984, -1000, 2585, -1000, 1055, 125645,
	57415, -1000, 57415, 116663, -1000, -1000, -1000, -1000, 2060, 1516,
	3547, 1094, -1000, 3282, 116663, -1000, 116663, -1000, -1000, -1000,
	116663, 116663, 94068, 116663, -1000, 72442, 2964, -190, 130171, -55,
	-1000, 831, -1000, 1290, -1000, 21294, 116663, 72442, 94068, 116663,
	72442, 94068, 2980, 116663, 2130, -1000, -1000, 2944, -1000, 2960,
	-192, 25844, -1000, 3510, 3509, 2975, 3288, -1000, 116663, 3507,
	116663, 94068, 3206, -1000, -1000, -1000, -1000, -1000, -1000, 1622,
	1137, 1134, 2257, -57, 2256, 2215, -59, 2047, 977, -60,
	539, -1000, 823, -1000, -1000, 822, -1000, 977, -1000, 76964,
	60232, 3546, 476, -1000, 2606, -1000, 98998, 2252, 47, -1000,
	3544, 101768, 535, -1000, 2207, -1000, 555, -1000, 2473, 72442,
	1823, 47, 94068, -1000, -1000, 476, 296, -61, -1000, 3053,
	1050, 25844, 94068, 2973, 2477, 793, 78072, -1000, 1238, 2556,
	-1000, -62, -1000, 640, 47, 2181, -1000, -63, 130171, -1000,
	820, -1000, -193, -1000, -1000, 287, -1000, 3204, 3203, -1000,
	2715, 57415, 534, 533, 116663, 3202, -1000, -1000, -198, -1000,
	-1000, 2555, 2555, 76964, 60232, 76964, -1000, 979, 871, -1000,
	2359, -1000, -1000, -1000, -1000, -1000, 25844, 1540, -1000, 532,
	531, -1000, -1000, -1000, -1000, 3225, 477, 477, 48913, 48913,
	48913, 477, 130875, -199, -1000, 477, 477, -112, -1000, -1000,
	128816, -1000, -1000, -1000, 130171, -1000, 20724, 2108, -1000, 125526,
	-1000, 33434, -1000, -1000, 48913, 48913, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 52896, 2795, 530, 70229, -1000, -1000,
	286, 996, 48913, 50620, 2528, 996, 996, -1000, -200, -1000,
	-1000, -1000, 3465, 141, -1000, -1000, 3543, 25844, -1000, 76964,
	-1000, -1000, 3542, -185, 733, -1000, 3541, -1000, -1000, 115,
	-1000, -1000, -1000, 2647, 3411, -1000, 1890, -1000, 116663, -1000,
	116663, -1000, 25844, 116663, 2745, 1226, -1000, 924, 2513, 528,
	52896, 1073, 94068, 620, 2713, 2704, -1000, 3435, 3312, 2706,
	-205, -1000, 116663, 48913, 116663, -208, -211, 2303, -1000, -1000,
	1072, 1224, 48913, 1071, -1000, -1000, -1000, 70229, 527, 2229,
	2229, -214, -216, -1000, -1000, -1000, 48913, 1131, 116663, 34572,
	-1000, 3539, 3256, -1000, -1000, -1000, -1000, -1000, -1000, 116663,
	-1000, 116663, -1000, 48913, 1125, -1000, -1000, -1000, 3505, 2229,
	25844, 2229, -1000, 2229, 3288, 1093, 116663, 72442, 94068, 1546,
	1546, 2802, -1000, -1000, -1000, 2338, 2338, 76964, 60232, -1000,
	-64, 977, -1000, 3410, 2597, 3538, -1000, -1000, -1000, -1000,
	2506, -1000, -1000, 116663, 2491, 967, -1000, -219, -1000, 819,
	817, 79166, 923, 944, -1000, -65, 526, -1000, 812, -1000,
	-1000, -1000, -1000, 476, 3407, -1000, 3504, 525, 523, 116663,
	2248, 515, 25844, 3244, 793, 78072, -1000, 3100, 1687, -1000,
	2310, 116663, 3241, -1000, 2556, 514, -1000, 962, 502, 501,
	2586, 2586, -221, 57415, 57415, -222, 500, 962, -1000, -224,
	-1000, -1000, -1000, -1000, -1000, -66, -1000, 860, 853, -1000,
	-1000, 94068, 94068, 48913, 48913, -1000, 477, 477, 477, -1000,
	279, -1000, -1000, 2181, 3311, -1000, -69, 125060, 124941, 1949,
	52896, 70229, -227, -1000, -1000, 116663, 130171, -79, -1000, 130171,
	499, 497, 423, -1000, -1000, -1000, 517, -1000, -1000, -1000,
	116663, 3536, -1000, 116663, 102315, 116663, -1000, -1000, 1628, -1000,
	-1000, -1000, 116663, 2313, -1000, -1000, -1000, 1054, 48913, 7040,
	52896, 496, 48913, -1000, -1000, -1000, 3403, 3024, -1000, 2590,
	2775, 1886, 57415, -1000, 3225, -1000, 124878, -1000, 1045, 1919,
	-1000, -1000, -1000, -1000, 130171, 52896, 3288, 57415, -1000, -1000,
	495, 494, 130171, 493, 805, 2794, -1000, -1000, -1000, -1000,
	-1000, 130171, 491, 3371, -1000, -1000, -1000, -1000, 2229, 94068,
	-1000, -1000, -1000, 1124, -1000, -1000, -1000, -1000, 3535, 3534,
	2781, 83584, -1000, -229, -1000, -1000, 1926, 47, 2094, 2643,
	-1000, 2252, 488, -1000, -1000, 2225, 2612, -1000, 101768, 34003,
	34003, 260, 3402, 944, -1000, 3466, -1000, 3130, 3130, 48913,
	3400, 47, -1000, 3480, 57415, -1000, 94068, 57415, 2240, 2028,
	2456, 78072, -1000, 2470, -1000, -1000, -230, 116663, 1687, -1000,
	-1000, 76964, 76964, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1045, -232, -235, -1000, 76964, -1000,
	-1000, 2359, -1000, 116663, -1000, 116663, -1000, -1000, -237, -238,
	-1000, 2128, 48913, 33434, -1000, -1000, 1949, -240, -1000, -95,
	-1000, 3397, 50620, 3530, 3529, 3528, -1000, -155, -1000, -155,
	-1000, 1866, -1000, -1000, -1000, 2972, 2724, 9006, 7040, 2426,
	116663, 408, -1000, 3388, 2770, -1000, -1000, 2597, 479, -1000,
	-1000, -1000, -1000, 878, 116663, 2597, 2723, 94068, 7040, 1052,
	-243, 2100, 2100, 48913, 32865, 2119, 48913, -1000, -1000, 3288,
	116663, -1000, -1000, 116663, 2238, -1000, 2759, 3477, -1000, 923,
	-1000, 2117, 116663, -1000, 3276, -1000, 3201, -1000, -1000, -1000,
	2606, 47, -1000, -1000, -1000, -245, 130171, 47, -1000, 257,
	-246, 1050, -251, 94068, 1891, -1000, 793, -1000, 2477, 968,
	-1000, -1000, -252, -253, 1886, 1045, 2078, -254, -1000, -259,
	-265, -1000, -1000, 256, 50051, 50051, 50051, -112, -131, -1000,
	116663, 478, -1000, -1000, -1000, -1000, -1000, 2941, 976, -1000,
	792, 1854, 255, 1075, -1000, -1000, -1000, 2078, 116663, -1000,
	-1000, -1000, 973, 476, -1000, 48913, 1045, -267, -1000, 1037,
	-273, -1000, 1033, -274, -1000, 2779, -1000, -275, 2229, -270,
	231, 1546, 971, 3357, -1000, -1000, -1000, 2225, 94068, -276,
	-1000, -1000, 2333, -1000, 2597, 967, -1000, -1000, -1000, 1045,
	475, 1886, 459, 1368, 793, -1000, -1000, 1381, 3244, 3005,
	962, 962, 2597, 1886, 956, -1000, 962, -1000, -1000, -1000,
	2978, -1000, 54034, 2244, 1774, 127931, 2978, 2978, -1000, -1000,
	116663, 3336, -1000, 861, 859, 1483, -1000, -1000, -1000, -1000,
	-1000, -1000, 2706, -281, 3335, 2426, 130171, 2597, -1000, 2100,
	2642, -1000, 2100, 2776, -1000, 2111, -1000, -1000, -1000, 2741,
	-1000, 2765, -1000, 1652, 3464, 2439, 457, -1000, 116663, 1766,
	1741, 3525, 2094, 2225, 1886, 57415, 2597, 57415, 2066, -1000,
	116663, -1000, 2028, 1314, -1000, -1000, 2078, 2597, 968, 453,
	-1000, -1000, 1773, 3430, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 791, -1000, 3124, -1000, 1070, 2140, 2140, 968,
	-1000, 790, 792, -1000, -1000, 452, -1000, 450, -1000, 2211,
	116663, 2196, -1000, -1000, -1000, -1000, 116663, -1000, -1000, 3523,
	-1000, 923, -1000, 2597, -282, 2078, -284, -1000, -1000, -1000,
	-155, 1891, -1000, 1520, 956, 2078, -1000, 1771, -1000, -1000,
	2172, 49482, 48913, -1000, 3447, -1000, -1000, 2507, -1000, -1000,
	48913, 2706, 48913, 48913, -1000, 231, 64707, -287, -1000, 2225,
	2078, 1045, 956, 1886, 1368, 66365, 968, 956, -1000, -1000,
	-1000, 130171, -1000, -1000, -1000, 130171, -1000, -290, -296, -1000,
	-188, 101214, 2224, 2439, 956, 1886, 968, 2597, 2066, -260,
	-1000, 968, 2078, 1123, -298, -1000, -1000, -1000, -1000, 968,
	2597, -1000, 2078, -1000, -1000, -1000, -1000, -1000, 424, -1000,
	-1000, 2078, 956, 48913, 956, 968, -308, 968, -1000, 2078,
	-1000, -1000,
}

var sqlPgo = [...]int{
	0, 4339, 4333, 4329, 4327, 4326, 4325, 4324, 4320, 4319,
	4318, 4317, 4311, 148, 4309, 4307, 4305, 4304, 4303, 4302,
	4301, 4300, 4299, 4297, 4290, 4285, 4284, 4283, 4281, 4279,
	4278, 4277, 4275, 4274, 4271, 4270, 4269, 4268, 4266, 4263,
	4260, 4259, 4258, 4257, 4256, 4255, 4254, 4253, 4252, 4251,
	4249, 4248, 4244, 4234, 4233, 4232, 4231, 4227, 4226, 4225,
	4224, 4222, 4221, 4220, 4219, 4217, 4216, 51, 4212, 4210,
	4208, 4206, 4205, 4201, 4200, 4198, 4197, 4196, 4193, 4189,
	4185, 4183, 4182, 4181, 4180, 4179, 4177, 4176, 63, 4175,
	275, 4174, 4170, 4169, 4168, 4167, 4165, 4163, 4162, 4158,
	4157, 4156, 4155, 274, 4154, 141, 168, 4153, 4152, 3747,
	4150, 4149, 272, 4147, 4146, 4145, 4142, 284, 4141, 4139,
	4133, 4127, 4122, 4121, 4119, 4116, 4115, 4114, 4113, 93,
	207, 4112, 4111, 1353, 4108, 4107, 4106, 4099, 4097, 4096,
	4094, 4093, 4088, 4083, 248, 177, 4080, 269, 4079, 4074,
	4073, 4072, 4071, 4070, 4067, 4064, 4058, 4057, 4055, 4053,
	4052, 4051, 4046, 4045, 4044, 4043, 4042, 4041, 4039, 4037,
	4030, 4026, 4025, 4024, 4023, 4021, 4020, 4019, 4018, 4017,
	4015, 4014, 4013, 4012, 4011, 4010, 4009, 247, 214, 198,
	4008, 4007, 268, 266, 4006, 4004, 4003, 4001, 4000, 125,
	11, 42, 3999, 3995, 91, 90, 86, 98, 102, 99,
	3994, 112, 3993, 133, 61, 3991, 19, 3, 288, 239,
	13148, 232, 3990, 3988, 3987, 244, 201, 3986, 246, 3985,
	3983, 3981, 3978, 3977, 3976, 68, 48, 184, 185, 178,
	179, 33, 3975, 164, 106, 83, 58, 44, 17, 82,
	213, 21, 10, 259, 3974, 258, 9, 143, 6, 39,
	3973, 3972, 3971, 3970, 3683, 135, 3968, 265, 242, 175,
	3967, 3966, 3965, 336, 3962, 3959, 49, 3958, 104, 134,
	132, 15, 124, 3953, 155, 170, 36, 3951, 165, 53,
	3949, 169, 97, 87, 10314, 11963, 3948, 3941, 126, 66,
	119, 3236, 195, 192, 202, 95, 167, 162, 116, 216,
	211, 183, 65, 3935, 250, 3934, 3400, 78, 181, 160,
	5906, 3931, 3928, 3926, 85, 205, 105, 3924, 3923, 80,
	12, 4, 2, 1, 145, 25, 23, 22, 3920, 32,
	120, 47, 27, 3917, 26, 3916, 3915, 3912, 3910, 3909,
	64, 166, 3907, 3905, 276, 3904, 117, 54, 69, 3903,
	174, 224, 3902, 227, 129, 3899, 3897, 253, 210, 193,
	3895, 79, 230, 3894, 3893, 3892, 3891, 3889, 152, 7,
	137, 3888, 3887, 153, 3886, 52, 241, 203, 3885, 57,
	3883, 3882, 182, 109, 146, 283, 131, 243, 118, 226,
	187, 234, 3879, 3878, 3874, 197, 3872, 3870, 225, 157,
	3868, 3867, 240, 285, 88, 46, 92, 237, 77, 200,
	161, 3866, 208, 3865, 3864, 282, 186, 222, 20, 5,
	100, 123, 3863, 8, 235, 163, 236, 111, 3862, 6908,
	2266, 2819, 3861, 3860, 150, 121, 81, 113, 159, 261,
	74, 3859, 3858, 3081, 3857, 3856, 3855, 3854, 188, 3853,
	3852, 3851, 149, 158, 196, 3850, 89, 76, 50, 24,
	151, 249, 271, 122, 229, 173, 255, 3849, 3848, 3847,
	190, 3845, 103, 127, 172, 206, 254, 62, 3844, 130,
	3843, 156, 1744, 67, 154, 3842, 223, 3841, 3840, 3839,
	3838, 3835, 3834, 3833, 878, 231, 3832, 3831, 3830, 37,
	199, 3829, 260, 263, 180, 110, 45, 3827, 107, 1834,
	3826, 252, 582, 72, 262, 354, 3824, 2033, 56, 3822,
	0, 14520, 8527, 12112, 14245, 3821, 6215, 3820, 3819, 3817,
	220, 147, 3815, 3814, 3813, 108, 3811, 84, 3810, 3808,
	70, 3806, 29, 16, 18, 30, 28, 313, 264, 3805,
	3803, 59, 138, 139, 3801, 281, 228, 3800, 3799, 3798,
	3797, 96, 3796, 41, 3795, 43, 3794, 3793, 55, 14,
	38, 3792, 3791, 218, 3789, 221, 257, 3787, 171, 3786,
	73, 136, 3785, 3783, 3782, 71, 60, 256, 94, 3781,
	280, 3780, 204, 3777, 3776, 34, 3775, 3772, 245, 115,
	114, 3771, 251, 144, 40, 212, 194, 217, 3770, 3768,
	176, 3767, 3763, 3762, 273, 3759, 3754, 31, 3753, 3749,
	3744, 13, 3735, 3732, 209, 3111, 3728, 3726, 35, 3724,
	189,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	597, 597, 615, 615, 23, 23, 45, 45, 24, 46,
	17, 598, 598, 598, 598, 36, 25, 47, 29, 29,
	29, 29, 29, 202, 202, 202, 202, 22, 22, 41,
	41, 238, 238, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	593, 593, 240, 240, 239, 232, 232, 233, 233, 234,
	234, 599, 599, 241, 241, 241, 243, 243, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 493, 493,
	493, 525, 525, 525, 524, 524, 619, 619, 620, 620,
	620, 620, 620, 132, 132, 391, 391, 391, 56, 56,
	56, 56, 56, 588, 588, 204, 204, 204, 206, 206,
	205, 205, 205, 205, 205, 79, 79, 604, 604, 605,
	605, 603, 606, 606, 606, 203, 203, 203, 128, 128,
	128, 128, 128, 128, 129, 129, 130, 130, 207, 207,
	207, 209, 209, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 213, 16, 16, 16, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 108, 108, 527, 527, 528,
	528, 198, 198, 199, 199, 199, 199, 200, 200, 201,
	201, 201, 70, 70, 210, 210, 212, 212, 211, 211,
	211, 211, 211, 58, 58, 58, 58, 58, 58, 58,
	59, 59, 59, 59, 59, 60, 60, 60, 60, 60,
	60, 61, 61, 61, 61, 61, 61, 68, 68, 68,
	68, 68, 68, 189, 189, 71, 71, 71, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 76, 76,
	76, 76, 621, 621, 621, 621, 621, 621, 621, 621,
	621, 621, 621, 621, 621, 621, 621, 621, 621, 621,
	621, 622, 622, 623, 623, 624, 624, 625, 625, 625,
	625, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	625, 625, 625, 625, 625, 625, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 85, 85, 352, 352, 315, 315, 86,
	86, 86, 87, 87, 88, 88, 72, 72, 586, 586,
	368, 368, 484, 484, 73, 594, 594, 594, 596, 596,
	595, 595, 90, 90, 390, 390, 91, 91, 91, 91,
	91, 91, 92, 92, 92, 92, 92, 92, 92, 93,
	93, 93, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 100, 100, 100, 100, 100, 101, 101,
	101, 98, 98, 98, 95, 95, 95, 94, 94, 94,
	99, 99, 99, 585, 304, 304, 97, 97, 97, 96,
	96, 96, 369, 369, 102, 102, 102, 102, 316, 103,
	103, 103, 103, 103, 103, 103, 103, 106, 106, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 486, 486, 104, 104, 104, 451, 451, 109,
	109, 109, 406, 406, 110, 110, 110, 110, 110, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 131, 131,
	131, 131, 131, 131, 131, 131, 590, 590, 361, 361,
	267, 267, 267, 267, 121, 121, 121, 121, 122, 122,
	122, 123, 123, 194, 194, 138, 138, 138, 138, 138,
	137, 137, 137, 137, 137, 137, 62, 62, 62, 63,
	63, 64, 64, 65, 65, 66, 66, 67, 67, 67,
	67, 67, 140, 140, 616, 616, 142, 139, 139, 139,
	141, 141, 141, 141, 143, 145, 145, 145, 145, 145,
	144, 144, 144, 144, 144, 146, 146, 518, 518, 377,
	377, 516, 516, 537, 537, 517, 517, 322, 322, 322,
	322, 322, 323, 323, 323, 526, 526, 526, 526, 526,
	526, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 195, 195, 196, 197, 197, 197,
	197, 197, 172, 172, 172, 188, 188, 188, 188, 188,
	188, 188, 188, 175, 175, 175, 159, 159, 148, 148,
	148, 148, 148, 148, 148, 153, 153, 153, 153, 153,
	153, 153, 153, 149, 149, 161, 161, 161, 161, 161,
	154, 154, 155, 155, 155, 156, 156, 156, 156, 182,
	182, 158, 158, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 150, 150, 150, 150, 163, 163, 163, 163,
	413, 413, 413, 187, 187, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 185, 185, 185, 185, 185, 185, 607, 607, 608,
	608, 179, 179, 179, 179, 179, 179, 465, 465, 173,
	173, 173, 173, 178, 178, 178, 178, 181, 181, 181,
	181, 396, 396, 170, 170, 170, 171, 171, 171, 176,
	176, 177, 353, 353, 174, 174, 180, 180, 180, 180,
	151, 151, 151, 151, 151, 151, 151, 152, 152, 152,
	152, 183, 183, 169, 169, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 626, 626, 165, 165,
	165, 164, 164, 164, 164, 167, 167, 168, 168, 168,
	168, 168, 168, 166, 157, 186, 587, 587, 583, 583,
	583, 583, 583, 583, 583, 583, 584, 584, 584, 584,
	589, 589, 114, 114, 114, 114, 114, 124, 124, 124,
	124, 124, 115, 115, 115, 115, 115, 115, 115, 117,
	117, 116, 116, 116, 116, 80, 80, 80, 80, 80,
	15, 15, 15, 81, 81, 258, 258, 216, 216, 216,
	341, 341, 217, 217, 330, 330, 330, 330, 214, 214,
	215, 215, 82, 82, 627, 627, 627, 600, 600, 600,
	601, 601, 601, 601, 601, 601, 324, 324, 325, 325,
	431, 431, 431, 431, 431, 328, 328, 328, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 331, 331, 242,
	242, 242, 339, 340, 340, 332, 332, 338, 337, 337,
	336, 336, 335, 335, 333, 334, 334, 334, 343, 343,
	342, 345, 345, 344, 430, 546, 546, 548, 548, 548,
	548, 548, 548, 548, 550, 550, 550, 550, 550, 550,
	550, 550, 550, 550, 550, 550, 550, 550, 550, 414,
	414, 628, 628, 629, 630, 544, 544, 544, 545, 540,
	540, 541, 541, 541, 541, 541, 326, 326, 327, 327,
	327, 327, 542, 543, 359, 359, 469, 547, 547, 549,
	549, 551, 631, 631, 631, 631, 631, 631, 632, 632,
	632, 429, 429, 428, 428, 350, 350, 552, 552, 552,
	552, 553, 553, 553, 553, 553, 556, 555, 554, 554,
	554, 554, 554, 84, 84, 84, 393, 393, 392, 392,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 191, 191, 270, 270, 78,
	78, 78, 12, 12, 12, 12, 12, 12, 12, 285,
	285, 13, 13, 13, 602, 602, 602, 83, 83, 83,
	83, 83, 83, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 592, 592, 591, 591, 271, 271, 634,
	634, 89, 89, 89, 89, 89, 89, 89, 89, 487,
	487, 488, 488, 77, 77, 77, 77, 77, 415, 415,
	412, 412, 411, 411, 358, 358, 467, 467, 467, 468,
	275, 275, 276, 276, 235, 235, 235, 31, 30, 21,
	21, 26, 26, 27, 27, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 28, 28, 49, 49, 49, 49,
	50, 50, 50, 50, 53, 53, 54, 54, 48, 48,
	48, 48, 51, 51, 44, 44, 55, 55, 55, 55,
	55, 609, 611, 611, 610, 610, 614, 614, 614, 614,
	614, 614, 612, 612, 613, 613, 617, 617, 618, 618,
	120, 120, 125, 125, 125, 125, 125, 126, 126, 126,
	126, 127, 127, 127, 127, 136, 136, 190, 190, 190,
	190, 190, 190, 190, 57, 57, 57, 57, 69, 69,
	69, 69, 134, 636, 636, 636, 135, 135, 135, 635,
	635, 268, 268, 425, 425, 426, 426, 637, 637, 427,
	427, 427, 427, 427, 261, 260, 262, 262, 263, 263,
	75, 75, 75, 251, 251, 250, 252, 252, 253, 253,
	248, 248, 529, 529, 255, 255, 255, 256, 256, 244,
	244, 245, 245, 246, 246, 247, 247, 259, 259, 638,
	638, 112, 112, 112, 193, 193, 314, 314, 314, 422,
	422, 422, 351, 351, 282, 282, 424, 424, 424, 424,
	389, 389, 389, 192, 192, 366, 366, 379, 379, 380,
	380, 481, 481, 381, 118, 118, 119, 119, 133, 133,
	220, 220, 218, 218, 218, 218, 218, 218, 218, 218,
	225, 225, 226, 226, 227, 227, 228, 229, 229, 229,
	229, 370, 370, 230, 230, 230, 219, 219, 219, 221,
	221, 221, 221, 221, 221, 221, 224, 224, 224, 224,
	231, 231, 231, 223, 223, 563, 563, 563, 565, 565,
	567, 567, 566, 566, 562, 562, 564, 564, 633, 633,
	395, 395, 395, 348, 349, 346, 346, 347, 347, 356,
	356, 354, 355, 355, 357, 357, 466, 466, 466, 236,
	236, 236, 386, 386, 386, 386, 387, 387, 418, 418,
	416, 416, 416, 416, 417, 417, 419, 419, 419, 420,
	420, 421, 421, 383, 383, 384, 384, 385, 385, 385,
	385, 447, 447, 222, 222, 222, 363, 363, 363, 364,
	364, 437, 437, 437, 437, 437, 437, 437, 438, 438,
	436, 436, 436, 436, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 471, 472, 472, 365, 365, 473, 423,
	423, 581, 581, 581, 582, 582, 464, 464, 474, 474,
	474, 474, 474, 474, 462, 462, 463, 463, 482, 483,
	483, 399, 399, 399, 399, 397, 397, 400, 400, 400,
	400, 400, 398, 398, 475, 475, 475, 475, 388, 388,
	476, 476, 476, 476, 477, 478, 478, 479, 479, 432,
	433, 433, 489, 489, 489, 489, 491, 362, 362, 362,
	362, 362, 539, 538, 538, 490, 490, 490, 490, 490,
	490, 490, 490, 490, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 506, 506, 506, 506,
	506, 506, 506, 492, 492, 492, 492, 492, 496, 496,
	496, 495, 495, 495, 495, 495, 495, 495, 495, 495,
	495, 495, 497, 497, 502, 502, 503, 503, 503, 498,
	499, 504, 504, 504, 504, 639, 639, 508, 508, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 494, 494,
	494, 501, 501, 501, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 407, 407, 409,
	409, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 441, 441, 441, 441, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 557, 557, 557, 557, 557, 557, 557, 557, 443,
	443, 560, 560, 561, 561, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 568, 568, 569, 569,
	571, 571, 572, 572, 573, 574, 574, 574, 575, 576,
	576, 570, 570, 577, 577, 577, 577, 578, 578, 579,
	579, 579, 579, 579, 580, 580, 580, 580, 580, 453,
	453, 454, 454, 460, 460, 460, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 321, 321, 320, 272, 272, 272, 272, 272, 272,
	375, 375, 373, 373, 373, 376, 376, 374, 374, 372,
	372, 371, 371, 450, 450, 448, 448, 452, 452, 401,
	401, 507, 507, 507, 507, 507, 507, 507, 507, 402,
	402, 402, 410, 403, 403, 404, 404, 404, 404, 404,
	444, 445, 405, 405, 405, 446, 446, 455, 459, 459,
	458, 457, 457, 456, 456, 434, 434, 435, 435, 382,
	382, 640, 640, 378, 378, 480, 480, 480, 480, 318,
	318, 367, 367, 317, 317, 309, 309, 310, 310, 310,
	310, 360, 360, 461, 461, 509, 509, 510, 510, 511,
	511, 512, 512, 513, 514, 515, 449, 449, 293, 292,
	279, 280, 291, 290, 289, 278, 281, 286, 287, 288,
	283, 284, 300, 299, 298, 249, 254, 305, 306, 306,
	308, 308, 307, 307, 295, 296, 297, 485, 277, 311,
	311, 312, 312, 312, 313, 313, 313, 313, 273, 273,
	274, 274, 301, 301, 302, 303, 303, 294, 294, 294,
	264, 264, 264, 265, 265, 266, 266, 523, 523, 520,
	520, 520, 521, 521, 521, 522, 522, 522, 522, 519,
	519, 519, 519, 519, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 531, 531, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 533, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 536, 536,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	6, 7, 9, 6, 2, 2, 3, 0, 8, 6,
	8, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 3, 1, 12, 3, 1, 0, 1,
	1, 2, 3, 3, 0, 4, 6, 0, 5, 7,
	6, 8, 8, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 6, 4, 9, 7,
	12, 12, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 1, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 6, 6, 6,
	6, 6, 4, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 6, 3,
	8, 3, 4, 3, 3, 4, 3, 4, 4, 4,
	3, 5, 7, 3, 3, 4, 3, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 4, 3, 3,
	3, 3, 3, 6, 4, 4, 4, 3, 5, 3,
	3, 3, 3, 3, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 2, 1,
	2, 1, 2, 7, 3, 2, 0, 1, 3, 3,
	1, 0, 1, 2, 2, 1, 6, 5, 1, 2,
	1, 3, 2, 0, 7, 2, 5, 0, 1, 3,
	3, 1, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 3,
	5, 3, 1, 3, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 6,
	4, 7, 7, 7, 9, 10, 5, 2, 6, 4,
	7, 7, 7, 10, 5, 2, 2, 1, 1, 3,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	2, 4, 3, 2, 2, 1, 2, 1, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 1, 1, 5, 3, 2, 6,
	3, 3, 4, 4, 3, 1, 3, 3, 2, 2,
	1, 3, 3, 1, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	1, 1, 1, 2, 2, 2, 1, 3, 3, 3,
	3, 3, 2, 3, 3, 1, 1, 1, 1, 1,
	1, 2, 2, 5, 7, 3, 3, 3, 4, 4,
	6, 5, 5, 5, 3, 4, 4, 3, 4, 4,
	3, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 4, 6, 4, 2, 6, 4, 3, 2,
	3, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 4, 3, 4, 3, 3, 4, 4, 5,
	0, 1, 1, 1, 1, 3, 2, 3, 4, 3,
	4, 3, 5, 3, 4, 4, 3, 4, 5, 3,
	4, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 5, 2, 0, 3, 3, 4, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 3, 4, 5, 4,
	4, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 4, 3, 4, 4, 5, 1, 1, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 2, 3, 2, 5, 4, 2, 0, 1, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 1,
	2, 0, 1, 2, 1, 2, 2, 1, 2, 1,
	2, 2, 3, 7, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 6, 5, 8, 3,
	6, 6, 3, 13, 16, 1, 0, 1, 2, 3,
	0, 2, 0, 4, 0, 4, 5, 4, 3, 3,
	1, 3, 10, 13, 0, 2, 3, 1, 1, 0,
	1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
	1, 1, 1, 2, 3, 3, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 8, 0, 1,
	1, 0, 2, 1, 0, 1, 0, 1, 1, 0,
	1, 4, 1, 0, 3, 7, 7, 1, 1, 3,
	7, 1, 3, 11, 3, 2, 0, 3, 1, 2,
	2, 3, 2, 6, 2, 1, 2, 2, 2, 8,
	4, 2, 3, 5, 5, 5, 2, 2, 2, 2,
	0, 1, 1, 3, 4, 11, 12, 9, 5, 3,
	1, 5, 10, 7, 11, 3, 3, 0, 2, 4,
	3, 3, 1, 5, 1, 3, 1, 2, 0, 1,
	2, 2, 0, 1, 3, 3, 2, 2, 1, 1,
	1, 4, 0, 6, 0, 3, 0, 2, 2, 2,
	0, 1, 1, 2, 2, 0, 3, 3, 2, 1,
	1, 2, 2, 5, 8, 4, 1, 0, 1, 2,
	2, 1, 2, 3, 3, 2, 2, 3, 2, 2,
	2, 2, 2, 3, 1, 4, 2, 2, 2, 4,
	7, 3, 4, 6, 5, 7, 5, 5, 3, 3,
	0, 2, 2, 2, 1, 1, 1, 8, 10, 11,
	7, 10, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 3, 0,
	1, 8, 11, 3, 6, 6, 5, 3, 4, 1,
	0, 1, 3, 17, 20, 16, 19, 4, 2, 0,
	1, 0, 1, 0, 1, 3, 2, 4, 2, 3,
	1, 0, 2, 0, 1, 1, 0, 9, 6, 6,
	8, 6, 8, 5, 7, 2, 6, 7, 4, 4,
	5, 2, 4, 6, 6, 8, 6, 7, 8, 9,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 6, 8, 8,
	4, 7, 3, 0, 7, 10, 1, 1, 1, 1,
	2, 2, 3, 0, 3, 0, 1, 0, 2, 0,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 2, 3, 2, 2, 1, 2,
	13, 16, 3, 1, 0, 4, 1, 0, 2, 2,
	3, 0, 1, 1, 4, 4, 5, 1, 0, 3,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 5,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 6, 4, 5, 4, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 1,
	0, 3, 3, 5, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 3, 1, 3, 3,
	3, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 4, 1, 0, 1, 0, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 1, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 6, 3, 1, 1, 1, 2, 2, 2,
	4, 3, 5, 6, 8, 6, 5, 4, 3, 2,
	2, 4, 1, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 3, 3, 1, 1, 1, 1, 5, 3,
	1, 1, 3, 1, 1, 1, 1, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 7, 1, 7, 5, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 600, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -131, -136, -118, -119, -120, -132, -138,
	-190, -195, -196, -197, -3, -56, -58, -71, -90, -92,
	-103, -113, -112, -114, -121, -128, -124, -108, -62, -133,
	-137, -147, -191, -192, -193, 32, 31, 100, 80, 154,
	128, 137, 202, 384, 429, 441, 399, 142, 420, 404,
	-141, -142, 459, -57, -69, -135, -134, 73, 129, 414,
	-4, -12, -16, 29, 46, -59, -60, -61, 62, -78,
	-74, -85, -79, -72, -73, -76, -621, 102, -564, -93,
	-96, -127, -625, 161, 220, -115, -116, 366, -122, -123,
	422, -125, -126, 425, 162, -64, -63, 156, -218, -220,
	-139, -140, -194, -148, -149, -150, -151, -152, -153, -154,
	-156, -182, -157, -158, -159, -160, -161, -162, -166, -185,
	-163, -164, -165, -168, -167, -169, -174, -170, -171, -172,
	-173, -175, -176, -178, -179, -180, -181, -183, -184, 464,
	-177, -186, -155, 525, 49, 479, 82, 146, 433, 21,
	-5, -6, -7, -8, -9, -10, -11, -15, -14, -55,
	-75, -77, -80, -81, -82, -89, -83, -84, -563, -94,
	-95, -98, -100, -101, -97, -99, 421, -221, -219, 597,
	540, -18, -23, -24, -19, -20, -22, -25, -21, -26,
	-27, -28, -40, -45, -46, -42, -43, -41, -44, -47,
	-48, -49, -50, -51, -52, -53, -54, -30, -36, -37,
	-31, -32, -33, -34, -35, -38, -39, -17, -29, 561,
	570, -224, -222, -223, -231, 451, 548, 499, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	-316, 2, -295, -301, -302, -303, -294, -264, -533, -536,
	4, -530, -534, 168, 230, 330, 21, 23, 22, 24,
	25, 26, 27, 29, 30, 41, 42, 44, 45, 46,
	47, 48, 49, 53, 55, 59, 60, 61, 62, 63,
	64, 68, 73, 74, 79, 80, 81, 82, 83, 84,
	85, 91, 88, 89, 90, 92, 94, 96, 97, 98,
	99, 100, 101, 103, 104, 105, 107, 108, 109, 117,
	118, 119, 120, 121, 123, 128, 129, 132, 127, 131,
	133, 135, 136, 137, 140, 141, 142, 144, 145, 147,
	148, 149, 151, 152, 154, 155, 156, 159, 157, 507,
	158, 160, 161, 162, 163, 166, 174, 175, 176, 181,
	183, 184, 188, 189, 190, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 203, 207, 209, 210, 211, 212,
	213, 219, 220, 222, 223, 224, 225, 226, 231, 232,
	233, 237, 234, 243, 244, 248, 249, 250, 252, 256,
	257, 258, 259, 260, 261, 263, 265, 264, 267, 270,
	271, 274, 278, 279, 283, 284, 280, 285, 286, 288,
	289, 292, 290, 293, 294, 291, 295, 297, 298, 299,
	300, 301, 302, 303, 304, 305, 306, 307, 308, 296,
	311, 309, 313, 314, 315, 328, 324, 325, 319, 320,
	316, 321, 317, 318, 322, 323, 327, 332, 333, 336,
	217, 338, 339, 342, 360, 346, 347, 348, 351, 352,
	355, 358, 359, 361, 362, 363, 364, 365, 366, 367,
	368, 369, 371, 372, 374, 375, 376, 378, 379, 380,
	382, 384, 385, 387, 388, 390, 391, 392, 393, 394,
	395, 396, 398, 399, 401, 400, 402, 404, 406, 407,
	408, 414, 420, 416, 417, 418, 419, 421, 422, 423,
	424, 425, 427, 428, 429, 431, 432, 433, 434, 435,
	437, 439, 440, 444, 445, 461, 462, 481, 441, 442,
	443, 446, 447, 448, 449, 450, 454, 452, 453, 455,
	456, 457, 459, 460, 463, 464, 466, 467, 468, 469,
	470, 471, 472, 475, 477, 478, 479, 498, 480, 482,
	486, 487, 488, 489, 483, 484, 497, 491, 492, 494,
	495, 500, 501, 502, 503, 504, 505, 506, 508, 510,
	518, 519, 520, 522, 525, 526, 527, 528, 516, 530,
	531, 534, 535, 536, 539, 537, 538, 540, 542, 545,
	546, 547, 553, 552, 554, 557, 562, 563, 565, 566,
	567, 36, 50, 51, 54, 56, 58, 69, 70, 71,
	75, 124, 125, 153, 164, 165, 177, 191, 192, 204,
	206, 214, 215, 216, 238, 239, 241, 246, 268, 335,
	337, 353, 357, 373, 377, 381, 383, 397, 436, 473,
	485, 490, 511, 512, 513, 514, 521, 523, 548, 549,
	550, 555, 564, -316, 2, -295, 344, -288, 2, -264,
	-264, 384, 28, 2, 28, 372, 453, 502, 504, 2,
	-590, -361, 2, 28, -267, -264, 102, 202, 451, -288,
	2, -590, -361, 25, 2, -264, 2, 358, 22, 27,
	66, 77, 98, 140, 163, 185, 188, -624, 360, 391,
	439, 455, 497, 508, 522, 2, 552, 289, 452, 499,
	230, 120, 527, 446, -602, 444, 445, 358, 389, 431,
	205, 541, -268, 2, 441, -264, 289, 2, 600, 94,
	279, 74, 436, 456, -144, 519, -145, -146, 2, -143,
	511, -518, 446, 431, 311, -264, 600, 600, 600, 28,
	-277, -264, 499, 230, 446, 120, 495, 600, 2, 499,
	363, 552, 452, 120, 394, 230, 527, 188, 140, 27,
	446, -602, 575, 576, 289, 126, -588, 2, -583, 4,
	-534, -530, -310, -309, 499, 505, 120, -303, -294, 590,
	-302, 600, 600, 600, 2, 249, 250, 393, 392, 456,
	457, 600, 600, 600, 600, 444, 2, 163, 22, 27,
	66, 93, 98, 126, 185, 188, 349, -622, 360, 391,
	455, 497, 501, 508, 522, -601, 480, 68, 419, 446,
	-600, -602, 289, 527, 140, -411, 120, 279, 200, 535,
	504, 502, 533, 132, 237, 538, 537, 600, 600, -106,
	2, 597, 32, 31, -105, -109, 142, 459, -213, 499,
	242, 2, -264, 600, 600, 2, 249, 250, 444, 445,
	600, 600, 186, -583, 2, 600, 600, 2, 249, 250,
	444, 445, 242, 2, 68, 448, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 2, -188, 456, 480, 211, 47, 46, 74, 28,
	390, 79, 364, 121, 126, 148, 528, 203, 230, 231,
	257, 93, 94, -413, 44, 250, 68, 249, 445, -607,
	444, -465, 500, 447, 453, 494, 261, 441, 519, 102,
	542, 432, 567, 394, 395, 492, 408, 280, 157, 187,
	4, 120, 311, 431, 458, 511, 279, 440, 367, 84,
	600, -633, 2, 499, -635, 2, 519, 519, 2, -635,
	2, -635, 2, -635, 2, -636, 519, 564, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, -219, -221, -220, 600,
	600, 600, 600, 600, 600, 600, -188, 456, 2, 74,
	28, -354, -356, 532, 240, 150, 350, -218, -220, 2,
	-563, -516, 2, -439, -537, -441, 588, 589, 581, 496,
	67, -320, 329, 568, -453, 126, 533, 344, -536, -442,
	-455, 153, 360, 436, -376, 8, 9, 5, 6, 7,
	-273, -443, -449, 524, 167, 334, -313, 601, 10, 597,
	-560, -220, -454, 37, 206, 65, -520, -312, -274, -492,
	241, -311, -294, -557, -558, 4, -530, -531, -521, -495,
	-503, -499, -500, -506, -264, -533, 77, 111, 112, 110,
	115, 114, 282, 281, 116, 113, 458, 541, 66, 36,
	214, 215, 246, 335, 216, 75, -559, 141, -532, 238,
	239, 473, 51, 397, 177, 125, 124, 337, 56, 54,
	549, -504, 122, 511, 512, 513, 514, 191, 192, 58,
	164, 165, 357, 381, 490, 521, 523, 204, 268, 43,
	106, 187, 236, 218, 245, 247, 251, 269, 272, 312,
	326, 331, 354, 356, 430, 465, -639, 550, 485, 69,
	70, -565, 400, -566, -288, -565, 600, 600, 602, 600,
	-346, -348, -349, 2, 28, 138, 597, 2, -470, 2,
	-471, -475, -220, 262, -474, 597, -472, 595, -295, 345,
	-561, 437, -557, -558, -273, -294, -312, 4, -530, -532,
	599, -350, 597, 120, 446, 499, 78, 230, 163, -406,
	597, -264, 28, 344, 515, 602, -347, 388, -451, 597,
	344, 186, 347, 60, 293, 2, 2, 2, 2, 2,
	214, -264, 499, 119, 2, 260, 2, 2, 2, 2,
	2, 2, 2, -369, 214, 2, -295, 552, -369, 214,
	2, -369, 214, 2, -412, 2, 87, -278, 214, 2,
	-264, -304, 214, 2, -299, -301, -308, 214, 2, -306,
	-264, -528, 214, 2, -527, -523, 10, -522, 5, 4,
	-530, -534, -531, -533, 77, -439, 2, -133, 2, 60,
	-264, 552, 2, 2, 461, 2, 597, -144, 71, 519,
	43, 456, -426, 2, -427, -260, -261, -262, -482, -263,
	248, 387, 396, 571, 130, 329, 567, -616, 186, 580,
	515, -516, -516, -516, -377, 599, 2, 2, 2, 2,
	2, 2, -475, 214, -295, 2, -292, -519, 4, -530,
	-534, -531, -535, 28, 31, 32, 33, 35, 37, 38,
	39, 40, 57, 65, 66, 72, 76, 78, 87, 93,
	102, 110, 111, 113, 112, 114, 115, 116, 126, 130,
	134, 138, 139, 143, 146, 150, 167, 169, 182, 185,
	186, 202, 205, 208, 221, 235, 240, 242, 262, 266,
	273, 281, 282, 329, 334, 340, 344, 345, 349, 350,
	370, 386, 403, 426, 451, 458, 476, 493, 499, 509,
	515, 517, 524, 532, 533, 541, 543, 551, 556, 558,
	559, 560, 561, -536, 2, -475, 214, 2, -298, 214,
	-475, -301, 2, -278, 2, -291, -519, 2, -317, 214,
	-295, -297, -301, -299, 2, 2, 2, 2, -306, 2,
	-527, 214, 2, 28, 28, 552, 388, 242, 515, 602,
	-367, -309, -310, -515, 8, -360, -264, 599, -439, 2,
	-133, -117, 2, 182, -439, 214, 2, -133, 214, 2,
	-439, 214, 2, -133, 214, 2, -604, 2, -527, 214,
	-264, 2, 293, 2, 2, 522, 2, 98, 499, 119,
	2, 418, -623, 439, 526, 2, 2, 2, 2, 2,
	2, 2, 499, -283, 2, -264, 182, 483, -306, 214,
	-307, 2, 452, -634, 400, -527, 214, 2, 552, -299,
	214, 2, -299, 230, 244, -278, 214, 2, 504, 502,
	504, 502, 186, 2, 242, 2, 242, 2, -476, 2,
	-477, -471, -478, 595, 345, -486, 2, -485, -522, 548,
	-106, 597, -106, 597, 456, 597, -527, -295, -295, -439,
	2, -133, -117, 2, -439, 2, -133, 2, -130, -527,
	-129, 597, 186, -439, 2, -133, -117, 2, -439, 2,
	-133, 2, -213, 182, 2, 120, 499, -188, 2, 182,
	543, 2, 8, 2, 221, -527, 447, 395, 174, 2,
	461, 2, 462, 74, -413, 567, 74, 186, 2, 186,
	2, -396, 2, 561, 388, 186, 2, 2, -587, 2,
	344, 186, 2, 186, 2, 186, 2, 186, 2, 186,
	2, -187, 457, 520, 498, 392, 250, 2, -133, 558,
	-117, 250, 249, -439, 558, 2, -608, 182, 445, -439,
	2, 518, 259, 158, 186, -396, 2, 186, 2, 186,
	2, 5, 2, 393, 481, 2, 248, 387, 481, 2,
	-295, 499, 552, 452, 120, 28, 2, 444, 2, 2,
	88, 89, 186, 2, 186, 2, 201, 186, 2, 186,
	499, 567, 2, -388, -475, -425, -426, -425, 515, -354,
	-356, -188, 461, 2, -225, -386, -227, 182, -416, -417,
	-228, 273, 169, 340, -229, -395, 28, 138, -395, -395,
	60, 598, 598, 11, 12, 76, 41, 588, 589, 590,
	591, 180, 592, 593, 586, 587, 585, 578, 579, 583,
	254, 255, 95, 582, 580, 86, 287, 438, 170, 171,
	172, 173, 415, 228, 34, 229, 14, 15, 16, -320,
	33, 349, 272, 568, 218, 465, 581, 17, 18, 19,
	245, 247, 331, 50, 221, -272, 360, -319, 496, 67,
	-439, -439, -439, -439, -439, -439, -439, -439, 356, 597,
	-382, -434, 595, -220, 597, 597, 597, 597, -515, -220,
	-439, -453, 598, -374, 597, -220, -453, -448, 597, 436,
	595, 597, -456, -439, 5, 5, 5, 597, 599, -568,
	562, 182, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 383, -497,
	597, -496, 597, -496, -496, 553, -494, 597, 570, 563,
	597, -494, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 553, 602, -565, -350, 597,
	-378, -480, -439, 590, -378, -378, 344, -371, -439, 106,
	-399, 251, 312, 187, 269, 430, 236, -436, 601, -436,
	-464, 570, -220, -472, -294, -220, -474, 597, -470, -464,
	-107, -515, -90, -103, -112, -133, -147, -192, -193, 590,
	-295, 597, 186, 597, 599, -519, 186, -360, -278, -305,
	-264, -295, -311, -312, -317, 2, 137, -371, -583, 527,
	446, 28, 452, -360, -267, 38, -450, -489, -490, -539,
	601, -538, -492, -502, -498, -501, 373, 377, -521, 54,
	549, -504, 241, 4, -530, -532, 238, 239, 473, 51,
	397, 177, 125, 124, 337, 56, 511, 512, 513, 514,
	191, 192, 58, 550, 485, 69, 70, -583, 527, 446,
	28, 452, -360, 182, -360, 2, 2, 153, 2, 2,
	2, -264, -241, 602, 64, 423, 153, -369, 214, -241,
	153, -241, 153, -318, 214, -317, -241, 153, -241, 602,
	153, -241, 602, 153, 599, 602, 153, -360, 2, -412,
	-518, -371, 38, -426, 2, 126, -524, -522, 5, -637,
	602, 271, -323, 286, 328, 210, 345, 565, 338, 130,
	-526, 5, 4, -449, -461, 126, 279, 241, -509, -511,
	8, -510, 9, -512, 588, 589, -517, -516, 109, 599,
	-519, -238, 416, 459, 359, -237, 24, 29, 142, 232,
	315, 546, 159, -336, 233, -333, 363, 153, 477, 536,
	-597, -598, 443, 506, 507, 90, 338, 459, 359, 416,
	153, -392, -394, 38, 118, 315, 358, 61, 225, 291,
	292, 479, 555, 153, 459, 359, 416, 359, -13, -253,
	24, 142, -255, -250, 459, -598, 99, 416, 574, 421,
	369, 491, 386, -598, -240, 477, 536, -597, -598, 443,
	416, -239, -338, -333, 363, 153, 601, 24, 142, 416,
	459, 359, -619, -620, 29, 416, 359, -591, -285, -562,
	221, 561, 153, -285, -285, -475, 214, -612, 182, 2,
	-605, -129, 263, 5, 10, -527, -129, -367, 602, 602,
	-519, 590, 445, 444, 153, 153, 153, 153, 182, 329,
	2, 2, 2, 2, 2, 188, -600, -624, 2, 2,
	-295, 214, -352, 344, -586, -368, 499, -295, 182, 329,
	43, -298, 214, 2, -301, 552, -591, 329, -300, 214,
	-295, 38, 597, 329, 2, -412, 2, 230, -562, 329,
	-476, -314, -295, -471, -314, 459, -288, 38, -436, -295,
	598, 602, -486, -486, -527, -201, 561, 186, 102, 597,
	597, -213, 561, 561, -483, 602, -482, 221, -528, -130,
	-527, 419, -527, -586, -278, 2, -295, 2, 499, 252,
	-527, -201, 221, -527, -527, -527, -518, 28, 462, 2,
	-187, 457, 520, 89, 462, 2, -295, 499, 120, 230,
	80, -612, 182, 2, -264, -589, 182, -584, 431, 446,
	527, -583, -295, 120, -295, 120, -295, 120, -295, -295,
	2, 2, 2, 2, 2, 85, 2, -133, -439, 2,
	85, 2, 46, -608, 182, 2, 518, 2, 518, 2,
	-264, -264, -264, 480, 271, -295, -295, -295, -296, -301,
	500, 445, -439, 2, -626, 2, 186, 182, 2, 499,
	230, 499, 230, 120, 186, 74, 120, 28, 499, 442,
	-241, 602, -268, -225, -386, -518, -387, -386, -226, -225,
	-228, 182, 396, 537, 315, 463, 256, -417, -416, 28,
	-439, -421, 176, 314, -439, -419, -441, 588, 589, -510,
	-512, -370, 338, -219, -219, -219, -357, -466, -439, 386,
	230, -491, -489, -489, -293, -519, 511, -439, -439, -439,
	-439, -439, -439, -439, -439, -439, -439, -439, -439, -439,
	-439, -439, -439, -439, -439, -439, -439, -439, -439, -439,
	-439, -439, -439, -439, -439, -439, -439, -439, -439, -439,
	-439, -439, -439, 272, 218, 465, 50, 221, -439, 515,
	-439, -439, -439, -439, 309, 329, 334, 524, 167, 534,
	138, 338, -640, 493, 40, -446, -220, -375, 597, -460,
	35, 476, 28, -453, 597, 2, -434, -439, -435, -321,
	-319, -264, 588, 589, 590, 591, 592, 593, 578, 579,
	580, 14, 15, 16, 583, 587, 585, 586, 180, 95,
	582, 287, 438, 86, 170, 171, 172, 173, 254, 255,
	17, 18, 19, 34, 581, -372, -371, -371, 598, 551,
	28, 138, 590, 2, 598, 602, 38, 598, -439, -372,
	-452, -448, -371, -459, -458, 558, -407, -408, 566, 296,
	123, 212, 294, -409, 450, -513, 8, -519, 590, -569,
	175, 205, 597, 598, 2, 598, 2, 598, -439, 2,
	598, -439, 2, 598, -439, 2, 598, -439, 2, 598,
	2, 598, 2, -439, -439, -439, -439, -439, -439, -439,
	-371, 8, -513, -513, 511, 511, -513, -513, -513, -505,
	373, 374, 375, 376, 274, 275, 276, 277, 377, 378,
	379, 380, 301, 302, 303, 304, 297, 298, 299, 300,
	305, 306, 307, 308, 196, 197, 198, 199, 192, 193,
	194, 195, -505, -401, 2, -507, -371, 4, 566, 296,
	123, 212, 294, 450, 5, -401, 2, -402, 2, -439,
	-371, -403, -440, -441, 588, 589, 581, -320, -453, -404,
	2, -439, -372, -439, 57, 266, 517, -405, -439, 186,
	-371, -371, 2, -371, 2, -566, 38, -371, -363, 602,
	186, 38, 4, -363, -363, 597, 598, 602, -400, 209,
	290, 285, 244, -400, -470, -399, 251, -397, 354, -397,
	-397, -464, -279, 595, 603, -519, -464, -463, -462, 38,
	-288, 351, -464, -464, 599, 598, -463, 596, -581, 597,
	600, 600, 600, 600, 600, -295, 597, -371, -519, 599,
	482, 2, 598, 245, 245, 245, 245, 245, 437, 598,
	515, -585, -304, -308, 500, 2, 561, -105, 346, 598,
	602, -362, 37, 595, 599, -513, 2, 2, -508, 553,
	597, 597, -408, 597, 186, -585, -308, 500, 2, -361,
	515, -264, 2, -295, -369, -241, 153, -369, -369, -241,
	602, 153, -278, -299, -304, -306, -308, -264, -527, -528,
	-241, -300, -616, 598, 519, -427, -322, 396, 475, 417,
	454, 495, 8, 9, 8, 9, 602, -519, 602, -617,
	93, 515, 78, 446, -257, 280, 515, -430, 214, 78,
	-540, -281, 93, -541, -264, 72, 533, 386, 185, 151,
	-617, 93, 386, -617, 93, 2, 232, 93, 459, 480,
	28, 60, -475, 41, 41, 28, -615, 327, 267, 557,
	186, 567, 499, 230, 446, 515, 515, -475, -394, -489,
	118, 291, 292, 60, -514, -509, 588, 589, -514, 60,
	-514, -514, -514, 561, -298, -475, 446, 515, 515, 515,
	406, 406, -250, -145, 515, 515, 28, -188, 424, 126,
	-638, 580, 406, 602, 41, 41, 28, -615, 327, 267,
	186, 515, -317, -279, 547, 42, 547, 42, 547, 515,
	42, 446, 515, 602, 42, 515, 515, -13, 459, -592,
	-269, 105, 321, 284, 322, 97, 318, 96, 317, 103,
	319, 104, 320, 554, 332, 63, 316, 295, 323, -270,
	-271, 365, 545, 120, -527, -13, -13, 459, 359, 416,
	153, -613, 221, 28, -602, 221, -483, 221, -483, -309,
	-264, 599, -133, -439, -439, -133, -439, -133, 46, 153,
	2, -634, 260, 597, -326, 329, 186, -360, -484, 242,
	602, -368, -583, 153, -525, -524, 116, 458, -393, -392,
	329, -300, 214, 2, 153, -350, 329, 147, 597, 394,
	2, 153, -280, 214, -265, -264, -412, -244, 503, 153,
	-390, 543, -422, -133, 597, 126, 38, -422, -379, -380,
	-481, -381, -281, 597, -288, -436, -106, -485, 598, 598,
	598, -200, 348, -199, -264, 5, -213, 543, -325, -431,
	-430, -544, -545, -540, 272, 230, 533, 244, 168, -351,
	-282, -281, 119, 398, 398, -207, 561, -129, -130, 598,
	-483, 221, 483, -201, -201, -483, -483, -295, 182, -527,
	-201, -201, -201, 2, 2, 2, 2, -396, -295, -278,
	-317, -295, 28, 599, -360, -360, -308, -304, -396, -278,
	-396, -278, -396, -278, -133, -439, 2, 456, 182, 182,
	599, -396, -353, 426, 2, 394, 120, 499, 363, 230,
	-295, -317, -295, -317, -278, 120, -278, 121, -295, -475,
	-387, -226, 345, 256, 463, -419, -420, -441, 436, 437,
	-420, 436, 437, 8, 9, 8, 9, -230, 467, 333,
	-369, 602, -235, 39, 134, 256, -295, 567, 149, -439,
	-439, 515, -640, 493, -446, 149, -439, 309, 334, 524,
	167, 534, 138, 338, 186, 597, -440, -440, 598, -373,
	-439, -439, 596, 605, 598, 599, 598, -356, 602, -354,
	-439, -371, -371, 598, 599, -371, -360, 596, 596, 602,
	598, -457, -458, 143, -439, 515, 515, 515, 515, 597,
	598, 599, -574, 355, 597, 597, -439, 598, 598, 598,
	598, 38, 602, 602, 602, 598, 602, 602, 602, 598,
	598, 598, 602, 598, 567, 567, 598, 598, 598, 598,
	602, 598, 602, 598, 186, 598, 598, -410, 370, 598,
	11, 12, 588, 589, 590, 591, 180, 592, 593, 586,
	587, 585, 578, 579, 580, 86, 287, 438, 14, 15,
	16, -320, 245, 221, -440, -440, -440, -440, 598, -444,
	-445, 186, 182, 38, -405, -405, -405, 598, 186, -371,
	598, 598, 597, -567, 289, 329, 598, -433, -432, 559,
	-480, -364, 2, -470, -290, -519, -433, -433, -371, -439,
	251, 251, -398, 543, 344, -400, -470, -463, -515, -438,
	-437, 184, 39, 134, 324, 325, 217, -463, -288, -350,
	-463, -463, -519, -464, -464, -462, 598, -582, -515, 598,
	-365, -473, -561, -356, 599, -519, -210, -562, -189, 5,
	334, -189, -189, -189, -189, -360, 515, 515, 221, 25,
	371, -489, 595, 596, 8, -519, 597, -513, -513, -513,
	-360, 186, 186, 221, 186, -525, 2, -241, -369, -241,
	-241, -317, -318, -241, -241, -241, -391, 561, -516, -426,
	531, 83, 396, 511, -516, -237, 416, -281, -281, -295,
	-305, 200, 407, -525, 329, -430, 214, -243, 329, -489,
	-289, -264, 597, -414, 563, 256, 256, 543, -281, -289,
	256, 214, -281, 214, -289, 2, -289, -593, 396, 339,
	-439, 60, -334, 278, 394, 330, -238, 416, 459, 359,
	-133, -133, -133, -133, -133, 597, -616, 543, 137, -295,
	-317, -295, -305, -525, -300, 459, 359, 416, 326, -311,
	-514, -514, -392, 459, 359, 416, -305, -525, -298, -525,
	-249, 214, -264, -249, 214, 446, -278, 406, 567, 45,
	-638, -239, -133, -133, -133, -133, -133, 597, -279, -240,
	416, 5, 214, -281, 5, -281, 214, 5, -264, -281,
	-305, -525, -620, 24, 142, -281, -305, -525, -269, -527,
	334, 539, -278, -591, -285, 446, 515, 515, -475, -609,
	-610, 202, 429, 446, 432, -360, -129, -204, 561, -129,
	-198, 226, 590, -588, -264, 552, -264, -324, -327, -325,
	-281, -216, -217, 563, 561, 153, -315, -295, 595, -201,
	-527, -295, -484, -306, -307, 153, -350, 329, -527, 38,
	153, 597, 2, 2, -299, 344, 329, -280, 214, -245,
	144, -638, -278, -433, -364, -389, -424, 426, 344, -351,
	548, -288, -389, -366, 602, 186, 580, 599, -351, -479,
	590, -106, -106, -201, 602, 597, 580, 580, 597, -527,
	-527, 598, 602, -243, -295, -280, 230, 230, -287, -265,
	598, 602, 599, 597, 580, 580, -209, 348, -208, 145,
	258, 243, 469, 470, 471, 472, 136, 468, -483, -207,
	-130, 186, 186, -65, 561, 499, -201, 601, 432, -264,
	-396, -396, -396, 456, 456, -264, -360, -291, -278, -295,
	-292, -317, 182, 182, -278, 537, -420, 345, 283, -466,
	-236, 569, -295, 601, -439, -439, 149, 149, -439, -440,
	-440, -439, 149, 186, 597, -439, -450, 33, 33, 598,
	602, -435, -439, -319, 598, 551, -356, -356, 598, 590,
	-519, 601, 598, -448, 146, -439, 509, 296, 212, 294,
	-409, 294, -409, -409, -513, 5, -519, 590, -575, -284,
	597, -264, 559, -355, 350, 598, -491, -489, -439, -439,
	-439, -439, -439, -513, -494, -494, -509, -509, -439, -444,
	-439, -491, -489, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, 138, 329, 338, -440, -445, -444, -439,
	-439, -489, 598, 598, 598, -371, -105, 597, 289, -383,
	205, -439, -483, 602, -383, -383, 598, -470, -470, 597,
	-439, 251, 596, 602, 604, 580, -350, 599, -462, -463,
	596, 598, 602, 598, 602, -423, 38, 598, -519, -433,
	-212, -211, 135, 53, 107, 133, 334, -360, -360, 446,
	347, 5, 8, 595, 596, 599, -513, 598, 598, 598,
	-360, -360, 446, -360, -241, -241, 119, 315, -439, 515,
	515, 60, 221, 153, 329, 545, -546, -541, 151, -439,
	597, 230, 597, 597, 2, -232, -233, -234, 142, 459,
	24, -618, 2, 543, 153, -241, 153, -241, 565, -334,
	597, 597, 515, 446, -257, 515, 561, -371, -439, -202,
	126, -518, -598, 601, -598, 601, 446, 515, 515, 446,
	515, 515, 329, 153, 561, 166, 166, 567, -249, 561,
	-371, 515, -493, 48, 26, 329, -299, -241, 153, 515,
	515, 527, 459, -527, 334, -13, -305, -525, -300, 459,
	359, 416, -590, -361, -590, 202, -308, -613, -483, -206,
	348, -205, 145, 428, 136, 258, 223, -483, -204, 186,
	242, 561, -300, 2, 598, 598, 602, -547, 38, 342,
	342, 597, -295, -86, 561, -482, -515, -594, 561, 43,
	-298, 38, 153, -591, -133, -300, -487, -488, 5, 38,
	-295, 153, 344, 329, -246, 265, -638, -523, -562, -356,
	-389, -378, 330, 91, 598, -433, -380, -364, -439, 2,
	598, -199, -200, -527, -527, -527, -201, -213, -213, -431,
	-328, 597, -280, -265, 597, -213, -282, 2, -528, -527,
	-527, 602, 597, 580, 580, 580, -207, -483, -129, -133,
	348, -295, 590, -396, -340, -339, 363, 338, -340, 436,
	436, 345, 176, 261, -235, -279, -439, -439, 149, 33,
	33, -439, -439, -450, 598, -439, -439, -371, 596, 5,
	-439, 598, 598, 8, -439, 598, 599, -576, -264, -439,
	598, 60, 598, 598, 602, 602, 598, 598, 598, 598,
	598, 598, 598, -445, 186, 138, 338, 597, 598, 598,
	-105, -447, 208, 60, -470, -447, -447, -398, -360, -470,
	-437, -279, 595, -519, -515, -473, 597, 599, -211, 580,
	-527, -527, 561, -308, 596, 2, 595, -519, 598, -308,
	119, -281, -281, 499, 436, -249, 386, -430, 153, -548,
	93, -550, 76, 168, 102, 329, 334, 533, 386, 72,
	126, 344, 403, -628, -629, -630, 38, 572, 573, 598,
	-358, -467, -561, 597, -264, -358, -360, 329, 488, 126,
	344, 329, 126, 344, 556, 119, 2, 527, 79, -281,
	-289, -360, -360, -295, -305, -525, 160, 598, 602, 580,
	2, 590, 590, -305, -525, -300, -305, -525, -298, 153,
	-249, 361, 166, 160, 598, -279, 5, 5, 153, -276,
	76, -281, 5, -281, -299, 119, 446, 515, 515, 344,
	344, 347, -609, -610, -204, 602, 597, 580, 580, -204,
	-528, -129, 2, -350, -341, 232, -281, -545, -542, -543,
	386, -549, -551, 168, 386, -133, 2, -215, -214, -264,
	5, 597, -326, 348, 596, -596, 348, -595, 117, 136,
	-525, -393, -133, -300, -350, 598, 602, 147, -415, 543,
	-279, -295, 153, -247, 264, -638, -523, -244, -418, -416,
	139, 597, 344, -133, -356, 580, 598, 598, 119, 119,
	224, 152, -358, 597, 597, -360, 119, 598, -208, -209,
	-527, -129, -527, -207, -483, -66, -67, 230, 93, 368,
	-292, 499, 230, 597, 597, -235, -439, -439, -439, 598,
	-356, -519, 590, -570, 363, 598, -466, -439, -439, -440,
	186, 597, -450, 598, -571, 560, -439, -384, -385, -439,
	434, 108, 206, -571, -571, 598, -515, 2, -527, 2,
	515, 595, 2, 186, 221, 38, 406, -430, -289, -293,
	-286, -264, 168, 214, 334, 556, -414, 256, 597, -440,
	537, -295, 597, 2, 213, 213, 30, 60, -631, 130,
	235, 598, 602, -468, -275, -264, -439, -468, 598, 598,
	334, 537, 334, 556, -439, 537, -489, 597, -241, -241,
	598, 598, -439, 515, -518, 100, -516, 2, -598, -249,
	-278, -439, 515, 5, -241, -293, -241, -241, -276, 527,
	-305, -525, -300, -614, 500, 453, 528, 447, 189, 435,
	-614, 182, -205, -206, -527, -129, -204, 38, -331, 234,
	2, -547, 256, -286, 256, -627, 561, 598, 602, 580,
	580, -324, -216, -87, -88, 516, -482, 602, 597, 580,
	-350, 38, 5, 597, 597, -264, 344, 597, -279, -259,
	92, -638, -523, -245, -389, 330, -360, 93, -418, -446,
	-201, 597, 597, -329, 81, 94, 127, 213, 190, 231,
	480, 486, 28, -329, 598, -358, -358, 598, 597, -201,
	598, 602, 28, 597, 28, 597, -295, -317, -371, -371,
	598, -356, 60, 602, 598, 598, -440, -450, 598, -572,
	-573, -284, 602, 597, 597, 460, 596, -360, 2, -360,
	-249, 386, -264, -550, -286, 329, 543, -439, -440, -266,
	597, -439, 38, 126, 235, 131, 219, -429, -632, 101,
	489, 222, -467, -235, 598, -428, 543, 403, -440, -276,
	-358, 597, 597, 597, 580, 186, 597, -493, -241, -299,
	515, 2, 2, 186, -590, 598, -603, 401, -133, -335,
	-336, 221, 597, -330, 344, 119, 315, -214, -516, -516,
	598, 38, -88, 9, -595, -596, -439, 38, -133, -487,
	-358, -295, -358, 344, -251, -250, 273, -523, -246, 598,
	-289, -389, -528, -528, -428, 598, 598, -528, -67, -360,
	-360, 598, 598, -577, 394, 437, 207, -371, -357, 598,
	602, 38, -385, 2, 2, 2, 406, 153, 209, 598,
	-552, 288, -264, 598, 38, 131, 219, -331, 597, -236,
	-468, -331, 209, -295, -599, 543, 598, -343, -342, -339,
	-345, -344, -339, -371, -516, 100, 361, -371, -276, -360,
	-360, 344, -606, 187, -605, 5, 10, -216, 361, -359,
	-469, -281, 82, 119, -341, -133, 598, -133, 598, 598,
	-415, 598, -295, -248, -529, 406, 408, -638, -247, -433,
	598, 598, -429, -428, -337, -333, 598, 598, 598, 598,
	-578, -579, 50, 530, 109, -439, -578, -578, -573, -575,
	168, 561, -553, -556, -555, 577, 466, 187, 362, 598,
	488, 555, -337, -360, 561, -350, -439, -428, 598, 602,
	548, 598, 602, 548, 598, 186, 598, -241, -611, 561,
	-241, -614, -203, 561, 46, -330, -295, 598, 602, 385,
	132, 142, -331, -627, -428, 597, -429, 597, -256, -255,
	-638, -509, -259, 139, -201, -201, -331, -429, -217, 561,
	-201, -580, 151, -579, 382, 181, 436, 382, 181, -580,
	-580, -286, 55, -555, 577, -556, 577, 537, 132, -631,
	598, 55, -552, -331, -342, 221, -344, 186, 361, 202,
	186, 444, -605, 30, -258, -257, 597, -469, 437, 437,
	2, -335, -330, -429, -358, -331, -358, -252, -253, -254,
	-360, -251, 330, 537, -337, -331, -433, 109, 205, 510,
	315, 33, 580, -554, 315, 423, 64, 459, -554, -433,
	580, -553, 597, 597, 347, -360, 348, -360, 2, -216,
	-331, 598, -337, 598, -248, 459, -217, -337, 436, 352,
	-579, -439, 23, 334, 126, -439, -631, -371, -371, -241,
	-200, 597, 598, -330, -337, -428, -217, -429, -256, -379,
	-433, -217, 598, 598, -200, -242, 64, 423, -258, -217,
	-429, -433, -331, -252, -433, -433, -332, -333, 515, 598,
	-433, -331, -337, 597, -337, -217, -371, -217, -433, 598,
	-433, -332,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 549, 550, 552, 553, 554, 556,
	557, 559, 561, 563, 564, 565, 567, 568, 570, 571,
	572, 573, 574, 576, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	645, 647, 0, 1397, 1399, 1401, 1403, 0, 796, 0,
	36, 37, 39, 0, -2, 333, 335, 337, 0, 365,
	367, 368, 370, 372, 373, 374, 376, -2, 0, 482,
	483, 485, 487, -2, 0, 1002, 1004, 0, 634, 636,
	0, 1007, 1009, 0, 0, 656, 657, 0, 1508, -2,
	650, 652, 654, 721, 723, 725, 727, 729, 731, 733,
	735, 737, 739, 740, 742, 744, 746, 748, 750, 751,
	753, 755, 757, 758, 760, 761, 763, 765, 767, 769,
	771, 773, 775, 777, 779, 781, 783, 785, 787, -2,
	790, 791, 792, -2, -2, 0, -2, -2, -2, 1415,
	41, 43, 45, 47, 49, 51, 53, 55, 57, 59,
	426, 428, 430, 432, 434, 437, 439, 441, 1566, 489,
	491, 493, 495, 497, 499, 501, 0, -2, 1580, 0,
	0, 61, 62, 63, 64, 65, 66, 67, 68, 69,
	70, 71, 109, 110, 111, 112, 113, 114, 115, 116,
	75, 76, 77, 79, 80, 81, 82, 86, 87, 88,
	89, 90, 91, 92, 93, 94, 95, 107, 73, 0,
	0, 1539, 1541, 1543, 1545, -2, 0, 0, 5, 9,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	551, 555, 558, 560, 562, 566, 569, 575, 577, 579,
	534, 535, 538, 2274, 2292, 2293, 2294, 2297, 2298, 2299,
	2300, 2301, 2302, 2751, 2833, 2834, 2324, 2325, 2326, 2327,
	2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337,
	2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347,
	2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357,
	2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367,
	2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377,
	2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387,
	2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397,
	2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407,
	2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417,
	2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427,
	2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437,
	2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447,
	2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457,
	2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467,
	2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477,
	2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487,
	2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497,
	2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507,
	2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517,
	2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537,
	2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547,
	2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557,
	2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567,
	2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577,
	2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587,
	2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597,
	2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607,
	2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617,
	2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627,
	2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637,
	2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647,
	2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657,
	2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667,
	2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677,
	2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687,
	2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697,
	2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707,
	2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717,
	2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727,
	2728, 2729, 2730, 536, 537, 1186, 0, 603, 601, 2259,
	604, 2549, 606, 608, 476, 477, 478, 479, 480, 481,
	0, 627, 617, 1578, 628, 630, 631, 632, 633, 598,
	596, 0, 627, 2328, 625, 1395, 1396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 0, 0, 405, 1244,
	1245, 1246, 1380, 1381, 2596, 1422, 0, 234, 646, -2,
	-2, -2, 2716, -2, 678, -2, 690, 693, 694, 685,
	2720, 0, 2599, 2583, -2, 697, 1398, 1400, 1402, 794,
	795, 2278, 0, 0, 0, 0, 0, 38, 40, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 244, -2,
	-2, -2, -2, 0, 0, 2644, 2380, 2227, 2294, 2230,
	2225, 334, 336, 338, 339, 0, 0, 0, 0, 0,
	0, 366, 369, 371, 375, -2, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 1065,
	1057, 1058, 1302, 0, 0, 0, -2, 484, 486, 539,
	540, 0, 1567, 1567, 547, 548, -2, 0, 0, 0,
	0, 304, 292, 1003, 1005, 1006, 0, 0, 0, 0,
	635, 637, 0, 0, 273, 1008, 1010, 1011, 0, 0,
	0, 0, 0, 306, 0, 0, 651, 653, 655, 722,
	724, 726, 728, 730, 732, 734, 736, 738, 741, 743,
	745, 747, 749, 752, 754, 756, 759, 762, 764, 766,
	768, 770, 772, 774, 776, 778, 780, 782, 784, 786,
	788, 789, 802, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, -2, 0, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 899, 0,
	0, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, -2, 983, 0, 0,
	805, 807, 808, 809, 810, 0, 872, 897, 898, 907,
	793, 0, 1226, 1568, 1424, 1405, 1419, 1424, 1407, 1408,
	1409, 1410, 1411, 1416, 1418, 1412, 1413, 1414, 42, 44,
	46, 48, 50, 52, 54, 56, 58, 60, 427, 429,
	431, 433, 435, 438, 440, 442, -2, 1537, 1538, 490,
	492, 494, 496, 498, 500, 502, 638, 0, 640, 0,
	806, -2, 0, 1572, 1572, 1572, 0, 0, 1538, 1536,
	0, 643, 644, 701, 702, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 2101, 1929, 0, 703, -2, 1962,
	1964, 2691, 2522, 2716, 2100, 1966, 1967, 1968, 1969, 1970,
	0, 1972, 1973, 1974, 1975, 1976, 1977, 0, 1979, 0,
	1984, 1985, 1986, 0, 2698, 2204, 2288, -2, 0, 0,
	2704, 2284, 0, 2067, 2002, -2, -2, 2311, 2290, 1773,
	1774, 1775, 1776, 1777, -2, -2, 2734, 2006, 2007, 2008,
	2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 0, 2679,
	2699, 2700, 2705, 2707, 2701, 2688, 2027, 2393, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1800, 1809, -2, -2, -2, -2, -2, -2, -2,
	2692, 2693, 2710, 2713, 2719, 2724, 2725, 2697, 2706, 2733,
	2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744,
	2745, 2746, 2747, 2748, 2749, 2750, 1801, -2, -2, -2,
	-2, 1555, 2563, 1558, 1186, 1556, 1540, 1542, 0, 1544,
	0, 0, 0, 1549, 1575, 1573, 0, 1624, 1553, 1554,
	1643, 1643, 1667, 0, 1648, 0, 1667, 1567, 1694, 0,
	1654, 2588, 2003, 2004, 0, 2294, 2289, -2, -2, 2731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 599,
	0, 605, 607, 0, 0, 0, 626, 1577, 0, 0,
	0, 0, 0, 0, 0, 408, 409, 410, 411, 412,
	2699, 0, 0, 0, 417, 0, 419, 420, 421, 422,
	423, 424, 425, 205, 2699, 507, 532, 0, 205, 2699,
	510, 205, 2699, 513, 0, 516, 1300, 205, 2699, 519,
	2255, 205, 2699, 522, 524, 2263, 205, 2699, 528, 2270,
	2268, 529, 2699, 531, 309, 307, 308, 2307, 2308, 2315,
	2316, 2317, 2318, 2732, 2734, 1391, 1392, 1393, 1394, 0,
	1421, 1301, 648, 649, 0, 673, 0, 677, 2687, -2,
	0, 2608, -2, 681, 1425, 1429, 1430, 1431, 1432, 1433,
	0, 0, 0, 0, 1438, 0, 0, 0, 0, 674,
	675, 688, 689, 695, 698, 0, 797, 798, 799, 800,
	801, 72, 0, 2699, 1694, 74, 0, 2249, 2319, 2320,
	2321, 2322, 2323, 2752, 2753, 2754, 2755, 2756, 2757, 2758,
	2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768,
	2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778,
	2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788,
	2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798,
	2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808,
	2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818,
	2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828,
	2829, 2830, 2831, 2832, 78, 0, 2699, 83, 0, 2699,
	0, -2, 96, 0, 108, 0, 2252, 117, 0, 2699,
	0, 2224, -2, 0, 217, 293, 294, 295, 0, 1032,
	-2, 2699, 1238, 1240, 1240, 0, -2, 0, 0, 0,
	993, 2221, 2226, 994, 2245, 995, 2231, 0, 340, 341,
	342, 343, 344, 0, 345, 2699, 347, 348, 0, 350,
	351, 2699, 353, 354, 0, 356, 0, 256, 257, 2699,
	379, 381, 0, 383, 384, 0, 386, 0, 0, 0,
	390, -2, 406, 0, 403, 393, 394, 396, 397, 398,
	399, 400, 0, 446, 444, 2260, 0, 0, -2, 2699,
	0, 1029, 0, 0, 1280, -2, 2699, 1231, 0, 1287,
	2699, 1283, 0, -2, 0, 1565, 2699, 1442, 1061, 1062,
	1063, 1064, 1706, 473, 0, 1473, 0, 1475, 0, 1494,
	1700, 1643, 0, 0, 1705, 0, -2, 592, 2277, -2,
	542, 0, 543, 0, -2, 0, 321, 0, 0, 1012,
	1014, 1015, 1017, 1018, 1021, 1022, 1023, 1024, 1680, 274,
	276, 0, 0, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 0, 0, 658, 0, 0, 803, 804, 0,
	0, 815, 816, 817, 0, 321, 2600, 2558, 2414, 824,
	0, 827, 830, -2, 0, 0, 0, 0, 834, 0,
	839, 840, 841, 0, -2, 0, 848, 850, 1001, 852,
	0, 0, 854, 0, 858, 0, 861, 0, 863, 0,
	865, -2, -2, -2, 873, 874, -2, 879, -2, 0,
	883, -2, 0, 886, 0, 889, -2, 0, 899, 895,
	896, 0, 0, 0, 0, 915, 916, 0, 925, 0,
	928, 929, 930, 0, 934, 935, 0, 937, 938, 939,
	940, 0, 2671, 2605, 2380, 0, 946, -2, 952, 954,
	0, -2, 0, 970, 0, 974, 0, 0, 982, 0,
	0, 811, 812, 205, 1698, 1404, -2, 1406, 0, -2,
	0, 639, 0, 642, 1597, 1523, 1520, 0, 1594, 1595,
	1524, 0, 0, 0, 1531, 0, 1570, 1571, 0, 0,
	0, 1510, 1511, 0, 0, 0, 0, 2106, 2107, 2108,
	2109, 2122, 2110, 2111, 2121, 2119, 2120, 2112, 2113, 2118,
	2132, 2133, 2123, 2124, 2114, 2127, 2125, 2126, 2128, 2129,
	2130, 2131, 0, 0, 2137, 0, 2115, 2116, 2117, 2145,
	0, 0, 2146, 0, 2148, 0, 2138, 2134, 2135, 2136,
	0, 1908, 1910, 2212, 0, 0, 0, 2144, 2139, 2140,
	1846, 1847, 1848, 1849, 1850, 1883, 1887, 1888, 0, 0,
	1963, 2209, 2208, 1965, 0, 0, 2160, 0, 1978, -2,
	0, 2101, 2155, 0, 0, 1987, 1988, 1989, 0, 0,
	2160, 0, 0, 2203, 1999, 2000, 1838, 0, 0, 2069,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1787, 1786,
	0, 1788, 0, 1789, 1790, 1797, 1810, 0, 0, 0,
	0, 1814, 0, 0, 0, 0, 0, 0, 0, 2184,
	-2, 0, 0, 0, 0, 1802, 0, 1557, 0, 0,
	1628, 2213, 2217, 2218, 1628, 1628, 0, 0, 2161, 1691,
	1691, 0, 0, 1686, 1686, 1686, 1684, 1667, 0, 1667,
	1677, 0, 1667, 1667, 0, -2, 1648, 0, 0, 1677,
	0, 1661, 580, 582, 584, 586, 587, 588, 590, 1695,
	1696, 0, 0, 0, 0, 2295, 0, 0, 0, 0,
	2267, 0, 0, 2280, 0, 362, 0, 0, 0, 2654,
	2599, 0, -2, 610, 629, 1567, 0, 2163, 1721, 1725,
	0, 1727, 1728, 1729, 1730, 1731, 0, 0, 1722, -2,
	1798, 1800, 1821, 2312, 2313, 2314, 1781, 1782, 1783, 1784,
	1785, 1793, 1780, 1780, 1780, 1791, 1820, 1812, 1820, 1816,
	1766, 1767, 1768, 1803, 1804, 1805, 1806, 0, 2654, 2599,
	0, -2, 619, 0, 0, 1505, 407, 0, 414, 415,
	416, 0, 503, 0, 203, 204, 0, 205, 2699, 508,
	0, 511, 0, 205, 2699, 2219, 517, 0, 520, 0,
	0, 526, 0, 0, 0, 0, 0, 205, 1507, 0,
	0, 0, 0, -2, 683, 691, 692, 224, 225, 0,
	1427, 0, 1434, 712, 713, 714, 1436, 1437, 0, 1439,
	686, 715, 716, 717, 718, 719, 720, 0, 2233, 2234,
	2235, 2236, 2239, 2240, 0, 0, 684, 705, 687, 0,
	699, 118, 1377, 0, 0, 161, 0, 1377, 1377, 0,
	0, 0, 0, 188, 0, 1100, 0, 0, 0, 0,
	133, 146, 157, 130, 131, 0, 0, 0, 0, 0,
	0, 84, 1208, 0, 1211, 0, 0, 0, 0, 0,
	0, 0, 1224, 0, 0, 0, 0, 0, 98, 99,
	0, 0, 104, 105, 0, 145, 0, 0, 0, 0,
	0, 1470, 0, 140, 120, 0, 0, 133, 147, 159,
	0, 192, 194, 1097, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 226, 0, 0, 0, 1232, 0, 0,
	0, 1564, 0, 0, 0, 0, 2699, 1375, 0, 1360,
	0, 1680, 2463, -2, -2, 274, 1680, 992, 0, 0,
	2295, 2229, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 385, 387, 388, 389, 0, 1279, 0, 395, 436,
	1157, 2699, 0, 0, 463, 458, 0, 460, 0, 0,
	0, 1207, 2699, 1205, 2264, 0, 1229, 0, 1186, 2699,
	2262, 0, 0, 0, 1288, 2304, 1297, 1301, 1460, 0,
	475, 0, 1476, 1478, 0, 0, 1701, 0, 1703, 1643,
	1567, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 1679, 0, 0, 1680,
	274, 2574, 321, 321, 1680, 660, 1680, 662, 0, 0,
	818, 819, 0, 321, 321, 321, 825, 826, 828, 829,
	-2, -2, -2, -2, 831, 832, 922, 0, 0, 0,
	921, 842, 0, 844, 847, 851, 0, 986, 2583, 2599,
	2654, 999, 922, 2380, 922, 2380, 922, 2380, 862, 864,
	867, 910, 918, 878, 885, 0, 880, 884, 887, 890,
	0, 892, 900, -2, 0, 902, 0, 904, 0, 906,
	922, 923, 926, 933, 936, 941, 942, 943, 944, 2275,
	945, -2, 949, 950, 0, 961, 966, 967, 963, 0,
	0, 0, 0, 0, 0, 977, 978, 0, 0, 985,
	1225, 0, 1417, 1597, 1523, 641, 1514, 1596, 1515, 1522,
	1525, 0, 0, 1527, 0, 1529, 0, 1592, 1593, 1600,
	1601, 0, 1611, 1612, 1604, 0, -2, 0, 0, 1607,
	1608, 1533, 0, 1550, 1551, 1552, 1581, 1584, 1316, 0,
	2833, 1842, 1716, 1843, 1844, 2248, 0, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, -2, -2, -2,
	-2, -2, -2, -2, -2, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, -2, -2, -2, 1884,
	1885, 1886, -2, 2147, 2149, 0, 2212, 0, -2, 0,
	-2, -2, -2, -2, 1905, 0, 1907, 1912, 1914, 1916,
	0, 0, 0, 0, 2211, 1926, 2195, 2196, 0, 0,
	2103, 2104, 2105, 1911, 0, 1930, 2210, 2207, 0, 0,
	2141, 0, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 2138, 0, 2159, 1580, 1991, 0,
	0, 0, 0, 1998, 1983, 2157, 0, 2156, 0, 0,
	0, 2167, 0, 2202, 2198, 0, 2246, 1837, 1824, 1825,
	1826, 1827, 1828, 1829, 1839, 0, 2243, 2281, 2287, 2077,
	0, 0, 0, 2028, 2029, 2030, 2031, 2032, 0, 2034,
	2035, 0, 2037, 2038, 0, 2040, 2041, 0, 2043, 2044,
	2045, 2046, 2047, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 0, 0, 2049, 0, 2170, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 2051, 0, 2053, 2161,
	2181, 0, 0, 1931, 0, 0, 0, 0, 2101, 0,
	2056, 2161, 2189, 0, 0, 0, 0, 0, 2161, 0,
	2194, 0, 2063, 0, 2065, 1559, 0, 0, 1711, 0,
	0, 0, 2216, 1711, 1711, 0, 1623, 0, 0, 1687,
	1688, 1689, 1690, 0, 0, 1691, 0, 1681, 1685, 1682,
	1683, 1677, 1640, 0, 0, 2250, 1677, 1646, 1676, 0,
	1186, 1666, 1677, 1677, 0, -2, 1650, 1667, 0, 0,
	581, 583, 585, 589, 591, 0, 0, 1580, -2, 0,
	-2, 323, 1185, 0, 0, 0, 0, 0, 600, 602,
	0, 0, 523, 0, 0, 616, 0, 594, 0, 597,
	0, 1712, 1715, 0, 0, 1726, 1732, 1733, 0, -2,
	0, 0, 1822, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 418, 533, 205, 505, 0, 205, 205, 514,
	0, 0, 205, 525, 205, 2271, 205, 2269, 310, 530,
	1506, 237, 0, 676, 0, 1426, 1435, 0, 709, 0,
	711, 0, 2237, 2241, 2238, 2242, 0, 700, 0, 0,
	0, 0, 1376, 0, 1323, 0, 0, 165, 2699, 0,
	207, 0, 0, 1150, 2256, 0, 1140, 0, 0, 2400,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 132,
	0, 0, 0, 0, 0, 0, 0, 0, 1209, 1210,
	1212, 1219, 1221, 0, 1215, 2244, 0, 0, 1216, 0,
	1218, 1220, 1222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 1241, 0, 0, 1242, 1243, 1448, 1449,
	0, 1469, 1470, 0, 0, 0, 129, 0, 0, 0,
	0, 0, 0, 2223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1234, 0, 1275,
	1273, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 0, 0, 0, -2, 1236, 1237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 312, 2222,
	2232, 0, 1019, 1020, 346, 349, 352, 355, 243, 0,
	391, 0, 0, 1067, 1042, 0, 0, 445, 321, 0,
	0, 459, 463, 2273, 1027, 221, 222, 223, 1203, 1206,
	0, 1186, 2699, 1252, 0, 0, 0, 0, 0, 0,
	1286, 0, 0, 2699, 2251, 2303, 2304, 1462, 1470, 0,
	1711, 0, 1492, 1479, 0, 0, 0, 1492, 1496, 1497,
	1499, 1500, 0, 0, 1702, 1708, 541, 593, 1567, 1567,
	321, 319, 2525, 317, 314, 316, 0, 0, 0, 1068,
	1070, 1071, 1072, 207, 0, 2304, 1140, 2452, 2304, 0,
	1482, 1484, 0, 0, 0, 268, 0, 277, 1680, 275,
	280, 0, 0, 0, 457, 659, 664, 813, 0, 321,
	821, 822, 823, 869, 912, 920, 965, 833, 835, 836,
	837, 0, 0, 0, 1000, 996, 997, 998, 853, 922,
	856, 922, 859, 922, 882, 888, 894, 901, 0, 0,
	0, 914, 931, 0, 948, 0, 0, 0, 0, 0,
	0, 0, 971, 972, 973, 975, 980, 979, 984, 1699,
	1518, 1519, 1521, 0, 1530, 0, 0, 1606, -2, -2,
	1605, 1609, 1610, -2, -2, -2, -2, 1526, 0, 1535,
	1532, 0, 1591, 1314, 1315, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1927, 0, -2, 1906, 1909, 1913,
	1915, 1917, 0, 0, 0, 0, 0, 0, 2150, 0,
	2152, 1928, 2205, 2208, 2143, 0, 2099, 0, 0, 1579,
	1580, 1580, 0, 1997, 0, 2158, 0, 2165, 2166, 0,
	1990, 0, 2199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2001, 0, 0, 0, 0, 2033, 2036, 2039,
	2042, 0, 0, 0, 0, 2022, 0, 0, 0, 2026,
	1792, 1778, 0, 1820, 1818, 1819, 1813, 1820, 1817, 1770,
	0, 1769, 0, 2048, 0, 2050, 2052, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1934, 1935, 1936, 1956, 2055, 2187,
	2188, 0, 0, 0, 0, 0, 0, 2061, 0, 2193,
	2062, 2064, 1567, 0, 1560, 0, 1625, 1614, 1710, 0,
	2214, 1680, 1627, 1629, 2215, 2253, 1614, 1614, 0, 2162,
	0, 0, 1671, 0, 0, 0, 1673, 1644, 0, 0,
	1638, 0, 1633, 1634, 1635, 1636, 1637, 1645, 1186, 1675,
	1647, 1651, 2281, 0, 1677, 0, 1662, 0, 1664, 1697,
	0, 1656, 1659, 0, 0, 2296, 1711, 0, 357, 363,
	364, 358, 359, 360, 361, 609, 0, 0, 0, 0,
	0, 2164, 0, 1717, 0, 1723, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 1504, 413, 504, 205, 509,
	512, 2220, 205, 518, 521, 527, 233, 0, 672, -2,
	707, 708, 710, 0, 706, 162, 1377, 0, 0, 1319,
	1321, 1325, 1331, 1334, 0, 167, 2699, 179, 0, 1116,
	0, 2254, 0, 0, 0, 0, 0, 0, 1379, 0,
	0, 2699, 205, 2699, 205, 182, 184, 187, 0, 191,
	189, 0, 1104, 0, 0, 1107, 119, 1377, 0, 0,
	122, 126, 134, 135, 138, 0, 0, 0, 144, 0,
	0, 0, 1336, 1340, 1348, 0, 0, 0, 1213, 1214,
	1217, 1223, 85, 0, 0, 0, 1344, 1346, 1352, 97,
	100, 2699, 2265, 102, 2699, 0, 1318, 0, 0, 0,
	0, 193, 124, 128, 136, 137, 139, 0, 1354, 121,
	0, 220, 0, 0, 210, 205, 2699, 0, 212, 0,
	213, 214, 227, 0, 0, 0, 1030, 1031, 1274, 1227,
	1228, 0, 1239, 1233, 0, 0, 0, 0, 0, 1356,
	1357, 0, 0, 0, 1375, 1372, 1680, 239, 0, 1680,
	247, 0, 2228, 0, 378, 0, 0, 0, 0, 1066,
	1168, 0, 1037, 0, 0, 0, 451, 447, 0, 456,
	462, 461, 467, -2, 0, 0, 0, 0, -2, 0,
	0, 1290, 1284, 1285, 0, 0, 0, 0, 2699, 1464,
	1470, 0, 1565, 1580, 474, 1471, 1492, 0, 0, 0,
	1481, 1477, 1474, 1711, 0, 0, 0, 0, 0, 1704,
	1707, 544, 545, 296, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 1073, 1077, 0, 2304, 2304, 0, 2258,
	0, 0, 0, 0, 0, 0, 278, 0, 281, 0,
	0, 0, 286, 287, 288, 289, 290, 291, 280, 270,
	1680, 0, 0, 661, 0, 0, 820, 0, 843, 846,
	855, 857, 860, 903, 905, 922, 932, 955, 956, 1094,
	0, 1094, 0, 0, 976, 1528, 0, 1603, 1534, 1585,
	1586, 0, 1316, 0, 1845, 1890, 0, 0, -2, 0,
	0, 1894, 0, 0, 0, -2, 0, 0, 0, 2151,
	2153, 0, 2207, 2142, 1992, 0, 0, 0, 1996, 1980,
	1981, 0, 2102, 2168, 2197, 2201, 0, 1830, 1831, 1832,
	1833, 1834, 1835, 1836, 0, 2247, 2282, 2286, 2075, 2076,
	2080, 2261, 0, 0, 0, 2005, 0, 0, 0, 0,
	0, 0, 0, 0, 1811, 1815, 0, 0, 2169, 2180,
	2182, 1932, 1933, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, -2, -2, -2, 1950, 1951, 1952, -2,
	-2, -2, 1957, 0, 0, 0, 2183, 2185, 2186, 2190,
	2191, 0, 2058, 2059, 2060, 2192, 0, 1567, 1561, 1622,
	0, 1709, 1626, 0, 1622, 1622, 1574, 1669, 0, 0,
	1693, 0, 1641, 0, 1642, 0, 1674, 0, 1649, 1652,
	1653, 1663, 0, 1655, 0, 1658, 0, 1992, -2, 322,
	324, 326, 0, 329, 330, 0, 0, 612, 613, 0,
	611, 595, 0, 0, 1719, 0, 0, 1795, 1799, 1823,
	621, 622, 0, 620, 506, 515, 235, 0, 1678, 0,
	0, 0, 0, 0, 0, 206, 1114, 1149, 0, 0,
	0, 1139, 0, 0, 1155, 169, 170, 171, 0, 0,
	0, 0, 180, 0, 0, 177, 0, 186, 190, 1101,
	0, 0, 0, 0, 1324, 0, 0, 0, 141, 142,
	143, 0, 148, 0, 149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1454, 1455, 0, 1445, 0,
	0, 0, 208, 0, 0, 0, 1313, 229, 0, 0,
	0, 0, 0, 1277, 1278, 1235, 1337, 1341, 1349, 0,
	0, 0, 0, 627, 0, 632, 1374, 0, 247, 245,
	0, 248, 0, 251, 252, 0, 254, 247, 241, 0,
	0, 0, 1186, 392, 1040, 1156, 0, 1158, 0, 1038,
	0, 0, 1157, 443, 0, 450, 0, 464, 0, 0,
	1207, 0, 0, 1230, 1250, 1186, 0, 1289, 1291, 0,
	1299, 0, 0, 0, 1466, 1470, 0, 1459, 1460, 1599,
	1472, 1490, -2, 0, 0, 1580, 1498, 1495, 1501, 1502,
	0, 318, 0, 313, 315, 0, 299, 0, 0, 1069,
	1074, 0, 0, 0, 0, 0, 1483, 1485, 0, 1013,
	1016, 0, 0, 0, 0, 0, 269, 280, 1680, 305,
	0, 814, 838, 913, 957, 1093, 0, 0, 959, 0,
	0, 1602, 1589, 1590, 1587, 1316, 1892, 1896, 0, 0,
	0, 1898, -2, 0, 1920, -2, -2, 2154, 2206, 1971,
	1580, 1993, 1995, 1982, 2200, 1840, 0, 2082, 2079, 0,
	2066, 0, 2017, 2018, 0, 0, 2021, 2023, 2024, 2025,
	1779, 1772, 1771, 2179, 0, 0, 0, 0, 2057, 1562,
	0, 2071, 0, 0, 1630, 2071, 2071, 1670, 0, 1672,
	1639, 1631, 0, 2282, 1665, 1657, 0, 0, 327, 0,
	331, 332, 0, 0, 1713, 1718, 0, 1724, 1794, 0,
	236, 163, 164, 1328, 1332, 1329, 0, 166, 0, 1115,
	0, 1118, 0, 0, 0, 0, 1125, 1140, 0, 0,
	0, 0, 0, 0, 1142, 0, 1141, 0, 0, 1172,
	0, 1304, 1311, 0, -2, 0, 0, 0, 173, 196,
	0, 0, 0, 0, 199, 1378, 175, 0, 0, 205,
	205, 0, 0, 1320, 1322, 1335, 0, 0, 0, 0,
	151, 0, 0, 1338, 1342, 1350, 1345, 1347, 1353, 0,
	103, 0, 1456, 0, 0, 1355, 218, 219, 0, 205,
	0, 205, 211, 205, 1313, 0, 0, 0, 0, 0,
	0, 0, 1358, 1359, 238, 0, 0, 0, 0, 240,
	311, 247, 380, 0, 1088, 0, 1168, 1160, 1161, 1162,
	0, 1167, 1169, 0, 0, 1054, 1039, 0, 1050, 0,
	0, 1067, 1042, 0, 448, 465, 0, 468, 0, 471,
	1028, 1204, 1247, 1186, 0, 1281, 0, 0, 0, 0,
	0, 0, 0, 1468, 1470, 0, 1461, 1462, 1492, 1598,
	0, 0, 0, 1480, 1599, 0, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 282, 0,
	283, 284, 285, 271, 272, 663, 665, 0, 0, 671,
	1092, 0, 0, 0, 0, 1588, 1900, -2, -2, 1921,
	0, 2283, 2285, 1580, 0, 2068, 1582, 0, 0, -2,
	0, 0, 0, 1563, 1546, 0, 1621, 1613, 1615, 1617,
	2586, 2375, 2698, 1547, 1548, 1692, 0, 1660, 328, 614,
	0, 0, 1720, 0, 0, 0, 1330, 168, 0, 1119,
	1120, 2257, 1122, 0, 1124, 1126, 1127, 1128, 0, 1131,
	0, 2306, 0, 1136, 1137, 1138, 0, 0, 1151, 1173,
	0, 1182, 0, 1306, 1316, 1310, 0, 1308, 1184, 0,
	172, 198, 174, 200, 195, 0, 1313, 0, 176, 185,
	0, 0, 123, 0, 0, 2369, 154, 152, 150, 101,
	1317, 125, 0, 220, 228, 1312, 230, 215, 205, 0,
	1339, 1343, 1351, 0, 1366, 1367, 1368, 1369, 0, 0,
	0, 0, 249, 0, 250, 253, 0, 0, 1103, 0,
	1041, 1159, 0, 1170, 1171, 1044, 0, 1043, 0, 0,
	0, 0, 0, 449, 452, 0, 455, 0, 0, 0,
	0, 0, 1292, 1290, 0, 1298, 0, 0, 0, 1444,
	0, 0, 1463, 1464, 472, 1486, 0, 0, 1492, 1503,
	298, 0, 0, 1075, 1078, 1079, 1080, 1081, 1082, 1083,
	1084, 1085, 1086, 1076, 1184, 0, 0, 1148, 0, 303,
	279, 0, 667, 0, 669, 0, 958, 960, 0, 0,
	1994, 2086, 0, 0, 2019, 2020, -2, 0, 1960, 2070,
	2072, 0, 0, 0, 0, 0, 1632, 615, 1714, 623,
	1326, 0, 1333, 1117, 1121, 0, 0, 0, 1132, 1190,
	0, 0, 1143, 0, 0, 1176, 1177, 1088, 0, 1178,
	1179, 1180, 1305, 1591, 1311, 1088, 0, 0, 197, 202,
	0, 0, 0, 0, 0, 0, 0, 209, 231, 1313,
	0, 1370, 1371, 0, 0, 246, 264, 0, 1248, 1042,
	1102, 0, 0, 1052, 0, 1055, 0, 1051, 1048, 1049,
	1040, 0, 453, 454, 469, 0, 470, 0, 1251, 0,
	0, 1299, 0, 0, 1451, 1443, 1470, 1465, 1466, 1711,
	1489, 1493, 0, 0, 1182, 1184, 1099, 0, 666, 0,
	0, 968, 969, 0, 0, 0, 0, 2081, 1583, 1961,
	0, 0, 1616, 1618, 1619, 1620, 1327, 0, 0, 1130,
	1195, 0, 0, 0, 1144, 1174, 1175, 1099, 0, 1309,
	1307, 1153, 0, 1186, 178, 0, 1184, 0, 1108, 0,
	0, 1111, 0, 0, 155, 2369, 153, 0, 205, 1363,
	205, 0, 267, 0, 261, 259, 260, 1044, 0, 0,
	1164, 1166, 0, 1056, 1088, 1054, 466, 1249, 1282, 1184,
	0, 1182, 0, 1458, 1470, 1452, 1453, 0, 1468, 0,
	321, 321, 1088, 1182, 1042, 1098, 321, 668, 670, 2078,
	2098, 2087, -2, 2657, 2376, 0, 2098, 2098, 2073, 2074,
	0, 0, 1133, 1191, 1192, 0, 1187, 1188, 1189, 2305,
	1134, 1135, 1172, 0, 0, 1190, 201, 1088, 1105, 0,
	0, 1106, 0, 0, 158, 0, 160, 232, 1361, 0,
	1364, 0, 255, 0, 0, 1036, 0, 1163, 0, 0,
	0, 0, 1103, 1044, 1182, 0, 1088, 0, 1447, 1457,
	0, 1467, 1444, 0, 300, 301, 1099, 1088, 1711, 0,
	302, 2083, 0, 0, 2089, 2090, 2091, 2092, 2093, 2084,
	2085, 1123, 0, 1193, 0, 1194, 0, 0, 0, 1711,
	1181, 0, 1195, 183, 1109, 0, 1112, 0, 156, 0,
	0, 0, 262, 263, 1033, 1035, 0, 1165, 1045, 0,
	1047, 1042, 1053, 1088, 0, 1099, 0, 1440, 1446, 1450,
	2266, 1451, 1487, 0, 1042, 1099, 1147, 0, 2095, 2096,
	0, 0, 0, 1196, 0, 1199, 1200, 0, 1197, 1152,
	0, 1172, 0, 0, 1362, 205, 0, 0, 1046, 1044,
	1099, 1184, 1042, 1182, 1458, 0, 1711, 1042, 2094, 2097,
	2088, 1129, 1198, 1201, 1202, 1183, 1154, 0, 0, 1365,
	265, 0, 1091, 1036, 1042, 1182, 1711, 1088, 1447, 1711,
	1145, 1711, 1096, 0, 0, 1087, 1089, 1090, 1034, 1711,
	1088, 1295, 1099, 1441, 1488, 1146, 1110, 1095, 0, 266,
	1293, 1099, 1042, 0, 1042, 1711, 0, 1711, 1296, 1096,
	1294, 1113,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 586, 3, 592, 587, 3,
	597, 598, 590, 588, 602, 589, 599, 591, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 605, 3,
	578, 580, 579, 583, 601, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 595, 3, 596, 593, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 603, 585, 604, 581,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 582, 57921, 584, 57922, 594, 57923, 600, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1468
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1473
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1475
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1478
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1479
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1480
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1481
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1483
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1485
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1486
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1495
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1504
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1506
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1509
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1510
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1511
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1512
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1514
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1515
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1516
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1517
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1577
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1617
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1635
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1639
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1643
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1673
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1677
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1684
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1696
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1706
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1713
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1723
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1749
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1780
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1812
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1816
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1820
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1826
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1836
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1845
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1860
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1866
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1874
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1888
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1897
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1898
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1902
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1911
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1923
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1928
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1935
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1947
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1954
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1962
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1971
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1976
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1982
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1990
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2001
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2011
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2021
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2030
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2041
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2047
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2073
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2078
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2089
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2093
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2125
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2145
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2155
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2165
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2169
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2174
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2183
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2195
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2212
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2215
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2221
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2228
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2236
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2252
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2261
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2273
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2281
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2282
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2286
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2290
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2296
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2308
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2338
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2353
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2363
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2388
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2399
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2410
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2419
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2429
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2447
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2456
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2460
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2463
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2486
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2488
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2493
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2500
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2508
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2539
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2543
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2547
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2551
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2581
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2623
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2627
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2631
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2658
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2667
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2671
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2675
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2679
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2764
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2775
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2780
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2788
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2792
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2802
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2814
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2828
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = nil
		}
	case 268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2864
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2873
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2883
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2892
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2909
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2913
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2923
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2927
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2934
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2938
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2953
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2962
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2966
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2970
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2974
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2978
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2982
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2986
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2990
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3000
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3006
		{
			return unimplemented(sqllex, "alter function")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3010
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3014
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3051
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3056
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3060
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3066
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3071
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3076
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3081
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3086
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3090
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3109
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3117
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3135
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3139
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3149
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3153
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3173
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3177
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3181
		{
			sqlVAL.union.val = nil
		}
	case 322:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3193
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3207
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3213
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3217
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3223
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3227
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3243
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3251
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3259
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3260
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3261
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3262
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3272
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3280
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3289
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3308
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3316
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3318
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3322
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3325
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3335
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3344
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3352
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3354
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3358
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3361
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3365
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3373
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3377
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3393
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3397
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3402
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3414
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3416
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3417
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3420
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3421
		{
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3422
		{
			return helpWith(sqllex, "CREATE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3429
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3432
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3435
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3436
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3439
		{
			return unimplemented(sqllex, "create access method")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3440
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3441
		{
			return unimplemented(sqllex, "create cast")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3442
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3443
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3444
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3445
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3446
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3447
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3448
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3449
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3450
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3451
		{
			return unimplemented(sqllex, "create publication")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3452
		{
			return unimplemented(sqllex, "create rule")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3453
		{
			return unimplemented(sqllex, "create server")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3454
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3455
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3456
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3457
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3460
		{
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3461
		{
		}
	case 403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3464
		{
		}
	case 404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3465
		{
		}
	case 405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3468
		{
		}
	case 406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3469
		{
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3472
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3473
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3475
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3476
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3477
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3478
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3479
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3480
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3481
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3482
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3483
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3485
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3486
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3487
		{
			return unimplemented(sqllex, "drop server")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3488
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3489
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3490
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3493
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3494
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3495
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3496
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3497
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3499
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3500
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3501
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3502
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3520
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3528
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3534
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3538
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3547
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3554
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3560
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3566
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3570
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3581
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3593
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3608
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3616
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3626
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3636
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3640
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3647
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3651
		{

			sqlVAL.union.val = nil
		}
	case 464:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3683
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3687
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3694
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3698
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3724
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3734
		{
			return helpWith(sqllex, "DELETE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3737
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3738
		{
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3746
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3749
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3750
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3751
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3752
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3753
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3762
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3763
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3764
		{
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3765
		{
			return helpWith(sqllex, "DROP")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3768
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3769
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3770
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3771
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3772
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3773
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3774
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3790
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3807
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3834
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3837
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3845
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3854
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3862
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3885
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3900
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3907
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3911
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3938
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3945
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3957
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3960
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3964
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3969
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3982
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3987
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3989
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3994
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3998
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4021
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4028
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4030
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4038
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4046
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4054
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4062
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4073
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4084
		{
			return helpWith(sqllex, "DELETE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4086
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4087
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4088
		{
			return helpWith(sqllex, "INSERT")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4091
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4093
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4096
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4101
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4102
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4103
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4108
		{
			return helpWith(sqllex, "DELETE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4109
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4110
		{
			return helpWith(sqllex, "INSERT")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4116
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4121
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4125
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 594:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4135
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4143
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4155
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4176
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4184
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4188
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4202
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4210
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4214
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4240
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4244
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4256
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4266
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4270
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4281
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4284
		{
			return helpWith(sqllex, "GRANT")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4311
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4319
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4323
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4333
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4344
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4347
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4356
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4366
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			return helpWith(sqllex, "RESET")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4385
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4400
		{
			return helpWith(sqllex, "RESET")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4408
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4411
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4422
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4425
		{
			return helpWith(sqllex, "USE")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4429
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4430
		{
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4431
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4432
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4436
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4437
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "USE")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4454
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4472
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4498
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 664:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4512
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4522
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4538
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4552
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4562
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4578
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4582
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4606
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4614
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4618
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4637
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4641
		{
			return unimplemented(sqllex, "set from current")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4645
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4650
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4659
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4664
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4669
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4677
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4682
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4689
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4693
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4710
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4731
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4735
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4741
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4763
		{
			sqlVAL.union.val = tree.Low
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4767
		{
			sqlVAL.union.val = tree.Normal
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = tree.High
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4795
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4799
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4814
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4816
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4817
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4818
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4819
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4820
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4821
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4822
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4825
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4826
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4827
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4828
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4830
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4831
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4832
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4834
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4836
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4837
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4838
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4839
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4840
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4842
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4843
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4844
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4845
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4846
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4847
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4848
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4849
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4850
		{
			return helpWith(sqllex, "SHOW")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4853
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4858
		{
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4859
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4862
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4866
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4871
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4876
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4881
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4886
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.str = "client_encoding"
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			sqlVAL.str = "timezone"
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4914
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4928
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4932
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4936
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4947
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4977
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4986
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4995
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5004
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5012
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5022
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5026
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5029
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5031
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5034
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5036
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5040
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5043
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5051
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5054
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5062
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5066
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5070
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5074
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5077
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5088
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5094
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5099
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5104
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5115
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5125
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5134
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5141
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5144
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5157
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5165
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5173
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5176
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5178
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5182
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5186
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5189
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5191
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5195
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5198
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5206
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5209
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5211
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5214
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5225
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5227
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5230
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5234
		{
			sqlVAL.union.val = true
		}
	case 871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = true
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5238
		{
			sqlVAL.union.val = false
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5255
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5259
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5266
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5267
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5268
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5270
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5274
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5285
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5303
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5311
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5312
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5328
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5330
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5336
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5344
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 899:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5362
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5373
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5376
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5378
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5381
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5383
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5387
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5390
		{
			sqlVAL.union.val = true
		}
	case 908:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5391
		{
			sqlVAL.union.val = false
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5399
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5402
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5404
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5407
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5415
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5425
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5435
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5438
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5448
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5453
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5456
		{
			sqlVAL.union.val = true
		}
	case 922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5457
		{
			sqlVAL.union.val = false
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5464
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5471
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5478
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5485
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5492
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5496
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5500
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5507
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5511
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5522
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5525
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5533
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5538
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5543
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5547
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5557
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5561
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5566
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5571
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5576
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5581
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5584
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5594
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5598
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5600
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5604
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5612
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5615
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5626
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5636
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5640
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5644
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5652
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5660
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5673
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5678
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5683
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5687
		{
		}
	case 968:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5696
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5710
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5719
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5731
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5760
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5766
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5772
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5778
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5785
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5790
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5800
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5807
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5814
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5943
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5947
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5986
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5990
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5999
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6016
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6024
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6048
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6049
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6050
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6060
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6061
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6062
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6072
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6081
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6090
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6092
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6100
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6103
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6127
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6135
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6143
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6151
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6171
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6178
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6206
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6245
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6261
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6279
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6290
		{

			sqlVAL.union.val = nil
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6296
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6302
		{
			sqlVAL.str = ""
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6306
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6312
		{
			sqlVAL.union.val = nil
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6321
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6329
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6333
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6339
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6353
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6359
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6373
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6388
		{
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6389
		{
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6390
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6415
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6416
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6423
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6429
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6445
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6471
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6482
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6485
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6486
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6488
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6489
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6495
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6504
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6511
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6516
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6534
		{
			sqlVAL.str = ""
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6547
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6561
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6619
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6625
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6635
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6639
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6645
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6659
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6684
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6692
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6700
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6704
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6722
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6740
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6759
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6763
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6786
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6796
		{

			sqlVAL.union.val = true
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6801
		{
			sqlVAL.union.val = false
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6806
		{
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6810
		{
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6813
		{
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6817
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6845
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6888
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6913
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6924
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6931
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6935
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6941
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6951
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6966
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6979
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7026
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7031
		{
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7032
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7033
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7034
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7035
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7036
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7054
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7058
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7070
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7080
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7104
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7108
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7149
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7157
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7165
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7169
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7192
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7201
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7209
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7213
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7217
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7220
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7225
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7235
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7237
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7239
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7241
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7244
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7247
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7249
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7262
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7270
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7284
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7287
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7302
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7310
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7314
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7321
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.str = ""
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = true
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7355
		{

			sqlVAL.union.val = true
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.union.val = false
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7370
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7384
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7396
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7408
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7418
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7428
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7492
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7519
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7523
		{
			sqlVAL.union.val = nil
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7538
		{
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7539
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7564
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7566
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7568
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7570
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7572
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7574
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7578
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7582
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7612
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7630
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7649
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7666
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7683
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7687
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = false
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = true
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = false
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = true
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7722
		{
			sqlVAL.union.val = false
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7741
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7747
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7753
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7761
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7786
		{
			sqlVAL.str = ""
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7789
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7790
		{
			sqlVAL.str = ""
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7794
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7798
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7808
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7820
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7826
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7866
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7885
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7891
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7933
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8017
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8023
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8051
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8057
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8069
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8075
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8089
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8095
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8119
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8146
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8154
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = true
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.union.val = false
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8198
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8202
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = tree.Types
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8214
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8218
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8224
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8242
		{
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8243
		{
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8246
		{
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8247
		{
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8258
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8276
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8285
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8306
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8308
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8314
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8335
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8343
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8354
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8358
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8359
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8360
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8379
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8381
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8384
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8397
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8402
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8411
		{
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8412
		{
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8413
		{
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8430
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8433
		{
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8434
		{
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8462
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8475
		{
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8477
		{
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8481
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8530
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8570
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.str = ""
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8593
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8598
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8605
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8615
		{

		}
	case 1454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8630
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.str = ""
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.str = ""
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.str = ""
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.str = ""
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8685
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8693
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8698
		{
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8699
		{
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8721
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8728
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8746
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8750
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8759
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8774
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8784
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8788
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8808
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8835
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8839
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8844
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8848
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8877
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8909
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.nameList(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8930
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.nameList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8945
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8986
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9035
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9044
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9045
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9057
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9089
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9124
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9125
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9126
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9187
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9209
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9231
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9247
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = true
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = false
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9300
		{
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9301
		{
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = nil
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9314
		{
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9315
		{
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = true
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = false
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = false
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = true
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9344
		{
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9345
		{
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9348
		{
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9349
		{
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9390
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9411
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9416
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9442
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9475
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9489
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9530
		{
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9531
		{
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9534
		{
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9535
		{
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9569
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9570
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9571
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9579
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9601
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9603
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9618
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9640
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9645
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9650
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9666
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9678
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9689
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9697
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9737
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9747
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9782
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9793
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9823
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9856
		{
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9858
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = nil
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9863
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = true
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = false
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9905
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9944
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9957
		{
			sqlVAL.str = tree.AstFull
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.str = tree.AstRight
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9969
		{
			sqlVAL.str = tree.AstInner
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9975
		{
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9976
		{
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.str = tree.AstHash
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.str = ""
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10033
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10045
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10050
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10068
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10074
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10080
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10090
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.union.val = true
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = false
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10110
		{
			sqlVAL.union.val = true
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10114
		{
			sqlVAL.union.val = false
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10127
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10139
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10152
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10160
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10161
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10179
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10181
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10189
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10202
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10209
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10218
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10258
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10270
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10271
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10290
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = types.Geography
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10320
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10328
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10354
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10362
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = nil
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = types.Int2
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = types.Int
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = types.Float4
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = types.Float
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10405
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10413
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10421
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = types.Bool
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10435
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = types.Float
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10454
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10460
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10468
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10482
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = types.String
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = true
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = false
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = types.Date
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10531
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10539
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10553
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10562
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10570
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10587
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = true
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = false
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = false
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = types.Interval
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10611
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10677
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10695
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10710
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10726
		{
			sqlVAL.union.val = nil
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10740
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10777
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10781
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10785
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10789
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10800
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10817
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10837
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10841
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10849
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10877
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10901
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10909
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10949
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10957
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11070
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11084
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11088
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11092
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11136
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11158
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11170
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11174
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11194
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11266
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11274
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11288
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11296
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11318
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11370
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11375
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11377
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11381
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11385
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11389
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11393
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11401
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11410
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11417
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11421
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11425
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11431
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11455
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11459
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11463
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11466
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11467
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11469
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11475
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11479
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11482
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11491
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11544
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11557
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11569
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11579
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11584
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11588
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11592
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11602
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11606
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11610
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11618
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11632
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11636
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11640
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11652
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11656
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11660
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11668
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11672
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11682
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11684
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11687
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11693
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11696
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11705
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11714
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11723
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11725
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11728
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11730
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11733
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11738
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11740
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11743
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11745
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11748
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11757
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11758
		{
			return unimplemented(sqllex, "treat")
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11764
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11779
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11781
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11784
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11790
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11794
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11800
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11815
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11821
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11831
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11843
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11847
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.str = ""
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11920
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11933
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11997
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12001
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12006
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12019
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12023
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12030
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12046
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12066
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12067
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12068
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12069
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12070
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12071
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12072
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12073
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12074
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12075
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12076
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12077
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12079
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12081
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12082
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12085
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12086
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12088
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12089
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12090
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12092
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12093
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12094
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12097
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12098
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12099
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12100
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12106
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12122
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12129
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12130
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12132
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12155
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12188
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12194
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12198
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12211
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12235
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12241
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12251
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12255
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12278
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12282
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12286
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12292
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12299
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12303
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12320
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12324
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12328
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12332
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12336
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12348
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12362
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12387
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12391
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12397
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12403
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12407
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12414
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12420
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12424
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12431
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12437
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12441
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12446
		{
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12447
		{
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12451
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12461
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12470
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12474
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12478
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12496
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12500
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12519
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12527
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12550
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12559
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12563
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12567
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12571
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12577
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12581
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12596
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12600
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12612
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12616
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12625
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12636
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12645
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12653
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12670
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12755
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12763
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12767
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12773
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12777
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12785
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12812
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12819
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12823
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12827
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12841
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12845
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12849
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12862
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12871
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12889
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12902
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12909
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12934
		{
			sqlVAL.str = ""
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12940
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12944
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
