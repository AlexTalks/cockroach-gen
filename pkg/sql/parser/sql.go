// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:863
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13414

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1541,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	260, 400,
	-2, 0,
	-1, 74,
	242, 238,
	510, 238,
	-2, 0,
	-1, 87,
	230, 1283,
	244, 1283,
	260, 396,
	387, 396,
	397, 1044,
	434, 396,
	447, 1044,
	494, 1044,
	521, 396,
	547, 1044,
	-2, 0,
	-1, 93,
	132, 1541,
	237, 1541,
	532, 1541,
	533, 1541,
	-2, 0,
	-1, 109,
	150, 1512,
	169, 1512,
	182, 1512,
	240, 1512,
	273, 1512,
	339, 1512,
	349, 1512,
	527, 1512,
	-2, 1483,
	-1, 149,
	158, 895,
	259, 895,
	390, 857,
	452, 857,
	493, 857,
	513, 895,
	515, 857,
	-2, 0,
	-1, 152,
	4, 1543,
	21, 1543,
	22, 1543,
	23, 1543,
	24, 1543,
	25, 1543,
	26, 1543,
	27, 1543,
	29, 1543,
	30, 1543,
	36, 1543,
	41, 1543,
	42, 1543,
	44, 1543,
	45, 1543,
	46, 1543,
	47, 1543,
	48, 1543,
	49, 1543,
	50, 1543,
	51, 1543,
	53, 1543,
	54, 1543,
	55, 1543,
	56, 1543,
	58, 1543,
	59, 1543,
	60, 1543,
	61, 1543,
	62, 1543,
	63, 1543,
	64, 1543,
	68, 1543,
	69, 1543,
	70, 1543,
	71, 1543,
	73, 1543,
	74, 1543,
	75, 1543,
	79, 1543,
	80, 1543,
	81, 1543,
	82, 1543,
	83, 1543,
	84, 1543,
	85, 1543,
	88, 1543,
	89, 1543,
	90, 1543,
	91, 1543,
	92, 1543,
	94, 1543,
	96, 1543,
	97, 1543,
	98, 1543,
	99, 1543,
	100, 1543,
	101, 1543,
	103, 1543,
	104, 1543,
	105, 1543,
	107, 1543,
	108, 1543,
	109, 1543,
	117, 1543,
	118, 1543,
	119, 1543,
	120, 1543,
	121, 1543,
	123, 1543,
	124, 1543,
	125, 1543,
	127, 1543,
	128, 1543,
	129, 1543,
	131, 1543,
	132, 1543,
	133, 1543,
	135, 1543,
	136, 1543,
	137, 1543,
	140, 1543,
	141, 1543,
	142, 1543,
	144, 1543,
	145, 1543,
	147, 1543,
	148, 1543,
	149, 1543,
	151, 1543,
	152, 1543,
	153, 1543,
	154, 1543,
	155, 1543,
	156, 1543,
	157, 1543,
	158, 1543,
	159, 1543,
	160, 1543,
	161, 1543,
	162, 1543,
	163, 1543,
	164, 1543,
	165, 1543,
	166, 1543,
	168, 1543,
	174, 1543,
	175, 1543,
	176, 1543,
	177, 1543,
	181, 1543,
	183, 1543,
	184, 1543,
	188, 1543,
	189, 1543,
	190, 1543,
	191, 1543,
	192, 1543,
	193, 1543,
	194, 1543,
	195, 1543,
	196, 1543,
	197, 1543,
	198, 1543,
	199, 1543,
	200, 1543,
	201, 1543,
	203, 1543,
	204, 1543,
	206, 1543,
	207, 1543,
	209, 1543,
	210, 1543,
	211, 1543,
	212, 1543,
	213, 1543,
	214, 1543,
	215, 1543,
	216, 1543,
	217, 1543,
	219, 1543,
	220, 1543,
	222, 1543,
	223, 1543,
	224, 1543,
	225, 1543,
	226, 1543,
	230, 1543,
	231, 1543,
	232, 1543,
	233, 1543,
	234, 1543,
	237, 1543,
	238, 1543,
	239, 1543,
	241, 1543,
	243, 1543,
	244, 1543,
	246, 1543,
	248, 1543,
	249, 1543,
	250, 1543,
	252, 1543,
	256, 1543,
	257, 1543,
	258, 1543,
	259, 1543,
	260, 1543,
	261, 1543,
	263, 1543,
	264, 1543,
	265, 1543,
	267, 1543,
	268, 1543,
	270, 1543,
	271, 1543,
	274, 1543,
	278, 1543,
	279, 1543,
	280, 1543,
	283, 1543,
	284, 1543,
	285, 1543,
	286, 1543,
	288, 1543,
	289, 1543,
	290, 1543,
	291, 1543,
	292, 1543,
	293, 1543,
	294, 1543,
	295, 1543,
	296, 1543,
	297, 1543,
	298, 1543,
	299, 1543,
	300, 1543,
	301, 1543,
	302, 1543,
	303, 1543,
	304, 1543,
	305, 1543,
	306, 1543,
	307, 1543,
	308, 1543,
	309, 1543,
	311, 1543,
	313, 1543,
	314, 1543,
	315, 1543,
	316, 1543,
	317, 1543,
	318, 1543,
	319, 1543,
	320, 1543,
	321, 1543,
	322, 1543,
	323, 1543,
	324, 1543,
	326, 1543,
	327, 1543,
	329, 1543,
	331, 1543,
	332, 1543,
	334, 1543,
	335, 1543,
	336, 1543,
	337, 1543,
	338, 1543,
	341, 1543,
	344, 1543,
	345, 1543,
	346, 1543,
	347, 1543,
	350, 1543,
	351, 1543,
	352, 1543,
	354, 1543,
	356, 1543,
	357, 1543,
	358, 1543,
	359, 1543,
	360, 1543,
	361, 1543,
	362, 1543,
	363, 1543,
	364, 1543,
	365, 1543,
	366, 1543,
	367, 1543,
	369, 1543,
	370, 1543,
	371, 1543,
	372, 1543,
	373, 1543,
	374, 1543,
	375, 1543,
	376, 1543,
	377, 1543,
	378, 1543,
	379, 1543,
	380, 1543,
	381, 1543,
	382, 1543,
	383, 1543,
	385, 1543,
	386, 1543,
	388, 1543,
	389, 1543,
	390, 1543,
	391, 1543,
	392, 1543,
	393, 1543,
	394, 1543,
	395, 1543,
	396, 1543,
	397, 1543,
	398, 1543,
	399, 1543,
	401, 1543,
	403, 1543,
	404, 1543,
	405, 1543,
	410, 1543,
	412, 1543,
	413, 1543,
	414, 1543,
	415, 1543,
	416, 1543,
	417, 1543,
	418, 1543,
	419, 1543,
	420, 1543,
	422, 1543,
	423, 1543,
	424, 1543,
	426, 1543,
	427, 1543,
	428, 1543,
	429, 1543,
	430, 1543,
	431, 1543,
	432, 1543,
	434, 1543,
	435, 1543,
	436, 1543,
	437, 1543,
	438, 1543,
	439, 1543,
	440, 1543,
	441, 1543,
	442, 1543,
	443, 1543,
	444, 1543,
	445, 1543,
	447, 1543,
	448, 1543,
	449, 1543,
	450, 1543,
	451, 1543,
	452, 1543,
	454, 1543,
	455, 1543,
	456, 1543,
	457, 1543,
	458, 1543,
	459, 1543,
	461, 1543,
	462, 1543,
	463, 1543,
	464, 1543,
	465, 1543,
	466, 1543,
	467, 1543,
	468, 1543,
	470, 1543,
	472, 1543,
	473, 1543,
	474, 1543,
	475, 1543,
	476, 1543,
	477, 1543,
	478, 1543,
	479, 1543,
	480, 1543,
	481, 1543,
	482, 1543,
	483, 1543,
	484, 1543,
	485, 1543,
	486, 1543,
	487, 1543,
	489, 1543,
	490, 1543,
	492, 1543,
	493, 1543,
	495, 1543,
	496, 1543,
	497, 1543,
	498, 1543,
	499, 1543,
	500, 1543,
	501, 1543,
	502, 1543,
	503, 1543,
	505, 1543,
	506, 1543,
	507, 1543,
	508, 1543,
	509, 1543,
	511, 1543,
	513, 1543,
	514, 1543,
	515, 1543,
	516, 1543,
	517, 1543,
	518, 1543,
	520, 1543,
	521, 1543,
	522, 1543,
	523, 1543,
	525, 1543,
	526, 1543,
	529, 1543,
	530, 1543,
	531, 1543,
	532, 1543,
	533, 1543,
	534, 1543,
	535, 1543,
	537, 1543,
	540, 1543,
	541, 1543,
	542, 1543,
	543, 1543,
	544, 1543,
	545, 1543,
	547, 1543,
	548, 1543,
	549, 1543,
	550, 1543,
	552, 1543,
	557, 1543,
	558, 1543,
	559, 1543,
	560, 1543,
	561, 1543,
	562, 1543,
	-2, 0,
	-1, 153,
	1, 1398,
	130, 1398,
	248, 1398,
	328, 1398,
	385, 1398,
	394, 1398,
	566, 1398,
	593, 1398,
	-2, 0,
	-1, 155,
	1, 1398,
	593, 1398,
	-2, 0,
	-1, 156,
	1, 1398,
	593, 1398,
	-2, 0,
	-1, 157,
	1, 1398,
	510, 1398,
	593, 1398,
	-2, 0,
	-1, 186,
	150, 1511,
	169, 1511,
	182, 1511,
	240, 1511,
	273, 1511,
	339, 1511,
	349, 1511,
	527, 1511,
	-2, 1486,
	-1, 232,
	4, 1550,
	5, 1550,
	6, 1550,
	7, 1550,
	8, 1550,
	9, 1550,
	10, 1550,
	21, 1550,
	22, 1550,
	23, 1550,
	24, 1550,
	25, 1550,
	26, 1550,
	27, 1550,
	29, 1550,
	30, 1550,
	36, 1550,
	37, 1550,
	41, 1550,
	42, 1550,
	43, 1550,
	44, 1550,
	45, 1550,
	46, 1550,
	47, 1550,
	48, 1550,
	49, 1550,
	50, 1550,
	51, 1550,
	53, 1550,
	54, 1550,
	55, 1550,
	56, 1550,
	58, 1550,
	59, 1550,
	60, 1550,
	61, 1550,
	62, 1550,
	63, 1550,
	64, 1550,
	65, 1550,
	66, 1550,
	67, 1550,
	68, 1550,
	69, 1550,
	70, 1550,
	71, 1550,
	73, 1550,
	74, 1550,
	75, 1550,
	77, 1550,
	79, 1550,
	80, 1550,
	81, 1550,
	82, 1550,
	83, 1550,
	84, 1550,
	85, 1550,
	88, 1550,
	89, 1550,
	90, 1550,
	91, 1550,
	92, 1550,
	94, 1550,
	96, 1550,
	97, 1550,
	98, 1550,
	99, 1550,
	100, 1550,
	101, 1550,
	103, 1550,
	104, 1550,
	105, 1550,
	106, 1550,
	107, 1550,
	108, 1550,
	109, 1550,
	110, 1550,
	111, 1550,
	112, 1550,
	113, 1550,
	114, 1550,
	115, 1550,
	116, 1550,
	117, 1550,
	118, 1550,
	119, 1550,
	120, 1550,
	121, 1550,
	122, 1550,
	123, 1550,
	124, 1550,
	125, 1550,
	126, 1550,
	127, 1550,
	128, 1550,
	129, 1550,
	131, 1550,
	132, 1550,
	133, 1550,
	135, 1550,
	136, 1550,
	137, 1550,
	140, 1550,
	141, 1550,
	142, 1550,
	144, 1550,
	145, 1550,
	147, 1550,
	148, 1550,
	149, 1550,
	151, 1550,
	152, 1550,
	153, 1550,
	154, 1550,
	155, 1550,
	156, 1550,
	157, 1550,
	158, 1550,
	159, 1550,
	160, 1550,
	161, 1550,
	162, 1550,
	163, 1550,
	164, 1550,
	165, 1550,
	166, 1550,
	167, 1550,
	168, 1550,
	174, 1550,
	175, 1550,
	176, 1550,
	177, 1550,
	181, 1550,
	183, 1550,
	184, 1550,
	187, 1550,
	188, 1550,
	189, 1550,
	190, 1550,
	191, 1550,
	192, 1550,
	193, 1550,
	194, 1550,
	195, 1550,
	196, 1550,
	197, 1550,
	198, 1550,
	199, 1550,
	200, 1550,
	201, 1550,
	203, 1550,
	204, 1550,
	206, 1550,
	207, 1550,
	209, 1550,
	210, 1550,
	211, 1550,
	212, 1550,
	213, 1550,
	214, 1550,
	215, 1550,
	216, 1550,
	217, 1550,
	218, 1550,
	219, 1550,
	220, 1550,
	222, 1550,
	223, 1550,
	224, 1550,
	225, 1550,
	226, 1550,
	230, 1550,
	231, 1550,
	232, 1550,
	233, 1550,
	234, 1550,
	236, 1550,
	237, 1550,
	238, 1550,
	239, 1550,
	241, 1550,
	243, 1550,
	244, 1550,
	245, 1550,
	246, 1550,
	247, 1550,
	248, 1550,
	249, 1550,
	250, 1550,
	251, 1550,
	252, 1550,
	256, 1550,
	257, 1550,
	258, 1550,
	259, 1550,
	260, 1550,
	261, 1550,
	263, 1550,
	264, 1550,
	265, 1550,
	267, 1550,
	268, 1550,
	269, 1550,
	270, 1550,
	271, 1550,
	272, 1550,
	274, 1550,
	278, 1550,
	279, 1550,
	280, 1550,
	281, 1550,
	282, 1550,
	283, 1550,
	284, 1550,
	285, 1550,
	286, 1550,
	288, 1550,
	289, 1550,
	290, 1550,
	291, 1550,
	292, 1550,
	293, 1550,
	294, 1550,
	295, 1550,
	296, 1550,
	297, 1550,
	298, 1550,
	299, 1550,
	300, 1550,
	301, 1550,
	302, 1550,
	303, 1550,
	304, 1550,
	305, 1550,
	306, 1550,
	307, 1550,
	308, 1550,
	309, 1550,
	311, 1550,
	312, 1550,
	313, 1550,
	314, 1550,
	315, 1550,
	316, 1550,
	317, 1550,
	318, 1550,
	319, 1550,
	320, 1550,
	321, 1550,
	322, 1550,
	323, 1550,
	324, 1550,
	325, 1550,
	326, 1550,
	327, 1550,
	328, 1550,
	329, 1550,
	330, 1550,
	331, 1550,
	332, 1550,
	333, 1550,
	334, 1550,
	335, 1550,
	336, 1550,
	337, 1550,
	338, 1550,
	341, 1550,
	345, 1550,
	346, 1550,
	347, 1550,
	350, 1550,
	351, 1550,
	352, 1550,
	353, 1550,
	354, 1550,
	355, 1550,
	356, 1550,
	357, 1550,
	358, 1550,
	359, 1550,
	360, 1550,
	361, 1550,
	362, 1550,
	363, 1550,
	364, 1550,
	365, 1550,
	366, 1550,
	367, 1550,
	369, 1550,
	370, 1550,
	371, 1550,
	372, 1550,
	373, 1550,
	374, 1550,
	375, 1550,
	376, 1550,
	377, 1550,
	378, 1550,
	379, 1550,
	380, 1550,
	381, 1550,
	382, 1550,
	383, 1550,
	385, 1550,
	386, 1550,
	388, 1550,
	389, 1550,
	390, 1550,
	391, 1550,
	392, 1550,
	393, 1550,
	394, 1550,
	395, 1550,
	396, 1550,
	397, 1550,
	398, 1550,
	399, 1550,
	401, 1550,
	403, 1550,
	404, 1550,
	405, 1550,
	410, 1550,
	412, 1550,
	413, 1550,
	414, 1550,
	415, 1550,
	416, 1550,
	417, 1550,
	418, 1550,
	419, 1550,
	420, 1550,
	422, 1550,
	423, 1550,
	424, 1550,
	425, 1550,
	426, 1550,
	427, 1550,
	428, 1550,
	429, 1550,
	430, 1550,
	431, 1550,
	432, 1550,
	434, 1550,
	435, 1550,
	436, 1550,
	437, 1550,
	438, 1550,
	439, 1550,
	440, 1550,
	441, 1550,
	442, 1550,
	443, 1550,
	444, 1550,
	445, 1550,
	447, 1550,
	448, 1550,
	449, 1550,
	450, 1550,
	451, 1550,
	452, 1550,
	453, 1550,
	454, 1550,
	455, 1550,
	456, 1550,
	457, 1550,
	458, 1550,
	459, 1550,
	460, 1550,
	461, 1550,
	462, 1550,
	463, 1550,
	464, 1550,
	465, 1550,
	466, 1550,
	467, 1550,
	468, 1550,
	470, 1550,
	472, 1550,
	473, 1550,
	474, 1550,
	475, 1550,
	476, 1550,
	477, 1550,
	478, 1550,
	479, 1550,
	480, 1550,
	481, 1550,
	482, 1550,
	483, 1550,
	484, 1550,
	485, 1550,
	486, 1550,
	487, 1550,
	489, 1550,
	490, 1550,
	491, 1550,
	492, 1550,
	493, 1550,
	495, 1550,
	496, 1550,
	497, 1550,
	498, 1550,
	499, 1550,
	500, 1550,
	501, 1550,
	502, 1550,
	503, 1550,
	505, 1550,
	506, 1550,
	507, 1550,
	508, 1550,
	509, 1550,
	511, 1550,
	513, 1550,
	514, 1550,
	515, 1550,
	516, 1550,
	517, 1550,
	518, 1550,
	519, 1550,
	520, 1550,
	521, 1550,
	522, 1550,
	523, 1550,
	525, 1550,
	526, 1550,
	528, 1550,
	529, 1550,
	530, 1550,
	531, 1550,
	532, 1550,
	533, 1550,
	534, 1550,
	535, 1550,
	536, 1550,
	537, 1550,
	540, 1550,
	541, 1550,
	542, 1550,
	543, 1550,
	544, 1550,
	545, 1550,
	547, 1550,
	548, 1550,
	549, 1550,
	550, 1550,
	552, 1550,
	557, 1550,
	558, 1550,
	559, 1550,
	560, 1550,
	561, 1550,
	562, 1550,
	563, 1550,
	574, 1550,
	581, 1550,
	582, 1550,
	583, 1550,
	590, 1550,
	594, 1550,
	-2, 0,
	-1, 733,
	4, 1281,
	21, 1281,
	22, 1281,
	23, 1281,
	24, 1281,
	25, 1281,
	26, 1281,
	27, 1281,
	29, 1281,
	30, 1281,
	36, 1281,
	41, 1281,
	42, 1281,
	44, 1281,
	45, 1281,
	46, 1281,
	47, 1281,
	48, 1281,
	49, 1281,
	50, 1281,
	51, 1281,
	53, 1281,
	54, 1281,
	55, 1281,
	56, 1281,
	58, 1281,
	59, 1281,
	60, 1281,
	61, 1281,
	62, 1281,
	63, 1281,
	64, 1281,
	68, 1281,
	69, 1281,
	70, 1281,
	71, 1281,
	73, 1281,
	74, 1281,
	75, 1281,
	79, 1281,
	80, 1281,
	81, 1281,
	82, 1281,
	83, 1281,
	84, 1281,
	85, 1281,
	88, 1281,
	89, 1281,
	90, 1281,
	91, 1281,
	92, 1281,
	94, 1281,
	96, 1281,
	97, 1281,
	98, 1281,
	99, 1281,
	100, 1281,
	101, 1281,
	103, 1281,
	104, 1281,
	105, 1281,
	107, 1281,
	108, 1281,
	109, 1281,
	117, 1281,
	118, 1281,
	119, 1281,
	120, 1281,
	121, 1281,
	123, 1281,
	124, 1281,
	125, 1281,
	127, 1281,
	128, 1281,
	129, 1281,
	131, 1281,
	132, 1281,
	133, 1281,
	135, 1281,
	136, 1281,
	137, 1281,
	140, 1281,
	141, 1281,
	142, 1281,
	144, 1281,
	145, 1281,
	147, 1281,
	148, 1281,
	149, 1281,
	151, 1281,
	152, 1281,
	153, 1281,
	154, 1281,
	155, 1281,
	156, 1281,
	157, 1281,
	158, 1281,
	159, 1281,
	160, 1281,
	161, 1281,
	162, 1281,
	163, 1281,
	164, 1281,
	165, 1281,
	166, 1281,
	168, 1281,
	174, 1281,
	175, 1281,
	176, 1281,
	177, 1281,
	181, 1281,
	183, 1281,
	184, 1281,
	188, 1281,
	189, 1281,
	190, 1281,
	191, 1281,
	192, 1281,
	193, 1281,
	194, 1281,
	195, 1281,
	196, 1281,
	197, 1281,
	198, 1281,
	199, 1281,
	200, 1281,
	201, 1281,
	203, 1281,
	204, 1281,
	206, 1281,
	207, 1281,
	209, 1281,
	210, 1281,
	211, 1281,
	212, 1281,
	213, 1281,
	214, 1281,
	215, 1281,
	216, 1281,
	217, 1281,
	219, 1281,
	220, 1281,
	222, 1281,
	223, 1281,
	224, 1281,
	225, 1281,
	226, 1281,
	230, 1281,
	231, 1281,
	232, 1281,
	233, 1281,
	234, 1281,
	237, 1281,
	238, 1281,
	239, 1281,
	241, 1281,
	243, 1281,
	244, 1281,
	246, 1281,
	248, 1281,
	249, 1281,
	250, 1281,
	252, 1281,
	256, 1281,
	257, 1281,
	258, 1281,
	259, 1281,
	260, 1281,
	261, 1281,
	263, 1281,
	264, 1281,
	265, 1281,
	267, 1281,
	268, 1281,
	270, 1281,
	271, 1281,
	274, 1281,
	278, 1281,
	279, 1281,
	280, 1281,
	283, 1281,
	284, 1281,
	285, 1281,
	286, 1281,
	288, 1281,
	289, 1281,
	290, 1281,
	291, 1281,
	292, 1281,
	293, 1281,
	294, 1281,
	295, 1281,
	296, 1281,
	297, 1281,
	298, 1281,
	299, 1281,
	300, 1281,
	301, 1281,
	302, 1281,
	303, 1281,
	304, 1281,
	305, 1281,
	306, 1281,
	307, 1281,
	308, 1281,
	309, 1281,
	311, 1281,
	313, 1281,
	314, 1281,
	315, 1281,
	316, 1281,
	317, 1281,
	318, 1281,
	319, 1281,
	320, 1281,
	321, 1281,
	322, 1281,
	323, 1281,
	324, 1281,
	326, 1281,
	327, 1281,
	329, 1281,
	331, 1281,
	332, 1281,
	334, 1281,
	335, 1281,
	336, 1281,
	337, 1281,
	338, 1281,
	341, 1281,
	345, 1281,
	346, 1281,
	347, 1281,
	350, 1281,
	351, 1281,
	352, 1281,
	354, 1281,
	356, 1281,
	357, 1281,
	358, 1281,
	359, 1281,
	360, 1281,
	361, 1281,
	362, 1281,
	363, 1281,
	364, 1281,
	365, 1281,
	366, 1281,
	367, 1281,
	369, 1281,
	370, 1281,
	371, 1281,
	372, 1281,
	373, 1281,
	374, 1281,
	375, 1281,
	376, 1281,
	377, 1281,
	378, 1281,
	379, 1281,
	380, 1281,
	381, 1281,
	382, 1281,
	383, 1281,
	385, 1281,
	386, 1281,
	388, 1281,
	389, 1281,
	390, 1281,
	391, 1281,
	392, 1281,
	393, 1281,
	394, 1281,
	395, 1281,
	396, 1281,
	397, 1281,
	398, 1281,
	399, 1281,
	401, 1281,
	403, 1281,
	404, 1281,
	405, 1281,
	410, 1281,
	412, 1281,
	413, 1281,
	414, 1281,
	415, 1281,
	416, 1281,
	417, 1281,
	418, 1281,
	419, 1281,
	420, 1281,
	422, 1281,
	423, 1281,
	424, 1281,
	426, 1281,
	427, 1281,
	428, 1281,
	429, 1281,
	430, 1281,
	431, 1281,
	432, 1281,
	434, 1281,
	435, 1281,
	436, 1281,
	437, 1281,
	438, 1281,
	439, 1281,
	440, 1281,
	441, 1281,
	442, 1281,
	443, 1281,
	444, 1281,
	445, 1281,
	447, 1281,
	448, 1281,
	449, 1281,
	450, 1281,
	451, 1281,
	452, 1281,
	454, 1281,
	455, 1281,
	456, 1281,
	457, 1281,
	458, 1281,
	459, 1281,
	461, 1281,
	462, 1281,
	463, 1281,
	464, 1281,
	465, 1281,
	466, 1281,
	467, 1281,
	468, 1281,
	470, 1281,
	472, 1281,
	473, 1281,
	474, 1281,
	475, 1281,
	476, 1281,
	477, 1281,
	478, 1281,
	479, 1281,
	480, 1281,
	481, 1281,
	482, 1281,
	483, 1281,
	484, 1281,
	485, 1281,
	486, 1281,
	487, 1281,
	489, 1281,
	490, 1281,
	492, 1281,
	493, 1281,
	495, 1281,
	496, 1281,
	497, 1281,
	498, 1281,
	499, 1281,
	500, 1281,
	501, 1281,
	502, 1281,
	503, 1281,
	505, 1281,
	506, 1281,
	507, 1281,
	508, 1281,
	509, 1281,
	511, 1281,
	513, 1281,
	514, 1281,
	515, 1281,
	516, 1281,
	517, 1281,
	518, 1281,
	520, 1281,
	521, 1281,
	522, 1281,
	523, 1281,
	525, 1281,
	526, 1281,
	529, 1281,
	530, 1281,
	531, 1281,
	532, 1281,
	533, 1281,
	534, 1281,
	535, 1281,
	537, 1281,
	540, 1281,
	541, 1281,
	542, 1281,
	543, 1281,
	544, 1281,
	545, 1281,
	547, 1281,
	548, 1281,
	549, 1281,
	550, 1281,
	552, 1281,
	557, 1281,
	558, 1281,
	559, 1281,
	560, 1281,
	561, 1281,
	562, 1281,
	-2, 0,
	-1, 752,
	186, 2335,
	510, 2335,
	573, 2335,
	592, 2335,
	-2, 0,
	-1, 753,
	186, 2442,
	510, 2442,
	573, 2442,
	592, 2442,
	-2, 0,
	-1, 754,
	186, 2322,
	510, 2322,
	573, 2322,
	592, 2322,
	-2, 0,
	-1, 756,
	186, 2575,
	510, 2575,
	573, 2575,
	592, 2575,
	-2, 0,
	-1, 758,
	186, 2616,
	510, 2616,
	573, 2616,
	592, 2616,
	-2, 0,
	-1, 766,
	186, 2469,
	510, 2469,
	573, 2469,
	592, 2469,
	-2, 689,
	-1, 801,
	592, 2271,
	595, 2271,
	-2, 975,
	-1, 802,
	592, 2273,
	595, 2273,
	-2, 976,
	-1, 803,
	592, 2272,
	595, 2272,
	-2, 977,
	-1, 804,
	595, 2197,
	-2, 978,
	-1, 827,
	182, 253,
	-2, 0,
	-1, 851,
	43, 2244,
	-2, 0,
	-1, 852,
	547, 1259,
	-2, 1045,
	-1, 868,
	4, 1679,
	21, 1679,
	22, 1679,
	23, 1679,
	24, 1679,
	25, 1679,
	26, 1679,
	27, 1679,
	29, 1679,
	30, 1679,
	36, 1679,
	41, 1679,
	42, 1679,
	44, 1679,
	45, 1679,
	46, 1679,
	47, 1679,
	48, 1679,
	49, 1679,
	50, 1679,
	51, 1679,
	53, 1679,
	54, 1679,
	55, 1679,
	56, 1679,
	58, 1679,
	59, 1679,
	60, 1679,
	61, 1679,
	62, 1679,
	63, 1679,
	64, 1679,
	68, 1679,
	69, 1679,
	70, 1679,
	71, 1679,
	73, 1679,
	74, 1679,
	75, 1679,
	79, 1679,
	80, 1679,
	81, 1679,
	82, 1679,
	83, 1679,
	84, 1679,
	85, 1679,
	88, 1679,
	89, 1679,
	90, 1679,
	91, 1679,
	92, 1679,
	94, 1679,
	96, 1679,
	97, 1679,
	98, 1679,
	99, 1679,
	100, 1679,
	101, 1679,
	103, 1679,
	104, 1679,
	105, 1679,
	107, 1679,
	108, 1679,
	109, 1679,
	117, 1679,
	118, 1679,
	119, 1679,
	120, 1679,
	121, 1679,
	123, 1679,
	124, 1679,
	125, 1679,
	127, 1679,
	128, 1679,
	129, 1679,
	131, 1679,
	132, 1679,
	133, 1679,
	135, 1679,
	136, 1679,
	137, 1679,
	140, 1679,
	141, 1679,
	142, 1679,
	144, 1679,
	145, 1679,
	147, 1679,
	148, 1679,
	149, 1679,
	151, 1679,
	152, 1679,
	153, 1679,
	154, 1679,
	155, 1679,
	156, 1679,
	157, 1679,
	158, 1679,
	159, 1679,
	160, 1679,
	161, 1679,
	162, 1679,
	163, 1679,
	164, 1679,
	165, 1679,
	166, 1679,
	168, 1679,
	174, 1679,
	175, 1679,
	176, 1679,
	177, 1679,
	181, 1679,
	183, 1679,
	184, 1679,
	188, 1679,
	189, 1679,
	190, 1679,
	191, 1679,
	192, 1679,
	193, 1679,
	194, 1679,
	195, 1679,
	196, 1679,
	197, 1679,
	198, 1679,
	199, 1679,
	200, 1679,
	201, 1679,
	203, 1679,
	204, 1679,
	206, 1679,
	207, 1679,
	209, 1679,
	210, 1679,
	211, 1679,
	212, 1679,
	213, 1679,
	214, 1679,
	215, 1679,
	216, 1679,
	217, 1679,
	219, 1679,
	220, 1679,
	222, 1679,
	223, 1679,
	224, 1679,
	225, 1679,
	226, 1679,
	230, 1679,
	231, 1679,
	232, 1679,
	233, 1679,
	234, 1679,
	237, 1679,
	238, 1679,
	239, 1679,
	241, 1679,
	243, 1679,
	244, 1679,
	246, 1679,
	248, 1679,
	249, 1679,
	250, 1679,
	252, 1679,
	256, 1679,
	257, 1679,
	258, 1679,
	259, 1679,
	260, 1679,
	261, 1679,
	263, 1679,
	264, 1679,
	265, 1679,
	267, 1679,
	268, 1679,
	270, 1679,
	271, 1679,
	274, 1679,
	278, 1679,
	279, 1679,
	280, 1679,
	283, 1679,
	284, 1679,
	285, 1679,
	286, 1679,
	288, 1679,
	289, 1679,
	290, 1679,
	291, 1679,
	292, 1679,
	293, 1679,
	294, 1679,
	295, 1679,
	296, 1679,
	297, 1679,
	298, 1679,
	299, 1679,
	300, 1679,
	301, 1679,
	302, 1679,
	303, 1679,
	304, 1679,
	305, 1679,
	306, 1679,
	307, 1679,
	308, 1679,
	309, 1679,
	311, 1679,
	313, 1679,
	314, 1679,
	315, 1679,
	316, 1679,
	317, 1679,
	318, 1679,
	319, 1679,
	320, 1679,
	321, 1679,
	322, 1679,
	323, 1679,
	324, 1679,
	326, 1679,
	327, 1679,
	329, 1679,
	331, 1679,
	332, 1679,
	334, 1679,
	335, 1679,
	336, 1679,
	337, 1679,
	338, 1679,
	341, 1679,
	345, 1679,
	346, 1679,
	347, 1679,
	350, 1679,
	351, 1679,
	352, 1679,
	354, 1679,
	356, 1679,
	357, 1679,
	358, 1679,
	359, 1679,
	360, 1679,
	361, 1679,
	362, 1679,
	363, 1679,
	364, 1679,
	365, 1679,
	366, 1679,
	367, 1679,
	369, 1679,
	370, 1679,
	371, 1679,
	372, 1679,
	373, 1679,
	374, 1679,
	375, 1679,
	376, 1679,
	377, 1679,
	378, 1679,
	379, 1679,
	380, 1679,
	381, 1679,
	382, 1679,
	383, 1679,
	385, 1679,
	386, 1679,
	388, 1679,
	389, 1679,
	390, 1679,
	391, 1679,
	392, 1679,
	393, 1679,
	394, 1679,
	395, 1679,
	396, 1679,
	397, 1679,
	398, 1679,
	399, 1679,
	401, 1679,
	403, 1679,
	404, 1679,
	405, 1679,
	410, 1679,
	412, 1679,
	413, 1679,
	414, 1679,
	415, 1679,
	416, 1679,
	417, 1679,
	418, 1679,
	419, 1679,
	420, 1679,
	422, 1679,
	423, 1679,
	424, 1679,
	426, 1679,
	427, 1679,
	428, 1679,
	429, 1679,
	430, 1679,
	431, 1679,
	432, 1679,
	434, 1679,
	435, 1679,
	436, 1679,
	437, 1679,
	438, 1679,
	439, 1679,
	440, 1679,
	441, 1679,
	442, 1679,
	443, 1679,
	444, 1679,
	445, 1679,
	447, 1679,
	448, 1679,
	449, 1679,
	450, 1679,
	451, 1679,
	452, 1679,
	454, 1679,
	455, 1679,
	456, 1679,
	457, 1679,
	458, 1679,
	459, 1679,
	461, 1679,
	462, 1679,
	463, 1679,
	464, 1679,
	465, 1679,
	466, 1679,
	467, 1679,
	468, 1679,
	470, 1679,
	472, 1679,
	473, 1679,
	474, 1679,
	475, 1679,
	476, 1679,
	477, 1679,
	478, 1679,
	479, 1679,
	480, 1679,
	481, 1679,
	482, 1679,
	483, 1679,
	484, 1679,
	485, 1679,
	486, 1679,
	487, 1679,
	489, 1679,
	490, 1679,
	492, 1679,
	493, 1679,
	495, 1679,
	496, 1679,
	497, 1679,
	498, 1679,
	499, 1679,
	500, 1679,
	501, 1679,
	502, 1679,
	503, 1679,
	505, 1679,
	506, 1679,
	507, 1679,
	508, 1679,
	509, 1679,
	511, 1679,
	513, 1679,
	514, 1679,
	515, 1679,
	516, 1679,
	517, 1679,
	518, 1679,
	520, 1679,
	521, 1679,
	522, 1679,
	523, 1679,
	525, 1679,
	526, 1679,
	529, 1679,
	530, 1679,
	531, 1679,
	532, 1679,
	533, 1679,
	534, 1679,
	535, 1679,
	537, 1679,
	540, 1679,
	541, 1679,
	542, 1679,
	543, 1679,
	544, 1679,
	545, 1679,
	547, 1679,
	548, 1679,
	549, 1679,
	550, 1679,
	552, 1679,
	557, 1679,
	558, 1679,
	559, 1679,
	560, 1679,
	561, 1679,
	562, 1679,
	-2, 0,
	-1, 878,
	260, 400,
	-2, 0,
	-1, 950,
	390, 858,
	452, 858,
	493, 858,
	515, 858,
	-2, 0,
	-1, 951,
	390, 857,
	452, 857,
	493, 857,
	515, 857,
	-2, 797,
	-1, 955,
	1, 909,
	589, 909,
	591, 909,
	593, 909,
	-2, 0,
	-1, 956,
	1, 832,
	589, 832,
	591, 832,
	593, 832,
	-2, 0,
	-1, 957,
	1, 836,
	589, 836,
	591, 836,
	593, 836,
	-2, 0,
	-1, 958,
	1, 974,
	182, 974,
	589, 974,
	591, 974,
	593, 974,
	-2, 0,
	-1, 966,
	1, 863,
	589, 863,
	591, 863,
	593, 863,
	-2, 0,
	-1, 973,
	1, 909,
	589, 909,
	591, 909,
	593, 909,
	-2, 0,
	-1, 974,
	1, 911,
	589, 911,
	591, 911,
	593, 911,
	-2, 0,
	-1, 975,
	1, 914,
	589, 914,
	591, 914,
	593, 914,
	-2, 0,
	-1, 981,
	1, 938,
	589, 938,
	591, 938,
	593, 938,
	-2, 0,
	-1, 982,
	1, 940,
	589, 940,
	591, 940,
	593, 940,
	-2, 0,
	-1, 987,
	1, 968,
	589, 968,
	591, 968,
	593, 968,
	-2, 0,
	-1, 1035,
	169, 1554,
	182, 1554,
	273, 1554,
	339, 1554,
	-2, 1490,
	-1, 1050,
	169, 1553,
	182, 1553,
	273, 1553,
	339, 1553,
	-2, 1487,
	-1, 1077,
	592, 2270,
	-2, 697,
	-1, 1106,
	5, 2262,
	590, 2260,
	-2, 2251,
	-1, 1114,
	5, 2283,
	590, 2280,
	-2, 2271,
	-1, 1115,
	5, 2284,
	590, 2281,
	-2, 2272,
	-1, 1123,
	592, 2268,
	-2, 2250,
	-1, 1124,
	590, 2699,
	-2, 2269,
	-1, 1147,
	590, 2698,
	-2, 2285,
	-1, 1148,
	5, 1754,
	-2, 2669,
	-1, 1149,
	5, 1755,
	-2, 2670,
	-1, 1150,
	5, 1756,
	-2, 2684,
	-1, 1151,
	5, 1757,
	-2, 2648,
	-1, 1152,
	5, 1758,
	-2, 2682,
	-1, 1153,
	5, 1766,
	-2, 2661,
	-1, 1154,
	5, 1753,
	-2, 2657,
	-1, 1155,
	5, 1753,
	-2, 2656,
	-1, 1156,
	5, 1753,
	-2, 2675,
	-1, 1157,
	5, 1764,
	-2, 2650,
	-1, 1158,
	5, 1769,
	-2, 2649,
	-1, 1159,
	5, 1771,
	-2, 2694,
	-1, 1162,
	5, 1793,
	-2, 2687,
	-1, 1163,
	5, 1785,
	-2, 2688,
	-1, 1164,
	5, 1793,
	-2, 2689,
	-1, 1165,
	5, 1789,
	-2, 2690,
	-1, 1166,
	5, 1739,
	-2, 2662,
	-1, 1167,
	5, 1740,
	-2, 2663,
	-1, 1168,
	5, 1741,
	-2, 2651,
	-1, 1196,
	5, 1776,
	-2, 2695,
	-1, 1197,
	5, 1777,
	-2, 2685,
	-1, 1198,
	5, 1778,
	548, 1778,
	-2, 2652,
	-1, 1199,
	5, 1779,
	548, 1779,
	-2, 2653,
	-1, 1236,
	590, 2280,
	-2, 2271,
	-1, 1237,
	590, 2281,
	-2, 2272,
	-1, 1337,
	186, 2616,
	510, 2616,
	573, 2616,
	592, 2616,
	-2, 0,
	-1, 1340,
	1, 674,
	593, 674,
	-2, 1406,
	-1, 1468,
	358, 2245,
	412, 2245,
	454, 2245,
	583, 2245,
	-2, 2235,
	-1, 1479,
	594, 2245,
	-2, 2247,
	-1, 1487,
	1, 1256,
	417, 1220,
	454, 1220,
	568, 1220,
	589, 1256,
	591, 1256,
	593, 1256,
	-2, 1539,
	-1, 1493,
	202, 1351,
	221, 1351,
	424, 1351,
	-2, 0,
	-1, 1538,
	397, 1044,
	547, 1044,
	-2, 395,
	-1, 1555,
	43, 2243,
	-2, 1010,
	-1, 1562,
	1, 1256,
	589, 1256,
	591, 1256,
	593, 1256,
	-2, 1539,
	-1, 1570,
	4, 1281,
	21, 1281,
	22, 1281,
	23, 1281,
	24, 1281,
	25, 1281,
	26, 1281,
	27, 1281,
	29, 1281,
	30, 1281,
	36, 1281,
	41, 1281,
	42, 1281,
	44, 1281,
	45, 1281,
	46, 1281,
	47, 1281,
	48, 1281,
	49, 1281,
	50, 1281,
	51, 1281,
	53, 1281,
	54, 1281,
	55, 1281,
	56, 1281,
	58, 1281,
	59, 1281,
	60, 1281,
	61, 1281,
	62, 1281,
	63, 1281,
	64, 1281,
	68, 1281,
	69, 1281,
	70, 1281,
	71, 1281,
	73, 1281,
	74, 1281,
	75, 1281,
	79, 1281,
	80, 1281,
	81, 1281,
	82, 1281,
	83, 1281,
	84, 1281,
	85, 1281,
	88, 1281,
	89, 1281,
	90, 1281,
	91, 1281,
	92, 1281,
	94, 1281,
	96, 1281,
	97, 1281,
	98, 1281,
	99, 1281,
	100, 1281,
	101, 1281,
	103, 1281,
	104, 1281,
	105, 1281,
	107, 1281,
	108, 1281,
	109, 1281,
	117, 1281,
	118, 1281,
	119, 1281,
	120, 1281,
	121, 1281,
	123, 1281,
	124, 1281,
	125, 1281,
	127, 1281,
	128, 1281,
	129, 1281,
	131, 1281,
	132, 1281,
	133, 1281,
	135, 1281,
	136, 1281,
	137, 1281,
	140, 1281,
	141, 1281,
	142, 1281,
	144, 1281,
	145, 1281,
	147, 1281,
	148, 1281,
	149, 1281,
	151, 1281,
	152, 1281,
	153, 1281,
	154, 1281,
	155, 1281,
	156, 1281,
	157, 1281,
	158, 1281,
	159, 1281,
	160, 1281,
	161, 1281,
	162, 1281,
	163, 1281,
	164, 1281,
	165, 1281,
	166, 1281,
	174, 1281,
	175, 1281,
	176, 1281,
	177, 1281,
	181, 1281,
	183, 1281,
	184, 1281,
	188, 1281,
	189, 1281,
	190, 1281,
	191, 1281,
	192, 1281,
	193, 1281,
	194, 1281,
	195, 1281,
	196, 1281,
	197, 1281,
	198, 1281,
	199, 1281,
	200, 1281,
	201, 1281,
	203, 1281,
	204, 1281,
	206, 1281,
	207, 1281,
	209, 1281,
	210, 1281,
	211, 1281,
	212, 1281,
	213, 1281,
	214, 1281,
	215, 1281,
	216, 1281,
	217, 1281,
	219, 1281,
	220, 1281,
	222, 1281,
	223, 1281,
	224, 1281,
	225, 1281,
	226, 1281,
	231, 1281,
	232, 1281,
	233, 1281,
	234, 1281,
	237, 1281,
	238, 1281,
	239, 1281,
	241, 1281,
	243, 1281,
	244, 1281,
	246, 1281,
	248, 1281,
	249, 1281,
	250, 1281,
	252, 1281,
	256, 1281,
	257, 1281,
	258, 1281,
	259, 1281,
	260, 1281,
	261, 1281,
	263, 1281,
	264, 1281,
	265, 1281,
	267, 1281,
	268, 1281,
	270, 1281,
	271, 1281,
	274, 1281,
	278, 1281,
	279, 1281,
	280, 1281,
	283, 1281,
	284, 1281,
	285, 1281,
	286, 1281,
	288, 1281,
	289, 1281,
	290, 1281,
	291, 1281,
	292, 1281,
	293, 1281,
	294, 1281,
	295, 1281,
	296, 1281,
	297, 1281,
	298, 1281,
	299, 1281,
	300, 1281,
	301, 1281,
	302, 1281,
	303, 1281,
	304, 1281,
	305, 1281,
	306, 1281,
	307, 1281,
	308, 1281,
	309, 1281,
	311, 1281,
	313, 1281,
	314, 1281,
	315, 1281,
	316, 1281,
	317, 1281,
	318, 1281,
	319, 1281,
	320, 1281,
	321, 1281,
	322, 1281,
	323, 1281,
	324, 1281,
	326, 1281,
	327, 1281,
	331, 1281,
	332, 1281,
	334, 1281,
	335, 1281,
	336, 1281,
	337, 1281,
	338, 1281,
	341, 1281,
	343, 1281,
	345, 1281,
	346, 1281,
	347, 1281,
	350, 1281,
	351, 1281,
	352, 1281,
	354, 1281,
	356, 1281,
	357, 1281,
	358, 1281,
	359, 1281,
	360, 1281,
	361, 1281,
	362, 1281,
	363, 1281,
	364, 1281,
	365, 1281,
	366, 1281,
	367, 1281,
	369, 1281,
	370, 1281,
	371, 1281,
	372, 1281,
	373, 1281,
	374, 1281,
	375, 1281,
	376, 1281,
	377, 1281,
	378, 1281,
	379, 1281,
	380, 1281,
	381, 1281,
	382, 1281,
	383, 1281,
	385, 1281,
	386, 1281,
	388, 1281,
	389, 1281,
	390, 1281,
	391, 1281,
	392, 1281,
	393, 1281,
	394, 1281,
	395, 1281,
	396, 1281,
	397, 1281,
	398, 1281,
	399, 1281,
	401, 1281,
	403, 1281,
	404, 1281,
	405, 1281,
	410, 1281,
	412, 1281,
	413, 1281,
	414, 1281,
	415, 1281,
	416, 1281,
	417, 1281,
	418, 1281,
	419, 1281,
	420, 1281,
	422, 1281,
	423, 1281,
	424, 1281,
	426, 1281,
	427, 1281,
	428, 1281,
	429, 1281,
	430, 1281,
	431, 1281,
	432, 1281,
	434, 1281,
	435, 1281,
	436, 1281,
	437, 1281,
	438, 1281,
	439, 1281,
	440, 1281,
	441, 1281,
	442, 1281,
	443, 1281,
	444, 1281,
	445, 1281,
	447, 1281,
	448, 1281,
	449, 1281,
	450, 1281,
	451, 1281,
	452, 1281,
	454, 1281,
	455, 1281,
	456, 1281,
	457, 1281,
	458, 1281,
	459, 1281,
	461, 1281,
	462, 1281,
	463, 1281,
	464, 1281,
	465, 1281,
	466, 1281,
	467, 1281,
	468, 1281,
	470, 1281,
	472, 1281,
	473, 1281,
	474, 1281,
	475, 1281,
	476, 1281,
	477, 1281,
	478, 1281,
	479, 1281,
	480, 1281,
	481, 1281,
	482, 1281,
	483, 1281,
	484, 1281,
	485, 1281,
	486, 1281,
	487, 1281,
	489, 1281,
	490, 1281,
	492, 1281,
	493, 1281,
	495, 1281,
	496, 1281,
	497, 1281,
	498, 1281,
	499, 1281,
	500, 1281,
	501, 1281,
	502, 1281,
	503, 1281,
	505, 1281,
	506, 1281,
	507, 1281,
	508, 1281,
	509, 1281,
	511, 1281,
	513, 1281,
	514, 1281,
	515, 1281,
	516, 1281,
	517, 1281,
	518, 1281,
	520, 1281,
	521, 1281,
	522, 1281,
	523, 1281,
	525, 1281,
	526, 1281,
	529, 1281,
	530, 1281,
	531, 1281,
	532, 1281,
	533, 1281,
	534, 1281,
	535, 1281,
	537, 1281,
	540, 1281,
	541, 1281,
	542, 1281,
	543, 1281,
	544, 1281,
	545, 1281,
	547, 1281,
	548, 1281,
	549, 1281,
	550, 1281,
	552, 1281,
	557, 1281,
	558, 1281,
	559, 1281,
	560, 1281,
	561, 1281,
	562, 1281,
	-2, 0,
	-1, 1593,
	1, 540,
	589, 540,
	591, 540,
	593, 540,
	-2, 1510,
	-1, 1596,
	4, 2693,
	11, 2693,
	12, 2693,
	14, 2693,
	15, 2693,
	16, 2693,
	17, 2693,
	18, 2693,
	19, 2693,
	21, 2693,
	22, 2693,
	23, 2693,
	24, 2693,
	25, 2693,
	26, 2693,
	27, 2693,
	29, 2693,
	30, 2693,
	33, 2693,
	34, 2693,
	36, 2693,
	38, 2693,
	41, 2693,
	42, 2693,
	44, 2693,
	45, 2693,
	46, 2693,
	47, 2693,
	48, 2693,
	49, 2693,
	50, 2693,
	51, 2693,
	53, 2693,
	54, 2693,
	55, 2693,
	56, 2693,
	58, 2693,
	59, 2693,
	60, 2693,
	61, 2693,
	62, 2693,
	63, 2693,
	64, 2693,
	67, 2693,
	68, 2693,
	69, 2693,
	70, 2693,
	71, 2693,
	73, 2693,
	74, 2693,
	75, 2693,
	76, 2693,
	79, 2693,
	80, 2693,
	81, 2693,
	82, 2693,
	83, 2693,
	84, 2693,
	85, 2693,
	86, 2693,
	88, 2693,
	89, 2693,
	90, 2693,
	91, 2693,
	92, 2693,
	94, 2693,
	95, 2693,
	96, 2693,
	97, 2693,
	98, 2693,
	99, 2693,
	100, 2693,
	101, 2693,
	103, 2693,
	104, 2693,
	105, 2693,
	106, 2693,
	107, 2693,
	108, 2693,
	109, 2693,
	117, 2693,
	118, 2693,
	119, 2693,
	120, 2693,
	121, 2693,
	123, 2693,
	124, 2693,
	125, 2693,
	127, 2693,
	128, 2693,
	129, 2693,
	131, 2693,
	132, 2693,
	133, 2693,
	135, 2693,
	136, 2693,
	137, 2693,
	140, 2693,
	141, 2693,
	142, 2693,
	144, 2693,
	145, 2693,
	147, 2693,
	148, 2693,
	149, 2693,
	151, 2693,
	152, 2693,
	153, 2693,
	154, 2693,
	155, 2693,
	156, 2693,
	157, 2693,
	158, 2693,
	159, 2693,
	160, 2693,
	161, 2693,
	162, 2693,
	163, 2693,
	164, 2693,
	165, 2693,
	166, 2693,
	170, 2693,
	171, 2693,
	172, 2693,
	173, 2693,
	174, 2693,
	175, 2693,
	176, 2693,
	177, 2693,
	180, 2693,
	181, 2693,
	183, 2693,
	184, 2693,
	187, 2693,
	188, 2693,
	189, 2693,
	190, 2693,
	191, 2693,
	192, 2693,
	193, 2693,
	194, 2693,
	195, 2693,
	196, 2693,
	197, 2693,
	198, 2693,
	199, 2693,
	200, 2693,
	201, 2693,
	203, 2693,
	204, 2693,
	206, 2693,
	207, 2693,
	209, 2693,
	210, 2693,
	211, 2693,
	212, 2693,
	213, 2693,
	214, 2693,
	215, 2693,
	216, 2693,
	217, 2693,
	218, 2693,
	219, 2693,
	220, 2693,
	221, 2693,
	222, 2693,
	223, 2693,
	224, 2693,
	225, 2693,
	226, 2693,
	228, 2693,
	229, 2693,
	231, 2693,
	232, 2693,
	233, 2693,
	234, 2693,
	236, 2693,
	237, 2693,
	238, 2693,
	239, 2693,
	241, 2693,
	243, 2693,
	244, 2693,
	245, 2693,
	246, 2693,
	247, 2693,
	248, 2693,
	249, 2693,
	250, 2693,
	251, 2693,
	252, 2693,
	254, 2693,
	255, 2693,
	256, 2693,
	257, 2693,
	258, 2693,
	259, 2693,
	260, 2693,
	261, 2693,
	263, 2693,
	264, 2693,
	265, 2693,
	267, 2693,
	268, 2693,
	269, 2693,
	270, 2693,
	271, 2693,
	272, 2693,
	274, 2693,
	278, 2693,
	279, 2693,
	280, 2693,
	283, 2693,
	284, 2693,
	285, 2693,
	286, 2693,
	287, 2693,
	288, 2693,
	289, 2693,
	290, 2693,
	291, 2693,
	292, 2693,
	293, 2693,
	294, 2693,
	295, 2693,
	296, 2693,
	297, 2693,
	298, 2693,
	299, 2693,
	300, 2693,
	301, 2693,
	302, 2693,
	303, 2693,
	304, 2693,
	305, 2693,
	306, 2693,
	307, 2693,
	308, 2693,
	309, 2693,
	311, 2693,
	312, 2693,
	313, 2693,
	314, 2693,
	315, 2693,
	316, 2693,
	317, 2693,
	318, 2693,
	319, 2693,
	320, 2693,
	321, 2693,
	322, 2693,
	323, 2693,
	324, 2693,
	326, 2693,
	327, 2693,
	330, 2693,
	331, 2693,
	332, 2693,
	334, 2693,
	335, 2693,
	336, 2693,
	337, 2693,
	338, 2693,
	341, 2693,
	345, 2693,
	346, 2693,
	347, 2693,
	348, 2693,
	350, 2693,
	351, 2693,
	352, 2693,
	354, 2693,
	356, 2693,
	357, 2693,
	358, 2693,
	359, 2693,
	360, 2693,
	361, 2693,
	362, 2693,
	363, 2693,
	364, 2693,
	365, 2693,
	366, 2693,
	367, 2693,
	369, 2693,
	370, 2693,
	371, 2693,
	372, 2693,
	373, 2693,
	374, 2693,
	375, 2693,
	376, 2693,
	377, 2693,
	378, 2693,
	379, 2693,
	380, 2693,
	381, 2693,
	382, 2693,
	383, 2693,
	385, 2693,
	386, 2693,
	388, 2693,
	389, 2693,
	390, 2693,
	391, 2693,
	392, 2693,
	393, 2693,
	394, 2693,
	395, 2693,
	396, 2693,
	397, 2693,
	398, 2693,
	399, 2693,
	401, 2693,
	403, 2693,
	404, 2693,
	405, 2693,
	410, 2693,
	411, 2693,
	412, 2693,
	413, 2693,
	414, 2693,
	415, 2693,
	416, 2693,
	417, 2693,
	418, 2693,
	419, 2693,
	420, 2693,
	422, 2693,
	423, 2693,
	424, 2693,
	425, 2693,
	426, 2693,
	427, 2693,
	428, 2693,
	429, 2693,
	430, 2693,
	431, 2693,
	432, 2693,
	433, 2693,
	434, 2693,
	435, 2693,
	436, 2693,
	437, 2693,
	438, 2693,
	439, 2693,
	440, 2693,
	441, 2693,
	442, 2693,
	443, 2693,
	444, 2693,
	445, 2693,
	447, 2693,
	448, 2693,
	449, 2693,
	450, 2693,
	451, 2693,
	452, 2693,
	454, 2693,
	455, 2693,
	456, 2693,
	457, 2693,
	458, 2693,
	459, 2693,
	460, 2693,
	461, 2693,
	462, 2693,
	463, 2693,
	464, 2693,
	465, 2693,
	466, 2693,
	467, 2693,
	468, 2693,
	470, 2693,
	472, 2693,
	473, 2693,
	474, 2693,
	475, 2693,
	476, 2693,
	477, 2693,
	478, 2693,
	479, 2693,
	480, 2693,
	481, 2693,
	482, 2693,
	483, 2693,
	484, 2693,
	485, 2693,
	486, 2693,
	487, 2693,
	489, 2693,
	490, 2693,
	491, 2693,
	492, 2693,
	493, 2693,
	495, 2693,
	496, 2693,
	497, 2693,
	498, 2693,
	499, 2693,
	500, 2693,
	501, 2693,
	502, 2693,
	503, 2693,
	505, 2693,
	506, 2693,
	507, 2693,
	508, 2693,
	509, 2693,
	511, 2693,
	513, 2693,
	514, 2693,
	515, 2693,
	516, 2693,
	517, 2693,
	518, 2693,
	520, 2693,
	521, 2693,
	522, 2693,
	523, 2693,
	525, 2693,
	526, 2693,
	529, 2693,
	530, 2693,
	531, 2693,
	532, 2693,
	533, 2693,
	534, 2693,
	535, 2693,
	537, 2693,
	540, 2693,
	541, 2693,
	542, 2693,
	543, 2693,
	544, 2693,
	545, 2693,
	547, 2693,
	548, 2693,
	549, 2693,
	550, 2693,
	552, 2693,
	557, 2693,
	558, 2693,
	559, 2693,
	560, 2693,
	561, 2693,
	562, 2693,
	563, 2693,
	565, 2693,
	571, 2693,
	572, 2693,
	573, 2693,
	574, 2693,
	575, 2693,
	576, 2693,
	578, 2693,
	579, 2693,
	580, 2693,
	581, 2693,
	582, 2693,
	583, 2693,
	584, 2693,
	585, 2693,
	586, 2693,
	588, 2693,
	591, 2693,
	592, 2693,
	594, 2693,
	595, 2693,
	-2, 0,
	-1, 1601,
	186, 2575,
	510, 2575,
	573, 2575,
	592, 2575,
	-2, 0,
	-1, 1650,
	390, 858,
	452, 858,
	493, 858,
	515, 858,
	-2, 0,
	-1, 1677,
	1, 853,
	589, 853,
	591, 853,
	593, 853,
	-2, 0,
	-1, 1678,
	1, 896,
	589, 896,
	591, 896,
	593, 896,
	-2, 0,
	-1, 1679,
	1, 904,
	589, 904,
	591, 904,
	593, 904,
	-2, 0,
	-1, 1682,
	1, 862,
	589, 862,
	591, 862,
	593, 862,
	-2, 0,
	-1, 1684,
	1, 868,
	589, 868,
	591, 868,
	593, 868,
	-2, 0,
	-1, 1687,
	1, 864,
	589, 864,
	591, 864,
	593, 864,
	-2, 0,
	-1, 1692,
	1, 878,
	589, 878,
	591, 878,
	593, 878,
	-2, 0,
	-1, 1723,
	1, 2558,
	589, 2558,
	591, 2558,
	592, 2558,
	593, 2558,
	-2, 0,
	-1, 1727,
	1, 949,
	589, 949,
	591, 949,
	593, 949,
	-2, 0,
	-1, 1742,
	1, 1401,
	593, 1401,
	-2, 1406,
	-1, 1745,
	169, 1553,
	182, 1553,
	273, 1553,
	339, 1553,
	-2, 1491,
	-1, 1845,
	150, 1512,
	169, 1512,
	182, 1512,
	240, 1512,
	273, 1512,
	339, 1512,
	349, 1512,
	527, 1512,
	-2, 1958,
	-1, 1905,
	591, 2131,
	-2, 0,
	-1, 1940,
	150, 1512,
	169, 1512,
	182, 1512,
	240, 1512,
	273, 1512,
	339, 1512,
	349, 1512,
	527, 1512,
	-2, 1640,
	-1, 1975,
	510, 2572,
	592, 2572,
	595, 2572,
	-2, 0,
	-1, 1992,
	590, 1781,
	-2, 1769,
	-1, 2024,
	186, 2572,
	592, 2572,
	595, 2572,
	-2, 0,
	-1, 2072,
	1, 676,
	593, 676,
	-2, 1406,
	-1, 2205,
	221, 254,
	-2, 2279,
	-1, 2206,
	221, 255,
	-2, 303,
	-1, 2310,
	1, 855,
	589, 855,
	591, 855,
	593, 855,
	-2, 0,
	-1, 2311,
	1, 898,
	589, 898,
	591, 898,
	593, 898,
	-2, 0,
	-1, 2312,
	1, 906,
	589, 906,
	591, 906,
	593, 906,
	-2, 0,
	-1, 2313,
	1, 951,
	589, 951,
	591, 951,
	593, 951,
	-2, 0,
	-1, 2350,
	1, 880,
	589, 880,
	591, 880,
	593, 880,
	-2, 0,
	-1, 2368,
	1, 934,
	589, 934,
	591, 934,
	593, 934,
	-2, 0,
	-1, 2413,
	431, 1580,
	432, 1580,
	-2, 1814,
	-1, 2444,
	14, 0,
	15, 0,
	16, 0,
	571, 0,
	572, 0,
	573, 0,
	-2, 1834,
	-1, 2445,
	14, 0,
	15, 0,
	16, 0,
	571, 0,
	572, 0,
	573, 0,
	-2, 1835,
	-1, 2446,
	95, 0,
	254, 0,
	255, 0,
	575, 0,
	576, 0,
	-2, 1836,
	-1, 2447,
	95, 0,
	254, 0,
	255, 0,
	575, 0,
	576, 0,
	-2, 1837,
	-1, 2448,
	95, 0,
	254, 0,
	255, 0,
	575, 0,
	576, 0,
	-2, 1838,
	-1, 2449,
	95, 0,
	254, 0,
	255, 0,
	575, 0,
	576, 0,
	-2, 1839,
	-1, 2450,
	95, 0,
	254, 0,
	255, 0,
	575, 0,
	576, 0,
	-2, 1840,
	-1, 2451,
	14, 0,
	15, 0,
	16, 0,
	571, 0,
	572, 0,
	573, 0,
	-2, 1841,
	-1, 2463,
	14, 0,
	15, 0,
	16, 0,
	571, 0,
	572, 0,
	573, 0,
	-2, 1853,
	-1, 2464,
	14, 0,
	15, 0,
	16, 0,
	571, 0,
	572, 0,
	573, 0,
	-2, 1854,
	-1, 2465,
	14, 0,
	15, 0,
	16, 0,
	571, 0,
	572, 0,
	573, 0,
	-2, 1855,
	-1, 2469,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	574, 0,
	-2, 1862,
	-1, 2475,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	574, 0,
	-2, 1866,
	-1, 2477,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	574, 0,
	-2, 1874,
	-1, 2478,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	574, 0,
	-2, 1875,
	-1, 2479,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	574, 0,
	-2, 1876,
	-1, 2480,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	574, 0,
	-2, 1877,
	-1, 2652,
	5, 2283,
	186, 2142,
	590, 2280,
	-2, 2271,
	-1, 2653,
	186, 2143,
	-2, 2644,
	-1, 2654,
	186, 2144,
	-2, 2468,
	-1, 2655,
	186, 2145,
	-2, 2353,
	-1, 2656,
	186, 2146,
	-2, 2408,
	-1, 2657,
	186, 2147,
	-2, 2453,
	-1, 2658,
	186, 2148,
	-2, 2570,
	-1, 2659,
	186, 2149,
	-2, 1941,
	-1, 2730,
	1, 1641,
	2, 1641,
	106, 1641,
	150, 1641,
	169, 1641,
	182, 1641,
	187, 1641,
	205, 1641,
	208, 1641,
	236, 1641,
	240, 1641,
	251, 1641,
	269, 1641,
	273, 1641,
	312, 1641,
	339, 1641,
	343, 1641,
	349, 1641,
	421, 1641,
	425, 1641,
	527, 1641,
	538, 1641,
	554, 1641,
	555, 1641,
	556, 1641,
	566, 1641,
	589, 1641,
	591, 1641,
	593, 1641,
	595, 1641,
	-2, 1640,
	-1, 2743,
	590, 2252,
	-2, 2266,
	-1, 2745,
	1, 320,
	554, 320,
	-2, 1539,
	-1, 2773,
	590, 1780,
	-2, 1770,
	-1, 2956,
	1, 1256,
	417, 1220,
	454, 1220,
	568, 1220,
	589, 1256,
	591, 1256,
	593, 1256,
	-2, 1539,
	-1, 3133,
	344, 1583,
	-2, 2683,
	-1, 3134,
	344, 1584,
	-2, 2555,
	-1, 3138,
	431, 2208,
	432, 2208,
	-2, 1939,
	-1, 3139,
	431, 2212,
	432, 2212,
	-2, 1940,
	-1, 3140,
	431, 2209,
	432, 2209,
	-2, 1939,
	-1, 3141,
	431, 2213,
	432, 2213,
	-2, 1940,
	-1, 3154,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	574, 0,
	-2, 1864,
	-1, 3155,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	574, 0,
	-2, 1868,
	-1, 3161,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	574, 0,
	-2, 1870,
	-1, 3383,
	1, 673,
	589, 673,
	591, 673,
	593, 673,
	-2, 1406,
	-1, 3550,
	43, 2243,
	-2, 1011,
	-1, 3555,
	1, 1256,
	589, 1256,
	591, 1256,
	593, 1256,
	-2, 1539,
	-1, 3662,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	574, 0,
	-2, 1872,
	-1, 3669,
	245, 0,
	247, 0,
	330, 0,
	-2, 1891,
	-1, 3737,
	14, 0,
	15, 0,
	16, 0,
	571, 0,
	572, 0,
	573, 0,
	-2, 1920,
	-1, 3738,
	14, 0,
	15, 0,
	16, 0,
	571, 0,
	572, 0,
	573, 0,
	-2, 1921,
	-1, 3739,
	14, 0,
	15, 0,
	16, 0,
	571, 0,
	572, 0,
	573, 0,
	-2, 1922,
	-1, 3743,
	14, 0,
	15, 0,
	16, 0,
	571, 0,
	572, 0,
	573, 0,
	-2, 1926,
	-1, 3744,
	14, 0,
	15, 0,
	16, 0,
	571, 0,
	572, 0,
	573, 0,
	-2, 1927,
	-1, 3745,
	14, 0,
	15, 0,
	16, 0,
	571, 0,
	572, 0,
	573, 0,
	-2, 1928,
	-1, 3792,
	590, 2253,
	-2, 2267,
	-1, 3964,
	592, 2801,
	-2, 1465,
	-1, 4022,
	245, 0,
	247, 0,
	330, 0,
	-2, 1892,
	-1, 4025,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	574, 0,
	-2, 1895,
	-1, 4026,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	574, 0,
	-2, 1897,
	-1, 4120,
	592, 2268,
	-2, 1291,
	-1, 4269,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	574, 0,
	-2, 1896,
	-1, 4270,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	574, 0,
	-2, 1898,
	-1, 4281,
	245, 0,
	-2, 1931,
	-1, 4462,
	245, 0,
	-2, 1932,
	-1, 4654,
	50, 0,
	218, 0,
	272, 0,
	460, 0,
	563, 0,
	574, 0,
	-2, 2647,
}

const sqlPrivate = 57344

const sqlLast = 128929

var sqlAct = [...]int{
	268, 4756, 3539, 4384, 4845, 3292, 3039, 4499, 3026, 4647,
	4710, 1502, 4326, 4491, 4653, 4635, 2836, 4664, 4783, 4547,
	2120, 3538, 4646, 4600, 2202, 2041, 4522, 4665, 4391, 4583,
	4526, 4005, 4622, 4603, 4666, 4312, 2880, 4415, 4369, 3702,
	1229, 4466, 2900, 4723, 1240, 4225, 4220, 4652, 4186, 4331,
	4290, 3654, 2277, 2423, 4258, 3948, 3956, 1313, 4209, 4207,
	1309, 4200, 3885, 4116, 4117, 3147, 4400, 3405, 1302, 3572,
	4101, 2286, 4163, 2685, 4429, 803, 1754, 2492, 3566, 3911,
	2128, 2250, 4230, 2054, 3534, 3913, 1060, 3929, 3408, 4286,
	1373, 3394, 693, 3048, 3524, 3061, 2431, 3465, 3611, 3015,
	2913, 803, 3613, 3050, 2985, 1979, 1051, 2284, 2996, 1946,
	1617, 1465, 3795, 3335, 3315, 3307, 4004, 3047, 1117, 3298,
	3010, 764, 1304, 3058, 2424, 3296, 3275, 1059, 177, 4061,
	880, 876, 4, 3041, 3012, 1658, 3027, 2189, 4757, 3427,
	1915, 2191, 2723, 2139, 2927, 2838, 3763, 704, 2570, 1891,
	4467, 3274, 1853, 2428, 2505, 3131, 1823, 1472, 3402, 798,
	3057, 1307, 1106, 871, 2725, 1557, 262, 2190, 759, 2722,
	944, 2932, 2989, 1113, 1160, 2185, 2166, 2173, 2879, 1110,
	1355, 1220, 2997, 1742, 2052, 2112, 1281, 261, 2561, 2703,
	1115, 2489, 2108, 1916, 2098, 2412, 3342, 2395, 2756, 2393,
	1935, 3536, 1594, 3020, 2237, 2861, 1560, 1615, 804, 805,
	4548, 1315, 737, 1342, 680, 2824, 2564, 800, 702, 3051,
	108, 177, 2755, 1223, 3906, 2682, 1886, 2712, 1932, 2648,
	1202, 1925, 2693, 2614, 2542, 1237, 1837, 186, 1755, 187,
	2394, 809, 1756, 1108, 2396, 745, 1692, 1292, 1677, 1592,
	757, 1585, 1497, 2127, 2236, 4711, 1219, 2263, 2417, 1091,
	2027, 697, 812, 2030, 44, 43, 41, 809, 1200, 1761,
	32, 30, 28, 3184, 1741, 1508, 2572, 694, 964, 705,
	720, 1225, 3178, 852, 1980, 3777, 793, 3778, 812, 4858,
	2043, 4848, 2043, 2702, 2043, 3591, 3294, 4691, 1501, 4833,
	853, 2043, 4305, 2702, 2043, 2043, 2043, 4832, 4822, 4803,
	4801, 2702, 2211, 4330, 4330, 4742, 4699, 1055, 895, 2211,
	4700, 1683, 4688, 4686, 4683, 1295, 2702, 2702, 4684, 4680,
	4650, 4649, 4082, 4681, 2211, 2211, 2211, 3581, 3582, 4648,
	4643, 4642, 1624, 2064, 2064, 2064, 4633, 4631, 4628, 4302,
	4330, 4330, 4403, 1610, 1217, 1351, 1045, 4598, 4572, 872,
	4565, 4330, 2764, 4564, 2702, 4559, 4558, 2702, 4552, 4330,
	4330, 2211, 2211, 4518, 4464, 1112, 4446, 4177, 2764, 4443,
	3991, 4440, 3367, 2211, 2285, 4330, 73, 3365, 875, 874,
	4393, 1203, 1203, 3350, 4394, 4347, 4346, 1235, 4337, 2211,
	2211, 4336, 2211, 74, 1055, 4330, 4329, 4297, 1232, 1056,
	4330, 2211, 3591, 2211, 4271, 1036, 1522, 1035, 2764, 78,
	4249, 4238, 4158, 1516, 2064, 3591, 2702, 4141, 4024, 3972,
	2785, 2702, 2764, 3608, 2061, 3966, 3927, 3787, 3785, 3608,
	3928, 3788, 3786, 1351, 3146, 3770, 3686, 1769, 1770, 2702,
	2211, 93, 3682, 3607, 3245, 3246, 2702, 3608, 3598, 87,
	3291, 1050, 3599, 3286, 2702, 3285, 1252, 2702, 3193, 2702,
	1800, 3236, 3767, 2695, 3194, 3237, 3234, 1772, 2061, 3226,
	3235, 1259, 2760, 3227, 2702, 2518, 2519, 2520, 2537, 2538,
	2539, 3224, 4573, 3195, 3065, 2702, 1204, 2702, 2064, 878,
	3037, 1510, 3036, 1825, 2273, 2540, 2273, 2567, 4468, 4459,
	2808, 49, 1771, 107, 2702, 2784, 1769, 1770, 93, 104,
	2763, 2211, 1510, 2753, 2764, 2747, 2701, 2702, 2272, 2211,
	2702, 4447, 2273, 1510, 1206, 4403, 1207, 2064, 1825, 3767,
	2694, 4218, 4177, 2061, 1253, 4142, 1772, 3991, 3599, 2903,
	2823, 1253, 2077, 2042, 2132, 2058, 232, 2530, 2991, 2210,
	2923, 2821, 1911, 2702, 1496, 3868, 2526, 3023, 3657, 3632,
	1933, 2178, 1660, 3583, 2739, 2738, 2737, 94, 2736, 2735,
	1208, 1771, 1205, 1769, 1770, 232, 1802, 1803, 1804, 1813,
	1814, 1815, 3584, 3005, 1044, 1043, 2568, 1042, 1041, 1040,
	1039, 1038, 1034, 1033, 234, 1806, 1800, 1032, 3105, 4077,
	1231, 1031, 1089, 1772, 1030, 1029, 1777, 1028, 1027, 1026,
	2343, 1025, 1819, 3251, 1024, 2029, 1023, 1022, 1521, 1021,
	1020, 1019, 1509, 234, 1018, 1515, 1017, 942, 941, 1825,
	940, 2531, 2532, 2533, 2534, 2044, 939, 2044, 1771, 2044,
	3183, 2525, 938, 233, 937, 936, 2044, 935, 1791, 2044,
	2044, 2044, 934, 933, 1799, 1801, 226, 1788, 932, 931,
	930, 929, 928, 927, 926, 227, 925, 924, 2569, 923,
	2566, 922, 233, 921, 920, 1777, 919, 1628, 918, 917,
	916, 915, 914, 913, 912, 911, 910, 1614, 909, 908,
	188, 898, 897, 4450, 893, 892, 886, 885, 870, 2597,
	869, 2061, 826, 825, 824, 823, 815, 814, 813, 779,
	770, 769, 97, 1792, 768, 2535, 2536, 751, 256, 188,
	3261, 255, 4324, 254, 253, 252, 232, 251, 1318, 1115,
	250, 249, 1794, 1795, 1796, 1797, 248, 3581, 247, 149,
	246, 245, 1777, 1326, 1058, 244, 243, 242, 2528, 1769,
	1770, 241, 240, 239, 238, 232, 1115, 1115, 237, 236,
	235, 4232, 4036, 3809, 185, 100, 3781, 103, 3609, 3338,
	3206, 1501, 3189, 1376, 234, 3180, 232, 1376, 2583, 1772,
	1810, 1253, 3289, 1820, 1318, 1822, 2061, 232, 3245, 3246,
	1799, 1801, 1822, 232, 3088, 2972, 2768, 1894, 1894, 2744,
	2729, 879, 1510, 234, 1893, 1893, 149, 1816, 1115, 1817,
	1115, 2211, 1115, 2795, 1771, 2042, 1786, 1787, 1318, 2571,
	1346, 3290, 2061, 233, 234, 2058, 2784, 2388, 3007, 1897,
	1892, 2581, 1936, 2106, 1808, 234, 226, 1233, 2280, 2063,
	1959, 234, 1359, 1360, 1318, 227, 1864, 1480, 1504, 1792,
	232, 1362, 233, 1239, 1822, 4671, 4651, 232, 1768, 1793,
	4630, 1475, 1685, 4533, 1318, 226, 3262, 152, 4448, 4456,
	188, 1318, 2694, 233, 227, 4285, 1862, 232, 4239, 1115,
	1253, 1115, 189, 4217, 233, 1318, 226, 4088, 4059, 4471,
	233, 1115, 1818, 1115, 2529, 227, 4058, 226, 234, 188,
	2253, 4052, 4051, 226, 4050, 234, 227, 1500, 1286, 1289,
	1807, 4043, 227, 1855, 1566, 1569, 4042, 1824, 1777, 4040,
	188, 1822, 2279, 4035, 1299, 234, 4032, 4031, 3932, 3245,
	3246, 188, 1340, 3926, 3813, 2565, 3812, 873, 1855, 3811,
	1318, 3791, 3758, 3757, 1485, 3756, 3678, 233, 1769, 1770,
	3673, 3333, 1824, 1369, 233, 1462, 1467, 3251, 3282, 1115,
	226, 3273, 1115, 809, 2777, 4234, 3244, 226, 3241, 227,
	3240, 1800, 3238, 1798, 233, 3233, 227, 3232, 1772, 3231,
	3245, 3246, 3228, 3225, 812, 3205, 3188, 226, 3181, 3179,
	3245, 3246, 177, 177, 188, 1793, 227, 1335, 3038, 3245,
	3246, 188, 4852, 1555, 1825, 1499, 1498, 1773, 1774, 1775,
	1776, 1778, 1779, 1771, 3247, 3248, 3249, 3250, 3252, 3253,
	2730, 3022, 1811, 1791, 1857, 1629, 3006, 1216, 1597, 1599,
	2554, 1768, 2515, 2516, 2517, 2541, 2527, 2521, 1767, 2523,
	2524, 2522, 2509, 2510, 2511, 2512, 2513, 2514, 3866, 4793,
	4792, 1586, 3933, 1824, 232, 3260, 1115, 1115, 1115, 1115,
	1115, 1115, 1115, 1115, 4758, 1346, 232, 4709, 1346, 2218,
	1856, 4707, 1854, 2216, 1241, 1595, 1773, 1774, 1775, 1776,
	1778, 1779, 3704, 3287, 1056, 3357, 4590, 4525, 4509, 1115,
	4506, 4505, 4504, 4485, 4470, 1115, 4469, 2501, 3251, 1701,
	4444, 1470, 234, 4428, 4427, 2495, 1634, 1794, 1795, 1796,
	1797, 4413, 4410, 4409, 234, 1588, 4404, 1777, 4343, 4320,
	4283, 232, 4266, 4265, 4246, 1809, 4245, 4203, 4178, 4076,
	4057, 232, 1746, 1783, 1784, 1790, 1812, 1789, 1785, 3992,
	1782, 1780, 1781, 1773, 1774, 1775, 1776, 1778, 1779, 3251,
	3986, 233, 4472, 4046, 3983, 1609, 3854, 4045, 3853, 3251,
	3837, 1769, 1770, 233, 226, 1799, 1801, 1623, 3251, 234,
	3836, 3834, 1740, 227, 1572, 3773, 226, 3933, 3761, 234,
	3668, 1842, 3610, 3592, 1800, 227, 3558, 232, 232, 3482,
	3440, 1772, 3407, 3359, 3210, 3209, 1844, 3204, 188, 3170,
	1115, 1115, 1115, 2984, 1900, 3261, 1115, 1747, 1899, 1898,
	188, 1895, 4233, 1237, 1887, 1237, 1885, 1825, 233, 2775,
	1651, 2774, 2741, 2734, 1792, 2720, 1771, 2700, 233, 2579,
	1376, 226, 1686, 1841, 1958, 234, 234, 1914, 1913, 1115,
	227, 226, 803, 1962, 1909, 1908, 1907, 1906, 1997, 803,
	227, 1905, 1318, 1904, 1976, 4451, 3261, 1903, 1902, 1901,
	1882, 2025, 1769, 1770, 1881, 188, 3261, 1880, 1879, 1878,
	1877, 1743, 1876, 1875, 1874, 188, 1873, 1822, 1872, 1922,
	1871, 1870, 1751, 1869, 233, 233, 1750, 1036, 2596, 1035,
	1868, 1857, 1772, 1843, 1840, 1835, 1822, 226, 226, 1745,
	1334, 1257, 2048, 1248, 1896, 2050, 227, 227, 4206, 1056,
	4323, 2055, 1970, 1764, 1765, 2057, 4084, 4028, 1318, 1967,
	2060, 1775, 1776, 1778, 1779, 1115, 2281, 1771, 1822, 1318,
	1777, 188, 188, 3808, 1943, 3784, 3776, 3192, 1822, 2732,
	2766, 1919, 1920, 1591, 177, 4303, 1115, 1822, 1798, 4086,
	3807, 3262, 1856, 1376, 3330, 3355, 1203, 3245, 3246, 1838,
	3249, 3250, 3252, 3253, 4144, 2097, 1991, 2582, 2097, 2122,
	1793, 3587, 1888, 1889, 1954, 1235, 1356, 1235, 1799, 1801,
	1358, 2095, 4790, 4782, 2901, 4507, 1232, 4405, 1232, 4396,
	4395, 4237, 4180, 1591, 4179, 4143, 4079, 1966, 2070, 1346,
	3995, 2097, 3262, 3994, 3993, 3779, 3594, 3593, 809, 4401,
	1351, 3936, 3262, 1352, 1965, 809, 1944, 2930, 1894, 1936,
	2580, 1351, 1994, 3655, 1738, 1893, 1650, 3880, 1824, 812,
	4449, 3230, 2104, 3851, 3229, 1056, 812, 1792, 1941, 1934,
	3152, 2866, 1354, 1357, 2069, 3443, 2083, 3541, 3409, 3540,
	1866, 1659, 2254, 2884, 2928, 1702, 4721, 2278, 4392, 1971,
	1912, 1863, 2046, 2033, 1351, 4695, 2020, 1015, 4676, 4663,
	3525, 2132, 2089, 2088, 4287, 2175, 2097, 2099, 2192, 3062,
	2302, 1953, 1952, 1951, 1660, 1318, 1318, 1949, 1948, 1947,
	2193, 1985, 2567, 3474, 1938, 1376, 3256, 3254, 3255, 3247,
	3248, 3249, 3250, 3252, 3253, 1977, 1877, 3603, 3940, 1822,
	1877, 2072, 1016, 3923, 3882, 1782, 1780, 1781, 1773, 1774,
	1775, 1776, 1778, 1779, 3877, 4339, 3859, 3629, 3381, 2033,
	3294, 1348, 3706, 3198, 2562, 4316, 4685, 2773, 4672, 2909,
	2033, 2160, 1910, 2165, 1890, 3532, 2170, 3256, 3254, 3255,
	3247, 3248, 3249, 3250, 3252, 3253, 2247, 1565, 1963, 3255,
	3247, 3248, 3249, 3250, 3252, 3253, 1492, 2068, 2929, 3247,
	3248, 3249, 3250, 3252, 3253, 1329, 1285, 4682, 2066, 3577,
	3829, 2568, 4500, 1793, 2917, 2920, 4221, 1590, 1231, 1318,
	1231, 1318, 2075, 1318, 2092, 2203, 2208, 4597, 2908, 2863,
	4482, 2915, 3412, 2100, 2090, 4673, 3846, 4129, 3045, 1318,
	1318, 1353, 3019, 3509, 4127, 1215, 865, 4739, 4740, 3649,
	1318, 3385, 4365, 3895, 1532, 4131, 2809, 2827, 4847, 743,
	1540, 996, 1318, 4772, 1318, 1318, 1318, 1590, 2138, 1700,
	4513, 1824, 2825, 1699, 2356, 1013, 1011, 1494, 2195, 2196,
	2354, 1009, 1638, 809, 4358, 1007, 1004, 803, 2862, 4349,
	2827, 2243, 2084, 2569, 2197, 2566, 3356, 4172, 1349, 2288,
	4171, 2158, 3893, 3892, 812, 2825, 3884, 1350, 3874, 1115,
	3873, 3871, 3870, 3858, 3824, 2301, 2403, 3245, 3246, 3823,
	2248, 3894, 3515, 3514, 3349, 1499, 1498, 3203, 3202, 3201,
	1358, 3200, 2227, 3156, 2260, 2926, 4264, 2925, 2922, 2094,
	2911, 2073, 3387, 2899, 1115, 1341, 2157, 1541, 2898, 2169,
	2894, 866, 2893, 2892, 2871, 2870, 2283, 2831, 1782, 1780,
	1781, 1773, 1774, 1775, 1776, 1778, 1779, 2754, 2476, 2209,
	1744, 2610, 2268, 4340, 1698, 2401, 2609, 2093, 1115, 2433,
	1115, 3016, 1578, 4317, 1577, 2387, 2868, 1115, 2781, 2306,
	1997, 1997, 1376, 1357, 1115, 1115, 1115, 1115, 1115, 1115,
	1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115,
	1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115,
	1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115,
	1595, 1115, 1595, 1115, 1115, 1115, 1115, 2270, 2257, 1056,
	2229, 1056, 2228, 2193, 2571, 2278, 4126, 2289, 1358, 2129,
	4113, 2262, 2405, 809, 2864, 1233, 1588, 1233, 2265, 1115,
	2265, 2266, 1636, 1115, 1115, 3409, 4773, 1779, 2274, 1352,
	2275, 1115, 1335, 1352, 812, 1115, 3442, 1115, 1115, 1351,
	742, 3472, 3630, 2125, 4109, 1376, 3251, 1536, 1631, 4094,
	2392, 1115, 1115, 1115, 1115, 2758, 1115, 1115, 1115, 1115,
	1115, 1115, 1115, 1115, 2328, 2293, 1001, 2377, 1991, 1991,
	4374, 1357, 2130, 2131, 2864, 1576, 1244, 1575, 2402, 2840,
	2310, 2767, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115,
	1115, 2385, 2298, 2368, 1736, 1115, 2543, 2544, 4110, 1549,
	2816, 1271, 2126, 2888, 1652, 1495, 2491, 1237, 2163, 3068,
	2543, 2559, 4093, 2380, 1376, 4125, 2746, 2491, 1242, 1554,
	2565, 2350, 3253, 1237, 1994, 1994, 2854, 1711, 2881, 2882,
	2360, 2881, 2882, 2562, 2416, 4145, 2605, 3144, 2294, 1115,
	1376, 3245, 3246, 3129, 3263, 3264, 3265, 1348, 2367, 4805,
	744, 1348, 2400, 3261, 1954, 2651, 2651, 2665, 3832, 2543,
	4263, 1246, 2686, 2688, 2881, 2882, 1632, 2391, 2692, 1054,
	2389, 2390, 1749, 2404, 1737, 2397, 1681, 4493, 2507, 1036,
	2853, 2420, 1036, 1036, 2421, 2422, 2132, 991, 1697, 2558,
	2487, 692, 2843, 1985, 1985, 1660, 4777, 2267, 1374, 1660,
	3473, 863, 1473, 862, 2403, 2812, 868, 867, 4739, 2315,
	2867, 1049, 2742, 2309, 2717, 2499, 3260, 687, 1333, 2485,
	4786, 3638, 2497, 2379, 2814, 1822, 2709, 1353, 1245, 4128,
	1648, 1353, 3843, 3637, 2429, 2430, 3102, 3167, 2311, 2101,
	2102, 1056, 1943, 2919, 3695, 1318, 1318, 2571, 2830, 3855,
	4170, 1056, 2790, 2503, 3384, 1056, 1203, 3872, 2794, 1053,
	2815, 3111, 3869, 2401, 2830, 2113, 3165, 3143, 3816, 1235,
	2114, 2556, 2805, 3903, 2916, 2918, 2757, 1715, 2386, 1680,
	1232, 2813, 2826, 3803, 1349, 1235, 177, 1376, 1349, 3521,
	2761, 2914, 4778, 1350, 2731, 2708, 1232, 1350, 4495, 3262,
	4105, 2312, 3513, 992, 906, 4106, 2804, 2798, 1681, 3459,
	3251, 4375, 2660, 2716, 2647, 2721, 2318, 4123, 2727, 2728,
	2677, 1997, 2690, 4373, 1561, 2780, 3470, 3904, 1346, 4371,
	2806, 2376, 2698, 2699, 2921, 2891, 2869, 2714, 2715, 2710,
	1694, 1896, 2399, 1056, 2607, 2355, 1941, 1005, 1005, 2608,
	3841, 2353, 2611, 1005, 2612, 2613, 4108, 1006, 1005, 1376,
	1635, 2481, 991, 3460, 4753, 2801, 3136, 3137, 1055, 3902,
	1678, 3114, 4111, 4761, 1559, 1318, 4370, 816, 1637, 4760,
	2482, 3451, 3575, 2115, 2752, 2483, 1049, 2832, 4808, 2488,
	4728, 2842, 2776, 4669, 4010, 2571, 1115, 1115, 2473, 1115,
	2119, 4009, 4780, 2800, 4372, 3458, 2402, 3574, 3162, 3856,
	1538, 1680, 2789, 1888, 1889, 3108, 2792, 3261, 2793, 777,
	4579, 803, 1535, 1318, 2779, 2828, 2319, 2988, 4308, 2829,
	2807, 2783, 3163, 1679, 4569, 3452, 3168, 4836, 2799, 1991,
	2769, 2912, 2889, 2043, 2140, 3254, 3255, 3247, 3248, 3249,
	3250, 3252, 3253, 2902, 1318, 2215, 2214, 2896, 2176, 3519,
	3574, 2895, 2873, 4113, 3030, 1351, 1318, 2144, 1318, 1351,
	2810, 4784, 4124, 2116, 2121, 3003, 1270, 3450, 992, 3059,
	2400, 4501, 1231, 1318, 4520, 1561, 2857, 2378, 3386, 1822,
	2960, 2967, 1243, 2188, 993, 1994, 2969, 4109, 1231, 2872,
	4107, 4102, 2176, 3113, 2883, 2885, 2886, 2887, 2172, 2999,
	2845, 2848, 2890, 2835, 4637, 3089, 4638, 3090, 4100, 1709,
	2957, 2958, 3396, 1712, 2141, 3069, 3070, 4104, 1115, 775,
	741, 3692, 3424, 3110, 2171, 2841, 3076, 3077, 3078, 4114,
	1633, 1493, 2164, 899, 2961, 1255, 1052, 2187, 2179, 887,
	2897, 4110, 3485, 2186, 3158, 2907, 2117, 809, 1002, 688,
	4494, 1883, 2797, 3262, 1985, 2490, 2471, 4670, 2167, 2474,
	3353, 2484, 4727, 4750, 2176, 4785, 3063, 3066, 812, 4195,
	177, 2486, 3071, 3086, 3072, 4260, 2959, 809, 3423, 1115,
	3044, 2745, 4779, 4103, 2965, 1115, 1115, 2130, 2131, 1499,
	2970, 1710, 2123, 2123, 1064, 2874, 2113, 2827, 812, 4006,
	4787, 2114, 1924, 3693, 3032, 2982, 3034, 4276, 3164, 4567,
	2470, 4620, 2846, 2992, 817, 818, 1748, 2168, 3166, 3091,
	3621, 2145, 3083, 4608, 2033, 3112, 994, 689, 2993, 3614,
	3428, 3116, 2152, 3118, 4702, 3093, 4155, 3095, 710, 3097,
	3025, 1115, 1115, 3390, 4703, 1960, 3035, 1115, 2498, 4568,
	1713, 1834, 3842, 3046, 2314, 1595, 2180, 4668, 2308, 993,
	1115, 1115, 1332, 3106, 3208, 3064, 1115, 1115, 2713, 907,
	3033, 3520, 1115, 2553, 1647, 1649, 690, 3014, 691, 995,
	2317, 3430, 2135, 1928, 2113, 4809, 2153, 2146, 2147, 2114,
	2726, 3257, 3258, 3259, 1055, 1047, 3092, 991, 3256, 3254,
	3255, 3247, 3248, 3249, 3250, 3252, 3253, 4210, 3708, 1233,
	4794, 2142, 4259, 4796, 2115, 4205, 3397, 1115, 1115, 1115,
	4000, 1049, 3159, 1115, 4175, 1233, 4211, 3616, 2151, 3804,
	776, 2119, 1931, 1115, 1260, 3191, 2136, 3916, 3135, 4011,
	3124, 1714, 3615, 4105, 3429, 1928, 3914, 1926, 4106, 3651,
	1115, 2667, 3127, 2143, 2571, 820, 819, 4527, 1665, 3126,
	3125, 4726, 4667, 4738, 4736, 1929, 4613, 1048, 2107, 4546,
	4412, 4174, 2118, 2416, 3130, 3916, 3145, 4173, 2134, 778,
	900, 901, 4837, 774, 3914, 4196, 888, 889, 2044, 3954,
	3562, 3186, 3187, 2235, 1931, 1921, 3190, 1258, 2472, 4108,
	1251, 994, 2115, 679, 2116, 2121, 3931, 1759, 1927, 2711,
	1758, 4055, 4007, 992, 3085, 4111, 821, 822, 2419, 2119,
	2133, 3182, 2085, 1753, 3918, 4338, 3094, 1929, 3096, 3343,
	3098, 3612, 4421, 4814, 4481, 3157, 3955, 3747, 1758, 3309,
	1115, 1115, 1115, 1115, 2082, 3888, 3875, 3797, 3828, 4261,
	1115, 1115, 1115, 3403, 995, 1115, 3563, 3554, 3399, 3917,
	3004, 2998, 3918, 2986, 2261, 1115, 1237, 1376, 39, 2255,
	2148, 1115, 2183, 1115, 3301, 3302, 3119, 2249, 2241, 3121,
	2221, 3691, 1237, 2704, 4528, 4701, 1056, 2117, 1529, 1262,
	3820, 1073, 2116, 2121, 3762, 2409, 4584, 3917, 750, 3652,
	1376, 3798, 2830, 2847, 4549, 1758, 4226, 2361, 2078, 3957,
	2212, 4012, 1237, 2983, 1757, 1376, 1273, 4390, 2707, 3197,
	2080, 1930, 4388, 4319, 3415, 2751, 2181, 3799, 3284, 3796,
	3434, 3411, 2875, 3410, 2123, 1997, 3348, 4208, 3150, 1376,
	3323, 3128, 1757, 4107, 3303, 3775, 2149, 3622, 3617, 3618,
	3619, 3620, 3336, 2299, 3306, 1318, 1318, 3305, 1682, 2706,
	3363, 2081, 1688, 1687, 2705, 2750, 2749, 2748, 2182, 3922,
	902, 903, 3621, 1570, 2990, 2117, 890, 891, 1115, 1053,
	1759, 3614, 4114, 1930, 3432, 3371, 3912, 1571, 3373, 3374,
	1834, 1584, 1115, 3377, 1582, 3378, 4013, 3379, 3313, 905,
	4385, 3311, 1318, 2122, 993, 4488, 4187, 1997, 1759, 1757,
	4056, 3391, 3392, 2851, 3332, 4327, 3835, 3604, 2111, 3337,
	2259, 3528, 2123, 3825, 3915, 1115, 3433, 3748, 1235, 1924,
	4747, 4524, 3413, 2410, 3308, 3417, 3749, 2122, 2995, 1232,
	4813, 1318, 4438, 4306, 1235, 4587, 3329, 4243, 3366, 3375,
	3351, 1346, 3067, 1991, 2968, 1232, 3312, 3341, 3295, 3322,
	2966, 3321, 3915, 1318, 3382, 1318, 2964, 3324, 3325, 2287,
	3310, 2192, 2109, 1641, 1235, 3279, 3280, 3281, 3388, 3616,
	4529, 4489, 1376, 2175, 3414, 1232, 3821, 3419, 4314, 4594,
	3421, 4581, 2175, 1318, 3615, 4430, 4062, 1318, 3400, 1666,
	4751, 3327, 3488, 3328, 3490, 2876, 2877, 3494, 4431, 1994,
	1928, 3500, 3486, 2118, 2110, 3475, 3345, 3346, 3347, 4242,
	4328, 3764, 3445, 3449, 1318, 1991, 2578, 3800, 1732, 4615,
	4752, 3447, 4749, 4588, 4315, 1734, 1731, 1318, 2372, 1318,
	4687, 4432, 4516, 1376, 1046, 4508, 994, 3522, 3372, 1729,
	803, 3376, 4282, 3461, 1706, 1704, 4054, 3344, 3921, 1931,
	3276, 1318, 1676, 3383, 3468, 3317, 2033, 2033, 3667, 4490,
	3627, 3537, 1674, 1318, 1926, 3463, 3626, 2432, 1985, 3389,
	1672, 1994, 3483, 3495, 3826, 749, 3364, 3501, 1670, 1668,
	1237, 1662, 1929, 3239, 3570, 1657, 3169, 1655, 1580, 995,
	4377, 2118, 2987, 2910, 4434, 2865, 2778, 2381, 1961, 3059,
	1957, 1966, 3546, 2033, 3553, 1318, 1318, 3441, 3059, 3354,
	3431, 3360, 3361, 1735, 3362, 1619, 2352, 4433, 3454, 3568,
	3277, 1583, 2200, 3455, 1581, 1927, 3647, 3456, 1318, 904,
	3646, 1231, 3457, 1753, 3104, 4435, 3103, 3523, 3561, 3526,
	1985, 3476, 2033, 3074, 2398, 1693, 2323, 1231, 2240, 3484,
	3318, 3590, 2220, 2026, 3511, 3579, 1867, 3503, 1630, 3497,
	2574, 3505, 1553, 3506, 2033, 2577, 2033, 4662, 4156, 3879,
	3878, 1376, 4157, 4140, 1376, 4580, 1969, 1231, 4224, 4724,
	3640, 3404, 4162, 4153, 3512, 4098, 3953, 3944, 3631, 3622,
	3617, 3618, 3619, 3620, 2033, 3564, 4219, 3891, 2033, 3530,
	3316, 2873, 1003, 3688, 3516, 3571, 809, 1115, 2374, 1733,
	1730, 3487, 2373, 1115, 1115, 3876, 3550, 1115, 1115, 1115,
	3551, 1115, 3624, 1728, 177, 177, 3549, 812, 1705, 1703,
	1115, 1997, 3623, 3320, 3602, 3849, 1675, 3847, 1930, 1115,
	3827, 3557, 1235, 3576, 1115, 3552, 1673, 3542, 3017, 3578,
	1376, 3606, 3585, 1232, 1671, 2743, 3009, 3002, 3645, 1115,
	3588, 3589, 1669, 1667, 3644, 1661, 2994, 1376, 2980, 1656,
	3600, 1654, 1579, 3567, 2962, 2796, 2155, 1997, 1997, 1115,
	1115, 2791, 1115, 1115, 1115, 3471, 2219, 2217, 2194, 2177,
	3634, 2150, 3635, 2137, 3636, 2124, 2351, 2065, 2062, 2059,
	1115, 2056, 2201, 1056, 1115, 2051, 1997, 1997, 1115, 1115,
	1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115,
	1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 3641, 1115,
	2049, 3653, 3720, 2045, 3721, 3625, 3670, 1115, 1115, 1997,
	3319, 3510, 2132, 2036, 1115, 3498, 3650, 1212, 4715, 1991,
	2186, 2161, 3680, 3681, 3148, 1115, 1762, 4210, 1008, 1010,
	1012, 4740, 2086, 3122, 3120, 2955, 1237, 1237, 1233, 4625,
	1115, 2827, 4248, 1213, 4241, 4240, 4211, 2384, 4169, 4436,
	4090, 3060, 2105, 1534, 1233, 4437, 2825, 4423, 2852, 2827,
	4416, 3965, 2132, 3675, 2156, 1991, 1991, 3677, 2313, 1376,
	1726, 1727, 2822, 3569, 2849, 1994, 3793, 3687, 2258, 1293,
	3694, 3696, 3697, 1294, 1233, 2347, 2342, 3759, 4624, 3703,
	2320, 3801, 3802, 2382, 1991, 1991, 4132, 3780, 4164, 1653,
	3710, 1769, 1770, 2855, 4458, 4063, 3814, 3815, 3718, 3817,
	4041, 3426, 3719, 2856, 2878, 1766, 1769, 1770, 1115, 3149,
	1327, 1994, 1994, 1261, 3723, 1231, 4743, 1991, 3818, 3725,
	3887, 3751, 3819, 3499, 3766, 2856, 1763, 4734, 1115, 2383,
	3368, 3369, 257, 4696, 1985, 177, 1772, 2979, 2349, 3760,
	1994, 1994, 3886, 1214, 3941, 3771, 3772, 3752, 2242, 1338,
	2917, 2915, 2924, 1294, 1294, 2904, 1771, 3642, 1325, 2906,
	2858, 1115, 1115, 3848, 4574, 3850, 3648, 4540, 3768, 3769,
	2860, 1771, 2905, 1994, 4534, 4487, 4407, 3398, 4383, 676,
	1985, 1985, 4307, 2859, 3951, 3943, 3930, 3790, 1235, 1235,
	3782, 3556, 3024, 2691, 2071, 1978, 4781, 4325, 3504, 1232,
	1232, 3698, 4617, 1115, 1491, 1490, 1123, 4618, 3352, 1985,
	1985, 4812, 3245, 3246, 1769, 1770, 3448, 4536, 3783, 1501,
	4617, 2429, 3711, 4798, 3717, 4618, 4033, 4755, 2819, 2820,
	1318, 2817, 2818, 2573, 3860, 1318, 3890, 1507, 3462, 1514,
	3464, 1520, 1985, 1640, 3806, 3865, 3867, 2819, 2817, 1639,
	2429, 3726, 264, 264, 264, 2606, 682, 683, 1997, 698,
	682, 698, 708, 1708, 3950, 748, 1707, 4408, 3496, 767,
	2154, 3831, 3502, 4359, 773, 4166, 3883, 3889, 4161, 4160,
	4029, 264, 3805, 3755, 3864, 3699, 3852, 3492, 3489, 1318,
	1861, 1860, 3857, 3881, 4762, 1115, 2164, 4578, 4577, 4576,
	4515, 884, 4514, 1237, 1115, 4474, 3967, 264, 1608, 4386,
	1613, 4353, 4304, 4301, 1318, 1318, 1318, 3901, 3030, 3974,
	1622, 2873, 1627, 4299, 2162, 3899, 4198, 4184, 4130, 4085,
	3958, 1318, 3905, 3907, 3924, 3937, 3989, 3971, 3925, 3845,
	3838, 3560, 3920, 3559, 3420, 3059, 3959, 1318, 3370, 3109,
	3101, 3910, 1233, 1376, 3919, 3082, 3810, 3081, 3080, 3947,
	3079, 3008, 2981, 3962, 3909, 2850, 2159, 2787, 2782, 3978,
	2771, 2770, 2759, 2502, 2375, 3938, 1991, 3898, 1376, 2348,
	2341, 1115, 1115, 2340, 3942, 1684, 2339, 1115, 1115, 1997,
	2338, 3990, 1115, 1115, 2337, 1115, 2256, 3961, 2163, 2230,
	1115, 1231, 1231, 2226, 2225, 2224, 2223, 2222, 2039, 2038,
	2037, 1115, 2035, 3945, 1968, 1725, 1724, 1663, 1548, 1547,
	1546, 1545, 1544, 1543, 1542, 1537, 1533, 1115, 3969, 1531,
	1530, 3960, 1994, 682, 682, 3963, 1484, 3981, 3968, 3996,
	1483, 264, 4014, 1482, 3984, 3973, 2033, 1367, 3979, 3980,
	1366, 1365, 3988, 3997, 1364, 1363, 1331, 3998, 3987, 3985,
	1330, 1280, 1279, 1278, 1277, 1235, 1276, 1275, 4027, 1274,
	1272, 1267, 1266, 1265, 1264, 1263, 1232, 1195, 4015, 877,
	8, 2076, 4008, 1014, 1000, 4492, 4112, 2371, 1237, 92,
	1539, 839, 86, 2184, 4023, 4003, 1237, 3844, 2963, 2199,
	1376, 1985, 1376, 4690, 3518, 4068, 3517, 1991, 970, 1237,
	4614, 1523, 4519, 847, 4596, 3939, 3422, 2931, 2322, 1664,
	1318, 1318, 2324, 3331, 2733, 4566, 4037, 3207, 4465, 4275,
	1376, 2576, 1865, 3288, 88, 1099, 1145, 4194, 4193, 4099,
	1847, 3830, 3404, 3049, 1852, 4191, 4190, 1982, 1984, 3336,
	1063, 1379, 4636, 2087, 1105, 1237, 2103, 1237, 2096, 2772,
	4091, 4092, 2650, 1994, 1122, 1119, 1986, 1988, 1121, 4122,
	4053, 1120, 1987, 1884, 1118, 1981, 3949, 3028, 3586, 1318,
	1589, 1587, 972, 2091, 4133, 4135, 4136, 2496, 2560, 1376,
	3196, 1318, 1858, 1079, 1318, 4118, 1101, 4118, 2557, 1256,
	4071, 1090, 1078, 3314, 3293, 1376, 3573, 4064, 4067, 177,
	3789, 2408, 4070, 4060, 857, 4069, 4074, 3242, 4065, 4066,
	4121, 260, 4075, 2563, 1247, 2674, 2666, 4078, 4165, 2662,
	4167, 3380, 1985, 3018, 1739, 4289, 1836, 4134, 1233, 1233,
	3029, 4097, 1318, 1318, 4095, 1950, 4083, 1361, 1083, 2494,
	1235, 1849, 3300, 3174, 2418, 3580, 3334, 2765, 1235, 4089,
	4621, 1232, 1318, 3707, 3107, 4188, 2234, 1211, 4138, 1232,
	1210, 1235, 1254, 4149, 1376, 1209, 4602, 4599, 1231, 1318,
	2174, 4147, 1232, 4168, 4150, 3326, 3982, 3535, 2079, 4185,
	2811, 2506, 3543, 1095, 4154, 1478, 2365, 3299, 3605, 1550,
	3339, 772, 4182, 4332, 1237, 4159, 4152, 1107, 1821, 2952,
	2951, 4484, 4216, 1347, 1318, 1318, 1318, 1235, 4247, 1235,
	4227, 1345, 1344, 1343, 3358, 4176, 4769, 1376, 1232, 4835,
	1232, 3840, 3839, 231, 4181, 3142, 4228, 1760, 1752, 1115,
	1115, 1115, 228, 230, 4118, 229, 4215, 4199, 3794, 3340,
	4694, 3862, 4189, 4183, 3527, 23, 22, 1376, 4231, 4204,
	21, 112, 1115, 42, 20, 1115, 1115, 4244, 151, 129,
	148, 4213, 147, 121, 4222, 1115, 146, 145, 1997, 144,
	4229, 143, 150, 1115, 1115, 142, 141, 136, 140, 139,
	2033, 138, 137, 135, 4236, 133, 134, 128, 1376, 132,
	1318, 4267, 2033, 131, 130, 2033, 127, 126, 125, 124,
	123, 4251, 122, 4255, 4250, 120, 119, 4262, 118, 117,
	116, 115, 114, 1376, 113, 4253, 4256, 760, 762, 61,
	60, 1115, 111, 110, 19, 40, 14, 65, 66, 18,
	1115, 13, 35, 91, 102, 101, 36, 99, 1115, 98,
	34, 17, 1997, 16, 15, 96, 95, 4272, 33, 31,
	3900, 1115, 11, 1231, 1115, 9, 1235, 37, 1945, 12,
	5, 1231, 182, 2033, 181, 4295, 4296, 1232, 1115, 4344,
	4345, 184, 180, 4284, 1231, 1376, 4278, 183, 4310, 90,
	4335, 1249, 1318, 179, 178, 89, 1991, 29, 10, 174,
	1318, 1318, 4298, 4399, 2413, 3935, 81, 176, 175, 4360,
	173, 4362, 4309, 4363, 172, 1233, 4318, 171, 82, 4311,
	79, 170, 85, 169, 1269, 80, 84, 83, 3339, 27,
	1231, 6, 1231, 4376, 64, 7, 264, 4257, 264, 264,
	3537, 1298, 264, 1308, 3628, 1376, 4398, 4354, 1318, 105,
	4352, 4389, 1994, 106, 1328, 38, 77, 76, 75, 26,
	63, 4364, 25, 767, 168, 4422, 1237, 1237, 215, 214,
	1991, 4355, 213, 212, 4368, 211, 210, 209, 4379, 208,
	4406, 4361, 4366, 4378, 4350, 203, 1115, 1115, 264, 4417,
	264, 264, 1298, 202, 264, 264, 4387, 4402, 4382, 1308,
	207, 205, 204, 1115, 1997, 4418, 4118, 4118, 4397, 206,
	201, 4381, 4426, 264, 218, 1503, 217, 223, 222, 221,
	4420, 1985, 4445, 220, 219, 216, 1994, 225, 4419, 4441,
	4442, 200, 199, 4231, 4473, 4425, 1527, 4475, 4439, 4424,
	198, 1115, 196, 192, 1115, 4414, 191, 195, 197, 2668,
	194, 1237, 193, 190, 224, 1552, 72, 166, 1308, 4454,
	4455, 167, 264, 264, 1237, 1298, 1473, 71, 4453, 1374,
	4480, 165, 164, 163, 162, 161, 160, 159, 70, 1231,
	24, 2, 1, 0, 0, 0, 767, 0, 264, 264,
	0, 4118, 0, 0, 0, 1985, 0, 0, 0, 0,
	1233, 4479, 4457, 2033, 4118, 0, 2344, 0, 1233, 4463,
	4511, 884, 0, 0, 2122, 4496, 1115, 1115, 4497, 0,
	0, 1233, 1991, 0, 4476, 4523, 1115, 4503, 1235, 1235,
	0, 1237, 0, 0, 1237, 4502, 4342, 0, 1318, 1232,
	1232, 0, 4510, 0, 0, 3684, 0, 0, 1318, 1318,
	0, 0, 0, 0, 4512, 0, 0, 0, 0, 0,
	0, 0, 3700, 0, 0, 1318, 0, 1233, 4557, 1233,
	0, 4118, 0, 0, 4118, 0, 4530, 0, 1994, 1115,
	1115, 4562, 4537, 4563, 4538, 4542, 4535, 264, 0, 1115,
	4517, 4402, 0, 0, 4543, 4550, 4551, 4545, 0, 0,
	0, 4356, 4531, 4532, 4139, 0, 0, 264, 4555, 4556,
	0, 4553, 0, 1235, 4554, 4589, 4148, 0, 0, 4151,
	0, 0, 4561, 4593, 1232, 4560, 1235, 1115, 1115, 0,
	1115, 0, 0, 4571, 0, 0, 0, 1232, 0, 4575,
	0, 0, 0, 0, 0, 4611, 0, 1985, 4612, 0,
	0, 0, 4570, 0, 0, 0, 4601, 4604, 0, 0,
	0, 0, 4623, 0, 4619, 4616, 0, 0, 4592, 4591,
	0, 0, 0, 0, 0, 0, 2500, 0, 4641, 0,
	0, 0, 0, 0, 0, 0, 4645, 4212, 1115, 1115,
	1115, 4644, 1847, 1235, 3792, 0, 1235, 0, 0, 0,
	4605, 0, 4626, 4609, 1232, 4610, 0, 1232, 0, 0,
	0, 4632, 4639, 0, 4606, 0, 1233, 4640, 1115, 0,
	0, 0, 4675, 0, 0, 0, 4679, 0, 0, 0,
	0, 0, 4674, 0, 4661, 4660, 4658, 4659, 0, 0,
	0, 1231, 1231, 0, 0, 0, 2673, 0, 0, 0,
	4704, 0, 0, 0, 0, 0, 4689, 1303, 4692, 4706,
	4677, 0, 0, 0, 0, 0, 0, 4708, 4718, 4720,
	4697, 0, 4693, 0, 0, 1115, 4705, 0, 0, 4719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4725,
	0, 0, 0, 0, 0, 0, 4713, 0, 4714, 4712,
	0, 0, 0, 4745, 0, 0, 1468, 4741, 682, 1479,
	1303, 0, 0, 0, 4737, 4716, 4717, 0, 4733, 0,
	4735, 4722, 4731, 4732, 0, 4746, 1231, 4744, 1237, 264,
	1237, 264, 4767, 4601, 2122, 264, 4604, 4623, 4748, 1231,
	4765, 4754, 0, 4775, 4770, 4523, 4776, 0, 1503, 1298,
	264, 4763, 264, 4759, 4771, 0, 4764, 0, 264, 1503,
	698, 4774, 0, 0, 0, 264, 1503, 4789, 4118, 0,
	4118, 0, 0, 0, 0, 0, 0, 1303, 1303, 4788,
	2040, 0, 4791, 0, 4795, 0, 0, 0, 0, 4800,
	4797, 4766, 264, 4768, 0, 0, 0, 4806, 73, 264,
	0, 0, 1115, 1115, 0, 4799, 1231, 4804, 0, 1231,
	4802, 1115, 0, 1115, 1115, 74, 4810, 4367, 4807, 0,
	0, 0, 0, 4820, 4816, 4826, 0, 0, 0, 4825,
	4831, 78, 4830, 0, 4829, 4828, 0, 4827, 0, 767,
	0, 4819, 3030, 4824, 0, 4838, 0, 4839, 4834, 0,
	4823, 4842, 4841, 3132, 0, 4843, 0, 4844, 0, 4840,
	0, 0, 4846, 0, 4850, 4849, 0, 0, 0, 0,
	0, 87, 0, 1115, 4854, 0, 4856, 0, 1233, 1233,
	4857, 0, 4859, 4860, 0, 4851, 4817, 4818, 4846, 0,
	1235, 0, 1235, 4853, 0, 0, 0, 0, 0, 0,
	0, 1232, 0, 1232, 0, 0, 0, 0, 0, 0,
	0, 878, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 0, 107, 0, 0, 1769, 1770,
	93, 104, 0, 2973, 2668, 2668, 2976, 0, 2978, 0,
	0, 0, 0, 0, 0, 0, 4855, 0, 0, 0,
	73, 1800, 0, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 0, 1233, 0, 0, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 1233, 0, 0, 0,
	0, 0, 3021, 78, 1825, 3021, 0, 0, 0, 94,
	0, 0, 0, 1771, 0, 0, 0, 0, 0, 264,
	73, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 74, 0, 0,
	0, 0, 0, 87, 0, 3245, 3246, 0, 3263, 3264,
	3265, 0, 0, 78, 0, 0, 0, 4073, 0, 0,
	0, 0, 0, 1233, 0, 0, 1233, 4020, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	264, 3099, 0, 878, 0, 4087, 264, 0, 0, 0,
	0, 0, 264, 87, 0, 0, 0, 107, 0, 0,
	0, 0, 93, 104, 2207, 0, 0, 0, 264, 0,
	264, 3171, 3172, 0, 682, 1070, 264, 1777, 0, 0,
	3260, 0, 0, 1231, 0, 1231, 0, 0, 767, 0,
	0, 0, 884, 878, 2668, 2668, 2668, 2668, 0, 0,
	0, 0, 0, 0, 0, 49, 0, 107, 0, 0,
	0, 0, 93, 104, 97, 0, 0, 264, 0, 1298,
	264, 94, 0, 0, 0, 1799, 1801, 0, 0, 0,
	2673, 0, 0, 0, 767, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 1479, 2321, 0,
	0, 0, 0, 264, 264, 0, 264, 0, 264, 0,
	264, 0, 264, 0, 0, 0, 185, 100, 0, 103,
	0, 94, 0, 0, 3251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1792, 0, 0, 2357, 0, 0,
	2358, 0, 2359, 0, 1479, 232, 0, 0, 0, 0,
	0, 0, 0, 879, 264, 264, 264, 264, 149, 0,
	0, 2673, 2673, 0, 0, 0, 0, 0, 0, 0,
	3245, 3246, 0, 3263, 3264, 3265, 0, 0, 0, 0,
	0, 748, 0, 0, 0, 767, 0, 0, 0, 3267,
	0, 0, 1374, 234, 0, 0, 2762, 0, 0, 0,
	0, 3269, 3270, 3271, 3272, 0, 1822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 152,
	0, 0, 4273, 0, 0, 0, 0, 0, 0, 0,
	0, 3261, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 3260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 4273, 227, 0, 97, 0, 185, 100,
	1233, 103, 1233, 0, 0, 0, 0, 0, 2508, 0,
	1793, 0, 0, 0, 0, 0, 0, 0, 2432, 188,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 1822, 0, 879, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 0, 185, 100,
	0, 103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 3251,
	0, 2673, 2673, 2673, 2673, 234, 0, 232, 682, 2947,
	2432, 0, 0, 0, 0, 879, 0, 0, 0, 0,
	149, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 152, 682, 0, 0, 0, 0, 3262, 0, 264,
	3268, 682, 2939, 2937, 0, 0, 189, 0, 0, 2941,
	2943, 2933, 0, 264, 233, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 3267, 0, 0, 226, 0, 264,
	1308, 2246, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 152, 0, 0, 0, 0, 1780, 1781, 1773, 1774,
	1775, 1776, 1778, 1779, 0, 0, 189, 0, 0, 0,
	0, 188, 0, 0, 233, 0, 3261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 264, 1308,
	0, 0, 0, 698, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 2786, 0, 0, 0, 0, 0, 264,
	0, 0, 264, 0, 0, 0, 264, 0, 264, 0,
	0, 1600, 0, 1298, 0, 264, 264, 0, 1308, 1308,
	2802, 0, 0, 0, 0, 264, 0, 3435, 3436, 0,
	3437, 3438, 3439, 0, 0, 3257, 3258, 3259, 1822, 0,
	0, 0, 3256, 3254, 3255, 3247, 3248, 3249, 3250, 3252,
	3253, 0, 2668, 2668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2839, 0, 0, 3477, 3478, 0, 3479, 3480, 3481, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	2935, 0, 2366, 0, 264, 0, 0, 0, 0, 0,
	0, 2949, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 3262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2948, 2940, 2938, 2942, 2944, 2934, 2936, 2950,
	0, 0, 0, 0, 264, 0, 0, 2946, 0, 0,
	0, 0, 2668, 2668, 2668, 2668, 2668, 2668, 2668, 2668,
	2668, 2668, 2668, 2668, 2668, 2668, 2668, 2668, 2668, 2668,
	2668, 2668, 0, 2668, 0, 0, 0, 264, 2971, 0,
	2953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1503, 0, 0, 264, 0, 264, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 3663,
	3664, 0, 0, 0, 3013, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2839, 0, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 3042, 884, 0, 2839, 2839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3257, 3258, 3259, 0, 0, 264, 0, 3256, 3254, 3255,
	3247, 3248, 3249, 3250, 3252, 3253, 0, 0, 0, 0,
	0, 0, 1312, 0, 264, 1298, 264, 0, 0, 0,
	1503, 0, 1503, 1308, 264, 0, 0, 1298, 0, 1298,
	0, 1298, 0, 0, 0, 0, 0, 0, 0, 3727,
	3728, 3729, 3730, 3731, 3732, 3733, 3734, 3735, 3736, 3737,
	3738, 3739, 3740, 3741, 3742, 3743, 3744, 3745, 3746, 0,
	3750, 0, 0, 0, 0, 0, 0, 0, 1487, 0,
	0, 0, 0, 264, 264, 264, 264, 1298, 0, 0,
	1298, 0, 264, 0, 1303, 264, 2954, 0, 0, 2673,
	2673, 0, 0, 0, 0, 2945, 0, 0, 0, 0,
	0, 0, 1525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 1562, 0,
	0, 0, 0, 1303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1603, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1616,
	1303, 1303, 0, 0, 0, 0, 0, 0, 0, 2673,
	2673, 2673, 2673, 2673, 2673, 2673, 2673, 2673, 2673, 2673,
	2673, 2673, 2673, 2673, 2673, 2673, 2673, 2673, 2673, 0,
	2673, 0, 1769, 1770, 0, 1802, 1803, 1804, 1813, 1814,
	1815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 1800, 0, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	1503, 0, 0, 1769, 1770, 0, 0, 0, 1825, 0,
	0, 0, 1468, 0, 0, 0, 0, 1771, 0, 0,
	0, 0, 0, 0, 0, 0, 1800, 1791, 0, 0,
	0, 0, 0, 1772, 0, 0, 1788, 0, 0, 1479,
	0, 0, 0, 3245, 3246, 0, 3263, 3264, 3265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1825,
	0, 0, 0, 0, 0, 4019, 0, 0, 1771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1805, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 1795, 1796, 1797, 0, 0, 0, 3260, 0,
	0, 1777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 1769, 1770, 0, 1802, 1803, 1804, 1813,
	1814, 1815, 0, 0, 0, 0, 0, 0, 264, 1810,
	0, 0, 1820, 682, 0, 1806, 1800, 0, 682, 1799,
	1801, 682, 1777, 1772, 682, 682, 0, 0, 0, 0,
	682, 1479, 1819, 0, 0, 0, 0, 0, 264, 1303,
	0, 0, 0, 0, 0, 1786, 1787, 0, 0, 1825,
	0, 1503, 0, 0, 0, 0, 0, 0, 1771, 0,
	0, 0, 3251, 1808, 0, 3946, 0, 0, 1791, 0,
	1799, 1801, 0, 0, 0, 1503, 0, 1788, 1792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 1479,
	0, 1479, 264, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2839, 2839, 264, 74, 3395, 0, 3267, 0, 1792,
	0, 2839, 0, 0, 3406, 0, 3999, 0, 0, 0,
	78, 0, 2839, 3406, 0, 2839, 3406, 0, 0, 3406,
	1822, 0, 1794, 1795, 1796, 1797, 0, 0, 0, 0,
	0, 0, 1777, 0, 264, 264, 3395, 0, 264, 3261,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 0, 0, 3395, 0,
	264, 0, 3467, 3467, 0, 0, 1298, 0, 0, 0,
	1810, 1822, 1798, 1820, 0, 0, 0, 0, 0, 1805,
	1799, 1801, 2839, 0, 2839, 0, 3493, 2839, 3395, 0,
	878, 2839, 3395, 0, 1793, 767, 0, 1816, 0, 1817,
	0, 0, 49, 0, 107, 0, 1786, 1787, 0, 93,
	104, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 1298, 0, 1808, 0, 0, 0, 0, 264,
	0, 0, 1503, 0, 0, 0, 0, 0, 0, 1792,
	0, 0, 0, 0, 0, 1793, 264, 3531, 0, 0,
	3533, 2839, 1824, 0, 264, 0, 0, 0, 264, 2668,
	0, 1308, 0, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 3013, 1818, 0, 1298, 3262, 264, 0, 0, 2839,
	0, 682, 0, 0, 0, 0, 0, 0, 2839, 0,
	1807, 0, 0, 1824, 0, 0, 0, 0, 0, 0,
	0, 1822, 0, 0, 0, 2668, 0, 0, 0, 264,
	3013, 0, 0, 3013, 1809, 0, 0, 0, 0, 0,
	1077, 0, 1783, 1784, 1790, 1812, 1789, 1785, 0, 1782,
	1780, 1781, 1773, 1774, 1775, 1776, 1778, 1779, 0, 0,
	0, 0, 0, 0, 0, 3633, 0, 0, 0, 0,
	0, 1805, 0, 1798, 0, 0, 0, 1805, 0, 0,
	0, 0, 3639, 1805, 0, 1503, 0, 0, 1298, 264,
	0, 264, 0, 0, 0, 1793, 0, 1298, 0, 0,
	0, 0, 1781, 1773, 1774, 1775, 1776, 1778, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4197,
	0, 0, 1811, 97, 0, 0, 4281, 264, 0, 0,
	0, 0, 4214, 3257, 3258, 3259, 0, 73, 0, 0,
	3256, 3254, 3255, 3247, 3248, 3249, 3250, 3252, 3253, 0,
	0, 0, 0, 1824, 74, 4235, 0, 2276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	78, 0, 1805, 1312, 2290, 185, 100, 1805, 103, 0,
	0, 0, 4321, 0, 2292, 3705, 1805, 1479, 1479, 0,
	0, 1805, 0, 0, 0, 0, 2300, 2668, 2303, 2304,
	2305, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	87, 0, 879, 0, 0, 0, 0, 149, 0, 0,
	0, 0, 0, 0, 0, 1809, 0, 0, 0, 0,
	0, 0, 0, 1783, 1784, 1790, 1812, 1789, 1785, 0,
	1782, 1780, 1781, 1773, 1774, 1775, 1776, 1778, 1779, 0,
	878, 0, 234, 3220, 0, 1805, 0, 3221, 0, 0,
	1479, 1805, 0, 0, 107, 0, 2673, 0, 0, 93,
	104, 0, 0, 0, 0, 0, 0, 0, 152, 0,
	0, 0, 264, 264, 0, 2246, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 682, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 158, 2673, 227, 0, 0, 1503, 1503, 94, 73,
	0, 46, 45, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 1503, 0, 1503, 0, 74, 0, 1598, 153,
	0, 0, 0, 0, 4462, 3245, 3246, 0, 3263, 3264,
	3265, 0, 78, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 67, 0, 0, 0, 3672, 0, 0,
	48, 0, 155, 1769, 1770, 0, 0, 0, 0, 0,
	0, 0, 1805, 1805, 1805, 1805, 1805, 1805, 1805, 1805,
	47, 1303, 87, 0, 0, 0, 1800, 0, 0, 0,
	0, 0, 1805, 1772, 0, 0, 0, 0, 0, 767,
	0, 0, 0, 0, 0, 1805, 0, 0, 50, 68,
	3260, 0, 0, 0, 0, 0, 0, 51, 0, 1825,
	0, 0, 57, 0, 0, 0, 156, 0, 1771, 0,
	0, 0, 3467, 0, 49, 0, 107, 0, 1791, 0,
	0, 93, 104, 0, 0, 264, 0, 1788, 0, 0,
	2672, 0, 0, 97, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1805, 0, 0, 0, 0, 0, 1805,
	3395, 0, 264, 0, 2673, 0, 698, 698, 1308, 0,
	0, 0, 52, 0, 0, 0, 1479, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	94, 4018, 0, 0, 3251, 185, 100, 0, 103, 264,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 264,
	0, 0, 1794, 1795, 1796, 1797, 0, 0, 0, 0,
	0, 0, 1777, 0, 232, 0, 0, 0, 2839, 264,
	0, 0, 879, 0, 0, 0, 0, 149, 3042, 3042,
	0, 0, 4521, 0, 884, 884, 2839, 0, 0, 0,
	3013, 3013, 0, 0, 884, 2839, 0, 0, 0, 3267,
	0, 0, 0, 0, 0, 0, 4541, 0, 0, 0,
	1799, 1801, 234, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 1077, 1077, 0, 2803,
	1312, 0, 0, 0, 0, 0, 1786, 1787, 152, 0,
	0, 3261, 0, 1460, 0, 0, 0, 1460, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 1792,
	0, 0, 0, 0, 226, 97, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 4038, 53, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 56, 0, 188, 0,
	0, 59, 0, 1822, 0, 0, 0, 0, 0, 0,
	69, 0, 0, 0, 0, 0, 58, 185, 100, 0,
	103, 0, 0, 4627, 54, 0, 0, 0, 157, 4629,
	0, 1822, 0, 0, 0, 0, 55, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 232, 0, 0, 2956,
	1503, 0, 264, 0, 62, 0, 0, 0, 0, 149,
	0, 0, 0, 3245, 3246, 264, 3263, 3264, 3265, 0,
	0, 0, 0, 0, 154, 0, 0, 3262, 0, 0,
	1308, 0, 0, 1798, 0, 3671, 0, 0, 0, 0,
	0, 0, 0, 1308, 234, 0, 0, 0, 0, 0,
	2839, 2839, 0, 3467, 2839, 1793, 0, 0, 0, 0,
	0, 4120, 0, 4120, 1503, 0, 0, 0, 0, 0,
	152, 0, 0, 0, 2839, 0, 3406, 0, 0, 0,
	1503, 1503, 264, 3395, 0, 189, 0, 0, 3260, 0,
	0, 0, 0, 233, 0, 0, 3395, 0, 264, 3395,
	0, 264, 0, 3467, 0, 0, 226, 3075, 0, 0,
	0, 0, 0, 1824, 0, 227, 0, 0, 2839, 0,
	2839, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	1303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 3, 0, 0, 0, 3245, 3246, 0,
	3263, 3264, 3265, 0, 0, 2839, 0, 0, 1923, 0,
	4201, 1805, 0, 0, 0, 3257, 3258, 3259, 0, 0,
	0, 264, 3256, 3254, 3255, 3247, 3248, 3249, 3250, 3252,
	3253, 264, 3251, 0, 0, 1805, 0, 0, 0, 0,
	0, 0, 0, 0, 2246, 0, 0, 1789, 1785, 0,
	1782, 1780, 1781, 1773, 1774, 1775, 1776, 1778, 1779, 0,
	4120, 0, 0, 1503, 0, 0, 0, 0, 0, 0,
	0, 0, 3260, 1805, 0, 0, 0, 1805, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1805, 0, 0, 0, 0, 0, 3267, 0, 0,
	1805, 1805, 1805, 1805, 1805, 1805, 1805, 1805, 1805, 1805,
	1805, 1805, 1805, 1805, 1805, 1805, 1805, 1805, 1805, 1805,
	1805, 1805, 1805, 1805, 1805, 1805, 1805, 1805, 1805, 1805,
	1805, 1805, 1805, 1805, 1805, 1805, 0, 0, 0, 3261,
	0, 1805, 0, 1805, 1805, 1805, 1805, 0, 0, 0,
	0, 0, 0, 0, 0, 2672, 2672, 0, 0, 0,
	0, 0, 0, 0, 780, 0, 3251, 0, 0, 0,
	1805, 0, 0, 0, 0, 2839, 0, 3406, 0, 0,
	4313, 0, 0, 0, 0, 0, 0, 0, 264, 791,
	1460, 0, 0, 0, 0, 4333, 0, 4333, 1062, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1822, 0, 0, 0, 0, 0, 0, 0, 767,
	0, 1805, 0, 0, 0, 0, 0, 0, 0, 0,
	3467, 3267, 1298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3395, 0, 264,
	0, 1805, 0, 0, 1805, 0, 0, 1805, 0, 0,
	1805, 0, 0, 0, 1805, 1805, 1805, 1805, 1805, 1805,
	1805, 0, 4313, 3261, 0, 0, 0, 0, 0, 0,
	2839, 0, 785, 0, 0, 3262, 0, 0, 797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4411, 0,
	0, 0, 790, 0, 0, 0, 1077, 0, 0, 0,
	1503, 0, 0, 1460, 0, 0, 0, 0, 0, 0,
	0, 0, 4120, 4120, 0, 0, 0, 0, 0, 0,
	1805, 0, 0, 3266, 0, 2672, 2672, 2672, 2672, 0,
	264, 264, 1805, 0, 1805, 1822, 0, 0, 0, 1805,
	789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3705, 0, 2246, 743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1503,
	0, 0, 1503, 3467, 4478, 0, 1303, 0, 0, 0,
	0, 4313, 787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1100, 109, 0, 0, 0, 4120, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3262,
	4120, 0, 0, 3257, 3258, 3259, 0, 0, 0, 0,
	3256, 3254, 3255, 3247, 3248, 3249, 3250, 3252, 3253, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 796, 0, 0, 698, 1460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4120, 0, 264,
	4120, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	3406, 0, 0, 0, 0, 0, 0, 0, 0, 728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 782, 0, 1503, 0, 1503, 711,
	0, 0, 0, 0, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 786, 0, 0, 3257, 3258, 3259,
	0, 0, 4585, 0, 3256, 3254, 3255, 3247, 3248, 3249,
	3250, 3252, 3253, 713, 0, 4333, 0, 0, 264, 0,
	1037, 0, 0, 0, 714, 0, 0, 0, 742, 0,
	1503, 1057, 0, 1503, 0, 0, 0, 0, 0, 0,
	0, 0, 2839, 792, 0, 715, 0, 0, 3507, 784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 734, 0, 0,
	0, 1769, 1770, 0, 0, 0, 0, 1221, 0, 0,
	1805, 1805, 0, 1805, 0, 3547, 0, 716, 0, 0,
	3705, 0, 0, 0, 1800, 0, 781, 3555, 0, 0,
	0, 1772, 0, 0, 0, 0, 0, 1503, 0, 0,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 788, 0, 0, 1825, 0, 0,
	0, 0, 718, 0, 0, 719, 1771, 264, 744, 3596,
	3597, 0, 0, 0, 0, 0, 1791, 0, 0, 783,
	0, 0, 743, 0, 0, 1788, 0, 0, 0, 0,
	0, 0, 1460, 0, 0, 0, 0, 0, 0, 0,
	0, 794, 795, 0, 0, 0, 0, 733, 0, 4313,
	0, 0, 0, 0, 0, 0, 0, 1323, 0, 0,
	0, 0, 0, 0, 0, 0, 1479, 0, 0, 1147,
	0, 0, 0, 0, 0, 0, 1805, 0, 0, 3666,
	0, 0, 0, 0, 1062, 1062, 0, 2839, 0, 0,
	0, 0, 0, 0, 4120, 0, 4120, 0, 0, 1503,
	1794, 1795, 1796, 1797, 0, 0, 730, 0, 0, 0,
	1777, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1460, 0, 0, 0, 0,
	1805, 1805, 0, 2672, 2672, 0, 1505, 1805, 1511, 1503,
	1517, 0, 0, 0, 0, 1503, 0, 3266, 3266, 0,
	0, 1805, 1805, 0, 0, 0, 0, 0, 1799, 1801,
	0, 1805, 0, 0, 0, 0, 0, 1303, 0, 0,
	0, 0, 0, 0, 740, 1805, 721, 0, 0, 0,
	0, 0, 0, 3042, 1786, 1787, 0, 1805, 0, 0,
	0, 0, 2839, 0, 1460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 741, 0, 722, 1606, 3042, 1611,
	0, 0, 0, 0, 0, 0, 0, 1792, 0, 1620,
	1460, 1625, 0, 2672, 2672, 2672, 2672, 2672, 2672, 2672,
	2672, 2672, 2672, 2672, 2672, 2672, 2672, 2672, 2672, 2672,
	2672, 2672, 2672, 742, 2672, 3266, 3266, 3266, 3266, 0,
	0, 723, 0, 0, 0, 0, 738, 739, 736, 0,
	0, 0, 0, 0, 731, 0, 0, 724, 0, 0,
	0, 0, 0, 0, 0, 1769, 1770, 0, 0, 0,
	1805, 1813, 1814, 1815, 0, 0, 0, 1689, 0, 1822,
	1695, 0, 0, 0, 0, 0, 0, 0, 1800, 0,
	0, 0, 0, 0, 1238, 1772, 0, 0, 0, 725,
	0, 732, 0, 0, 1819, 0, 0, 0, 0, 0,
	726, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 727, 0, 0, 0, 0, 735,
	1771, 1798, 0, 0, 0, 0, 0, 0, 0, 0,
	1791, 0, 0, 744, 0, 0, 0, 0, 0, 1788,
	0, 0, 0, 1793, 729, 0, 0, 1460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 1827, 1828, 1829, 1830, 1831,
	1832, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1805, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 1824, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1794, 1795, 1796, 1797, 0, 1460,
	0, 0, 0, 0, 1777, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3896, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 1820, 0, 0, 0, 0,
	0, 0, 1799, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 1785, 0, 1782, 1780,
	1781, 1773, 1774, 1775, 1776, 1778, 1779, 0, 1786, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 1917, 1917,
	1917, 109, 0, 109, 0, 109, 1808, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1792, 0, 0, 0, 0, 0, 0, 3975, 3976,
	3977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1057, 109, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 109, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1805, 1805, 0, 0, 1805, 3266,
	3266, 1805, 0, 0, 0, 1805, 0, 0, 0, 0,
	0, 0, 1805, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1805, 0, 0, 0, 0,
	0, 0, 0, 0, 1062, 1798, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 1805, 1805,
	1805, 1805, 1805, 0, 0, 0, 0, 1793, 1805, 0,
	1805, 0, 0, 3266, 3266, 3266, 3266, 3266, 3266, 3266,
	3266, 3266, 3266, 3266, 3266, 3266, 3266, 3266, 3266, 3266,
	3266, 3266, 3266, 0, 1811, 0, 3266, 0, 0, 1805,
	1805, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1805, 0, 0, 0, 0, 0, 0, 0, 0,
	1805, 0, 0, 0, 0, 1824, 0, 0, 0, 0,
	0, 0, 0, 0, 4080, 4081, 0, 0, 0, 0,
	0, 0, 1037, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 0, 0, 0, 0, 1805, 2643,
	2644, 2645, 2646, 2639, 2640, 2641, 2642, 1238, 0, 1805,
	0, 1845, 0, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1805, 1812, 1789,
	1785, 0, 1782, 1780, 1781, 1773, 1774, 1775, 1776, 1778,
	1779, 0, 1238, 0, 0, 0, 1238, 0, 0, 0,
	0, 0, 0, 1238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2619, 2620, 2621, 2622, 0, 1312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1238, 0, 0,
	0, 0, 0, 0, 2631, 2632, 2633, 2634, 2627, 2628,
	2629, 2630, 2635, 2636, 2637, 2638, 0, 0, 0, 0,
	0, 0, 0, 1238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1937, 0, 1940, 0, 109,
	0, 0, 0, 1238, 0, 0, 1805, 0, 0, 0,
	1238, 0, 0, 0, 0, 0, 0, 1460, 4252, 0,
	4254, 0, 0, 0, 1238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2615, 2616,
	2617, 2618, 2623, 2624, 2625, 2626, 0, 0, 0, 0,
	1460, 0, 1805, 1805, 0, 0, 0, 1805, 1805, 0,
	0, 1805, 1805, 0, 0, 1460, 1805, 2345, 0, 0,
	1805, 0, 0, 0, 0, 1805, 0, 0, 0, 1238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1460,
	2672, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2369, 0, 4300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1077, 0,
	0, 0, 0, 0, 0, 0, 2407, 0, 2411, 0,
	0, 0, 1077, 0, 0, 2425, 2672, 0, 0, 0,
	0, 0, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
	2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451,
	2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
	2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 0, 2475,
	0, 2477, 2478, 2479, 2480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4380, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 1460, 2555, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2585,
	2588, 2591, 2594, 0, 2598, 2599, 2600, 2601, 2602, 2603,
	2604, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2664, 0, 2676, 2678, 2683, 0, 0, 0,
	0, 0, 0, 1460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1805, 1805, 1805, 0, 0, 0,
	0, 0, 0, 0, 0, 1805, 1805, 3266, 2672, 0,
	0, 0, 0, 0, 1805, 0, 0, 1805, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1769, 1770, 0, 1802, 1803, 1804, 1813, 1814,
	1815, 0, 1238, 0, 1238, 0, 0, 3266, 0, 0,
	0, 0, 0, 0, 1806, 1800, 0, 0, 0, 1238,
	1805, 1057, 1772, 1057, 0, 0, 0, 1805, 0, 0,
	0, 1819, 0, 0, 1805, 0, 0, 1998, 0, 0,
	0, 1238, 0, 1805, 0, 0, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 1771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 0, 0, 0,
	0, 1460, 0, 0, 1460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1312, 1312, 0, 0, 0, 1238, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 1238, 1312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1238, 0, 0, 0, 0, 0, 3266, 0,
	0, 1794, 1795, 1796, 1797, 0, 0, 0, 0, 0,
	1460, 1777, 0, 0, 0, 0, 0, 0, 0, 1805,
	0, 0, 1805, 0, 0, 0, 0, 1460, 0, 0,
	0, 0, 0, 0, 1037, 0, 0, 1037, 1037, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 1820, 0, 0, 0, 0, 0, 0, 1799,
	1801, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1805, 1816, 0, 1817, 0,
	0, 0, 0, 0, 0, 1786, 1787, 0, 0, 0,
	0, 0, 0, 2493, 2974, 2975, 0, 2977, 0, 0,
	0, 0, 0, 1808, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1057, 0, 0, 0, 0, 1792, 0,
	0, 0, 0, 1845, 1238, 1238, 0, 1845, 0, 0,
	0, 0, 0, 0, 1238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1769, 1770, 0,
	1802, 1803, 1804, 1813, 1814, 1815, 0, 0, 0, 1460,
	0, 1818, 0, 0, 0, 0, 0, 0, 0, 1806,
	1800, 0, 0, 0, 0, 0, 0, 1772, 0, 1807,
	0, 0, 0, 0, 0, 0, 1819, 0, 0, 0,
	1822, 0, 0, 1805, 0, 0, 0, 0, 0, 1221,
	0, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 1771, 0, 1805, 1940, 0, 0, 0, 0,
	0, 0, 1791, 0, 0, 0, 3100, 0, 1238, 0,
	1238, 1788, 1238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 0, 0, 0, 0, 0, 1238, 1238,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 1238,
	0, 0, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 1238, 0, 1238, 1238, 1238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 1826, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1794, 1795, 1796, 1797,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 0,
	0, 0, 1824, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1805, 0, 3154,
	3155, 1805, 0, 0, 1810, 3161, 0, 1820, 0, 0,
	0, 0, 0, 0, 1799, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 3175, 3176, 0, 0, 0, 0,
	2555, 1816, 0, 1817, 0, 0, 0, 0, 0, 0,
	1786, 1787, 0, 0, 1809, 0, 0, 0, 0, 1998,
	1998, 1238, 1783, 1784, 1790, 1812, 1789, 1785, 1808, 1782,
	1780, 1781, 1773, 1774, 1775, 1776, 1778, 1779, 0, 0,
	0, 0, 2551, 1792, 0, 3185, 2552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1460, 0, 0, 0, 0, 3211, 0,
	0, 0, 0, 0, 0, 0, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1460, 0,
	0, 0, 0, 0, 1807, 0, 0, 109, 0, 0,
	109, 0, 109, 0, 1238, 1822, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1769, 1770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 109, 0, 0, 109,
	0, 1772, 0, 0, 0, 109, 0, 1798, 0, 0,
	0, 0, 0, 0, 0, 0, 1238, 0, 2683, 2683,
	2683, 0, 0, 1238, 0, 0, 0, 1825, 0, 1793,
	0, 0, 1238, 1917, 0, 0, 1771, 0, 0, 0,
	0, 3304, 0, 0, 0, 0, 1791, 0, 0, 1238,
	0, 0, 0, 0, 0, 1788, 1811, 0, 0, 0,
	1460, 0, 1460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 0, 0,
	1460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3661,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1794, 1795, 1796, 1797, 0, 0, 0, 0, 0, 0,
	1777, 0, 0, 0, 0, 0, 1062, 0, 0, 1460,
	0, 0, 0, 0, 1238, 1238, 0, 0, 0, 1809,
	1062, 0, 0, 0, 0, 1460, 0, 1783, 1784, 1790,
	1812, 1789, 1785, 0, 1782, 1780, 1781, 1773, 1774, 1775,
	1776, 1778, 1779, 0, 0, 0, 0, 0, 1799, 1801,
	0, 4044, 0, 3425, 0, 0, 1238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2493, 0, 0,
	0, 0, 0, 0, 1786, 1787, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 0,
	1998, 0, 0, 0, 1460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1792, 0, 0,
	0, 0, 0, 1769, 1770, 0, 1802, 1803, 1804, 1813,
	1814, 1815, 0, 0, 0, 0, 0, 0, 1238, 0,
	0, 0, 0, 0, 0, 1806, 1800, 0, 0, 0,
	0, 0, 0, 1772, 1238, 0, 0, 1460, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1825,
	0, 0, 0, 0, 0, 0, 0, 1460, 1771, 1822,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 0,
	0, 0, 1238, 0, 0, 0, 0, 1788, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1460, 0,
	0, 0, 0, 1238, 0, 0, 0, 0, 0, 0,
	0, 1798, 0, 0, 0, 1238, 0, 1238, 0, 0,
	0, 0, 0, 1460, 0, 0, 0, 0, 0, 1111,
	0, 0, 1238, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1794, 1795, 1796, 1797, 0, 0, 0, 0,
	0, 0, 1777, 0, 1077, 0, 0, 0, 1221, 0,
	0, 0, 0, 0, 0, 263, 263, 263, 0, 0,
	0, 0, 0, 0, 1221, 1460, 0, 0, 0, 0,
	0, 1824, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 1820, 810, 0, 0, 0, 0, 0,
	1799, 1801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2425, 0, 1816, 0, 1817,
	810, 3658, 3659, 0, 0, 3662, 1786, 1787, 0, 3665,
	0, 0, 0, 0, 0, 1460, 0, 0, 3669, 0,
	0, 0, 0, 0, 1808, 0, 0, 3676, 0, 0,
	0, 0, 3304, 0, 0, 0, 0, 0, 0, 1792,
	0, 0, 0, 0, 0, 1789, 1785, 3689, 1782, 1780,
	1781, 1773, 1774, 1775, 1776, 1778, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3712, 3713, 0,
	3714, 3715, 3716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1818, 0, 0, 0, 0, 0, 3722, 0,
	0, 0, 3724, 0, 0, 0, 0, 0, 0, 0,
	1807, 109, 109, 0, 109, 109, 109, 0, 0, 0,
	0, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3753, 3754, 0, 0, 0,
	0, 0, 0, 0, 1234, 0, 0, 0, 0, 0,
	0, 0, 0, 3765, 0, 0, 0, 109, 109, 0,
	109, 109, 109, 0, 0, 0, 0, 0, 3774, 0,
	0, 0, 0, 1798, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1793, 1077, 1077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3822, 0, 0, 0,
	0, 0, 0, 1824, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3833, 0, 0, 0,
	0, 0, 1221, 0, 0, 1057, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3861, 0, 0, 0, 0, 1238, 1238, 0, 1077, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1238, 0, 0, 0, 1809, 0, 0, 0, 0,
	0, 0, 0, 1783, 1784, 1790, 1812, 1789, 1785, 1238,
	1782, 1780, 1781, 1773, 1774, 1775, 1776, 1778, 1779, 0,
	0, 1238, 0, 0, 1238, 0, 0, 3674, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1998, 0, 0, 0, 1238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1238, 1238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1917, 0, 0, 0, 0, 0, 0,
	0, 1238, 3970, 0, 0, 0, 1998, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1238, 0, 1238, 0, 0, 0, 0, 0,
	0, 0, 1769, 1770, 0, 0, 0, 0, 0, 4016,
	4017, 1238, 0, 0, 0, 4021, 4022, 1769, 1770, 0,
	4025, 4026, 1238, 0, 0, 1800, 1238, 0, 4030, 0,
	109, 0, 1772, 0, 0, 0, 0, 0, 0, 4034,
	1800, 0, 0, 0, 0, 0, 0, 1772, 1221, 1221,
	0, 0, 0, 1238, 0, 4039, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 1238, 1771, 1238, 0,
	0, 0, 1238, 1825, 0, 0, 0, 1791, 0, 0,
	0, 0, 1771, 0, 0, 0, 1788, 0, 0, 0,
	1238, 0, 1791, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 1238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 263, 263, 0, 0, 263, 0, 0, 0, 0,
	3660, 0, 0, 0, 1238, 1238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3160, 0, 0, 0, 0,
	0, 1794, 1795, 1796, 1797, 0, 0, 1238, 0, 0,
	0, 1777, 0, 0, 0, 0, 1794, 1795, 1796, 1797,
	0, 263, 0, 263, 263, 0, 1777, 263, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 810, 0, 0, 0,
	1238, 0, 0, 1238, 0, 0, 0, 0, 0, 1799,
	1801, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1799, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 263, 0, 0, 0,
	1786, 1787, 0, 0, 0, 0, 0, 0, 0, 0,
	1998, 0, 0, 0, 0, 0, 0, 0, 1792, 0,
	0, 263, 263, 0, 0, 0, 0, 0, 0, 1238,
	0, 0, 0, 1792, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 1238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1998, 1998, 0, 0,
	0, 0, 0, 0, 0, 1221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1998, 1998, 0, 0, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 4268, 4269, 4270,
	109, 0, 0, 0, 0, 0, 0, 0, 1998, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2425, 0, 0, 4279, 4280, 0, 0, 0, 0, 0,
	263, 0, 1798, 0, 0, 1238, 1238, 0, 0, 0,
	0, 4288, 4291, 0, 0, 0, 0, 1798, 0, 0,
	0, 0, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1238, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4334, 0,
	0, 0, 0, 0, 0, 0, 4341, 0, 0, 0,
	0, 0, 1824, 0, 0, 0, 0, 0, 0, 4348,
	0, 0, 1062, 0, 0, 0, 0, 1824, 0, 0,
	0, 0, 0, 1124, 109, 0, 4357, 0, 0, 0,
	1221, 0, 0, 0, 0, 0, 0, 0, 1221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	265, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1789, 1785, 0, 1782,
	1780, 1781, 1773, 1774, 1775, 1776, 1778, 1779, 265, 0,
	0, 1789, 1785, 0, 1782, 1780, 1781, 1773, 1774, 1775,
	1776, 1778, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 1238,
	0, 0, 0, 0, 1238, 0, 0, 0, 0, 0,
	0, 0, 1939, 0, 1234, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 1998, 0, 0,
	0, 0, 0, 263, 1939, 263, 0, 0, 0, 0,
	0, 810, 0, 0, 0, 0, 0, 0, 810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1238, 4483,
	0, 0, 4486, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 1238, 0, 0, 263, 109, 0, 0, 0,
	0, 0, 263, 1238, 1238, 1238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	1238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1238, 0, 0, 0,
	0, 0, 1238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1062, 1062, 0, 0, 0, 0,
	0, 0, 0, 0, 4539, 0, 0, 1238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1998, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2425, 0,
	0, 0, 0, 0, 0, 0, 0, 4291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1769, 1770,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1062, 0, 0, 0,
	0, 1800, 0, 0, 0, 0, 0, 1238, 1772, 0,
	0, 0, 0, 0, 0, 1238, 0, 0, 0, 1238,
	0, 1238, 0, 0, 0, 0, 0, 0, 1238, 0,
	0, 0, 263, 0, 1825, 0, 810, 0, 0, 1238,
	1238, 0, 0, 1771, 0, 0, 0, 0, 0, 1238,
	0, 0, 0, 1791, 0, 0, 4657, 4657, 4657, 0,
	0, 0, 1788, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1238, 0, 1238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4678, 0, 0, 263,
	0, 0, 0, 263, 0, 0, 0, 0, 1238, 263,
	0, 0, 0, 0, 0, 263, 0, 0, 1238, 0,
	1238, 0, 0, 1238, 0, 0, 3153, 0, 0, 0,
	2493, 263, 0, 263, 1238, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 1794, 1795, 1796,
	1797, 0, 0, 4657, 0, 0, 0, 1777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1238, 1238, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 1238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1238, 263, 1799, 1801, 0, 1238, 0,
	0, 0, 0, 0, 0, 0, 810, 263, 0, 263,
	0, 263, 0, 263, 0, 263, 0, 0, 0, 0,
	0, 1786, 1787, 1238, 0, 0, 1769, 1770, 0, 0,
	0, 0, 0, 1238, 1238, 1238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1238, 0, 0, 1800,
	0, 0, 0, 0, 1792, 0, 1772, 263, 263, 263,
	263, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	4657, 4811, 0, 0, 0, 0, 1238, 0, 0, 4815,
	0, 0, 1825, 0, 0, 0, 0, 0, 0, 0,
	109, 1771, 0, 0, 0, 0, 0, 1998, 0, 0,
	0, 1791, 0, 0, 0, 0, 0, 0, 0, 0,
	1788, 0, 0, 0, 0, 0, 0, 1238, 0, 1238,
	0, 0, 0, 0, 0, 0, 1822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1998, 0, 265, 0, 265, 265, 0, 1798, 265,
	0, 1321, 0, 0, 0, 1794, 1795, 1796, 1797, 0,
	0, 0, 0, 0, 0, 1777, 0, 0, 0, 0,
	1793, 0, 0, 0, 1238, 0, 0, 0, 0, 0,
	0, 1238, 0, 0, 0, 0, 0, 109, 0, 1238,
	1238, 0, 0, 109, 0, 265, 1321, 265, 265, 0,
	1321, 265, 265, 0, 0, 0, 0, 1321, 0, 0,
	0, 0, 0, 1799, 1801, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	0, 0, 0, 0, 1238, 0, 1234, 1238, 0, 1786,
	1787, 1321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1234, 0, 0, 1238, 1238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 1321, 0, 265,
	265, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 1321, 0, 0,
	0, 0, 0, 1998, 1321, 265, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1321, 0,
	0, 0, 1789, 1785, 0, 1782, 1780, 1781, 1773, 1774,
	1775, 1776, 1778, 1779, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	1238, 0, 0, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 263, 1238, 0, 263, 0, 0, 0, 263,
	1227, 263, 0, 1321, 0, 0, 0, 0, 263, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 1798, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 259, 678, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 1793, 0,
	1238, 0, 0, 1238, 0, 0, 0, 1238, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 1238, 1238, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 1238, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	810, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	1789, 1785, 0, 1782, 1780, 1781, 1773, 1774, 1775, 1776,
	1778, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1321, 0, 0, 0, 265, 265, 265,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 1321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 263, 263, 263,
	0, 0, 0, 0, 0, 263, 0, 0, 263, 265,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 943, 0, 991, 0, 1238, 0, 1238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 951,
	0, 1321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1321, 0, 0, 965, 0, 949, 948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 728, 0, 0, 1321, 0, 0, 967,
	0, 0, 0, 0, 0, 950, 0, 0, 0, 0,
	953, 0, 0, 711, 0, 999, 0, 0, 712, 0,
	0, 0, 0, 0, 962, 963, 0, 0, 0, 0,
	0, 0, 0, 980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 992, 955, 0, 0, 0, 0, 713, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 714, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 956,
	0, 0, 0, 0, 0, 0, 0, 0, 989, 715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 734, 0, 0, 0, 0, 0, 0, 990, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 1321, 1321,
	265, 716, 0, 0, 958, 0, 0, 0, 1321, 0,
	0, 0, 947, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 717, 0, 0, 0, 0, 0,
	0, 959, 960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 718, 0, 0, 719,
	968, 966, 0, 265, 0, 0, 0, 265, 961, 0,
	0, 0, 977, 265, 0, 0, 743, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	996, 988, 0, 0, 0, 265, 0, 265, 0, 0,
	0, 733, 0, 265, 0, 1234, 0, 0, 0, 0,
	0, 0, 1321, 0, 1321, 0, 1321, 0, 0, 0,
	0, 1234, 993, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1321, 1321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1321, 265, 0, 0, 265, 0, 0,
	0, 1939, 0, 0, 0, 1321, 0, 1321, 1321, 1321,
	730, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 954, 0, 0, 998, 0, 0,
	265, 265, 0, 265, 0, 265, 0, 265, 0, 265,
	1284, 0, 1284, 1284, 0, 0, 0, 0, 0, 952,
	0, 263, 0, 984, 985, 263, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	721, 265, 265, 265, 265, 0, 263, 0, 982, 0,
	0, 0, 1371, 0, 0, 0, 997, 978, 1477, 0,
	971, 969, 0, 974, 0, 0, 0, 0, 741, 975,
	722, 0, 945, 0, 994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 263, 0,
	0, 263, 0, 0, 0, 1321, 946, 0, 1939, 0,
	0, 0, 0, 0, 0, 269, 0, 742, 986, 0,
	976, 0, 0, 263, 0, 723, 973, 0, 0, 0,
	738, 739, 736, 0, 0, 0, 0, 995, 731, 0,
	828, 724, 0, 0, 0, 979, 0, 0, 0, 0,
	0, 0, 0, 0, 957, 0, 0, 0, 0, 0,
	830, 0, 1604, 1605, 0, 831, 0, 0, 981, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 725, 0, 732, 0, 0, 0, 0,
	802, 0, 263, 983, 726, 0, 0, 0, 1321, 0,
	0, 0, 0, 0, 832, 0, 849, 0, 727, 810,
	0, 0, 0, 735, 0, 0, 802, 263, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 744, 0, 0,
	0, 833, 0, 0, 0, 0, 834, 0, 729, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1234,
	0, 0, 0, 0, 0, 0, 0, 0, 858, 0,
	0, 1716, 0, 0, 835, 0, 0, 1321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 856, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 1321, 0, 0, 0, 0, 0, 0,
	0, 829, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 836, 0, 0, 837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 860, 0,
	0, 0, 263, 743, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 265,
	263, 0, 0, 265, 0, 265, 0, 0, 0, 0,
	0, 0, 265, 265, 0, 0, 0, 0, 1321, 1321,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 840, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1955,
	0, 265, 1321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1964, 0, 1477, 841, 1321, 0,
	0, 0, 0, 0, 0, 1234, 1234, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 742, 0, 1284, 0, 0, 0,
	0, 0, 265, 1477, 265, 0, 1321, 827, 0, 851,
	0, 265, 0, 0, 0, 0, 0, 0, 842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1321, 0, 0,
	0, 0, 0, 848, 0, 0, 0, 0, 0, 1321,
	0, 1321, 0, 0, 0, 0, 0, 0, 0, 0,
	843, 0, 265, 0, 844, 863, 1321, 862, 0, 0,
	0, 845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 265, 0, 846, 0, 0, 0, 0,
	855, 265, 0, 0, 0, 0, 864, 0, 861, 0,
	0, 0, 0, 0, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 265, 265, 265, 0, 0, 0, 0, 263, 265,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 265, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2232, 0, 0, 0, 2239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2252, 0, 0, 0,
	0, 0, 0, 1319, 0, 0, 0, 0, 0, 0,
	263, 0, 2264, 0, 2264, 0, 0, 0, 0, 0,
	2271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1377, 0,
	0, 0, 1377, 0, 0, 0, 0, 0, 0, 1319,
	0, 2239, 0, 0, 2296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2316, 0, 0, 0, 0,
	0, 0, 0, 1319, 0, 0, 0, 0, 2329, 0,
	2331, 0, 2333, 0, 2335, 0, 2336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1116, 0, 0, 0, 0, 1319,
	0, 0, 0, 0, 0, 0, 1319, 1234, 2362, 2363,
	2364, 0, 0, 0, 0, 1234, 0, 0, 0, 0,
	1319, 0, 0, 0, 0, 0, 0, 0, 1939, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1321, 1939, 1319, 1939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1321, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 1321, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1321, 1321,
	0, 0, 0, 0, 263, 265, 0, 0, 0, 265,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 1321, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 265, 0, 1321, 265, 0, 0, 0, 0,
	0, 0, 265, 1939, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1321, 265, 1321, 0,
	0, 0, 0, 0, 0, 0, 0, 2740, 0, 0,
	0, 0, 0, 0, 0, 1321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1321, 0, 0, 0,
	1321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1321, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	1321, 0, 1321, 0, 0, 0, 1321, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 2788, 1321, 265, 1284, 0, 0, 0,
	1284, 0, 1284, 0, 0, 0, 1321, 0, 0, 0,
	0, 263, 0, 265, 0, 0, 0, 0, 0, 2252,
	0, 0, 0, 0, 0, 1377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 802, 0, 0,
	0, 0, 0, 0, 802, 0, 0, 1319, 1321, 1321,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1321, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1319, 1321, 0, 265, 1321, 265, 0,
	0, 0, 0, 0, 1319, 0, 0, 0, 1477, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1939, 1939, 0, 1377, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2239,
	0, 0, 0, 1321, 0, 0, 0, 0, 2252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1939, 0, 0, 0, 0, 0, 3073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 3084, 0,
	3087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1319, 1319, 0, 0, 0, 0, 0, 0, 0, 0,
	1377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1939, 0, 263, 1939, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3115, 1477, 3117,
	1477, 0, 0, 0, 0, 0, 3123, 0, 0, 0,
	0, 0, 1321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1284, 0, 0, 0, 0, 0, 0, 0, 3151, 0,
	0, 0, 0, 0, 1319, 0, 1319, 0, 1319, 0,
	0, 0, 1320, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 1319, 1319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1319, 0, 1319,
	1319, 1319, 0, 0, 0, 0, 0, 1378, 0, 0,
	0, 1378, 0, 0, 0, 0, 263, 0, 1320, 0,
	0, 0, 802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1320, 0,
	0, 0, 0, 1321, 0, 0, 0, 0, 1321, 265,
	263, 0, 0, 0, 0, 0, 0, 0, 1320, 0,
	0, 0, 0, 0, 0, 1320, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 1320,
	0, 0, 0, 0, 0, 0, 265, 1377, 0, 0,
	0, 265, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 1321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1321, 1321, 1321,
	0, 0, 0, 0, 1320, 0, 0, 1939, 0, 1939,
	0, 0, 0, 0, 1321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1321, 0, 0, 0, 265, 0, 1321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1284, 0, 0, 1377, 1477, 1477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3393, 0, 0,
	0, 0, 0, 1321, 0, 1321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1321, 1321, 0, 0, 0, 0, 0,
	0, 0, 0, 1321, 0, 0, 0, 0, 3444, 3446,
	0, 0, 2252, 0, 0, 0, 1769, 1770, 0, 1802,
	1803, 1804, 1813, 1814, 1815, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 1800,
	1319, 1319, 0, 0, 0, 0, 1772, 0, 0, 265,
	0, 0, 1321, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 1321, 0, 1321, 265, 0, 1321, 265, 0,
	0, 0, 1825, 0, 0, 0, 0, 0, 1321, 0,
	0, 1771, 1377, 0, 1378, 0, 0, 0, 265, 0,
	0, 1791, 0, 0, 0, 0, 0, 0, 0, 0,
	1788, 0, 0, 0, 0, 0, 1320, 0, 0, 0,
	0, 0, 0, 0, 0, 1321, 1321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3544, 0,
	0, 0, 3548, 0, 0, 1321, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 1321, 265, 0,
	0, 0, 1321, 0, 1377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1319, 0, 1320, 0, 0, 1794, 1795, 1796, 1797, 0,
	0, 0, 0, 1320, 0, 1777, 0, 1321, 1321, 1321,
	0, 0, 0, 3601, 0, 0, 0, 0, 0, 0,
	1321, 0, 0, 0, 0, 0, 0, 1378, 0, 0,
	0, 0, 0, 0, 0, 0, 802, 0, 1319, 0,
	0, 0, 0, 1810, 0, 0, 1820, 0, 0, 0,
	1321, 0, 0, 1799, 1801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1319,
	1816, 0, 1817, 3643, 0, 1477, 0, 0, 0, 1786,
	1787, 1319, 0, 1319, 0, 0, 0, 0, 0, 0,
	0, 1321, 0, 1321, 0, 0, 0, 1808, 1319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3656, 1792, 0, 0, 0, 1321, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1818, 0, 0, 0, 1320,
	1320, 0, 0, 0, 0, 0, 0, 0, 0, 1378,
	0, 0, 0, 1807, 0, 0, 0, 0, 1321, 0,
	0, 0, 0, 0, 1822, 1321, 265, 0, 0, 0,
	0, 0, 0, 1321, 1321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1798, 0, 1321, 0,
	0, 1321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1793, 0,
	0, 0, 0, 1320, 0, 1320, 0, 1320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 265, 0,
	0, 0, 0, 1320, 1320, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 1320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1320, 0, 1320, 1320,
	1320, 0, 0, 0, 0, 0, 1824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 1809, 0,
	0, 0, 0, 0, 0, 0, 1783, 1784, 1790, 1812,
	1789, 1785, 0, 1782, 1780, 1781, 1773, 1774, 1775, 1776,
	1778, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	3223, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 1321, 0, 0, 0, 0, 1378, 0, 0, 0,
	0, 1321, 1321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2252, 1769, 1770, 0,
	1802, 1803, 1804, 1813, 1814, 1815, 0, 0, 0, 0,
	0, 0, 1377, 2252, 0, 0, 0, 0, 0, 1806,
	1800, 0, 0, 3934, 0, 0, 0, 1772, 0, 0,
	0, 0, 0, 0, 0, 265, 1819, 0, 2252, 0,
	0, 0, 0, 3952, 0, 1377, 0, 0, 0, 1378,
	0, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	1377, 0, 1771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 0, 0, 0, 0, 0, 0, 0,
	265, 1788, 0, 0, 1377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1319, 1319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4001, 0, 0, 0, 0, 0, 0, 1378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1378, 0, 0, 1319, 0, 0,
	0, 0, 0, 0, 265, 0, 1794, 1795, 1796, 1797,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 0, 0, 1820, 1319, 0,
	1319, 0, 0, 0, 1799, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1377, 0, 0,
	0, 1816, 0, 1817, 0, 0, 0, 0, 1319, 0,
	1786, 1787, 1319, 0, 0, 0, 0, 0, 0, 1320,
	1320, 0, 0, 0, 0, 0, 0, 0, 1808, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1319,
	0, 0, 0, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 1319, 0, 1319, 0, 0, 0, 1377, 0,
	0, 1378, 0, 0, 0, 802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 0, 1319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 0, 4137, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 0, 0, 0,
	0, 0, 2252, 0, 0, 0, 0, 0, 0, 0,
	1319, 1319, 0, 1378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1320,
	0, 0, 0, 1319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	0, 0, 0, 0, 0, 2252, 1377, 1320, 0, 1377,
	0, 0, 0, 0, 0, 4223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1320, 0, 1320, 0, 0, 0, 0, 1824, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1809,
	0, 0, 0, 0, 0, 0, 0, 1783, 1784, 1790,
	1812, 1789, 1785, 0, 1782, 1780, 1781, 1773, 1774, 1775,
	1776, 1778, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 3222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1769, 1770, 0, 1802, 1803, 1804, 1813, 1814,
	1815, 0, 0, 2252, 1377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 1800, 0, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 1771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4452, 1477, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 1795, 1796, 1797, 0, 0, 0, 0, 0,
	0, 1777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1319, 0, 0, 0, 0,
	1319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 1820, 0, 0, 0, 0, 0, 0, 1799,
	1801, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1816, 0, 1817, 0,
	0, 1378, 0, 0, 1319, 1786, 1787, 0, 0, 0,
	0, 0, 0, 4544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1808, 0, 0, 0, 0, 0, 1319,
	1319, 1319, 0, 0, 1378, 0, 0, 0, 1792, 0,
	0, 0, 0, 0, 0, 0, 1319, 0, 0, 1378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1319, 0, 0, 0, 0, 0, 1377, 0,
	0, 0, 0, 1378, 0, 0, 0, 0, 0, 0,
	0, 1818, 0, 0, 0, 0, 0, 0, 0, 1320,
	1320, 0, 0, 1377, 0, 0, 0, 0, 0, 1807,
	0, 0, 4595, 0, 0, 0, 0, 0, 0, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1320, 0, 0, 0, 0,
	0, 0, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1320, 0, 1320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 0, 1377, 1378, 1377, 0, 0,
	0, 4698, 0, 0, 0, 0, 0, 1320, 0, 0,
	0, 1320, 0, 0, 0, 1319, 1319, 0, 0, 0,
	0, 0, 1824, 0, 0, 1377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1320, 0, 1320, 0, 0, 0, 1378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1319, 1320, 0, 0, 0, 0,
	0, 0, 0, 0, 1377, 0, 1319, 1320, 0, 1319,
	0, 0, 0, 0, 1809, 0, 0, 0, 0, 0,
	1377, 0, 1783, 1784, 1790, 1812, 1789, 1785, 0, 1782,
	1780, 1781, 1773, 1774, 1775, 1776, 1778, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 3219, 0, 0, 1320,
	1320, 0, 0, 0, 0, 0, 0, 1319, 1319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1320, 0, 0, 0, 0, 1319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1377,
	0, 0, 0, 0, 1319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1378, 0, 0, 1378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1319,
	1319, 1319, 1769, 1770, 0, 1802, 1803, 1804, 1813, 1814,
	1815, 0, 1377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 1800, 0, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 1377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 0,
	0, 0, 0, 0, 1378, 0, 0, 1771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 0, 0,
	0, 1378, 0, 1377, 0, 1319, 1788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 1795, 1796, 1797, 0, 0, 0, 0, 0,
	1377, 1777, 0, 0, 0, 0, 0, 1319, 0, 0,
	0, 0, 0, 0, 0, 1319, 1319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 1820, 1378, 0, 0, 0, 0, 0, 1799,
	1801, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1377, 0, 0, 1319, 0, 0, 1816, 0, 1817, 0,
	0, 0, 0, 0, 0, 1786, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1808, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1792, 0,
	1769, 1770, 0, 1802, 1803, 1804, 1813, 1814, 1815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 1800, 0, 0, 0, 0, 0, 0,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	0, 1818, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1825, 0, 0, 1807,
	0, 0, 0, 0, 0, 1771, 0, 0, 0, 0,
	1822, 0, 0, 0, 0, 1791, 0, 0, 0, 0,
	0, 0, 0, 0, 1788, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1320, 0, 0, 0, 0, 1320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1319, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 1319, 1319, 0, 0, 0, 0, 1794,
	1795, 1796, 1797, 1320, 0, 0, 0, 0, 0, 1777,
	1319, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1320, 1320,
	1320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 0, 1320, 0, 1810, 0, 0,
	1820, 0, 0, 0, 0, 0, 0, 1799, 1801, 0,
	0, 1320, 0, 0, 0, 0, 0, 1378, 0, 0,
	0, 0, 0, 0, 1816, 0, 1817, 0, 0, 0,
	0, 0, 0, 1786, 1787, 0, 0, 0, 0, 0,
	0, 0, 1378, 0, 0, 0, 0, 0, 0, 0,
	0, 1808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1809, 0, 1792, 0, 0, 0,
	0, 0, 1783, 1784, 1790, 1812, 1789, 1785, 0, 1782,
	1780, 1781, 1773, 1774, 1775, 1776, 1778, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 3218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1822, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1378, 0, 1378, 0, 0, 0,
	0, 0, 0, 0, 0, 1769, 1770, 0, 1802, 1803,
	1804, 1813, 1814, 1815, 1320, 1320, 0, 0, 0, 0,
	1798, 0, 0, 0, 1378, 0, 0, 1806, 1800, 0,
	0, 0, 0, 0, 0, 1772, 0, 0, 0, 0,
	0, 0, 1793, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 1811,
	1771, 0, 0, 1320, 0, 0, 0, 0, 0, 0,
	1791, 0, 0, 1378, 0, 1320, 0, 0, 1320, 1788,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1378,
	1824, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1320, 1320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1320, 0, 0, 0,
	0, 0, 0, 0, 1794, 1795, 1796, 1797, 1378, 0,
	0, 0, 1809, 1320, 1777, 0, 0, 0, 0, 0,
	1783, 1784, 1790, 1812, 1789, 1785, 0, 1782, 1780, 1781,
	1773, 1774, 1775, 1776, 1778, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 3217, 0, 0, 0, 1320, 1320,
	1320, 0, 1810, 0, 0, 1820, 0, 0, 0, 0,
	0, 1378, 1799, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1816,
	0, 1817, 0, 0, 0, 0, 0, 0, 1786, 1787,
	0, 1378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1808, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1378, 0, 1320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1378, 0, 0,
	0, 0, 0, 0, 1818, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1378,
	0, 0, 0, 0, 0, 0, 1320, 0, 0, 0,
	0, 0, 0, 0, 1320, 1320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1378,
	0, 0, 1320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1809, 0, 0,
	0, 0, 0, 0, 0, 1783, 1784, 1790, 1812, 1789,
	1785, 0, 1782, 1780, 1781, 1773, 1774, 1775, 1776, 1778,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 2552,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1375,
	0, 0, 1320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1320, 1320, 0, 0, 273, 275, 274, 276,
	277, 278, 279, 1380, 280, 281, 1381, 1382, 1383, 1320,
	1384, 624, 1385, 1386, 1387, 1388, 282, 283, 1178, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 1389, 629, 292, 293, 294, 295, 296, 297,
	1390, 1391, 0, 298, 630, 631, 632, 1392, 299, 300,
	633, 1393, 1322, 1394, 301, 302, 303, 304, 305, 306,
	307, 0, 1395, 309, 310, 311, 308, 312, 1396, 313,
	0, 314, 315, 316, 317, 318, 319, 1397, 320, 321,
	322, 1179, 323, 324, 325, 1398, 1399, 1401, 1400, 1402,
	1403, 1404, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 1405, 335, 332, 333, 1406, 336, 334, 337, 1407,
	338, 339, 340, 1408, 1409, 341, 342, 343, 1410, 344,
	345, 1411, 346, 347, 348, 1412, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 1413, 270, 1414, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 1415, 367, 368,
	1416, 1417, 1180, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 1418, 381, 642,
	1419, 643, 382, 1420, 383, 384, 385, 386, 387, 644,
	645, 646, 466, 1182, 388, 389, 1421, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	1422, 1181, 398, 647, 648, 1423, 649, 1424, 400, 401,
	1183, 650, 1184, 402, 403, 404, 1185, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 1425, 412, 414,
	413, 1426, 415, 651, 1186, 416, 417, 1187, 1427, 418,
	0, 0, 0, 419, 420, 423, 1428, 1429, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1188, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1189, 462, 452, 1430, 272, 1190, 463, 464, 1431, 652,
	465, 653, 467, 468, 1432, 0, 469, 0, 1433, 1434,
	471, 472, 473, 1435, 1436, 474, 475, 654, 1191, 476,
	1192, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 1437, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 1438,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 1439, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 1440, 525, 526, 527,
	1193, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 1441, 550, 551, 549, 552, 553, 554, 1442, 555,
	556, 538, 539, 557, 558, 1194, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 1443, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 1444, 582, 583, 0, 579, 570, 1445,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 1446,
	592, 665, 666, 667, 668, 1447, 601, 1448, 593, 594,
	595, 669, 596, 670, 1449, 597, 598, 599, 600, 0,
	602, 603, 1450, 1451, 604, 605, 606, 608, 609, 607,
	610, 1452, 611, 1453, 0, 612, 613, 614, 671, 672,
	673, 1454, 616, 615, 617, 674, 1455, 618, 1456, 1457,
	1458, 1459, 619, 620, 675, 621, 622, 623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1375, 0, 0, 0, 0,
	0, 0, 0, 2718, 0, 0, 0, 0, 0, 0,
	0, 2719, 273, 275, 274, 276, 277, 278, 279, 1380,
	280, 281, 1381, 1382, 1383, 0, 1384, 624, 1385, 1386,
	1387, 1388, 282, 283, 1178, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 1389, 629,
	292, 293, 294, 295, 296, 297, 1390, 1391, 0, 298,
	630, 631, 632, 1392, 299, 300, 633, 1393, 1322, 1394,
	301, 302, 303, 304, 305, 306, 307, 0, 1395, 309,
	310, 311, 308, 312, 1396, 313, 0, 314, 315, 316,
	317, 318, 319, 1397, 320, 321, 322, 1179, 323, 324,
	325, 1398, 1399, 1401, 1400, 1402, 1403, 1404, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 1405, 335, 332,
	333, 1406, 336, 334, 337, 1407, 338, 339, 340, 1408,
	1409, 341, 342, 343, 1410, 344, 345, 1411, 346, 347,
	348, 1412, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 1413, 270,
	1414, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 1415, 367, 368, 1416, 1417, 1180, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 1418, 381, 642, 1419, 643, 382, 1420,
	383, 384, 385, 386, 387, 644, 645, 646, 466, 1182,
	388, 389, 1421, 390, 391, 392, 393, 394, 0, 0,
	0, 271, 395, 396, 397, 399, 1422, 1181, 398, 647,
	648, 1423, 649, 1424, 400, 401, 1183, 650, 1184, 402,
	403, 404, 1185, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 1425, 412, 414, 413, 1426, 415, 651,
	1186, 416, 417, 1187, 1427, 418, 0, 0, 0, 419,
	420, 423, 1428, 1429, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 1188, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 1189, 462, 452, 1430,
	272, 1190, 463, 464, 1431, 652, 465, 653, 467, 468,
	1432, 0, 469, 0, 1433, 1434, 471, 472, 473, 1435,
	1436, 474, 475, 654, 1191, 476, 1192, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 1437,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 1438, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 1439, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 1440, 525, 526, 527, 1193, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 1441, 550, 551,
	549, 552, 553, 554, 1442, 555, 556, 538, 539, 557,
	558, 1194, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 1443, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 1444,
	582, 583, 0, 579, 570, 1445, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 1446, 592, 665, 666, 667,
	668, 1447, 601, 1448, 593, 594, 595, 669, 596, 670,
	1449, 597, 598, 599, 600, 0, 602, 603, 1450, 1451,
	604, 605, 606, 608, 609, 607, 610, 1452, 611, 1453,
	0, 612, 613, 614, 671, 672, 673, 1454, 616, 615,
	617, 674, 1455, 618, 1456, 1457, 1458, 1459, 619, 620,
	675, 621, 622, 623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1375,
	0, 0, 0, 0, 3683, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3685, 273, 275, 274, 276,
	277, 278, 279, 1380, 280, 281, 1381, 1382, 1383, 0,
	1384, 624, 1385, 1386, 1387, 1388, 282, 283, 1178, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 1389, 629, 292, 293, 294, 295, 296, 297,
	1390, 1391, 0, 298, 630, 631, 632, 1392, 299, 300,
	633, 1393, 1322, 1394, 301, 302, 303, 304, 305, 306,
	307, 0, 1395, 309, 310, 311, 308, 312, 1396, 313,
	0, 314, 315, 316, 317, 318, 319, 1397, 320, 321,
	322, 1179, 323, 324, 325, 1398, 1399, 1401, 1400, 1402,
	1403, 1404, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 1405, 335, 332, 333, 1406, 336, 334, 337, 1407,
	338, 339, 340, 1408, 1409, 341, 342, 343, 1410, 344,
	345, 1411, 346, 347, 348, 1412, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 1413, 270, 1414, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 1415, 367, 368,
	1416, 1417, 1180, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 1418, 381, 642,
	1419, 643, 382, 1420, 383, 384, 385, 386, 387, 644,
	645, 646, 466, 1182, 388, 389, 1421, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	1422, 1181, 398, 647, 648, 1423, 649, 1424, 400, 401,
	1183, 650, 1184, 402, 403, 404, 1185, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 1425, 412, 414,
	413, 1426, 415, 651, 1186, 416, 417, 1187, 1427, 418,
	0, 0, 0, 419, 420, 423, 1428, 1429, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1188, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1189, 462, 452, 1430, 272, 1190, 463, 464, 1431, 652,
	465, 653, 467, 468, 1432, 0, 469, 0, 1433, 1434,
	471, 472, 473, 1435, 1436, 474, 475, 654, 1191, 476,
	1192, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 1437, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 1438,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 1439, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 1440, 525, 526, 527,
	1193, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 1441, 550, 551, 549, 552, 553, 554, 1442, 555,
	556, 538, 539, 557, 558, 1194, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 1443, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 1444, 582, 583, 0, 579, 570, 1445,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 1446,
	592, 665, 666, 667, 668, 1447, 601, 1448, 593, 594,
	595, 669, 596, 670, 1449, 597, 598, 599, 600, 0,
	602, 603, 1450, 1451, 604, 605, 606, 608, 609, 607,
	610, 1452, 611, 1453, 0, 612, 613, 614, 671, 672,
	673, 1454, 616, 615, 617, 674, 1455, 618, 1456, 1457,
	1458, 1459, 619, 620, 675, 621, 622, 623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4072, 273, 275, 274, 276, 277, 278,
	279, 1380, 280, 281, 1381, 1382, 1383, 0, 1384, 624,
	1385, 1386, 1387, 1388, 282, 283, 1178, 284, 285, 286,
	287, 288, 289, 625, 626, 0, 290, 627, 291, 628,
	1389, 629, 292, 293, 294, 295, 296, 297, 1390, 1391,
	0, 298, 630, 631, 632, 1392, 299, 300, 633, 1393,
	1322, 1394, 301, 302, 303, 304, 305, 306, 307, 0,
	1395, 309, 310, 311, 308, 312, 1396, 313, 0, 314,
	315, 316, 317, 318, 319, 1397, 320, 321, 322, 1179,
	323, 324, 325, 1398, 1399, 1401, 1400, 1402, 1403, 1404,
	326, 327, 328, 329, 330, 0, 331, 634, 635, 1405,
	335, 332, 333, 1406, 336, 334, 337, 1407, 338, 339,
	340, 1408, 1409, 341, 342, 343, 1410, 344, 345, 1411,
	346, 347, 348, 1412, 349, 350, 636, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 637, 638, 362,
	1413, 270, 1414, 0, 0, 0, 0, 363, 364, 365,
	639, 0, 0, 0, 366, 1415, 367, 368, 1416, 1417,
	1180, 369, 370, 371, 640, 641, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 1418, 381, 642, 1419, 643,
	382, 1420, 383, 384, 385, 386, 387, 644, 645, 646,
	466, 1182, 388, 389, 1421, 390, 391, 392, 393, 394,
	0, 0, 0, 271, 395, 396, 397, 399, 1422, 1181,
	398, 647, 648, 1423, 649, 1424, 400, 401, 1183, 650,
	1184, 402, 403, 404, 1185, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 1425, 412, 414, 413, 1426,
	415, 651, 1186, 416, 417, 1187, 1427, 418, 0, 0,
	0, 419, 420, 423, 1428, 1429, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 1188, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 1189, 462,
	452, 1430, 272, 1190, 463, 464, 1431, 652, 465, 653,
	467, 468, 1432, 0, 469, 0, 1433, 1434, 471, 472,
	473, 1435, 1436, 474, 475, 654, 1191, 476, 1192, 655,
	477, 478, 470, 479, 480, 481, 482, 483, 484, 485,
	486, 1437, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 658, 495, 659, 496, 497, 1438, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 660, 507,
	509, 508, 510, 1439, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 1440, 525, 526, 527, 1193, 528,
	529, 530, 531, 532, 661, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 1441,
	550, 551, 549, 552, 553, 554, 1442, 555, 556, 538,
	539, 557, 558, 1194, 559, 560, 561, 562, 563, 564,
	565, 662, 0, 566, 1443, 567, 568, 569, 571, 540,
	572, 577, 578, 663, 573, 574, 575, 576, 664, 580,
	581, 1444, 582, 583, 0, 579, 570, 1445, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 1446, 592, 665,
	666, 667, 668, 1447, 601, 1448, 593, 594, 595, 669,
	596, 670, 1449, 597, 598, 599, 600, 0, 602, 603,
	1450, 1451, 604, 605, 606, 608, 609, 607, 610, 1452,
	611, 1453, 0, 612, 613, 614, 671, 672, 673, 1454,
	616, 615, 617, 674, 1455, 618, 1456, 1457, 1458, 1459,
	619, 620, 675, 621, 622, 623, 0, 0, 0, 0,
	1375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4274, 273, 275, 274,
	276, 277, 278, 279, 1380, 280, 281, 1381, 1382, 1383,
	0, 1384, 624, 1385, 1386, 1387, 1388, 282, 283, 1178,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 1389, 629, 292, 293, 294, 295, 296,
	297, 1390, 1391, 0, 298, 630, 631, 632, 1392, 299,
	300, 633, 1393, 1322, 1394, 301, 302, 303, 304, 305,
	306, 307, 0, 1395, 309, 310, 311, 308, 312, 1396,
	313, 0, 314, 315, 316, 317, 318, 319, 1397, 320,
	321, 322, 1179, 323, 324, 325, 1398, 1399, 1401, 1400,
	1402, 1403, 1404, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 1405, 335, 332, 333, 1406, 336, 334, 337,
	1407, 338, 339, 340, 1408, 1409, 341, 342, 343, 1410,
	344, 345, 1411, 346, 347, 348, 1412, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 1413, 270, 1414, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 1415, 367,
	368, 1416, 1417, 1180, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 1418, 381,
	642, 1419, 643, 382, 1420, 383, 384, 385, 386, 387,
	644, 645, 646, 466, 1182, 388, 389, 1421, 390, 391,
	392, 393, 394, 0, 0, 0, 271, 395, 396, 397,
	399, 1422, 1181, 398, 647, 648, 1423, 649, 1424, 400,
	401, 1183, 650, 1184, 402, 403, 404, 1185, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 1425, 412,
	414, 413, 1426, 415, 651, 1186, 416, 417, 1187, 1427,
	418, 0, 0, 0, 419, 420, 423, 1428, 1429, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 1188, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 1189, 462, 452, 1430, 272, 1190, 463, 464, 1431,
	652, 465, 653, 467, 468, 1432, 0, 469, 0, 1433,
	1434, 471, 472, 473, 1435, 1436, 474, 475, 654, 1191,
	476, 1192, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 1437, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	1438, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 1439, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 1440, 525, 526,
	527, 1193, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 1441, 550, 551, 549, 552, 553, 554, 1442,
	555, 556, 538, 539, 557, 558, 1194, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 1443, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 1444, 582, 583, 0, 579, 570,
	1445, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	1446, 592, 665, 666, 667, 668, 1447, 601, 1448, 593,
	594, 595, 669, 596, 670, 1449, 597, 598, 599, 600,
	0, 602, 603, 1450, 1451, 604, 605, 606, 608, 609,
	607, 610, 1452, 611, 1453, 0, 612, 613, 614, 671,
	672, 673, 1454, 616, 615, 617, 674, 1455, 618, 1456,
	1457, 1458, 1459, 619, 620, 675, 621, 622, 623, 0,
	0, 0, 0, 1375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4146,
	273, 275, 274, 276, 277, 278, 279, 1380, 280, 281,
	1381, 1382, 1383, 0, 1384, 624, 1385, 1386, 1387, 1388,
	282, 283, 1178, 284, 285, 286, 287, 288, 289, 625,
	626, 0, 290, 627, 291, 628, 1389, 629, 292, 293,
	294, 295, 296, 297, 1390, 1391, 0, 298, 630, 631,
	632, 1392, 299, 300, 633, 1393, 1322, 1394, 301, 302,
	303, 304, 305, 306, 307, 0, 1395, 309, 310, 311,
	308, 312, 1396, 313, 0, 314, 315, 316, 317, 318,
	319, 1397, 320, 321, 322, 1179, 323, 324, 325, 1398,
	1399, 1401, 1400, 1402, 1403, 1404, 326, 327, 328, 329,
	330, 0, 331, 634, 635, 1405, 335, 332, 333, 1406,
	336, 334, 337, 1407, 338, 339, 340, 1408, 1409, 341,
	342, 343, 1410, 344, 345, 1411, 346, 347, 348, 1412,
	349, 350, 636, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 637, 638, 362, 1413, 270, 1414, 0,
	0, 0, 0, 363, 364, 365, 639, 0, 0, 0,
	366, 1415, 367, 368, 1416, 1417, 1180, 369, 370, 371,
	640, 641, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 1418, 381, 642, 1419, 643, 382, 1420, 383, 384,
	385, 386, 387, 644, 645, 646, 466, 1182, 388, 389,
	1421, 390, 391, 392, 393, 394, 0, 0, 0, 271,
	395, 396, 397, 399, 1422, 1181, 398, 647, 648, 1423,
	649, 1424, 400, 401, 1183, 650, 1184, 402, 403, 404,
	1185, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 1425, 412, 414, 413, 1426, 415, 651, 1186, 416,
	417, 1187, 1427, 418, 0, 0, 0, 419, 420, 423,
	1428, 1429, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 1188, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 1189, 462, 452, 1430, 272, 1190,
	463, 464, 1431, 652, 465, 653, 467, 468, 1432, 0,
	469, 0, 1433, 1434, 471, 472, 473, 1435, 1436, 474,
	475, 654, 1191, 476, 1192, 655, 477, 478, 470, 479,
	480, 481, 482, 483, 484, 485, 486, 1437, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 658, 495,
	659, 496, 497, 1438, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 660, 507, 509, 508, 510, 1439,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	1440, 525, 526, 527, 1193, 528, 529, 530, 531, 532,
	661, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 1441, 550, 551, 549, 552,
	553, 554, 1442, 555, 556, 538, 539, 557, 558, 1194,
	559, 560, 561, 562, 563, 564, 565, 662, 0, 566,
	1443, 567, 568, 569, 571, 540, 572, 577, 578, 663,
	573, 574, 575, 576, 664, 580, 581, 1444, 582, 583,
	0, 579, 570, 1445, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 1446, 592, 665, 666, 667, 668, 1447,
	601, 1448, 593, 594, 595, 669, 596, 670, 1449, 597,
	598, 599, 600, 0, 602, 603, 1450, 1451, 604, 605,
	606, 608, 609, 607, 610, 1452, 611, 1453, 0, 612,
	613, 614, 671, 672, 673, 1454, 616, 615, 617, 674,
	1455, 618, 1456, 1457, 1458, 1459, 619, 620, 675, 621,
	622, 623, 0, 0, 0, 0, 1375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4002, 273, 275, 274, 276, 277, 278, 279,
	1380, 280, 281, 1381, 1382, 1383, 0, 1384, 624, 1385,
	1386, 1387, 1388, 282, 283, 1178, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 1389,
	629, 292, 293, 294, 295, 296, 297, 1390, 1391, 0,
	298, 630, 631, 632, 1392, 299, 300, 633, 1393, 1322,
	1394, 301, 302, 303, 304, 305, 306, 307, 0, 1395,
	309, 310, 311, 308, 312, 1396, 313, 0, 314, 315,
	316, 317, 318, 319, 1397, 320, 321, 322, 1179, 323,
	324, 325, 1398, 1399, 1401, 1400, 1402, 1403, 1404, 326,
	327, 328, 329, 330, 0, 331, 634, 635, 1405, 335,
	332, 333, 1406, 336, 334, 337, 1407, 338, 339, 340,
	1408, 1409, 341, 342, 343, 1410, 344, 345, 1411, 346,
	347, 348, 1412, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 1413,
	270, 1414, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 1415, 367, 368, 1416, 1417, 1180,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 1418, 381, 642, 1419, 643, 382,
	1420, 383, 384, 385, 386, 387, 644, 645, 646, 466,
	1182, 388, 389, 1421, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 1422, 1181, 398,
	647, 648, 1423, 649, 1424, 400, 401, 1183, 650, 1184,
	402, 403, 404, 1185, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 1425, 412, 414, 413, 1426, 415,
	651, 1186, 416, 417, 1187, 1427, 418, 0, 0, 0,
	419, 420, 423, 1428, 1429, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 1188, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 1189, 462, 452,
	1430, 272, 1190, 463, 464, 1431, 652, 465, 653, 467,
	468, 1432, 0, 469, 0, 1433, 1434, 471, 472, 473,
	1435, 1436, 474, 475, 654, 1191, 476, 1192, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	1437, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 1438, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 1439, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 1440, 525, 526, 527, 1193, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 1441, 550,
	551, 549, 552, 553, 554, 1442, 555, 556, 538, 539,
	557, 558, 1194, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 1443, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	1444, 582, 583, 0, 579, 570, 1445, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 1446, 592, 665, 666,
	667, 668, 1447, 601, 1448, 593, 594, 595, 669, 596,
	670, 1449, 597, 598, 599, 600, 0, 602, 603, 1450,
	1451, 604, 605, 606, 608, 609, 607, 610, 1452, 611,
	1453, 0, 612, 613, 614, 671, 672, 673, 1454, 616,
	615, 617, 674, 1455, 618, 1456, 1457, 1458, 1459, 619,
	620, 675, 621, 622, 623, 0, 0, 0, 0, 1375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3701, 273, 275, 274, 276,
	277, 278, 279, 1380, 280, 281, 1381, 1382, 1383, 0,
	1384, 624, 1385, 1386, 1387, 1388, 282, 283, 1178, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 1389, 629, 292, 293, 294, 295, 296, 297,
	1390, 1391, 0, 298, 630, 631, 632, 1392, 299, 300,
	633, 1393, 1322, 1394, 301, 302, 303, 304, 305, 306,
	307, 0, 1395, 309, 310, 311, 308, 312, 1396, 313,
	0, 314, 315, 316, 317, 318, 319, 1397, 320, 321,
	322, 1179, 323, 324, 325, 1398, 1399, 1401, 1400, 1402,
	1403, 1404, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 1405, 335, 332, 333, 1406, 336, 334, 337, 1407,
	338, 339, 340, 1408, 1409, 341, 342, 343, 1410, 344,
	345, 1411, 346, 347, 348, 1412, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 1413, 270, 1414, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 1415, 367, 368,
	1416, 1417, 1180, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 1418, 381, 642,
	1419, 643, 382, 1420, 383, 384, 385, 386, 387, 644,
	645, 646, 466, 1182, 388, 389, 1421, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	1422, 1181, 398, 647, 648, 1423, 649, 1424, 400, 401,
	1183, 650, 1184, 402, 403, 404, 1185, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 1425, 412, 414,
	413, 1426, 415, 651, 1186, 416, 417, 1187, 1427, 418,
	0, 0, 0, 419, 420, 423, 1428, 1429, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1188, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1189, 462, 452, 1430, 272, 1190, 463, 464, 1431, 652,
	465, 653, 467, 468, 1432, 0, 469, 0, 1433, 1434,
	471, 472, 473, 1435, 1436, 474, 475, 654, 1191, 476,
	1192, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 1437, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 1438,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 1439, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 1440, 525, 526, 527,
	1193, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 1441, 550, 551, 549, 552, 553, 554, 1442, 555,
	556, 538, 539, 557, 558, 1194, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 1443, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 1444, 582, 583, 0, 579, 570, 1445,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 1446,
	592, 665, 666, 667, 668, 1447, 601, 1448, 593, 594,
	595, 669, 596, 670, 1449, 597, 598, 599, 600, 0,
	602, 603, 1450, 1451, 604, 605, 606, 608, 609, 607,
	610, 1452, 611, 1453, 0, 612, 613, 614, 671, 672,
	673, 1454, 616, 615, 617, 674, 1455, 618, 1456, 1457,
	1458, 1459, 619, 620, 675, 621, 622, 623, 0, 0,
	0, 0, 1375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3529, 273,
	275, 274, 276, 277, 278, 279, 1380, 280, 281, 1381,
	1382, 1383, 0, 1384, 624, 1385, 1386, 1387, 1388, 282,
	283, 1178, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 1389, 629, 292, 293, 294,
	295, 296, 297, 1390, 1391, 0, 298, 630, 631, 632,
	1392, 299, 300, 633, 1393, 1322, 1394, 301, 302, 303,
	304, 305, 306, 307, 0, 1395, 309, 310, 311, 308,
	312, 1396, 313, 0, 314, 315, 316, 317, 318, 319,
	1397, 320, 321, 322, 1179, 323, 324, 325, 1398, 1399,
	1401, 1400, 1402, 1403, 1404, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 1405, 335, 332, 333, 1406, 336,
	334, 337, 1407, 338, 339, 340, 1408, 1409, 341, 342,
	343, 1410, 344, 345, 1411, 346, 347, 348, 1412, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 1413, 270, 1414, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	1415, 367, 368, 1416, 1417, 1180, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	1418, 381, 642, 1419, 643, 382, 1420, 383, 384, 385,
	386, 387, 644, 645, 646, 466, 1182, 388, 389, 1421,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 1422, 1181, 398, 647, 648, 1423, 649,
	1424, 400, 401, 1183, 650, 1184, 402, 403, 404, 1185,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	1425, 412, 414, 413, 1426, 415, 651, 1186, 416, 417,
	1187, 1427, 418, 0, 0, 0, 419, 420, 423, 1428,
	1429, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	1188, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 1189, 462, 452, 1430, 272, 1190, 463,
	464, 1431, 652, 465, 653, 467, 468, 1432, 0, 469,
	0, 1433, 1434, 471, 472, 473, 1435, 1436, 474, 475,
	654, 1191, 476, 1192, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 1437, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 1438, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 1439, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 1440,
	525, 526, 527, 1193, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 1441, 550, 551, 549, 552, 553,
	554, 1442, 555, 556, 538, 539, 557, 558, 1194, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 1443,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 1444, 582, 583, 0,
	579, 570, 1445, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 1446, 592, 665, 666, 667, 668, 1447, 601,
	1448, 593, 594, 595, 669, 596, 670, 1449, 597, 598,
	599, 600, 0, 602, 603, 1450, 1451, 604, 605, 606,
	608, 609, 607, 610, 1452, 611, 1453, 0, 612, 613,
	614, 671, 672, 673, 1454, 616, 615, 617, 674, 1455,
	618, 1456, 1457, 1458, 1459, 619, 620, 675, 621, 622,
	623, 0, 0, 0, 0, 1375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2575, 273, 275, 274, 276, 277, 278, 279, 1380,
	280, 281, 1381, 1382, 1383, 0, 1384, 624, 1385, 1386,
	1387, 1388, 282, 283, 1178, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 1389, 629,
	292, 293, 294, 295, 296, 297, 1390, 1391, 0, 298,
	630, 631, 632, 1392, 299, 300, 633, 1393, 1322, 1394,
	301, 302, 303, 304, 305, 306, 307, 0, 1395, 309,
	310, 311, 308, 312, 1396, 313, 0, 314, 315, 316,
	317, 318, 319, 1397, 320, 321, 322, 1179, 323, 324,
	325, 1398, 1399, 1401, 1400, 1402, 1403, 1404, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 1405, 335, 332,
	333, 1406, 336, 334, 337, 1407, 338, 339, 340, 1408,
	1409, 341, 342, 343, 1410, 344, 345, 1411, 346, 347,
	348, 1412, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 1413, 270,
	1414, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 1415, 367, 368, 1416, 1417, 1180, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 1418, 381, 642, 1419, 643, 382, 1420,
	383, 384, 385, 386, 387, 644, 645, 646, 466, 1182,
	388, 389, 1421, 390, 391, 392, 393, 394, 0, 0,
	0, 271, 395, 396, 397, 399, 1422, 1181, 398, 647,
	648, 1423, 649, 1424, 400, 401, 1183, 650, 1184, 402,
	403, 404, 1185, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 1425, 412, 414, 413, 1426, 415, 651,
	1186, 416, 417, 1187, 1427, 418, 0, 0, 0, 419,
	420, 423, 1428, 1429, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 1188, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 1189, 462, 452, 1430,
	272, 1190, 463, 464, 1431, 652, 465, 653, 467, 468,
	1432, 0, 469, 0, 1433, 1434, 471, 472, 473, 1435,
	1436, 474, 475, 654, 1191, 476, 1192, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 1437,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 1438, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 1439, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 1440, 525, 526, 527, 1193, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 1441, 550, 551,
	549, 552, 553, 554, 1442, 555, 556, 538, 539, 557,
	558, 1194, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 1443, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 1444,
	582, 583, 0, 579, 570, 1445, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 1446, 592, 665, 666, 667,
	668, 1447, 601, 1448, 593, 594, 595, 669, 596, 670,
	1449, 597, 598, 599, 600, 0, 602, 603, 1450, 1451,
	604, 605, 606, 608, 609, 607, 610, 1452, 611, 1453,
	0, 612, 613, 614, 671, 672, 673, 1454, 616, 615,
	617, 674, 1455, 618, 1456, 1457, 1458, 1459, 619, 620,
	675, 621, 622, 623, 0, 0, 1471, 0, 1375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2213, 273, 275, 274, 276, 277,
	278, 279, 1380, 280, 281, 1381, 1382, 1383, 0, 1384,
	624, 1385, 1386, 1387, 1388, 282, 283, 1178, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 1389, 629, 292, 293, 294, 295, 296, 297, 1390,
	1391, 0, 298, 630, 631, 632, 1392, 299, 300, 633,
	1393, 1322, 1394, 301, 302, 303, 304, 305, 306, 307,
	0, 1395, 309, 310, 311, 308, 312, 1396, 313, 0,
	314, 315, 316, 317, 318, 319, 1397, 320, 321, 322,
	1179, 323, 324, 325, 1398, 1399, 1401, 1400, 1402, 1403,
	1404, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	1405, 335, 332, 333, 1406, 336, 334, 337, 1407, 338,
	339, 340, 1408, 1409, 341, 342, 343, 1410, 344, 345,
	1411, 346, 347, 348, 1412, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 1413, 270, 1414, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 1415, 367, 368, 1416,
	1417, 1180, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 1418, 381, 642, 1419,
	643, 382, 1420, 383, 384, 385, 386, 387, 644, 645,
	646, 466, 1182, 388, 389, 1421, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 1422,
	1181, 398, 647, 648, 1423, 649, 1424, 400, 401, 1183,
	650, 1184, 402, 403, 404, 1185, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 1425, 412, 414, 413,
	1426, 415, 651, 1186, 416, 417, 1187, 1427, 418, 0,
	0, 0, 419, 420, 423, 1428, 1429, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 1188, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 1189,
	462, 452, 1430, 272, 1190, 463, 464, 1431, 652, 465,
	653, 467, 468, 1432, 0, 469, 0, 1433, 1434, 471,
	472, 473, 1435, 1436, 474, 475, 654, 1191, 476, 1192,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 1437, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 1438, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 1439, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 1440, 525, 526, 527, 1193,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	1441, 550, 551, 549, 552, 553, 554, 1442, 555, 556,
	538, 539, 557, 558, 1194, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 1443, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 1444, 582, 583, 0, 579, 570, 1445, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 1446, 592,
	665, 666, 667, 668, 1447, 601, 1448, 593, 594, 595,
	669, 596, 670, 1449, 597, 598, 599, 600, 0, 602,
	603, 1450, 1451, 604, 605, 606, 608, 609, 607, 610,
	1452, 611, 1453, 0, 612, 613, 614, 671, 672, 673,
	1454, 616, 615, 617, 674, 1455, 618, 1456, 1457, 1458,
	1459, 619, 620, 675, 621, 622, 623, 1372, 0, 1375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 275, 274, 276,
	277, 278, 279, 1380, 280, 281, 1381, 1382, 1383, 0,
	1384, 624, 1385, 1386, 1387, 1388, 282, 283, 1178, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 1389, 629, 292, 293, 294, 295, 296, 297,
	1390, 1391, 0, 298, 630, 631, 632, 1392, 299, 300,
	633, 1393, 1322, 1394, 301, 302, 303, 304, 305, 306,
	307, 0, 1395, 309, 310, 311, 308, 312, 1396, 313,
	0, 314, 315, 316, 317, 318, 319, 1397, 320, 321,
	322, 1179, 323, 324, 325, 1398, 1399, 1401, 1400, 1402,
	1403, 1404, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 1405, 335, 332, 333, 1406, 336, 334, 337, 1407,
	338, 339, 340, 1408, 1409, 341, 342, 343, 1410, 344,
	345, 1411, 346, 347, 348, 1412, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 1413, 270, 1414, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 1415, 367, 368,
	1416, 1417, 1180, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 1418, 381, 642,
	1419, 643, 382, 1420, 383, 384, 385, 386, 387, 644,
	645, 646, 466, 1182, 388, 389, 1421, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	1422, 1181, 398, 647, 648, 1423, 649, 1424, 400, 401,
	1183, 650, 1184, 402, 403, 404, 1185, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 1425, 412, 414,
	413, 1426, 415, 651, 1186, 416, 417, 1187, 1427, 418,
	0, 0, 0, 419, 420, 423, 1428, 1429, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1188, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1189, 462, 452, 1430, 272, 1190, 463, 464, 1431, 652,
	465, 653, 467, 468, 1432, 0, 469, 0, 1433, 1434,
	471, 472, 473, 1435, 1436, 474, 475, 654, 1191, 476,
	1192, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 1437, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 1438,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 1439, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 1440, 525, 526, 527,
	1193, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 1441, 550, 551, 549, 552, 553, 554, 1442, 555,
	556, 538, 539, 557, 558, 1194, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 1443, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 1444, 582, 583, 0, 579, 570, 1445,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 1446,
	592, 665, 666, 667, 668, 1447, 601, 1448, 593, 594,
	595, 669, 596, 670, 1449, 597, 598, 599, 600, 0,
	602, 603, 1450, 1451, 604, 605, 606, 608, 609, 607,
	610, 1452, 611, 1453, 0, 612, 613, 614, 671, 672,
	673, 1454, 616, 615, 617, 674, 1455, 618, 1456, 1457,
	1458, 1459, 619, 620, 675, 621, 622, 623, 1375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 1380, 280, 281, 1381, 1382, 1383, 0, 1384,
	624, 1385, 1386, 1387, 1388, 282, 283, 1178, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 1389, 629, 292, 293, 294, 295, 296, 297, 1390,
	1391, 0, 298, 630, 631, 632, 1392, 299, 300, 633,
	1393, 1322, 1394, 301, 302, 303, 304, 305, 306, 307,
	0, 1395, 309, 310, 311, 308, 312, 1396, 313, 0,
	314, 315, 316, 317, 318, 319, 1397, 320, 321, 322,
	1179, 323, 324, 325, 1398, 1399, 1401, 1400, 1402, 1403,
	1404, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	1405, 335, 332, 333, 1406, 336, 334, 337, 1407, 338,
	339, 340, 1408, 1409, 341, 342, 343, 1410, 344, 345,
	1411, 346, 347, 348, 1412, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 1413, 270, 1414, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 1415, 367, 368, 1416,
	1417, 1180, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 1418, 381, 642, 1419,
	643, 382, 1420, 383, 384, 385, 386, 387, 644, 645,
	646, 466, 1182, 388, 389, 1421, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 1422,
	1181, 398, 647, 648, 1423, 649, 1424, 400, 401, 1183,
	650, 1184, 402, 403, 404, 1185, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 1425, 412, 414, 413,
	1426, 415, 651, 1186, 416, 417, 1187, 1427, 418, 0,
	0, 0, 419, 420, 423, 1428, 1429, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 1188, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 1189,
	462, 452, 1430, 272, 1190, 463, 464, 1431, 652, 465,
	653, 467, 468, 1432, 0, 469, 0, 1433, 1434, 471,
	472, 473, 1435, 1436, 474, 475, 654, 1191, 476, 1192,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 1437, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 1438, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 1439, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 1440, 525, 526, 527, 1193,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	1441, 550, 551, 549, 552, 553, 554, 1442, 555, 556,
	538, 539, 557, 558, 1194, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 1443, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 1444, 582, 583, 0, 579, 570, 1445, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 1446, 592,
	665, 666, 667, 668, 1447, 601, 1448, 593, 594, 595,
	669, 596, 670, 1449, 597, 598, 599, 600, 0, 602,
	603, 1450, 1451, 604, 605, 606, 608, 609, 607, 610,
	1452, 611, 1453, 0, 612, 613, 614, 671, 672, 673,
	1454, 616, 615, 617, 674, 1455, 618, 1456, 1457, 1458,
	1459, 619, 620, 675, 621, 622, 623, 2550, 0, 1114,
	1086, 1087, 1088, 1084, 1085, 1097, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 275, 274, 276,
	277, 278, 279, 2547, 280, 281, 0, 0, 0, 0,
	0, 1138, 1102, 0, 0, 0, 282, 283, 1178, 284,
	285, 286, 287, 288, 289, 625, 1151, 0, 290, 1158,
	291, 1157, 0, 1168, 292, 293, 294, 295, 296, 297,
	1104, 1137, 1069, 298, 1198, 1199, 632, 0, 299, 300,
	1144, 0, 1125, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 1179, 323, 324, 325, 1128, 1126, 1127, 1134, 1130,
	1129, 1133, 326, 327, 328, 329, 330, 1161, 331, 1155,
	1154, 1074, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 2548, 0, 341, 1146, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 1080, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 1169,
	1170, 362, 1093, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 1153, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 1180, 369, 370, 371, 1166, 1167, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 1176,
	0, 1103, 382, 0, 383, 384, 385, 386, 387, 1139,
	1140, 1143, 466, 1182, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	0, 1181, 398, 1148, 1149, 0, 1109, 0, 400, 401,
	1183, 1141, 1184, 402, 403, 404, 1185, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 1177, 1186, 416, 417, 1187, 0, 418,
	0, 0, 0, 419, 420, 423, 1132, 1131, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1188, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1189, 462, 452, 1071, 272, 1190, 463, 464, 1094, 1142,
	465, 1156, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 1191, 476,
	1192, 1171, 477, 478, 1081, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 1172, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	1152, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	1193, 528, 529, 530, 531, 532, 1082, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 1135, 555,
	556, 538, 539, 557, 558, 1194, 559, 560, 561, 562,
	563, 564, 565, 1150, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 1197, 573, 574, 575, 576,
	1173, 580, 581, 0, 582, 583, 1068, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 1162, 1163, 1164, 1165, 0, 601, 0, 593, 594,
	595, 1174, 596, 1175, 1092, 597, 598, 599, 600, 0,
	602, 603, 0, 1075, 604, 605, 606, 608, 609, 607,
	610, 1136, 611, 0, 0, 612, 613, 614, 671, 1159,
	1196, 2546, 616, 615, 617, 674, 0, 618, 0, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 1072, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1067,
	0, 0, 0, 0, 0, 0, 1065, 1066, 2549, 0,
	0, 0, 0, 0, 0, 1098, 2545, 0, 1058, 1096,
	1114, 1086, 1087, 1088, 1084, 1085, 1097, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 1138, 1102, 0, 0, 0, 282, 283, 1178,
	284, 285, 286, 287, 288, 289, 625, 1151, 0, 290,
	1158, 291, 1157, 0, 1168, 292, 293, 294, 295, 296,
	297, 1104, 1137, 1069, 298, 1198, 1199, 632, 0, 299,
	300, 1144, 0, 1125, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 1179, 323, 324, 325, 1128, 1126, 1127, 1134,
	1130, 1129, 1133, 326, 327, 328, 329, 330, 1161, 331,
	1155, 1154, 1074, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 1146, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 1080,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	1169, 1170, 362, 1093, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 1153, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 1180, 369, 370, 371, 1166, 1167, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	1176, 0, 1103, 382, 0, 383, 384, 385, 386, 387,
	1139, 1140, 1143, 466, 1182, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 271, 395, 396, 397,
	399, 0, 1181, 398, 1148, 1149, 0, 1109, 0, 400,
	401, 1183, 1141, 1184, 402, 403, 404, 1185, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 1177, 1186, 416, 417, 1187, 0,
	418, 0, 0, 0, 419, 420, 423, 1132, 1131, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 1188, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 1189, 462, 452, 1071, 272, 1190, 463, 464, 1094,
	1142, 465, 1156, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 1191,
	476, 1192, 1171, 477, 478, 1081, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 1172, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 1152, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 1193, 528, 529, 530, 531, 532, 1082, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 232, 550, 551, 549, 552, 553, 554, 1135,
	555, 556, 538, 539, 557, 558, 1194, 559, 560, 561,
	562, 563, 564, 565, 1150, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 1197, 573, 574, 575,
	576, 1173, 580, 581, 0, 582, 583, 1068, 579, 570,
	234, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 1162, 1163, 1164, 1165, 0, 601, 0, 593,
	594, 595, 1174, 596, 1175, 1092, 597, 598, 599, 600,
	0, 602, 603, 0, 1075, 604, 605, 606, 608, 609,
	607, 610, 1136, 611, 0, 0, 612, 613, 614, 1596,
	1159, 1196, 0, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 226, 619, 620, 675, 621, 622, 623, 1072,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	1067, 0, 0, 0, 0, 0, 0, 1065, 1066, 1114,
	1086, 1087, 1088, 1084, 1085, 1097, 1850, 1848, 0, 0,
	1096, 0, 0, 0, 0, 0, 273, 275, 274, 276,
	277, 278, 279, 0, 280, 281, 0, 0, 0, 0,
	0, 1138, 1102, 0, 0, 0, 282, 283, 1178, 284,
	285, 286, 287, 288, 289, 625, 1151, 0, 290, 1158,
	291, 1157, 0, 1168, 292, 293, 294, 295, 296, 297,
	1104, 1137, 1069, 298, 1198, 1199, 632, 0, 299, 300,
	1144, 0, 1125, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 1179, 323, 324, 325, 1128, 1126, 1127, 1134, 1130,
	1129, 1133, 326, 327, 328, 329, 330, 1161, 331, 1155,
	1154, 1074, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 1146, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 1080, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 1169,
	1170, 362, 1093, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 1153, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 1180, 369, 370, 371, 1166, 1167, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 1176,
	0, 1103, 382, 0, 383, 384, 385, 386, 387, 1139,
	1140, 1143, 466, 1182, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	0, 1181, 398, 1148, 1149, 0, 1109, 0, 400, 401,
	1183, 1141, 1184, 402, 403, 404, 1185, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 1177, 1186, 416, 417, 1187, 0, 418,
	0, 0, 0, 419, 420, 423, 1132, 1131, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1188, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1189, 462, 452, 1071, 272, 1190, 463, 464, 1094, 1142,
	465, 1156, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 1191, 476,
	1192, 1171, 477, 478, 1081, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 1172, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	1152, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	1193, 528, 529, 530, 531, 532, 1082, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 232, 550, 551, 549, 552, 553, 554, 1135, 555,
	556, 538, 539, 557, 558, 1194, 559, 560, 561, 562,
	563, 564, 565, 1150, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 1197, 573, 574, 575, 576,
	1173, 580, 581, 0, 582, 583, 1068, 579, 570, 234,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 1162, 1163, 1164, 1165, 0, 601, 0, 593, 594,
	595, 1174, 596, 1175, 1092, 597, 598, 599, 600, 0,
	602, 603, 0, 1075, 604, 605, 606, 608, 609, 607,
	610, 1136, 611, 0, 0, 612, 613, 614, 1596, 1159,
	1196, 0, 616, 615, 617, 674, 0, 618, 0, 0,
	0, 226, 619, 620, 675, 621, 622, 623, 1072, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 1067,
	0, 0, 0, 0, 0, 0, 1065, 1066, 1114, 1086,
	1087, 1088, 1084, 1085, 1097, 1850, 3173, 0, 0, 1096,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	1138, 1102, 0, 0, 0, 282, 283, 1178, 284, 285,
	286, 287, 288, 289, 625, 1151, 0, 290, 1158, 291,
	1157, 0, 1168, 292, 293, 294, 295, 296, 297, 1104,
	1137, 1069, 298, 1198, 1199, 632, 0, 299, 300, 1144,
	0, 1125, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	1179, 323, 324, 325, 1128, 1126, 1127, 1134, 1130, 1129,
	1133, 326, 327, 328, 329, 330, 1161, 331, 1155, 1154,
	1074, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 1146, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 1080, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 1169, 1170,
	362, 1093, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 1153, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 1180, 369, 370, 371, 1166, 1167, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 1176, 0,
	1103, 382, 0, 383, 384, 385, 386, 387, 1139, 1140,
	1143, 466, 1182, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 0,
	1181, 398, 1148, 1149, 0, 1109, 0, 400, 401, 1183,
	1141, 1184, 402, 403, 404, 1185, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 1177, 1186, 416, 417, 1187, 0, 418, 0,
	0, 0, 419, 420, 423, 1132, 1131, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 1188, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 1189,
	462, 452, 1071, 272, 1190, 463, 464, 1094, 1142, 465,
	1156, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 1191, 476, 1192,
	1171, 477, 478, 1081, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 1172, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 1152,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 1193,
	528, 529, 530, 531, 532, 1082, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	232, 550, 551, 549, 552, 553, 554, 1135, 555, 556,
	538, 539, 557, 558, 1194, 559, 560, 561, 562, 563,
	564, 565, 1150, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 1197, 573, 574, 575, 576, 1173,
	580, 581, 0, 582, 583, 1068, 579, 570, 234, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	1162, 1163, 1164, 1165, 0, 601, 0, 593, 594, 595,
	1174, 596, 1175, 1092, 597, 598, 599, 600, 0, 602,
	603, 0, 1075, 604, 605, 606, 608, 609, 607, 610,
	1136, 611, 0, 0, 612, 613, 614, 1596, 1159, 1196,
	0, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	226, 619, 620, 675, 621, 622, 623, 1072, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 1067, 0,
	0, 0, 0, 0, 0, 1065, 1066, 1114, 1086, 1087,
	1088, 1084, 1085, 1097, 1850, 1848, 0, 0, 1096, 0,
	0, 0, 0, 0, 273, 275, 274, 276, 277, 278,
	279, 0, 280, 281, 0, 0, 0, 0, 0, 1138,
	1102, 0, 0, 0, 282, 283, 1178, 284, 285, 286,
	287, 288, 289, 625, 1151, 0, 290, 1158, 291, 1157,
	2679, 1168, 292, 293, 294, 295, 296, 297, 1104, 1137,
	1069, 298, 1198, 1199, 632, 0, 299, 300, 1144, 0,
	1125, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 1179,
	323, 324, 325, 1128, 1126, 1127, 1134, 1130, 1129, 1133,
	326, 327, 328, 329, 330, 1161, 331, 1155, 1154, 1074,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 1146, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 1080, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 1169, 1170, 362,
	1093, 270, 0, 0, 0, 0, 0, 363, 364, 365,
	1153, 0, 0, 0, 366, 0, 367, 368, 0, 2684,
	1180, 369, 370, 371, 1166, 1167, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 1176, 0, 1103,
	382, 0, 383, 384, 385, 386, 387, 1139, 1140, 1143,
	466, 1182, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 271, 395, 396, 397, 399, 0, 1181,
	398, 1148, 1149, 0, 1109, 0, 400, 401, 1183, 1141,
	1184, 402, 403, 404, 1185, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 2680,
	415, 1177, 1186, 416, 417, 1187, 0, 418, 0, 0,
	0, 419, 420, 423, 1132, 1131, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 1188, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 1189, 462,
	452, 1071, 272, 1190, 463, 464, 1094, 1142, 465, 1156,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 1191, 476, 1192, 1171,
	477, 478, 1081, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 1172, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 1152, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 1193, 528,
	529, 530, 531, 532, 1082, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 1135, 555, 556, 538,
	539, 557, 558, 1194, 559, 560, 561, 562, 563, 564,
	565, 1150, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 1197, 573, 574, 575, 576, 1173, 580,
	581, 0, 582, 583, 1068, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 1162,
	1163, 1164, 1165, 0, 601, 2681, 593, 594, 595, 1174,
	596, 1175, 1092, 597, 598, 599, 600, 0, 602, 603,
	0, 1075, 604, 605, 606, 608, 609, 607, 610, 1136,
	611, 0, 0, 612, 613, 614, 671, 1159, 1196, 0,
	616, 615, 617, 674, 0, 618, 0, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 1072, 2595, 0, 1114,
	1086, 1087, 1088, 1084, 1085, 1097, 0, 1067, 0, 0,
	0, 0, 0, 0, 1065, 1066, 273, 275, 274, 276,
	277, 278, 279, 1098, 280, 281, 0, 1096, 0, 0,
	0, 1138, 1102, 0, 0, 0, 282, 283, 1178, 284,
	285, 286, 287, 288, 289, 625, 1151, 0, 290, 1158,
	291, 1157, 0, 1168, 292, 293, 294, 295, 296, 297,
	1104, 1137, 1069, 298, 1198, 1199, 632, 0, 299, 300,
	1144, 0, 1125, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 1179, 323, 324, 325, 1128, 1126, 1127, 1134, 1130,
	1129, 1133, 326, 327, 328, 329, 330, 1161, 331, 1155,
	1154, 1074, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 1146, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 1080, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 1169,
	1170, 362, 1093, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 1153, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 1180, 369, 370, 371, 1166, 1167, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 1176,
	0, 1103, 382, 0, 383, 384, 385, 386, 387, 1139,
	1140, 1143, 466, 1182, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	0, 1181, 398, 1148, 1149, 0, 1109, 0, 400, 401,
	1183, 1141, 1184, 402, 403, 404, 1185, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 1177, 1186, 416, 417, 1187, 0, 418,
	0, 0, 0, 419, 420, 423, 1132, 1131, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1188, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1189, 462, 452, 1071, 272, 1190, 463, 464, 1094, 1142,
	465, 1156, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 1191, 476,
	1192, 1171, 477, 478, 1081, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 1172, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	1152, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	1193, 528, 529, 530, 531, 532, 1082, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 1135, 555,
	556, 538, 539, 557, 558, 1194, 559, 560, 561, 562,
	563, 564, 565, 1150, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 1197, 573, 574, 575, 576,
	1173, 580, 581, 0, 582, 583, 1068, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 1162, 1163, 1164, 1165, 0, 601, 0, 593, 594,
	595, 1174, 596, 1175, 1092, 597, 598, 599, 600, 0,
	602, 603, 0, 1075, 604, 605, 606, 608, 609, 607,
	610, 1136, 611, 0, 0, 612, 613, 614, 671, 1159,
	1196, 0, 616, 615, 617, 674, 0, 618, 0, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 1072, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1067,
	0, 0, 0, 0, 0, 0, 1065, 1066, 0, 0,
	0, 0, 0, 0, 0, 1098, 2593, 0, 2592, 1096,
	1114, 1086, 1087, 1088, 1084, 1085, 1097, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 1138, 1102, 0, 0, 0, 282, 283, 1178,
	284, 285, 286, 287, 288, 289, 625, 1151, 0, 290,
	1158, 291, 1157, 0, 1168, 292, 293, 294, 295, 296,
	297, 1104, 1137, 1069, 298, 1198, 1199, 632, 0, 299,
	300, 1144, 0, 1125, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 1179, 323, 324, 325, 1128, 1126, 1127, 1134,
	1130, 1129, 1133, 326, 327, 328, 329, 330, 1161, 331,
	1155, 1154, 1074, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 1146, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 1080,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	1169, 1170, 362, 1093, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 1153, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 1180, 369, 370, 371, 1166, 1167, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	1176, 0, 1103, 382, 0, 383, 384, 385, 386, 387,
	1139, 1140, 1143, 466, 1182, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 271, 395, 396, 397,
	399, 0, 1181, 398, 1148, 1149, 0, 1109, 0, 400,
	401, 1183, 1141, 1184, 402, 403, 404, 1185, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 1177, 1186, 416, 417, 1187, 0,
	418, 0, 0, 0, 419, 420, 423, 1132, 1131, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 1188, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 1189, 462, 452, 1071, 272, 1190, 463, 464, 1094,
	1142, 465, 1156, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 1191,
	476, 1192, 1171, 477, 478, 1081, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 1172, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 1152, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 1193, 528, 529, 530, 531, 532, 1082, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 1135,
	555, 556, 538, 539, 557, 558, 1194, 559, 560, 561,
	562, 563, 564, 565, 1150, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 1197, 573, 574, 575,
	576, 1173, 580, 581, 0, 582, 583, 1068, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 1162, 1163, 1164, 1165, 0, 601, 0, 593,
	594, 595, 1174, 596, 1175, 1092, 597, 598, 599, 600,
	0, 602, 603, 0, 1075, 604, 605, 606, 608, 609,
	607, 610, 1136, 611, 0, 0, 612, 613, 614, 671,
	1159, 1196, 0, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 1072,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1067, 0, 0, 0, 0, 0, 0, 1065, 1066, 0,
	0, 0, 0, 0, 0, 0, 1098, 2590, 0, 2589,
	1096, 1114, 1086, 1087, 1088, 1084, 1085, 1097, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	0, 0, 0, 1138, 1102, 0, 0, 0, 282, 283,
	1178, 284, 285, 286, 287, 288, 289, 625, 1151, 0,
	290, 1158, 291, 1157, 0, 1168, 292, 293, 294, 295,
	296, 297, 1104, 1137, 1069, 298, 1198, 1199, 632, 0,
	299, 300, 1144, 0, 1125, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 1179, 323, 324, 325, 1128, 1126, 1127,
	1134, 1130, 1129, 1133, 326, 327, 328, 329, 330, 1161,
	331, 1155, 1154, 1074, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 1146, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	1080, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 1169, 1170, 362, 1093, 270, 0, 0, 0, 0,
	0, 363, 364, 365, 1153, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 1180, 369, 370, 371, 1166, 1167,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 1176, 0, 1103, 382, 0, 383, 384, 385, 386,
	387, 1139, 1140, 1143, 466, 1182, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 271, 395, 396,
	397, 399, 0, 1181, 398, 1148, 1149, 0, 1109, 0,
	400, 401, 1183, 1141, 1184, 402, 403, 404, 1185, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 1177, 1186, 416, 417, 1187,
	0, 418, 0, 0, 0, 419, 420, 423, 1132, 1131,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 1188,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 1189, 462, 452, 1071, 272, 1190, 463, 464,
	1094, 1142, 465, 1156, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	1191, 476, 1192, 1171, 477, 478, 1081, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 1172, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 1152, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 1193, 528, 529, 530, 531, 532, 1082, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	1135, 555, 556, 538, 539, 557, 558, 1194, 559, 560,
	561, 562, 563, 564, 565, 1150, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 1197, 573, 574,
	575, 576, 1173, 580, 581, 0, 582, 583, 1068, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 1162, 1163, 1164, 1165, 0, 601, 0,
	593, 594, 595, 1174, 596, 1175, 1092, 597, 598, 599,
	600, 0, 602, 603, 0, 1075, 604, 605, 606, 608,
	609, 607, 610, 1136, 611, 0, 0, 612, 613, 614,
	671, 1159, 1196, 0, 616, 615, 617, 674, 0, 618,
	0, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	1072, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1067, 0, 0, 0, 0, 0, 0, 1065, 1066,
	0, 0, 0, 0, 0, 0, 0, 1098, 2587, 0,
	2586, 1096, 1114, 1086, 1087, 1088, 1084, 1085, 1097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 1138, 1102, 0, 0, 0, 282,
	283, 1178, 284, 285, 286, 287, 288, 289, 625, 1151,
	0, 290, 1158, 291, 1157, 0, 1168, 292, 293, 294,
	295, 296, 297, 1104, 1137, 1069, 298, 1198, 1199, 632,
	0, 299, 300, 1144, 0, 1125, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 1179, 323, 324, 325, 1128, 1126,
	1127, 1134, 1130, 1129, 1133, 326, 327, 328, 329, 330,
	1161, 331, 1155, 1154, 1074, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 1146,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 1080, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 1169, 1170, 362, 1093, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 1153, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 1180, 369, 370, 371, 1166,
	1167, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 1176, 0, 1103, 382, 0, 383, 384, 385,
	386, 387, 1139, 1140, 1143, 466, 1182, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 1181, 398, 1148, 1149, 0, 1109,
	0, 400, 401, 1183, 1141, 1184, 402, 403, 404, 1185,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 1177, 1186, 416, 417,
	1187, 0, 418, 0, 0, 0, 419, 420, 423, 1132,
	1131, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	1188, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 1189, 462, 452, 1071, 272, 1190, 463,
	464, 1094, 1142, 465, 1156, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 1191, 476, 1192, 1171, 477, 478, 1081, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 1172, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 1152, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 1193, 528, 529, 530, 531, 532, 1082,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 1135, 555, 556, 538, 539, 557, 558, 1194, 559,
	560, 561, 562, 563, 564, 565, 1150, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 1197, 573,
	574, 575, 576, 1173, 580, 581, 0, 582, 583, 1068,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 1162, 1163, 1164, 1165, 0, 601,
	0, 593, 594, 595, 1174, 596, 1175, 1092, 597, 598,
	599, 600, 0, 602, 603, 0, 1075, 604, 605, 606,
	608, 609, 607, 610, 1136, 611, 0, 0, 612, 613,
	614, 671, 1159, 1196, 0, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 1072, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1067, 0, 0, 0, 0, 0, 0, 1065,
	1066, 0, 0, 0, 0, 0, 0, 0, 1098, 2584,
	0, 1691, 1096, 1114, 1086, 1087, 1088, 1084, 1085, 1097,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 275, 274, 276, 277, 278, 279, 0, 280, 281,
	0, 0, 0, 0, 0, 1138, 1102, 0, 0, 0,
	282, 283, 1178, 284, 285, 286, 287, 288, 289, 625,
	1151, 0, 290, 1158, 291, 1157, 0, 1168, 292, 293,
	294, 295, 296, 297, 1104, 1137, 1069, 298, 1198, 1199,
	632, 0, 299, 300, 1144, 0, 1125, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 1179, 323, 324, 325, 1128,
	1126, 1127, 1134, 1130, 1129, 1133, 326, 327, 328, 329,
	330, 1161, 331, 1155, 1154, 1074, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	1146, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 1080, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 1169, 1170, 362, 1093, 270, 0, 0,
	0, 0, 0, 363, 364, 365, 1153, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 1180, 369, 370, 371,
	1166, 1167, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 1176, 0, 1103, 382, 0, 383, 384,
	385, 386, 387, 1139, 1140, 1143, 466, 1182, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 271,
	395, 396, 397, 399, 0, 1181, 398, 1148, 1149, 0,
	1109, 0, 400, 401, 1183, 1141, 1184, 402, 403, 404,
	1185, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 1177, 1186, 416,
	417, 1187, 0, 418, 0, 0, 0, 419, 420, 423,
	1132, 1131, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 1188, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 1189, 462, 452, 1071, 272, 1190,
	463, 464, 1094, 1142, 465, 1156, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 1191, 476, 1192, 1171, 477, 478, 1081, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 1172, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 1152, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 1193, 528, 529, 530, 531, 532,
	1082, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 1135, 555, 556, 538, 539, 557, 558, 1194,
	559, 560, 561, 562, 563, 564, 565, 1150, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 1197,
	573, 574, 575, 576, 1173, 580, 581, 0, 582, 583,
	1068, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 1162, 1163, 1164, 1165, 0,
	601, 0, 593, 594, 595, 1174, 596, 1175, 1092, 597,
	598, 599, 600, 0, 602, 603, 0, 1075, 604, 605,
	606, 608, 609, 607, 610, 1136, 611, 0, 0, 612,
	613, 614, 671, 1159, 1196, 0, 616, 615, 617, 674,
	0, 618, 1690, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 1072, 1061, 0, 1114, 1086, 1087, 1088, 1084,
	1085, 1097, 0, 1067, 0, 0, 0, 0, 0, 0,
	1065, 1066, 273, 275, 274, 276, 277, 278, 279, 1098,
	280, 281, 0, 1096, 0, 0, 0, 1138, 1102, 0,
	0, 0, 282, 283, 1178, 284, 285, 286, 287, 288,
	289, 625, 1151, 0, 290, 1158, 291, 1157, 0, 1168,
	292, 293, 294, 295, 296, 297, 1104, 1137, 1069, 298,
	1198, 1199, 632, 0, 299, 300, 1144, 0, 1125, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 1179, 323, 324,
	325, 1128, 1126, 1127, 1134, 1130, 1129, 1133, 326, 327,
	328, 329, 330, 1161, 331, 1155, 1154, 1074, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 1146, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 1080, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 1169, 1170, 362, 1093, 270,
	0, 0, 0, 0, 0, 363, 364, 365, 1153, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 1180, 369,
	370, 371, 1166, 1167, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 1176, 0, 1103, 382, 0,
	383, 384, 385, 386, 387, 1139, 1140, 1143, 466, 1182,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 271, 395, 396, 397, 399, 0, 1181, 398, 1148,
	1149, 0, 1109, 0, 400, 401, 1183, 1141, 1184, 402,
	403, 404, 1185, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 1177,
	1186, 416, 417, 1187, 0, 418, 0, 0, 0, 419,
	420, 423, 1132, 1131, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 1188, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 1189, 462, 452, 1071,
	272, 1190, 463, 464, 1094, 1142, 465, 1156, 467, 468,
	0, 0, 469, 0, 1076, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 1191, 476, 1192, 1171, 477, 478,
	1081, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	1172, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 1152, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 1193, 528, 529, 530,
	531, 532, 1082, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 1135, 555, 556, 538, 539, 557,
	558, 1194, 559, 560, 561, 562, 563, 564, 565, 1150,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 1197, 573, 574, 575, 576, 1173, 580, 581, 0,
	582, 583, 1068, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 1162, 1163, 1164,
	1165, 0, 601, 0, 593, 594, 595, 1174, 596, 1175,
	1092, 597, 598, 599, 600, 0, 602, 603, 0, 1075,
	604, 605, 606, 608, 609, 607, 610, 1136, 611, 0,
	0, 612, 613, 614, 671, 1159, 1196, 0, 616, 615,
	617, 674, 0, 618, 0, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 1072, 0, 0, 1114, 1086, 1087,
	1088, 1084, 1085, 1097, 0, 1067, 0, 0, 0, 0,
	0, 0, 1065, 1066, 273, 275, 274, 276, 277, 278,
	279, 1098, 280, 281, 0, 1096, 0, 0, 0, 1138,
	1102, 0, 0, 0, 282, 283, 1178, 284, 285, 286,
	287, 288, 289, 625, 1151, 0, 290, 1158, 291, 1157,
	0, 1168, 292, 293, 294, 295, 296, 297, 1104, 1137,
	1069, 298, 1198, 1199, 632, 0, 299, 300, 1144, 0,
	1125, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 4607, 319, 0, 320, 321, 322, 1179,
	323, 324, 325, 1128, 1126, 1127, 1134, 1130, 1129, 1133,
	326, 327, 328, 329, 330, 1161, 331, 1155, 1154, 1074,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 1146, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 1080, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 1169, 1170, 362,
	1093, 270, 0, 0, 0, 0, 0, 363, 364, 365,
	1153, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	1180, 369, 370, 371, 1166, 1167, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 1176, 0, 1103,
	382, 0, 383, 384, 385, 386, 387, 1139, 1140, 1143,
	466, 1182, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 271, 395, 396, 397, 399, 0, 1181,
	398, 1148, 1149, 0, 1109, 0, 400, 401, 1183, 1141,
	1184, 402, 403, 404, 1185, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 1177, 1186, 416, 417, 1187, 0, 418, 0, 0,
	0, 419, 420, 423, 1132, 1131, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 1188, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 1189, 462,
	452, 1071, 272, 1190, 463, 464, 1094, 1142, 465, 1156,
	467, 468, 0, 0, 469, 0, 1076, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 1191, 476, 1192, 1171,
	477, 478, 1081, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 1172, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 1152, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 1193, 528,
	529, 530, 531, 532, 1082, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 1135, 555, 556, 538,
	539, 557, 558, 1194, 559, 560, 561, 562, 563, 564,
	565, 1150, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 1197, 573, 574, 575, 576, 1173, 580,
	581, 0, 582, 583, 1068, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 1162,
	1163, 1164, 1165, 0, 601, 0, 593, 594, 595, 1174,
	596, 1175, 1092, 597, 598, 599, 600, 0, 602, 603,
	0, 1075, 604, 605, 606, 608, 609, 607, 610, 1136,
	611, 0, 0, 612, 613, 614, 671, 1159, 1196, 0,
	616, 615, 617, 674, 0, 618, 0, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 1072, 0, 0, 1114,
	1086, 1087, 1088, 1084, 1085, 1097, 0, 1067, 0, 0,
	0, 0, 0, 0, 1065, 1066, 273, 275, 274, 276,
	277, 278, 279, 1098, 280, 281, 0, 1096, 0, 0,
	0, 1138, 1102, 0, 0, 0, 282, 283, 1178, 284,
	285, 286, 287, 288, 289, 625, 1151, 0, 290, 1158,
	291, 1157, 0, 1168, 292, 293, 294, 295, 296, 297,
	1104, 1137, 1069, 298, 1198, 1199, 632, 0, 299, 300,
	1144, 0, 1125, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 1179, 323, 324, 325, 1128, 1126, 1127, 1134, 1130,
	1129, 1133, 326, 327, 328, 329, 330, 1161, 331, 1155,
	1154, 1074, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 1146, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 1080, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 1169,
	1170, 362, 1093, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 1153, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 1180, 369, 370, 371, 1166, 1167, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 1176,
	0, 1103, 382, 0, 383, 384, 385, 386, 387, 1139,
	1140, 1143, 466, 1182, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 2427, 395, 396, 397, 399,
	0, 1181, 398, 1148, 1149, 0, 1109, 0, 400, 401,
	1183, 1141, 1184, 402, 403, 404, 1185, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 1177, 1186, 416, 417, 1187, 0, 418,
	0, 0, 0, 419, 420, 423, 1132, 1131, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1188, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1189, 462, 452, 1071, 272, 1190, 463, 464, 1094, 1142,
	465, 1156, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 1191, 476,
	1192, 1171, 477, 478, 1081, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 1172, 495, 659, 496, 497, 2426,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	1152, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	1193, 528, 529, 530, 531, 532, 1082, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 1135, 555,
	556, 538, 539, 557, 558, 1194, 559, 560, 561, 562,
	563, 564, 565, 1150, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 1197, 573, 574, 575, 576,
	1173, 580, 581, 0, 582, 583, 1068, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 1162, 1163, 1164, 1165, 0, 601, 0, 593, 594,
	595, 1174, 596, 1175, 1092, 597, 598, 599, 600, 0,
	602, 603, 0, 1075, 604, 605, 606, 608, 609, 607,
	610, 1136, 611, 0, 0, 612, 613, 614, 671, 1159,
	1196, 0, 616, 615, 617, 674, 0, 618, 0, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 1072, 0,
	0, 1114, 1086, 1087, 1088, 1084, 1085, 1097, 0, 1067,
	0, 0, 0, 0, 0, 0, 1065, 1066, 273, 275,
	274, 276, 277, 278, 279, 1098, 280, 281, 0, 1096,
	0, 0, 0, 1138, 1102, 0, 0, 0, 282, 283,
	1178, 284, 285, 286, 287, 288, 289, 625, 1151, 0,
	290, 1158, 291, 1157, 0, 1168, 292, 293, 294, 295,
	296, 297, 1104, 1137, 1069, 298, 1198, 1199, 632, 0,
	299, 300, 1144, 0, 1125, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 1179, 323, 324, 325, 1128, 1126, 1127,
	1134, 1130, 1129, 1133, 326, 327, 328, 329, 330, 1161,
	331, 1155, 1154, 1074, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 1146, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	1080, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 1169, 1170, 362, 1093, 270, 0, 0, 0, 0,
	0, 363, 364, 365, 1153, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 1180, 369, 370, 371, 1166, 1167,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 1176, 0, 1103, 382, 0, 383, 384, 385, 386,
	387, 1139, 1140, 1143, 466, 1182, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 271, 395, 396,
	397, 399, 0, 1181, 398, 1148, 1149, 0, 1109, 0,
	400, 401, 1183, 1141, 1184, 402, 403, 404, 1185, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 1177, 1186, 416, 417, 1187,
	0, 418, 0, 0, 0, 419, 420, 423, 1132, 1131,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 1188,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 1189, 462, 452, 1071, 272, 1190, 463, 464,
	1094, 1142, 465, 1156, 467, 468, 0, 0, 469, 0,
	1076, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	1191, 476, 1192, 1171, 477, 478, 1081, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 1172, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 1152, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 1193, 528, 529, 530, 531, 532, 1082, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	1135, 555, 556, 538, 539, 557, 558, 1194, 559, 560,
	561, 562, 563, 564, 565, 1150, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 1197, 573, 574,
	575, 576, 1173, 580, 581, 0, 582, 583, 1068, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 1162, 1163, 1164, 1165, 0, 601, 0,
	593, 594, 595, 1174, 596, 1175, 1092, 597, 598, 599,
	600, 0, 602, 603, 0, 1075, 604, 605, 606, 608,
	609, 607, 610, 1136, 611, 0, 0, 612, 613, 614,
	671, 1159, 1196, 0, 616, 615, 617, 674, 0, 618,
	0, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	1072, 0, 0, 1114, 1086, 1087, 1088, 1084, 1085, 1097,
	0, 1067, 0, 0, 0, 0, 0, 0, 1065, 1066,
	273, 275, 274, 276, 277, 278, 279, 1098, 280, 281,
	0, 1096, 0, 0, 0, 1138, 1102, 0, 0, 0,
	282, 283, 1178, 284, 285, 286, 287, 288, 289, 625,
	1151, 0, 290, 1158, 291, 1157, 0, 1168, 292, 293,
	294, 295, 296, 297, 1104, 1137, 1069, 298, 1198, 1199,
	632, 0, 299, 300, 1144, 0, 1125, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 4351,
	319, 0, 320, 321, 322, 1179, 323, 324, 325, 1128,
	1126, 1127, 1134, 1130, 1129, 1133, 326, 327, 328, 329,
	330, 1161, 331, 1155, 1154, 1074, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	1146, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 1080, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 1169, 1170, 362, 1093, 270, 0, 0,
	0, 0, 0, 363, 364, 365, 1153, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 1180, 369, 370, 371,
	1166, 1167, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 1176, 0, 1103, 382, 0, 383, 384,
	385, 386, 387, 1139, 1140, 1143, 466, 1182, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 271,
	395, 396, 397, 399, 0, 1181, 398, 1148, 1149, 0,
	1109, 0, 400, 401, 1183, 1141, 1184, 402, 403, 404,
	1185, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 1177, 1186, 416,
	417, 1187, 0, 418, 0, 0, 0, 419, 420, 423,
	1132, 1131, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 1188, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 1189, 462, 452, 1071, 272, 1190,
	463, 464, 1094, 1142, 465, 1156, 467, 468, 0, 0,
	469, 0, 1076, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 1191, 476, 1192, 1171, 477, 478, 1081, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 1172, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 1152, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 1193, 528, 529, 530, 531, 532,
	1082, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 1135, 555, 556, 538, 539, 557, 558, 1194,
	559, 560, 561, 562, 563, 564, 565, 1150, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 1197,
	573, 574, 575, 576, 1173, 580, 581, 0, 582, 583,
	1068, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 1162, 1163, 1164, 1165, 0,
	601, 0, 593, 594, 595, 1174, 596, 1175, 1092, 597,
	598, 599, 600, 0, 602, 603, 0, 1075, 604, 605,
	606, 608, 609, 607, 610, 1136, 611, 0, 0, 612,
	613, 614, 671, 1159, 1196, 0, 616, 615, 617, 674,
	0, 618, 0, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 1072, 0, 0, 1114, 1086, 1087, 1088, 1084,
	1085, 1097, 0, 1067, 0, 0, 0, 0, 0, 0,
	1065, 1066, 273, 275, 274, 276, 277, 278, 279, 1098,
	280, 281, 0, 1096, 0, 0, 0, 1138, 1102, 0,
	0, 0, 282, 283, 1178, 284, 285, 286, 287, 288,
	289, 625, 1151, 0, 290, 1158, 291, 1157, 0, 1168,
	292, 293, 294, 295, 296, 297, 1104, 1137, 1069, 298,
	1198, 1199, 632, 0, 299, 300, 1144, 0, 1125, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 1179, 323, 324,
	325, 1128, 1126, 1127, 1134, 1130, 1129, 1133, 326, 327,
	328, 329, 330, 1161, 331, 1155, 1154, 1074, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 1146, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 1080, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 1169, 1170, 362, 1093, 270,
	0, 0, 0, 0, 0, 363, 364, 365, 1153, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 1180, 369,
	370, 371, 1166, 1167, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 1176, 0, 1103, 382, 0,
	383, 384, 385, 386, 387, 1139, 1140, 1143, 466, 1182,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 271, 395, 396, 397, 399, 0, 1181, 398, 1148,
	1149, 0, 1109, 0, 400, 401, 1183, 1141, 1184, 402,
	403, 404, 1185, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 1177,
	1186, 416, 417, 1187, 0, 418, 0, 0, 0, 419,
	420, 423, 1132, 1131, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 1188, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 1189, 462, 452, 1071,
	3964, 1190, 463, 464, 1094, 1142, 465, 1156, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 1191, 476, 1192, 1171, 477, 478,
	1081, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	1172, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 1152, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 1193, 528, 529, 530,
	531, 532, 1082, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 1135, 555, 556, 538, 539, 557,
	558, 1194, 559, 560, 561, 562, 563, 564, 565, 1150,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 1197, 573, 574, 575, 576, 1173, 580, 581, 0,
	582, 583, 1068, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 1162, 1163, 1164,
	1165, 0, 601, 0, 593, 594, 595, 1174, 596, 1175,
	1092, 597, 598, 599, 600, 0, 602, 603, 0, 1075,
	604, 605, 606, 608, 609, 607, 610, 1136, 611, 0,
	0, 612, 613, 614, 671, 1159, 1196, 0, 616, 615,
	617, 674, 0, 618, 0, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 1072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1067, 0, 0, 0, 0,
	0, 0, 1065, 1066, 1918, 0, 0, 0, 0, 0,
	0, 1098, 0, 0, 0, 1096, 1114, 1086, 1087, 1088,
	1084, 1085, 1097, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 1138, 1102,
	0, 0, 0, 282, 283, 1178, 284, 285, 286, 287,
	288, 289, 625, 1151, 0, 290, 1158, 291, 1157, 0,
	1168, 292, 293, 294, 295, 296, 297, 1104, 1137, 1069,
	298, 1198, 1199, 632, 0, 299, 300, 1144, 0, 1125,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 1179, 323,
	324, 325, 1128, 1126, 1127, 1134, 1130, 1129, 1133, 326,
	327, 328, 329, 330, 1161, 331, 1155, 1154, 1074, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 1146, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 1080, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 1169, 1170, 362, 1093,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 1153,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 1180,
	369, 370, 371, 1166, 1167, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 1176, 0, 1103, 382,
	0, 383, 384, 385, 386, 387, 1139, 1140, 1143, 466,
	1182, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 0, 1181, 398,
	1148, 1149, 0, 1109, 0, 400, 401, 1183, 1141, 1184,
	402, 403, 404, 1185, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	1177, 1186, 416, 417, 1187, 0, 418, 0, 0, 0,
	419, 420, 423, 1132, 1131, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 1188, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 1189, 462, 452,
	1071, 272, 1190, 463, 464, 1094, 1142, 465, 1156, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 1191, 476, 1192, 1171, 477,
	478, 1081, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 1172, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 1152, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 1193, 528, 529,
	530, 531, 532, 1082, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 1135, 555, 556, 538, 539,
	557, 558, 1194, 559, 560, 561, 562, 563, 564, 565,
	1150, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 1197, 573, 574, 575, 576, 1173, 580, 581,
	0, 582, 583, 1068, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 1162, 1163,
	1164, 1165, 0, 601, 0, 593, 594, 595, 1174, 596,
	1175, 1092, 597, 598, 599, 600, 0, 602, 603, 0,
	1075, 604, 605, 606, 608, 609, 607, 610, 1136, 611,
	0, 0, 612, 613, 614, 671, 1159, 1196, 3679, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 1072, 0, 0, 1114, 1086,
	1087, 1088, 1084, 1085, 1097, 0, 1067, 0, 0, 0,
	0, 0, 0, 1065, 1066, 273, 275, 274, 276, 277,
	278, 279, 1098, 280, 281, 0, 1096, 0, 0, 0,
	1138, 1102, 0, 0, 0, 282, 283, 1178, 284, 285,
	286, 287, 288, 289, 625, 1151, 0, 290, 1158, 291,
	1157, 0, 1168, 292, 293, 294, 295, 296, 297, 1104,
	1137, 1069, 298, 1198, 1199, 632, 0, 299, 300, 1144,
	0, 1125, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	1179, 323, 324, 325, 1128, 1126, 1127, 1134, 1130, 1129,
	1133, 326, 327, 328, 329, 330, 1161, 331, 1155, 1154,
	1074, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 1146, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 1080, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 1169, 1170,
	362, 1093, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 1153, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 1180, 369, 370, 371, 1166, 1167, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 1176, 0,
	1103, 382, 0, 383, 384, 385, 386, 387, 1139, 1140,
	1143, 466, 1182, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 0,
	1181, 398, 1148, 1149, 0, 1109, 0, 400, 401, 1183,
	1141, 1184, 402, 403, 404, 1185, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 1177, 1186, 416, 417, 1187, 0, 418, 0,
	0, 0, 419, 420, 423, 1132, 1131, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 1188, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 1189,
	462, 452, 1071, 272, 1190, 463, 464, 1094, 1142, 465,
	1156, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 1191, 476, 1192,
	1171, 477, 478, 1081, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 1172, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 1152,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 1193,
	528, 529, 530, 531, 532, 1082, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 1135, 555, 556,
	538, 539, 557, 558, 1194, 559, 560, 561, 562, 563,
	564, 565, 1150, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 1197, 573, 574, 575, 576, 1173,
	580, 581, 0, 582, 583, 1068, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	1162, 1163, 1164, 1165, 0, 601, 0, 593, 594, 595,
	1174, 596, 1175, 1092, 597, 598, 599, 600, 0, 602,
	603, 0, 1075, 604, 605, 606, 608, 609, 607, 610,
	1136, 611, 0, 0, 612, 613, 614, 671, 1159, 1196,
	0, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 1072, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1067, 0,
	0, 0, 0, 0, 0, 1065, 1066, 1918, 0, 0,
	0, 0, 0, 0, 1098, 0, 0, 0, 1096, 1114,
	1086, 1087, 1088, 1084, 1085, 1097, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 275, 274, 276,
	277, 278, 279, 0, 280, 281, 0, 0, 0, 0,
	0, 1138, 1102, 0, 0, 0, 282, 283, 1178, 284,
	285, 286, 287, 288, 289, 625, 1151, 0, 290, 1158,
	291, 1157, 0, 1168, 292, 293, 294, 295, 296, 297,
	1104, 1137, 1069, 298, 1198, 1199, 632, 0, 299, 300,
	1144, 0, 1125, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 1179, 323, 324, 325, 1128, 1126, 1127, 1134, 1130,
	1129, 1133, 326, 327, 328, 329, 330, 1161, 331, 1155,
	1154, 1074, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 1146, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 1080, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 1169,
	1170, 362, 1093, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 1153, 0, 0, 0, 366, 0, 367, 368,
	0, 2684, 1180, 369, 370, 371, 1166, 1167, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 1176,
	0, 1103, 382, 0, 383, 384, 385, 386, 387, 1139,
	1140, 1143, 466, 1182, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	0, 1181, 398, 1148, 1149, 0, 1109, 0, 400, 401,
	1183, 1141, 1184, 402, 403, 404, 1185, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 1177, 1186, 416, 417, 1187, 0, 418,
	0, 0, 0, 419, 420, 423, 1132, 1131, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1188, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1189, 462, 452, 1071, 272, 1190, 463, 464, 1094, 1142,
	465, 1156, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 1191, 476,
	1192, 1171, 477, 478, 1081, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 1172, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	1152, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	1193, 528, 529, 530, 531, 532, 1082, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 1135, 555,
	556, 538, 539, 557, 558, 1194, 559, 560, 561, 562,
	563, 564, 565, 1150, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 1197, 573, 574, 575, 576,
	1173, 580, 581, 0, 582, 583, 1068, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 1162, 1163, 1164, 1165, 0, 601, 0, 593, 594,
	595, 1174, 596, 1175, 1092, 597, 598, 599, 600, 0,
	602, 603, 0, 1075, 604, 605, 606, 608, 609, 607,
	610, 1136, 611, 0, 0, 612, 613, 614, 671, 1159,
	1196, 0, 616, 615, 617, 674, 0, 618, 0, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 1072, 0,
	0, 1114, 1086, 1087, 1088, 1084, 1085, 1097, 0, 1067,
	0, 0, 0, 0, 0, 0, 1065, 1066, 273, 275,
	274, 276, 277, 278, 279, 1098, 280, 281, 0, 1096,
	0, 0, 0, 1138, 1102, 0, 0, 0, 282, 283,
	1178, 284, 285, 286, 287, 288, 289, 625, 1151, 0,
	290, 1158, 291, 1157, 0, 1168, 292, 293, 294, 295,
	296, 297, 1104, 1137, 1069, 298, 1198, 1199, 632, 0,
	299, 300, 1144, 0, 1125, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 1179, 323, 324, 325, 1128, 1126, 1127,
	1134, 1130, 1129, 1133, 326, 327, 328, 329, 330, 1161,
	331, 1155, 1154, 1074, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 1146, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	1080, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 1169, 1170, 362, 1093, 270, 0, 0, 0, 0,
	0, 363, 364, 365, 1153, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 1180, 369, 370, 371, 1166, 1167,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 1176, 0, 1103, 382, 0, 383, 384, 385, 386,
	387, 1139, 1140, 1143, 466, 1182, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 271, 395, 396,
	397, 399, 0, 1181, 398, 1148, 1149, 0, 1109, 0,
	400, 401, 1183, 1141, 1184, 402, 403, 404, 1185, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 1177, 1186, 416, 417, 1187,
	0, 418, 0, 0, 0, 419, 420, 423, 1132, 1131,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 1188,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 1189, 462, 452, 1071, 272, 1190, 463, 464,
	1094, 1142, 465, 1156, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	1191, 476, 1192, 1171, 477, 478, 1081, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 1172, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 1152, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 1193, 528, 529, 530, 531, 532, 1082, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	1135, 555, 556, 538, 539, 557, 558, 1194, 559, 560,
	561, 562, 563, 564, 565, 1150, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 1197, 573, 574,
	575, 576, 1173, 580, 581, 0, 582, 583, 1068, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 1162, 1163, 1164, 1165, 0, 601, 0,
	593, 594, 595, 1174, 596, 1175, 1092, 597, 598, 599,
	600, 0, 602, 603, 0, 1075, 604, 605, 606, 608,
	609, 607, 610, 1136, 611, 0, 0, 612, 613, 614,
	671, 1159, 1196, 0, 616, 615, 617, 674, 0, 618,
	0, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	1072, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1067, 0, 0, 0, 0, 0, 0, 1065, 1066,
	0, 0, 0, 0, 0, 0, 0, 1098, 1848, 0,
	2689, 1096, 1114, 1086, 1087, 1088, 1084, 1085, 1097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 1138, 1102, 0, 0, 0, 282,
	283, 1178, 284, 285, 286, 287, 288, 289, 625, 1151,
	0, 290, 1158, 291, 1157, 0, 1168, 292, 293, 294,
	295, 296, 297, 1104, 1137, 1069, 298, 1198, 1199, 632,
	0, 299, 300, 1144, 0, 1125, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 1179, 323, 324, 325, 1128, 1126,
	1127, 1134, 1130, 1129, 1133, 326, 327, 328, 329, 330,
	1161, 331, 1155, 1154, 1074, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 1146,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 1080, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 1169, 1170, 362, 1093, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 1153, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 1180, 369, 370, 371, 1166,
	1167, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 1176, 0, 1103, 382, 0, 383, 384, 385,
	386, 387, 1139, 1140, 1143, 466, 1182, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 1181, 398, 1148, 1149, 0, 1109,
	0, 400, 401, 1183, 1141, 1184, 402, 403, 404, 1185,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 1177, 1186, 416, 417,
	1187, 0, 418, 0, 0, 0, 419, 420, 423, 1132,
	1131, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	1188, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 1189, 462, 452, 1071, 272, 1190, 463,
	464, 1094, 1142, 465, 1156, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 1191, 476, 1192, 1171, 477, 478, 1081, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 1172, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 1152, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 1193, 528, 529, 530, 531, 532, 1082,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 1135, 555, 556, 538, 539, 557, 558, 1194, 559,
	560, 561, 562, 563, 564, 565, 1150, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 1197, 573,
	574, 575, 576, 1173, 580, 581, 0, 582, 583, 1068,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 1162, 1163, 1164, 1165, 0, 601,
	0, 593, 594, 595, 1174, 596, 1175, 1092, 597, 598,
	599, 600, 0, 602, 603, 0, 1075, 604, 605, 606,
	608, 609, 607, 610, 1136, 611, 0, 0, 612, 613,
	614, 671, 1159, 1196, 0, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 1072, 2687, 0, 1114, 1086, 1087, 1088, 1084, 1085,
	1097, 0, 1067, 0, 0, 0, 0, 0, 0, 1065,
	1066, 273, 275, 274, 276, 277, 278, 279, 1098, 280,
	281, 0, 1096, 0, 0, 0, 1138, 1102, 0, 0,
	0, 282, 283, 1178, 284, 285, 286, 287, 288, 289,
	625, 1151, 0, 290, 1158, 291, 1157, 0, 1168, 292,
	293, 294, 295, 296, 297, 1104, 1137, 1069, 298, 1198,
	1199, 632, 0, 299, 300, 1144, 0, 1125, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 1179, 323, 324, 325,
	1128, 1126, 1127, 1134, 1130, 1129, 1133, 326, 327, 328,
	329, 330, 1161, 331, 1155, 1154, 1074, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 1146, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 1080, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 1169, 1170, 362, 1093, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 1153, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 1180, 369, 370,
	371, 1166, 1167, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 1176, 0, 1103, 382, 0, 383,
	384, 385, 386, 387, 1139, 1140, 1143, 466, 1182, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 0, 1181, 398, 1148, 1149,
	0, 1109, 0, 400, 401, 1183, 1141, 1184, 402, 403,
	404, 1185, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 1177, 1186,
	416, 417, 1187, 0, 418, 0, 0, 0, 419, 420,
	423, 1132, 1131, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1188, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1189, 462, 452, 1071, 272,
	1190, 463, 464, 1094, 1142, 465, 1156, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 1191, 476, 1192, 1171, 477, 478, 1081,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 1172,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 1152, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 1193, 528, 529, 530, 531,
	532, 1082, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 1135, 555, 556, 538, 539, 557, 558,
	1194, 559, 560, 561, 562, 563, 564, 565, 1150, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	1197, 573, 574, 575, 576, 1173, 580, 581, 0, 582,
	583, 1068, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 1162, 1163, 1164, 1165,
	0, 601, 0, 593, 594, 595, 1174, 596, 1175, 1092,
	597, 598, 599, 600, 0, 602, 603, 0, 1075, 604,
	605, 606, 608, 609, 607, 610, 1136, 611, 0, 0,
	612, 613, 614, 671, 1159, 1196, 0, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 1072, 2675, 0, 1114, 1086, 1087, 1088,
	1084, 1085, 1097, 0, 1067, 0, 0, 0, 0, 0,
	0, 1065, 1066, 273, 275, 274, 276, 277, 278, 279,
	1098, 280, 281, 0, 1096, 0, 0, 0, 1138, 1102,
	0, 0, 0, 282, 283, 1178, 284, 285, 286, 287,
	288, 289, 625, 1151, 0, 290, 1158, 291, 1157, 0,
	1168, 292, 293, 294, 295, 296, 297, 1104, 1137, 1069,
	298, 1198, 1199, 632, 0, 299, 300, 1144, 0, 1125,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 1179, 323,
	324, 325, 1128, 1126, 1127, 1134, 1130, 1129, 1133, 326,
	327, 328, 329, 330, 1161, 331, 1155, 1154, 1074, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 1146, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 1080, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 1169, 1170, 362, 1093,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 1153,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 1180,
	369, 370, 371, 1166, 1167, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 1176, 0, 1103, 382,
	0, 383, 384, 385, 386, 387, 1139, 1140, 1143, 466,
	1182, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 0, 1181, 398,
	1148, 1149, 0, 1109, 0, 400, 401, 1183, 1141, 1184,
	402, 403, 404, 1185, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	1177, 1186, 416, 417, 1187, 0, 418, 0, 0, 0,
	419, 420, 423, 1132, 1131, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 1188, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 1189, 462, 452,
	1071, 272, 1190, 463, 464, 1094, 1142, 465, 1156, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 1191, 476, 1192, 1171, 477,
	478, 1081, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 1172, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 1152, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 1193, 528, 529,
	530, 531, 532, 1082, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 1135, 555, 556, 538, 539,
	557, 558, 1194, 559, 560, 561, 562, 563, 564, 565,
	1150, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 1197, 573, 574, 575, 576, 1173, 580, 581,
	0, 582, 583, 1068, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 1162, 1163,
	1164, 1165, 0, 601, 0, 593, 594, 595, 1174, 596,
	1175, 1092, 597, 598, 599, 600, 0, 602, 603, 0,
	1075, 604, 605, 606, 608, 609, 607, 610, 1136, 611,
	0, 0, 612, 613, 614, 671, 1159, 1196, 0, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 1072, 2663, 0, 1114, 1086,
	1087, 1088, 1084, 1085, 1097, 0, 1067, 0, 0, 0,
	0, 0, 0, 1065, 1066, 273, 275, 274, 276, 277,
	278, 279, 1098, 280, 281, 0, 1096, 0, 0, 0,
	1138, 1102, 0, 0, 0, 282, 283, 1178, 284, 285,
	286, 287, 288, 289, 625, 1151, 0, 290, 1158, 291,
	1157, 0, 1168, 292, 293, 294, 295, 296, 297, 1104,
	1137, 1069, 298, 1198, 1199, 632, 0, 299, 300, 1144,
	0, 1125, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	1179, 323, 324, 325, 1128, 1126, 1127, 1134, 1130, 1129,
	1133, 326, 327, 328, 329, 330, 1161, 331, 1155, 1154,
	1074, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 1146, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 1080, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 1169, 1170,
	362, 1093, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 1153, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 1180, 369, 370, 371, 1166, 1167, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 1176, 0,
	1103, 382, 0, 383, 384, 385, 386, 387, 1139, 1140,
	1143, 466, 1182, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 0,
	1181, 398, 1148, 1149, 0, 1109, 0, 400, 401, 1183,
	1141, 1184, 402, 403, 404, 1185, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 1177, 1186, 416, 417, 1187, 0, 418, 0,
	0, 0, 419, 420, 423, 1132, 1131, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 1188, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 1189,
	462, 452, 1071, 272, 1190, 463, 464, 1094, 1142, 465,
	1156, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 1191, 476, 1192,
	1171, 477, 478, 1081, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 1172, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 1152,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 1193,
	528, 529, 530, 531, 532, 1082, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 1135, 555, 556,
	538, 539, 557, 558, 1194, 559, 560, 561, 562, 563,
	564, 565, 1150, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 1197, 573, 574, 575, 576, 1173,
	580, 581, 0, 582, 583, 1068, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	1162, 1163, 1164, 1165, 0, 601, 0, 593, 594, 595,
	1174, 596, 1175, 1092, 597, 598, 599, 600, 0, 602,
	603, 0, 1075, 604, 605, 606, 608, 609, 607, 610,
	1136, 611, 0, 0, 612, 613, 614, 671, 1159, 1196,
	0, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 1072, 2661, 0,
	2652, 2659, 1087, 1088, 1084, 1085, 1097, 0, 1067, 0,
	0, 0, 0, 0, 0, 1065, 1066, 273, 275, 274,
	276, 277, 278, 279, 1098, 280, 281, 0, 1096, 0,
	0, 0, 1138, 1102, 0, 0, 0, 282, 283, 1178,
	284, 285, 286, 287, 288, 289, 625, 1151, 0, 290,
	1158, 291, 1157, 0, 1168, 292, 293, 294, 295, 296,
	297, 1104, 1137, 1069, 298, 1198, 1199, 632, 0, 299,
	300, 1144, 0, 1125, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 1179, 323, 324, 325, 1128, 1126, 1127, 1134,
	1130, 1129, 1133, 326, 327, 328, 329, 330, 1161, 2655,
	1155, 1154, 1074, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 1146, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 1080,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	1169, 1170, 362, 1093, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 1153, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 1180, 369, 370, 371, 1166, 1167, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	1176, 0, 1103, 382, 0, 383, 384, 385, 2656, 387,
	1139, 1140, 1143, 466, 1182, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 271, 395, 396, 397,
	399, 0, 1181, 398, 1148, 1149, 0, 1109, 0, 400,
	401, 1183, 1141, 1184, 402, 403, 404, 1185, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 1177, 1186, 416, 417, 1187, 0,
	418, 0, 0, 0, 419, 420, 423, 1132, 1131, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	2657, 433, 2654, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 1188, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 1189, 462, 452, 1071, 272, 1190, 463, 464, 1094,
	1142, 465, 1156, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 1191,
	476, 1192, 1171, 477, 478, 1081, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 1172, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 1152, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 1193, 528, 529, 530, 531, 532, 1082, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 2658, 0, 550, 551, 549, 552, 553, 554, 1135,
	555, 556, 538, 539, 557, 558, 1194, 559, 560, 561,
	562, 563, 564, 565, 1150, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 1197, 573, 574, 575,
	576, 1173, 580, 581, 0, 582, 583, 1068, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 1162, 1163, 1164, 1165, 0, 601, 0, 593,
	594, 595, 1174, 596, 1175, 1092, 597, 598, 599, 600,
	0, 602, 603, 0, 1075, 604, 605, 606, 608, 609,
	607, 610, 1136, 611, 0, 0, 612, 613, 614, 671,
	1159, 1196, 0, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 2653, 623, 1072,
	2649, 0, 2652, 2659, 1087, 1088, 1084, 1085, 1097, 0,
	1067, 0, 0, 0, 0, 0, 0, 1065, 1066, 273,
	275, 274, 276, 277, 278, 279, 1098, 280, 281, 0,
	1096, 0, 0, 0, 1138, 1102, 0, 0, 0, 282,
	283, 1178, 284, 285, 286, 287, 288, 289, 625, 1151,
	0, 290, 1158, 291, 1157, 0, 1168, 292, 293, 294,
	295, 296, 297, 1104, 1137, 1069, 298, 1198, 1199, 632,
	0, 299, 300, 1144, 0, 1125, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 1179, 323, 324, 325, 1128, 1126,
	1127, 1134, 1130, 1129, 1133, 326, 327, 328, 329, 330,
	1161, 2655, 1155, 1154, 1074, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 1146,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 1080, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 1169, 1170, 362, 1093, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 1153, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 1180, 369, 370, 371, 1166,
	1167, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 1176, 0, 1103, 382, 0, 383, 384, 385,
	2656, 387, 1139, 1140, 1143, 466, 1182, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 1181, 398, 1148, 1149, 0, 1109,
	0, 400, 401, 1183, 1141, 1184, 402, 403, 404, 1185,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 1177, 1186, 416, 417,
	1187, 0, 418, 0, 0, 0, 419, 420, 423, 1132,
	1131, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 2657, 433, 2654, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	1188, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 1189, 462, 452, 1071, 272, 1190, 463,
	464, 1094, 1142, 465, 1156, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 1191, 476, 1192, 1171, 477, 478, 1081, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 1172, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 1152, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 1193, 528, 529, 530, 531, 532, 1082,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 2658, 0, 550, 551, 549, 552, 553,
	554, 1135, 555, 556, 538, 539, 557, 558, 1194, 559,
	560, 561, 562, 563, 564, 565, 1150, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 1197, 573,
	574, 575, 576, 1173, 580, 581, 0, 582, 583, 1068,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 1162, 1163, 1164, 1165, 0, 601,
	0, 593, 594, 595, 1174, 596, 1175, 1092, 597, 598,
	599, 600, 0, 602, 603, 0, 1075, 604, 605, 606,
	608, 609, 607, 610, 1136, 611, 0, 0, 612, 613,
	614, 671, 1159, 1196, 0, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 2653,
	623, 1072, 0, 0, 1114, 1086, 1087, 1088, 1084, 1085,
	1097, 0, 1067, 0, 0, 0, 0, 0, 0, 1065,
	1066, 273, 275, 274, 276, 277, 278, 279, 1098, 280,
	281, 0, 1096, 0, 0, 0, 1138, 1102, 0, 0,
	0, 282, 283, 1178, 284, 285, 286, 287, 288, 289,
	625, 1151, 0, 290, 1158, 291, 1157, 0, 1168, 292,
	293, 294, 295, 296, 297, 1104, 1137, 1069, 298, 1198,
	1199, 632, 0, 299, 300, 1144, 0, 1125, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 1179, 323, 324, 325,
	1128, 1126, 1127, 1134, 1130, 1129, 1133, 326, 327, 328,
	329, 330, 1161, 331, 1155, 1154, 1074, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 1146, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 1080, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 1169, 1170, 362, 1093, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 1153, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 1180, 369, 370,
	371, 1166, 1167, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 1176, 0, 1103, 382, 0, 383,
	384, 385, 386, 387, 1139, 1140, 1143, 466, 1182, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 0, 1181, 398, 1148, 1149,
	0, 1109, 0, 400, 401, 1183, 1141, 1184, 402, 403,
	404, 1185, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 1177, 1186,
	416, 417, 1187, 0, 418, 0, 0, 0, 419, 420,
	423, 1132, 1131, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1188, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1189, 462, 452, 1071, 272,
	1190, 463, 464, 1094, 1142, 465, 1156, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 1191, 476, 1192, 1171, 477, 478, 1081,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 1172,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 1152, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 1193, 528, 529, 530, 531,
	532, 1082, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 1135, 555, 556, 538, 539, 557, 558,
	1194, 559, 560, 561, 562, 563, 564, 565, 1150, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	1197, 573, 574, 575, 576, 1173, 580, 581, 0, 582,
	583, 1068, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 1162, 1163, 1164, 1165,
	0, 601, 0, 593, 594, 595, 1174, 596, 1175, 1092,
	597, 598, 599, 600, 0, 602, 603, 0, 1075, 604,
	605, 606, 608, 609, 607, 610, 1136, 611, 0, 0,
	612, 613, 614, 671, 1159, 1196, 0, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 1072, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1067, 0, 0, 0, 0, 0,
	0, 1065, 1066, 0, 0, 0, 0, 0, 1856, 0,
	1098, 0, 0, 0, 1096, 1114, 1086, 1087, 1088, 1084,
	1085, 1097, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 275, 274, 276, 277, 278, 279, 2406,
	280, 281, 0, 0, 0, 0, 0, 1138, 1102, 0,
	0, 0, 282, 283, 1178, 284, 285, 286, 287, 288,
	289, 625, 1151, 0, 290, 1158, 291, 1157, 0, 1168,
	292, 293, 294, 295, 296, 297, 1104, 1137, 1069, 298,
	1198, 1199, 632, 0, 299, 300, 1144, 0, 1125, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 1179, 323, 324,
	325, 1128, 1126, 1127, 1134, 1130, 1129, 1133, 326, 327,
	328, 329, 330, 1161, 331, 1155, 1154, 1074, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 1146, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 1080, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 1169, 1170, 362, 1093, 270,
	0, 0, 0, 0, 0, 363, 364, 365, 1153, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 1180, 369,
	370, 371, 1166, 1167, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 1176, 0, 1103, 382, 0,
	383, 384, 385, 386, 387, 1139, 1140, 1143, 466, 1182,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 271, 395, 396, 397, 399, 0, 1181, 398, 1148,
	1149, 0, 1109, 0, 400, 401, 1183, 1141, 1184, 402,
	403, 404, 1185, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 1177,
	1186, 416, 417, 1187, 0, 418, 0, 0, 0, 419,
	420, 423, 1132, 1131, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 1188, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 1189, 462, 452, 1071,
	272, 1190, 463, 464, 1094, 1142, 465, 1156, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 1191, 476, 1192, 1171, 477, 478,
	1081, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	1172, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 1152, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 1193, 528, 529, 530,
	531, 532, 1082, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 1135, 555, 556, 538, 539, 557,
	558, 1194, 559, 560, 561, 562, 563, 564, 565, 1150,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 1197, 573, 574, 575, 576, 1173, 580, 581, 0,
	582, 583, 1068, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 1162, 1163, 1164,
	1165, 0, 601, 0, 593, 594, 595, 1174, 596, 1175,
	1092, 597, 598, 599, 600, 0, 602, 603, 0, 1075,
	604, 605, 606, 608, 609, 607, 610, 1136, 611, 0,
	0, 612, 613, 614, 671, 1159, 1196, 0, 616, 615,
	617, 674, 0, 618, 0, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 1072, 2370, 0, 1114, 1086, 1087,
	1088, 1084, 1085, 1097, 0, 1067, 0, 0, 0, 0,
	0, 0, 1065, 1066, 273, 275, 274, 276, 277, 278,
	279, 1098, 280, 281, 0, 1096, 0, 0, 0, 1138,
	1102, 0, 0, 0, 282, 283, 1178, 284, 285, 286,
	287, 288, 289, 625, 1151, 0, 290, 1158, 291, 1157,
	0, 1168, 292, 293, 294, 295, 296, 297, 1104, 1137,
	1069, 298, 1198, 1199, 632, 0, 299, 300, 1144, 0,
	1125, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 1179,
	323, 324, 325, 1128, 1126, 1127, 1134, 1130, 1129, 1133,
	326, 327, 328, 329, 330, 1161, 331, 1155, 1154, 1074,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 1146, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 1080, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 1169, 1170, 362,
	1093, 270, 0, 0, 0, 0, 0, 363, 364, 365,
	1153, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	1180, 369, 370, 371, 1166, 1167, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 1176, 0, 1103,
	382, 0, 383, 384, 385, 386, 387, 1139, 1140, 1143,
	466, 1182, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 271, 395, 396, 397, 399, 0, 1181,
	398, 1148, 1149, 0, 1109, 0, 400, 401, 1183, 1141,
	1184, 402, 403, 404, 1185, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 1177, 1186, 416, 417, 1187, 0, 418, 0, 0,
	0, 419, 420, 423, 1132, 1131, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 1188, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 1189, 462,
	452, 1071, 272, 1190, 463, 464, 1094, 1142, 465, 1156,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 1191, 476, 1192, 1171,
	477, 478, 1081, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 1172, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 1152, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 1193, 528,
	529, 530, 531, 532, 1082, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 1135, 555, 556, 538,
	539, 557, 558, 1194, 559, 560, 561, 562, 563, 564,
	565, 1150, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 1197, 573, 574, 575, 576, 1173, 580,
	581, 0, 582, 583, 1068, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 1162,
	1163, 1164, 1165, 0, 601, 0, 593, 594, 595, 1174,
	596, 1175, 1092, 597, 598, 599, 600, 0, 602, 603,
	0, 1075, 604, 605, 606, 608, 609, 607, 610, 1136,
	611, 0, 0, 612, 613, 614, 671, 1159, 1196, 0,
	616, 615, 617, 674, 0, 618, 0, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 1072, 2346, 0, 1114,
	1086, 1087, 1088, 1084, 1085, 1097, 0, 1067, 0, 0,
	0, 0, 0, 0, 1065, 1066, 273, 275, 274, 276,
	277, 278, 279, 1098, 280, 281, 0, 1096, 0, 0,
	0, 1138, 1102, 0, 0, 0, 282, 283, 1178, 284,
	285, 286, 287, 288, 289, 625, 1151, 0, 290, 1158,
	291, 1157, 0, 1168, 292, 293, 294, 295, 296, 297,
	1104, 1137, 1069, 298, 1198, 1199, 632, 0, 299, 300,
	1144, 0, 1125, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 1179, 323, 324, 325, 1128, 1126, 1127, 1134, 1130,
	1129, 1133, 326, 327, 328, 329, 330, 1161, 331, 1155,
	1154, 1074, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 1146, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 1080, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 1169,
	1170, 362, 1093, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 1153, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 1180, 369, 370, 371, 1166, 1167, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 1176,
	0, 1103, 382, 0, 383, 384, 385, 386, 387, 1139,
	1140, 1143, 466, 1182, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	0, 1181, 398, 1148, 1149, 0, 1109, 0, 400, 401,
	1183, 1141, 1184, 402, 403, 404, 1185, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 1177, 1186, 416, 417, 1187, 0, 418,
	0, 0, 0, 419, 420, 423, 1132, 1131, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1188, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1189, 462, 452, 1071, 272, 1190, 463, 464, 1094, 1142,
	465, 1156, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 1191, 476,
	1192, 1171, 477, 478, 1081, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 1172, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	1152, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	1193, 528, 529, 530, 531, 532, 1082, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 1135, 555,
	556, 538, 539, 557, 558, 1194, 559, 560, 561, 562,
	563, 564, 565, 1150, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 1197, 573, 574, 575, 576,
	1173, 580, 581, 0, 582, 583, 1068, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 1162, 1163, 1164, 1165, 0, 601, 0, 593, 594,
	595, 1174, 596, 1175, 1092, 597, 598, 599, 600, 0,
	602, 603, 0, 1075, 604, 605, 606, 608, 609, 607,
	610, 1136, 611, 0, 0, 612, 613, 614, 671, 1159,
	1196, 0, 616, 615, 617, 674, 0, 618, 0, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 1072, 1696,
	0, 1114, 1086, 1087, 1088, 1084, 1085, 1097, 0, 1067,
	0, 0, 0, 0, 0, 0, 1065, 1066, 273, 275,
	274, 276, 277, 278, 279, 1098, 280, 281, 0, 1096,
	0, 0, 0, 1138, 1102, 0, 0, 0, 282, 283,
	1178, 284, 285, 286, 287, 288, 289, 625, 1151, 0,
	290, 1158, 291, 1157, 0, 1168, 292, 293, 294, 295,
	296, 297, 1104, 1137, 1069, 298, 1198, 1199, 632, 0,
	299, 300, 1144, 0, 1125, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 1179, 323, 324, 325, 1128, 1126, 1127,
	1134, 1130, 1129, 1133, 326, 327, 328, 329, 330, 1161,
	331, 1155, 1154, 1074, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 1146, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	1080, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 1169, 1170, 362, 1093, 270, 0, 0, 0, 0,
	0, 363, 364, 365, 1153, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 1180, 369, 370, 371, 1166, 1167,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 1176, 0, 1103, 382, 0, 383, 384, 385, 386,
	387, 1139, 1140, 1143, 466, 1182, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 271, 395, 396,
	397, 399, 0, 1181, 398, 1148, 1149, 0, 1109, 0,
	400, 401, 1183, 1141, 1184, 402, 403, 404, 1185, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 1177, 1186, 416, 417, 1187,
	0, 418, 0, 0, 0, 419, 420, 423, 1132, 1131,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 1188,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 1189, 462, 452, 1071, 272, 1190, 463, 464,
	1094, 1142, 465, 1156, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	1191, 476, 1192, 1171, 477, 478, 1081, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 1172, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 1152, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 1193, 528, 529, 530, 531, 532, 1082, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	1135, 555, 556, 538, 539, 557, 558, 1194, 559, 560,
	561, 562, 563, 564, 565, 1150, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 1197, 573, 574,
	575, 576, 1173, 580, 581, 0, 582, 583, 1068, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 1162, 1163, 1164, 1165, 0, 601, 0,
	593, 594, 595, 1174, 596, 1175, 1092, 597, 598, 599,
	600, 0, 602, 603, 0, 1075, 604, 605, 606, 608,
	609, 607, 610, 1136, 611, 0, 0, 612, 613, 614,
	671, 1159, 1196, 0, 616, 615, 617, 674, 0, 618,
	0, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	1072, 1626, 0, 1114, 1086, 1087, 1088, 1084, 1085, 1097,
	0, 1067, 0, 0, 0, 0, 0, 0, 1065, 1066,
	273, 275, 274, 276, 277, 278, 279, 1098, 280, 281,
	0, 1096, 0, 0, 0, 1138, 1102, 0, 0, 0,
	282, 283, 1178, 284, 285, 286, 287, 288, 289, 625,
	1151, 0, 290, 1158, 291, 1157, 0, 1168, 292, 293,
	294, 295, 296, 297, 1104, 1137, 1069, 298, 1198, 1199,
	632, 0, 299, 300, 1144, 0, 1125, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 1179, 323, 324, 325, 1128,
	1126, 1127, 1134, 1130, 1129, 1133, 326, 327, 328, 329,
	330, 1161, 331, 1155, 1154, 1074, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	1146, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 1080, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 1169, 1170, 362, 1093, 270, 0, 0,
	0, 0, 0, 363, 364, 365, 1153, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 1180, 369, 370, 371,
	1166, 1167, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 1176, 0, 1103, 382, 0, 383, 384,
	385, 386, 387, 1139, 1140, 1143, 466, 1182, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 271,
	395, 396, 397, 399, 0, 1181, 398, 1148, 1149, 0,
	1109, 0, 400, 401, 1183, 1141, 1184, 402, 403, 404,
	1185, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 1177, 1186, 416,
	417, 1187, 0, 418, 0, 0, 0, 419, 420, 423,
	1132, 1131, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 1188, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 1189, 462, 452, 1071, 272, 1190,
	463, 464, 1094, 1142, 465, 1156, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 1191, 476, 1192, 1171, 477, 478, 1081, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 1172, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 1152, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 1193, 528, 529, 530, 531, 532,
	1082, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 1135, 555, 556, 538, 539, 557, 558, 1194,
	559, 560, 561, 562, 563, 564, 565, 1150, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 1197,
	573, 574, 575, 576, 1173, 580, 581, 0, 582, 583,
	1068, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 1162, 1163, 1164, 1165, 0,
	601, 0, 593, 594, 595, 1174, 596, 1175, 1092, 597,
	598, 599, 600, 0, 602, 603, 0, 1075, 604, 605,
	606, 608, 609, 607, 610, 1136, 611, 0, 0, 612,
	613, 614, 671, 1159, 1196, 0, 616, 615, 617, 674,
	0, 618, 0, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 1072, 1621, 0, 1114, 1086, 1087, 1088, 1084,
	1085, 1097, 0, 1067, 0, 0, 0, 0, 0, 0,
	1065, 1066, 273, 275, 274, 276, 277, 278, 279, 1098,
	280, 281, 0, 1096, 0, 0, 0, 1138, 1102, 0,
	0, 0, 282, 283, 1178, 284, 285, 286, 287, 288,
	289, 625, 1151, 0, 290, 1158, 291, 1157, 0, 1168,
	292, 293, 294, 295, 296, 297, 1104, 1137, 1069, 298,
	1198, 1199, 632, 0, 299, 300, 1144, 0, 1125, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 1179, 323, 324,
	325, 1128, 1126, 1127, 1134, 1130, 1129, 1133, 326, 327,
	328, 329, 330, 1161, 331, 1155, 1154, 1074, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 1146, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 1080, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 1169, 1170, 362, 1093, 270,
	0, 0, 0, 0, 0, 363, 364, 365, 1153, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 1180, 369,
	370, 371, 1166, 1167, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 1176, 0, 1103, 382, 0,
	383, 384, 385, 386, 387, 1139, 1140, 1143, 466, 1182,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 271, 395, 396, 397, 399, 0, 1181, 398, 1148,
	1149, 0, 1109, 0, 400, 401, 1183, 1141, 1184, 402,
	403, 404, 1185, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 1177,
	1186, 416, 417, 1187, 0, 418, 0, 0, 0, 419,
	420, 423, 1132, 1131, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 1188, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 1189, 462, 452, 1071,
	272, 1190, 463, 464, 1094, 1142, 465, 1156, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 1191, 476, 1192, 1171, 477, 478,
	1081, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	1172, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 1152, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 1193, 528, 529, 530,
	531, 532, 1082, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 1135, 555, 556, 538, 539, 557,
	558, 1194, 559, 560, 561, 562, 563, 564, 565, 1150,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 1197, 573, 574, 575, 576, 1173, 580, 581, 0,
	582, 583, 1068, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 1162, 1163, 1164,
	1165, 0, 601, 0, 593, 594, 595, 1174, 596, 1175,
	1092, 597, 598, 599, 600, 0, 602, 603, 0, 1075,
	604, 605, 606, 608, 609, 607, 610, 1136, 611, 0,
	0, 612, 613, 614, 671, 1159, 1196, 0, 616, 615,
	617, 674, 0, 618, 0, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 1072, 1612, 0, 1114, 1086, 1087,
	1088, 1084, 1085, 1097, 0, 1067, 0, 0, 0, 0,
	0, 0, 1065, 1066, 273, 275, 274, 276, 277, 278,
	279, 1098, 280, 281, 0, 1096, 0, 0, 0, 1138,
	1102, 0, 0, 0, 282, 283, 1178, 284, 285, 286,
	287, 288, 289, 625, 1151, 0, 290, 1158, 291, 1157,
	0, 1168, 292, 293, 294, 295, 296, 297, 1104, 1137,
	1069, 298, 1198, 1199, 632, 0, 299, 300, 1144, 0,
	1125, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 1179,
	323, 324, 325, 1128, 1126, 1127, 1134, 1130, 1129, 1133,
	326, 327, 328, 329, 330, 1161, 331, 1155, 1154, 1074,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 1146, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 1080, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 1169, 1170, 362,
	1093, 270, 0, 0, 0, 0, 0, 363, 364, 365,
	1153, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	1180, 369, 370, 371, 1166, 1167, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 1176, 0, 1103,
	382, 0, 383, 384, 385, 386, 387, 1139, 1140, 1143,
	466, 1182, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 271, 395, 396, 397, 399, 0, 1181,
	398, 1148, 1149, 0, 1109, 0, 400, 401, 1183, 1141,
	1184, 402, 403, 404, 1185, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 1177, 1186, 416, 417, 1187, 0, 418, 0, 0,
	0, 419, 420, 423, 1132, 1131, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 1188, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 1189, 462,
	452, 1071, 272, 1190, 463, 464, 1094, 1142, 465, 1156,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 1191, 476, 1192, 1171,
	477, 478, 1081, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 1172, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 1152, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 1193, 528,
	529, 530, 531, 532, 1082, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 1135, 555, 556, 538,
	539, 557, 558, 1194, 559, 560, 561, 562, 563, 564,
	565, 1150, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 1197, 573, 574, 575, 576, 1173, 580,
	581, 0, 582, 583, 1068, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 1162,
	1163, 1164, 1165, 0, 601, 0, 593, 594, 595, 1174,
	596, 1175, 1092, 597, 598, 599, 600, 0, 602, 603,
	0, 1075, 604, 605, 606, 608, 609, 607, 610, 1136,
	611, 0, 0, 612, 613, 614, 671, 1159, 1196, 0,
	616, 615, 617, 674, 0, 618, 0, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 1072, 1607, 0, 1114,
	1086, 1087, 1088, 1084, 1085, 1097, 0, 1067, 0, 0,
	0, 0, 0, 0, 1065, 1066, 273, 275, 274, 276,
	277, 278, 279, 1098, 280, 281, 0, 1096, 0, 0,
	0, 1138, 1102, 0, 0, 0, 282, 283, 1178, 284,
	285, 286, 287, 288, 289, 625, 1151, 0, 290, 1158,
	291, 1157, 0, 1168, 292, 293, 294, 295, 296, 297,
	1104, 1137, 1069, 298, 1198, 1199, 632, 0, 299, 300,
	1144, 0, 1125, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 1179, 323, 324, 325, 1128, 1126, 1127, 1134, 1130,
	1129, 1133, 326, 327, 328, 329, 330, 1161, 331, 1155,
	1154, 1074, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 1146, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 1080, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 1169,
	1170, 362, 1093, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 1153, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 1180, 369, 370, 371, 1166, 1167, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 1176,
	0, 1103, 382, 0, 383, 384, 385, 386, 387, 1139,
	1140, 1143, 466, 1182, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	0, 1181, 398, 1148, 1149, 0, 1109, 0, 400, 401,
	1183, 1141, 1184, 402, 403, 404, 1185, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 1177, 1186, 416, 417, 1187, 0, 418,
	0, 0, 0, 419, 420, 423, 1132, 1131, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1188, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1189, 462, 452, 1071, 272, 1190, 463, 464, 1094, 1142,
	465, 1156, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 1191, 476,
	1192, 1171, 477, 478, 1081, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 1172, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	1152, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	1193, 528, 529, 530, 531, 532, 1082, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 1135, 555,
	556, 538, 539, 557, 558, 1194, 559, 560, 561, 562,
	563, 564, 565, 1150, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 1197, 573, 574, 575, 576,
	1173, 580, 581, 0, 582, 583, 1068, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 1162, 1163, 1164, 1165, 0, 601, 0, 593, 594,
	595, 1174, 596, 1175, 1092, 597, 598, 599, 600, 0,
	602, 603, 0, 1075, 604, 605, 606, 608, 609, 607,
	610, 1136, 611, 0, 0, 612, 613, 614, 671, 1159,
	1196, 0, 616, 615, 617, 674, 0, 618, 0, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 1072, 1519,
	0, 1114, 1086, 1087, 1088, 1084, 1085, 1097, 0, 1067,
	0, 0, 0, 0, 0, 0, 1065, 1066, 273, 275,
	274, 276, 277, 278, 279, 1098, 280, 281, 0, 1096,
	0, 0, 0, 1138, 1102, 0, 0, 0, 282, 283,
	1178, 284, 285, 286, 287, 288, 289, 625, 1151, 0,
	290, 1158, 291, 1157, 0, 1168, 292, 293, 294, 295,
	296, 297, 1104, 1137, 1069, 298, 1198, 1199, 632, 0,
	299, 300, 1144, 0, 1125, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 1179, 323, 324, 325, 1128, 1126, 1127,
	1134, 1130, 1129, 1133, 326, 327, 328, 329, 330, 1161,
	331, 1155, 1154, 1074, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 1146, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	1080, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 1169, 1170, 362, 1093, 270, 0, 0, 0, 0,
	0, 363, 364, 365, 1153, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 1180, 369, 370, 371, 1166, 1167,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 1176, 0, 1103, 382, 0, 383, 384, 385, 386,
	387, 1518, 1140, 1143, 466, 1182, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 271, 395, 396,
	397, 399, 0, 1181, 398, 1148, 1149, 0, 1109, 0,
	400, 401, 1183, 1141, 1184, 402, 403, 404, 1185, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 1177, 1186, 416, 417, 1187,
	0, 418, 0, 0, 0, 419, 420, 423, 1132, 1131,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 1188,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 1189, 462, 452, 1071, 272, 1190, 463, 464,
	1094, 1142, 465, 1156, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	1191, 476, 1192, 1171, 477, 478, 1081, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 1172, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 1152, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 1193, 528, 529, 530, 531, 532, 1082, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	1135, 555, 556, 538, 539, 557, 558, 1194, 559, 560,
	561, 562, 563, 564, 565, 1150, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 1197, 573, 574,
	575, 576, 1173, 580, 581, 0, 582, 583, 1068, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 1162, 1163, 1164, 1165, 0, 601, 0,
	593, 594, 595, 1174, 596, 1175, 1092, 597, 598, 599,
	600, 0, 602, 603, 0, 1075, 604, 605, 606, 608,
	609, 607, 610, 1136, 611, 0, 0, 612, 613, 614,
	671, 1159, 1196, 0, 616, 615, 617, 674, 0, 618,
	0, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	1072, 1513, 0, 1114, 1086, 1087, 1088, 1084, 1085, 1097,
	0, 1067, 0, 0, 0, 0, 0, 0, 1065, 1066,
	273, 275, 274, 276, 277, 278, 279, 1098, 280, 281,
	0, 1096, 0, 0, 0, 1138, 1102, 0, 0, 0,
	282, 283, 1178, 284, 285, 286, 287, 288, 289, 625,
	1151, 0, 290, 1158, 291, 1157, 0, 1168, 292, 293,
	294, 295, 296, 297, 1104, 1137, 1069, 298, 1198, 1199,
	632, 0, 299, 300, 1144, 0, 1125, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 1179, 323, 324, 325, 1128,
	1126, 1127, 1134, 1130, 1129, 1133, 326, 327, 328, 329,
	330, 1161, 331, 1155, 1154, 1074, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	1146, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 1080, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 1169, 1170, 362, 1093, 270, 0, 0,
	0, 0, 0, 363, 364, 365, 1153, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 1180, 369, 370, 371,
	1166, 1167, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 1176, 0, 1103, 382, 0, 383, 384,
	385, 386, 387, 1512, 1140, 1143, 466, 1182, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 271,
	395, 396, 397, 399, 0, 1181, 398, 1148, 1149, 0,
	1109, 0, 400, 401, 1183, 1141, 1184, 402, 403, 404,
	1185, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 1177, 1186, 416,
	417, 1187, 0, 418, 0, 0, 0, 419, 420, 423,
	1132, 1131, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 1188, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 1189, 462, 452, 1071, 272, 1190,
	463, 464, 1094, 1142, 465, 1156, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 1191, 476, 1192, 1171, 477, 478, 1081, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 1172, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 1152, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 1193, 528, 529, 530, 531, 532,
	1082, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 1135, 555, 556, 538, 539, 557, 558, 1194,
	559, 560, 561, 562, 563, 564, 565, 1150, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 1197,
	573, 574, 575, 576, 1173, 580, 581, 0, 582, 583,
	1068, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 1162, 1163, 1164, 1165, 0,
	601, 0, 593, 594, 595, 1174, 596, 1175, 1092, 597,
	598, 599, 600, 0, 602, 603, 0, 1075, 604, 605,
	606, 608, 609, 607, 610, 1136, 611, 0, 0, 612,
	613, 614, 671, 1159, 1196, 0, 616, 615, 617, 674,
	0, 618, 0, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 1072, 1506, 0, 1114, 1086, 1087, 1088, 1084,
	1085, 1097, 0, 1067, 0, 0, 0, 0, 0, 0,
	1065, 1066, 273, 275, 274, 276, 277, 278, 279, 1098,
	280, 281, 0, 1096, 0, 0, 0, 1138, 1102, 0,
	0, 0, 282, 283, 1178, 284, 285, 286, 287, 288,
	289, 625, 1151, 0, 290, 1158, 291, 1157, 0, 1168,
	292, 293, 294, 295, 296, 297, 1104, 1137, 1069, 298,
	1198, 1199, 632, 0, 299, 300, 1144, 0, 1125, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 1179, 323, 324,
	325, 1128, 1126, 1127, 1134, 1130, 1129, 1133, 326, 327,
	328, 329, 330, 1161, 331, 1155, 1154, 1074, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 1146, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 1080, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 1169, 1170, 362, 1093, 270,
	0, 0, 0, 0, 0, 363, 364, 365, 1153, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 1180, 369,
	370, 371, 1166, 1167, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 1176, 0, 1103, 382, 0,
	383, 384, 385, 386, 387, 1139, 1140, 1143, 466, 1182,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 271, 395, 396, 397, 399, 0, 1181, 398, 1148,
	1149, 0, 1109, 0, 400, 401, 1183, 1141, 1184, 402,
	403, 404, 1185, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 1177,
	1186, 416, 417, 1187, 0, 418, 0, 0, 0, 419,
	420, 423, 1132, 1131, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 1188, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 1189, 462, 452, 1071,
	272, 1190, 463, 464, 1094, 1142, 465, 1156, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 1191, 476, 1192, 1171, 477, 478,
	1081, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	1172, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 1152, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 1193, 528, 529, 530,
	531, 532, 1082, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 1135, 555, 556, 538, 539, 557,
	558, 1194, 559, 560, 561, 562, 563, 564, 565, 1150,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 1197, 573, 574, 575, 576, 1173, 580, 581, 0,
	582, 583, 1068, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 1162, 1163, 1164,
	1165, 0, 601, 0, 593, 594, 595, 1174, 596, 1175,
	1092, 597, 598, 599, 600, 0, 602, 603, 0, 1075,
	604, 605, 606, 608, 609, 607, 610, 1136, 611, 0,
	0, 612, 613, 614, 671, 1159, 1196, 0, 616, 615,
	617, 674, 0, 618, 0, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 1072, 1324, 0, 1114, 1086, 1087,
	1088, 1084, 1085, 1097, 0, 1067, 0, 0, 0, 0,
	0, 0, 1065, 1066, 273, 275, 274, 276, 277, 278,
	279, 1098, 280, 281, 0, 1096, 0, 0, 0, 1138,
	1102, 0, 0, 0, 282, 283, 1178, 284, 285, 286,
	287, 288, 289, 625, 1151, 0, 290, 1158, 291, 1157,
	0, 1168, 292, 293, 294, 295, 296, 297, 1104, 1137,
	1069, 298, 1198, 1199, 632, 0, 299, 300, 1144, 0,
	1125, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 1179,
	323, 324, 325, 1128, 1126, 1127, 1134, 1130, 1129, 1133,
	326, 327, 328, 329, 330, 1161, 331, 1155, 1154, 1074,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 1146, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 1080, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 1169, 1170, 362,
	1093, 270, 0, 0, 0, 0, 0, 363, 364, 365,
	1153, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	1180, 369, 370, 371, 1166, 1167, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 1176, 0, 1103,
	382, 0, 383, 384, 385, 386, 387, 1139, 1140, 1143,
	466, 1182, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 271, 395, 396, 397, 399, 0, 1181,
	398, 1148, 1149, 0, 1109, 0, 400, 401, 1183, 1141,
	1184, 402, 403, 404, 1185, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 1177, 1186, 416, 417, 1187, 0, 418, 0, 0,
	0, 419, 420, 423, 1132, 1131, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 1188, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 1189, 462,
	452, 1071, 272, 1190, 463, 464, 1094, 1142, 465, 1156,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 1191, 476, 1192, 1171,
	477, 478, 1081, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 1172, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 1152, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 1193, 528,
	529, 530, 531, 532, 1082, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 1135, 555, 556, 538,
	539, 557, 558, 1194, 559, 560, 561, 562, 563, 564,
	565, 1150, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 1197, 573, 574, 575, 576, 1173, 580,
	581, 0, 582, 583, 1068, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 1162,
	1163, 1164, 1165, 0, 601, 0, 593, 594, 595, 1174,
	596, 1175, 1092, 597, 598, 599, 600, 0, 602, 603,
	0, 1075, 604, 605, 606, 608, 609, 607, 610, 1136,
	611, 0, 0, 612, 613, 614, 671, 1159, 1196, 0,
	616, 615, 617, 674, 0, 618, 0, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 1072, 0, 0, 1114,
	1086, 1087, 1088, 1084, 1085, 1097, 0, 1067, 0, 0,
	0, 0, 0, 0, 1065, 1066, 273, 275, 274, 276,
	277, 278, 279, 1098, 280, 281, 0, 1096, 0, 0,
	0, 1138, 1102, 0, 0, 0, 282, 283, 1178, 284,
	285, 286, 287, 288, 289, 625, 1151, 0, 290, 1158,
	291, 1157, 0, 1168, 292, 293, 294, 295, 296, 297,
	1104, 1137, 1069, 298, 1198, 1199, 632, 0, 299, 300,
	1144, 0, 1125, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 1179, 323, 324, 325, 1128, 1126, 1127, 1134, 1130,
	1129, 1133, 326, 327, 328, 329, 330, 1161, 331, 1155,
	1154, 1074, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 1146, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 1080, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 1169,
	1170, 362, 1093, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 1153, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 1180, 369, 370, 371, 1166, 1167, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 1176,
	0, 1103, 382, 0, 383, 384, 385, 386, 387, 1139,
	1140, 1143, 466, 1182, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	0, 1181, 398, 1148, 1149, 0, 1109, 0, 400, 401,
	1183, 1141, 1184, 402, 403, 404, 1185, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 1177, 1186, 416, 417, 1187, 0, 418,
	0, 0, 0, 419, 420, 423, 1132, 1131, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1188, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1189, 462, 452, 1071, 272, 1190, 463, 464, 1094, 1142,
	465, 1156, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 1191, 476,
	1192, 1171, 477, 478, 1081, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 1172, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	1152, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	1193, 528, 529, 530, 531, 532, 1082, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 1135, 555,
	556, 538, 539, 557, 558, 1194, 559, 560, 561, 562,
	563, 564, 565, 1150, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 1197, 573, 574, 575, 576,
	1173, 580, 581, 0, 582, 583, 1068, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 1162, 1163, 1164, 1165, 0, 601, 0, 593, 594,
	595, 1174, 596, 1175, 1092, 597, 598, 599, 600, 0,
	602, 603, 0, 1075, 604, 605, 606, 608, 609, 607,
	610, 1136, 611, 0, 0, 612, 613, 614, 671, 1159,
	1196, 0, 616, 615, 617, 674, 0, 618, 0, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 1072, 0,
	0, 1114, 1086, 1087, 1088, 1084, 1085, 1097, 0, 1067,
	0, 0, 0, 0, 0, 0, 1065, 1066, 273, 275,
	274, 276, 277, 278, 279, 1098, 280, 281, 0, 1096,
	0, 0, 0, 1138, 1102, 0, 0, 0, 282, 283,
	1178, 284, 285, 286, 287, 288, 289, 625, 1151, 0,
	290, 1158, 291, 1157, 0, 1168, 292, 293, 294, 295,
	296, 297, 1104, 1137, 1069, 298, 1198, 1199, 632, 0,
	299, 300, 1144, 0, 1125, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 1179, 323, 324, 4656, 1128, 1126, 1127,
	1134, 1130, 1129, 1133, 326, 327, 328, 329, 330, 1161,
	331, 1155, 1154, 1074, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 1146, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	1080, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 1169, 1170, 362, 1093, 270, 0, 0, 0, 0,
	0, 363, 364, 365, 1153, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 1180, 369, 370, 371, 1166, 1167,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 1176, 0, 1103, 382, 0, 383, 384, 385, 386,
	387, 1139, 1140, 1143, 466, 1182, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 271, 395, 396,
	397, 399, 0, 1181, 398, 1148, 1149, 0, 1109, 0,
	400, 401, 1183, 1141, 1184, 402, 403, 404, 1185, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 1177, 1186, 416, 417, 1187,
	0, 418, 0, 0, 0, 419, 420, 423, 1132, 1131,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 1188,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 1189, 462, 452, 1071, 272, 1190, 463, 464,
	1094, 1142, 465, 1156, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	1191, 476, 1192, 1171, 477, 478, 1081, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 1172, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 1152, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 1193, 528, 529, 530, 531, 532, 1082, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	1135, 555, 556, 538, 539, 557, 558, 1194, 559, 560,
	561, 562, 563, 564, 565, 1150, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 1197, 573, 574,
	575, 576, 1173, 580, 581, 0, 582, 583, 1068, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 1162, 1163, 1164, 1165, 0, 601, 0,
	593, 594, 595, 1174, 596, 1175, 1092, 597, 598, 599,
	600, 0, 4655, 603, 0, 1075, 604, 605, 606, 608,
	609, 607, 610, 1136, 611, 0, 0, 612, 613, 614,
	671, 1159, 1196, 0, 616, 615, 617, 674, 0, 618,
	0, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	1072, 0, 0, 1114, 1086, 1087, 1088, 1084, 1085, 1097,
	0, 1067, 0, 0, 0, 0, 0, 0, 1065, 1066,
	273, 275, 274, 276, 277, 278, 279, 1098, 280, 281,
	0, 1096, 0, 0, 0, 1138, 1102, 0, 0, 0,
	282, 283, 1178, 284, 285, 286, 287, 288, 289, 4654,
	1151, 0, 290, 1158, 291, 1157, 0, 1168, 292, 293,
	294, 295, 296, 297, 1104, 1137, 1069, 298, 1198, 1199,
	632, 0, 299, 300, 1144, 0, 1125, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 1179, 323, 324, 4656, 1128,
	1126, 1127, 1134, 1130, 1129, 1133, 326, 327, 328, 329,
	330, 1161, 331, 1155, 1154, 1074, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	1146, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 1080, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 1169, 1170, 362, 1093, 270, 0, 0,
	0, 0, 0, 363, 364, 365, 1153, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 1180, 369, 370, 371,
	1166, 1167, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 1176, 0, 1103, 382, 0, 383, 384,
	385, 386, 387, 1139, 1140, 1143, 466, 1182, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 271,
	395, 396, 397, 399, 0, 1181, 398, 1148, 1149, 0,
	1109, 0, 400, 401, 1183, 1141, 1184, 402, 403, 404,
	1185, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 1177, 1186, 416,
	417, 1187, 0, 418, 0, 0, 0, 419, 420, 423,
	1132, 1131, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 1188, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 1189, 462, 452, 1071, 272, 1190,
	463, 464, 1094, 1142, 465, 1156, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 1191, 476, 1192, 1171, 477, 478, 1081, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 1172, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 1152, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 1193, 528, 529, 530, 531, 532,
	1082, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 1135, 555, 556, 538, 539, 557, 558, 1194,
	559, 560, 561, 562, 563, 564, 565, 1150, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 1197,
	573, 574, 575, 576, 1173, 580, 581, 0, 582, 583,
	1068, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 1162, 1163, 1164, 1165, 0,
	601, 0, 593, 594, 595, 1174, 596, 1175, 1092, 597,
	598, 599, 600, 0, 4655, 603, 0, 1075, 604, 605,
	606, 608, 609, 607, 610, 1136, 611, 0, 0, 612,
	613, 614, 671, 1159, 1196, 0, 616, 615, 617, 674,
	0, 618, 0, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 1072, 0, 0, 1114, 1086, 1087, 1088, 1084,
	1085, 1097, 0, 1067, 0, 0, 0, 0, 0, 0,
	1065, 1066, 273, 275, 274, 276, 277, 278, 279, 1098,
	280, 281, 0, 1096, 0, 0, 0, 1138, 1102, 0,
	0, 0, 282, 283, 1178, 284, 285, 286, 287, 288,
	289, 625, 1151, 0, 290, 1158, 291, 1157, 0, 1168,
	292, 293, 294, 295, 296, 297, 1104, 1137, 1069, 298,
	1198, 1199, 632, 0, 299, 300, 1144, 0, 1125, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 1179, 323, 4293,
	325, 1128, 1126, 1127, 1134, 1130, 1129, 1133, 326, 327,
	328, 329, 330, 1161, 331, 1155, 1154, 1074, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 1146, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 1080, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 1169, 1170, 362, 1093, 270,
	0, 0, 0, 0, 0, 363, 364, 365, 1153, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 1180, 369,
	370, 371, 1166, 1167, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 1176, 0, 4294, 382, 0,
	383, 384, 385, 386, 387, 1139, 1140, 1143, 466, 1182,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 271, 395, 396, 397, 399, 0, 1181, 398, 1148,
	1149, 0, 1109, 0, 400, 401, 1183, 1141, 1184, 402,
	403, 404, 1185, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 1177,
	1186, 416, 417, 1187, 0, 418, 0, 0, 0, 419,
	420, 423, 1132, 1131, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 1188, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 1189, 462, 452, 1071,
	272, 1190, 463, 464, 1094, 1142, 465, 1156, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 1191, 476, 1192, 1171, 477, 478,
	1081, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	1172, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 1152, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 1193, 528, 529, 530,
	4292, 532, 1082, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 1135, 555, 556, 538, 539, 557,
	558, 1194, 559, 560, 561, 562, 563, 564, 565, 1150,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 1197, 573, 574, 575, 576, 1173, 580, 581, 0,
	582, 583, 1068, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 1162, 1163, 1164,
	1165, 0, 601, 0, 593, 594, 595, 1174, 596, 1175,
	1092, 597, 598, 599, 600, 0, 602, 603, 0, 1075,
	604, 605, 606, 608, 609, 607, 610, 1136, 611, 0,
	0, 612, 613, 614, 671, 1159, 1196, 0, 616, 615,
	617, 674, 0, 618, 0, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 1072, 0, 0, 1114, 1086, 1087,
	1088, 3140, 3141, 1097, 0, 1067, 0, 0, 0, 0,
	0, 0, 1065, 1066, 273, 275, 274, 276, 277, 278,
	279, 1098, 280, 281, 0, 1096, 0, 0, 0, 1138,
	1102, 0, 0, 0, 282, 283, 1178, 284, 285, 286,
	287, 288, 289, 625, 1151, 0, 290, 1158, 291, 1157,
	0, 1168, 292, 293, 294, 295, 296, 297, 1104, 1137,
	1069, 298, 1198, 1199, 632, 0, 299, 300, 1144, 0,
	1125, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 1179,
	323, 324, 325, 1128, 1126, 1127, 1134, 1130, 1129, 1133,
	326, 327, 328, 329, 330, 1161, 331, 1155, 1154, 1074,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 1146, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 1080, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 1169, 1170, 362,
	1093, 270, 0, 0, 0, 0, 0, 363, 364, 365,
	1153, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	1180, 369, 370, 371, 1166, 1167, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 1176, 0, 1103,
	382, 0, 383, 384, 385, 386, 387, 1139, 1140, 1143,
	466, 1182, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 271, 395, 396, 397, 399, 0, 1181,
	398, 1148, 1149, 0, 1109, 0, 400, 401, 1183, 1141,
	1184, 402, 403, 404, 1185, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 1177, 1186, 416, 417, 1187, 0, 418, 0, 0,
	0, 419, 420, 423, 1132, 1131, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 1188, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 1189, 462,
	452, 1071, 272, 1190, 463, 464, 1094, 1142, 465, 1156,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 1191, 476, 1192, 1171,
	477, 478, 1081, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 1172, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 1152, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 1193, 528,
	529, 530, 531, 532, 1082, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 1135, 555, 556, 538,
	539, 557, 558, 1194, 559, 560, 561, 562, 563, 564,
	565, 1150, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 1197, 573, 574, 575, 576, 1173, 580,
	581, 0, 582, 583, 1068, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 1162,
	1163, 1164, 1165, 0, 601, 0, 593, 594, 595, 1174,
	596, 1175, 1092, 597, 598, 599, 600, 0, 602, 603,
	0, 1075, 604, 605, 606, 608, 609, 607, 610, 1136,
	611, 0, 0, 612, 613, 614, 671, 1159, 1196, 0,
	616, 615, 617, 674, 0, 618, 0, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 1072, 0, 0, 1114,
	1086, 1087, 1088, 3138, 3139, 1097, 0, 1067, 0, 0,
	0, 0, 0, 0, 1065, 1066, 273, 275, 274, 276,
	277, 278, 279, 1098, 280, 281, 0, 1096, 0, 0,
	0, 1138, 1102, 0, 0, 0, 282, 283, 1178, 284,
	285, 286, 287, 288, 289, 625, 1151, 0, 290, 1158,
	291, 1157, 0, 1168, 292, 293, 294, 295, 296, 297,
	1104, 1137, 1069, 298, 1198, 1199, 632, 0, 299, 300,
	1144, 0, 1125, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 1179, 323, 324, 325, 1128, 1126, 1127, 1134, 1130,
	1129, 1133, 326, 327, 328, 329, 330, 1161, 331, 1155,
	1154, 1074, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 1146, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 1080, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 1169,
	1170, 362, 1093, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 1153, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 1180, 369, 370, 371, 1166, 1167, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 1176,
	0, 1103, 382, 0, 383, 384, 385, 386, 387, 1139,
	1140, 1143, 466, 1182, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	0, 1181, 398, 1148, 1149, 0, 1109, 0, 400, 401,
	1183, 1141, 1184, 402, 403, 404, 1185, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 1177, 1186, 416, 417, 1187, 0, 418,
	0, 0, 0, 419, 420, 423, 1132, 1131, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1188, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1189, 462, 452, 1071, 272, 1190, 463, 464, 1094, 1142,
	465, 1156, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 1191, 476,
	1192, 1171, 477, 478, 1081, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 1172, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	1152, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	1193, 528, 529, 530, 531, 532, 1082, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 1135, 555,
	556, 538, 539, 557, 558, 1194, 559, 560, 561, 562,
	563, 564, 565, 1150, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 1197, 573, 574, 575, 576,
	1173, 580, 581, 0, 582, 583, 1068, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 1162, 1163, 1164, 1165, 0, 601, 0, 593, 594,
	595, 1174, 596, 1175, 1092, 597, 598, 599, 600, 0,
	602, 603, 0, 1075, 604, 605, 606, 608, 609, 607,
	610, 1136, 611, 0, 0, 612, 613, 614, 671, 1159,
	1196, 0, 616, 615, 617, 674, 0, 618, 0, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 1072, 0,
	0, 1114, 1086, 1087, 1088, 1084, 1085, 1097, 0, 1067,
	0, 0, 0, 0, 0, 0, 1065, 1066, 273, 275,
	274, 276, 277, 278, 279, 1098, 280, 281, 0, 1096,
	0, 0, 0, 1138, 1102, 0, 0, 0, 282, 283,
	1178, 284, 285, 286, 287, 288, 289, 625, 1151, 0,
	290, 1158, 291, 1157, 0, 1168, 292, 293, 294, 295,
	296, 297, 1104, 1137, 1069, 298, 1198, 1199, 632, 0,
	299, 300, 1144, 0, 1125, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 1179, 323, 324, 325, 1128, 1126, 1127,
	1134, 1130, 1129, 1133, 326, 327, 328, 329, 330, 1161,
	331, 1155, 1154, 1074, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 1146, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	1080, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 1169, 1170, 362, 1093, 270, 0, 0, 0, 0,
	0, 363, 364, 365, 1153, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 1180, 369, 370, 371, 1166, 1167,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 1176, 0, 1103, 382, 0, 383, 384, 385, 386,
	387, 1139, 1140, 1143, 466, 1182, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 271, 395, 396,
	397, 399, 0, 1181, 398, 1148, 1149, 0, 1109, 0,
	400, 401, 1183, 1141, 1184, 402, 403, 404, 1185, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 1177, 1186, 416, 417, 1187,
	0, 418, 0, 0, 0, 419, 420, 423, 1132, 1131,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 1188,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 1189, 462, 452, 1071, 272, 1190, 463, 464,
	1094, 1142, 465, 1156, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	1191, 476, 1192, 1171, 477, 478, 1081, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 1172, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 1152, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 1193, 528, 529, 530, 531, 532, 1082, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	1135, 555, 556, 538, 539, 557, 558, 1194, 559, 560,
	561, 562, 563, 564, 565, 1150, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 1197, 573, 574,
	575, 576, 1173, 580, 581, 0, 582, 583, 1068, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 1162, 1163, 1164, 1165, 0, 601, 0,
	593, 594, 595, 1174, 596, 1175, 1092, 597, 598, 599,
	600, 0, 602, 603, 0, 1075, 604, 605, 606, 608,
	609, 607, 610, 1136, 611, 0, 0, 612, 613, 614,
	671, 1159, 1196, 0, 616, 615, 617, 674, 0, 618,
	0, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	1072, 0, 0, 1114, 1086, 1087, 1088, 1084, 1085, 1097,
	0, 1067, 0, 0, 0, 0, 0, 0, 2414, 2415,
	273, 275, 274, 276, 277, 278, 279, 1098, 280, 281,
	0, 1096, 0, 0, 0, 1138, 1102, 0, 0, 0,
	282, 283, 1178, 284, 285, 286, 287, 288, 289, 625,
	1151, 0, 290, 1158, 291, 1157, 0, 1168, 292, 293,
	294, 295, 296, 297, 1104, 1137, 0, 298, 1198, 1199,
	632, 0, 299, 300, 1144, 0, 1125, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 1179, 323, 324, 325, 1128,
	1126, 1127, 1134, 1130, 1129, 1133, 326, 327, 328, 329,
	330, 1161, 331, 1155, 1154, 0, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	1146, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 1080, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 1169, 1170, 362, 1093, 270, 0, 0,
	0, 0, 0, 363, 364, 365, 1153, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 1180, 369, 370, 371,
	1166, 1167, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 1176, 0, 1103, 382, 0, 383, 384,
	385, 386, 387, 1139, 1140, 1143, 466, 1182, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 271,
	395, 396, 397, 399, 0, 1181, 398, 1148, 1149, 0,
	1109, 0, 400, 401, 1183, 1141, 1184, 402, 403, 404,
	1185, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 1177, 1186, 416,
	417, 1187, 0, 418, 0, 0, 0, 419, 420, 423,
	1132, 1131, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 1188, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 1189, 462, 452, 0, 272, 1190,
	463, 464, 1094, 1142, 465, 1156, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 1191, 476, 1192, 1171, 477, 478, 1081, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 1172, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 1152, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 1193, 528, 529, 530, 531, 532,
	1082, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 1135, 555, 556, 538, 539, 557, 558, 1194,
	559, 560, 561, 562, 563, 564, 565, 1150, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 1197,
	573, 574, 575, 576, 1173, 580, 581, 0, 582, 583,
	0, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 1162, 1163, 1164, 1165, 0,
	601, 0, 593, 594, 595, 1174, 596, 1175, 1092, 597,
	598, 599, 600, 0, 602, 603, 0, 0, 604, 605,
	606, 608, 609, 607, 610, 1136, 611, 0, 0, 612,
	613, 614, 671, 1159, 1196, 0, 616, 615, 617, 674,
	0, 618, 0, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 0, 0, 0, 1114, 1086, 1087, 1088, 1084,
	1085, 1097, 0, 2671, 0, 0, 0, 0, 0, 0,
	2669, 2670, 273, 275, 274, 276, 277, 278, 279, 1098,
	280, 281, 0, 1096, 0, 0, 0, 1138, 1102, 0,
	0, 0, 282, 283, 1178, 284, 285, 286, 287, 288,
	289, 625, 1151, 0, 290, 1158, 291, 1157, 0, 1168,
	292, 293, 294, 295, 296, 297, 1104, 1137, 0, 298,
	1198, 1199, 632, 0, 299, 300, 1144, 0, 1125, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 1179, 323, 324,
	325, 1128, 1126, 1127, 1134, 1130, 1129, 1133, 326, 327,
	328, 329, 330, 1161, 331, 1155, 1154, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 1146, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 1080, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 1169, 1170, 362, 1093, 270,
	0, 0, 0, 0, 0, 363, 364, 365, 1153, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 1180, 369,
	370, 371, 1166, 1167, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 1176, 0, 1103, 382, 0,
	383, 384, 385, 386, 387, 1139, 1140, 1143, 466, 1182,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 271, 395, 396, 397, 399, 0, 1181, 398, 1148,
	1149, 0, 1109, 0, 400, 401, 1183, 1141, 1184, 402,
	403, 404, 1185, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 1177,
	1186, 416, 417, 1187, 0, 418, 0, 0, 0, 419,
	420, 423, 1132, 1131, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 1188, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 1189, 462, 452, 0,
	272, 1190, 463, 464, 1094, 1142, 465, 1156, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 1191, 476, 1192, 1171, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	1172, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 1152, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 1193, 528, 529, 530,
	531, 532, 3133, 3134, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 1135, 555, 556, 538, 539, 557,
	558, 1194, 559, 560, 561, 562, 563, 564, 565, 1150,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 1197, 573, 574, 575, 576, 1173, 580, 581, 0,
	582, 583, 0, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 1162, 1163, 1164,
	1165, 0, 601, 0, 593, 594, 595, 1174, 596, 1175,
	1092, 597, 598, 599, 600, 0, 602, 603, 0, 0,
	604, 605, 606, 608, 609, 607, 610, 1136, 611, 0,
	0, 612, 613, 614, 671, 1159, 1196, 0, 616, 615,
	617, 674, 0, 618, 0, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 0, 0, 0, 1114, 1086, 1087,
	1088, 1084, 1085, 1097, 0, 0, 0, 0, 0, 0,
	0, 0, 2101, 2102, 273, 275, 274, 276, 277, 278,
	279, 1098, 280, 281, 0, 1096, 0, 0, 0, 1138,
	1102, 0, 0, 0, 282, 283, 1178, 284, 285, 286,
	287, 288, 289, 0, 1151, 0, 290, 1158, 291, 1157,
	0, 1168, 292, 293, 294, 295, 296, 297, 1104, 1137,
	1069, 298, 1198, 1199, 632, 0, 299, 300, 1144, 0,
	1125, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 1179,
	323, 324, 4656, 1128, 1126, 1127, 1134, 1130, 1129, 1133,
	326, 327, 328, 329, 330, 1161, 331, 1155, 1154, 1074,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 1146, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 1080, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 1169, 1170, 362,
	1093, 270, 0, 0, 0, 0, 0, 363, 364, 365,
	1153, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	1180, 369, 370, 371, 1166, 1167, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 1176, 0, 1103,
	382, 0, 383, 384, 385, 386, 387, 1139, 1140, 1143,
	466, 0, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 271, 395, 396, 397, 399, 0, 1181,
	398, 1148, 1149, 0, 1109, 0, 400, 401, 0, 1141,
	0, 402, 403, 404, 1185, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 1177, 1186, 416, 417, 0, 0, 418, 0, 0,
	0, 419, 420, 423, 1132, 1131, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 1188, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 1189, 462,
	452, 1071, 272, 0, 463, 464, 1094, 1142, 465, 1156,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 1191, 476, 1192, 1171,
	477, 478, 1081, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 1172, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 1152, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 1193, 528,
	529, 530, 531, 532, 1082, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 1135, 555, 556, 538,
	539, 557, 558, 0, 559, 560, 561, 562, 563, 564,
	565, 1150, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 1197, 573, 574, 575, 576, 1173, 580,
	581, 0, 582, 583, 1068, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 1162,
	1163, 1164, 1165, 0, 601, 0, 593, 594, 595, 1174,
	596, 1175, 1092, 597, 598, 599, 600, 0, 4655, 603,
	0, 1075, 604, 605, 606, 608, 609, 607, 610, 1136,
	611, 0, 0, 612, 613, 614, 671, 1159, 1196, 0,
	616, 615, 617, 674, 0, 618, 0, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 0, 1058, 0, 1236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1065, 1066, 273, 275, 274, 276,
	277, 278, 279, 1098, 280, 281, 0, 1096, 0, 0,
	0, 1138, 0, 0, 0, 0, 282, 283, 1178, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 1137, 0, 298, 630, 631, 632, 0, 299, 300,
	1144, 0, 1125, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 1179, 323, 324, 325, 1128, 1126, 1127, 1134, 1130,
	1129, 1133, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 1169,
	1170, 362, 0, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 1180, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 1176,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 1139,
	1140, 1143, 466, 1182, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	0, 1181, 398, 647, 648, 0, 649, 0, 400, 401,
	1183, 1141, 1184, 402, 403, 404, 1185, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 1222, 412, 414,
	413, 0, 415, 1177, 1186, 416, 417, 1187, 0, 418,
	0, 0, 0, 419, 420, 423, 1132, 1131, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1188, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1189, 462, 452, 0, 272, 1190, 463, 464, 0, 1142,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 1228,
	471, 472, 473, 0, 0, 474, 475, 654, 1191, 476,
	1192, 1171, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 1172, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	1193, 528, 529, 530, 531, 532, 661, 1230, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 232, 550, 551, 549, 552, 553, 554, 1135, 555,
	556, 538, 539, 557, 558, 1194, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	1173, 580, 581, 0, 582, 583, 0, 579, 570, 234,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 665, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 1174, 596, 1175, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 1136, 611, 0, 0, 612, 613, 614, 1596, 672,
	673, 0, 616, 615, 617, 674, 0, 618, 0, 1236,
	0, 226, 619, 620, 675, 621, 622, 623, 0, 0,
	227, 0, 0, 0, 0, 0, 273, 275, 274, 276,
	277, 278, 279, 0, 280, 281, 0, 0, 0, 0,
	0, 1138, 0, 1226, 0, 1942, 282, 283, 1178, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 1137, 0, 298, 630, 631, 632, 0, 299, 300,
	1144, 0, 1125, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 1179, 323, 324, 325, 1128, 1126, 1127, 1134, 1130,
	1129, 1133, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 1169,
	1170, 362, 0, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 1180, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 1176,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 1139,
	1140, 1143, 466, 1182, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	0, 1181, 398, 647, 648, 0, 649, 0, 400, 401,
	1183, 1141, 1184, 402, 403, 404, 1185, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 1222, 412, 414,
	413, 0, 415, 1177, 1186, 416, 417, 1187, 0, 418,
	0, 0, 0, 419, 420, 423, 1132, 1131, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1188, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1189, 462, 452, 0, 272, 1190, 463, 464, 0, 1142,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 1228,
	471, 472, 473, 0, 0, 474, 475, 654, 1191, 476,
	1192, 1171, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 1172, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	1193, 528, 529, 530, 531, 532, 661, 1230, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 232, 550, 551, 549, 552, 553, 554, 1135, 555,
	556, 538, 539, 557, 558, 1194, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	1173, 580, 581, 0, 582, 583, 0, 579, 570, 234,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 665, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 1174, 596, 1175, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 1136, 611, 0, 0, 612, 613, 614, 1596, 672,
	673, 0, 616, 615, 617, 674, 0, 618, 3297, 0,
	1236, 226, 619, 620, 675, 621, 622, 623, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 1138, 1226, 0, 1942, 0, 282, 283, 1178,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 1137, 0, 298, 630, 631, 632, 0, 299,
	300, 1144, 0, 1125, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 1179, 323, 324, 325, 1128, 1126, 1127, 1134,
	1130, 1129, 1133, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	1169, 1170, 362, 0, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 1180, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	1176, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	1139, 1140, 1143, 466, 1182, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 271, 395, 396, 397,
	399, 0, 1181, 398, 647, 648, 0, 649, 0, 400,
	401, 1183, 1141, 1184, 402, 403, 404, 1185, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 1222, 412,
	414, 413, 0, 415, 1177, 1186, 416, 417, 1187, 0,
	418, 0, 0, 0, 419, 420, 423, 1132, 1131, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 1188, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 1189, 462, 452, 0, 272, 1190, 463, 464, 0,
	1142, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	1228, 471, 472, 473, 0, 0, 474, 475, 654, 1191,
	476, 1192, 1171, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 1172, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 1193, 528, 529, 530, 531, 532, 661, 1230, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 1135,
	555, 556, 538, 539, 557, 558, 1194, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 1173, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 1174, 596, 1175, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 1136, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 0, 616, 615, 617, 674, 0, 618, 1218,
	0, 1236, 0, 619, 620, 675, 621, 622, 623, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	0, 0, 0, 1138, 1226, 0, 1224, 0, 282, 283,
	1178, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 1137, 0, 298, 630, 631, 632, 0,
	299, 300, 1144, 0, 1125, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 1179, 323, 324, 325, 1128, 1126, 1127,
	1134, 1130, 1129, 1133, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 1169, 1170, 362, 0, 270, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 1180, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 1176, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 1139, 1140, 1143, 466, 1182, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 271, 395, 396,
	397, 399, 0, 1181, 398, 647, 648, 0, 649, 0,
	400, 401, 1183, 1141, 1184, 402, 403, 404, 1185, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 1222,
	412, 414, 413, 0, 415, 1177, 1186, 416, 417, 1187,
	0, 418, 0, 0, 0, 419, 420, 423, 1132, 1131,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 1188,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 1189, 462, 452, 0, 272, 1190, 463, 464,
	0, 1142, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 1228, 471, 472, 473, 0, 0, 474, 475, 654,
	1191, 476, 1192, 1171, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 1172, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 1193, 528, 529, 530, 531, 532, 661, 1230,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	1135, 555, 556, 538, 539, 557, 558, 1194, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 1173, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 1174, 596, 1175, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 1136, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 0, 616, 615, 617, 674, 0, 618,
	0, 1236, 0, 0, 619, 620, 675, 621, 622, 623,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	0, 0, 0, 1138, 0, 1226, 0, 1224, 282, 283,
	1178, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 1137, 0, 298, 630, 631, 632, 0,
	299, 300, 1144, 0, 1125, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 1179, 323, 324, 325, 1128, 1126, 1127,
	1134, 1130, 1129, 1133, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 1169, 1170, 362, 0, 270, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 1180, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 1176, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 1139, 1140, 1143, 466, 1182, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 271, 395, 396,
	397, 399, 0, 1181, 398, 647, 648, 0, 649, 0,
	400, 401, 1183, 1141, 1184, 402, 403, 404, 1185, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 1222,
	412, 414, 413, 0, 415, 1177, 1186, 416, 417, 1187,
	0, 418, 0, 0, 0, 419, 420, 423, 1132, 1131,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 1188,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 1189, 462, 452, 0, 272, 1190, 463, 464,
	0, 1142, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 1228, 471, 472, 473, 0, 0, 474, 475, 654,
	1191, 476, 1192, 1171, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 1172, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 1193, 528, 529, 530, 531, 532, 661, 1230,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	1135, 555, 556, 538, 539, 557, 558, 1194, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 1173, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 1174, 596, 1175, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 1136, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 0, 616, 615, 617, 674, 0, 618,
	0, 1236, 0, 0, 619, 620, 675, 621, 622, 623,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	0, 0, 0, 1138, 0, 1226, 0, 1224, 282, 283,
	1178, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 1137, 0, 298, 630, 631, 632, 0,
	299, 300, 1144, 0, 1125, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 1179, 323, 324, 325, 1128, 1126, 1127,
	1134, 1130, 1129, 1133, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 1169, 1170, 362, 0, 270, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 1180, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 1176, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 1139, 1140, 1143, 466, 1182, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 271, 395, 396,
	397, 399, 0, 1181, 398, 647, 648, 0, 649, 0,
	400, 401, 1183, 1141, 1184, 402, 403, 404, 1185, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 1177, 1186, 416, 417, 1187,
	0, 418, 0, 0, 0, 419, 420, 423, 1132, 1131,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 1188,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 1189, 462, 452, 0, 272, 1190, 463, 464,
	0, 1142, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	1191, 476, 1192, 1171, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 1172, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 1193, 528, 529, 530, 531, 532, 661, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	1135, 555, 556, 538, 539, 557, 558, 1194, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 1173, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 1174, 596, 1175, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 1136, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 0, 616, 615, 617, 674, 0, 618,
	0, 1236, 0, 0, 619, 620, 675, 621, 622, 623,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	0, 0, 0, 1138, 0, 0, 0, 4119, 282, 283,
	1178, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 1137, 0, 298, 630, 631, 632, 0,
	299, 300, 1144, 0, 1125, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 1179, 323, 324, 325, 1128, 1126, 1127,
	1134, 1130, 1129, 1133, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 1169, 1170, 362, 0, 270, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 1180, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 1176, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 1139, 1140, 1143, 466, 1182, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 271, 395, 396,
	397, 399, 0, 1181, 398, 647, 648, 0, 649, 0,
	400, 401, 1183, 1141, 1184, 402, 403, 404, 1185, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 1177, 1186, 416, 417, 1187,
	0, 418, 0, 0, 0, 419, 420, 423, 1132, 1131,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 1188,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 1189, 462, 452, 0, 272, 1190, 463, 464,
	0, 1142, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	1191, 476, 1192, 1171, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 1172, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 1193, 528, 529, 530, 531, 532, 661, 1230,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	1135, 555, 556, 538, 539, 557, 558, 1194, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 1173, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 1174, 596, 1175, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 1136, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 0, 616, 615, 617, 674, 0, 618,
	0, 267, 0, 0, 619, 620, 675, 621, 622, 623,
	0, 2518, 2519, 2520, 2537, 2538, 2539, 0, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	0, 2540, 0, 624, 0, 0, 0, 1840, 282, 283,
	0, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 1825, 298, 630, 631, 632, 0,
	299, 300, 633, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 307, 2530, 0, 309, 310, 311, 308, 312,
	0, 313, 2526, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 0, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 0, 0, 2531, 2532, 2533,
	2534, 363, 364, 365, 639, 0, 0, 2525, 366, 0,
	367, 368, 0, 0, 0, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 644, 645, 646, 466, 0, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 0, 395, 396,
	397, 399, 0, 0, 398, 647, 648, 0, 649, 0,
	400, 401, 0, 650, 0, 402, 403, 404, 0, 405,
	0, 2535, 2536, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 0, 416, 417, 0,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 2528, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 0,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 0, 462, 452, 0, 0, 0, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	0, 476, 0, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 0, 528, 529, 530, 531, 532, 661, 533,
	2529, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	0, 555, 556, 538, 539, 557, 558, 0, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 1824, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 669, 596, 670, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 0, 616, 615, 617, 674, 0, 618,
	0, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	0, 0, 0, 0, 0, 1058, 0, 1317, 2515, 2516,
	2517, 2541, 2527, 2521, 0, 2523, 2524, 2522, 2509, 2510,
	2511, 2512, 2513, 2514, 273, 275, 274, 276, 277, 278,
	279, 0, 280, 281, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 282, 283, 1178, 284, 285, 286,
	287, 288, 289, 625, 626, 0, 290, 627, 291, 628,
	0, 629, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 298, 630, 631, 632, 0, 299, 300, 633, 0,
	1322, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 1179,
	323, 324, 325, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 329, 330, 0, 331, 634, 635, 0,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 342, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 636, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 637, 638, 362,
	0, 270, 0, 0, 0, 0, 0, 363, 364, 365,
	639, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	1180, 369, 370, 371, 640, 641, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 642, 0, 643,
	382, 0, 383, 384, 385, 386, 387, 644, 645, 646,
	466, 1182, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 0, 395, 396, 397, 399, 0, 1181,
	398, 647, 648, 0, 649, 0, 400, 401, 1183, 650,
	1184, 402, 403, 404, 1185, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 651, 1186, 416, 417, 1187, 0, 418, 0, 0,
	0, 419, 420, 423, 0, 0, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 1188, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 1189, 462,
	452, 0, 0, 1190, 463, 464, 0, 652, 465, 653,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 1191, 476, 1192, 655,
	477, 478, 470, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 658, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 660, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 1193, 528,
	529, 530, 531, 532, 661, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 232,
	550, 551, 549, 552, 553, 554, 0, 555, 556, 538,
	539, 557, 558, 1194, 559, 560, 561, 562, 563, 564,
	565, 662, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 663, 573, 574, 575, 576, 664, 580,
	581, 0, 582, 583, 0, 579, 570, 234, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 665,
	666, 667, 668, 0, 601, 0, 593, 594, 595, 669,
	596, 670, 0, 597, 598, 599, 600, 0, 602, 603,
	0, 0, 604, 605, 606, 608, 609, 607, 610, 0,
	611, 0, 0, 612, 613, 614, 1596, 672, 673, 0,
	616, 615, 617, 674, 0, 618, 1593, 0, 1317, 226,
	619, 620, 675, 621, 622, 623, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 188, 0, 282, 283, 1178, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 1322, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	1179, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 1180, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 644, 645,
	646, 466, 1182, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 0, 395, 396, 397, 399, 0,
	1181, 398, 647, 648, 0, 649, 0, 400, 401, 1183,
	650, 1184, 402, 403, 404, 1185, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 1186, 416, 417, 1187, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 1188, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 1189,
	462, 452, 0, 0, 1190, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 1191, 476, 1192,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 1193,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	232, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 1194, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 234, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 1596, 672, 673,
	0, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	226, 619, 620, 675, 621, 622, 623, 1317, 1316, 227,
	0, 0, 0, 1314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 275, 274, 276, 277, 278,
	279, 0, 280, 281, 188, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 282, 283, 1178, 284, 285, 286,
	287, 288, 289, 625, 626, 0, 290, 627, 291, 628,
	0, 629, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 298, 630, 631, 632, 0, 299, 300, 633, 0,
	1322, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 1179,
	323, 324, 325, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 329, 330, 0, 331, 634, 635, 0,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 342, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 636, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 637, 638, 362,
	0, 270, 0, 0, 0, 0, 0, 363, 364, 365,
	639, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	1180, 369, 370, 371, 640, 641, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 642, 0, 643,
	382, 0, 383, 384, 385, 386, 387, 644, 645, 646,
	466, 1182, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 0, 395, 396, 397, 399, 0, 1181,
	398, 647, 648, 0, 649, 0, 400, 401, 1183, 650,
	1184, 402, 403, 404, 1185, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 651, 1186, 416, 417, 1187, 0, 418, 0, 0,
	0, 419, 420, 423, 0, 0, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 1188, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 1189, 462,
	452, 0, 0, 1190, 463, 464, 0, 652, 465, 653,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 1191, 476, 1192, 655,
	477, 478, 470, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 658, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 660, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 1193, 528,
	529, 530, 531, 532, 661, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 0, 555, 556, 538,
	539, 557, 558, 1194, 559, 560, 561, 562, 563, 564,
	565, 662, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 663, 573, 574, 575, 576, 664, 580,
	581, 0, 582, 583, 0, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 665,
	666, 667, 668, 0, 601, 0, 593, 594, 595, 669,
	596, 670, 0, 597, 598, 599, 600, 0, 602, 603,
	0, 0, 604, 605, 606, 608, 609, 607, 610, 0,
	611, 0, 0, 612, 613, 614, 671, 672, 673, 0,
	616, 615, 617, 674, 0, 618, 0, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 1317, 1316, 0, 0,
	0, 0, 1314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 1618, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 282, 283, 1178, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 1322,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 1179, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 329, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 1180,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 644, 645, 646, 466,
	1182, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 0, 395, 396, 397, 399, 0, 1181, 398,
	647, 648, 0, 649, 0, 400, 401, 1183, 650, 1184,
	402, 403, 404, 1185, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 1186, 416, 417, 1187, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 1188, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 1189, 462, 452,
	0, 0, 1190, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 1191, 476, 1192, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 1193, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 1194, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 0, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 1317, 1316, 0, 0, 0,
	0, 1314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 275, 274, 276, 277, 278, 279, 0,
	280, 281, 3595, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 282, 283, 1178, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 0, 629,
	292, 293, 294, 295, 296, 297, 0, 0, 0, 298,
	630, 631, 632, 0, 299, 300, 633, 0, 1322, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 1179, 323, 324,
	325, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 342, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 0, 270,
	0, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 1180, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 642, 0, 643, 382, 0,
	383, 384, 385, 386, 387, 644, 645, 646, 466, 1182,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 0, 395, 396, 397, 399, 0, 1181, 398, 647,
	648, 0, 649, 0, 400, 401, 1183, 650, 1184, 402,
	403, 404, 1185, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 651,
	1186, 416, 417, 1187, 0, 418, 0, 0, 0, 419,
	420, 423, 0, 0, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 1188, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 1189, 462, 452, 0,
	0, 1190, 463, 464, 0, 652, 465, 653, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 1191, 476, 1192, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 2291, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 1193, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 0, 555, 556, 538, 539, 557,
	558, 1194, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 0,
	582, 583, 0, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 665, 666, 667,
	668, 0, 601, 0, 593, 594, 595, 669, 596, 670,
	0, 597, 598, 599, 600, 0, 602, 603, 0, 0,
	604, 605, 606, 608, 609, 607, 610, 0, 611, 0,
	0, 612, 613, 614, 671, 672, 673, 0, 616, 615,
	617, 674, 0, 618, 0, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 1317, 2205, 0, 0, 0, 0,
	2206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 1618, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 1178, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 1322, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 1179, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 1180, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 644, 645, 646, 466, 1182, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	0, 395, 396, 397, 399, 0, 1181, 398, 647, 648,
	0, 649, 0, 400, 401, 1183, 650, 1184, 402, 403,
	404, 1185, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 2204, 414, 413, 0, 415, 651, 1186,
	416, 417, 1187, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1188, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1189, 462, 452, 0, 0,
	1190, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 1191, 476, 1192, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 1193, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	1194, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 0, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 1317, 1316, 0, 0, 0, 0, 1314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 275, 274, 276, 277, 278, 279, 0, 280, 281,
	1618, 0, 0, 0, 0, 624, 0, 0, 0, 0,
	282, 283, 1178, 284, 285, 286, 287, 288, 289, 625,
	626, 0, 290, 627, 291, 628, 0, 629, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 298, 630, 631,
	632, 0, 299, 300, 633, 0, 1322, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 1179, 323, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 0, 331, 634, 635, 0, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	342, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 636, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 637, 638, 362, 0, 270, 0, 0,
	0, 0, 0, 363, 364, 365, 639, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 1180, 369, 370, 371,
	640, 641, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 642, 0, 643, 382, 0, 383, 384,
	385, 386, 387, 644, 645, 646, 466, 1182, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 0,
	395, 396, 397, 399, 0, 1181, 398, 647, 648, 0,
	649, 0, 400, 401, 1183, 650, 1184, 402, 403, 404,
	1185, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 651, 1186, 416,
	417, 1187, 0, 418, 0, 0, 0, 419, 420, 423,
	0, 0, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 1188, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 1189, 462, 452, 0, 0, 1190,
	463, 464, 0, 652, 465, 653, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 1191, 476, 1192, 655, 477, 478, 470, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 658, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 660, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 1193, 528, 529, 530, 531, 532,
	661, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 0, 555, 556, 538, 539, 557, 558, 1194,
	559, 560, 561, 562, 563, 564, 565, 662, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 663,
	573, 574, 575, 576, 664, 580, 581, 0, 582, 583,
	0, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 665, 666, 667, 668, 0,
	601, 0, 593, 594, 595, 669, 596, 670, 0, 597,
	598, 599, 600, 0, 602, 603, 0, 0, 604, 605,
	606, 608, 609, 607, 610, 0, 611, 0, 0, 612,
	613, 614, 671, 672, 673, 0, 616, 615, 617, 674,
	0, 618, 1058, 0, 267, 0, 619, 620, 675, 621,
	622, 623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 1602,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 0, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 644, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	0, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 0,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 232, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 234, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 1596, 672, 673, 0, 616, 615, 617,
	674, 0, 618, 0, 1236, 0, 226, 619, 620, 675,
	621, 622, 623, 0, 0, 227, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 1138, 0, 0, 0,
	188, 282, 283, 1178, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 1137, 0, 298, 630,
	631, 632, 0, 299, 300, 1144, 0, 1125, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 1179, 323, 324, 325,
	1128, 1126, 1127, 1134, 1130, 1129, 1133, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 1169, 1170, 362, 0, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 1180, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 1176, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 1139, 1140, 1143, 466, 1182, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 0, 1181, 398, 647, 648,
	0, 649, 0, 400, 401, 1183, 1141, 1184, 402, 403,
	404, 1185, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 1177, 1186,
	416, 417, 1187, 0, 418, 0, 0, 0, 419, 420,
	423, 1132, 1131, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1188, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1189, 462, 452, 0, 272,
	1190, 463, 464, 0, 1142, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 1191, 476, 1192, 1171, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 1172,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 1193, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 1135, 555, 556, 538, 539, 557, 558,
	1194, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 1173, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 1174, 596, 1175, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 1136, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 267, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 282, 283, 0, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 0, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 329, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 0,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 644, 645, 646, 466,
	0, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 0, 0, 398,
	647, 648, 0, 649, 0, 400, 401, 0, 650, 0,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 0, 416, 417, 0, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 0, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 0, 462, 452,
	0, 272, 0, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 0, 476, 0, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 0, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 0, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 0, 616,
	615, 617, 674, 0, 618, 0, 267, 3043, 0, 619,
	620, 675, 621, 622, 623, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 1956, 282, 283, 0, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 0, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 329, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	0, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 0,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 644, 645, 646, 466,
	0, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 0, 395, 396, 397, 399, 0, 0, 398,
	647, 648, 0, 649, 0, 400, 401, 0, 650, 0,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 0, 416, 417, 0, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 0, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 0, 462, 452,
	0, 0, 0, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 0, 476, 0, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 0, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 0, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 0, 616,
	615, 617, 674, 267, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 0, 0, 0, 0, 0,
	273, 275, 274, 276, 277, 278, 279, 0, 280, 281,
	0, 0, 0, 0, 0, 624, 0, 0, 0, 0,
	282, 283, 4821, 284, 285, 286, 287, 288, 289, 625,
	626, 0, 290, 627, 291, 628, 0, 629, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 298, 630, 631,
	632, 0, 299, 300, 633, 0, 0, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 0, 323, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 0, 331, 634, 635, 0, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	342, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 636, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 637, 638, 362, 0, 270, 0, 0,
	0, 0, 0, 363, 364, 365, 639, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 0, 369, 370, 371,
	640, 641, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 642, 0, 643, 382, 0, 383, 384,
	385, 386, 387, 644, 645, 646, 466, 0, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 271,
	395, 396, 397, 399, 0, 0, 398, 647, 648, 0,
	649, 0, 400, 401, 0, 650, 0, 402, 403, 404,
	0, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 651, 0, 416,
	417, 0, 0, 418, 0, 0, 0, 419, 420, 423,
	0, 0, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 0, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 0, 462, 452, 0, 272, 0,
	463, 464, 0, 652, 465, 653, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 0, 476, 0, 655, 477, 478, 470, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 658, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 660, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 0, 528, 529, 530, 531, 532,
	661, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 0, 555, 556, 538, 539, 557, 558, 0,
	559, 560, 561, 562, 563, 564, 565, 662, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 663,
	573, 574, 575, 576, 664, 580, 581, 0, 582, 583,
	0, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 665, 666, 667, 668, 0,
	601, 0, 593, 594, 595, 669, 596, 670, 0, 597,
	598, 599, 600, 0, 602, 603, 0, 0, 604, 605,
	606, 608, 609, 607, 610, 0, 611, 0, 0, 612,
	613, 614, 671, 672, 673, 0, 616, 615, 617, 674,
	0, 618, 267, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 0, 0, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 3545, 0, 282,
	283, 0, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 644, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 272, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 0, 616, 615, 617, 674, 0,
	618, 267, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 0, 0, 0, 0, 0, 0, 0, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	0, 0, 0, 624, 0, 0, 1590, 0, 282, 283,
	0, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 298, 630, 631, 632, 0,
	299, 300, 633, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 0, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 0, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 0, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 644, 645, 646, 466, 0, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 0, 395, 396,
	397, 399, 0, 0, 398, 647, 648, 0, 649, 0,
	400, 401, 0, 650, 0, 402, 403, 404, 0, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 0, 416, 417, 0,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 0,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 0, 462, 452, 0, 0, 0, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	0, 476, 0, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 0, 528, 529, 530, 531, 532, 661, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	0, 555, 556, 538, 539, 557, 558, 0, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 669, 596, 670, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 0, 616, 615, 617, 674, 267, 618,
	0, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 3031, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	0, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 0, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 0, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 644, 645,
	646, 466, 0, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 0, 395, 396, 397, 399, 0,
	0, 398, 647, 648, 0, 649, 0, 400, 401, 0,
	650, 0, 402, 403, 404, 0, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 0, 416, 417, 0, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 0, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 0,
	462, 452, 0, 0, 0, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 0, 476, 0,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 0,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 0, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	0, 616, 615, 617, 674, 267, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 0, 0, 0,
	0, 0, 273, 275, 274, 276, 277, 278, 279, 0,
	280, 281, 0, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 282, 283, 3704, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 0, 629,
	292, 293, 294, 295, 296, 297, 0, 0, 0, 298,
	630, 631, 632, 0, 299, 300, 633, 0, 0, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 0, 323, 324,
	325, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 342, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 0, 0,
	0, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 0, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 642, 0, 643, 382, 0,
	383, 384, 385, 386, 387, 644, 645, 646, 466, 0,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 0, 395, 396, 397, 399, 0, 0, 398, 647,
	648, 0, 649, 0, 400, 401, 0, 650, 0, 402,
	403, 404, 0, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 651,
	0, 416, 417, 0, 0, 418, 0, 0, 0, 419,
	420, 423, 0, 0, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 0, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 0, 462, 452, 0,
	0, 0, 463, 464, 0, 652, 465, 653, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 0, 476, 0, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 0, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 0, 555, 556, 538, 539, 557,
	558, 0, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 0,
	582, 583, 0, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 665, 666, 667,
	668, 0, 601, 0, 593, 594, 595, 669, 596, 670,
	0, 597, 598, 599, 600, 0, 602, 603, 0, 0,
	604, 605, 606, 608, 609, 607, 610, 0, 611, 0,
	0, 612, 613, 614, 671, 672, 673, 0, 616, 615,
	617, 674, 0, 618, 896, 0, 801, 0, 619, 620,
	675, 621, 622, 623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	0, 2282, 0, 282, 283, 0, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 0, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 808, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 894, 0,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 644, 645, 646, 466,
	0, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 0, 0, 398,
	647, 648, 0, 649, 0, 400, 401, 0, 650, 0,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 0, 416, 417, 0, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 0, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 0, 462, 452,
	0, 272, 0, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 0, 476, 0, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 0, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 0, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 806, 584, 585, 586,
	587, 588, 807, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 0, 616,
	615, 617, 674, 0, 618, 801, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 0, 0, 0, 0, 0,
	0, 0, 273, 275, 274, 276, 277, 278, 279, 2023,
	280, 281, 0, 0, 0, 811, 0, 624, 0, 0,
	0, 0, 282, 283, 0, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 0, 629,
	292, 293, 294, 295, 296, 297, 0, 0, 0, 298,
	630, 631, 632, 0, 299, 300, 633, 0, 0, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 0, 323, 324,
	325, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 808, 330, 0, 331, 634, 635, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 342, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 0, 270,
	0, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 0, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 642, 0, 643, 382, 0,
	383, 384, 385, 386, 387, 644, 645, 646, 466, 0,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 271, 395, 396, 397, 399, 0, 0, 398, 647,
	648, 0, 649, 0, 400, 401, 0, 650, 0, 402,
	403, 404, 0, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 651,
	0, 416, 417, 0, 0, 418, 0, 0, 0, 419,
	420, 423, 0, 0, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 0, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 0, 462, 452, 0,
	272, 0, 463, 464, 0, 652, 465, 653, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 0, 476, 0, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 0, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 2022, 545, 546, 547, 548, 0, 2024, 551,
	549, 552, 553, 554, 0, 555, 556, 538, 539, 557,
	558, 0, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 0,
	582, 583, 0, 579, 570, 806, 584, 585, 586, 587,
	588, 807, 590, 356, 591, 0, 592, 665, 666, 667,
	668, 0, 601, 0, 593, 594, 595, 669, 596, 670,
	0, 597, 598, 2021, 600, 0, 602, 603, 0, 0,
	604, 605, 606, 608, 609, 607, 610, 0, 611, 0,
	0, 612, 613, 614, 671, 672, 673, 0, 616, 615,
	617, 674, 0, 618, 801, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 0, 0, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 1974, 280,
	281, 0, 0, 0, 811, 0, 624, 0, 0, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	808, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 644, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 272,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 1973, 545, 546, 547, 548, 0, 1975, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 806, 584, 585, 586, 587, 588,
	807, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 1972, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 0, 616, 615, 617,
	674, 799, 618, 801, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 0, 0, 0, 0, 0, 0, 0,
	273, 275, 274, 276, 277, 278, 279, 0, 280, 281,
	0, 0, 0, 811, 0, 624, 0, 0, 0, 0,
	282, 283, 0, 284, 285, 286, 287, 288, 289, 625,
	626, 0, 290, 627, 291, 628, 0, 629, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 298, 630, 631,
	632, 0, 299, 300, 633, 0, 0, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 0, 323, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 808,
	330, 0, 331, 634, 635, 0, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	342, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 636, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 637, 638, 362, 0, 270, 0, 0,
	0, 0, 0, 363, 364, 365, 639, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 0, 369, 370, 371,
	640, 641, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 642, 0, 643, 382, 0, 383, 384,
	385, 386, 387, 644, 645, 646, 466, 0, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 271,
	395, 396, 397, 399, 0, 0, 398, 647, 648, 0,
	649, 0, 400, 401, 0, 650, 0, 402, 403, 404,
	0, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 651, 0, 416,
	417, 0, 0, 418, 0, 0, 0, 419, 420, 423,
	0, 0, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 0, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 0, 462, 452, 0, 272, 0,
	463, 464, 0, 652, 465, 653, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 0, 476, 0, 655, 477, 478, 470, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 658, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 660, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 0, 528, 529, 530, 531, 532,
	661, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 0, 555, 556, 538, 539, 557, 558, 0,
	559, 560, 561, 562, 563, 564, 565, 662, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 663,
	573, 574, 575, 576, 664, 580, 581, 0, 582, 583,
	0, 579, 570, 806, 584, 585, 586, 587, 588, 807,
	590, 356, 591, 0, 592, 665, 666, 667, 668, 0,
	601, 0, 593, 594, 595, 669, 596, 670, 0, 597,
	598, 599, 600, 0, 602, 603, 0, 0, 604, 605,
	606, 608, 609, 607, 610, 0, 611, 0, 0, 612,
	613, 614, 671, 672, 673, 0, 616, 615, 617, 674,
	1996, 618, 0, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 811, 0, 0, 0, 0, 282, 283, 1178,
	284, 285, 286, 287, 288, 289, 0, 2002, 0, 290,
	1992, 291, 2008, 0, 2015, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 2018, 2019, 0, 0, 299,
	300, 0, 0, 1322, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 1179, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 1161, 331,
	2006, 2005, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 1146, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	0, 0, 362, 0, 0, 0, 0, 0, 0, 0,
	363, 364, 365, 2004, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 1180, 369, 370, 371, 2013, 2014, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	0, 0, 0, 382, 0, 383, 384, 385, 386, 387,
	0, 0, 0, 466, 1182, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 0, 395, 396, 397,
	399, 0, 1181, 398, 1999, 2000, 0, 1995, 0, 400,
	401, 1183, 0, 1184, 402, 403, 404, 1185, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 0, 1186, 416, 417, 1187, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 1188, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 1189, 462, 452, 0, 0, 1190, 463, 464, 0,
	0, 465, 2007, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 0, 1191,
	476, 1192, 0, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 1989, 489, 490,
	491, 1990, 492, 493, 494, 0, 495, 0, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 2003, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 1193, 528, 529, 530, 531, 532, 0, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 1194, 559, 560, 561,
	562, 563, 564, 565, 2001, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 2017, 573, 574, 575,
	576, 0, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 2009, 2010, 2011, 2012, 0, 601, 0, 593,
	594, 595, 0, 596, 0, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 0,
	1993, 2016, 801, 616, 615, 617, 0, 0, 618, 0,
	0, 0, 0, 619, 620, 0, 621, 622, 623, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 0, 284, 285, 286, 287, 288, 289, 625, 626,
	1983, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 808, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 644, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 272, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 806, 584, 585, 586, 587, 588, 807, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 0, 616, 615, 617, 674, 0,
	618, 801, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 0, 0, 0, 0, 0, 0, 0, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	0, 811, 0, 624, 0, 0, 0, 0, 282, 283,
	0, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 298, 630, 631, 632, 0,
	299, 300, 633, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 0, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 808, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 270, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 0, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 644, 645, 646, 466, 0, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 271, 395, 396,
	397, 399, 0, 0, 398, 647, 648, 0, 649, 0,
	400, 401, 0, 650, 0, 402, 403, 404, 0, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 0, 416, 417, 0,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 0,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 0, 462, 452, 0, 272, 0, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	0, 476, 0, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 0, 2325, 529, 530, 531, 532, 661, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 2326, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	0, 555, 556, 538, 539, 557, 558, 0, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 0, 579,
	570, 806, 584, 585, 586, 587, 588, 807, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 669, 596, 670, 0, 597, 598, 2327,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 0, 616, 615, 617, 674, 0, 618,
	267, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	0, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	811, 0, 624, 0, 0, 0, 0, 282, 283, 0,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 0, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 0, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	644, 645, 646, 466, 0, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 271, 395, 396, 397,
	399, 0, 0, 398, 647, 648, 0, 649, 0, 400,
	401, 0, 650, 0, 402, 403, 404, 0, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 0, 416, 417, 0, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 0, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 0, 462, 452, 0, 272, 0, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 0,
	476, 0, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 0, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 0, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 0, 616, 615, 617, 674, 2067, 618, 1317,
	2034, 0, 0, 619, 620, 675, 621, 622, 623, 0,
	0, 0, 0, 0, 0, 0, 273, 275, 274, 276,
	277, 278, 279, 0, 280, 281, 0, 0, 0, 811,
	0, 624, 0, 0, 0, 0, 282, 283, 1178, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 298, 630, 631, 632, 0, 299, 300,
	633, 0, 1322, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 1179, 323, 324, 325, 0, 0, 0, 0, 0,
	0, 2031, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 0, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 1180, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 642,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 644,
	645, 646, 466, 1182, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 0, 395, 396, 397, 399,
	0, 1181, 398, 647, 648, 0, 649, 0, 400, 401,
	1183, 650, 1184, 402, 403, 404, 1185, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 651, 1186, 416, 417, 1187, 0, 418,
	0, 0, 0, 419, 420, 423, 0, 0, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1188, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1189, 462, 452, 0, 0, 1190, 463, 464, 0, 652,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 1191, 476,
	1192, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	1193, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 2032, 555,
	556, 538, 539, 557, 558, 1194, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 0, 582, 583, 0, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 665, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 669, 596, 670, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 0, 611, 0, 0, 612, 613, 614, 671, 672,
	673, 0, 616, 615, 617, 674, 2028, 618, 1317, 2034,
	0, 0, 619, 620, 675, 621, 622, 623, 0, 0,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 1178, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 1322, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	1179, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	2031, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 1180, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 644, 645,
	646, 466, 1182, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 0, 395, 396, 397, 399, 0,
	1181, 398, 647, 648, 0, 649, 0, 400, 401, 1183,
	650, 1184, 402, 403, 404, 1185, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 1186, 416, 417, 1187, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 1188, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 1189,
	462, 452, 0, 0, 1190, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 1191, 476, 1192,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 1193,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 2032, 555, 556,
	538, 539, 557, 558, 1194, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	0, 616, 615, 617, 674, 0, 618, 1317, 2034, 0,
	0, 619, 620, 675, 621, 622, 623, 0, 0, 0,
	0, 0, 0, 0, 273, 275, 274, 276, 277, 278,
	279, 0, 280, 281, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 282, 283, 1178, 284, 285, 286,
	287, 288, 289, 625, 626, 0, 290, 627, 291, 628,
	0, 629, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 298, 630, 631, 632, 0, 299, 300, 633, 0,
	1322, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 1179,
	323, 324, 325, 0, 0, 0, 0, 0, 0, 2031,
	326, 327, 328, 329, 330, 0, 331, 634, 635, 0,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 342, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 636, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 637, 638, 362,
	0, 270, 0, 0, 0, 0, 0, 363, 364, 365,
	639, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	1180, 369, 370, 371, 640, 641, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 642, 0, 643,
	382, 0, 383, 384, 385, 386, 387, 644, 645, 646,
	466, 1182, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 0, 395, 396, 397, 399, 0, 1181,
	398, 647, 648, 0, 649, 0, 400, 401, 1183, 650,
	1184, 402, 403, 404, 1185, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 651, 1186, 416, 417, 1187, 0, 418, 0, 0,
	0, 419, 420, 423, 0, 0, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 1188, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 1189, 462,
	452, 0, 0, 1190, 463, 464, 0, 652, 465, 653,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 1191, 476, 1192, 655,
	477, 478, 470, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 658, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 660, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 1193, 528,
	529, 530, 531, 532, 661, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 2032, 555, 556, 538,
	539, 557, 558, 1194, 559, 560, 561, 562, 563, 564,
	565, 662, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 663, 573, 574, 575, 576, 664, 580,
	581, 0, 582, 583, 0, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 665,
	666, 667, 668, 0, 601, 0, 593, 594, 595, 669,
	596, 670, 0, 597, 598, 599, 600, 0, 602, 603,
	0, 0, 604, 605, 606, 608, 609, 607, 610, 0,
	611, 0, 0, 612, 613, 614, 671, 672, 673, 0,
	616, 615, 617, 674, 0, 618, 0, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 1317, 1316, 0, 0,
	0, 0, 1314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 282, 283, 1178, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 1322,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 1179, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 329, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 1180,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 644, 645, 646, 466,
	1182, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 0, 395, 396, 397, 399, 0, 1181, 398,
	647, 648, 0, 649, 0, 400, 401, 1183, 650, 1184,
	402, 403, 404, 1185, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 1186, 416, 417, 1187, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 1188, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 1189, 462, 452,
	0, 0, 1190, 463, 464, 3897, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 1191, 476, 1192, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 1193, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 1194, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 0, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 1317, 1316, 0, 0, 0,
	0, 1314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 275, 274, 276, 277, 278, 279, 0,
	280, 281, 0, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 282, 283, 1178, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 0, 629,
	292, 293, 294, 295, 296, 297, 0, 0, 0, 298,
	630, 631, 632, 0, 299, 300, 633, 0, 1322, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 1179, 323, 324,
	325, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 342, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 0, 270,
	0, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 1180, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 642, 0, 643, 382, 0,
	383, 384, 385, 386, 387, 644, 645, 646, 466, 1182,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 0, 395, 396, 397, 399, 0, 1181, 398, 647,
	648, 0, 649, 0, 400, 401, 1183, 650, 1184, 402,
	403, 404, 1185, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 651,
	1186, 416, 417, 1187, 0, 418, 0, 0, 0, 419,
	420, 423, 0, 0, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 1188, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 1189, 462, 452, 0,
	0, 1190, 463, 464, 3508, 652, 465, 653, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 1191, 476, 1192, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 1193, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 0, 555, 556, 538, 539, 557,
	558, 1194, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 0,
	582, 583, 0, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 665, 666, 667,
	668, 0, 601, 0, 593, 594, 595, 669, 596, 670,
	0, 597, 598, 599, 600, 0, 602, 603, 0, 0,
	604, 605, 606, 608, 609, 607, 610, 0, 611, 0,
	0, 612, 613, 614, 671, 672, 673, 0, 616, 615,
	617, 674, 0, 618, 0, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 1646, 0, 1317, 1316, 0, 0,
	0, 0, 1314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 282, 283, 1178, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 1322,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 1179, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 329, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	270, 0, 0, 0, 0, 0, 1645, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 1180,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 644, 645, 646, 466,
	1182, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 0, 395, 396, 397, 399, 0, 1181, 398,
	647, 648, 0, 649, 0, 400, 401, 1183, 650, 1184,
	402, 403, 404, 1185, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 1186, 416, 417, 1187, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 1188, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 1189, 462, 452,
	0, 0, 1190, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 1191, 476, 1192, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 1644, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 1193, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 1643, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 1194, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 0, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 1564, 0, 1317, 1316, 0,
	0, 0, 0, 1314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 275, 274, 276, 277, 278,
	279, 0, 280, 281, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 282, 283, 1178, 284, 285, 286,
	287, 288, 289, 625, 626, 0, 290, 627, 291, 628,
	0, 629, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 298, 630, 631, 632, 0, 299, 300, 633, 0,
	1322, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 1179,
	323, 324, 325, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 329, 330, 0, 331, 634, 635, 0,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 342, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 636, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 637, 638, 362,
	0, 270, 0, 0, 0, 0, 0, 363, 364, 365,
	639, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	1180, 369, 370, 371, 640, 641, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 642, 0, 643,
	382, 0, 383, 384, 385, 386, 387, 1563, 645, 646,
	466, 1182, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 0, 395, 396, 397, 399, 0, 1181,
	398, 647, 648, 0, 649, 0, 400, 401, 1183, 650,
	1184, 402, 403, 404, 1185, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 651, 1186, 416, 417, 1187, 0, 418, 0, 0,
	0, 419, 420, 423, 0, 0, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 1188, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 1189, 462,
	452, 0, 0, 1190, 463, 464, 0, 652, 465, 653,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 1191, 476, 1192, 655,
	477, 478, 470, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 658, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 660, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 1193, 528,
	529, 530, 531, 532, 661, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 0, 555, 556, 538,
	539, 557, 558, 1194, 559, 560, 561, 562, 563, 564,
	565, 662, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 663, 573, 574, 575, 576, 664, 580,
	581, 0, 582, 583, 0, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 665,
	666, 667, 668, 0, 601, 0, 593, 594, 595, 669,
	596, 670, 0, 597, 598, 599, 600, 0, 602, 603,
	0, 0, 604, 605, 606, 608, 609, 607, 610, 0,
	611, 0, 0, 612, 613, 614, 671, 672, 673, 0,
	616, 615, 617, 674, 0, 618, 0, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 1524, 0, 1317, 1316,
	0, 0, 0, 0, 1314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 1178, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 1322, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	1179, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 1180, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 644, 645,
	646, 466, 1182, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 0, 395, 396, 397, 399, 0,
	1181, 398, 647, 648, 0, 649, 0, 400, 401, 1183,
	650, 1184, 402, 403, 404, 1185, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 1186, 416, 417, 1187, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 1188, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 1189,
	462, 452, 0, 0, 1190, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 1191, 476, 1192,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 1193,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 1194, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	0, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 1489, 0, 1317,
	1316, 0, 0, 0, 0, 1314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 275, 274, 276,
	277, 278, 279, 0, 280, 281, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 282, 283, 1178, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 298, 630, 631, 632, 0, 299, 300,
	633, 0, 1322, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 1179, 323, 324, 325, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 0, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 1180, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 642,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 1488,
	645, 646, 466, 1182, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 0, 395, 396, 397, 399,
	0, 1181, 398, 647, 648, 0, 649, 0, 400, 401,
	1183, 650, 1184, 402, 403, 404, 1185, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 651, 1186, 416, 417, 1187, 0, 418,
	0, 0, 0, 419, 420, 423, 0, 0, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1188, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1189, 462, 452, 0, 0, 1190, 463, 464, 0, 652,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 1191, 476,
	1192, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	1193, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 0, 555,
	556, 538, 539, 557, 558, 1194, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 0, 582, 583, 0, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 665, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 669, 596, 670, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 0, 611, 0, 0, 612, 613, 614, 671, 672,
	673, 0, 616, 615, 617, 674, 0, 618, 0, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 1311, 0,
	1317, 1316, 0, 0, 0, 0, 1314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 282, 283, 1178,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 1322, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 1179, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 1180, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	1310, 645, 646, 466, 1182, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 0, 395, 396, 397,
	399, 0, 1181, 398, 647, 648, 0, 649, 0, 400,
	401, 1183, 650, 1184, 402, 403, 404, 1185, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 1186, 416, 417, 1187, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 1188, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 1189, 462, 452, 0, 0, 1190, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 1191,
	476, 1192, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 1193, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 1194, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 0, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 1317,
	1316, 0, 0, 0, 0, 1314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 275, 274, 276,
	277, 278, 279, 0, 280, 281, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 282, 283, 1178, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 298, 630, 631, 632, 0, 299, 300,
	633, 0, 1322, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 1179, 323, 324, 325, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 0, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 1180, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 642,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 644,
	645, 646, 466, 1182, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 0, 395, 396, 397, 399,
	0, 1181, 398, 647, 648, 0, 649, 0, 400, 401,
	1183, 650, 1184, 402, 403, 404, 1185, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 651, 1186, 416, 417, 1187, 0, 418,
	0, 0, 0, 419, 420, 423, 0, 0, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1188, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1189, 462, 452, 0, 0, 1190, 463, 464, 0, 652,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 1191, 476,
	1192, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	1193, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 0, 555,
	556, 538, 539, 557, 558, 1194, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 0, 582, 583, 0, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 665, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 669, 596, 670, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 0, 611, 0, 0, 612, 613, 614, 671, 672,
	673, 0, 616, 615, 617, 674, 0, 618, 1317, 2034,
	0, 0, 619, 620, 675, 621, 622, 623, 0, 0,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 1178, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 1322, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	1179, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	2074, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 1180, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 644, 645,
	646, 466, 1182, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 0, 395, 396, 397, 399, 0,
	1181, 398, 647, 648, 0, 649, 0, 400, 401, 1183,
	650, 1184, 402, 403, 404, 1185, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 1186, 416, 417, 1187, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 1188, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 1189,
	462, 452, 0, 0, 1190, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 1191, 476, 1192,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 1193,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 1194, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	0, 616, 615, 617, 674, 0, 618, 1317, 1316, 0,
	0, 619, 620, 675, 621, 622, 623, 0, 0, 0,
	0, 0, 0, 0, 273, 275, 274, 276, 277, 278,
	279, 0, 280, 281, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 282, 283, 1178, 284, 285, 286,
	287, 288, 289, 625, 626, 0, 290, 627, 291, 628,
	0, 629, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 298, 630, 631, 632, 0, 299, 300, 633, 0,
	1322, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 1179,
	323, 324, 325, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 329, 330, 0, 331, 634, 635, 0,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 342, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 636, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 637, 638, 362,
	0, 270, 0, 0, 0, 0, 0, 363, 364, 365,
	639, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	1180, 369, 370, 371, 640, 641, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 642, 0, 643,
	382, 0, 383, 384, 385, 386, 387, 644, 645, 646,
	466, 1182, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 0, 395, 396, 397, 399, 0, 1181,
	398, 647, 648, 0, 649, 0, 400, 401, 1183, 650,
	1184, 402, 403, 404, 1185, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 651, 1186, 416, 417, 1187, 0, 418, 0, 0,
	0, 419, 420, 423, 0, 0, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 1188, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 1189, 462,
	452, 0, 0, 1190, 463, 464, 0, 652, 465, 653,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 1191, 476, 1192, 655,
	477, 478, 470, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 658, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 660, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 1193, 528,
	529, 530, 531, 532, 661, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 0, 555, 556, 538,
	539, 557, 558, 1194, 559, 560, 561, 562, 563, 564,
	565, 662, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 663, 573, 574, 575, 576, 664, 580,
	581, 0, 582, 583, 0, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 665,
	666, 667, 668, 0, 601, 0, 593, 594, 595, 669,
	596, 670, 0, 597, 598, 599, 600, 0, 602, 603,
	0, 0, 604, 605, 606, 608, 609, 607, 610, 0,
	611, 0, 0, 612, 613, 614, 671, 672, 673, 1317,
	616, 615, 617, 674, 0, 618, 0, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 273, 275, 274, 276,
	277, 278, 279, 0, 280, 281, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 282, 283, 1178, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 298, 630, 631, 632, 0, 299, 300,
	633, 0, 1322, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 1179, 323, 324, 325, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 0, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 1180, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 642,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 644,
	645, 646, 466, 1182, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 0, 395, 396, 397, 399,
	0, 1181, 398, 647, 648, 0, 649, 0, 400, 401,
	1183, 650, 1184, 402, 403, 404, 1185, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 651, 1186, 416, 417, 1187, 0, 418,
	0, 0, 0, 419, 420, 423, 0, 0, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1188, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1189, 462, 452, 0, 0, 1190, 463, 464, 0, 652,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 1191, 476,
	1192, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	1193, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 0, 555,
	556, 538, 539, 557, 558, 1194, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 0, 582, 583, 0, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 665, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 669, 596, 670, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 0, 611, 0, 0, 612, 613, 614, 671, 672,
	673, 267, 616, 615, 617, 674, 0, 618, 0, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 282, 283,
	0, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 298, 630, 631, 632, 2840,
	299, 300, 633, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	2837, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 0, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 2844, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 3056, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 2843, 0, 0, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 644, 645, 646, 466, 0, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 3053, 395, 396,
	397, 399, 0, 0, 398, 647, 648, 0, 649, 0,
	400, 3055, 0, 650, 0, 402, 403, 404, 0, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 0, 416, 417, 3052,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 0,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 0, 462, 452, 0, 0, 0, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	0, 476, 0, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 2842, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 0, 528, 529, 530, 531, 532, 661, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	0, 555, 556, 538, 539, 557, 558, 0, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 669, 596, 670, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 3054, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 267, 616, 615, 617, 674, 0, 618,
	0, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	273, 275, 274, 276, 277, 278, 279, 0, 280, 281,
	0, 0, 0, 0, 0, 624, 0, 0, 0, 0,
	282, 283, 0, 284, 285, 286, 287, 288, 289, 625,
	626, 0, 290, 627, 291, 628, 0, 629, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 298, 630, 631,
	632, 2840, 299, 300, 633, 0, 0, 2834, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 2837, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 0, 323, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 0, 331, 634, 635, 0, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	342, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	2844, 350, 636, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 637, 638, 362, 0, 0, 0, 0,
	0, 0, 0, 363, 364, 365, 639, 0, 0, 0,
	366, 0, 367, 368, 2843, 0, 0, 369, 370, 371,
	640, 641, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 642, 0, 643, 382, 0, 383, 384,
	385, 386, 387, 2833, 645, 646, 466, 0, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 0,
	395, 396, 397, 399, 0, 0, 398, 647, 648, 0,
	649, 0, 400, 401, 0, 650, 0, 402, 403, 404,
	0, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 651, 0, 416,
	417, 0, 0, 418, 0, 0, 0, 419, 420, 423,
	0, 0, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 0, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 0, 462, 452, 0, 0, 0,
	463, 464, 0, 652, 465, 653, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 0, 476, 0, 655, 477, 478, 470, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 658, 495,
	659, 496, 497, 2842, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 660, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 0, 528, 529, 530, 531, 532,
	661, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 0, 555, 556, 538, 539, 557, 558, 0,
	559, 560, 561, 562, 563, 564, 565, 662, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 663,
	573, 574, 575, 576, 664, 580, 581, 0, 582, 583,
	0, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 665, 666, 667, 668, 0,
	601, 0, 593, 594, 595, 669, 596, 670, 0, 597,
	598, 599, 600, 0, 602, 603, 0, 2841, 604, 605,
	606, 608, 609, 607, 610, 0, 611, 0, 0, 612,
	613, 614, 671, 672, 673, 0, 616, 615, 617, 674,
	1722, 618, 267, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 0, 0, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 1721, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 0, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 1720, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 644, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 272, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 1723, 537, 544,
	545, 546, 547, 548, 0, 1719, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 1717, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 0, 1718, 615, 617, 674, 1464,
	618, 267, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 0, 0, 0, 0, 0, 0, 0, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 282, 283,
	0, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 298, 630, 631, 632, 0,
	299, 300, 633, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 0, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 270, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 0, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 1466, 645, 646, 466, 0, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 271, 395, 396,
	397, 399, 0, 0, 398, 647, 648, 0, 649, 0,
	400, 401, 0, 650, 0, 402, 403, 404, 0, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 0, 416, 417, 0,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 0,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 0, 462, 452, 0, 272, 0, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 1228, 471, 472, 473, 0, 0, 474, 475, 654,
	0, 476, 0, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 0, 528, 529, 530, 531, 532, 661, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	0, 555, 556, 538, 539, 557, 558, 0, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 669, 596, 670, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 0, 616, 615, 617, 674, 1461, 618,
	267, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	0, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 282, 283, 0,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 0, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 0, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	1463, 645, 646, 466, 0, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 271, 395, 396, 397,
	399, 0, 0, 398, 647, 648, 0, 649, 0, 400,
	401, 0, 650, 0, 402, 403, 404, 0, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 0, 416, 417, 0, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 0, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 0, 462, 452, 0, 272, 0, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	1228, 471, 472, 473, 0, 0, 474, 475, 654, 0,
	476, 0, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 0, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 0, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 0, 616, 615, 617, 674, 1368, 618, 267,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 0,
	0, 0, 0, 0, 0, 0, 273, 275, 274, 276,
	277, 278, 279, 0, 280, 281, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 282, 283, 0, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 298, 630, 631, 632, 0, 299, 300,
	633, 0, 0, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 0, 323, 324, 325, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 0, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 0, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 642,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 1370,
	645, 646, 466, 0, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	0, 0, 398, 647, 648, 0, 649, 0, 400, 401,
	0, 650, 0, 402, 403, 404, 0, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 651, 0, 416, 417, 0, 0, 418,
	0, 0, 0, 419, 420, 423, 0, 0, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 0, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	0, 462, 452, 0, 272, 0, 463, 464, 0, 652,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 1228,
	471, 472, 473, 0, 0, 474, 475, 654, 0, 476,
	0, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	0, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 0, 555,
	556, 538, 539, 557, 558, 0, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 0, 582, 583, 0, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 665, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 669, 596, 670, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 0, 611, 0, 0, 612, 613, 614, 671, 672,
	673, 0, 616, 615, 617, 674, 707, 618, 267, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 0, 0,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 706,
	278, 279, 696, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 0, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 699, 320, 321, 322,
	0, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 0, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 0, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 700, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 644, 645,
	646, 466, 0, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 0, 395, 396, 397, 399, 0,
	0, 398, 647, 648, 0, 649, 0, 400, 401, 0,
	650, 0, 402, 403, 404, 0, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 0, 416, 417, 0, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 0, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 0,
	462, 452, 0, 0, 0, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 0, 476, 0,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 0,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	701, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 0, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	0, 616, 615, 617, 674, 695, 618, 267, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 0, 0, 0,
	0, 0, 0, 0, 273, 275, 274, 276, 277, 278,
	279, 696, 280, 281, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 282, 283, 0, 284, 285, 286,
	287, 288, 289, 625, 626, 0, 290, 627, 291, 628,
	0, 629, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 298, 630, 631, 632, 0, 299, 300, 633, 0,
	0, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 699, 320, 321, 322, 0,
	323, 324, 325, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 329, 330, 0, 331, 634, 635, 0,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 342, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 636, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 637, 638, 362,
	0, 0, 0, 0, 0, 0, 0, 363, 364, 365,
	639, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	0, 369, 370, 371, 640, 641, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 700, 381, 642, 0, 643,
	382, 0, 383, 384, 385, 386, 387, 644, 645, 646,
	466, 0, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 0, 395, 396, 397, 399, 0, 0,
	398, 647, 648, 0, 649, 0, 400, 401, 0, 650,
	0, 402, 403, 404, 0, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 651, 0, 416, 417, 0, 0, 418, 0, 0,
	0, 419, 420, 423, 0, 0, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 0, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 0, 462,
	452, 0, 0, 0, 463, 464, 0, 652, 465, 653,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 0, 476, 0, 655,
	477, 478, 470, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 658, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 660, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 0, 528,
	529, 530, 531, 532, 661, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 701,
	550, 551, 549, 552, 553, 554, 0, 555, 556, 538,
	539, 557, 558, 0, 559, 560, 561, 562, 563, 564,
	565, 662, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 663, 573, 574, 575, 576, 664, 580,
	581, 0, 582, 583, 0, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 665,
	666, 667, 668, 0, 601, 0, 593, 594, 595, 669,
	596, 670, 0, 597, 598, 599, 600, 0, 602, 603,
	0, 0, 604, 605, 606, 608, 609, 607, 610, 0,
	611, 0, 0, 612, 613, 614, 671, 672, 673, 267,
	616, 615, 617, 674, 0, 618, 0, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 273, 275, 274, 276,
	277, 278, 279, 696, 280, 281, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 282, 283, 0, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 298, 630, 631, 632, 0, 299, 300,
	633, 0, 0, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 699, 320, 321,
	322, 0, 323, 324, 325, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 0, 0, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 0, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 700, 381, 642,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 644,
	645, 646, 466, 0, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 0, 395, 396, 397, 399,
	0, 0, 398, 647, 648, 0, 649, 0, 400, 401,
	0, 650, 0, 402, 403, 404, 0, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 651, 0, 416, 417, 0, 0, 418,
	0, 0, 0, 419, 420, 423, 0, 0, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 0, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	0, 462, 452, 0, 0, 0, 463, 464, 0, 652,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 0, 476,
	0, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	0, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 701, 550, 551, 549, 552, 553, 554, 0, 555,
	556, 538, 539, 557, 558, 0, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 0, 582, 583, 0, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 665, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 669, 596, 670, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 0, 611, 0, 0, 612, 613, 614, 671, 672,
	673, 267, 616, 615, 617, 674, 0, 618, 0, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 273, 275,
	274, 276, 277, 278, 279, 696, 280, 281, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 282, 283,
	0, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 298, 630, 631, 632, 0,
	299, 300, 633, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 699,
	320, 321, 322, 0, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 0, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 0, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 3908,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 644, 645, 646, 466, 0, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 0, 395, 396,
	397, 399, 0, 0, 398, 647, 648, 0, 649, 0,
	400, 401, 0, 650, 0, 402, 403, 404, 0, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 0, 416, 417, 0,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 0,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 0, 462, 452, 0, 0, 0, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	0, 476, 0, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 0, 528, 529, 530, 531, 532, 661, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 701, 550, 551, 549, 552, 553, 554,
	0, 555, 556, 538, 539, 557, 558, 0, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 669, 596, 670, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 267, 616, 615, 617, 674, 0, 618,
	0, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	273, 275, 274, 276, 277, 278, 279, 0, 280, 281,
	0, 0, 0, 0, 0, 624, 0, 0, 0, 0,
	282, 283, 0, 284, 285, 286, 287, 288, 289, 625,
	626, 0, 290, 627, 291, 628, 0, 629, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 298, 630, 631,
	632, 0, 299, 300, 633, 0, 0, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 0, 323, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 0, 331, 634, 635, 0, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	342, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 636, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 637, 638, 362, 0, 270, 0, 0,
	0, 0, 0, 363, 364, 365, 639, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 0, 369, 370, 371,
	640, 641, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 642, 0, 643, 382, 0, 383, 384,
	385, 386, 387, 644, 645, 646, 466, 0, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 271,
	395, 396, 397, 399, 0, 0, 398, 647, 648, 0,
	649, 0, 400, 401, 0, 650, 0, 402, 403, 404,
	0, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 651, 0, 416,
	417, 0, 0, 418, 0, 0, 0, 419, 420, 423,
	0, 0, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 0, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 0, 462, 452, 0, 272, 0,
	463, 464, 0, 652, 465, 653, 467, 468, 0, 0,
	469, 0, 0, 1228, 471, 472, 473, 0, 0, 474,
	475, 654, 0, 476, 0, 655, 477, 478, 470, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 658, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 660, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 0, 528, 529, 530, 531, 532,
	661, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 0, 555, 556, 538, 539, 557, 558, 0,
	559, 560, 561, 562, 563, 564, 565, 662, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 663,
	573, 574, 575, 576, 664, 580, 581, 0, 582, 583,
	0, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 665, 666, 667, 668, 0,
	601, 0, 593, 594, 595, 669, 596, 670, 0, 597,
	598, 599, 600, 0, 602, 603, 0, 0, 604, 605,
	606, 608, 609, 607, 610, 0, 611, 0, 0, 612,
	613, 614, 671, 672, 673, 267, 616, 615, 617, 674,
	0, 618, 0, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 273, 275, 274, 276, 277, 278, 279, 0,
	280, 281, 0, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 282, 283, 0, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 0, 629,
	292, 293, 294, 295, 296, 297, 0, 0, 0, 298,
	630, 631, 632, 0, 299, 300, 633, 0, 0, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 0, 323, 324,
	325, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 342, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 0, 270,
	0, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 0, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 642, 0, 643, 382, 0,
	383, 384, 385, 386, 387, 644, 645, 646, 466, 0,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 271, 395, 396, 397, 399, 0, 0, 398, 647,
	648, 0, 649, 0, 400, 401, 0, 650, 0, 402,
	403, 404, 0, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 651,
	0, 416, 417, 0, 0, 418, 0, 0, 0, 419,
	420, 423, 0, 0, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 0, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 3453, 462, 452, 0,
	272, 0, 463, 464, 0, 652, 465, 653, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 0, 476, 0, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 0, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 0, 555, 556, 538, 539, 557,
	558, 0, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 0,
	582, 583, 0, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 665, 666, 667,
	668, 0, 601, 0, 593, 594, 595, 669, 596, 670,
	0, 597, 598, 599, 600, 0, 602, 603, 0, 0,
	604, 605, 606, 608, 609, 607, 610, 0, 611, 0,
	0, 612, 613, 614, 671, 672, 673, 0, 616, 615,
	617, 674, 3001, 618, 267, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 0, 0, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 3000, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 272,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 0, 616, 615, 617,
	674, 2297, 618, 267, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 0, 0, 0, 0, 0, 0, 0,
	273, 275, 274, 276, 277, 278, 279, 0, 280, 281,
	0, 0, 0, 0, 0, 624, 0, 0, 0, 0,
	282, 283, 0, 284, 285, 286, 287, 288, 289, 625,
	626, 0, 290, 627, 291, 628, 0, 629, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 298, 630, 631,
	632, 0, 299, 300, 633, 0, 0, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 0, 323, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 0, 331, 634, 635, 0, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	342, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 636, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 637, 638, 362, 0, 270, 0, 0,
	0, 0, 0, 363, 364, 365, 639, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 0, 369, 370, 371,
	640, 641, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 642, 0, 643, 382, 0, 383, 384,
	385, 386, 387, 644, 645, 646, 466, 0, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 271,
	395, 396, 397, 399, 0, 0, 398, 647, 648, 0,
	649, 0, 400, 401, 0, 650, 0, 402, 403, 404,
	0, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 651, 0, 416,
	417, 0, 0, 418, 0, 0, 0, 419, 420, 423,
	0, 0, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 0, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 0, 462, 452, 0, 272, 0,
	463, 464, 0, 652, 465, 653, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 0, 476, 0, 655, 477, 478, 470, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 658, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 660, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 0, 528, 529, 530, 531, 532,
	661, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 0, 555, 556, 538, 539, 557, 558, 0,
	559, 560, 561, 562, 563, 564, 565, 662, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 663,
	573, 574, 575, 576, 664, 580, 581, 0, 582, 583,
	0, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 665, 666, 667, 668, 0,
	601, 0, 593, 594, 595, 669, 596, 670, 0, 597,
	598, 599, 600, 0, 602, 603, 0, 0, 604, 605,
	606, 608, 609, 607, 610, 0, 611, 0, 0, 612,
	613, 614, 671, 672, 673, 267, 616, 615, 617, 674,
	0, 618, 0, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 273, 275, 274, 276, 277, 278, 279, 0,
	280, 281, 0, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 282, 283, 0, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 0, 629,
	292, 293, 294, 295, 296, 297, 0, 0, 0, 298,
	630, 631, 632, 0, 299, 300, 633, 0, 0, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 0, 323, 324,
	325, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 342, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 0, 270,
	0, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 0, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 642, 0, 643, 382, 0,
	383, 384, 385, 386, 387, 644, 645, 646, 466, 0,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 271, 395, 396, 397, 399, 0, 0, 398, 647,
	648, 0, 649, 0, 400, 401, 0, 650, 0, 402,
	403, 404, 0, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 651,
	0, 416, 417, 0, 0, 418, 0, 0, 0, 419,
	420, 423, 0, 0, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 0, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 0, 462, 452, 0,
	272, 0, 463, 464, 0, 652, 465, 653, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 0, 476, 0, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 0, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 0, 555, 556, 538, 539, 557,
	558, 0, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 0,
	582, 583, 0, 579, 570, 2238, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 665, 666, 667,
	668, 0, 601, 0, 593, 594, 595, 669, 596, 670,
	0, 597, 598, 599, 600, 0, 602, 603, 0, 0,
	604, 605, 606, 608, 609, 607, 610, 0, 611, 0,
	0, 612, 613, 614, 671, 672, 673, 0, 616, 615,
	617, 674, 2245, 618, 267, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 0, 0, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 2244, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 272,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 0, 616, 615, 617,
	674, 2231, 618, 267, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 0, 0, 0, 0, 0, 0, 0,
	273, 275, 274, 276, 277, 278, 279, 0, 280, 281,
	0, 0, 0, 0, 0, 624, 0, 0, 0, 0,
	282, 283, 0, 284, 285, 286, 287, 288, 289, 625,
	626, 0, 290, 627, 291, 628, 0, 629, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 298, 630, 631,
	632, 0, 299, 300, 633, 0, 0, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 0, 323, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 0, 331, 634, 635, 0, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	342, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 636, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 637, 638, 362, 0, 270, 0, 0,
	0, 0, 0, 363, 364, 365, 639, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 0, 369, 370, 371,
	640, 641, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 642, 0, 643, 382, 0, 383, 384,
	385, 386, 387, 2233, 645, 646, 466, 0, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 271,
	395, 396, 397, 399, 0, 0, 398, 647, 648, 0,
	649, 0, 400, 401, 0, 650, 0, 402, 403, 404,
	0, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 651, 0, 416,
	417, 0, 0, 418, 0, 0, 0, 419, 420, 423,
	0, 0, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 0, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 0, 462, 452, 0, 272, 0,
	463, 464, 0, 652, 465, 653, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 0, 476, 0, 655, 477, 478, 470, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 658, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 660, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 0, 528, 529, 530, 531, 532,
	661, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 0, 555, 556, 538, 539, 557, 558, 0,
	559, 560, 561, 562, 563, 564, 565, 662, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 663,
	573, 574, 575, 576, 664, 580, 581, 0, 582, 583,
	0, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 665, 666, 667, 668, 0,
	601, 0, 593, 594, 595, 669, 596, 670, 0, 597,
	598, 599, 600, 0, 602, 603, 0, 0, 604, 605,
	606, 608, 609, 607, 610, 0, 611, 0, 0, 612,
	613, 614, 671, 672, 673, 267, 616, 615, 617, 674,
	0, 618, 0, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 273, 275, 274, 276, 277, 278, 279, 0,
	280, 281, 0, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 282, 283, 0, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 0, 629,
	292, 293, 294, 295, 296, 297, 0, 0, 0, 298,
	630, 631, 632, 0, 299, 300, 633, 0, 0, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 0, 323, 324,
	325, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 342, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 0, 270,
	0, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 0, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 642, 0, 643, 382, 0,
	383, 384, 385, 386, 387, 2198, 645, 646, 466, 0,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 271, 395, 396, 397, 399, 0, 0, 398, 647,
	648, 0, 649, 0, 400, 401, 0, 650, 0, 402,
	403, 404, 0, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 651,
	0, 416, 417, 0, 0, 418, 0, 0, 0, 419,
	420, 423, 0, 0, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 0, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 0, 462, 452, 0,
	272, 0, 463, 464, 0, 652, 465, 653, 467, 468,
	0, 0, 469, 0, 0, 1228, 471, 472, 473, 0,
	0, 474, 475, 654, 0, 476, 0, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 0, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 0, 555, 556, 538, 539, 557,
	558, 0, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 0,
	582, 583, 0, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 665, 666, 667,
	668, 0, 601, 0, 593, 594, 595, 669, 596, 670,
	0, 597, 598, 599, 600, 0, 602, 603, 0, 0,
	604, 605, 606, 608, 609, 607, 610, 0, 611, 0,
	0, 612, 613, 614, 671, 672, 673, 0, 616, 615,
	617, 674, 1568, 618, 267, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 0, 0, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 1567, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 272,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 0, 616, 615, 617,
	674, 1481, 618, 267, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 0, 0, 0, 0, 0, 0, 0,
	273, 275, 274, 276, 277, 278, 279, 0, 280, 281,
	0, 0, 0, 0, 0, 624, 0, 0, 0, 0,
	282, 283, 0, 284, 285, 286, 287, 288, 289, 625,
	626, 0, 290, 627, 291, 628, 0, 629, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 298, 630, 631,
	632, 0, 299, 300, 633, 0, 0, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 0, 323, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 0, 331, 634, 635, 0, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	342, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 636, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 637, 638, 362, 0, 270, 0, 0,
	0, 0, 0, 363, 364, 365, 639, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 0, 369, 370, 371,
	640, 641, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 642, 0, 643, 382, 0, 383, 384,
	385, 386, 387, 644, 645, 646, 466, 0, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 271,
	395, 396, 397, 399, 0, 0, 398, 647, 648, 0,
	649, 0, 400, 401, 0, 650, 0, 402, 403, 404,
	0, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 651, 0, 416,
	417, 0, 0, 418, 0, 0, 0, 419, 420, 423,
	0, 0, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 0, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 0, 462, 452, 0, 272, 0,
	463, 464, 0, 652, 465, 653, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 0, 476, 0, 655, 477, 478, 470, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 658, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 660, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 0, 528, 529, 530, 531, 532,
	661, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 0, 555, 556, 538, 539, 557, 558, 0,
	559, 560, 561, 562, 563, 564, 565, 662, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 663,
	573, 574, 575, 576, 664, 580, 581, 0, 582, 583,
	0, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 665, 666, 667, 668, 0,
	601, 0, 593, 594, 595, 669, 596, 670, 0, 597,
	598, 599, 600, 0, 602, 603, 0, 0, 604, 605,
	606, 608, 609, 607, 610, 0, 611, 0, 0, 612,
	613, 614, 671, 672, 673, 0, 616, 615, 617, 674,
	1474, 618, 267, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 0, 0, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 0, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 1476, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 272, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 0, 616, 615, 617, 674, 1301,
	618, 267, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 0, 0, 0, 0, 0, 0, 0, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 282, 283,
	0, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 298, 630, 631, 632, 0,
	299, 300, 633, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 0, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 270, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 0, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 1300, 645, 646, 466, 0, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 271, 395, 396,
	397, 399, 0, 0, 398, 647, 648, 0, 649, 0,
	400, 401, 0, 650, 0, 402, 403, 404, 0, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 0, 416, 417, 0,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 0,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 0, 462, 452, 0, 272, 0, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	0, 476, 0, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 0, 528, 529, 530, 531, 532, 661, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	0, 555, 556, 538, 539, 557, 558, 0, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 669, 596, 670, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 0, 616, 615, 617, 674, 1291, 618,
	267, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	0, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 282, 283, 0,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 0, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 0, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	1290, 645, 646, 466, 0, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 271, 395, 396, 397,
	399, 0, 0, 398, 647, 648, 0, 649, 0, 400,
	401, 0, 650, 0, 402, 403, 404, 0, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 0, 416, 417, 0, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 0, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 0, 462, 452, 0, 272, 0, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 0,
	476, 0, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 0, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 0, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 0, 616, 615, 617, 674, 1288, 618, 267,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 0,
	0, 0, 0, 0, 0, 0, 273, 275, 274, 276,
	277, 278, 279, 0, 280, 281, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 282, 283, 0, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 298, 630, 631, 632, 0, 299, 300,
	633, 0, 0, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 0, 323, 324, 325, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 0, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 0, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 642,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 1287,
	645, 646, 466, 0, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	0, 0, 398, 647, 648, 0, 649, 0, 400, 401,
	0, 650, 0, 402, 403, 404, 0, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 651, 0, 416, 417, 0, 0, 418,
	0, 0, 0, 419, 420, 423, 0, 0, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 0, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	0, 462, 452, 0, 272, 0, 463, 464, 0, 652,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 0, 476,
	0, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	0, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 0, 555,
	556, 538, 539, 557, 558, 0, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 0, 582, 583, 0, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 665, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 669, 596, 670, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 0, 611, 0, 0, 612, 613, 614, 671, 672,
	673, 0, 616, 615, 617, 674, 1283, 618, 267, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 0, 0,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 0, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	0, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 0, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 1282, 645,
	646, 466, 0, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 0,
	0, 398, 647, 648, 0, 649, 0, 400, 401, 0,
	650, 0, 402, 403, 404, 0, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 0, 416, 417, 0, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 0, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 0,
	462, 452, 0, 272, 0, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 0, 476, 0,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 0,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 0, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	0, 616, 615, 617, 674, 677, 618, 267, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 0, 0, 0,
	0, 0, 0, 0, 273, 275, 274, 276, 277, 278,
	279, 0, 280, 281, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 282, 283, 0, 284, 285, 286,
	287, 288, 289, 625, 626, 0, 290, 627, 291, 628,
	0, 629, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 298, 630, 631, 632, 0, 299, 300, 633, 0,
	0, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 0,
	323, 324, 325, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 329, 330, 0, 331, 634, 635, 0,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 342, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 636, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 637, 638, 362,
	0, 270, 0, 0, 0, 0, 0, 363, 364, 365,
	639, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	0, 369, 370, 371, 640, 641, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 642, 0, 643,
	382, 0, 383, 384, 385, 386, 387, 644, 645, 646,
	466, 0, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 271, 395, 396, 397, 399, 0, 0,
	398, 647, 648, 0, 649, 0, 400, 401, 0, 650,
	0, 402, 403, 404, 0, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 651, 0, 416, 417, 0, 0, 418, 0, 0,
	0, 419, 420, 423, 0, 0, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 0, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 0, 462,
	452, 0, 272, 0, 463, 464, 0, 652, 465, 653,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 0, 476, 0, 655,
	477, 478, 470, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 658, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 660, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 0, 528,
	529, 530, 531, 532, 661, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 0, 555, 556, 538,
	539, 557, 558, 0, 559, 560, 561, 562, 563, 564,
	565, 662, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 663, 573, 574, 575, 576, 664, 580,
	581, 0, 582, 583, 0, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 665,
	666, 667, 668, 0, 601, 0, 593, 594, 595, 669,
	596, 670, 0, 597, 598, 599, 600, 0, 602, 603,
	0, 0, 604, 605, 606, 608, 609, 607, 610, 0,
	611, 0, 0, 612, 613, 614, 671, 672, 673, 0,
	616, 615, 617, 674, 258, 618, 267, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 0, 0, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 282, 283, 0, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 0, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 329, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 0,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 644, 645, 646, 466,
	0, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 0, 0, 398,
	647, 648, 0, 649, 0, 400, 401, 0, 650, 0,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 0, 416, 417, 0, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 0, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 0, 462, 452,
	0, 272, 0, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 0, 476, 0, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 0, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 0, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 267, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 0, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	0, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 0, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 644, 645,
	646, 466, 0, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 0,
	0, 398, 647, 648, 0, 649, 0, 400, 401, 0,
	650, 0, 402, 403, 404, 0, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 0, 416, 417, 0, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 0, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 0,
	462, 452, 0, 272, 0, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 0, 476, 0,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 0,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 0, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	267, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 282, 283, 0,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 699, 320,
	321, 322, 0, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 0, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 0, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 700, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	644, 645, 646, 466, 0, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 0, 395, 396, 397,
	399, 0, 0, 398, 647, 648, 0, 649, 0, 400,
	401, 0, 650, 0, 402, 403, 404, 0, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 0, 416, 417, 0, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 0, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 0, 462, 452, 0, 0, 0, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 0,
	476, 0, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 0, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 701, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 0, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 267, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 0, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 2334, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 644, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 272, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 267, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	2332, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 644, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 272,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 267, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 282, 283, 0, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 0, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 2330, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 0,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 644, 645, 646, 466,
	0, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 0, 0, 398,
	647, 648, 0, 649, 0, 400, 401, 0, 650, 0,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 0, 416, 417, 0, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 0, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 0, 462, 452,
	0, 272, 0, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 0, 476, 0, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 0, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 0, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 267, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 0, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	0, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 0, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 2251, 645,
	646, 466, 0, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 0,
	0, 398, 647, 648, 0, 649, 0, 400, 401, 0,
	650, 0, 402, 403, 404, 0, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 0, 416, 417, 0, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 0, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 0,
	462, 452, 0, 272, 0, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 0, 476, 0,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 0,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 0, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	267, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 282, 283, 0,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 0, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 0, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	2053, 645, 646, 466, 0, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 271, 395, 396, 397,
	399, 0, 0, 398, 647, 648, 0, 649, 0, 400,
	401, 0, 650, 0, 402, 403, 404, 0, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 0, 416, 417, 0, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 0, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 0, 462, 452, 0, 272, 0, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 0,
	476, 0, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 0, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 0, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 267, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 0, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 2047, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 272, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 0, 616, 615, 617, 674, 883,
	618, 267, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 0, 0, 0, 0, 0, 0, 0, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 282, 283,
	0, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 298, 630, 631, 632, 0,
	299, 300, 633, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 0, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 0, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 0, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 644, 645, 646, 466, 0, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 0, 395, 396,
	397, 399, 0, 0, 398, 647, 648, 0, 649, 882,
	400, 401, 0, 650, 0, 402, 403, 404, 0, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 0, 416, 417, 0,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 0,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 0, 462, 452, 0, 0, 0, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	0, 476, 0, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 0, 528, 529, 530, 531, 532, 661, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	0, 555, 556, 538, 539, 557, 558, 0, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 0, 579,
	570, 881, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 669, 596, 670, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 267, 616, 615, 617, 674, 0, 618,
	0, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	273, 275, 274, 276, 277, 278, 279, 0, 280, 281,
	0, 0, 0, 0, 0, 624, 0, 0, 0, 0,
	282, 283, 0, 284, 285, 286, 287, 288, 289, 625,
	626, 0, 290, 627, 291, 628, 0, 629, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 298, 630, 631,
	632, 0, 299, 300, 633, 0, 0, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 0, 323, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 0, 331, 634, 635, 0, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	342, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 636, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 637, 638, 362, 0, 3056, 0, 0,
	0, 0, 0, 363, 364, 365, 639, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 0, 369, 370, 371,
	640, 641, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 642, 0, 643, 382, 0, 383, 384,
	385, 386, 387, 644, 645, 646, 466, 0, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 0,
	395, 396, 397, 399, 0, 0, 398, 647, 648, 0,
	649, 0, 400, 401, 0, 650, 0, 402, 403, 404,
	0, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 651, 0, 416,
	417, 0, 0, 418, 0, 0, 0, 419, 420, 423,
	0, 0, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 0, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 0, 462, 452, 0, 0, 0,
	463, 464, 0, 652, 465, 653, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 0, 476, 0, 655, 477, 478, 470, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 658, 495,
	659, 496, 497, 4192, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 660, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 0, 528, 529, 530, 531, 532,
	661, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 0, 555, 556, 538, 539, 557, 558, 0,
	559, 560, 561, 562, 563, 564, 565, 662, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 663,
	573, 574, 575, 576, 664, 580, 581, 0, 582, 583,
	0, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 665, 666, 667, 668, 0,
	601, 0, 593, 594, 595, 669, 596, 670, 0, 597,
	598, 599, 600, 0, 602, 603, 0, 0, 604, 605,
	606, 608, 609, 607, 610, 0, 611, 0, 0, 612,
	613, 614, 671, 672, 673, 0, 616, 615, 617, 674,
	761, 618, 267, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 0, 0, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 1338, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 1336,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 0, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 644, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 0, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 766,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 0, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 765,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 1339,
	554, 0, 555, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 763, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 0, 616, 615, 617, 674, 761,
	618, 267, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 0, 0, 0, 0, 0, 0, 0, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 282, 283,
	1338, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 298, 630, 631, 1336, 0,
	299, 300, 633, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 0, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 0, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 0, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 644, 645, 646, 466, 0, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 0, 395, 396,
	397, 399, 0, 0, 398, 647, 648, 0, 649, 0,
	400, 401, 0, 650, 0, 402, 403, 404, 0, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 0, 416, 417, 0,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 766, 0,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 0, 462, 452, 0, 0, 0, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	0, 476, 0, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 0, 528, 529, 530, 531, 532, 661, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 765, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 1339, 554,
	0, 555, 556, 538, 539, 557, 558, 0, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 763, 666, 667, 668, 0, 601, 0,
	593, 1337, 595, 669, 596, 670, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 0, 616, 615, 617, 674, 686, 618,
	267, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	0, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 685, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 282, 283, 0,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 0, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 0, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 0, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	644, 645, 646, 466, 0, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 0, 395, 396, 397,
	399, 0, 0, 398, 647, 648, 0, 649, 0, 400,
	401, 0, 650, 0, 402, 403, 404, 0, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 0, 416, 417, 0, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 0, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 0, 462, 452, 0, 0, 0, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 0,
	476, 0, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 684, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 0, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 0, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 0, 616, 615, 617, 674, 0, 618, 267,
	3043, 0, 0, 619, 620, 675, 621, 622, 623, 0,
	0, 0, 0, 0, 0, 0, 273, 275, 274, 276,
	277, 278, 279, 0, 280, 281, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 282, 283, 0, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 298, 630, 631, 632, 0, 299, 300,
	633, 0, 0, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 0, 323, 324, 325, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 0, 0, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 0, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 642,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 644,
	645, 646, 466, 0, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 0, 395, 396, 397, 399,
	0, 0, 398, 647, 648, 0, 649, 0, 400, 401,
	0, 650, 0, 402, 403, 404, 0, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 651, 0, 416, 417, 0, 0, 418,
	0, 0, 0, 419, 420, 423, 0, 0, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 0, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	0, 462, 452, 0, 0, 0, 463, 464, 0, 652,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 0, 476,
	0, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	0, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 0, 555,
	556, 538, 539, 557, 558, 0, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 0, 582, 583, 0, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 665, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 669, 596, 670, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 0, 611, 0, 0, 612, 613, 614, 671, 672,
	673, 0, 616, 615, 617, 674, 0, 618, 267, 4202,
	0, 0, 619, 620, 675, 621, 622, 623, 0, 0,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 0, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	0, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 0, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 0, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 644, 645,
	646, 466, 0, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 0, 395, 396, 397, 399, 0,
	0, 398, 647, 648, 0, 649, 0, 400, 401, 0,
	650, 0, 402, 403, 404, 0, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 0, 416, 417, 0, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 0, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 0,
	462, 452, 0, 0, 0, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 0, 476, 0,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 0,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 0, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	267, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 282, 283, 0,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 0, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 0, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 0, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	644, 645, 646, 466, 0, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 0, 395, 396, 397,
	399, 0, 0, 398, 647, 648, 0, 649, 0, 400,
	401, 0, 650, 0, 402, 403, 404, 0, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 0, 416, 417, 0, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 0, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 0, 462, 452, 0, 0, 0, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 0,
	476, 0, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	4477, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 0, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 0, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 267, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 0, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 0, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 644, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 0, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 0, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 4096, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 267, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 3863, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 0, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 644, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	0, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 0,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 267, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	2724, 0, 0, 282, 283, 0, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 0, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 329, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	0, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 0,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 644, 645, 646, 466,
	0, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 0, 395, 396, 397, 399, 0, 0, 398,
	647, 648, 0, 649, 0, 400, 401, 0, 650, 0,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 0, 416, 417, 0, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 0, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 0, 462, 452,
	0, 0, 0, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 0, 476, 0, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 0, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 0, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 0, 616,
	615, 617, 674, 0, 618, 267, 3043, 0, 0, 619,
	620, 675, 621, 622, 623, 0, 0, 0, 0, 0,
	0, 0, 273, 275, 274, 276, 277, 278, 279, 0,
	280, 281, 0, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 282, 283, 0, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 0, 629,
	292, 293, 294, 295, 296, 297, 0, 0, 0, 298,
	630, 631, 632, 0, 299, 300, 633, 0, 0, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 0, 323, 324,
	325, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 342, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 0, 0,
	0, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 0, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 642, 0, 643, 382, 0,
	383, 384, 385, 386, 387, 644, 645, 646, 466, 0,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 0, 395, 396, 397, 399, 0, 0, 398, 647,
	648, 0, 649, 0, 400, 401, 0, 650, 0, 402,
	403, 404, 0, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 651,
	0, 416, 417, 0, 0, 418, 0, 0, 0, 419,
	420, 423, 0, 0, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 0, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 0, 462, 452, 0,
	0, 0, 463, 464, 0, 652, 465, 653, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 3040, 0,
	0, 474, 475, 654, 0, 476, 0, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 0, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 0, 555, 556, 538, 539, 557,
	558, 0, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 0,
	582, 583, 0, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 665, 666, 667,
	668, 0, 601, 0, 593, 594, 595, 669, 596, 670,
	0, 597, 598, 599, 600, 0, 602, 603, 0, 0,
	604, 605, 606, 608, 609, 607, 610, 0, 611, 0,
	0, 612, 613, 614, 671, 672, 673, 267, 616, 615,
	617, 674, 0, 618, 0, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 273, 275, 274, 276, 277, 278,
	279, 2307, 280, 281, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 282, 283, 0, 284, 285, 286,
	287, 288, 289, 625, 626, 0, 290, 627, 291, 628,
	0, 629, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 298, 630, 631, 632, 0, 299, 300, 633, 0,
	0, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 0,
	323, 324, 325, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 329, 330, 0, 331, 634, 635, 0,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 342, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 636, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 637, 638, 362,
	0, 0, 0, 0, 0, 0, 0, 363, 364, 365,
	639, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	0, 369, 370, 371, 640, 641, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 642, 0, 643,
	382, 0, 383, 384, 385, 386, 387, 644, 645, 646,
	466, 0, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 0, 395, 396, 397, 399, 0, 0,
	398, 647, 648, 0, 649, 0, 400, 401, 0, 650,
	0, 402, 403, 404, 0, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 651, 0, 416, 417, 0, 0, 418, 0, 0,
	0, 419, 420, 423, 0, 0, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 0, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 0, 462,
	452, 0, 0, 0, 463, 464, 0, 652, 465, 653,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 0, 476, 0, 655,
	477, 478, 470, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 658, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 660, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 0, 528,
	529, 530, 531, 532, 661, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 0, 555, 556, 538,
	539, 557, 558, 0, 559, 560, 561, 562, 563, 564,
	565, 662, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 663, 573, 574, 575, 576, 664, 580,
	581, 0, 582, 583, 0, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 665,
	666, 667, 668, 0, 601, 0, 593, 594, 595, 669,
	596, 670, 0, 597, 598, 599, 600, 0, 602, 603,
	0, 0, 604, 605, 606, 608, 609, 607, 610, 0,
	611, 0, 0, 612, 613, 614, 671, 672, 673, 0,
	616, 615, 617, 674, 2295, 618, 267, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 0, 0, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 282, 283, 0, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 0, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 329, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	0, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 0,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 644, 645, 646, 466,
	0, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 0, 395, 396, 397, 399, 0, 0, 398,
	647, 648, 0, 649, 0, 400, 401, 0, 650, 0,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 0, 416, 417, 0, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 0, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 0, 462, 452,
	0, 0, 0, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 0, 476, 0, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 0, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 0, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 0, 616,
	615, 617, 674, 761, 618, 267, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 0, 0, 0, 0, 0,
	0, 0, 273, 275, 274, 276, 277, 278, 279, 0,
	280, 281, 0, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 282, 283, 0, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 0, 629,
	292, 293, 294, 295, 296, 297, 0, 0, 0, 298,
	630, 631, 632, 0, 299, 754, 633, 0, 0, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 0, 323, 324,
	325, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 342, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 0, 0,
	0, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 0, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 642, 0, 643, 382, 0,
	383, 384, 385, 386, 387, 644, 645, 646, 466, 0,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 0, 395, 396, 397, 399, 0, 0, 398, 647,
	648, 0, 649, 0, 400, 401, 0, 650, 0, 402,
	403, 404, 0, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 651,
	0, 416, 417, 0, 0, 418, 0, 0, 0, 419,
	420, 423, 0, 0, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 766, 0, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 0, 462, 452, 0,
	0, 0, 463, 464, 0, 652, 465, 653, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 0, 476, 0, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 0, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 765, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 1601, 554, 0, 555, 556, 538, 539, 557,
	558, 0, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 0,
	582, 583, 0, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 763, 666, 667,
	668, 0, 601, 0, 593, 594, 595, 669, 596, 670,
	0, 597, 598, 599, 600, 0, 602, 603, 0, 0,
	604, 605, 606, 608, 609, 607, 610, 0, 611, 0,
	0, 612, 613, 614, 671, 672, 673, 0, 616, 615,
	617, 674, 1574, 618, 267, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 0, 0, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 0, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 1573, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	0, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 0,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 0, 616, 615, 617,
	674, 1558, 618, 267, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 0, 0, 0, 0, 0, 0, 0,
	273, 275, 274, 276, 277, 278, 279, 0, 280, 281,
	0, 0, 0, 0, 0, 624, 0, 0, 0, 0,
	282, 283, 0, 284, 285, 286, 287, 288, 289, 625,
	626, 0, 290, 627, 291, 628, 0, 629, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 298, 630, 631,
	632, 0, 299, 300, 633, 0, 0, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 0, 323, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 0, 331, 634, 635, 0, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	342, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 636, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 637, 638, 362, 0, 0, 0, 0,
	0, 0, 0, 363, 364, 365, 639, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 0, 369, 370, 371,
	640, 641, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 642, 0, 643, 382, 0, 383, 384,
	385, 386, 387, 1556, 645, 646, 466, 0, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 0,
	395, 396, 397, 399, 0, 0, 398, 647, 648, 0,
	649, 0, 400, 401, 0, 650, 0, 402, 403, 404,
	0, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 651, 0, 416,
	417, 0, 0, 418, 0, 0, 0, 419, 420, 423,
	0, 0, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 0, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 0, 462, 452, 0, 0, 0,
	463, 464, 0, 652, 465, 653, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 0, 476, 0, 655, 477, 478, 470, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 658, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 660, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 0, 528, 529, 530, 531, 532,
	661, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 0, 555, 556, 538, 539, 557, 558, 0,
	559, 560, 561, 562, 563, 564, 565, 662, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 663,
	573, 574, 575, 576, 664, 580, 581, 0, 582, 583,
	0, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 665, 666, 667, 668, 0,
	601, 0, 593, 594, 595, 669, 596, 670, 0, 597,
	598, 599, 600, 0, 602, 603, 0, 0, 604, 605,
	606, 608, 609, 607, 610, 0, 611, 0, 0, 612,
	613, 614, 671, 672, 673, 0, 616, 615, 617, 674,
	1551, 618, 267, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 0, 0, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 0, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 0, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 644, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 0, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 0, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 0, 616, 615, 617, 674, 1528,
	618, 267, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 0, 0, 0, 0, 0, 0, 0, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 282, 283,
	0, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 298, 630, 631, 632, 0,
	299, 300, 633, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 0, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 0, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 0, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 1526, 645, 646, 466, 0, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 0, 395, 396,
	397, 399, 0, 0, 398, 647, 648, 0, 649, 0,
	400, 401, 0, 650, 0, 402, 403, 404, 0, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 0, 416, 417, 0,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 0,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 0, 462, 452, 0, 0, 0, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	0, 476, 0, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 0, 528, 529, 530, 531, 532, 661, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	0, 555, 556, 538, 539, 557, 558, 0, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 669, 596, 670, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 0, 616, 615, 617, 674, 1486, 618,
	267, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	0, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 282, 283, 0,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 0, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 0, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 0, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	644, 645, 646, 466, 0, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 0, 395, 396, 397,
	399, 0, 0, 398, 647, 648, 0, 649, 0, 400,
	401, 0, 650, 0, 402, 403, 404, 0, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 0, 416, 417, 0, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 0, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 0, 462, 452, 0, 0, 0, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 0,
	476, 0, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 0, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 0, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 0, 616, 615, 617, 674, 1469, 618, 267,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 0,
	0, 0, 0, 0, 0, 0, 273, 275, 274, 276,
	277, 278, 279, 0, 280, 281, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 282, 283, 0, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 298, 630, 631, 632, 0, 299, 300,
	633, 0, 0, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 0, 323, 324, 325, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 0, 0, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 0, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 642,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 644,
	645, 646, 466, 0, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 0, 395, 396, 397, 399,
	0, 0, 398, 647, 648, 0, 649, 0, 400, 401,
	0, 650, 0, 402, 403, 404, 0, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 651, 0, 416, 417, 0, 0, 418,
	0, 0, 0, 419, 420, 423, 0, 0, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 0, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	0, 462, 452, 0, 0, 0, 463, 464, 0, 652,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 0, 476,
	0, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	0, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 0, 555,
	556, 538, 539, 557, 558, 0, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 0, 582, 583, 0, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 665, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 669, 596, 670, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 0, 611, 0, 0, 612, 613, 614, 671, 672,
	673, 0, 616, 615, 617, 674, 1306, 618, 267, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 0, 0,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 0, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	0, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 0, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 0, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 1305, 645,
	646, 466, 0, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 0, 395, 396, 397, 399, 0,
	0, 398, 647, 648, 0, 649, 0, 400, 401, 0,
	650, 0, 402, 403, 404, 0, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 0, 416, 417, 0, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 0, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 0,
	462, 452, 0, 0, 0, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 0, 476, 0,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 0,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 0, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	0, 616, 615, 617, 674, 1297, 618, 267, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 0, 0, 0,
	0, 0, 0, 0, 273, 275, 274, 276, 277, 278,
	279, 0, 280, 281, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 282, 283, 0, 284, 285, 286,
	287, 288, 289, 625, 626, 0, 290, 627, 291, 628,
	0, 629, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 298, 630, 631, 632, 0, 299, 300, 633, 0,
	0, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 0,
	323, 324, 325, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 329, 330, 0, 331, 634, 635, 0,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 342, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 636, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 637, 638, 362,
	0, 0, 0, 0, 0, 0, 0, 363, 364, 365,
	639, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	0, 369, 370, 371, 640, 641, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 642, 0, 643,
	382, 0, 383, 384, 385, 386, 387, 1296, 645, 646,
	466, 0, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 0, 395, 396, 397, 399, 0, 0,
	398, 647, 648, 0, 649, 0, 400, 401, 0, 650,
	0, 402, 403, 404, 0, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 651, 0, 416, 417, 0, 0, 418, 0, 0,
	0, 419, 420, 423, 0, 0, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 0, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 0, 462,
	452, 0, 0, 0, 463, 464, 0, 652, 465, 653,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 0, 476, 0, 655,
	477, 478, 470, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 658, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 660, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 0, 528,
	529, 530, 531, 532, 661, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 0, 555, 556, 538,
	539, 557, 558, 0, 559, 560, 561, 562, 563, 564,
	565, 662, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 663, 573, 574, 575, 576, 664, 580,
	581, 0, 582, 583, 0, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 665,
	666, 667, 668, 0, 601, 0, 593, 594, 595, 669,
	596, 670, 0, 597, 598, 599, 600, 0, 602, 603,
	0, 0, 604, 605, 606, 608, 609, 607, 610, 0,
	611, 0, 0, 612, 613, 614, 671, 672, 673, 267,
	616, 615, 617, 674, 0, 618, 0, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 273, 275, 274, 276,
	277, 278, 279, 1250, 280, 281, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 282, 283, 0, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 298, 630, 631, 632, 0, 299, 300,
	633, 0, 0, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 0, 323, 324, 325, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 0, 0, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 0, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 642,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 644,
	645, 646, 466, 0, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 0, 395, 396, 397, 399,
	0, 0, 398, 647, 648, 0, 649, 0, 400, 401,
	0, 650, 0, 402, 403, 404, 0, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 651, 0, 416, 417, 0, 0, 418,
	0, 0, 0, 419, 420, 423, 0, 0, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 0, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	0, 462, 452, 0, 0, 0, 463, 464, 0, 652,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 0, 476,
	0, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	0, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 0, 555,
	556, 538, 539, 557, 558, 0, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 0, 582, 583, 0, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 665, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 669, 596, 670, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 0, 611, 0, 0, 612, 613, 614, 671, 672,
	673, 267, 616, 615, 617, 674, 0, 618, 0, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 273, 275,
	274, 276, 277, 278, 279, 771, 280, 281, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 282, 283,
	0, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 298, 630, 631, 632, 0,
	299, 300, 633, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 0, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 0, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 0, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 644, 645, 646, 466, 0, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 0, 395, 396,
	397, 399, 0, 0, 398, 647, 648, 0, 649, 0,
	400, 401, 0, 650, 0, 402, 403, 404, 0, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 0, 416, 417, 0,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 0,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 0, 462, 452, 0, 0, 0, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	0, 476, 0, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 0, 528, 529, 530, 531, 532, 661, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	0, 555, 556, 538, 539, 557, 558, 0, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 669, 596, 670, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 0, 616, 615, 617, 674, 761, 618,
	267, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	0, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 282, 283, 0,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	754, 633, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	752, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 0, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 0, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 0, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	644, 645, 646, 466, 0, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 0, 395, 396, 397,
	399, 0, 0, 398, 647, 648, 0, 649, 0, 400,
	401, 0, 650, 0, 402, 403, 404, 0, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 0, 416, 417, 0, 0,
	418, 0, 0, 0, 419, 753, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 766, 0, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 0, 462, 452, 0, 0, 0, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 0,
	476, 0, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 0, 528, 529, 530, 531, 532, 755, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 765, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 756, 554, 0,
	555, 556, 538, 539, 557, 558, 0, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 763, 666, 667, 668, 0, 601, 0, 593,
	758, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 0, 616, 615, 617, 674, 746, 618, 267,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 0,
	0, 0, 0, 0, 0, 0, 273, 275, 274, 276,
	277, 278, 279, 0, 280, 281, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 282, 283, 0, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 298, 630, 631, 632, 0, 299, 300,
	633, 0, 0, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 0, 323, 324, 325, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 0, 0, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 0, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 642,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 644,
	645, 646, 466, 0, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 0, 395, 396, 397, 399,
	0, 0, 398, 647, 648, 0, 649, 0, 400, 401,
	0, 650, 0, 402, 403, 404, 0, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 651, 0, 416, 417, 0, 0, 418,
	0, 0, 0, 419, 420, 423, 0, 0, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 0, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	0, 462, 452, 0, 0, 0, 463, 464, 0, 652,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 0, 476,
	0, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	0, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 747, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 0, 555,
	556, 538, 539, 557, 558, 0, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 0, 582, 583, 0, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 665, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 669, 596, 670, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 0, 611, 0, 0, 612, 613, 614, 671, 672,
	673, 0, 616, 615, 617, 674, 709, 618, 267, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 0, 0,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 0, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	0, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 0, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 0, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 644, 645,
	646, 466, 0, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 0, 395, 396, 397, 399, 0,
	0, 398, 647, 648, 0, 649, 0, 400, 401, 0,
	650, 0, 402, 403, 404, 0, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 0, 416, 417, 0, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 0, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 0,
	462, 452, 0, 0, 0, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 0, 476, 0,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 0,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 0, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	0, 616, 615, 617, 674, 703, 618, 267, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 0, 0, 0,
	0, 0, 0, 0, 273, 275, 274, 276, 277, 278,
	279, 0, 280, 281, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 282, 283, 0, 284, 285, 286,
	287, 288, 289, 625, 626, 0, 290, 627, 291, 628,
	0, 629, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 298, 630, 631, 632, 0, 299, 300, 633, 0,
	0, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 0,
	323, 324, 325, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 329, 330, 0, 331, 634, 635, 0,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 342, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 636, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 637, 638, 362,
	0, 0, 0, 0, 0, 0, 0, 363, 364, 365,
	639, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	0, 369, 370, 371, 640, 641, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 642, 0, 643,
	382, 0, 383, 384, 385, 386, 387, 644, 645, 646,
	466, 0, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 0, 395, 396, 397, 399, 0, 0,
	398, 647, 648, 0, 649, 0, 400, 401, 0, 650,
	0, 402, 403, 404, 0, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 651, 0, 416, 417, 0, 0, 418, 0, 0,
	0, 419, 420, 423, 0, 0, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 0, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 0, 462,
	452, 0, 0, 0, 463, 464, 0, 652, 465, 653,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 0, 476, 0, 655,
	477, 478, 470, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 658, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 660, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 0, 528,
	529, 530, 531, 532, 661, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 0, 555, 556, 538,
	539, 557, 558, 0, 559, 560, 561, 562, 563, 564,
	565, 662, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 663, 573, 574, 575, 576, 664, 580,
	581, 0, 582, 583, 0, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 665,
	666, 667, 668, 0, 601, 0, 593, 594, 595, 669,
	596, 670, 0, 597, 598, 599, 600, 0, 602, 603,
	0, 0, 604, 605, 606, 608, 609, 607, 610, 0,
	611, 0, 0, 612, 613, 614, 671, 672, 673, 0,
	616, 615, 617, 674, 681, 618, 267, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 0, 0, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 282, 283, 0, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 0, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 329, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	0, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 0,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 644, 645, 646, 466,
	0, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 0, 395, 396, 397, 399, 0, 0, 398,
	647, 648, 0, 649, 0, 400, 401, 0, 650, 0,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 0, 416, 417, 0, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 0, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 0, 462, 452,
	0, 0, 0, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 0, 476, 0, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 0, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 0, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 267, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 0, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	0, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 0, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 0, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 644, 645,
	646, 466, 0, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 0, 395, 396, 397, 399, 0,
	0, 398, 647, 648, 0, 649, 0, 400, 401, 0,
	650, 0, 402, 403, 404, 0, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 0, 416, 417, 0, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 0, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 0,
	462, 452, 0, 0, 0, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 0, 476, 0,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 0,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 0, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	267, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 282, 283, 0,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 0, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 0, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 0, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	3565, 645, 646, 466, 0, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 0, 395, 396, 397,
	399, 0, 0, 398, 647, 648, 0, 649, 0, 400,
	401, 0, 650, 0, 402, 403, 404, 0, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 0, 416, 417, 0, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 0, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 0, 462, 452, 0, 0, 0, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 0,
	476, 0, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 0, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 0, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 267, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 0, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 0, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 644, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 0, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 0, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 765,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 763, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 267, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 0, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 3491, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	0, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 0,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 267, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 282, 283, 0, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 0, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 329, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	0, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 0,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 3469, 645, 646, 466,
	0, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 0, 395, 396, 397, 399, 0, 0, 398,
	647, 648, 0, 649, 0, 400, 401, 0, 650, 0,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 0, 416, 417, 0, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 0, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 0, 462, 452,
	0, 0, 0, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 0, 476, 0, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 0, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 0, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 267, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 0, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	0, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 0, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 0, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 3466, 645,
	646, 466, 0, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 0, 395, 396, 397, 399, 0,
	0, 398, 647, 648, 0, 649, 0, 400, 401, 0,
	650, 0, 402, 403, 404, 0, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 0, 416, 417, 0, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 0, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 0,
	462, 452, 0, 0, 0, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 0, 476, 0,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 0,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 0, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	267, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 282, 283, 0,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 0, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 0, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 0, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	3418, 645, 646, 466, 0, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 0, 395, 396, 397,
	399, 0, 0, 398, 647, 648, 0, 649, 0, 400,
	401, 0, 650, 0, 402, 403, 404, 0, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 0, 416, 417, 0, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 0, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 0, 462, 452, 0, 0, 0, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 0,
	476, 0, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 0, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 0, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 267, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 0, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 0, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 3416, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 0, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 0, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 267, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 0, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 3401, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	0, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 0,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 267, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 282, 283, 0, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 0, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 329, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	0, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 0,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 3011, 645, 646, 466,
	0, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 0, 395, 396, 397, 399, 0, 0, 398,
	647, 648, 0, 649, 0, 400, 401, 0, 650, 0,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 0, 416, 417, 0, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 0, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 0, 462, 452,
	0, 0, 0, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 0, 476, 0, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 0, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 0, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 267, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 0, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	0, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 0, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 0, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 644, 645,
	646, 466, 0, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 0, 395, 396, 397, 399, 0,
	0, 398, 647, 648, 0, 649, 0, 400, 401, 0,
	650, 0, 402, 403, 404, 0, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 0, 416, 417, 0, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 0, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 0,
	462, 452, 0, 0, 0, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 0, 476, 0,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 0,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	747, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 0, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	267, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 2269, 0, 0, 282, 283, 0,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 0, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 0, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 0, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	644, 645, 646, 466, 0, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 0, 395, 396, 397,
	399, 0, 0, 398, 647, 648, 0, 649, 0, 400,
	401, 0, 650, 0, 402, 403, 404, 0, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 0, 416, 417, 0, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 0, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 0, 462, 452, 0, 0, 0, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 0,
	476, 0, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 0, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	0, 556, 538, 539, 557, 558, 0, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 267, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 0, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 0, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 1268, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 0, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 0, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 267, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 0, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 644, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	0, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 0,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 1201, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 267, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 282, 283, 0, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 0, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 329, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	0, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 0,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 0,
	0, 383, 384, 385, 386, 387, 644, 645, 646, 466,
	0, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 0, 395, 396, 397, 399, 0, 0, 398,
	647, 648, 0, 649, 0, 400, 401, 0, 650, 0,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 0, 416, 417, 0, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 0, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 0, 462, 452,
	0, 0, 0, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 0, 476, 0, 655, 477,
	478, 470, 479, 480, 0, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 0, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 0, 528, 529,
	530, 531, 532, 661, 0, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 0, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 0, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 1769, 1770, 0, 1802, 1803,
	1804, 1813, 1814, 1815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 1800, 0,
	0, 0, 0, 0, 0, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	1771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1791, 0, 0, 0, 0, 0, 0, 0, 0, 1788,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1769, 1770, 0, 1802, 1803, 1804, 1813,
	1814, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 1800, 0, 0, 0,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1825,
	0, 0, 0, 0, 1794, 1795, 1796, 1797, 1771, 0,
	0, 0, 0, 0, 1777, 0, 0, 0, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 1788, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 1769, 1770, 1820, 1802, 1803, 1804, 1813,
	1814, 1815, 1799, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 1800, 0, 0, 1816,
	0, 1817, 0, 1772, 0, 0, 0, 0, 1786, 1787,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1794, 1795, 1796, 1797, 1808, 0, 0, 1825,
	0, 0, 1777, 0, 0, 0, 0, 0, 1771, 0,
	0, 1792, 0, 0, 0, 0, 0, 0, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 1788, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 1820, 0, 0, 0, 0, 0, 0,
	1799, 1801, 0, 0, 1818, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1816, 0, 1817,
	0, 0, 1807, 0, 0, 0, 1786, 1787, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1808, 0, 0, 0, 0, 0,
	0, 0, 1794, 1795, 1796, 1797, 0, 0, 0, 1792,
	0, 0, 1777, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 1818, 1820, 0, 0, 0, 1793, 0, 0,
	1799, 1801, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 1816, 0, 1817,
	0, 1822, 0, 0, 1811, 0, 1786, 1787, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1769, 1770, 1808, 1802, 1803, 1804, 1813, 1814,
	1815, 0, 0, 0, 0, 1824, 0, 0, 0, 1792,
	0, 0, 0, 0, 1806, 1800, 0, 0, 0, 0,
	0, 0, 1772, 1798, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 1825, 0,
	0, 0, 1818, 0, 0, 0, 0, 1771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 0, 0,
	1807, 0, 1811, 0, 0, 0, 1788, 1809, 0, 0,
	0, 1822, 0, 0, 0, 1783, 1784, 1790, 1812, 1789,
	1785, 0, 1782, 1780, 1781, 1773, 1774, 1775, 1776, 1778,
	1779, 0, 0, 1824, 0, 4586, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 1795, 1796, 1797, 1793, 0, 0, 0, 0,
	0, 1777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1809, 0, 0, 0, 0,
	0, 0, 1811, 1783, 1784, 1790, 1812, 1789, 1785, 0,
	1782, 1780, 1781, 1773, 1774, 1775, 1776, 1778, 1779, 1810,
	0, 0, 1820, 4582, 0, 0, 0, 0, 0, 1799,
	1801, 0, 0, 1824, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1816, 0, 1817, 0,
	0, 0, 0, 0, 0, 1786, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1808, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1809, 0, 0, 0, 0,
	0, 0, 0, 1783, 1784, 1790, 1812, 1789, 1785, 0,
	1782, 1780, 1781, 1773, 1774, 1775, 1776, 1778, 1779, 0,
	0, 1818, 0, 4498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1769, 1770, 0, 1802, 1803, 1804, 1813, 1814, 1815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 1800, 0, 0, 0, 0, 0,
	0, 1772, 1798, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1793, 0, 0, 1825, 0, 0,
	0, 0, 0, 0, 0, 0, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1791, 0, 0, 0,
	0, 1811, 0, 0, 0, 1788, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1769,
	1770, 0, 1802, 1803, 1804, 1813, 1814, 1815, 0, 0,
	0, 0, 1824, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 1800, 0, 0, 0, 0, 0, 0, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1825, 0, 0, 0, 0,
	1794, 1795, 1796, 1797, 1771, 0, 0, 0, 0, 0,
	1777, 0, 0, 0, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 1788, 1809, 0, 0, 0, 0, 0,
	0, 0, 1783, 1784, 1790, 1812, 1789, 1785, 0, 1782,
	1780, 1781, 1773, 1774, 1775, 1776, 1778, 1779, 1810, 0,
	0, 1820, 4461, 0, 0, 0, 0, 0, 1799, 1801,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 0, 1817, 0, 0,
	0, 0, 0, 0, 1786, 1787, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1794, 1795,
	1796, 1797, 1808, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 0, 0, 0, 0, 1792, 0, 0,
	1769, 1770, 0, 1802, 1803, 1804, 1813, 1814, 1815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 1800, 0, 0, 1810, 0, 0, 1820,
	1772, 0, 0, 0, 0, 0, 1799, 1801, 0, 1819,
	1818, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1816, 0, 1817, 1825, 0, 1807, 0,
	0, 0, 1786, 1787, 0, 1771, 0, 0, 0, 1822,
	0, 0, 0, 0, 0, 1791, 0, 0, 0, 0,
	1808, 0, 0, 0, 1788, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1792, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1798, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 0,
	0, 0, 0, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1807, 0, 0, 1794,
	1795, 1796, 1797, 0, 0, 0, 0, 1822, 0, 1777,
	1811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1769, 1770, 0, 1802, 1803, 1804, 1813, 1814, 1815,
	0, 1824, 0, 0, 0, 0, 0, 1810, 0, 0,
	1820, 0, 0, 1806, 1800, 0, 0, 1799, 1801, 1798,
	0, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 0, 0, 1816, 0, 1817, 0, 0, 0,
	0, 1793, 0, 1786, 1787, 0, 0, 1825, 0, 0,
	0, 0, 0, 0, 0, 0, 1771, 0, 0, 0,
	0, 1808, 0, 0, 0, 0, 1791, 0, 1811, 0,
	0, 0, 0, 1809, 0, 1788, 1792, 0, 0, 0,
	0, 1783, 1784, 1790, 1812, 1789, 1785, 0, 1782, 1780,
	1781, 1773, 1774, 1775, 1776, 1778, 1779, 0, 0, 1824,
	0, 4460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1822, 0,
	1794, 1795, 1796, 1797, 0, 0, 0, 0, 0, 0,
	1777, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 0, 0, 0, 0, 0, 1783,
	1784, 1790, 1812, 1789, 1785, 0, 1782, 1780, 1781, 1773,
	1774, 1775, 1776, 1778, 1779, 0, 0, 0, 1810, 4277,
	1798, 1820, 0, 0, 0, 0, 0, 0, 1799, 1801,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1793, 0, 0, 1816, 0, 1817, 0, 0,
	0, 0, 0, 0, 1786, 1787, 0, 0, 1769, 1770,
	0, 1802, 1803, 1804, 1813, 1814, 1815, 0, 0, 1811,
	0, 0, 1808, 0, 0, 0, 0, 0, 0, 0,
	1806, 1800, 0, 0, 0, 0, 0, 1792, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 0, 0,
	1824, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1825, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 0, 0, 0, 0, 0, 0,
	1818, 0, 0, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 1788, 0, 0, 0, 0, 0, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1809, 0, 0, 0, 0, 0, 0, 0,
	1783, 1784, 1790, 1812, 1789, 1785, 0, 1782, 1780, 1781,
	1773, 1774, 1775, 1776, 1778, 1779, 0, 0, 0, 0,
	4115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1798, 0, 0, 0, 0, 0, 1794, 1795, 1796,
	1797, 0, 0, 0, 0, 0, 0, 1777, 0, 0,
	0, 0, 0, 1793, 0, 0, 0, 0, 0, 1769,
	1770, 0, 1802, 1803, 1804, 1813, 1814, 1815, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 1806, 1800, 0, 0, 1810, 0, 0, 1820, 1772,
	0, 0, 0, 0, 0, 1799, 1801, 0, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1816, 0, 1817, 1825, 0, 0, 0, 0,
	0, 1786, 1787, 0, 1771, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 0, 0, 0, 0, 1808,
	0, 0, 0, 1788, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1809, 0, 0, 0, 0, 0, 0,
	0, 1783, 1784, 1790, 1812, 1789, 1785, 1818, 1782, 1780,
	1781, 1773, 1774, 1775, 1776, 1778, 1779, 0, 0, 0,
	0, 4049, 0, 0, 0, 1807, 0, 0, 1794, 1795,
	1796, 1797, 0, 0, 0, 0, 1822, 0, 1777, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1769, 1770, 0, 1802, 1803, 1804, 1813, 1814, 1815, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 1820,
	0, 0, 1806, 1800, 0, 0, 1799, 1801, 1798, 0,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	0, 0, 0, 1816, 0, 1817, 0, 0, 0, 0,
	1793, 0, 1786, 1787, 0, 0, 1825, 0, 0, 0,
	0, 0, 0, 0, 0, 1771, 0, 0, 0, 0,
	1808, 0, 0, 0, 0, 1791, 0, 1811, 0, 0,
	0, 0, 0, 0, 1788, 1792, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 1794,
	1795, 1796, 1797, 0, 0, 0, 0, 0, 0, 1777,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1809, 0, 0, 0, 0, 0, 0, 0, 1783, 1784,
	1790, 1812, 1789, 1785, 0, 1782, 1780, 1781, 1773, 1774,
	1775, 1776, 1778, 1779, 0, 0, 0, 1810, 4048, 1798,
	1820, 0, 0, 0, 0, 0, 0, 1799, 1801, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1793, 0, 0, 1816, 0, 1817, 0, 0, 0,
	0, 0, 0, 1786, 1787, 0, 0, 1769, 1770, 0,
	1802, 1803, 1804, 1813, 1814, 1815, 0, 0, 1811, 0,
	0, 1808, 0, 0, 0, 0, 0, 0, 0, 1806,
	1800, 0, 0, 0, 0, 0, 1792, 1772, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 0, 0, 1824,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 1771, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 1791, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 0, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1822, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 0, 0, 0, 0, 0, 1783,
	1784, 1790, 1812, 1789, 1785, 0, 1782, 1780, 1781, 1773,
	1774, 1775, 1776, 1778, 1779, 0, 0, 0, 0, 4047,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1798, 0, 0, 0, 0, 0, 1794, 1795, 1796, 1797,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 0,
	0, 0, 1793, 0, 0, 0, 0, 0, 1769, 1770,
	0, 1802, 1803, 1804, 1813, 1814, 1815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1811,
	1806, 1800, 0, 0, 1810, 0, 0, 1820, 1772, 0,
	0, 0, 0, 0, 1799, 1801, 0, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 1816, 0, 1817, 1825, 0, 0, 0, 0, 0,
	1786, 1787, 0, 1771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 0, 1808, 0,
	0, 0, 1788, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1809, 0, 0, 0, 0, 0, 0, 0,
	1783, 1784, 1790, 1812, 1789, 1785, 1818, 1782, 1780, 1781,
	1773, 1774, 1775, 1776, 1778, 1779, 0, 0, 0, 0,
	3709, 0, 0, 0, 1807, 0, 0, 1794, 1795, 1796,
	1797, 0, 0, 0, 0, 1822, 0, 1777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1769,
	1770, 0, 1802, 1803, 1804, 1813, 1814, 1815, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 1820, 0,
	0, 1806, 1800, 0, 0, 1799, 1801, 1798, 0, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 1816, 0, 1817, 0, 0, 0, 0, 1793,
	0, 1786, 1787, 0, 0, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 1771, 0, 0, 0, 0, 1808,
	0, 0, 0, 0, 1791, 0, 1811, 0, 0, 0,
	0, 0, 0, 1788, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1822, 0, 1794, 1795,
	1796, 1797, 0, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1809,
	0, 0, 0, 0, 0, 0, 0, 1783, 1784, 1790,
	1812, 1789, 1785, 0, 1782, 1780, 1781, 1773, 1774, 1775,
	1776, 1778, 1779, 0, 0, 0, 1810, 3215, 1798, 1820,
	0, 0, 0, 0, 0, 0, 1799, 1801, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 0, 0, 1816, 0, 1817, 0, 0, 0, 0,
	0, 0, 1786, 1787, 0, 0, 1769, 1770, 0, 1802,
	1803, 1804, 1813, 1814, 1815, 0, 0, 1811, 0, 0,
	1808, 0, 0, 0, 0, 0, 0, 0, 1806, 1800,
	0, 0, 0, 0, 0, 1792, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 0, 0, 1824, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1825, 0, 0, 0, 0, 0, 0, 0,
	0, 1771, 0, 0, 0, 0, 0, 0, 1818, 0,
	0, 1791, 0, 0, 0, 0, 0, 0, 0, 0,
	1788, 0, 0, 0, 0, 0, 1807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1809, 0, 0, 0, 0, 0, 0, 0, 1783, 1784,
	1790, 1812, 1789, 1785, 0, 1782, 1780, 1781, 1773, 1774,
	1775, 1776, 1778, 1779, 0, 0, 0, 0, 3214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	0, 0, 0, 0, 0, 1794, 1795, 1796, 1797, 0,
	0, 0, 0, 0, 0, 1777, 0, 0, 0, 0,
	0, 1793, 0, 0, 0, 0, 0, 1769, 1770, 0,
	1802, 1803, 1804, 1813, 1814, 1815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 1806,
	1800, 0, 0, 1810, 0, 0, 1820, 1772, 0, 0,
	0, 0, 0, 1799, 1801, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	1816, 0, 1817, 1825, 0, 0, 0, 0, 0, 1786,
	1787, 0, 1771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 0, 0, 0, 0, 1808, 0, 0,
	0, 1788, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 0, 0, 0, 0, 0, 1783,
	1784, 1790, 1812, 1789, 1785, 1818, 1782, 1780, 1781, 1773,
	1774, 1775, 1776, 1778, 1779, 0, 0, 0, 0, 3213,
	0, 0, 0, 1807, 0, 0, 1794, 1795, 1796, 1797,
	0, 0, 0, 0, 1822, 0, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 1769, 1770, 1820, 1802, 1803,
	1804, 1813, 1814, 1815, 1799, 1801, 1798, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 1800, 0,
	0, 1816, 0, 1817, 0, 1772, 0, 0, 1793, 0,
	1786, 1787, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1808, 0,
	0, 1825, 0, 0, 0, 1811, 0, 0, 0, 0,
	1771, 0, 0, 1792, 0, 0, 0, 0, 0, 0,
	1791, 0, 0, 0, 0, 0, 0, 0, 0, 1788,
	0, 0, 0, 0, 0, 0, 1824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1794, 1795, 1796, 1797, 1809, 0,
	0, 0, 0, 0, 1777, 4730, 1783, 1784, 1790, 1812,
	1789, 1785, 0, 1782, 1780, 1781, 1773, 1774, 1775, 1776,
	1778, 1779, 0, 0, 0, 0, 3212, 1798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 1820, 0, 0, 0, 1793,
	0, 0, 1799, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1816,
	0, 1817, 0, 0, 0, 0, 1811, 0, 1786, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1769, 1770, 1808, 1802, 1803, 1804,
	1813, 1814, 1815, 0, 0, 0, 0, 1824, 0, 0,
	0, 1792, 0, 0, 0, 0, 1806, 1800, 0, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1825, 0, 0, 0, 1818, 0, 0, 0, 0, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1791,
	0, 0, 1807, 0, 0, 0, 0, 0, 1788, 1809,
	0, 0, 0, 1822, 0, 0, 0, 1783, 1784, 1790,
	1812, 1789, 1785, 0, 1782, 1780, 1781, 1773, 1774, 1775,
	1776, 1778, 1779, 0, 4729, 3177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1769, 1770, 0, 1802, 1803, 1804, 1813, 1814,
	1815, 0, 0, 0, 0, 1798, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 1800, 0, 0, 0, 0,
	3148, 0, 1772, 1794, 1795, 1796, 1797, 1793, 0, 0,
	0, 1819, 0, 1777, 0, 3277, 0, 0, 0, 3276,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 0,
	0, 0, 0, 0, 1811, 0, 0, 1771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 0, 0,
	0, 1810, 0, 0, 1820, 0, 1788, 0, 0, 0,
	0, 1799, 1801, 0, 0, 1824, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	1817, 0, 0, 0, 0, 0, 0, 1786, 1787, 0,
	0, 0, 0, 0, 0, 3149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 1795, 1796, 1797, 0, 0, 1809, 0, 0,
	0, 1777, 0, 0, 0, 1783, 1784, 1790, 1812, 1789,
	1785, 0, 1782, 1780, 1781, 1773, 1774, 1775, 1776, 1778,
	1779, 0, 0, 1818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	0, 1807, 1820, 0, 0, 0, 0, 0, 0, 1799,
	1801, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1816, 0, 1817, 0,
	0, 0, 2697, 0, 0, 1786, 1787, 0, 0, 1769,
	1770, 0, 1802, 1803, 1804, 1813, 1814, 1815, 0, 0,
	0, 0, 0, 1808, 0, 0, 0, 0, 0, 0,
	0, 1806, 1800, 0, 1798, 0, 2696, 0, 1792, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 0, 0, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 1771, 0, 0, 0, 0, 0,
	0, 1818, 0, 1811, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 1788, 0, 0, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1822, 0, 0, 0, 1824, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 0, 0, 0, 0, 0, 1794, 1795,
	1796, 1797, 0, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 0, 1793, 0, 1809, 0, 0, 0,
	0, 0, 0, 0, 1783, 1784, 1790, 1812, 1789, 1785,
	0, 1782, 1780, 1781, 1773, 1774, 1775, 1776, 1778, 1779,
	0, 1811, 0, 0, 0, 0, 1810, 1769, 1770, 1820,
	1802, 1803, 1804, 1813, 1814, 1815, 1799, 1801, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	1800, 0, 1824, 1816, 0, 1817, 0, 1772, 0, 0,
	0, 0, 1786, 1787, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1808, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 1771, 0, 0, 1792, 0, 0, 0, 0,
	0, 0, 1791, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1809, 0, 0, 0, 0, 0,
	0, 0, 1783, 1784, 1790, 1812, 1789, 1785, 1818, 1782,
	1780, 1781, 1773, 1774, 1775, 1776, 1778, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 1807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1794, 1795, 1796, 1797,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1769, 1770,
	0, 1802, 1803, 1804, 1813, 1814, 1815, 0, 0, 1798,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 1800, 0, 0, 1810, 0, 0, 1820, 1772, 0,
	0, 1793, 0, 0, 1799, 1801, 0, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1816, 0, 1817, 1825, 0, 0, 0, 1811, 0,
	1786, 1787, 0, 1771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 0, 1808, 0,
	0, 0, 1788, 0, 0, 0, 0, 0, 0, 1824,
	0, 0, 0, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 1055, 0, 1794, 1795, 1796,
	1797, 1809, 0, 0, 0, 1822, 0, 1777, 0, 1783,
	1784, 1790, 1812, 1789, 1785, 0, 1782, 1780, 1781, 1773,
	1774, 1775, 1776, 1778, 1779, 0, 0, 0, 0, 1769,
	1770, 0, 1802, 1803, 1804, 1813, 1814, 1815, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 1820, 0,
	0, 1806, 1800, 0, 0, 1799, 1801, 1798, 0, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 1816, 0, 1817, 0, 0, 0, 0, 1793,
	0, 1786, 1787, 0, 0, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 1771, 0, 0, 0, 0, 1808,
	0, 0, 0, 0, 1791, 0, 1811, 0, 0, 0,
	0, 0, 0, 1788, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1822, 0, 1794, 1795,
	1796, 1797, 0, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 0, 3283, 0, 0, 0, 0, 1809,
	0, 0, 0, 0, 0, 0, 0, 1783, 1784, 1790,
	1812, 1789, 1785, 0, 1782, 1780, 1781, 1773, 1774, 1775,
	1776, 1778, 1779, 0, 0, 0, 1810, 0, 1798, 1820,
	0, 0, 0, 0, 0, 0, 1799, 1801, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 0, 0, 1816, 0, 1817, 0, 0, 0, 0,
	0, 0, 1786, 1787, 0, 0, 1769, 1770, 0, 1802,
	1803, 1804, 1813, 1814, 1815, 0, 0, 1811, 0, 0,
	1808, 0, 0, 0, 0, 0, 0, 0, 1806, 1800,
	0, 0, 0, 3278, 0, 1792, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 0, 0, 1824, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3690, 1825, 0, 0, 0, 0, 0, 0, 0,
	0, 1771, 0, 0, 0, 0, 0, 0, 1818, 0,
	0, 1791, 0, 0, 0, 0, 0, 0, 0, 0,
	1788, 0, 0, 0, 0, 0, 1807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1809, 0, 0, 0, 0, 0, 0, 0, 1783, 1784,
	1790, 1812, 1789, 1785, 0, 1782, 1780, 1781, 1773, 1774,
	1775, 1776, 1778, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	0, 0, 0, 0, 0, 1794, 1795, 1796, 1797, 0,
	0, 0, 0, 0, 0, 1777, 0, 0, 0, 0,
	0, 1793, 0, 0, 0, 0, 0, 1769, 1770, 0,
	1802, 1803, 1804, 1813, 1814, 1815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 1806,
	1800, 0, 0, 1810, 0, 0, 1820, 1772, 0, 0,
	0, 0, 0, 1799, 1801, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	1816, 0, 1817, 1825, 0, 0, 0, 0, 0, 1786,
	1787, 0, 1771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 0, 0, 0, 0, 1808, 0, 0,
	0, 1788, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 0, 0, 0, 0, 0, 1783,
	1784, 1790, 1812, 1789, 1785, 1818, 1782, 1780, 1781, 1773,
	1774, 1775, 1776, 1778, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 0, 0, 1794, 1795, 1796, 1797,
	0, 0, 0, 0, 1822, 0, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 1769, 1770, 1820, 1802, 1803,
	1804, 1813, 1814, 1815, 1799, 1801, 1798, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 1800, 0,
	0, 1816, 3216, 1817, 0, 1772, 0, 0, 1793, 0,
	1786, 1787, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1808, 0,
	0, 1825, 0, 0, 0, 1811, 0, 0, 0, 0,
	1771, 0, 0, 1792, 0, 0, 0, 0, 0, 0,
	1791, 0, 0, 0, 0, 0, 0, 0, 0, 1788,
	0, 0, 0, 0, 0, 0, 1824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 0, 0, 0,
	0, 0, 0, 0, 3243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1794, 1795, 1796, 1797, 1809, 0,
	0, 0, 0, 0, 1777, 0, 1783, 1784, 1790, 1812,
	1789, 1785, 0, 1782, 1780, 1781, 1773, 1774, 1775, 1776,
	1778, 1779, 0, 0, 0, 0, 0, 1798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 1820, 0, 0, 0, 1793,
	0, 0, 1799, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1816,
	0, 1817, 0, 0, 0, 0, 1811, 0, 1786, 1787,
	0, 0, 1769, 1770, 0, 1802, 1803, 1804, 1813, 1814,
	1815, 0, 0, 0, 0, 0, 1808, 0, 0, 0,
	0, 0, 0, 0, 1806, 1800, 0, 1824, 0, 0,
	0, 1792, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 1771, 0, 0,
	0, 0, 0, 0, 1818, 0, 0, 1791, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 0, 0, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 1809,
	0, 0, 0, 1822, 0, 0, 0, 1783, 1784, 1790,
	1812, 1789, 1785, 0, 1782, 1780, 1781, 1773, 1774, 1775,
	1776, 1778, 1779, 0, 0, 0, 0, 0, 0, 0,
	1769, 1770, 0, 1802, 1803, 1804, 1813, 1814, 1815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 1800, 0, 1798, 0, 0, 0, 0,
	1772, 1794, 1795, 1796, 1797, 0, 0, 0, 0, 1819,
	0, 1777, 0, 0, 0, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 1825, 0, 0, 0,
	0, 0, 0, 1769, 1770, 1771, 1802, 1803, 1804, 1813,
	1814, 1815, 0, 0, 1811, 1791, 0, 0, 0, 1810,
	0, 0, 1820, 0, 1788, 0, 1800, 0, 0, 1799,
	1801, 0, 0, 1772, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 0, 0, 1824, 1816, 0, 1817, 0,
	0, 0, 0, 0, 0, 1786, 1787, 0, 0, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 1771, 0,
	0, 0, 0, 1808, 0, 0, 0, 0, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 1788, 1792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1794,
	1795, 1796, 1797, 0, 0, 0, 0, 0, 0, 1777,
	0, 0, 0, 0, 0, 0, 0, 1809, 0, 0,
	0, 0, 0, 0, 0, 1783, 1784, 1790, 1812, 1789,
	1785, 1818, 1782, 1780, 1781, 1773, 1774, 1775, 1776, 1778,
	1779, 0, 0, 0, 0, 0, 0, 1810, 0, 1807,
	1820, 0, 0, 0, 0, 0, 0, 1799, 1801, 0,
	1822, 0, 1794, 1795, 1796, 1797, 0, 0, 0, 0,
	0, 0, 1777, 0, 1816, 0, 1817, 0, 0, 0,
	0, 0, 0, 1786, 1787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1808, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 1798, 1820, 0, 0, 1792, 0, 0, 0,
	1799, 1801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1793, 0, 0, 1816, 0, 1817,
	0, 0, 0, 0, 0, 0, 1786, 1787, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1818,
	0, 1811, 0, 0, 1808, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1792,
	0, 0, 0, 0, 0, 0, 0, 0, 1822, 0,
	0, 0, 1824, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1798, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1793, 0, 1809, 0, 0, 0, 0, 0,
	0, 0, 1783, 1784, 1790, 1812, 1789, 1785, 0, 1782,
	1780, 1781, 1773, 1774, 1775, 1776, 1778, 1779, 0, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 0, 0, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 0, 0, 0, 0, 0, 0,
	0, 0, 1809, 0, 0, 0, 0, 0, 0, 0,
	1783, 1784, 1790, 1812, 1789, 1785, 0, 1782, 1780, 1781,
	1773, 1774, 1775, 1776, 1778, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1809, 0, 0, 0, 0,
	0, 0, 0, 1783, 1784, 1790, 1812, 1789, 1785, 0,
	1782, 1780, 1781, 1773, 1774, 1775, 1776, 1778, 1779,
}

var sqlPact = [...]int{
	6810, -1000, -1000, -1000, -1000, 177, -1000, -1000, 176, 175,
	171, 170, 169, 168, 164, 163, 162, 158, 157, -1000,
	-1000, -1000, -1000, -1000, -1000, 155, -1000, -1000, 153, -1000,
	148, 147, 144, -1000, -1000, 142, -1000, 141, -1000, -1000,
	-1000, -1000, 140, 138, 135, 93442, 92893, 93984, 2290, 114192,
	100516, 2009, 83053, 113643, 82504, 113094, 2111, 7917, 112545, 2726,
	134, -1000, 111996, 131, 128, 127, -1000, 111447, -1000, 2119,
	-1000, 126, -1000, 7572, 68719, 125, 124, 123, 2195, 122,
	-1000, 121, 120, -1000, -1000, 119, -1000, 13378, 1494, -1000,
	117, 115, -1000, 357, 98327, 114, 113, 2367, 112, 111,
	67072, 109, 108, 2361, 2827, -1000, -1000, 2056, -1000, -1000,
	106, 105, 103, 102, 101, 100, 99, 98, 97, 96,
	95, 93, -1000, 91, 90, 88, 86, 84, -1000, 83,
	81, 80, -1000, 79, -1000, 78, 77, 76, 75, 70,
	69, 64, 62, 61, 59, 53, 47, 45, 44, 12871,
	-1000, -1000, 1884, 1664, 1663, 1659, 1654, 1653, 963, 43,
	41, 38, 37, 36, 34, 33, 31, 28, 26, 25,
	24, 22, 21, 18, 14, 10, 9, 139, 8, 7,
	6, 5, 4, 2, 1, 2523, -1000, 1839, 752, 31791,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 121780, 114734, -11, -59,
	-13, -1000, 3285, 1035, 55477, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 271, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 494, 1818,
	723, -1000, -1000, -1000, 110905, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2287, -44, -1000, 1979, -1000, -1000, -1000,
	-1000, -1000, 721, -1000, 2284, 295, 2218, -1000, -1000, -1000,
	3333, 2426, 3753, 3752, 3751, 3750, 3749, 121238, 1802, 3748,
	2486, 3747, 3745, 3744, 3742, 3741, 3740, 3739, -1000, 92344,
	1039, 91795, 91246, 3347, 110363, 90697, 109814, 76476, 47643, 751,
	3330, -1000, -1000, -1000, -1000, -1000, -1000, 114734, -1000, 1038,
	-1000, -1000, 3738, 3734, 2036, 720, 99967, -1000, 1723, -1000,
	-1000, -1000, -1000, 890, 1200, 33477, 33477, 269, -1000, -1000,
	-1000, -1000, -1000, -1000, 3733, 3732, 3729, 3728, 3725, -1000,
	-1000, 81955, 24855, 81406, 80857, 109265, 24294, 90148, 89599, 3721,
	3718, 3714, 108716, 75915, 3457, 3456, 1029, 1975, 1415, -1000,
	-1000, -1000, -1000, -1000, -1000, -31, 70906, 3491, 114734, -1000,
	266, -1000, -1000, -1000, -1000, -1000, -1000, 47081, 630, 46519,
	421, 45957, 414, -1000, -1000, -1000, -1000, 75354, -1000, 108167,
	2425, 3708, 3707, 1117, 3704, 3225, 1748, 3703, 1816, 1206,
	3702, 3701, 3700, 3699, 3698, 3697, 3696, 1425, 107618, 2920,
	1461, 107069, 1747, 74793, 1020, 89050, 93984, 2573, 106520, 1398,
	1265, -1000, -1000, -1000, -1000, 3026, 2822, 2819, 1059, -1000,
	-1000, -1000, -1000, 58794, 6268, 4951, -1000, -1000, 12931, 105971,
	61589, 93984, 93984, -1000, -1000, -1000, -1000, -1000, 45395, 351,
	44833, 695, -1000, -1000, 59353, 2869, -1000, -1000, -1000, -1000,
	44271, 340, 43709, 685, 114734, -1000, 2916, 1866, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2178, 1660, 3521, 2682, 74232,
	2048, 1362, 3295, 3025, 3023, 1459, 3019, 3695, 2586, 3017,
	3016, 3008, 3000, 2990, 1738, 2538, 319, 2543, 31229, 2903,
	1720, 43147, 1495, 1463, 2983, 2982, 3541, 1948, 1945, 2095,
	80308, 3694, 3693, 3252, 2977, 2964, 2757, 2963, -1000, 2867,
	1420, -1000, -1000, -1000, -1000, 1432, -1000, -1000, -1000, -1000,
	84679, -1000, -1000, 1293, -1000, -1000, 1293, -1000, -1000, -1000,
	-1000, -1000, 1240, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1839, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2003, -1000, 1990, -1000,
	-1000, 2471, 3268, 3268, 3268, 3325, 457, 450, -1000, 139,
	-1000, -1000, 128151, -1000, -1000, 48205, 48205, 48205, 48205, 48205,
	48205, 48205, 48205, 2126, -1000, 715, -1000, -1000, 781, -1000,
	714, 653, 601, -1000, -1000, -1000, -1000, -1000, -1000, 713,
	-1000, -1000, -1000, -1000, -1000, -1000, 3491, -1000, 27724, -1000,
	-1000, -1000, 492, 711, 48205, -1000, -1000, 3566, 3565, 881,
	-1000, 264, 903, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2914, 710, 703, -1000, 701,
	700, 698, 696, 694, -1000, -1000, -1000, 693, 692, 690,
	689, 688, 687, 684, 680, -1000, 2000, -1000, -1000, -1000,
	-1000, -1000, -1000, 636, 634, 634, 634, -1000, 1006, -1000,
	-1000, -1000, 250, 631, 249, 629, 628, 624, -1000, 679,
	678, 677, 673, 671, 667, 666, 665, 664, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1004, -1000, -1000, -1000, -1000,
	-33, 114734, -1000, 494, -33, -1000, -1000, 657, -1000, 35754,
	35754, 35754, -1000, -1000, 2282, 48205, -1000, 2753, -1000, -24,
	-24, 864, 57127, -1000, 54375, 864, 290, 801, 63232, -1000,
	2854, -1000, -1000, 654, 258, -1000, -1000, -1000, -1000, 25414,
	2852, 114734, 114734, 93984, 93984, 93984, 3692, 2979, 48205, -1000,
	-1000, 68170, 114734, 94526, -1000, -1000, 3437, 69266, 67621, 114734,
	2911, 72004, 3690, -1000, -1000, -1000, -1000, -1000, 3130, 3688,
	3687, 3686, -1000, 114734, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 230, 3120, -1000, -1000, 97778, 230, 3117, -1000, 230,
	3092, -1000, 97236, -1000, -1000, 2199, 3088, -1000, -1000, 240,
	3086, -1000, -1000, -1000, 237, 3085, -1000, -1000, 257, -58,
	3084, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 128151, -1000, -1000, -1000, 71455, -1000, 3266,
	-1000, -1000, 114734, -1000, 48205, -1000, 3436, 1719, 77584, 3386,
	-43, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2467, 2464,
	1112, 2315, -1000, 3172, 1478, 33477, 3213, -1000, -1000, -1000,
	-1000, 251, 25414, -1000, -1000, -1000, -1000, -1000, -1000, 2490,
	3082, 1391, -1000, 2313, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2154, 3080, -1000, 2226, 3078, 2104, -1000, -1000,
	3192, -1000, 3242, -1000, -1000, 1916, 3076, -23, -1000, -1000,
	2344, -1000, -1000, -1000, -1000, 1955, -1000, 1267, 3075, -1000,
	2680, 2680, 88501, 3060, 61030, 59353, 70906, -36, -1000, -1000,
	-1000, -1000, -182, -1000, 23731, 128151, -1000, -1000, -1000, -1000,
	1836, 128151, 930, -1000, -1000, 3074, -1000, 128151, 926, -1000,
	-1000, 3073, -1000, 2910, -1000, -1000, 2382, -1000, -1000, 3685,
	-1000, -1000, 3684, -1000, 3683, 3682, 3681, -1000, 1524, 1963,
	3677, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 87959,
	2280, -1000, -1000, 86861, 2906, -1000, 2380, 3385, -1000, 87410,
	1019, -1000, 944, 2379, -1000, 96694, 872, 2371, -1000, 3674,
	3346, 2620, 944, 2366, -1000, -1000, -1000, -1000, -1000, 1009,
	-1000, 64878, -1000, 64878, -1000, 1563, -1000, 120696, -24, 93984,
	3491, -1000, -63, -1000, -1000, -1000, 1035, -1000, 58243, -1000,
	58243, 99418, 77035, 911, 746, 66521, 128151, -1000, -1000, -1000,
	-1000, 128151, -1000, -1000, -1000, -211, 2678, -1000, 77035, 60471,
	128151, -1000, -1000, -1000, -1000, 128151, -1000, -1000, -1000, 77035,
	86861, -1000, 105422, 86319, -1000, -1000, 1418, 2531, -1000, -1000,
	-1000, 77035, 1269, 77035, 77035, 77035, -1000, 104873, -1000, -1000,
	2031, 1606, 3249, 2027, 93984, -1000, 2016, -1000, -1000, -1000,
	3280, 114734, -1000, -1000, 2904, -1000, 70357, 96152, -1000, 95610,
	-1000, 95068, -1000, 93984, -1000, 93984, -1000, 3672, 3668, 3664,
	-1000, -1000, 3661, -1000, 3658, 3271, -1000, 618, 42585, 128151,
	3270, -1000, 3657, 3372, 2903, 128151, -1000, 3054, 1658, 1652,
	114734, -1000, -1000, 114734, -1000, 114734, -1000, -1000, -1000, 1475,
	-1000, -1000, 2466, -1000, -1000, -1000, -1000, 93984, 93984, 93984,
	93984, 1473, -1000, 42023, -1000, -1000, 2966, 3652, 1657, -1000,
	1813, -1000, 2851, 3289, -1000, 1417, 1661, -1000, -1000, 242,
	-1000, -1000, -43, -1000, 120154, -1000, 2471, -1000, 114734, -1000,
	2499, 2891, 2902, 1768, 2298, 2566, -1000, 41461, 2549, 51577,
	2311, 139, -1000, -1000, 139, 139, 32915, -1000, -1000, 69266,
	69266, 25414, 1253, 48205, 48205, 48205, 48205, 48205, 48205, 48205,
	48205, 48205, 48205, 48205, 48205, 48205, 48205, 48205, 48205, 48205,
	48205, 48205, 48205, 48205, 48205, 48205, 48205, 48205, 48205, 48205,
	48205, 48205, 48205, 48205, 48205, 48205, 48205, 48205, 48205, 2168,
	48205, 1238, 48205, 48205, 48205, 48205, 1872, -1000, -1000, 1897,
	525, 2007, 653, -1000, -1000, -1000, 3483, 3483, 3483, 505,
	505, 505, 128342, 128342, 517, 3651, 781, -1000, 48205, -1000,
	110, 57677, 48205, 25975, -1000, 450, 9371, 2465, -1000, 449,
	26566, -1000, -1000, -1000, 27724, 601, 40870, 48205, 991, 128151,
	-1000, -1000, 1379, 3505, 23168, 2930, 2751, 649, 839, 786,
	30638, 30047, 29456, 28865, 707, 48205, 48205, 48205, 48205, 48205,
	48205, 48205, 48205, -1000, -1000, 3527, -1000, 3505, -1000, -1000,
	-1000, -1000, 3505, 1250, 1245, 3505, -1000, 3505, 3505, 8707,
	8707, 40308, 39746, 39184, 52139, 38622, 48205, 28303, 38060, 37498,
	-1000, 114734, -33, 3435, 48205, 287, -1000, 126688, -1000, 287,
	287, 647, -65, 128151, 2504, 2504, 56027, 2388, 2145, 2145,
	2145, -1000, 864, 18635, 864, 103782, 2170, 864, 864, 218,
	277, 439, 53825, 2753, 103782, 760, 643, -14, -15, -17,
	-1000, -1000, -18, -19, -1000, -1000, 93984, 642, 25975, 25414,
	217, 1934, -66, 2552, 2551, 2550, -1000, 2510, -1000, 1772,
	-68, 1237, 93984, 114734, 1380, 3650, -74, -1000, 4901, -71,
	-1000, 1313, 214, 3505, -1000, -1000, -1000, -1000, -1000, 3649,
	3648, -1000, 999, 641, 639, 384, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 636, 634, 634, 634, -1000, 250,
	631, 249, 629, 628, 624, -1000, -1000, -1000, -1000, -1000,
	2850, 93984, 114734, 1273, 3646, -182, 94526, -80, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 114734, -1000, -1000, -1000,
	3645, -1000, 93984, -1000, -1000, 93984, 230, 3068, -1000, 93984,
	-1000, 93984, 228, 3062, -1000, -1000, 114734, -1000, 93984, 93984,
	-1000, 114734, 114734, 114734, 77035, 77035, 241, -1000, 93984, 880,
	-81, 1122, -43, -1000, -1000, -1000, 1293, -1000, 1631, -1000,
	-1000, -1000, -1000, -1000, -1000, 1430, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 881, -1000, -1000, -1000, -1000, -1000,
	-1000, 3503, 3500, -34, -1000, -1000, 25414, -1000, -45, 1592,
	1804, 1227, -1000, 79759, 2349, 3251, 3643, 2611, 3235, 1546,
	-1000, 1471, -1000, 3345, 84679, 3399, 3422, 1342, -1000, 2849,
	-1000, -1000, 889, 1536, 1715, 1225, 1224, 84679, 2226, -1000,
	69266, -1000, 2644, 3324, 1370, 1403, 1370, 1370, 1367, -1000,
	84679, 1714, 1223, 1222, 1220, 1878, 1874, -1000, -1000, 1978,
	-1000, 1218, 1213, 821, 1870, -1000, -46, 3394, 3411, 1282,
	-1000, 2847, 1210, -1000, -1000, -1000, 3323, 93984, 25414, 1569,
	1552, 1553, 1713, 1208, -35, -1000, 3390, 1207, 1205, -1000,
	1010, 5336, 3185, -1000, 77035, 1010, 1010, 1952, 3061, 2675,
	-1000, 1434, 2669, 854, 2663, -1000, -1000, -1000, 854, -36,
	70906, 114734, 213, -1000, 110, 48205, 48205, 110, 48205, 110,
	3371, 3055, -1000, -1000, -1000, -1000, -1000, 3640, 1908, 2483,
	-1000, -1000, 623, 2365, 2846, 114734, 2562, -37, 93984, -1000,
	69808, 3053, 72553, 2226, 2363, -1000, -1000, 85770, -1000, 3044,
	494, 2362, -1000, 446, 3639, 3043, -1000, 119612, -1000, 3266,
	1263, 3035, 1084, 441, 3434, -1000, 441, 65427, -1000, 114734,
	-1000, -24, 4749, 78675, -89, -91, 417, -1000, 104331, 114734,
	1080, 79217, 114734, 3202, 933, 59353, -1000, 59353, -97, -211,
	2661, 1451, 911, 911, 854, -1000, 854, -1000, 93984, 2901,
	-1000, -1000, 77035, 911, 911, 911, -1000, -1000, -1000, -1000,
	3638, 3636, 3635, 3633, -1000, -1000, 938, 93984, 114734, 93984,
	-1000, 212, -1000, 114734, -1000, 114734, 114734, 93984, -1000, 938,
	114734, 938, 114734, 938, 114734, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 110, -1000, -1000, 128151, -1000, 48205, -1000, -1000,
	3628, 1605, -1000, 2894, -1000, 2892, -1000, 16, -1000, -1000,
	1814, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3627, 128151,
	-1000, 1961, -1000, -1000, -1000, -1000, 93984, 93984, 93984, 93984,
	114734, 3184, -1000, 114734, 3182, 93984, -1000, -1000, 84679, -1000,
	2499, 2891, -1000, -1000, -1000, -1000, -1000, -1000, 1440, 2238,
	-1000, 2515, -1000, 1505, -1000, -1000, -1000, 128151, 52701, -1000,
	-1000, 128151, 1755, -1000, 51015, 50453, -1000, -1000, 1625, 93984,
	2569, -1000, 2569, -151, -1000, 126441, 2512, 93984, -1000, -1000,
	-1000, -1000, -1000, 888, 748, 748, 1261, 1261, 1261, 1261,
	3375, 6032, 436, 4897, 8364, 8364, 947, 947, 947, 947,
	947, 8364, 1160, 505, 505, 1160, 1160, 1160, 1160, 1160,
	505, 505, 505, 8364, 8364, 8364, 505, 128342, 128279, 11897,
	48205, 48205, 1203, 1886, 525, 11076, 48205, 12145, 12145, 12145,
	12145, -1000, 1919, -1000, -1000, -1000, -1000, 2840, 619, 52139,
	52139, -1000, -1000, -1000, -1000, 27145, 48205, -1000, -1000, -1000,
	-1000, 36907, -1000, -1000, 125846, -316, 408, -1000, 193, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 407, -111, 55, -1000, 48205, 48205, 48205, 405,
	-1000, 190, 48205, 114734, -1000, 18004, 758, -121, -1000, -98,
	1400, -1000, 48205, -1000, -1000, 1201, -1000, 1199, 1198, 1197,
	-1000, 617, 404, -1000, 188, -1000, 2140, 615, 614, 48205,
	-1000, -1000, -1000, -1000, -1000, 125665, -1000, -1000, 125418, -1000,
	-1000, 125227, -1000, -1000, 125046, -1000, -1000, -1000, 127904, 17619,
	17341, 16671, 6172, 16026, 15385, -100, 402, -112, 401, 882,
	879, 398, 396, 394, -115, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -120, 391, -1000,
	2837, -111, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	389, -1000, 387, -1000, 127696, -111, 385, 5209, -1000, 52139,
	52139, 52139, 52139, -1000, 380, -1000, 126313, -1000, 127515, 36345,
	36345, 36345, 377, 127268, 48205, -111, -126, -1000, -128, -1000,
	-1000, 503, -131, 986, 35754, 54926, 25414, -1000, 986, 986,
	48205, -1000, 48205, 2536, -1000, -1000, -1000, -1000, 2533, 2326,
	2504, 56027, -1000, -1000, -1000, -1000, 103782, -1000, 3491, 2956,
	-1000, 103782, -1000, -1000, 114734, 494, -1000, 103782, 103782, 25414,
	864, -1000, 864, 103782, 773, -1000, -1000, -1000, -1000, -1000,
	370, 62690, 55, 187, 25414, 944, -1000, -1000, 2654, 2654,
	2654, 2654, -1000, -1000, 114734, 1194, -40, -117, 2659, -1000,
	3463, -1000, 2021, -1000, 69266, -1000, 777, 1087, 25414, -1000,
	-1000, -1000, 613, -1000, 3505, 3505, -1000, 3505, 114734, 2830,
	201, 2657, -1000, 196, 72553, 72553, 3626, -1000, -1000, 230,
	-1000, 93984, 230, 230, -1000, 93984, 93984, 2199, -1000, 240,
	-1000, 237, -1000, -1000, -58, -1000, 982, 33477, -1000, 1293,
	-1000, -1000, 1548, -1000, 1914, -1000, 1216, -1000, -1000, -1000,
	-1000, 33477, -1000, 2061, 114734, 114734, 93984, -1000, 114734, -1000,
	2142, 72553, -1000, 2360, 119070, 2355, 69266, 114734, -1000, -1000,
	612, 900, 2507, 2505, 1074, 114734, 114734, 2498, 118528, 117986,
	-1000, 3622, 114734, 2014, 48205, 3321, 2182, 2402, 110, 110,
	-1000, 110, 110, 110, -1000, 610, 1318, 93984, 93984, 114734,
	72553, 93984, 1843, -1000, -1000, -1000, -1000, -1000, 85221, -1000,
	-1000, 3520, 3519, -1000, 1370, -1000, -1000, -1000, 1370, 2226,
	1771, 114734, 72553, 93984, 72553, 117444, 116902, -1000, 1705, 114734,
	1458, -1000, 821, 2032, 110, 110, -1000, 110, 110, 110,
	609, 25414, 1960, -1000, 2937, 114734, 3563, 116360, 3562, 114734,
	114734, 114734, 72553, 3261, 114734, 114734, 72553, -1000, 115818, 3450,
	2003, 5336, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 73671, 1089, 114734, 1267, -1000, -1000, 1681,
	1193, 1192, 84679, 2077, 1668, 114734, 59353, 924, 59353, 2625,
	-1000, -1000, 22605, -1000, 128151, 128151, -1000, 128151, -1000, 69808,
	114734, -1000, 1008, 114734, 79217, 901, 3034, 64329, -182, 911,
	77035, 93984, -37, 2562, 114734, -1000, -1000, 2226, 3032, 494,
	2359, -1000, 77035, 3433, 3028, 606, 3621, 3619, -1000, 93984,
	2277, 2358, -1000, -1000, 115276, 3069, 821, 114734, 986, 56027,
	1859, -1000, 62140, 1046, 114734, 1806, 152, -1000, -1000, -1000,
	0, 114734, -1000, 798, -1000, -1000, 4749, 4749, 911, -183,
	603, -1000, 844, 843, 59912, 77035, -133, -1000, -1000, -1000,
	-1000, 2355, 93984, 114734, 1287, 2617, 114734, -138, -1000, 186,
	602, -1000, 2314, -1000, -211, -1000, 933, 59353, 2820, 2814,
	-1000, -1000, 981, -1000, 1368, 911, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -25, 114734, -182,
	-182, -52, -40, -1000, 938, -1000, 938, -1000, 938, -1000,
	128151, -1000, -1000, 1602, 1590, 114734, -1000, -1000, 114734, -1000,
	25414, 114734, 93984, 25414, 93984, 2888, 2884, -1000, -1000, -1000,
	114734, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1097, -1000,
	1755, 2235, -1000, 601, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2446, -1000, -42, 32915, 869, -1000, -1000,
	93984, -26, 48205, 48205, 11061, 10040, 48205, 52139, 52139, -1000,
	48205, 8030, -1000, -1000, -1000, -1000, -1000, 2812, 600, 48205,
	69266, 7262, 6854, -1000, 369, 10322, 1160, -1000, 48205, -1000,
	471, -1000, 365, 35192, -1000, 126896, -32, -139, -1000, 19211,
	-111, -145, -1000, -1000, 774, -1000, 2997, -1000, 48205, 127077,
	2415, 2139, 1770, 1622, 3505, 3560, 22042, -1000, 65974, 988,
	2189, 124799, -1000, -1000, -1000, -1000, 69266, 69266, 48205, 48205,
	-1000, 48205, 48205, 48205, -1000, -1000, -1000, 3505, 870, -1000,
	-1000, -1000, 870, -1000, -1000, 1370, -1000, 1370, -1000, 48205,
	-1000, -1000, 2804, 48205, -1000, 69266, 69266, 52139, 52139, 52139,
	52139, 52139, 52139, 52139, 52139, 52139, 52139, 52139, 52139, 52139,
	52139, 52139, 52139, 52139, 52139, 52139, 52139, 2529, 52139, 3481,
	3481, 3481, 998, -1000, 2878, 2804, 48205, 48205, 69266, 364,
	362, 361, -1000, 48205, -111, -1000, -1000, 6618, 598, -1000,
	2435, -1000, 2746, -1000, 48205, -1000, -123, -1000, 2753, -1000,
	-1000, 2746, 2746, -146, 128151, 56027, 56027, -1000, 595, 48205,
	2524, -1000, -1000, 757, -310, -1000, 842, -1000, -1000, -1000,
	-1000, -1000, 494, -1000, -1000, -1000, 184, 103782, 103782, 756,
	-1000, -153, -1000, -1000, -154, -1000, 3429, 360, 25414, -1000,
	986, 2624, -1000, -1000, -1000, -1000, -1000, -1000, -182, 114734,
	114734, 1662, 2213, 3557, -1000, 3516, 772, 754, 181, 3505,
	358, 355, 353, -182, 114734, 114734, 1647, 114734, -1000, -1000,
	-1000, -1000, 230, -1000, -1000, -1000, 228, -1000, -1000, -1000,
	-1000, 2601, -1000, -43, -1000, -1000, -1000, 48205, -1000, -1000,
	3233, 1189, 1184, -1000, -1000, -1000, -1000, 2793, -1000, 3027,
	-1000, 2350, -1000, 1050, -1000, 1827, -1000, 48205, 591, 2616,
	590, 580, 3618, 2028, 3617, 1078, 3024, 2199, 3022, 2199,
	-1000, -1000, -1000, 883, -1000, 128151, 2182, -1000, 578, 576,
	-1000, -45, 1559, 1788, 1183, 980, -1000, -1000, -1000, -1000,
	48205, 48205, 103240, -1000, 464, 3242, -29, -1000, -1000, -1000,
	1641, 1182, 1181, -1000, -1000, -1000, -1000, 2226, 1636, 1180,
	1178, -1000, -1000, -1000, -1000, -1000, 2348, -1000, -1000, 3002,
	978, -1000, 2944, 2943, 875, 114734, -1000, 968, -1000, -1000,
	-1000, -1000, 48205, -1000, -46, 1176, 3374, 2347, 93984, -1000,
	2199, 2984, 1173, -1000, 1172, -1000, -1000, -1000, 3389, 3388,
	1179, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 73112,
	-1000, -1000, 1010, 114734, 72553, 93984, 1735, -1000, -1000, 83595,
	84137, 114734, -182, 854, -1000, 2469, 854, 924, 2802, -1000,
	2557, 967, 93984, 3616, 352, -155, -47, 69266, 3428, -1000,
	2295, 597, 93984, 865, -1000, 3491, -1000, -1000, -1000, 962,
	-1000, 3381, 93984, 3427, 2974, 944, 110, 93984, 3539, -1000,
	-1000, 3426, 93984, 2973, 2276, 2338, 2474, 821, 78133, 944,
	2175, -56, -1000, 1806, 34601, 3240, -156, -1000, -1000, -1000,
	986, 65427, 56027, 48205, 3615, -162, -1000, -1000, -1000, -1000,
	-1000, 101065, 101065, 77035, 77035, 77035, 911, 114734, 114734, 79217,
	-1000, -1000, 574, 114734, 114734, 570, -1000, 114734, 114734, 3614,
	77035, -48, 559, -1000, 841, 840, 837, -1000, -1000, -1000,
	-1000, -1000, -1000, 933, -1000, -211, 59353, 110, -1000, 2203,
	93984, -1000, 21479, -1000, -1000, -1000, -1000, -1000, -1000, 938,
	-182, -1000, -1000, 2067, 2305, 2067, 1790, 1783, -1000, -1000,
	2225, -1000, -1000, -1000, -1000, 2565, 3255, 25414, 3360, 12145,
	48205, 48205, 6882, 6072, 4994, 12145, 48205, 48205, 69266, 5981,
	-163, 48205, 48205, -1000, 48205, 738, 128151, -1000, 3555, 48205,
	346, 345, -1000, -1000, -1000, 3498, -1000, -1000, -1000, 128151,
	48205, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 342, -1000,
	180, -1000, -1000, -1000, 122322, -1000, 48205, 338, 3320, -1000,
	335, 330, 9676, 572, 124608, 124427, 124180, 323, -1000, -1000,
	321, 320, 128151, 2878, 128151, -1000, -1000, 787, 787, 1356,
	1356, 1356, 1356, 3481, 989, 443, 1686, 979, 979, 979,
	928, 998, 998, 979, 979, 979, 998, 2800, 2503, 550,
	7396, -1000, -1000, 128151, 128151, 315, -1000, -1000, -1000, -111,
	307, 6618, -1000, 2718, 3315, 128151, -1000, 56027, 2718, 2718,
	-1000, -1000, 2326, 114734, 128151, 56027, -1000, 2956, -1000, 19785,
	-1000, 25414, -1000, -1000, -1000, -1000, 3491, -1000, 62690, -1000,
	549, -1000, 17, -1000, 2624, -1000, 833, -1000, -1000, 77035,
	77035, -182, -224, 114734, -1000, -1000, 737, 3607, 771, 25414,
	306, -1000, -1000, -1000, -182, -182, 114734, -182, -1000, -1000,
	-1000, 3201, 128151, 114734, 114734, 1438, 102698, 114734, 2972, -1000,
	2245, -1000, 1074, 123989, 56577, -1000, 56577, 114734, -1000, -1000,
	-1000, 1809, 1498, 3606, 1113, -1000, 3287, 114734, -1000, 114734,
	-1000, -1000, -1000, 114734, 114734, 93984, 114734, -1000, 72553, 2953,
	-164, 128151, -50, -1000, 832, -1000, 1372, -1000, 20916, 114734,
	72553, 93984, 114734, 72553, 93984, 2970, 114734, 2106, -1000, -1000,
	2942, -1000, 2952, -169, 25414, -1000, 3554, 3553, 2969, 3292,
	-1000, 114734, 3550, 114734, 93984, 3199, -1000, -1000, -1000, -1000,
	-1000, -1000, 1629, 1170, 1167, 2264, -51, 2258, 2208, -52,
	924, -53, 548, -1000, 831, -1000, -1000, 829, -1000, 924,
	-1000, 77035, 59353, 3605, 494, -1000, 2604, -1000, 98869, 2231,
	110, -1000, 3604, 101614, 547, -1000, 2198, -1000, 729, -1000,
	2420, 72553, 2226, 110, 93984, -1000, -1000, 494, 302, -54,
	-1000, 2989, 1058, 25414, 93984, 2965, 2472, 821, 78133, -1000,
	1263, 2566, -1000, -55, -1000, 632, 110, 2175, -1000, -56,
	128151, -1000, 828, -1000, -170, -1000, -1000, 297, -1000, 3196,
	3195, -1000, 2725, 56577, 546, 544, 114734, 3193, -1000, -1000,
	-171, 2666, 2666, 77035, 59353, 77035, -1000, 933, 854, -1000,
	2312, -1000, -1000, -1000, -1000, -1000, 25414, 1486, -1000, 543,
	542, -1000, -1000, -1000, -1000, 3255, 12145, 12145, 48205, 48205,
	48205, 12145, 5981, -177, -1000, 12145, 12145, -111, -1000, -1000,
	126896, -1000, -1000, -1000, 128151, -1000, 20353, 2075, -1000, 123808,
	-1000, 32915, -1000, -1000, 48205, 48205, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 52139, 2796, 540, 69266, -1000, -1000,
	294, 929, 48205, 49891, 2753, 929, 929, -1000, -184, -1000,
	-1000, -1000, 3491, 17, -1000, -1000, 3601, 25414, -1000, 77035,
	-1000, -1000, 3591, -161, 767, -1000, 3590, -1000, -1000, 116,
	-1000, -1000, -1000, 2652, 3424, -1000, 1845, -1000, 114734, -1000,
	114734, -1000, 25414, 114734, 2750, 1212, -1000, 900, 2497, 539,
	52139, 93984, 730, -1000, 3447, 2715, -185, -1000, 114734, 48205,
	114734, -190, -193, 2322, -1000, -1000, 1202, 48205, -1000, -1000,
	-1000, 69266, 538, 2199, 2199, -195, -196, -1000, -1000, -1000,
	48205, 1159, 114734, 34039, -1000, 3589, 3242, -1000, -1000, -1000,
	-1000, -1000, -1000, 114734, -1000, 114734, -1000, 48205, 1154, -1000,
	-1000, -1000, 3548, 2199, 25414, 2199, -1000, 2199, 3292, 1110,
	114734, 72553, 93984, 1701, 1701, 2848, -1000, 2431, 2431, 77035,
	59353, -1000, -58, 924, -1000, 3420, 2596, 3587, -1000, -1000,
	-1000, -1000, 2496, -1000, -1000, 114734, 2491, 912, -1000, -201,
	-1000, 827, 826, 79217, 901, 908, -1000, -60, 536, -1000,
	824, -1000, -1000, -1000, -1000, 494, 3418, -1000, 3542, 533,
	532, 114734, 2257, 531, 25414, 3238, 821, 78133, -1000, 3069,
	1806, -1000, 2333, 114734, 3234, -1000, 2566, 525, -1000, 911,
	524, 523, 2844, 2844, -210, 56577, 56577, -212, 520, 911,
	-1000, -215, -1000, -1000, -1000, -1000, -1000, -64, -1000, 850,
	675, -1000, -1000, 93984, 93984, 48205, 48205, -1000, 12145, 12145,
	12145, -1000, 288, -1000, -1000, 2175, 3314, -1000, -86, 123710,
	123341, 1950, 52139, 69266, -217, -1000, -1000, 114734, 128151, -87,
	-1000, 128151, 516, 514, 444, -1000, -1000, -1000, 573, -1000,
	-1000, -1000, 114734, 3583, -1000, 114734, 102156, 114734, -1000, -1000,
	1792, -1000, -1000, -1000, 114734, 2336, -1000, -1000, -1000, 1072,
	48205, 7396, 513, 48205, -1000, 3417, -1000, 2600, 2780, 1896,
	56577, -1000, 3255, -1000, 123082, -1000, 1054, 1901, -1000, -1000,
	-1000, 128151, 3292, 56577, -1000, -1000, 512, 511, 128151, 510,
	822, 2789, -1000, -1000, -1000, -1000, -1000, 128151, 508, 3374,
	-1000, -1000, -1000, -1000, 2199, 93984, -1000, -1000, -1000, 1140,
	-1000, -1000, -1000, -1000, 3580, 3578, 2786, 83595, -1000, -218,
	-1000, -1000, 1906, 110, 2060, 2640, -1000, 2231, 507, -1000,
	-1000, 2244, 2595, -1000, 101614, 33477, 33477, 282, 3416, 908,
	-1000, 3488, -1000, 3180, 3180, 48205, 3409, 110, -1000, 3539,
	56577, -1000, 93984, 56577, 2256, 1978, 2461, 78133, -1000, 2474,
	-1000, -1000, -223, 114734, 1806, -1000, -1000, 77035, 77035, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1054, -225, -226, -1000, 77035, -1000, -1000, 2312, -1000, 114734,
	-1000, 114734, -1000, -1000, -228, -231, -1000, 2047, 48205, 32915,
	-1000, -1000, 1950, -233, -1000, -103, -1000, 3406, 49891, 3577,
	3576, 3575, -1000, -182, -1000, -182, -1000, 1837, -1000, -1000,
	-1000, 2962, 2712, 122972, 2438, 114734, 122874, -1000, 2744, -1000,
	-1000, 2596, 506, -1000, -1000, -1000, -1000, 869, 114734, 2596,
	2710, 93984, 1069, -234, 2067, 2067, 48205, 32353, 2093, 48205,
	-1000, -1000, 3292, 114734, -1000, -1000, 114734, 2253, -1000, 2772,
	3495, -1000, 901, -1000, 2081, 114734, -1000, 3276, -1000, 3190,
	-1000, -1000, -1000, 2604, 110, -1000, -1000, -1000, -243, 128151,
	110, -1000, 279, -244, 1058, -245, 93984, 1931, -1000, 821,
	-1000, 2472, 986, -1000, -1000, -250, -251, 1896, 1054, 2032,
	-252, -1000, -260, -261, -1000, -1000, 275, 49329, 49329, 49329,
	-111, -151, -1000, 114734, 502, -1000, -1000, -1000, -1000, -1000,
	2939, 923, -1000, 2249, 2026, 274, 1065, -1000, -1000, 2032,
	114734, -1000, -1000, -1000, 922, 494, -1000, 48205, 1054, -262,
	-1000, 1044, -267, -1000, 1003, -268, -1000, 2784, -1000, -269,
	2199, -259, 226, 1701, 919, 3367, -1000, -1000, -1000, 2244,
	93984, -275, -1000, -1000, 2332, -1000, 2596, 912, -1000, -1000,
	-1000, 1054, 491, 1896, 487, 1442, 821, -1000, -1000, 1370,
	3238, 3149, 911, 911, 2596, 1896, 910, -1000, 911, -1000,
	-1000, -1000, 2968, -1000, 53263, 2211, 1779, 126054, 2968, 2968,
	-1000, -1000, 114734, 3352, -1000, 2251, 2250, 1496, -1000, -1000,
	-1000, -1000, -1000, -1000, 2715, -276, 3341, 2438, 128151, 2596,
	-1000, 2067, 2639, -1000, 2067, 2776, -1000, 2033, -1000, -1000,
	-1000, 2728, -1000, 2774, -1000, 1745, 3477, 2452, 484, -1000,
	114734, 1767, 1761, 3572, 2060, 2244, 1896, 56577, 2596, 56577,
	-1000, -1000, 114734, -1000, 1978, 1314, -1000, -1000, 2032, 2596,
	986, 472, -1000, -1000, 1907, 3443, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 820, -1000, 3169, -1000, 1095, 1976,
	1976, 986, -1000, 819, 2249, -1000, -1000, 470, -1000, 469,
	-1000, 2194, 114734, 2196, -1000, -1000, -1000, -1000, 114734, -1000,
	-1000, 3501, -1000, 901, -1000, 2596, -281, 2032, -282, -1000,
	-182, 1931, -1000, 1515, 910, 2032, -1000, 1777, -1000, -1000,
	2164, 48767, 48205, -1000, 3468, -1000, -1000, 2537, -1000, -1000,
	48205, 2715, 48205, 48205, -1000, 226, 63782, -283, -1000, 2244,
	2032, 1054, 910, 1896, 1442, 65427, 986, 910, -1000, -1000,
	-1000, 128151, -1000, -1000, -1000, 128151, -1000, -284, -292, -1000,
	-183, 101065, 2193, 2452, 910, 1896, 986, 2596, -1000, -258,
	-1000, 986, 2032, 1128, -300, -1000, -1000, -1000, -1000, 986,
	2596, -1000, 2032, -1000, -1000, -1000, -1000, 422, -1000, -1000,
	2032, 910, 48205, 910, 986, -302, 986, -1000, 2032, -1000,
	-1000,
}

var sqlPgo = [...]int{
	0, 4362, 4361, 4360, 4358, 4357, 4356, 4355, 4354, 4353,
	4352, 4351, 4347, 144, 4341, 4337, 4336, 4334, 4333, 4332,
	4330, 4328, 4327, 4326, 4323, 4322, 4320, 4312, 4311, 4307,
	4305, 4304, 4303, 4299, 4298, 4297, 4296, 4294, 4290, 4289,
	4282, 4281, 4280, 4273, 4265, 4259, 4257, 4256, 4255, 4253,
	4252, 4249, 4248, 4244, 4242, 4240, 4239, 4238, 4237, 4236,
	4235, 4233, 4229, 4224, 4217, 54, 4215, 4214, 4211, 4209,
	4207, 4206, 4205, 4203, 4202, 4201, 4200, 4198, 4197, 4194,
	4190, 4188, 4187, 4186, 4185, 4183, 66, 4179, 272, 4178,
	4177, 4175, 4174, 4173, 4169, 4167, 4162, 4161, 4154, 4152,
	4150, 271, 4149, 131, 163, 4148, 4147, 3759, 4145, 4142,
	270, 4139, 4138, 4136, 4135, 275, 4134, 4133, 4131, 4130,
	4129, 4127, 4126, 4125, 4124, 4123, 4122, 110, 207, 4121,
	4119, 2698, 4118, 4117, 4116, 4115, 4114, 4113, 4112, 4110,
	4109, 4108, 250, 168, 4107, 266, 4104, 4102, 4101, 4100,
	4099, 4098, 4096, 4095, 4092, 4090, 4089, 4088, 4087, 4086,
	4084, 4083, 4079, 4077, 4076, 4075, 4073, 4072, 4071, 4069,
	4068, 4067, 4066, 4065, 4062, 4061, 4059, 4057, 4056, 4053,
	4052, 4050, 4049, 4048, 248, 170, 196, 4044, 4043, 265,
	264, 4041, 4040, 4036, 4035, 4034, 133, 6, 52, 4031,
	4030, 94, 85, 79, 95, 102, 98, 4029, 112, 4028,
	130, 61, 4027, 21, 2, 220, 239, 7812, 237, 4025,
	4023, 4022, 244, 197, 4018, 242, 4017, 4015, 4013, 4012,
	4011, 65, 51, 185, 192, 177, 176, 25, 4009, 158,
	99, 78, 56, 45, 15, 97, 210, 19, 4006, 255,
	10, 138, 1, 37, 4003, 4002, 4001, 3993, 3486, 134,
	3991, 261, 245, 171, 3990, 3989, 3988, 612, 3987, 3983,
	72, 3981, 325, 100, 120, 16, 123, 3979, 150, 167,
	35, 3978, 164, 67, 3977, 157, 90, 96, 10469, 12520,
	3976, 3975, 111, 68, 81, 3901, 187, 166, 198, 91,
	161, 165, 122, 209, 208, 179, 162, 3973, 257, 3972,
	3412, 83, 184, 156, 5075, 3971, 3970, 3968, 84, 201,
	104, 3967, 3966, 74, 30, 3, 4, 9, 139, 26,
	20, 22, 3960, 31, 116, 48, 23, 3957, 33, 3956,
	3955, 3952, 3950, 3947, 44, 160, 3946, 3944, 273, 3943,
	106, 53, 63, 3940, 11, 224, 3937, 232, 125, 3936,
	3935, 252, 204, 186, 3934, 73, 234, 3933, 3931, 3929,
	3928, 3927, 140, 8, 136, 3920, 3916, 146, 3915, 50,
	240, 199, 3914, 69, 3913, 3911, 182, 108, 143, 269,
	135, 227, 115, 231, 189, 229, 3909, 3906, 3905, 225,
	3904, 3903, 216, 148, 3897, 3894, 247, 278, 88, 46,
	76, 238, 82, 195, 155, 3891, 203, 3890, 3886, 274,
	183, 213, 7, 13, 93, 117, 3884, 5, 236, 154,
	228, 114, 3883, 7418, 2581, 2424, 3882, 3881, 151, 126,
	77, 129, 152, 259, 105, 3879, 3878, 2721, 3876, 3873,
	3872, 3870, 188, 3868, 3867, 3863, 142, 169, 200, 3862,
	124, 64, 49, 32, 119, 256, 281, 113, 223, 181,
	251, 3861, 3860, 3858, 193, 3857, 71, 107, 172, 202,
	249, 55, 3856, 284, 3855, 153, 243, 62, 149, 3854,
	226, 3853, 3852, 3851, 3848, 3847, 3846, 3845, 174, 233,
	3844, 3842, 3839, 36, 194, 3838, 258, 276, 178, 109,
	86, 3836, 121, 1235, 3834, 118, 211, 57, 263, 625,
	260, 3833, 5064, 60, 3832, 0, 14224, 8169, 11573, 13355,
	3831, 6360, 3830, 3828, 3827, 219, 145, 3826, 3825, 3823,
	103, 3821, 87, 3819, 3818, 70, 3817, 29, 17, 18,
	34, 27, 375, 173, 3816, 3815, 40, 141, 127, 3814,
	268, 230, 3813, 3812, 3811, 3809, 89, 3808, 41, 3807,
	39, 3806, 3805, 47, 14, 43, 3804, 3803, 217, 3802,
	222, 254, 3799, 159, 3798, 92, 137, 3797, 3796, 3795,
	58, 59, 253, 80, 3794, 283, 3793, 212, 3792, 3791,
	24, 3790, 3788, 246, 3786, 3784, 3783, 3779, 3778, 38,
	205, 180, 215, 3777, 3773, 175, 3772, 3771, 3770, 280,
	3769, 3767, 28, 3766, 12, 3765, 3764, 206, 3142, 3763,
	3761, 42, 3757, 191,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 50, 50, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 37, 32, 32, 33, 33,
	34, 35, 35, 10, 10, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 18, 18, 38, 38, 19, 19,
	40, 40, 20, 20, 41, 41, 592, 592, 610, 610,
	23, 23, 43, 43, 24, 44, 17, 593, 593, 593,
	593, 36, 25, 45, 29, 29, 29, 29, 29, 199,
	199, 199, 199, 22, 22, 39, 39, 234, 234, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 588, 588, 236, 236, 235,
	229, 229, 230, 230, 594, 594, 237, 237, 237, 239,
	239, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 487, 487, 487, 520, 520, 519, 519, 519, 518,
	518, 614, 614, 615, 615, 615, 615, 615, 130, 130,
	385, 385, 385, 54, 54, 54, 54, 54, 583, 583,
	201, 201, 201, 203, 203, 202, 202, 202, 202, 202,
	77, 77, 599, 599, 600, 600, 598, 601, 601, 601,
	200, 200, 200, 126, 126, 126, 126, 126, 126, 127,
	127, 128, 128, 204, 204, 204, 206, 206, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 210, 16, 16,
	16, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	106, 106, 522, 522, 523, 523, 195, 195, 196, 196,
	196, 196, 197, 197, 198, 198, 198, 68, 68, 207,
	207, 209, 209, 208, 208, 208, 208, 208, 56, 56,
	56, 56, 56, 56, 56, 57, 57, 57, 57, 57,
	58, 58, 58, 58, 58, 58, 59, 59, 59, 59,
	59, 59, 66, 66, 66, 66, 66, 186, 186, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 74, 74, 74, 74, 616, 616, 616, 616,
	616, 616, 616, 616, 616, 616, 616, 616, 616, 616,
	616, 616, 616, 616, 616, 617, 617, 618, 618, 619,
	619, 620, 620, 620, 620, 620, 620, 620, 620, 620,
	620, 620, 620, 620, 620, 620, 620, 620, 620, 620,
	72, 72, 72, 72, 72, 72, 72, 72, 72, 72,
	72, 72, 72, 72, 72, 72, 72, 83, 83, 346,
	346, 309, 309, 84, 84, 84, 85, 85, 86, 86,
	70, 70, 581, 581, 362, 362, 478, 478, 71, 589,
	589, 589, 591, 591, 590, 590, 88, 88, 384, 384,
	89, 89, 89, 89, 89, 89, 90, 90, 90, 90,
	90, 90, 90, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 98, 98, 98,
	98, 98, 99, 99, 99, 96, 96, 96, 93, 93,
	93, 92, 92, 92, 97, 97, 97, 580, 298, 298,
	95, 95, 95, 94, 94, 94, 363, 363, 100, 100,
	100, 100, 310, 101, 101, 101, 101, 101, 101, 101,
	101, 104, 104, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 103, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 480, 480, 102, 102,
	102, 445, 445, 107, 107, 107, 400, 400, 108, 108,
	108, 108, 108, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 129, 129, 129, 129, 129, 129, 129, 129,
	585, 585, 355, 355, 261, 261, 261, 261, 119, 119,
	119, 119, 120, 120, 120, 121, 121, 191, 191, 136,
	136, 136, 136, 136, 135, 135, 135, 135, 135, 135,
	60, 60, 60, 61, 61, 62, 62, 63, 63, 64,
	64, 65, 65, 65, 65, 65, 138, 138, 611, 611,
	140, 137, 137, 137, 139, 139, 139, 139, 141, 143,
	143, 143, 143, 142, 142, 142, 142, 142, 144, 144,
	512, 512, 371, 371, 510, 510, 532, 532, 511, 511,
	316, 316, 316, 316, 316, 317, 317, 317, 521, 521,
	521, 521, 521, 521, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 192, 192, 193, 194, 194,
	194, 194, 194, 169, 169, 169, 185, 185, 185, 185,
	185, 185, 185, 172, 172, 172, 156, 156, 146, 146,
	146, 146, 146, 146, 146, 151, 151, 151, 151, 151,
	151, 151, 151, 147, 147, 158, 158, 158, 158, 158,
	152, 152, 153, 153, 153, 153, 179, 179, 155, 155,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 148,
	148, 148, 148, 160, 160, 160, 160, 407, 407, 407,
	184, 184, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 182, 182,
	182, 182, 182, 182, 602, 602, 603, 603, 176, 176,
	176, 176, 176, 176, 459, 459, 170, 170, 170, 170,
	175, 175, 175, 175, 178, 178, 178, 178, 390, 390,
	167, 167, 167, 168, 168, 168, 173, 173, 174, 347,
	347, 171, 171, 177, 177, 177, 177, 149, 149, 149,
	149, 149, 149, 149, 150, 150, 150, 150, 180, 180,
	166, 166, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 621, 621, 162, 162, 162, 161, 161,
	161, 161, 164, 164, 165, 165, 165, 165, 165, 165,
	163, 154, 183, 582, 582, 578, 578, 578, 578, 578,
	578, 578, 578, 579, 579, 579, 579, 584, 584, 112,
	112, 112, 112, 112, 122, 122, 122, 122, 122, 113,
	113, 113, 113, 113, 115, 115, 114, 114, 114, 114,
	78, 78, 78, 78, 78, 15, 15, 15, 79, 79,
	252, 252, 213, 213, 213, 335, 335, 214, 214, 324,
	324, 324, 324, 211, 211, 212, 212, 80, 80, 622,
	622, 622, 595, 595, 595, 596, 596, 596, 596, 596,
	596, 318, 318, 319, 319, 425, 425, 425, 425, 425,
	322, 322, 322, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 325, 325, 238, 238, 238, 333, 334, 334,
	326, 326, 332, 331, 331, 330, 330, 329, 329, 327,
	328, 328, 328, 337, 337, 336, 339, 339, 338, 424,
	541, 541, 543, 543, 543, 543, 543, 543, 543, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 408, 408, 623, 623, 539, 539, 539, 540, 535,
	535, 536, 536, 536, 536, 536, 320, 320, 321, 321,
	321, 321, 537, 538, 353, 353, 463, 542, 542, 544,
	544, 546, 624, 624, 624, 624, 624, 624, 625, 625,
	625, 423, 423, 422, 422, 344, 344, 547, 547, 547,
	547, 548, 548, 548, 548, 548, 551, 550, 549, 549,
	549, 549, 549, 82, 82, 82, 387, 387, 386, 386,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 188, 188, 264, 264, 76,
	76, 76, 12, 12, 12, 12, 12, 12, 12, 279,
	279, 13, 13, 13, 597, 597, 597, 81, 81, 81,
	81, 81, 81, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 587, 587, 586, 586, 265, 265, 627,
	627, 87, 87, 87, 87, 87, 87, 87, 87, 481,
	481, 482, 482, 75, 75, 75, 75, 75, 409, 409,
	406, 406, 405, 405, 352, 352, 461, 461, 461, 462,
	269, 269, 270, 270, 231, 231, 231, 31, 30, 21,
	21, 26, 26, 27, 27, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 28, 28, 47, 47, 47, 47,
	48, 48, 48, 48, 51, 51, 52, 52, 46, 46,
	46, 46, 49, 49, 42, 42, 53, 53, 53, 604,
	606, 606, 605, 605, 609, 609, 609, 609, 609, 609,
	607, 607, 608, 608, 612, 612, 613, 613, 118, 118,
	123, 123, 123, 123, 123, 124, 124, 124, 124, 125,
	125, 125, 125, 134, 134, 187, 187, 187, 187, 187,
	187, 187, 55, 55, 55, 55, 67, 67, 67, 67,
	132, 629, 629, 629, 133, 133, 133, 628, 628, 262,
	262, 419, 419, 420, 420, 630, 630, 421, 421, 421,
	421, 421, 255, 254, 256, 256, 257, 257, 73, 73,
	73, 247, 247, 246, 244, 244, 524, 524, 249, 249,
	249, 250, 250, 240, 240, 241, 241, 242, 242, 243,
	243, 253, 253, 631, 631, 110, 110, 110, 190, 190,
	308, 308, 308, 416, 416, 416, 345, 345, 276, 276,
	418, 418, 418, 418, 383, 383, 383, 189, 189, 360,
	360, 373, 373, 374, 374, 475, 475, 375, 116, 116,
	117, 117, 131, 131, 217, 217, 215, 215, 215, 215,
	215, 215, 215, 215, 222, 222, 223, 223, 224, 224,
	225, 226, 226, 226, 226, 364, 364, 227, 227, 227,
	216, 216, 216, 218, 218, 218, 218, 218, 218, 218,
	221, 221, 221, 221, 228, 228, 228, 220, 220, 558,
	558, 558, 560, 560, 562, 562, 561, 561, 557, 557,
	559, 559, 626, 626, 389, 389, 389, 342, 343, 340,
	340, 341, 341, 350, 350, 348, 349, 349, 351, 351,
	460, 460, 460, 232, 232, 232, 380, 380, 380, 380,
	381, 381, 412, 412, 410, 410, 410, 410, 411, 411,
	413, 413, 413, 414, 414, 415, 415, 377, 377, 378,
	378, 379, 379, 379, 379, 441, 441, 219, 219, 219,
	357, 357, 357, 358, 358, 431, 431, 431, 431, 431,
	431, 432, 432, 430, 430, 430, 430, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 465, 466, 466, 359,
	359, 467, 417, 417, 576, 576, 576, 577, 577, 458,
	458, 468, 468, 468, 468, 468, 468, 456, 456, 457,
	457, 476, 477, 477, 393, 393, 393, 393, 391, 391,
	394, 394, 394, 394, 394, 392, 392, 469, 469, 469,
	469, 382, 382, 470, 470, 470, 470, 471, 472, 472,
	473, 473, 426, 427, 427, 483, 483, 483, 483, 485,
	356, 356, 356, 356, 356, 534, 533, 533, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 499, 499, 499,
	499, 499, 499, 499, 499, 499, 499, 499, 499, 499,
	499, 499, 499, 499, 499, 499, 499, 499, 499, 499,
	499, 499, 499, 499, 499, 499, 499, 499, 499, 500,
	500, 500, 500, 500, 500, 500, 486, 486, 486, 486,
	486, 490, 490, 490, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 491, 491, 496, 496, 497,
	497, 497, 492, 493, 498, 498, 498, 498, 632, 632,
	502, 502, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 488, 488, 488, 495, 495, 495, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 402, 402, 402, 402,
	401, 401, 403, 403, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 434, 434, 434, 434, 434, 434,
	434, 434, 434, 434, 434, 434, 434, 434, 434, 434,
	434, 434, 434, 434, 434, 434, 434, 434, 434, 434,
	434, 434, 434, 434, 434, 435, 435, 435, 435, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 552, 552, 552, 552, 552, 552,
	552, 552, 437, 437, 555, 555, 556, 556, 553, 553,
	553, 553, 553, 553, 553, 553, 553, 553, 553, 553,
	553, 553, 553, 553, 553, 553, 553, 553, 553, 553,
	553, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 563, 563, 564,
	564, 566, 566, 567, 567, 568, 569, 569, 569, 570,
	571, 571, 565, 565, 572, 572, 572, 572, 573, 573,
	574, 574, 574, 574, 574, 575, 575, 575, 575, 575,
	447, 447, 448, 448, 454, 454, 454, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 315, 315, 314, 266, 266, 266, 266, 266,
	266, 369, 369, 367, 367, 367, 370, 370, 368, 368,
	366, 366, 365, 365, 444, 444, 442, 442, 446, 446,
	395, 395, 501, 501, 501, 501, 501, 501, 501, 501,
	396, 396, 396, 404, 397, 397, 398, 398, 398, 398,
	398, 438, 439, 399, 399, 399, 440, 440, 449, 453,
	453, 452, 451, 451, 450, 450, 428, 428, 429, 429,
	376, 376, 633, 633, 372, 372, 474, 474, 474, 474,
	312, 312, 361, 361, 311, 311, 303, 303, 304, 304,
	304, 304, 354, 354, 455, 455, 503, 503, 504, 504,
	505, 505, 506, 506, 507, 508, 509, 443, 443, 287,
	286, 273, 274, 285, 284, 283, 272, 275, 280, 281,
	282, 277, 278, 294, 293, 292, 245, 248, 299, 300,
	300, 302, 302, 301, 301, 289, 290, 291, 479, 271,
	305, 305, 306, 306, 306, 307, 307, 307, 307, 267,
	267, 268, 268, 295, 295, 296, 297, 297, 288, 288,
	288, 258, 258, 258, 259, 259, 260, 260, 517, 517,
	514, 514, 514, 515, 515, 515, 516, 516, 516, 516,
	513, 513, 513, 513, 513, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 526, 526,
	527, 527, 527, 527, 527, 527, 527, 527, 527, 527,
	527, 527, 527, 527, 527, 527, 527, 527, 528, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	531, 531,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 6, 6, 9, 6, 8,
	4, 4, 5, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 6, 6, 9,
	6, 9, 6, 5, 6, 5, 1, 1, 1, 0,
	6, 6, 6, 6, 6, 6, 4, 4, 4, 4,
	3, 4, 4, 4, 7, 7, 9, 8, 9, 5,
	3, 5, 7, 4, 12, 4, 12, 1, 3, 5,
	5, 2, 5, 3, 6, 4, 4, 6, 5, 6,
	5, 6, 4, 8, 3, 4, 2, 3, 10, 3,
	6, 4, 3, 1, 3, 2, 1, 1, 3, 1,
	3, 2, 2, 3, 2, 0, 1, 1, 0, 2,
	0, 7, 10, 6, 8, 6, 6, 6, 9, 4,
	3, 2, 2, 0, 1, 3, 1, 1, 1, 1,
	1, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 1,
	12, 3, 1, 0, 1, 1, 2, 3, 3, 0,
	4, 6, 0, 5, 7, 6, 8, 8, 2, 1,
	3, 1, 3, 2, 5, 0, 1, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 6, 4, 9, 7, 12, 12, 12, 9, 2,
	7, 2, 1, 1, 1, 3, 3, 0, 3, 1,
	3, 1, 1, 3, 2, 5, 0, 7, 5, 2,
	0, 1, 2, 3, 1, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 6, 6, 6, 6, 4, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 6, 3, 8, 3, 4, 3, 3, 4,
	3, 4, 4, 4, 3, 5, 7, 3, 3, 4,
	3, 3, 3, 3, 3, 2, 0, 1, 0, 1,
	0, 4, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 5, 1, 2, 1, 3, 2, 0, 7, 2,
	5, 0, 1, 3, 3, 1, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 1, 1, 3,
	4, 6, 3, 3, 5, 3, 1, 3, 2, 2,
	2, 2, 1, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 7, 7, 9, 10,
	5, 2, 6, 4, 7, 7, 7, 10, 5, 2,
	2, 1, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 3, 1, 2, 1, 2, 1, 2,
	1, 1, 3, 5, 4, 6, 4, 3, 0, 1,
	3, 2, 4, 2, 4, 1, 6, 3, 1, 1,
	5, 3, 2, 6, 3, 3, 4, 4, 3, 1,
	3, 3, 2, 1, 3, 3, 1, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 2, 1, 1, 2, 2, 1, 3, 3,
	3, 3, 3, 2, 3, 3, 1, 1, 1, 1,
	1, 2, 2, 5, 7, 3, 3, 3, 4, 4,
	6, 5, 5, 5, 3, 4, 4, 3, 4, 4,
	3, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 2, 6, 4, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	1, 1, 3, 2, 3, 4, 3, 4, 3, 5,
	3, 4, 4, 3, 4, 5, 3, 4, 3, 4,
	4, 5, 3, 3, 1, 1, 0, 2, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 5, 2,
	0, 3, 3, 4, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 3, 4, 5, 4, 4, 2, 3,
	2, 3, 6, 6, 7, 9, 7, 9, 4, 3,
	4, 4, 5, 1, 1, 10, 10, 3, 5, 5,
	5, 3, 5, 6, 4, 4, 5, 5, 2, 3,
	2, 5, 4, 2, 0, 1, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 1, 2, 0, 1,
	2, 1, 2, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 6, 5, 8, 3, 6, 6, 3, 13, 16,
	1, 0, 1, 2, 3, 0, 2, 0, 4, 0,
	4, 5, 4, 3, 3, 1, 3, 10, 13, 0,
	2, 3, 1, 1, 0, 1, 2, 2, 2, 2,
	1, 1, 0, 1, 3, 1, 1, 1, 2, 3,
	3, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 8, 0, 1, 1, 0, 2, 1, 0,
	1, 0, 1, 1, 0, 1, 4, 1, 0, 3,
	7, 7, 1, 1, 3, 7, 1, 3, 11, 3,
	2, 0, 3, 1, 2, 2, 3, 2, 6, 2,
	1, 2, 2, 2, 8, 4, 2, 5, 5, 5,
	2, 2, 0, 1, 3, 11, 12, 9, 5, 3,
	1, 5, 10, 7, 11, 3, 3, 0, 2, 4,
	3, 3, 1, 5, 1, 3, 1, 2, 0, 1,
	2, 2, 0, 1, 3, 3, 2, 2, 1, 1,
	1, 4, 0, 6, 0, 3, 0, 2, 2, 2,
	0, 1, 1, 2, 2, 0, 3, 3, 2, 1,
	1, 2, 2, 5, 8, 4, 1, 0, 1, 2,
	2, 1, 2, 3, 3, 2, 2, 3, 2, 2,
	2, 2, 2, 3, 1, 4, 2, 2, 2, 4,
	7, 3, 4, 6, 5, 7, 5, 5, 3, 3,
	0, 2, 2, 2, 1, 1, 1, 8, 10, 11,
	7, 10, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 3, 0,
	1, 8, 11, 3, 6, 6, 5, 3, 4, 1,
	0, 1, 3, 17, 20, 16, 19, 4, 2, 0,
	1, 0, 1, 0, 1, 3, 2, 4, 2, 3,
	1, 0, 2, 0, 1, 1, 0, 9, 6, 6,
	8, 6, 8, 5, 7, 2, 6, 7, 4, 4,
	5, 2, 4, 6, 6, 8, 6, 7, 8, 9,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 6, 4, 7,
	3, 0, 7, 10, 1, 1, 1, 1, 2, 2,
	3, 0, 3, 0, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 2, 3, 2, 2, 1, 2, 12, 15,
	3, 1, 0, 4, 3, 0, 1, 1, 4, 4,
	5, 1, 0, 3, 0, 3, 0, 3, 0, 3,
	0, 4, 0, 1, 0, 6, 7, 3, 6, 3,
	1, 3, 1, 1, 4, 2, 1, 3, 1, 3,
	4, 8, 11, 5, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 6, 4,
	5, 4, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	3, 1, 3, 3, 3, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 4, 1, 0,
	1, 0, 2, 1, 0, 2, 5, 7, 2, 1,
	2, 4, 3, 5, 0, 1, 3, 5, 1, 2,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 6, 6, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 4,
	3, 4, 3, 4, 3, 4, 4, 3, 6, 5,
	5, 5, 4, 4, 3, 4, 3, 5, 0, 5,
	0, 2, 0, 1, 3, 3, 2, 2, 0, 6,
	1, 0, 3, 0, 3, 3, 3, 0, 1, 4,
	2, 2, 2, 2, 2, 3, 2, 2, 3, 0,
	4, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 7, 1, 7, 5, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 0, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 593, -103, -100, -68, -66, -107, -108,
	-89, -109, -102, -129, -134, -116, -117, -118, -130, -136,
	-187, -192, -193, -194, -3, -54, -56, -69, -88, -90,
	-101, -111, -110, -112, -119, -126, -122, -106, -60, -131,
	-135, -145, -188, -189, -190, 32, 31, 100, 80, 154,
	128, 137, 202, 382, 424, 436, 396, 142, 416, 401,
	-139, -140, 454, -55, -67, -133, -132, 73, 129, 410,
	-4, -12, -16, 29, 46, -57, -58, -59, 62, -76,
	-72, -83, -77, -70, -71, -74, -616, 102, -559, -91,
	-94, -125, -620, 161, 220, -113, -114, 365, -120, -121,
	418, -123, -124, 420, 162, -62, -61, 156, -215, -217,
	-137, -138, -191, -146, -147, -148, -149, -150, -151, -152,
	-153, -179, -154, -155, -156, -157, -158, -159, -163, -182,
	-160, -161, -162, -165, -164, -166, -171, -167, -168, -169,
	-170, -172, -173, -175, -176, -177, -178, -180, -181, 459,
	-174, -183, 520, 49, 474, 82, 146, 428, 21, -5,
	-6, -7, -8, -9, -10, -11, -15, -14, -53, -73,
	-75, -78, -79, -80, -87, -81, -82, -558, -92, -93,
	-96, -98, -99, -95, -97, 417, -218, -216, 590, 535,
	-18, -23, -24, -19, -20, -22, -25, -21, -26, -27,
	-28, -38, -43, -44, -40, -41, -39, -42, -45, -46,
	-47, -48, -49, -50, -51, -52, -30, -36, -37, -31,
	-32, -33, -34, -35, -17, -29, 556, 565, -221, -219,
	-220, -228, 446, 543, 494, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, -310, 2, -289,
	-295, -296, -297, -288, -258, -528, -531, 4, -525, -529,
	168, 230, 329, 21, 23, 22, 24, 25, 26, 27,
	29, 30, 41, 42, 44, 45, 46, 47, 48, 49,
	53, 55, 59, 60, 61, 62, 63, 64, 68, 73,
	74, 79, 80, 81, 82, 83, 84, 85, 91, 88,
	89, 90, 92, 94, 96, 97, 98, 99, 100, 101,
	103, 104, 105, 107, 108, 109, 117, 118, 119, 120,
	121, 123, 128, 129, 132, 127, 131, 133, 135, 136,
	137, 140, 141, 142, 144, 145, 147, 148, 149, 151,
	152, 154, 155, 156, 159, 157, 502, 158, 160, 161,
	162, 163, 166, 174, 175, 176, 181, 183, 184, 188,
	189, 190, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 203, 207, 209, 210, 211, 212, 213, 219, 220,
	222, 223, 224, 225, 226, 231, 232, 233, 237, 234,
	243, 244, 248, 249, 250, 252, 256, 257, 258, 259,
	260, 261, 263, 265, 264, 267, 270, 271, 274, 278,
	279, 283, 284, 280, 285, 286, 288, 289, 292, 290,
	293, 294, 291, 295, 297, 298, 299, 300, 301, 302,
	303, 304, 305, 306, 307, 308, 296, 311, 309, 313,
	314, 315, 327, 324, 319, 320, 316, 321, 317, 318,
	322, 323, 326, 331, 332, 335, 217, 337, 338, 341,
	359, 345, 346, 347, 350, 351, 354, 357, 358, 360,
	361, 362, 363, 364, 365, 366, 367, 369, 370, 372,
	373, 374, 376, 377, 378, 380, 382, 383, 385, 386,
	388, 389, 390, 391, 392, 393, 394, 396, 398, 397,
	399, 401, 403, 404, 405, 410, 416, 412, 413, 414,
	415, 417, 418, 419, 420, 422, 423, 424, 426, 427,
	428, 429, 430, 432, 434, 435, 439, 440, 456, 457,
	476, 436, 437, 438, 441, 442, 443, 444, 445, 449,
	447, 448, 450, 451, 452, 454, 455, 458, 459, 461,
	462, 463, 464, 465, 466, 467, 470, 472, 473, 474,
	493, 475, 477, 481, 482, 483, 484, 478, 479, 492,
	486, 487, 489, 490, 495, 496, 497, 498, 499, 500,
	501, 503, 505, 513, 514, 515, 517, 520, 521, 522,
	523, 511, 525, 526, 529, 530, 531, 534, 532, 533,
	535, 537, 540, 541, 542, 548, 547, 549, 552, 557,
	558, 560, 561, 562, 36, 50, 51, 54, 56, 58,
	69, 70, 71, 75, 124, 125, 153, 164, 165, 177,
	191, 192, 204, 206, 214, 215, 216, 238, 239, 241,
	246, 268, 334, 336, 352, 356, 371, 375, 379, 381,
	395, 431, 468, 480, 485, 506, 507, 508, 509, 516,
	518, 543, 544, 545, 550, 559, -310, 2, -289, 343,
	-282, 2, -258, -258, 382, 28, 2, 28, 370, 448,
	497, 499, 2, -585, -355, 2, 28, -261, -258, 102,
	202, 446, -282, 2, -585, -355, 25, 2, -258, 2,
	357, 22, 27, 66, 77, 98, 140, 163, 185, 188,
	-619, 359, 389, 434, 450, 492, 503, 517, 2, 547,
	289, 447, 494, 230, 120, 522, 441, -597, 439, 440,
	357, 387, 426, 205, 536, -262, 2, 436, -258, 289,
	2, 593, 94, 279, 74, 431, 451, -142, 514, -143,
	-144, 2, -141, 506, -512, 441, 311, -258, 593, 593,
	593, 28, -271, -258, 494, 230, 441, 120, 490, 593,
	2, 494, 362, 547, 447, 120, 392, 230, 522, 188,
	140, 27, 441, -597, 569, 570, 289, 126, -583, 2,
	-578, 4, -529, -525, -304, -303, 494, 500, 120, -297,
	-288, 583, -296, 593, 593, 593, 2, 249, 250, 391,
	390, 451, 452, 593, 593, 593, 593, 439, 2, 163,
	22, 27, 66, 93, 98, 126, 185, 188, 348, -617,
	359, 389, 450, 492, 496, 503, 517, -596, 475, 68,
	415, 441, -595, -597, 289, 522, 140, -405, 120, 279,
	200, 530, 499, 497, 528, 132, 237, 533, 532, 593,
	593, -104, 2, 590, 32, 31, -103, -107, 142, 454,
	-210, 494, 242, 2, -258, 593, 593, 2, 249, 250,
	439, 440, 593, 593, 186, -578, 2, 593, 593, 2,
	249, 250, 439, 440, 242, 2, 68, 443, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 2, -185, 451, 475, 211, 47, 46,
	74, 28, 388, 79, 363, 121, 148, 523, 203, 230,
	231, 257, 93, 94, -407, 44, 250, 68, 249, 440,
	-602, 439, -459, 495, 442, 448, 489, 261, 436, 514,
	102, 537, 427, 562, 392, 393, 487, 405, 280, 157,
	187, 4, 120, 311, 453, 506, 279, 435, 366, 84,
	-626, 2, 494, -628, 2, 514, 514, 2, -628, 2,
	-628, 2, -628, 2, -629, 514, 559, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, -216, -218, -217, 593, 593,
	593, 593, 593, 593, 593, -185, 451, 2, 74, 28,
	-348, -350, 527, 240, 150, 349, -215, -217, 2, -558,
	-510, 2, -433, -532, -435, 581, 582, 574, 491, 67,
	-314, 328, 563, -447, 126, 528, 343, -531, -436, -449,
	153, 359, 431, -370, 8, 9, 5, 6, 7, -267,
	-437, -443, 519, 167, 333, -307, 594, 10, 590, -555,
	-217, -448, 37, 206, 65, -514, -306, -268, -486, 241,
	-305, -288, -552, -553, 4, -525, -526, -515, -489, -497,
	-493, -494, -500, -258, -528, 77, 111, 112, 110, 115,
	114, 282, 281, 116, 113, 453, 536, 66, 36, 214,
	215, 246, 334, 216, 75, -554, 141, -527, 238, 239,
	468, 51, 395, 177, 125, 124, 336, 56, 54, 544,
	-498, 122, 506, 507, 508, 509, 191, 192, 58, 164,
	165, 356, 379, 485, 516, 518, 204, 268, 43, 106,
	187, 236, 218, 245, 247, 251, 269, 272, 312, 325,
	330, 353, 355, 425, 460, -632, 545, 480, 69, 70,
	-560, 397, -561, -282, -560, 593, 593, 595, 593, -340,
	-342, -343, 2, 28, 138, 590, 2, -464, 2, -465,
	-469, -217, 262, -468, 590, -466, 588, -289, 344, -556,
	432, -552, -553, -267, -288, -306, 4, -525, -527, 592,
	-344, 590, 120, 494, 78, 230, 163, -400, 590, -258,
	28, 343, 510, 595, -341, 386, -445, 590, 343, 186,
	346, 60, 293, 2, 2, 2, 2, 2, 214, -258,
	494, 119, 2, 260, 2, 2, 2, 2, 2, 2,
	2, -363, 214, 2, -289, 547, -363, 214, 2, -363,
	214, 2, -406, 2, 87, -272, 214, 2, -258, -298,
	214, 2, -293, -295, -302, 214, 2, -300, -258, -523,
	214, 2, -522, -517, 10, -516, 5, 4, -525, -529,
	-526, -528, 77, -433, 2, -131, 2, 60, -258, 547,
	2, 2, 456, 2, 590, -142, 71, 514, 43, 451,
	-420, 2, -421, -254, -255, -256, -476, -257, 248, 385,
	394, 566, 130, 328, 562, -611, 186, 573, 510, -510,
	-510, -371, 592, 2, 2, 2, 2, 2, 2, -469,
	214, -289, 2, -286, -513, 4, -525, -529, -526, -530,
	28, 31, 32, 33, 35, 37, 38, 39, 40, 57,
	65, 66, 72, 76, 78, 87, 93, 102, 110, 111,
	113, 112, 114, 115, 116, 126, 130, 134, 138, 139,
	143, 146, 150, 167, 169, 182, 185, 186, 202, 205,
	208, 221, 235, 240, 242, 262, 266, 273, 281, 282,
	328, 333, 339, 343, 344, 348, 349, 368, 384, 400,
	421, 446, 453, 471, 488, 494, 504, 510, 512, 519,
	527, 528, 536, 538, 546, 551, 553, 554, 555, 556,
	-531, 2, -469, 214, 2, -292, 214, -469, -295, 2,
	-272, 2, -285, -513, 2, -311, 214, -289, -291, -295,
	-293, 2, 2, 2, 2, -300, 2, -522, 214, 2,
	28, 28, 547, 386, 242, 510, 595, -361, -303, -304,
	-509, 8, -354, -258, 592, -433, 2, -131, -115, 2,
	182, -433, 214, 2, -131, 214, 2, -433, 214, 2,
	-131, 214, 2, -599, 2, -522, 214, -258, 2, 293,
	2, 2, 517, 2, 98, 494, 119, 2, 414, -618,
	434, 521, 2, 2, 2, 2, 2, 2, 2, 494,
	-277, 2, -258, 182, 478, -300, 214, -301, 2, 447,
	-627, 397, -522, 214, 2, 547, -293, 214, 2, -293,
	230, 244, -272, 214, 2, 499, 497, 499, 497, 186,
	2, 242, 2, 242, 2, -470, 2, -471, -465, -472,
	588, 344, -480, 2, -479, -516, 543, -104, 590, -104,
	590, 451, 590, -522, -289, -289, -433, 2, -131, -115,
	2, -433, 2, -131, 2, -128, -522, -127, 590, 186,
	-433, 2, -131, -115, 2, -433, 2, -131, 2, -210,
	182, 2, 120, 494, -185, 2, 182, 538, 2, 8,
	2, 221, -522, 442, 393, 174, 2, 456, 2, 457,
	74, -407, 562, 74, 186, 2, 186, 2, -390, 2,
	556, 186, 2, 2, -582, 2, 343, 186, 2, 186,
	2, 186, 2, 186, 2, 186, 2, -184, 452, 515,
	493, 390, 250, 2, -131, 553, -115, 250, 249, -433,
	553, 2, -603, 182, 440, -433, 2, 513, 259, 158,
	186, -390, 2, 186, 2, 186, 2, 5, 2, 391,
	476, 2, 248, 385, 476, 2, -289, 494, 547, 447,
	120, 28, 2, 439, 2, 2, 88, 89, 186, 2,
	186, 2, 201, 186, 2, 186, 494, 562, 2, -382,
	-469, -419, -420, -419, 510, -348, -350, -185, 456, 2,
	-222, -380, -224, 182, -410, -411, -225, 273, 169, 339,
	-226, -389, 28, 138, -389, -389, 60, 591, 591, 11,
	12, 76, 41, 581, 582, 583, 584, 180, 585, 586,
	579, 580, 578, 571, 572, 576, 254, 255, 95, 575,
	573, 86, 287, 433, 170, 171, 172, 173, 411, 228,
	34, 229, 14, 15, 16, -314, 33, 348, 272, 563,
	218, 460, 574, 17, 18, 19, 245, 247, 330, 50,
	221, -266, 359, -313, 491, 67, -433, -433, -433, -433,
	-433, -433, -433, -433, 355, 590, -376, -428, 588, -217,
	590, 590, 590, 590, -509, -217, -433, -447, 591, -368,
	590, -217, -447, -442, 590, 431, 588, 590, -450, -433,
	5, 5, 5, 590, 592, -563, 557, 182, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 381, -491, 590, -490, 590, -490, -490,
	548, -488, 590, 565, 558, 590, -488, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	548, 595, -560, -344, 590, -372, -474, -433, 583, -372,
	-372, 343, -365, -433, 106, -393, 251, 312, 187, 269,
	425, 236, -430, 594, -430, -458, 565, -217, -466, -288,
	-217, -468, 590, -464, -458, -105, -509, -88, -101, -110,
	-131, -145, -189, -190, 583, -289, 590, 186, 590, 592,
	-513, 186, -354, -272, -289, -305, -306, -311, 2, 137,
	-365, -578, 522, 441, 28, 447, -354, -261, 38, -444,
	-483, -484, -534, 594, -533, -486, -496, -492, -495, 371,
	375, -515, 54, 544, -498, 241, 4, -525, -527, 238,
	239, 468, 51, 395, 177, 125, 124, 336, 56, 506,
	507, 508, 509, 191, 192, 58, 545, 480, 69, 70,
	-578, 522, 441, 28, 447, -354, 182, -520, 2, -519,
	-518, 116, 453, -516, 5, 2, 153, 2, 2, 2,
	-258, -237, 595, 64, 419, 153, -363, 214, -237, 153,
	-237, 153, -312, 214, -311, -237, 153, -237, 595, 153,
	-237, 595, 153, 592, 595, 153, -520, 2, -406, -512,
	-365, 38, -420, 2, 126, -518, -630, 595, 271, -317,
	286, 327, 210, 344, 560, 337, 130, -521, 5, 4,
	-443, -455, 126, 279, 241, -503, -505, 8, -504, 9,
	-506, 581, 582, -511, -510, 109, 592, -513, -234, 412,
	454, 358, -233, 24, 29, 142, 232, 315, 541, 159,
	-330, 233, -327, 362, 153, 472, 531, -592, -593, 438,
	501, 502, 90, 337, 454, 358, 412, 153, -386, -388,
	38, 118, 315, 357, 61, 225, 291, 292, 474, 550,
	153, 454, 358, 412, 358, 24, 142, -249, -246, 454,
	-593, 99, 412, 486, 384, -593, -236, 472, 531, -592,
	-593, 438, 412, -235, -332, -327, 362, 153, 594, 24,
	142, 412, 454, 358, -614, -615, 29, 412, 358, -586,
	-279, -557, 221, 556, 153, -279, -279, -469, 214, -607,
	2, 182, -600, -127, 263, 5, 10, -522, -127, -361,
	595, 595, -513, 583, 440, 439, 153, 153, 153, 153,
	182, 328, 2, 2, 2, 2, 2, 188, -595, -619,
	2, 2, -289, 214, -346, 343, -581, -362, 494, -289,
	182, 328, 43, -292, 214, 2, -295, 547, -586, 328,
	-294, 214, -289, 38, 590, 328, 2, -406, 2, 230,
	-557, 328, -470, -308, -289, -465, -308, 454, -282, 38,
	-430, -289, 591, 595, -480, -480, -522, -198, 556, 186,
	102, 590, 590, -210, -477, 595, -476, 221, -523, -128,
	-522, 415, -522, -581, -272, 2, -289, 2, 494, 252,
	-522, -198, 221, -522, -522, -522, -512, 28, 457, 2,
	-184, 452, 515, 89, 457, 2, -289, 494, 120, 230,
	80, -258, -584, 182, -579, 426, 441, 522, -578, -289,
	120, -289, 120, -289, 120, -289, -289, 2, 2, 2,
	2, 2, 85, 2, -131, -433, 2, 85, 2, 46,
	-603, 182, 2, 513, 2, 513, 2, -258, -258, -258,
	475, 271, -289, -289, -289, -290, -295, 495, 440, -433,
	2, -621, 2, 186, 182, 2, 494, 230, 494, 230,
	120, 186, 74, 120, 28, 494, 437, -237, 595, -262,
	-222, -380, -512, -381, -380, -223, -222, -225, 182, 394,
	532, 315, 458, 256, -411, -410, 28, -433, -415, 176,
	314, -433, -413, -435, 581, 582, -504, -506, -364, 337,
	-216, -216, -216, -351, -460, -433, 384, 230, -485, -483,
	-483, -287, -513, 506, -433, -433, -433, -433, -433, -433,
	-433, -433, -433, -433, -433, -433, -433, -433, -433, -433,
	-433, -433, -433, -433, -433, -433, -433, -433, -433, -433,
	-433, -433, -433, -433, -433, -433, -433, -433, -433, -433,
	272, 218, 460, 50, 221, -433, 510, -433, -433, -433,
	-433, 309, 328, 333, 519, 167, 529, 138, 337, -633,
	488, 40, -440, -217, -369, 590, -454, 35, 471, 28,
	-447, 590, 2, -428, -433, -429, -315, -313, -258, 581,
	582, 583, 584, 585, 586, 571, 572, 573, 14, 15,
	16, 576, 580, 578, 579, 180, 95, 575, 287, 433,
	86, 170, 171, 172, 173, 254, 255, 17, 18, 19,
	34, 574, -366, -365, -365, 591, 546, 28, 138, 583,
	2, 591, 595, 38, 591, -433, -366, -446, -442, -365,
	-453, -452, 553, -401, -402, 561, 296, 123, 212, 294,
	-403, 445, -507, 8, -513, 583, -564, 175, 205, 590,
	591, 2, 591, 2, 591, -433, 2, 591, -433, 2,
	591, -433, 2, 591, -433, 2, 591, 2, -433, -433,
	-433, -433, -433, -433, -433, -365, 8, -507, -507, 506,
	506, -507, -507, -507, -499, 371, 372, 373, 374, 274,
	275, 276, 277, 375, 376, 377, 378, 301, 302, 303,
	304, 297, 298, 299, 300, 305, 306, 307, 308, 196,
	197, 198, 199, 192, 193, 194, 195, -499, -395, 2,
	-501, -365, 4, 561, 296, 123, 212, 294, 445, 5,
	-395, 2, -396, 2, -433, -365, -397, -434, -435, 581,
	582, 574, -314, -447, -398, 2, -433, -366, -433, 57,
	266, 512, -399, -433, 186, -365, -365, 2, -365, 2,
	-561, 38, -365, -357, 595, 186, 38, 4, -357, -357,
	590, 591, 595, -394, 209, 290, 285, 244, -394, -464,
	-393, 251, -391, 353, -391, -391, -458, -273, 588, 596,
	-513, -458, -457, -456, 38, -282, 350, -458, -458, 592,
	591, -457, 589, -576, 590, 593, 593, 593, 593, 593,
	-289, 590, -365, -513, 592, 477, 2, 591, 245, 245,
	245, 245, 432, 591, 510, -580, -298, -302, 495, 2,
	556, -103, 345, 591, 595, -356, 37, 588, 592, -507,
	2, 2, -502, 548, 590, 590, -402, 590, 186, -580,
	-302, 495, 2, -355, 595, 510, -258, 2, -289, -363,
	-237, 153, -363, -363, -237, 595, 153, -272, -293, -298,
	-300, -302, -258, -522, -523, -237, -294, -611, 591, 514,
	-421, -316, 394, 470, 413, 449, 490, 8, 9, 8,
	9, 595, -513, 595, -612, 93, 510, 78, 441, -251,
	280, 510, -424, 214, 78, -535, -275, 93, -536, -258,
	72, 528, 384, 185, 151, -612, 93, 384, -612, 93,
	2, 232, 93, 454, 475, 28, 60, -469, 41, 41,
	28, -610, 326, 267, 552, 186, 562, 494, 230, 441,
	510, 510, -469, -388, -483, 118, 291, 292, 60, -508,
	-503, 581, 582, -508, 60, -508, -508, -508, 556, -292,
	-469, 441, 510, 510, 510, 403, 403, -246, 510, 510,
	-631, 573, 403, 595, 41, 41, 28, -610, 326, 267,
	186, 510, -311, -273, 542, 42, 542, 42, 542, 510,
	42, 441, 510, 595, 42, 510, 510, -13, 454, 568,
	417, -587, -263, 105, 321, 284, 322, 97, 318, 96,
	317, 103, 319, 104, 320, 549, 331, 63, 316, 295,
	323, -264, -265, 364, 540, 120, -522, -13, -13, 454,
	358, 412, 153, -608, 221, -597, 221, -477, 221, -477,
	-303, -258, 592, -131, -433, -433, -131, -433, -131, 46,
	153, 2, -627, 260, 590, -320, 328, 186, -354, -478,
	242, 595, -362, -578, 153, -519, -387, -386, 328, -294,
	214, 2, 153, -344, 328, 147, 590, 392, 2, 153,
	-274, 214, -259, -258, -406, -240, 498, 153, -384, 538,
	-416, -131, 590, 126, 38, -416, -373, -374, -475, -375,
	-275, 590, -282, -430, -104, -479, 591, 591, 591, -197,
	347, -196, -258, 5, -210, 538, -319, -425, -424, -539,
	-540, -535, 272, 230, 528, 244, 168, -345, -276, -275,
	119, -204, 556, -127, -128, 591, -477, 221, 478, -198,
	-198, -477, -477, -289, 182, -522, -198, -198, -198, 2,
	2, 2, 2, -390, -289, -272, -311, -289, 592, -354,
	-354, -302, -298, -390, -272, -390, -272, -390, -272, -131,
	-433, 2, 451, 182, 182, 592, -390, -347, 421, 2,
	392, 120, 494, 362, 230, -289, -311, -289, -311, -272,
	120, -272, 121, -289, -469, -381, -223, 344, 256, 458,
	-413, -414, -435, 431, 432, -414, 431, 432, 8, 9,
	8, 9, -227, 462, 332, -363, 595, -231, 39, 134,
	256, -289, 562, 149, -433, -433, 510, -633, 488, -440,
	149, -433, 309, 333, 519, 167, 529, 138, 337, 186,
	590, -434, -434, 591, -367, -433, -433, 589, 598, 591,
	592, 591, -350, 595, -348, -433, -365, -365, 591, 592,
	-365, -354, 589, 589, 595, 591, -451, -452, 143, -433,
	510, 510, 510, 510, 590, 591, 592, -569, 354, 590,
	590, -433, 591, 591, 591, 591, 38, 595, 595, 595,
	591, 595, 595, 595, 591, 591, 591, 595, 591, 562,
	562, 591, 591, 591, 591, 595, 591, 595, 591, 186,
	591, 591, -404, 368, 591, 11, 12, 581, 582, 583,
	584, 180, 585, 586, 579, 580, 578, 571, 572, 573,
	86, 287, 433, 14, 15, 16, -314, 245, 221, -434,
	-434, -434, -434, 591, -438, -439, 186, 182, 38, -399,
	-399, -399, 591, 186, -365, 591, 591, 590, -562, 289,
	328, 591, -427, -426, 554, -474, -358, 2, -464, -284,
	-513, -427, -427, -365, -433, 251, 251, -392, 538, 343,
	-394, -464, -457, -509, -432, -431, 184, 39, 134, 324,
	217, -457, -282, -344, -457, -457, -513, -458, -458, -456,
	591, -577, -509, 591, -359, -467, -556, -350, 592, -513,
	-207, -557, -186, 5, 333, -186, -186, -186, -354, 510,
	510, 221, 25, 369, -483, 588, 589, 8, -513, 590,
	-507, -507, -507, -354, 186, 186, 221, 186, -519, -519,
	2, -237, -363, -237, -237, -311, -312, -237, -237, -237,
	-385, 556, -510, -420, 526, 83, 394, 506, -510, -233,
	412, -275, -275, -289, -299, -258, 200, 404, -519, 328,
	-424, 214, -239, 328, -483, -283, -258, 590, -408, 558,
	256, 256, 538, -275, -283, 256, 214, -275, 214, -283,
	2, -283, -588, 394, 338, -433, 60, -328, 278, 392,
	329, -234, 412, 454, 358, -131, -131, -131, -131, -131,
	590, -611, 538, 137, -289, -311, -289, -299, -519, -294,
	454, 358, 412, 325, -305, -508, -508, -386, 454, 358,
	412, -299, -519, -292, -519, -245, 214, -258, -245, 214,
	441, -272, 403, 562, 45, -631, -235, -131, -131, -131,
	-131, -131, 590, -273, -236, 412, 5, 214, -275, 5,
	-275, 214, 5, -258, -275, -299, -519, -615, 24, 142,
	-275, -299, -519, -143, 28, -185, -263, -522, 333, 534,
	-272, -586, -279, 441, 510, 510, -469, -604, -605, 202,
	424, 441, -354, -127, -201, 556, -127, -195, 226, 583,
	-583, -258, 547, -258, -318, -321, -319, -275, -213, -214,
	558, 556, 153, -309, -289, 588, -198, -522, -289, -478,
	-300, -301, 153, -344, 328, -522, 38, 153, 590, 2,
	2, -293, 343, 328, -274, 214, -241, 144, -631, -272,
	-427, -358, -383, -418, 421, 343, -345, 543, -282, -383,
	-360, 595, 186, 573, 592, -345, -473, 583, -104, -104,
	-198, 595, 590, 573, 573, 590, -522, -522, 591, 595,
	-239, -289, -274, 230, 230, -281, -259, 591, 595, 592,
	590, -206, 347, -205, 145, 258, 243, 464, 465, 466,
	467, 136, 463, -477, -204, -128, 186, 186, -63, 556,
	494, -198, 594, -258, -390, -390, -390, 451, 451, -258,
	-354, -285, -272, -289, -286, -311, 182, 182, -272, 532,
	-414, 344, 283, -460, -232, 564, -289, 594, -433, -433,
	149, 149, -433, -434, -434, -433, 149, 186, 590, -433,
	-444, 33, 33, 591, 595, -429, -433, -313, 591, 546,
	-350, -350, 591, 583, -513, 594, 591, -442, 146, -433,
	504, 296, 212, 294, -403, 294, -403, -403, -507, 5,
	-513, 583, -570, -278, 590, -258, 554, -349, 349, 591,
	-485, -483, -433, -433, -433, -433, -433, -507, -488, -488,
	-503, -503, -433, -438, -433, -485, -483, -434, -434, -434,
	-434, -434, -434, -434, -434, -434, -434, -434, -434, -434,
	-434, -434, -434, -434, -434, -434, -434, 138, 328, 337,
	-434, -439, -438, -433, -433, -483, 591, 591, 591, -365,
	-103, 590, 289, -377, 205, -433, -477, 595, -377, -377,
	591, -464, -464, 590, -433, 251, 589, 595, 597, 573,
	-344, 592, -456, -457, 589, 591, 595, 591, 595, -417,
	38, 591, -513, -427, -209, -208, 135, 53, 107, 133,
	333, -354, -354, 441, 346, 5, 8, 588, 589, 592,
	-507, 591, 591, 591, -354, -354, 441, -354, -237, -237,
	119, 315, -433, 510, 510, 60, 221, 153, 328, 540,
	-541, -536, 151, -433, 590, 230, 590, 590, 2, -229,
	-230, 142, 454, 24, -613, 2, 538, 153, -237, 153,
	-237, 560, -328, 590, 590, 510, 441, -251, 510, 556,
	-365, -433, -199, 126, -512, -593, 594, -593, 594, 441,
	510, 510, 441, 510, 510, 328, 153, 556, 166, 166,
	562, -245, 556, -365, 510, -487, 48, 26, 328, -293,
	-237, 153, 510, 510, 522, 454, -522, 333, -13, -299,
	-519, -294, 454, 358, 412, -585, -355, -585, 202, -302,
	-477, -203, 347, -202, 145, 423, 136, 258, 223, -477,
	-201, 186, 242, 556, -294, 2, 591, 591, 595, -542,
	38, 341, 341, 590, -289, -84, 556, -476, -509, -589,
	556, 43, -292, 38, 153, -586, -131, -294, -481, -482,
	5, 38, -289, 153, 343, 328, -242, 265, -631, -517,
	-557, -350, -383, -372, 329, 91, 591, -427, -374, -358,
	-433, 2, 591, -196, -197, -522, -522, -522, -198, -210,
	-210, -425, -322, 590, -274, -259, 590, -210, -276, 2,
	-523, 595, 590, 573, 573, 573, -204, -477, -127, -131,
	347, -289, 583, -390, -334, -333, 362, 337, -334, 431,
	431, 344, 176, 261, -231, -273, -433, -433, 149, 33,
	33, -433, -433, -444, 591, -433, -433, -365, 589, 5,
	-433, 591, 591, 8, -433, 591, 592, -571, -258, -433,
	591, 60, 591, 591, 595, 595, 591, 591, 591, 591,
	591, 591, 591, -439, 186, 138, 337, 590, 591, 591,
	-103, -441, 208, 60, -464, -441, -441, -392, -354, -464,
	-431, -273, 588, -513, -509, -467, 590, 592, -208, 573,
	-522, -522, 556, -302, 589, 2, 588, -513, 591, -302,
	119, -275, -275, 494, 431, -245, 384, -424, 153, -543,
	93, -545, 76, 168, 102, 328, 333, 528, 384, 72,
	126, 400, -623, 38, 567, 591, -352, -461, -556, 590,
	-258, -352, -354, 328, 483, 126, 328, 126, 551, 119,
	2, 522, 79, -275, -283, -354, -354, -289, -299, -519,
	160, 591, 595, 573, 2, 583, 583, -299, -519, -294,
	-299, -519, -292, 153, -245, 360, 166, 160, 591, -273,
	5, 5, 153, -270, 76, -275, 5, -275, -293, 119,
	441, 510, 510, 343, 343, 346, -201, 595, 590, 573,
	573, -201, -523, -127, 2, -344, -335, 232, -275, -540,
	-537, -538, 384, -544, -546, 168, 384, -131, 2, -212,
	-211, -258, 5, 590, -320, 347, 589, -591, 347, -590,
	117, 136, -519, -387, -131, -294, -344, 591, 595, 147,
	-409, 538, -273, -289, 153, -243, 264, -631, -517, -240,
	-412, -410, 139, 590, 343, -131, -350, 573, 591, 591,
	119, 119, 224, 152, -352, 590, 590, -354, 119, 591,
	-205, -206, -522, -127, -522, -204, -477, -64, -65, 230,
	93, 367, -286, 494, 230, 590, 590, -231, -433, -433,
	-433, 591, -350, -513, 583, -565, 362, 591, -460, -433,
	-433, -434, 186, 590, -444, 591, -566, 555, -433, -378,
	-379, -433, 429, 108, 206, -566, -566, 591, -509, 2,
	-522, 2, 510, 588, 2, 186, 221, 38, 403, -424,
	-283, -287, -280, -258, 168, 214, 333, 551, -408, 256,
	590, -434, -289, 590, 2, 30, -624, 130, 235, 591,
	595, -462, -269, -258, -433, -462, 591, 591, 333, 333,
	551, -433, -483, 590, -237, -237, 591, 591, -433, 510,
	-512, 100, -510, 2, -593, -245, -272, -433, 510, 5,
	-237, -287, -237, -237, -270, 522, -299, -519, -294, -609,
	495, 448, 523, 442, 189, 430, -609, 182, -202, -203,
	-522, -127, -201, 38, -325, 234, 2, -542, 256, -280,
	256, -622, 556, 591, 595, 573, 573, -318, -213, -85,
	-86, 511, -476, 595, 590, 573, -344, 38, 5, 590,
	590, -258, 343, 590, -273, -253, 92, -631, -517, -241,
	-383, 329, -354, 93, -412, -440, -198, 590, 590, -323,
	81, 94, 127, 213, 190, 231, 475, 481, 28, -323,
	591, -352, -352, 591, 590, -198, 591, 595, 28, 590,
	28, 590, -289, -311, -365, -365, 591, -350, 60, 595,
	591, 591, -434, -444, 591, -567, -568, -278, 595, 590,
	590, 455, 589, -354, 2, -354, -245, 384, -258, -545,
	-280, 328, 538, -433, -260, 590, -433, 38, 235, 131,
	219, -423, -625, 101, 484, 222, -461, -231, 591, -422,
	538, 400, -270, -352, 590, 590, 590, 573, 186, 590,
	-487, -237, -293, 510, 2, 2, 186, -585, 591, -598,
	398, -131, -329, -330, 221, 590, -324, 343, 119, 315,
	-211, -510, -510, 591, 38, -86, 9, -590, -591, -433,
	38, -131, -481, -352, -289, -352, 343, -247, -246, 273,
	-517, -242, 591, -283, -383, -523, -523, -422, 591, 591,
	-523, -65, -354, -354, 591, 591, -572, 392, 432, 207,
	-365, -351, 591, 595, 38, -379, 2, 2, 2, 403,
	153, 209, 591, -547, 288, -258, 591, 131, 219, -325,
	590, -232, -462, -325, 209, -289, -594, 538, 591, -337,
	-336, -333, -339, -338, -333, -365, -510, 100, 360, -365,
	-270, -354, -354, 343, -601, 187, -600, 5, 10, -213,
	360, -353, -463, -275, 82, 119, -335, -131, 591, -131,
	591, 591, -409, 591, -289, -244, -524, 403, 405, -631,
	-243, -427, 591, 591, -423, -422, -331, -327, 591, 591,
	591, 591, -573, -574, 50, 525, 109, -433, -573, -573,
	-568, -570, 168, 556, -548, -551, -550, 343, 461, 187,
	361, 591, 483, 550, -331, -354, 556, -344, -433, -422,
	591, 595, 543, 591, 595, 543, 591, 186, 591, -237,
	-606, 556, -237, -609, -200, 556, 46, -324, -289, 591,
	595, 383, 132, 142, -325, -622, -422, 590, -423, 590,
	-250, -249, -631, -503, -253, 139, -198, -198, -325, -423,
	-214, 556, -198, -575, 151, -574, 380, 181, 431, 380,
	181, -575, -575, -280, 55, -550, 343, -551, 343, 532,
	132, -624, 591, 55, -547, -325, -336, 221, -338, 186,
	360, 202, 186, 439, -600, 30, -252, -251, 590, -463,
	432, 432, 2, -329, -324, -423, -352, -325, -352, -248,
	-354, -247, 329, 532, -331, -325, -427, 109, 205, 505,
	315, 33, 573, -549, 315, 419, 64, 454, -549, -427,
	573, -548, 590, 590, 346, -354, 347, -354, 2, -213,
	-325, 591, -331, 591, -244, 454, -214, -331, 431, 351,
	-574, -433, 23, 333, 126, -433, -624, -365, -365, -237,
	-197, 590, 591, -324, -331, -422, -214, -423, -250, -373,
	-427, -214, 591, 591, -197, -238, 64, 419, -252, -214,
	-423, -427, -325, -427, -427, -326, -327, 510, 591, -427,
	-325, -331, 590, -331, -214, -365, -214, -427, 591, -427,
	-326,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 543, 544, 546, 547, 548, 550,
	551, 553, 555, 557, 558, 559, 561, 562, 564, 565,
	566, 567, 568, 570, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	639, 641, 0, 1375, 1377, 1379, 1381, 0, 787, 0,
	36, 37, 39, 0, -2, 328, 330, 332, 0, 359,
	361, 362, 364, 366, 367, 368, 370, -2, 0, 476,
	477, 479, 481, -2, 0, 989, 991, 0, 628, 630,
	0, 994, 996, 0, 0, 650, 651, 0, 1482, -2,
	644, 646, 648, 714, 716, 718, 720, 722, 724, 726,
	728, 730, 732, 733, 735, 737, 739, 741, 743, 744,
	746, 748, 750, 751, 753, 754, 756, 758, 760, 762,
	764, 766, 768, 770, 772, 774, 776, 778, 780, -2,
	783, 784, -2, -2, 0, -2, -2, -2, 1393, 41,
	43, 45, 47, 49, 51, 53, 55, 57, 59, 420,
	422, 424, 426, 428, 431, 433, 435, 1540, 483, 485,
	487, 489, 491, 493, 495, 0, -2, 1554, 0, 0,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
	71, 105, 106, 107, 108, 109, 110, 111, 112, 75,
	76, 77, 79, 80, 81, 82, 86, 87, 88, 89,
	90, 91, 92, 93, 103, 73, 0, 0, 1513, 1515,
	1517, 1519, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 25, 27, 29, 545, 549, 552,
	554, 556, 560, 563, 569, 571, 573, 528, 529, 532,
	2245, 2263, 2264, 2265, 2268, 2269, 2270, 2271, 2272, 2273,
	2718, 2800, 2801, 2295, 2296, 2297, 2298, 2299, 2300, 2301,
	2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311,
	2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321,
	2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331,
	2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341,
	2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351,
	2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361,
	2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381,
	2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391,
	2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411,
	2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
	2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451,
	2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
	2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471,
	2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481,
	2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541,
	2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
	2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561,
	2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571,
	2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581,
	2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591,
	2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601,
	2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611,
	2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621,
	2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631,
	2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641,
	2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651,
	2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661,
	2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
	2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681,
	2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691,
	2692, 2693, 2694, 2695, 2696, 2697, 530, 531, 1166, 0,
	597, 595, 2230, 598, 2518, 600, 602, 470, 471, 472,
	473, 474, 475, 0, 621, 611, 1552, 622, 624, 625,
	626, 627, 592, 590, 0, 621, 2299, 619, 1373, 1374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 399, 1224, 1225, 1226, 1358, 1359, 2563, 1400, 0,
	229, 640, -2, -2, -2, 2683, -2, 672, -2, 683,
	686, 687, 679, 2687, 0, 2566, -2, 690, 1376, 1378,
	1380, 785, 786, 2249, 0, 0, 0, 0, 0, 38,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	239, -2, -2, -2, -2, 0, 0, 2611, 2351, 2198,
	2265, 2201, 2196, 329, 331, 333, 334, 0, 0, 0,
	0, 0, 0, 360, 363, 365, 369, -2, 371, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 1050, 1042, 1043, 1282, 0, 0, 0, -2, 478,
	480, 533, 534, 0, 1541, 1541, 541, 542, -2, 0,
	0, 0, 0, 299, 287, 990, 992, 993, 0, 0,
	0, 0, 629, 631, 0, 0, 268, 995, 997, 998,
	0, 0, 0, 0, 0, 301, 0, 0, 645, 647,
	649, 715, 717, 719, 721, 723, 725, 727, 729, 731,
	734, 736, 738, 740, 742, 745, 747, 749, 752, 755,
	757, 759, 761, 763, 765, 767, 769, 771, 773, 775,
	777, 779, 781, 782, 793, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, -2, -2, -2, -2, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 886,
	0, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, -2, 970, 0,
	0, 796, 798, 799, 800, 0, 859, 884, 885, 894,
	0, 1206, 1542, 1402, 1383, 1397, 1402, 1385, 1386, 1387,
	1388, 1389, 1394, 1396, 1390, 1391, 1392, 42, 44, 46,
	48, 50, 52, 54, 56, 58, 60, 421, 423, 425,
	427, 429, 432, 434, 436, -2, 1511, 1512, 484, 486,
	488, 490, 492, 494, 496, 632, 0, 634, 0, 797,
	-2, 0, 1546, 1546, 1546, 0, 0, 1512, 1510, 0,
	637, 638, 694, 695, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 2072, 1902, 0, 696, -2, 1935, 1937,
	2658, 2492, 2683, 2071, 1939, 1940, 1941, 1942, 1943, 0,
	1945, 1946, 1947, 1948, 1949, 1950, 0, 1952, 0, 1957,
	1958, 1959, 0, 2665, 2175, 2259, -2, 0, 0, 2671,
	2255, 0, 2038, 1975, -2, -2, 2282, 2261, 1746, 1747,
	1748, 1749, 1750, -2, -2, 2701, 1979, 1980, 1981, 1982,
	1983, 1984, 1985, 1986, 1987, 1988, 1989, 0, 2646, 2666,
	2667, 2672, 2674, 2668, 2655, 2000, 2364, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1773, 1782, -2, -2, -2, -2, -2, -2, -2, 2659,
	2660, 2677, 2680, 2686, 2691, 2692, 2664, 2673, 2700, 2702,
	2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712,
	2713, 2714, 2715, 2716, 2717, 1774, -2, -2, -2, -2,
	1529, 2531, 1532, 1166, 1530, 1514, 1516, 0, 1518, 0,
	0, 0, 1523, 1549, 1547, 0, 1598, 1527, 1528, 1616,
	1616, 1640, 0, 1621, 0, 1640, 1541, 1667, 0, 1627,
	2555, 1976, 1977, 0, 2265, 2260, -2, -2, 2698, 0,
	0, 0, 0, 0, 0, 0, 0, 593, 0, 599,
	601, 0, 0, 0, 620, 1551, 0, 0, 0, 0,
	0, 0, 0, 402, 403, 404, 405, 406, 2666, 0,
	0, 0, 411, 0, 413, 414, 415, 416, 417, 418,
	419, 198, 2666, 501, 526, 0, 198, 2666, 504, 198,
	2666, 507, 0, 510, 1280, 198, 2666, 513, 2226, 198,
	2666, 516, 518, 2234, 198, 2666, 522, 2241, 2239, 523,
	2666, 525, 304, 302, 303, 2278, 2279, 2286, 2287, 2288,
	2289, 2699, 2701, 1369, 1370, 1371, 1372, 0, 1399, 1281,
	642, 643, 0, 667, 0, 671, 2654, -2, 0, 2575,
	-2, 675, 1403, 1407, 1408, 1409, 1410, 1411, 0, 0,
	0, 0, 1416, 0, 0, 0, 0, 668, 669, 682,
	688, 691, 0, 788, 789, 790, 791, 792, 72, 0,
	2666, 1667, 74, 0, 2220, 2290, 2291, 2292, 2293, 2294,
	2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728,
	2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738,
	2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748,
	2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758,
	2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768,
	2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778,
	2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788,
	2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798,
	2799, 78, 0, 2666, 83, 0, 2666, 0, -2, 94,
	0, 104, 0, 2223, 113, 0, 2666, 0, 2195, -2,
	0, 210, 288, 289, 290, 0, 1017, -2, 2666, 1218,
	1220, 1220, 0, -2, 0, 0, 0, 980, 2192, 2197,
	981, 2216, 982, 2202, 0, 335, 336, 337, 338, 339,
	0, 340, 2666, 342, 343, 0, 345, 346, 2666, 348,
	349, 0, 351, 0, 251, 252, 2666, 373, 375, 0,
	377, 378, 0, 380, 0, 0, 0, 384, -2, 400,
	0, 397, 387, 388, 390, 391, 392, 393, 394, 0,
	440, 438, 2231, 0, 0, -2, 2666, 0, 1014, 0,
	0, 1260, -2, 2666, 1211, 0, 1267, 2666, 1263, 0,
	-2, 0, 1539, 2666, 1420, 1046, 1047, 1048, 1049, 1679,
	467, 0, 1447, 0, 1449, 0, 1468, 1673, 1616, 0,
	0, 1678, 0, -2, 586, 2248, -2, 536, 0, 537,
	0, -2, 0, 316, 0, 0, 999, 1000, 1001, 1002,
	1003, 1006, 1007, 1008, 1009, 1653, 269, 271, 0, 0,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 0,
	0, 652, 0, 0, 794, 795, 0, 0, 805, 806,
	807, 0, 316, 2567, 2527, 2385, 814, 0, 817, 820,
	-2, 0, 0, 0, 0, 824, 0, 829, 830, 831,
	0, 0, 835, 837, 988, 839, 0, 0, 841, 0,
	845, 0, 848, 0, 850, 0, 852, -2, -2, -2,
	860, 861, -2, 866, -2, 0, 870, -2, 0, 873,
	0, 876, -2, 0, 886, 882, 883, 0, 0, 0,
	0, 902, 903, 0, 912, 0, 915, 916, 917, 0,
	921, 922, 0, 924, 925, 926, 927, 0, 2638, 2572,
	2351, 0, 933, -2, 939, 941, 0, -2, 0, 957,
	0, 961, 0, 0, 969, 0, 0, 801, 802, 198,
	1671, 1382, -2, 1384, 0, -2, 0, 633, 0, 636,
	1571, 1497, 1494, 0, 1568, 1569, 1498, 0, 0, 0,
	1505, 0, 1544, 1545, 0, 0, 0, 1484, 1485, 0,
	0, 0, 0, 2077, 2078, 2079, 2080, 2093, 2081, 2082,
	2092, 2090, 2091, 2083, 2084, 2089, 2103, 2104, 2094, 2095,
	2085, 2098, 2096, 2097, 2099, 2100, 2101, 2102, 0, 0,
	2108, 0, 2086, 2087, 2088, 2116, 0, 0, 2117, 0,
	2119, 0, 2109, 2105, 2106, 2107, 0, 1881, 1883, 2183,
	0, 0, 0, 2115, 2110, 2111, 1819, 1820, 1821, 1822,
	1823, 1856, 1860, 1861, 0, 0, 1936, 2180, 2179, 1938,
	0, 0, 2131, 0, 1951, -2, 0, 2072, 2126, 0,
	0, 1960, 1961, 1962, 0, 0, 2131, 0, 0, 2174,
	1972, 1973, 1811, 0, 0, 2040, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1760, 1759, 0, 1761, 0, 1762, 1763,
	1770, 1783, 0, 0, 0, 0, 1787, 0, 0, 0,
	0, 0, 0, 0, 2155, -2, 0, 0, 0, 0,
	1775, 0, 1531, 0, 0, 1602, 2184, 2188, 2189, 1602,
	1602, 0, 0, 2132, 1664, 1664, 0, 0, 1659, 1659,
	1659, 1657, 1640, 0, 1640, 1650, 0, 1640, 1640, 0,
	-2, 1621, 0, 0, 1650, 0, 1634, 574, 576, 578,
	580, 581, 582, 584, 1668, 1669, 0, 0, 0, 0,
	2266, 0, 0, 0, 0, 0, 2251, 0, 356, 0,
	0, 0, 2621, 2566, 0, -2, 604, 623, 1541, 0,
	2134, 1694, 1698, 0, 1700, 1701, 1702, 1703, 1704, 0,
	0, 1695, -2, 1771, 1773, 1794, 2283, 2284, 2285, 1754,
	1755, 1756, 1757, 1758, 1766, 1753, 1753, 1753, 1764, 1793,
	1785, 1793, 1789, 1739, 1740, 1741, 1776, 1777, 1778, 1779,
	0, 2621, 2566, 0, -2, 613, 0, 0, 1479, 214,
	216, 217, 218, 219, 220, 401, 0, 408, 409, 410,
	0, 497, 0, 196, 197, 0, 198, 2666, 502, 0,
	505, 0, 198, 2666, 2190, 511, 0, 514, 0, 0,
	520, 0, 0, 0, 0, 0, 198, 1481, 0, 0,
	0, 0, -2, 677, 684, 685, 0, 1405, 0, 1412,
	705, 706, 707, 1414, 1415, 0, 1417, 680, 708, 709,
	710, 711, 712, 713, 0, 2204, 2205, 2206, 2207, 2210,
	2211, 0, 0, 678, 698, 681, 0, 692, 114, 1355,
	0, 0, 157, 0, 1355, 1355, 0, 0, 0, 0,
	183, 0, 1085, 0, 0, 0, 0, 129, 142, 153,
	126, 127, 0, 0, 0, 0, 0, 0, 84, 1188,
	0, 1191, 0, 0, 0, 0, 0, 0, 0, 1204,
	0, 0, 0, 0, 0, 0, 0, 100, 101, 0,
	141, 0, 0, 1444, 0, 136, 116, 0, 0, 129,
	143, 155, 0, 187, 189, 1082, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 221, 0, 0, 0, 1212,
	0, 0, 0, 1538, 0, 0, 0, 0, 2666, 1353,
	1338, 0, 0, 1653, 2434, -2, -2, 269, 1653, 979,
	0, 0, 2266, 2200, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 379, 381, 382, 383, 0, 1259, 0,
	389, 430, 1137, 2666, 0, 0, 457, 452, 0, 454,
	0, 0, 0, 1187, 2666, 1185, 2235, 0, 1209, 0,
	1166, 2666, 2233, 0, 0, 0, 1268, 2275, 1277, 1281,
	1434, 0, 469, 0, 1450, 1452, 0, 0, 1674, 0,
	1676, 1616, 1541, 0, 0, 0, 0, 292, 0, 0,
	0, 0, 0, 0, 275, 0, 1652, 0, 0, 1653,
	269, 2542, 316, 316, 1653, 654, 1653, 656, 0, 0,
	808, 809, 0, 316, 316, 316, 815, 816, 818, 819,
	-2, -2, -2, -2, 821, 822, 909, 0, 0, 0,
	908, 834, 838, 0, 973, 2550, 2566, 2621, 986, 909,
	2351, 909, 2351, 909, 2351, 849, 851, 854, 897, 905,
	865, 872, 0, 867, 871, 874, 877, 0, 879, 887,
	-2, 0, 889, 0, 891, 0, 893, 909, 910, 913,
	920, 923, 928, 929, 930, 931, 2246, 932, -2, 936,
	937, 0, 948, 953, 954, 950, 0, 0, 0, 0,
	0, 0, 964, 965, 0, 0, 972, 1205, 0, 1395,
	1571, 1497, 635, 1488, 1570, 1489, 1496, 1499, 0, 0,
	1501, 0, 1503, 0, 1566, 1567, 1574, 1575, 0, 1585,
	1586, 1578, 0, -2, 0, 0, 1581, 1582, 1507, 0,
	1524, 1525, 1526, 1555, 1558, 1296, 0, 2800, 1815, 1689,
	1816, 1817, 2219, 0, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 1833, -2, -2, -2, -2, -2, -2,
	-2, -2, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1852, -2, -2, -2, 1857, 1858, 1859, -2,
	2118, 2120, 0, 2183, 0, -2, 0, -2, -2, -2,
	-2, 1878, 0, 1880, 1885, 1887, 1889, 0, 0, 0,
	0, 2182, 1899, 2166, 2167, 0, 0, 2074, 2075, 2076,
	1884, 0, 1903, 2181, 2178, 0, 0, 2112, 0, 2077,
	2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087,
	2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097,
	2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107,
	2108, 2109, 0, 2130, 1554, 1964, 0, 0, 0, 0,
	1971, 1956, 2128, 0, 2127, 0, 0, 0, 2138, 0,
	2173, 2169, 0, 2217, 1810, 1797, 1798, 1799, 1800, 1801,
	1802, 1812, 0, 2214, 2252, 2258, 2048, 0, 0, 0,
	2001, 2002, 2003, 2004, 2005, 0, 2007, 2008, 0, 2010,
	2011, 0, 2013, 2014, 0, 2016, 2017, 2018, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1707, 1708, 1709, 1710, 1711,
	1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731,
	1732, 1733, 1734, 1735, 1736, 1737, 1738, 0, 0, 2020,
	0, 2141, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 2022, 0, 2024, 2132, 2152, 0, 0, 1904, 0,
	0, 0, 0, 2072, 0, 2027, 2132, 2160, 0, 0,
	0, 0, 0, 2132, 0, 2165, 0, 2034, 0, 2036,
	1533, 0, 0, 1684, 0, 0, 0, 2187, 1684, 1684,
	0, 1597, 0, 0, 1660, 1661, 1662, 1663, 0, 0,
	1664, 0, 1654, 1658, 1655, 1656, 1650, 1613, 0, 0,
	2221, 1650, 1619, 1649, 0, 1166, 1639, 1650, 1650, 0,
	-2, 1623, 1640, 0, 0, 575, 577, 579, 583, 585,
	0, 0, 1554, -2, 0, -2, 318, 1165, 0, 0,
	0, 0, 594, 596, 0, 0, 517, 0, 0, 610,
	0, 588, 0, 591, 0, 1685, 1688, 0, 0, 1699,
	1705, 1706, 0, -2, 0, 0, 1795, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 412, 527, 198,
	499, 0, 198, 198, 508, 0, 0, 198, 519, 198,
	2242, 198, 2240, 305, 524, 1480, 232, 0, 670, 0,
	1404, 1413, 0, 702, 0, 704, 0, 2208, 2212, 2209,
	2213, 0, 693, 0, 0, 0, 0, 1354, 0, 1303,
	0, 0, 161, 2666, 0, 200, 0, 0, 1130, 2227,
	0, 1122, 0, 0, 2371, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	123, 0, 0, 0, 128, 0, 0, 0, 0, 0,
	0, 0, 0, 1189, 1190, 1192, 1199, 1201, 0, 1195,
	2215, 0, 0, 1196, 0, 1198, 1200, 1202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 102, 0, 0,
	0, 1443, 1444, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 0, 2194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1214, 0, 0,
	0, 1255, 1253, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 0, 0, 0, -2, 1216, 1217, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 307,
	2193, 2203, 0, 1004, 1005, 341, 344, 347, 350, 238,
	0, 385, 0, 0, 1052, 1027, 0, 0, 439, 316,
	0, 0, 453, 457, 2244, 1012, 1183, 1186, 0, 1166,
	2666, 1232, 0, 0, 0, 0, 0, 0, 1266, 0,
	0, 2666, 2222, 2274, 2275, 1436, 1444, 0, 1684, 0,
	1466, 1453, 0, 0, 0, 1466, 1470, 1471, 1473, 1474,
	0, 0, 1675, 1681, 535, 587, 1541, 1541, 316, 314,
	2495, 312, 309, 311, 0, 0, 0, 1053, 1055, 1056,
	1057, 200, 0, 2275, 1122, 2423, 2275, 0, 1456, 1458,
	0, 263, 0, 272, 1653, 270, 275, 0, 0, 0,
	451, 653, 658, 803, 0, 316, 811, 812, 813, 856,
	899, 907, 952, 823, 825, 826, 827, 0, 0, 987,
	983, 984, 985, 840, 909, 843, 909, 846, 909, 869,
	875, 881, 888, 0, 0, 0, 901, 918, 0, 935,
	0, 0, 0, 0, 0, 0, 0, 958, 959, 960,
	962, 967, 966, 971, 1672, 1492, 1493, 1495, 0, 1504,
	0, 0, 1580, -2, -2, 1579, 1583, 1584, -2, -2,
	-2, -2, 1500, 0, 1509, 1506, 0, 1565, 1294, 1295,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 1900,
	0, -2, 1879, 1882, 1886, 1888, 1890, 0, 0, 0,
	0, 0, 0, 2121, 0, 2123, 1901, 2176, 2179, 2114,
	0, 2070, 0, 0, 1553, 1554, 1554, 0, 1970, 0,
	2129, 0, 2136, 2137, 0, 1963, 0, 2170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 0, 2006, 2009, 2012, 2015, 0, 0, 0, 0,
	1995, 0, 0, 0, 1999, 1765, 1751, 0, 1793, 1791,
	1792, 1786, 1793, 1790, 1743, 0, 1742, 0, 2019, 0,
	2021, 2023, 0, 0, 2025, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1907,
	1908, 1909, 1929, 2026, 2158, 2159, 0, 0, 0, 0,
	0, 0, 2032, 0, 2164, 2033, 2035, 1541, 0, 1534,
	0, 1599, 1588, 1683, 0, 2185, 1653, 1601, 1603, 2186,
	2224, 1588, 1588, 0, 2133, 0, 0, 1644, 0, 0,
	0, 1646, 1617, 0, 0, 1611, 0, 1607, 1608, 1609,
	1610, 1618, 1166, 1648, 1620, 1624, 2252, 0, 1650, 0,
	1635, 0, 1637, 1670, 0, 1629, 1632, 0, 0, 2267,
	1684, 0, 352, 357, 358, 353, 354, 355, 603, 0,
	0, 0, 0, 0, 2135, 0, 1690, 0, 1696, 0,
	0, 0, 0, 612, 0, 0, 0, 0, 215, 1478,
	407, 498, 198, 503, 506, 2191, 198, 512, 515, 521,
	228, 0, 666, -2, 700, 701, 703, 0, 699, 158,
	1355, 0, 0, 1299, 1301, 2238, 1305, 1311, 1314, 0,
	163, 2666, 174, 0, 1101, 0, 2225, 0, 0, 0,
	0, 0, 0, 1357, 0, 0, 2666, 198, 2666, 198,
	177, 179, 182, 0, 186, 184, 0, 1089, 0, 0,
	1092, 115, 1355, 0, 0, 118, 122, 130, 131, 134,
	0, 0, 0, 140, 0, 0, 0, 1316, 1320, 1328,
	0, 0, 0, 1193, 1194, 1197, 1203, 85, 0, 0,
	0, 1324, 1326, 1332, 95, 96, 2666, 2236, 98, 2666,
	0, 1298, 0, 0, 0, 0, 188, 120, 124, 132,
	133, 135, 0, 1334, 117, 0, 213, 0, 0, 203,
	198, 2666, 0, 205, 0, 206, 207, 222, 0, 0,
	0, 1015, 1016, 1221, 1222, 1223, 1254, 1207, 1208, 0,
	1219, 1213, 0, 0, 0, 0, 0, 1336, 1337, 0,
	0, 0, 1350, 1653, 234, 0, 1653, 242, 0, 2199,
	0, 372, 0, 0, 0, 0, 1051, 1148, 0, 1022,
	0, 0, 0, 445, 441, 0, 450, 456, 455, 461,
	-2, 0, 0, 0, 0, -2, 0, 0, 1270, 1264,
	1265, 0, 0, 0, 0, 2666, 1438, 1444, 0, 1539,
	1554, 468, 1445, 1466, 0, 0, 0, 1455, 1451, 1448,
	1684, 0, 0, 0, 0, 0, 1677, 1680, 538, 539,
	291, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	1058, 1062, 0, 2275, 2275, 0, 2229, 0, 0, 0,
	0, 273, 0, 276, 0, 0, 0, 281, 282, 283,
	284, 285, 286, 275, 265, 1653, 0, 0, 655, 0,
	0, 810, 0, 833, 842, 844, 847, 890, 892, 909,
	919, 942, 943, 1079, 0, 1079, 0, 0, 963, 1502,
	0, 1577, 1508, 1559, 1560, 0, 1296, 0, 1818, 1863,
	0, 0, -2, 0, 0, 1867, 0, 0, 0, -2,
	0, 0, 0, 2122, 2124, 0, 2178, 2113, 1965, 0,
	0, 0, 1969, 1953, 1954, 0, 2073, 2139, 2168, 2172,
	0, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 0, 2218,
	2253, 2257, 2046, 2047, 2051, 2232, 0, 0, 0, 1978,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 1788,
	0, 0, 2140, 2151, 2153, 1905, 1906, 1910, 1911, 1912,
	1913, 1914, 1915, 1916, 1917, 1918, 1919, -2, -2, -2,
	1923, 1924, 1925, -2, -2, -2, 1930, 0, 0, 0,
	2154, 2156, 2157, 2161, 2162, 0, 2029, 2030, 2031, 2163,
	0, 1541, 1535, 1596, 0, 1682, 1600, 0, 1596, 1596,
	1548, 1642, 0, 0, 1666, 0, 1614, 0, 1615, 0,
	1647, 0, 1622, 1625, 1626, 1636, 0, 1628, 0, 1631,
	0, 1965, -2, 317, 319, 321, 0, 324, 325, 0,
	0, 606, 607, 0, 605, 589, 0, 0, 1692, 0,
	0, 1768, 1772, 1796, 615, 616, 0, 614, 500, 509,
	230, 0, 1651, 0, 0, 0, 0, 0, 0, 199,
	1099, 1129, 0, 0, 0, 1121, 0, 0, 1135, 165,
	166, 0, 0, 0, 0, 175, 0, 0, 172, 0,
	181, 185, 1086, 0, 0, 0, 0, 1304, 0, 0,
	0, 137, 138, 139, 0, 144, 0, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1428, 1429,
	0, 1423, 0, 0, 0, 201, 0, 0, 0, 1293,
	224, 0, 0, 0, 0, 0, 1257, 1258, 1215, 1317,
	1321, 1329, 0, 0, 0, 0, 621, 0, 626, 1352,
	242, 240, 0, 243, 0, 246, 247, 0, 249, 242,
	236, 0, 0, 0, 1166, 386, 1025, 1136, 0, 1138,
	0, 1023, 0, 0, 1137, 437, 0, 444, 0, 458,
	0, 0, 1187, 0, 0, 1210, 1230, 1166, 0, 1269,
	1271, 0, 1279, 0, 0, 0, 1440, 1444, 0, 1433,
	1434, 1573, 1446, 1464, -2, 0, 0, 1554, 1472, 1469,
	1475, 1476, 0, 313, 0, 308, 310, 0, 294, 0,
	0, 1054, 1059, 0, 0, 0, 0, 0, 1457, 1459,
	0, 0, 0, 0, 0, 0, 264, 275, 1653, 300,
	0, 804, 828, 900, 944, 1078, 0, 0, 946, 0,
	0, 1576, 1563, 1564, 1561, 1296, 1865, 1869, 0, 0,
	0, 1871, -2, 0, 1893, -2, -2, 2125, 2177, 1944,
	1554, 1966, 1968, 1955, 2171, 1813, 0, 2053, 2050, 0,
	2037, 0, 1990, 1991, 0, 0, 1994, 1996, 1997, 1998,
	1752, 1745, 1744, 2150, 0, 0, 0, 0, 2028, 1536,
	0, 2042, 0, 0, 1604, 2042, 2042, 1643, 0, 1645,
	1612, 1605, 0, 2253, 1638, 1630, 0, 0, 322, 0,
	326, 327, 0, 0, 1686, 1691, 0, 1697, 1767, 0,
	231, 159, 160, 1308, 1312, 1309, 0, 162, 0, 1100,
	0, 1103, 0, 0, 0, 0, 1110, 1122, 0, 0,
	0, 0, 0, 1123, 0, 1152, 0, 1284, 1291, 0,
	-2, 0, 0, 0, 168, 191, 0, 0, 192, 1356,
	170, 0, 0, 198, 198, 0, 0, 1300, 1302, 1315,
	0, 0, 0, 0, 147, 0, 0, 1318, 1322, 1330,
	1325, 1327, 1333, 0, 99, 0, 1430, 0, 0, 1335,
	211, 212, 0, 198, 0, 198, 204, 198, 1293, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 235, 306, 242, 374, 0, 1073, 0, 1148, 1140,
	1141, 1142, 0, 1147, 1149, 0, 0, 1039, 1024, 0,
	1035, 0, 0, 1052, 1027, 0, 442, 459, 0, 462,
	0, 465, 1013, 1184, 1227, 1166, 0, 1261, 0, 0,
	0, 0, 0, 0, 0, 1442, 1444, 0, 1435, 1436,
	1466, 1572, 0, 0, 0, 1454, 1573, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 316,
	277, 0, 278, 279, 280, 266, 267, 657, 659, 0,
	0, 665, 1077, 0, 0, 0, 0, 1562, 1873, -2,
	-2, 1894, 0, 2254, 2256, 1554, 0, 2039, 1556, 0,
	0, -2, 0, 0, 0, 1537, 1520, 0, 1595, 1587,
	1589, 1591, 2553, 2346, 2665, 1521, 1522, 1665, 0, 1633,
	323, 608, 0, 0, 1693, 0, 0, 0, 1310, 164,
	0, 1104, 1105, 2228, 1107, 0, 1109, 1111, 1112, 1113,
	0, 1116, 2277, 0, 1120, 0, 1131, 1153, 0, 1162,
	0, 1286, 1296, 1290, 0, 1288, 1164, 0, 167, 169,
	193, 190, 1293, 0, 171, 180, 0, 0, 119, 0,
	0, 2340, 150, 148, 146, 97, 1297, 121, 0, 213,
	223, 1292, 225, 208, 198, 0, 1319, 1323, 1331, 0,
	1344, 1345, 1346, 1347, 0, 0, 0, 0, 244, 0,
	245, 248, 0, 0, 1088, 0, 1026, 1139, 0, 1150,
	1151, 1029, 0, 1028, 0, 0, 0, 0, 0, 443,
	446, 0, 449, 0, 0, 0, 0, 0, 1272, 1270,
	0, 1278, 0, 0, 0, 1422, 0, 0, 1437, 1438,
	466, 1460, 0, 0, 1466, 1477, 293, 0, 0, 1060,
	1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1061,
	1164, 0, 0, 1128, 0, 298, 274, 0, 661, 0,
	663, 0, 945, 947, 0, 0, 1967, 2057, 0, 0,
	1992, 1993, -2, 0, 1933, 2041, 2043, 0, 0, 0,
	0, 0, 1606, 609, 1687, 617, 1306, 0, 1313, 1102,
	1106, 0, 0, 0, 1170, 0, 0, 1124, 0, 1156,
	1157, 1073, 0, 1158, 1159, 1160, 1285, 1565, 1291, 1073,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	202, 226, 1293, 0, 1348, 1349, 0, 0, 241, 259,
	0, 1228, 1027, 1087, 0, 0, 1037, 0, 1040, 0,
	1036, 1033, 1034, 1025, 0, 447, 448, 463, 0, 464,
	0, 1231, 0, 0, 1279, 0, 0, 1425, 1421, 1444,
	1439, 1440, 1684, 1463, 1467, 0, 0, 1162, 1164, 1084,
	0, 660, 0, 0, 955, 956, 0, 0, 0, 0,
	2052, 1557, 1934, 0, 0, 1590, 1592, 1593, 1594, 1307,
	0, 0, 1115, 1175, 0, 0, 0, 1154, 1155, 1084,
	0, 1289, 1287, 1133, 0, 1166, 173, 0, 1164, 0,
	1093, 0, 0, 1096, 0, 0, 151, 2340, 149, 0,
	198, 1341, 198, 0, 262, 0, 256, 254, 255, 1029,
	0, 0, 1144, 1146, 0, 1041, 1073, 1039, 460, 1229,
	1262, 1164, 0, 1162, 0, 1432, 1444, 1426, 1427, 0,
	1442, 0, 316, 316, 1073, 1162, 1027, 1083, 316, 662,
	664, 2049, 2069, 2058, -2, 2624, 2347, 0, 2069, 2069,
	2044, 2045, 0, 0, 1117, 1171, 1172, 0, 1167, 1168,
	1169, 2276, 1118, 1119, 1152, 0, 0, 1170, 194, 1073,
	1090, 0, 0, 1091, 0, 0, 154, 0, 156, 227,
	1339, 0, 1342, 0, 250, 0, 0, 1021, 0, 1143,
	0, 0, 0, 0, 1088, 1029, 1162, 0, 1073, 0,
	1418, 1431, 0, 1441, 1422, 0, 295, 296, 1084, 1073,
	1684, 0, 297, 2054, 0, 0, 2060, 2061, 2062, 2063,
	2064, 2055, 2056, 1108, 0, 1173, 0, 1174, 0, 0,
	0, 1684, 1161, 0, 1175, 178, 1094, 0, 1097, 0,
	152, 0, 0, 0, 257, 258, 1018, 1020, 0, 1145,
	1030, 0, 1032, 1027, 1038, 1073, 0, 1084, 0, 1424,
	2237, 1425, 1461, 0, 1027, 1084, 1127, 0, 2066, 2067,
	0, 0, 0, 1176, 0, 1179, 1180, 0, 1177, 1132,
	0, 1152, 0, 0, 1340, 198, 0, 0, 1031, 1029,
	1084, 1164, 1027, 1162, 1432, 0, 1684, 1027, 2065, 2068,
	2059, 1114, 1178, 1181, 1182, 1163, 1134, 0, 0, 1343,
	260, 0, 1076, 1021, 1027, 1162, 1684, 1073, 1419, 1684,
	1125, 1684, 1081, 0, 0, 1072, 1074, 1075, 1019, 1684,
	1073, 1275, 1084, 1462, 1126, 1095, 1080, 0, 261, 1273,
	1084, 1027, 0, 1027, 1684, 0, 1684, 1276, 1081, 1274,
	1098,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 579, 3, 585, 580, 3,
	590, 591, 583, 581, 595, 582, 592, 584, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 598, 3,
	571, 573, 572, 576, 594, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 588, 3, 589, 586, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 596, 578, 597, 574,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 575, 57914, 577,
	57915, 587, 57916, 593, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1459
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1464
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1466
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1469
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1470
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1471
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1472
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1473
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1474
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1475
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1476
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1477
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1478
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1479
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1486
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1501
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1503
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1504
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1505
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1506
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1507
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1508
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1509
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1568
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1594
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1608
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1626
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1630
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1634
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1660
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1664
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1670
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1677
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1687
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1694
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1704
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1713
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1720
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1744
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1776
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1780
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1784
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1790
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1794
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1800
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1809
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1820
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1824
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1830
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1838
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1852
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1861
		{
		}
	case 129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1862
		{
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1866
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1875
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1887
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1892
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1899
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1911
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1918
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1926
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1931
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1935
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1940
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1946
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1954
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1965
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1975
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 145:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1985
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1994
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2005
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 148:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2011
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 152:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2037
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2042
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2053
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2057
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2079
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2084
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2089
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2094
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2104
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2109
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2114
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2119
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2128
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2133
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2142
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2154
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2164
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2171
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2174
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2180
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2187
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2195
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2202
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2211
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2220
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2225
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2232
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2240
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2241
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2245
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2249
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2255
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2267
		{
			sqlVAL.union.val = nil
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = true
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2277
		{
			sqlVAL.union.val = false
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2283
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2287
		{
			sqlVAL.union.val = nil
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2302
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2308
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2312
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 201:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2337
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2348
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2368
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2387
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2396
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2405
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2409
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2412
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2416
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2430
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2440
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2447
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2452
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2459
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2467
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2498
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2502
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2510
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 233:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2540
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2562
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2582
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2586
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2590
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2598
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2602
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2617
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2630
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2634
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2638
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2642
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2723
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2734
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = nil
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2747
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2751
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2761
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2783
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = nil
		}
	case 263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2851
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2861
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2868
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2872
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2876
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2886
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2893
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2897
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2908
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2912
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2921
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2933
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2937
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2941
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2953
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2959
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2965
		{
			return unimplemented(sqllex, "alter function")
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2969
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2973
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3010
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3015
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3019
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3025
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3030
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3035
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3040
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3045
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3049
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3068
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3072
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3076
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3084
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3088
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3094
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3098
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3108
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3112
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3116
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 315:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = nil
		}
	case 317:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3152
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3166
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3172
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3176
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3182
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3186
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3198
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3202
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3206
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3218
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3219
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3220
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3221
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3231
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3239
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3241
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3245
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3248
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3275
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3277
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3281
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3284
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3303
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3311
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3320
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3324
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3328
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3332
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3348
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3352
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3357
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3369
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3372
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3375
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3376
		{
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3377
		{
			return helpWith(sqllex, "CREATE")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3384
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3387
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3390
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3391
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3394
		{
			return unimplemented(sqllex, "create access method")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3395
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3396
		{
			return unimplemented(sqllex, "create cast")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3397
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3398
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3399
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3400
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3401
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3403
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3404
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3405
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3406
		{
			return unimplemented(sqllex, "create publication")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3407
		{
			return unimplemented(sqllex, "create rule")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3408
		{
			return unimplemented(sqllex, "create server")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3409
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3410
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3411
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3412
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3415
		{
		}
	case 396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3416
		{
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3419
		{
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3420
		{
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3423
		{
		}
	case 400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3424
		{
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3427
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3428
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3429
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3430
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3431
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3432
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3433
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3434
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3435
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3436
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3437
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3438
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3439
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3440
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3441
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3442
		{
			return unimplemented(sqllex, "drop server")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3443
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3444
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3445
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3448
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3449
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3450
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3451
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3452
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3454
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3455
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3456
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3457
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3467
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3479
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3483
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3489
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3493
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3502
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3509
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3515
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3521
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3525
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3548
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3563
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3571
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3585
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3591
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3595
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3602
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3606
		{

			sqlVAL.union.val = nil
		}
	case 458:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3634
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3638
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3642
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3649
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3653
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3666
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3689
		{
			return helpWith(sqllex, "DELETE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3692
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3693
		{
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3701
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3704
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3705
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3706
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3707
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3708
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3717
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3718
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3719
		{
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3720
		{
			return helpWith(sqllex, "DROP")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3723
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3724
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3725
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3726
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3727
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3728
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3729
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3737
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3741
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3745
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3754
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3762
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3770
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3774
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3777
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3785
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3789
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3792
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3800
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3817
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3840
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3855
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3862
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3866
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3876
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3885
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3893
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3900
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3908
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3915
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3919
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3924
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3942
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3949
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3976
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3983
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3985
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3993
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4001
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4009
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4017
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4028
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4036
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4039
		{
			return helpWith(sqllex, "DELETE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4041
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4042
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4043
		{
			return helpWith(sqllex, "INSERT")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4046
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4048
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4051
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4056
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4057
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4058
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4063
		{
			return helpWith(sqllex, "DELETE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4064
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4065
		{
			return helpWith(sqllex, "INSERT")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4067
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4071
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4072
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4080
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4090
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4098
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4106
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4110
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4114
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4124
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4131
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4143
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 597:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4147
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4157
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4161
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4172
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4195
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4199
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4203
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4207
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4221
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4225
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4236
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "GRANT")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4266
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4270
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4274
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4299
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4302
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4311
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4321
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4325
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4339
		{
			return helpWith(sqllex, "RESET")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4340
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4355
		{
			return helpWith(sqllex, "RESET")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4363
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4366
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4380
		{
			return helpWith(sqllex, "USE")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4385
		{
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4386
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4387
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4391
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4392
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			return helpWith(sqllex, "USE")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4409
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4427
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4453
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 658:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4477
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4481
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4485
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4489
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4504
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4507
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4537
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 673:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4564
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4569
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4573
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4592
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4596
		{
			return unimplemented(sqllex, "set from current")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4600
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4614
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4619
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4627
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4632
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4639
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4643
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4649
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4653
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4660
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4681
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4685
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4691
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4695
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4713
		{
			sqlVAL.union.val = tree.Low
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4717
		{
			sqlVAL.union.val = tree.Normal
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = tree.High
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4732
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4736
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4740
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4764
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4765
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4766
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4767
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4768
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4769
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4770
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4771
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4772
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4774
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4775
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4776
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4777
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4778
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4780
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4781
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4782
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4784
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4786
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4787
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4788
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4789
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4790
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4791
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4792
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4793
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4794
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4795
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4796
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4797
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4798
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4800
		{
			return helpWith(sqllex, "SHOW")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4807
		{
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4808
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4811
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4815
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4820
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4825
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4830
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4835
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4845
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4846
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4847
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4858
		{
			sqlVAL.str = "client_encoding"
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.str = "timezone"
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4862
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4876
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4880
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4895
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4911
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4917
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4925
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4934
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4943
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4952
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4960
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4970
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4974
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4977
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4982
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4991
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5002
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5010
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5014
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5018
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5022
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5025
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5033
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5036
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5043
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5047
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5057
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5066
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5073
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5076
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5089
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5097
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5105
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5108
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5114
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5121
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5123
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5127
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5130
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5138
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5141
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5143
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5146
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5154
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5157
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5162
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = true
		}
	case 858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = true
		}
	case 859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = false
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5187
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5191
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5195
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5198
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5199
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5200
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5202
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5206
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5210
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5214
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5217
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5219
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5227
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5243
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5244
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5260
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5268
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5270
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5276
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5280
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5290
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5294
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5308
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5313
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5315
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5319
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = true
		}
	case 895:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5323
		{
			sqlVAL.union.val = false
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5331
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5334
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5336
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5339
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5347
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5370
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5377
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5380
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5382
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5385
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = true
		}
	case 909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5389
		{
			sqlVAL.union.val = false
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5396
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5400
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5403
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5410
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5414
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5417
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5424
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5428
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5432
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5443
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5454
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5457
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5465
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5470
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5475
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5479
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5489
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5493
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5498
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5503
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5508
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5513
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5516
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5526
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5530
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5532
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5536
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5544
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5547
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5555
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5558
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5568
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5576
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5584
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5592
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5605
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5610
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5612
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5615
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5619
		{
		}
	case 955:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5628
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5636
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5642
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5651
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5660
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5663
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5710
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5722
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5732
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5739
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5746
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 974:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5871
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5875
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5879
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5918
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5922
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5927
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5931
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5948
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5963
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5967
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5980
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5981
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5982
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5992
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5993
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5994
		{
			return helpWith(sqllex, "RESUME")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6012
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6021
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6026
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6045
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6053
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6055
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6061
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6089
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6096
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6116
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6124
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6163
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6179
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6197
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6208
		{

			sqlVAL.union.val = nil
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6214
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.str = ""
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6224
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = nil
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6247
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6251
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6257
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6261
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6267
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6271
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6277
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6291
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6306
		{
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6307
		{
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6308
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6327
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6333
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6341
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6347
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6351
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6357
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6363
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6389
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6400
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6403
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6405
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6406
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6407
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6413
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6429
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6434
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.str = ""
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6473
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6485
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6577
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6614
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6640
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6644
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6648
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6669
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6673
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6677
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6691
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6695
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6702
		{

			sqlVAL.union.val = true
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = false
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6713
		{
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6714
		{
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6732
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6760
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6803
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6815
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6826
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6837
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6843
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6853
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6868
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6896
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6912
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6933
		{
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6934
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6935
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6936
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6937
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6938
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6966
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6978
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7010
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7014
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7023
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7027
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7039
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7051
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7067
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7071
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7094
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7103
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7111
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7115
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7118
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7119
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7122
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7123
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7126
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7127
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7137
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7139
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7141
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7143
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7145
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7146
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7149
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7151
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7153
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7164
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7182
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7186
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7189
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7208
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7223
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7227
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7231
		{
			sqlVAL.str = ""
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7237
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = true
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7257
		{

			sqlVAL.union.val = true
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = false
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7272
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7286
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7298
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7310
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7320
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7330
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7342
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7394
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = nil
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7440
		{
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7441
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7458
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7466
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7468
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7470
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7472
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7474
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7476
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7514
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7532
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7551
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7568
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7585
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7589
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = false
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7610
		{
			sqlVAL.union.val = true
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = false
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = true
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7624
		{
			sqlVAL.union.val = false
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7630
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7634
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7643
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7649
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7655
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7663
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7687
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.str = ""
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.str = ""
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7700
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7710
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7722
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7728
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7742
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7750
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7793
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7800
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7818
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7933
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7953
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7959
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7971
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7977
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7991
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7997
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8038
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8054
		{
			sqlVAL.union.val = true
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = false
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8064
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8072
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.union.val = tree.Types
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8099
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8103
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8127
		{
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8128
		{
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8131
		{
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8132
		{
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8140
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8143
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8161
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8170
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8191
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8193
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8199
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8212
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8220
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8228
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8239
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8243
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8244
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8245
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8264
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8269
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8282
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8287
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8291
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8296
		{
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8297
		{
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8298
		{
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8308
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8315
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8318
		{
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8319
		{
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8323
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8347
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8360
		{
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8362
		{
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8366
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8401
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8453
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.str = ""
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8479
		{

		}
	case 1428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8494
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.str = ""
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.str = ""
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.str = ""
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8539
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.str = ""
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8549
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8562
		{
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8563
		{
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8592
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8610
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8614
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8623
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8672
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8699
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8703
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8729
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8741
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8747
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8753
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8757
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8773
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8788
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8794
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8809
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8850
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8938
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8942
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8947
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8953
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8988
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8989
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8990
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9012
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9051
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9095
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9111
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = true
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = false
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9164
		{
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9165
		{
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = nil
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9178
		{
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9179
		{
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = true
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = false
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = false
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = true
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9208
		{
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9209
		{
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9212
		{
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9213
		{
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9254
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9275
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9280
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9306
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9339
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9394
		{
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9395
		{
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9398
		{
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9399
		{
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9425
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9433
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9434
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9435
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9465
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9467
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9482
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9504
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9509
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9514
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9525
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9537
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9556
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9595
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9605
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9632
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9640
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9651
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9681
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9714
		{
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9716
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = nil
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = true
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = false
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9759
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9815
		{
			sqlVAL.str = tree.AstFull
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.str = tree.AstRight
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.str = tree.AstInner
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9833
		{
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9834
		{
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.str = tree.AstHash
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9870
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.str = ""
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9898
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9899
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9903
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9908
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9926
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9932
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9938
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9948
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = true
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = false
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = true
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = false
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9997
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10010
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10018
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10019
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10037
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10039
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10047
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10060
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10067
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10076
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10116
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10128
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10129
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10132
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10140
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10145
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10155
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.union.val = types.Geography
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10178
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10186
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10212
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10220
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = nil
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = types.Int2
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = types.Int
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = types.Float4
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = types.Float
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10263
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10271
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10279
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = types.Bool
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10293
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = types.Float
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10312
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10318
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10340
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10352
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = types.String
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = true
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = false
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = types.Date
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10389
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10397
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10411
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10420
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10428
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10445
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = true
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10456
		{
			sqlVAL.union.val = false
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = false
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = types.Interval
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10469
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10553
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10568
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = nil
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10598
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10643
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10647
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10658
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10683
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10687
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10691
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10711
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10715
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10723
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10731
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10735
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10747
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10755
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10807
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10815
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10837
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10841
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10849
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10877
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10901
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10909
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10928
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10934
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10938
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10942
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10982
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10994
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11016
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11048
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11052
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11056
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11064
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11068
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11084
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11088
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11092
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11124
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11132
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11154
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11168
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11228
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11233
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11235
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11239
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11251
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11255
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11259
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11268
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11275
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11279
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11283
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11294
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11298
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11313
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11317
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11321
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11324
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11325
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11327
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11333
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11340
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11349
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11415
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11427
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11446
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11450
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11482
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11486
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11490
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11494
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11498
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11506
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11514
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11518
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11526
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11530
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11540
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11542
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11545
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11551
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11554
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11556
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11560
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11563
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11565
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11569
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11572
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11581
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11583
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11586
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11588
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11591
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11596
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11601
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11603
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11607
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11610
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11611
		{
			return unimplemented(sqllex, "treat")
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11621
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11625
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11632
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11634
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11637
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11643
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11647
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11653
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11657
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11668
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11684
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11692
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.str = ""
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11759
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11773
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11786
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11814
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11818
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11826
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11842
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11846
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11854
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11876
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11883
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11895
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11899
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11903
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11920
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11921
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11923
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11924
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11925
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11927
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11928
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11929
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11932
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11935
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11936
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11937
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11940
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11941
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11943
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11944
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11945
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11947
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11948
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11951
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11952
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11959
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11975
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11982
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11984
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12018
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12026
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12037
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12041
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12047
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12051
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12064
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12068
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12074
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12078
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12088
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12094
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12098
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12104
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12135
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12139
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12181
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12195
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12207
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12211
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12240
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12244
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12256
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12260
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12273
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12277
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12284
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12290
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12299
		{
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12300
		{
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12304
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12308
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12314
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12323
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12327
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12331
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12339
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12343
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12372
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12380
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12403
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12412
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12416
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12420
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12424
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12434
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12449
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12453
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12465
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12469
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12478
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12489
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12498
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12506
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12523
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12608
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12620
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12626
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12630
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12638
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12665
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12672
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12676
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12680
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12694
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12698
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12702
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12715
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12724
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12742
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12755
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12762
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12787
		{
			sqlVAL.str = ""
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12793
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12797
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
