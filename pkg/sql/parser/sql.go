// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:873
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13685

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1590,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	262, 414,
	-2, 0,
	-1, 74,
	244, 243,
	517, 243,
	-2, 0,
	-1, 88,
	232, 1326,
	246, 1326,
	262, 410,
	391, 410,
	402, 1080,
	441, 410,
	454, 1080,
	501, 1080,
	528, 410,
	554, 1080,
	-2, 0,
	-1, 94,
	133, 1590,
	239, 1590,
	539, 1590,
	540, 1590,
	-2, 0,
	-1, 112,
	151, 1561,
	170, 1561,
	183, 1561,
	242, 1561,
	275, 1561,
	342, 1561,
	352, 1561,
	534, 1561,
	-2, 1532,
	-1, 153,
	159, 921,
	261, 921,
	394, 882,
	459, 882,
	500, 882,
	520, 921,
	522, 882,
	-2, 0,
	-1, 157,
	4, 1592,
	21, 1592,
	22, 1592,
	23, 1592,
	24, 1592,
	25, 1592,
	26, 1592,
	27, 1592,
	29, 1592,
	30, 1592,
	36, 1592,
	41, 1592,
	42, 1592,
	44, 1592,
	45, 1592,
	46, 1592,
	47, 1592,
	48, 1592,
	49, 1592,
	50, 1592,
	51, 1592,
	53, 1592,
	54, 1592,
	55, 1592,
	56, 1592,
	58, 1592,
	59, 1592,
	60, 1592,
	61, 1592,
	62, 1592,
	63, 1592,
	64, 1592,
	68, 1592,
	69, 1592,
	70, 1592,
	71, 1592,
	73, 1592,
	74, 1592,
	75, 1592,
	79, 1592,
	80, 1592,
	81, 1592,
	82, 1592,
	83, 1592,
	84, 1592,
	85, 1592,
	88, 1592,
	89, 1592,
	90, 1592,
	91, 1592,
	92, 1592,
	94, 1592,
	96, 1592,
	97, 1592,
	98, 1592,
	99, 1592,
	100, 1592,
	101, 1592,
	103, 1592,
	104, 1592,
	105, 1592,
	107, 1592,
	108, 1592,
	109, 1592,
	117, 1592,
	118, 1592,
	119, 1592,
	120, 1592,
	121, 1592,
	123, 1592,
	124, 1592,
	125, 1592,
	126, 1592,
	128, 1592,
	129, 1592,
	130, 1592,
	132, 1592,
	133, 1592,
	134, 1592,
	136, 1592,
	137, 1592,
	138, 1592,
	141, 1592,
	142, 1592,
	143, 1592,
	145, 1592,
	146, 1592,
	148, 1592,
	149, 1592,
	150, 1592,
	152, 1592,
	153, 1592,
	154, 1592,
	155, 1592,
	156, 1592,
	157, 1592,
	158, 1592,
	159, 1592,
	160, 1592,
	161, 1592,
	162, 1592,
	163, 1592,
	164, 1592,
	165, 1592,
	166, 1592,
	167, 1592,
	169, 1592,
	175, 1592,
	176, 1592,
	177, 1592,
	178, 1592,
	182, 1592,
	184, 1592,
	185, 1592,
	186, 1592,
	190, 1592,
	191, 1592,
	192, 1592,
	193, 1592,
	194, 1592,
	195, 1592,
	196, 1592,
	197, 1592,
	198, 1592,
	199, 1592,
	200, 1592,
	201, 1592,
	202, 1592,
	203, 1592,
	205, 1592,
	206, 1592,
	208, 1592,
	209, 1592,
	211, 1592,
	212, 1592,
	213, 1592,
	214, 1592,
	215, 1592,
	216, 1592,
	217, 1592,
	218, 1592,
	219, 1592,
	221, 1592,
	222, 1592,
	224, 1592,
	225, 1592,
	226, 1592,
	227, 1592,
	228, 1592,
	232, 1592,
	233, 1592,
	234, 1592,
	235, 1592,
	236, 1592,
	239, 1592,
	240, 1592,
	241, 1592,
	243, 1592,
	245, 1592,
	246, 1592,
	248, 1592,
	250, 1592,
	251, 1592,
	252, 1592,
	254, 1592,
	258, 1592,
	259, 1592,
	260, 1592,
	261, 1592,
	262, 1592,
	263, 1592,
	265, 1592,
	266, 1592,
	267, 1592,
	269, 1592,
	270, 1592,
	272, 1592,
	273, 1592,
	276, 1592,
	280, 1592,
	281, 1592,
	282, 1592,
	285, 1592,
	286, 1592,
	287, 1592,
	288, 1592,
	290, 1592,
	291, 1592,
	292, 1592,
	293, 1592,
	294, 1592,
	295, 1592,
	296, 1592,
	297, 1592,
	298, 1592,
	299, 1592,
	300, 1592,
	301, 1592,
	302, 1592,
	303, 1592,
	304, 1592,
	305, 1592,
	306, 1592,
	307, 1592,
	308, 1592,
	309, 1592,
	310, 1592,
	311, 1592,
	313, 1592,
	315, 1592,
	316, 1592,
	317, 1592,
	318, 1592,
	319, 1592,
	320, 1592,
	321, 1592,
	322, 1592,
	323, 1592,
	324, 1592,
	325, 1592,
	326, 1592,
	327, 1592,
	329, 1592,
	330, 1592,
	332, 1592,
	334, 1592,
	335, 1592,
	337, 1592,
	338, 1592,
	339, 1592,
	340, 1592,
	341, 1592,
	344, 1592,
	347, 1592,
	348, 1592,
	349, 1592,
	350, 1592,
	353, 1592,
	354, 1592,
	355, 1592,
	357, 1592,
	359, 1592,
	360, 1592,
	361, 1592,
	362, 1592,
	363, 1592,
	364, 1592,
	365, 1592,
	366, 1592,
	367, 1592,
	368, 1592,
	369, 1592,
	370, 1592,
	371, 1592,
	373, 1592,
	374, 1592,
	375, 1592,
	376, 1592,
	377, 1592,
	378, 1592,
	379, 1592,
	380, 1592,
	381, 1592,
	382, 1592,
	383, 1592,
	384, 1592,
	385, 1592,
	386, 1592,
	387, 1592,
	389, 1592,
	390, 1592,
	392, 1592,
	393, 1592,
	394, 1592,
	395, 1592,
	396, 1592,
	397, 1592,
	398, 1592,
	399, 1592,
	400, 1592,
	401, 1592,
	402, 1592,
	403, 1592,
	404, 1592,
	406, 1592,
	408, 1592,
	409, 1592,
	410, 1592,
	416, 1592,
	418, 1592,
	419, 1592,
	420, 1592,
	421, 1592,
	422, 1592,
	423, 1592,
	424, 1592,
	425, 1592,
	426, 1592,
	427, 1592,
	429, 1592,
	430, 1592,
	431, 1592,
	433, 1592,
	434, 1592,
	435, 1592,
	436, 1592,
	437, 1592,
	438, 1592,
	439, 1592,
	441, 1592,
	442, 1592,
	443, 1592,
	444, 1592,
	445, 1592,
	446, 1592,
	447, 1592,
	448, 1592,
	449, 1592,
	450, 1592,
	451, 1592,
	452, 1592,
	454, 1592,
	455, 1592,
	456, 1592,
	457, 1592,
	458, 1592,
	459, 1592,
	461, 1592,
	462, 1592,
	463, 1592,
	464, 1592,
	465, 1592,
	466, 1592,
	468, 1592,
	469, 1592,
	470, 1592,
	471, 1592,
	472, 1592,
	473, 1592,
	474, 1592,
	475, 1592,
	477, 1592,
	479, 1592,
	480, 1592,
	481, 1592,
	482, 1592,
	483, 1592,
	484, 1592,
	485, 1592,
	486, 1592,
	487, 1592,
	488, 1592,
	489, 1592,
	490, 1592,
	491, 1592,
	492, 1592,
	493, 1592,
	494, 1592,
	496, 1592,
	497, 1592,
	499, 1592,
	500, 1592,
	502, 1592,
	503, 1592,
	504, 1592,
	505, 1592,
	506, 1592,
	507, 1592,
	508, 1592,
	509, 1592,
	510, 1592,
	512, 1592,
	513, 1592,
	514, 1592,
	515, 1592,
	516, 1592,
	518, 1592,
	520, 1592,
	521, 1592,
	522, 1592,
	523, 1592,
	524, 1592,
	525, 1592,
	527, 1592,
	528, 1592,
	529, 1592,
	530, 1592,
	532, 1592,
	533, 1592,
	536, 1592,
	537, 1592,
	538, 1592,
	539, 1592,
	540, 1592,
	541, 1592,
	542, 1592,
	544, 1592,
	547, 1592,
	548, 1592,
	549, 1592,
	550, 1592,
	551, 1592,
	552, 1592,
	554, 1592,
	555, 1592,
	556, 1592,
	557, 1592,
	559, 1592,
	564, 1592,
	565, 1592,
	566, 1592,
	567, 1592,
	568, 1592,
	569, 1592,
	-2, 0,
	-1, 158,
	1, 1443,
	131, 1443,
	250, 1443,
	331, 1443,
	389, 1443,
	398, 1443,
	573, 1443,
	602, 1443,
	-2, 0,
	-1, 160,
	1, 1443,
	602, 1443,
	-2, 0,
	-1, 161,
	1, 1443,
	602, 1443,
	-2, 0,
	-1, 162,
	1, 1443,
	517, 1443,
	602, 1443,
	-2, 0,
	-1, 191,
	151, 1560,
	170, 1560,
	183, 1560,
	242, 1560,
	275, 1560,
	342, 1560,
	352, 1560,
	534, 1560,
	-2, 1535,
	-1, 239,
	4, 1599,
	5, 1599,
	6, 1599,
	7, 1599,
	8, 1599,
	9, 1599,
	10, 1599,
	21, 1599,
	22, 1599,
	23, 1599,
	24, 1599,
	25, 1599,
	26, 1599,
	27, 1599,
	29, 1599,
	30, 1599,
	36, 1599,
	37, 1599,
	41, 1599,
	42, 1599,
	43, 1599,
	44, 1599,
	45, 1599,
	46, 1599,
	47, 1599,
	48, 1599,
	49, 1599,
	50, 1599,
	51, 1599,
	53, 1599,
	54, 1599,
	55, 1599,
	56, 1599,
	58, 1599,
	59, 1599,
	60, 1599,
	61, 1599,
	62, 1599,
	63, 1599,
	64, 1599,
	65, 1599,
	66, 1599,
	67, 1599,
	68, 1599,
	69, 1599,
	70, 1599,
	71, 1599,
	73, 1599,
	74, 1599,
	75, 1599,
	77, 1599,
	79, 1599,
	80, 1599,
	81, 1599,
	82, 1599,
	83, 1599,
	84, 1599,
	85, 1599,
	88, 1599,
	89, 1599,
	90, 1599,
	91, 1599,
	92, 1599,
	94, 1599,
	96, 1599,
	97, 1599,
	98, 1599,
	99, 1599,
	100, 1599,
	101, 1599,
	103, 1599,
	104, 1599,
	105, 1599,
	106, 1599,
	107, 1599,
	108, 1599,
	109, 1599,
	110, 1599,
	111, 1599,
	112, 1599,
	113, 1599,
	114, 1599,
	115, 1599,
	116, 1599,
	117, 1599,
	118, 1599,
	119, 1599,
	120, 1599,
	121, 1599,
	122, 1599,
	123, 1599,
	124, 1599,
	125, 1599,
	126, 1599,
	127, 1599,
	128, 1599,
	129, 1599,
	130, 1599,
	132, 1599,
	133, 1599,
	134, 1599,
	136, 1599,
	137, 1599,
	138, 1599,
	141, 1599,
	142, 1599,
	143, 1599,
	145, 1599,
	146, 1599,
	148, 1599,
	149, 1599,
	150, 1599,
	152, 1599,
	153, 1599,
	154, 1599,
	155, 1599,
	156, 1599,
	157, 1599,
	158, 1599,
	159, 1599,
	160, 1599,
	161, 1599,
	162, 1599,
	163, 1599,
	164, 1599,
	165, 1599,
	166, 1599,
	167, 1599,
	168, 1599,
	169, 1599,
	175, 1599,
	176, 1599,
	177, 1599,
	178, 1599,
	182, 1599,
	184, 1599,
	185, 1599,
	186, 1599,
	189, 1599,
	190, 1599,
	191, 1599,
	192, 1599,
	193, 1599,
	194, 1599,
	195, 1599,
	196, 1599,
	197, 1599,
	198, 1599,
	199, 1599,
	200, 1599,
	201, 1599,
	202, 1599,
	203, 1599,
	205, 1599,
	206, 1599,
	208, 1599,
	209, 1599,
	211, 1599,
	212, 1599,
	213, 1599,
	214, 1599,
	215, 1599,
	216, 1599,
	217, 1599,
	218, 1599,
	219, 1599,
	220, 1599,
	221, 1599,
	222, 1599,
	224, 1599,
	225, 1599,
	226, 1599,
	227, 1599,
	228, 1599,
	232, 1599,
	233, 1599,
	234, 1599,
	235, 1599,
	236, 1599,
	238, 1599,
	239, 1599,
	240, 1599,
	241, 1599,
	243, 1599,
	245, 1599,
	246, 1599,
	247, 1599,
	248, 1599,
	249, 1599,
	250, 1599,
	251, 1599,
	252, 1599,
	253, 1599,
	254, 1599,
	258, 1599,
	259, 1599,
	260, 1599,
	261, 1599,
	262, 1599,
	263, 1599,
	265, 1599,
	266, 1599,
	267, 1599,
	269, 1599,
	270, 1599,
	271, 1599,
	272, 1599,
	273, 1599,
	274, 1599,
	276, 1599,
	280, 1599,
	281, 1599,
	282, 1599,
	283, 1599,
	284, 1599,
	285, 1599,
	286, 1599,
	287, 1599,
	288, 1599,
	290, 1599,
	291, 1599,
	292, 1599,
	293, 1599,
	294, 1599,
	295, 1599,
	296, 1599,
	297, 1599,
	298, 1599,
	299, 1599,
	300, 1599,
	301, 1599,
	302, 1599,
	303, 1599,
	304, 1599,
	305, 1599,
	306, 1599,
	307, 1599,
	308, 1599,
	309, 1599,
	310, 1599,
	311, 1599,
	313, 1599,
	314, 1599,
	315, 1599,
	316, 1599,
	317, 1599,
	318, 1599,
	319, 1599,
	320, 1599,
	321, 1599,
	322, 1599,
	323, 1599,
	324, 1599,
	325, 1599,
	326, 1599,
	327, 1599,
	328, 1599,
	329, 1599,
	330, 1599,
	331, 1599,
	332, 1599,
	333, 1599,
	334, 1599,
	335, 1599,
	336, 1599,
	337, 1599,
	338, 1599,
	339, 1599,
	340, 1599,
	341, 1599,
	344, 1599,
	348, 1599,
	349, 1599,
	350, 1599,
	353, 1599,
	354, 1599,
	355, 1599,
	356, 1599,
	357, 1599,
	358, 1599,
	359, 1599,
	360, 1599,
	361, 1599,
	362, 1599,
	363, 1599,
	364, 1599,
	365, 1599,
	366, 1599,
	367, 1599,
	368, 1599,
	369, 1599,
	370, 1599,
	371, 1599,
	373, 1599,
	374, 1599,
	375, 1599,
	376, 1599,
	377, 1599,
	378, 1599,
	379, 1599,
	380, 1599,
	381, 1599,
	382, 1599,
	383, 1599,
	384, 1599,
	385, 1599,
	386, 1599,
	387, 1599,
	389, 1599,
	390, 1599,
	392, 1599,
	393, 1599,
	394, 1599,
	395, 1599,
	396, 1599,
	397, 1599,
	398, 1599,
	399, 1599,
	400, 1599,
	401, 1599,
	402, 1599,
	403, 1599,
	404, 1599,
	406, 1599,
	408, 1599,
	409, 1599,
	410, 1599,
	416, 1599,
	418, 1599,
	419, 1599,
	420, 1599,
	421, 1599,
	422, 1599,
	423, 1599,
	424, 1599,
	425, 1599,
	426, 1599,
	427, 1599,
	429, 1599,
	430, 1599,
	431, 1599,
	432, 1599,
	433, 1599,
	434, 1599,
	435, 1599,
	436, 1599,
	437, 1599,
	438, 1599,
	439, 1599,
	441, 1599,
	442, 1599,
	443, 1599,
	444, 1599,
	445, 1599,
	446, 1599,
	447, 1599,
	448, 1599,
	449, 1599,
	450, 1599,
	451, 1599,
	452, 1599,
	454, 1599,
	455, 1599,
	456, 1599,
	457, 1599,
	458, 1599,
	459, 1599,
	460, 1599,
	461, 1599,
	462, 1599,
	463, 1599,
	464, 1599,
	465, 1599,
	466, 1599,
	467, 1599,
	468, 1599,
	469, 1599,
	470, 1599,
	471, 1599,
	472, 1599,
	473, 1599,
	474, 1599,
	475, 1599,
	477, 1599,
	479, 1599,
	480, 1599,
	481, 1599,
	482, 1599,
	483, 1599,
	484, 1599,
	485, 1599,
	486, 1599,
	487, 1599,
	488, 1599,
	489, 1599,
	490, 1599,
	491, 1599,
	492, 1599,
	493, 1599,
	494, 1599,
	496, 1599,
	497, 1599,
	498, 1599,
	499, 1599,
	500, 1599,
	502, 1599,
	503, 1599,
	504, 1599,
	505, 1599,
	506, 1599,
	507, 1599,
	508, 1599,
	509, 1599,
	510, 1599,
	512, 1599,
	513, 1599,
	514, 1599,
	515, 1599,
	516, 1599,
	518, 1599,
	520, 1599,
	521, 1599,
	522, 1599,
	523, 1599,
	524, 1599,
	525, 1599,
	526, 1599,
	527, 1599,
	528, 1599,
	529, 1599,
	530, 1599,
	532, 1599,
	533, 1599,
	535, 1599,
	536, 1599,
	537, 1599,
	538, 1599,
	539, 1599,
	540, 1599,
	541, 1599,
	542, 1599,
	543, 1599,
	544, 1599,
	547, 1599,
	548, 1599,
	549, 1599,
	550, 1599,
	551, 1599,
	552, 1599,
	554, 1599,
	555, 1599,
	556, 1599,
	557, 1599,
	559, 1599,
	564, 1599,
	565, 1599,
	566, 1599,
	567, 1599,
	568, 1599,
	569, 1599,
	570, 1599,
	583, 1599,
	590, 1599,
	591, 1599,
	592, 1599,
	599, 1599,
	603, 1599,
	-2, 0,
	-1, 746,
	4, 1324,
	21, 1324,
	22, 1324,
	23, 1324,
	24, 1324,
	25, 1324,
	26, 1324,
	27, 1324,
	29, 1324,
	30, 1324,
	36, 1324,
	41, 1324,
	42, 1324,
	44, 1324,
	45, 1324,
	46, 1324,
	47, 1324,
	48, 1324,
	49, 1324,
	50, 1324,
	51, 1324,
	53, 1324,
	54, 1324,
	55, 1324,
	56, 1324,
	58, 1324,
	59, 1324,
	60, 1324,
	61, 1324,
	62, 1324,
	63, 1324,
	64, 1324,
	68, 1324,
	69, 1324,
	70, 1324,
	71, 1324,
	73, 1324,
	74, 1324,
	75, 1324,
	79, 1324,
	80, 1324,
	81, 1324,
	82, 1324,
	83, 1324,
	84, 1324,
	85, 1324,
	88, 1324,
	89, 1324,
	90, 1324,
	91, 1324,
	92, 1324,
	94, 1324,
	96, 1324,
	97, 1324,
	98, 1324,
	99, 1324,
	100, 1324,
	101, 1324,
	103, 1324,
	104, 1324,
	105, 1324,
	107, 1324,
	108, 1324,
	109, 1324,
	117, 1324,
	118, 1324,
	119, 1324,
	120, 1324,
	121, 1324,
	123, 1324,
	124, 1324,
	125, 1324,
	126, 1324,
	128, 1324,
	129, 1324,
	130, 1324,
	132, 1324,
	133, 1324,
	134, 1324,
	136, 1324,
	137, 1324,
	138, 1324,
	141, 1324,
	142, 1324,
	143, 1324,
	145, 1324,
	146, 1324,
	148, 1324,
	149, 1324,
	150, 1324,
	152, 1324,
	153, 1324,
	154, 1324,
	155, 1324,
	156, 1324,
	157, 1324,
	158, 1324,
	159, 1324,
	160, 1324,
	161, 1324,
	162, 1324,
	163, 1324,
	164, 1324,
	165, 1324,
	166, 1324,
	167, 1324,
	169, 1324,
	175, 1324,
	176, 1324,
	177, 1324,
	178, 1324,
	182, 1324,
	184, 1324,
	185, 1324,
	186, 1324,
	190, 1324,
	191, 1324,
	192, 1324,
	193, 1324,
	194, 1324,
	195, 1324,
	196, 1324,
	197, 1324,
	198, 1324,
	199, 1324,
	200, 1324,
	201, 1324,
	202, 1324,
	203, 1324,
	205, 1324,
	206, 1324,
	208, 1324,
	209, 1324,
	211, 1324,
	212, 1324,
	213, 1324,
	214, 1324,
	215, 1324,
	216, 1324,
	217, 1324,
	218, 1324,
	219, 1324,
	221, 1324,
	222, 1324,
	224, 1324,
	225, 1324,
	226, 1324,
	227, 1324,
	228, 1324,
	232, 1324,
	233, 1324,
	234, 1324,
	235, 1324,
	236, 1324,
	239, 1324,
	240, 1324,
	241, 1324,
	243, 1324,
	245, 1324,
	246, 1324,
	248, 1324,
	250, 1324,
	251, 1324,
	252, 1324,
	254, 1324,
	258, 1324,
	259, 1324,
	260, 1324,
	261, 1324,
	262, 1324,
	263, 1324,
	265, 1324,
	266, 1324,
	267, 1324,
	269, 1324,
	270, 1324,
	272, 1324,
	273, 1324,
	276, 1324,
	280, 1324,
	281, 1324,
	282, 1324,
	285, 1324,
	286, 1324,
	287, 1324,
	288, 1324,
	290, 1324,
	291, 1324,
	292, 1324,
	293, 1324,
	294, 1324,
	295, 1324,
	296, 1324,
	297, 1324,
	298, 1324,
	299, 1324,
	300, 1324,
	301, 1324,
	302, 1324,
	303, 1324,
	304, 1324,
	305, 1324,
	306, 1324,
	307, 1324,
	308, 1324,
	309, 1324,
	310, 1324,
	311, 1324,
	313, 1324,
	315, 1324,
	316, 1324,
	317, 1324,
	318, 1324,
	319, 1324,
	320, 1324,
	321, 1324,
	322, 1324,
	323, 1324,
	324, 1324,
	325, 1324,
	326, 1324,
	327, 1324,
	329, 1324,
	330, 1324,
	332, 1324,
	334, 1324,
	335, 1324,
	337, 1324,
	338, 1324,
	339, 1324,
	340, 1324,
	341, 1324,
	344, 1324,
	348, 1324,
	349, 1324,
	350, 1324,
	353, 1324,
	354, 1324,
	355, 1324,
	357, 1324,
	359, 1324,
	360, 1324,
	361, 1324,
	362, 1324,
	363, 1324,
	364, 1324,
	365, 1324,
	366, 1324,
	367, 1324,
	368, 1324,
	369, 1324,
	370, 1324,
	371, 1324,
	373, 1324,
	374, 1324,
	375, 1324,
	376, 1324,
	377, 1324,
	378, 1324,
	379, 1324,
	380, 1324,
	381, 1324,
	382, 1324,
	383, 1324,
	384, 1324,
	385, 1324,
	386, 1324,
	387, 1324,
	389, 1324,
	390, 1324,
	392, 1324,
	393, 1324,
	394, 1324,
	395, 1324,
	396, 1324,
	397, 1324,
	398, 1324,
	399, 1324,
	400, 1324,
	401, 1324,
	402, 1324,
	403, 1324,
	404, 1324,
	406, 1324,
	408, 1324,
	409, 1324,
	410, 1324,
	416, 1324,
	418, 1324,
	419, 1324,
	420, 1324,
	421, 1324,
	422, 1324,
	423, 1324,
	424, 1324,
	425, 1324,
	426, 1324,
	427, 1324,
	429, 1324,
	430, 1324,
	431, 1324,
	433, 1324,
	434, 1324,
	435, 1324,
	436, 1324,
	437, 1324,
	438, 1324,
	439, 1324,
	441, 1324,
	442, 1324,
	443, 1324,
	444, 1324,
	445, 1324,
	446, 1324,
	447, 1324,
	448, 1324,
	449, 1324,
	450, 1324,
	451, 1324,
	452, 1324,
	454, 1324,
	455, 1324,
	456, 1324,
	457, 1324,
	458, 1324,
	459, 1324,
	461, 1324,
	462, 1324,
	463, 1324,
	464, 1324,
	465, 1324,
	466, 1324,
	468, 1324,
	469, 1324,
	470, 1324,
	471, 1324,
	472, 1324,
	473, 1324,
	474, 1324,
	475, 1324,
	477, 1324,
	479, 1324,
	480, 1324,
	481, 1324,
	482, 1324,
	483, 1324,
	484, 1324,
	485, 1324,
	486, 1324,
	487, 1324,
	488, 1324,
	489, 1324,
	490, 1324,
	491, 1324,
	492, 1324,
	493, 1324,
	494, 1324,
	496, 1324,
	497, 1324,
	499, 1324,
	500, 1324,
	502, 1324,
	503, 1324,
	504, 1324,
	505, 1324,
	506, 1324,
	507, 1324,
	508, 1324,
	509, 1324,
	510, 1324,
	512, 1324,
	513, 1324,
	514, 1324,
	515, 1324,
	516, 1324,
	518, 1324,
	520, 1324,
	521, 1324,
	522, 1324,
	523, 1324,
	524, 1324,
	525, 1324,
	527, 1324,
	528, 1324,
	529, 1324,
	530, 1324,
	532, 1324,
	533, 1324,
	536, 1324,
	537, 1324,
	538, 1324,
	539, 1324,
	540, 1324,
	541, 1324,
	542, 1324,
	544, 1324,
	547, 1324,
	548, 1324,
	549, 1324,
	550, 1324,
	551, 1324,
	552, 1324,
	554, 1324,
	555, 1324,
	556, 1324,
	557, 1324,
	559, 1324,
	564, 1324,
	565, 1324,
	566, 1324,
	567, 1324,
	568, 1324,
	569, 1324,
	-2, 0,
	-1, 765,
	188, 2390,
	517, 2390,
	582, 2390,
	601, 2390,
	-2, 0,
	-1, 766,
	188, 2377,
	517, 2377,
	582, 2377,
	601, 2377,
	-2, 0,
	-1, 768,
	188, 2636,
	517, 2636,
	582, 2636,
	601, 2636,
	-2, 0,
	-1, 771,
	188, 2499,
	517, 2499,
	582, 2499,
	601, 2499,
	-2, 0,
	-1, 772,
	188, 2677,
	517, 2677,
	582, 2677,
	601, 2677,
	-2, 0,
	-1, 780,
	188, 2526,
	517, 2526,
	582, 2526,
	601, 2526,
	-2, 708,
	-1, 815,
	601, 2326,
	604, 2326,
	-2, 1001,
	-1, 816,
	601, 2328,
	604, 2328,
	-2, 1002,
	-1, 817,
	601, 2327,
	604, 2327,
	-2, 1003,
	-1, 818,
	604, 2252,
	-2, 1004,
	-1, 843,
	183, 264,
	-2, 0,
	-1, 867,
	43, 2299,
	-2, 0,
	-1, 868,
	554, 1302,
	-2, 1081,
	-1, 884,
	4, 1732,
	21, 1732,
	22, 1732,
	23, 1732,
	24, 1732,
	25, 1732,
	26, 1732,
	27, 1732,
	29, 1732,
	30, 1732,
	36, 1732,
	41, 1732,
	42, 1732,
	44, 1732,
	45, 1732,
	46, 1732,
	47, 1732,
	48, 1732,
	49, 1732,
	50, 1732,
	51, 1732,
	53, 1732,
	54, 1732,
	55, 1732,
	56, 1732,
	58, 1732,
	59, 1732,
	60, 1732,
	61, 1732,
	62, 1732,
	63, 1732,
	64, 1732,
	68, 1732,
	69, 1732,
	70, 1732,
	71, 1732,
	73, 1732,
	74, 1732,
	75, 1732,
	79, 1732,
	80, 1732,
	81, 1732,
	82, 1732,
	83, 1732,
	84, 1732,
	85, 1732,
	88, 1732,
	89, 1732,
	90, 1732,
	91, 1732,
	92, 1732,
	94, 1732,
	96, 1732,
	97, 1732,
	98, 1732,
	99, 1732,
	100, 1732,
	101, 1732,
	103, 1732,
	104, 1732,
	105, 1732,
	107, 1732,
	108, 1732,
	109, 1732,
	117, 1732,
	118, 1732,
	119, 1732,
	120, 1732,
	121, 1732,
	123, 1732,
	124, 1732,
	125, 1732,
	126, 1732,
	128, 1732,
	129, 1732,
	130, 1732,
	132, 1732,
	133, 1732,
	134, 1732,
	136, 1732,
	137, 1732,
	138, 1732,
	141, 1732,
	142, 1732,
	143, 1732,
	145, 1732,
	146, 1732,
	148, 1732,
	149, 1732,
	150, 1732,
	152, 1732,
	153, 1732,
	154, 1732,
	155, 1732,
	156, 1732,
	157, 1732,
	158, 1732,
	159, 1732,
	160, 1732,
	161, 1732,
	162, 1732,
	163, 1732,
	164, 1732,
	165, 1732,
	166, 1732,
	167, 1732,
	169, 1732,
	175, 1732,
	176, 1732,
	177, 1732,
	178, 1732,
	182, 1732,
	184, 1732,
	185, 1732,
	186, 1732,
	190, 1732,
	191, 1732,
	192, 1732,
	193, 1732,
	194, 1732,
	195, 1732,
	196, 1732,
	197, 1732,
	198, 1732,
	199, 1732,
	200, 1732,
	201, 1732,
	202, 1732,
	203, 1732,
	205, 1732,
	206, 1732,
	208, 1732,
	209, 1732,
	211, 1732,
	212, 1732,
	213, 1732,
	214, 1732,
	215, 1732,
	216, 1732,
	217, 1732,
	218, 1732,
	219, 1732,
	221, 1732,
	222, 1732,
	224, 1732,
	225, 1732,
	226, 1732,
	227, 1732,
	228, 1732,
	232, 1732,
	233, 1732,
	234, 1732,
	235, 1732,
	236, 1732,
	239, 1732,
	240, 1732,
	241, 1732,
	243, 1732,
	245, 1732,
	246, 1732,
	248, 1732,
	250, 1732,
	251, 1732,
	252, 1732,
	254, 1732,
	258, 1732,
	259, 1732,
	260, 1732,
	261, 1732,
	262, 1732,
	263, 1732,
	265, 1732,
	266, 1732,
	267, 1732,
	269, 1732,
	270, 1732,
	272, 1732,
	273, 1732,
	276, 1732,
	280, 1732,
	281, 1732,
	282, 1732,
	285, 1732,
	286, 1732,
	287, 1732,
	288, 1732,
	290, 1732,
	291, 1732,
	292, 1732,
	293, 1732,
	294, 1732,
	295, 1732,
	296, 1732,
	297, 1732,
	298, 1732,
	299, 1732,
	300, 1732,
	301, 1732,
	302, 1732,
	303, 1732,
	304, 1732,
	305, 1732,
	306, 1732,
	307, 1732,
	308, 1732,
	309, 1732,
	310, 1732,
	311, 1732,
	313, 1732,
	315, 1732,
	316, 1732,
	317, 1732,
	318, 1732,
	319, 1732,
	320, 1732,
	321, 1732,
	322, 1732,
	323, 1732,
	324, 1732,
	325, 1732,
	326, 1732,
	327, 1732,
	329, 1732,
	330, 1732,
	332, 1732,
	334, 1732,
	335, 1732,
	337, 1732,
	338, 1732,
	339, 1732,
	340, 1732,
	341, 1732,
	344, 1732,
	348, 1732,
	349, 1732,
	350, 1732,
	353, 1732,
	354, 1732,
	355, 1732,
	357, 1732,
	359, 1732,
	360, 1732,
	361, 1732,
	362, 1732,
	363, 1732,
	364, 1732,
	365, 1732,
	366, 1732,
	367, 1732,
	368, 1732,
	369, 1732,
	370, 1732,
	371, 1732,
	373, 1732,
	374, 1732,
	375, 1732,
	376, 1732,
	377, 1732,
	378, 1732,
	379, 1732,
	380, 1732,
	381, 1732,
	382, 1732,
	383, 1732,
	384, 1732,
	385, 1732,
	386, 1732,
	387, 1732,
	389, 1732,
	390, 1732,
	392, 1732,
	393, 1732,
	394, 1732,
	395, 1732,
	396, 1732,
	397, 1732,
	398, 1732,
	399, 1732,
	400, 1732,
	401, 1732,
	402, 1732,
	403, 1732,
	404, 1732,
	406, 1732,
	408, 1732,
	409, 1732,
	410, 1732,
	416, 1732,
	418, 1732,
	419, 1732,
	420, 1732,
	421, 1732,
	422, 1732,
	423, 1732,
	424, 1732,
	425, 1732,
	426, 1732,
	427, 1732,
	429, 1732,
	430, 1732,
	431, 1732,
	433, 1732,
	434, 1732,
	435, 1732,
	436, 1732,
	437, 1732,
	438, 1732,
	439, 1732,
	441, 1732,
	442, 1732,
	443, 1732,
	444, 1732,
	445, 1732,
	446, 1732,
	447, 1732,
	448, 1732,
	449, 1732,
	450, 1732,
	451, 1732,
	452, 1732,
	454, 1732,
	455, 1732,
	456, 1732,
	457, 1732,
	458, 1732,
	459, 1732,
	461, 1732,
	462, 1732,
	463, 1732,
	464, 1732,
	465, 1732,
	466, 1732,
	468, 1732,
	469, 1732,
	470, 1732,
	471, 1732,
	472, 1732,
	473, 1732,
	474, 1732,
	475, 1732,
	477, 1732,
	479, 1732,
	480, 1732,
	481, 1732,
	482, 1732,
	483, 1732,
	484, 1732,
	485, 1732,
	486, 1732,
	487, 1732,
	488, 1732,
	489, 1732,
	490, 1732,
	491, 1732,
	492, 1732,
	493, 1732,
	494, 1732,
	496, 1732,
	497, 1732,
	499, 1732,
	500, 1732,
	502, 1732,
	503, 1732,
	504, 1732,
	505, 1732,
	506, 1732,
	507, 1732,
	508, 1732,
	509, 1732,
	510, 1732,
	512, 1732,
	513, 1732,
	514, 1732,
	515, 1732,
	516, 1732,
	518, 1732,
	520, 1732,
	521, 1732,
	522, 1732,
	523, 1732,
	524, 1732,
	525, 1732,
	527, 1732,
	528, 1732,
	529, 1732,
	530, 1732,
	532, 1732,
	533, 1732,
	536, 1732,
	537, 1732,
	538, 1732,
	539, 1732,
	540, 1732,
	541, 1732,
	542, 1732,
	544, 1732,
	547, 1732,
	548, 1732,
	549, 1732,
	550, 1732,
	551, 1732,
	552, 1732,
	554, 1732,
	555, 1732,
	556, 1732,
	557, 1732,
	559, 1732,
	564, 1732,
	565, 1732,
	566, 1732,
	567, 1732,
	568, 1732,
	569, 1732,
	-2, 0,
	-1, 894,
	262, 414,
	-2, 0,
	-1, 971,
	394, 883,
	459, 883,
	500, 883,
	522, 883,
	-2, 0,
	-1, 972,
	394, 882,
	459, 882,
	500, 882,
	522, 882,
	-2, 818,
	-1, 976,
	1, 935,
	598, 935,
	600, 935,
	602, 935,
	-2, 0,
	-1, 978,
	1, 857,
	598, 857,
	600, 857,
	602, 857,
	-2, 0,
	-1, 979,
	1, 861,
	598, 861,
	600, 861,
	602, 861,
	-2, 0,
	-1, 980,
	1, 1000,
	183, 1000,
	598, 1000,
	600, 1000,
	602, 1000,
	-2, 0,
	-1, 988,
	1, 888,
	598, 888,
	600, 888,
	602, 888,
	-2, 0,
	-1, 995,
	1, 935,
	598, 935,
	600, 935,
	602, 935,
	-2, 0,
	-1, 996,
	1, 937,
	598, 937,
	600, 937,
	602, 937,
	-2, 0,
	-1, 997,
	1, 940,
	598, 940,
	600, 940,
	602, 940,
	-2, 0,
	-1, 1003,
	1, 964,
	598, 964,
	600, 964,
	602, 964,
	-2, 0,
	-1, 1004,
	1, 966,
	598, 966,
	600, 966,
	602, 966,
	-2, 0,
	-1, 1009,
	1, 994,
	598, 994,
	600, 994,
	602, 994,
	-2, 0,
	-1, 1059,
	170, 1603,
	183, 1603,
	275, 1603,
	342, 1603,
	-2, 1539,
	-1, 1074,
	170, 1602,
	183, 1602,
	275, 1602,
	342, 1602,
	-2, 1536,
	-1, 1101,
	601, 2325,
	-2, 716,
	-1, 1130,
	5, 2317,
	599, 2315,
	-2, 2306,
	-1, 1138,
	5, 2338,
	599, 2335,
	-2, 2326,
	-1, 1139,
	5, 2339,
	599, 2336,
	-2, 2327,
	-1, 1147,
	601, 2323,
	-2, 2305,
	-1, 1148,
	599, 2760,
	-2, 2324,
	-1, 1171,
	599, 2759,
	-2, 2340,
	-1, 1172,
	5, 1807,
	-2, 2730,
	-1, 1173,
	5, 1808,
	-2, 2731,
	-1, 1174,
	5, 1809,
	-2, 2745,
	-1, 1175,
	5, 1810,
	-2, 2709,
	-1, 1176,
	5, 1811,
	-2, 2743,
	-1, 1177,
	5, 1819,
	-2, 2722,
	-1, 1178,
	5, 1806,
	-2, 2718,
	-1, 1179,
	5, 1806,
	-2, 2717,
	-1, 1180,
	5, 1806,
	-2, 2736,
	-1, 1181,
	5, 1817,
	-2, 2711,
	-1, 1182,
	5, 1822,
	-2, 2710,
	-1, 1183,
	5, 1824,
	-2, 2755,
	-1, 1186,
	5, 1846,
	-2, 2748,
	-1, 1187,
	5, 1838,
	-2, 2749,
	-1, 1188,
	5, 1846,
	-2, 2750,
	-1, 1189,
	5, 1842,
	-2, 2751,
	-1, 1190,
	5, 1792,
	-2, 2723,
	-1, 1191,
	5, 1793,
	-2, 2724,
	-1, 1192,
	5, 1794,
	-2, 2712,
	-1, 1220,
	5, 1829,
	-2, 2756,
	-1, 1221,
	5, 1830,
	-2, 2746,
	-1, 1222,
	5, 1831,
	555, 1831,
	-2, 2713,
	-1, 1223,
	5, 1832,
	555, 1832,
	-2, 2714,
	-1, 1260,
	599, 2335,
	-2, 2326,
	-1, 1261,
	599, 2336,
	-2, 2327,
	-1, 1362,
	188, 2677,
	517, 2677,
	582, 2677,
	601, 2677,
	-2, 0,
	-1, 1367,
	1, 693,
	602, 693,
	-2, 1451,
	-1, 1496,
	361, 2300,
	418, 2300,
	461, 2300,
	592, 2300,
	-2, 2290,
	-1, 1507,
	603, 2300,
	-2, 2302,
	-1, 1515,
	1, 1299,
	423, 1263,
	461, 1263,
	576, 1263,
	598, 1299,
	600, 1299,
	602, 1299,
	-2, 1588,
	-1, 1521,
	204, 1396,
	223, 1396,
	431, 1396,
	-2, 0,
	-1, 1569,
	402, 1080,
	554, 1080,
	-2, 409,
	-1, 1586,
	43, 2298,
	-2, 1046,
	-1, 1593,
	1, 1299,
	598, 1299,
	600, 1299,
	602, 1299,
	-2, 1588,
	-1, 1601,
	4, 1324,
	21, 1324,
	22, 1324,
	23, 1324,
	24, 1324,
	25, 1324,
	26, 1324,
	27, 1324,
	29, 1324,
	30, 1324,
	36, 1324,
	41, 1324,
	42, 1324,
	44, 1324,
	45, 1324,
	46, 1324,
	47, 1324,
	48, 1324,
	49, 1324,
	50, 1324,
	51, 1324,
	53, 1324,
	54, 1324,
	55, 1324,
	56, 1324,
	58, 1324,
	59, 1324,
	60, 1324,
	61, 1324,
	62, 1324,
	63, 1324,
	64, 1324,
	68, 1324,
	69, 1324,
	70, 1324,
	71, 1324,
	73, 1324,
	74, 1324,
	75, 1324,
	79, 1324,
	80, 1324,
	81, 1324,
	82, 1324,
	83, 1324,
	84, 1324,
	85, 1324,
	88, 1324,
	89, 1324,
	90, 1324,
	91, 1324,
	92, 1324,
	94, 1324,
	96, 1324,
	97, 1324,
	98, 1324,
	99, 1324,
	100, 1324,
	101, 1324,
	103, 1324,
	104, 1324,
	105, 1324,
	107, 1324,
	108, 1324,
	109, 1324,
	117, 1324,
	118, 1324,
	119, 1324,
	120, 1324,
	121, 1324,
	123, 1324,
	124, 1324,
	125, 1324,
	126, 1324,
	128, 1324,
	129, 1324,
	130, 1324,
	132, 1324,
	133, 1324,
	134, 1324,
	136, 1324,
	137, 1324,
	138, 1324,
	141, 1324,
	142, 1324,
	143, 1324,
	145, 1324,
	146, 1324,
	148, 1324,
	149, 1324,
	150, 1324,
	152, 1324,
	153, 1324,
	154, 1324,
	155, 1324,
	156, 1324,
	157, 1324,
	158, 1324,
	159, 1324,
	160, 1324,
	161, 1324,
	162, 1324,
	163, 1324,
	164, 1324,
	165, 1324,
	166, 1324,
	167, 1324,
	175, 1324,
	176, 1324,
	177, 1324,
	178, 1324,
	182, 1324,
	184, 1324,
	185, 1324,
	186, 1324,
	190, 1324,
	191, 1324,
	192, 1324,
	193, 1324,
	194, 1324,
	195, 1324,
	196, 1324,
	197, 1324,
	198, 1324,
	199, 1324,
	200, 1324,
	201, 1324,
	202, 1324,
	203, 1324,
	205, 1324,
	206, 1324,
	208, 1324,
	209, 1324,
	211, 1324,
	212, 1324,
	213, 1324,
	214, 1324,
	215, 1324,
	216, 1324,
	217, 1324,
	218, 1324,
	219, 1324,
	221, 1324,
	222, 1324,
	224, 1324,
	225, 1324,
	226, 1324,
	227, 1324,
	228, 1324,
	233, 1324,
	234, 1324,
	235, 1324,
	236, 1324,
	239, 1324,
	240, 1324,
	241, 1324,
	243, 1324,
	245, 1324,
	246, 1324,
	248, 1324,
	250, 1324,
	251, 1324,
	252, 1324,
	254, 1324,
	258, 1324,
	259, 1324,
	260, 1324,
	261, 1324,
	262, 1324,
	263, 1324,
	265, 1324,
	266, 1324,
	267, 1324,
	269, 1324,
	270, 1324,
	272, 1324,
	273, 1324,
	276, 1324,
	280, 1324,
	281, 1324,
	282, 1324,
	285, 1324,
	286, 1324,
	287, 1324,
	288, 1324,
	290, 1324,
	291, 1324,
	292, 1324,
	293, 1324,
	294, 1324,
	295, 1324,
	296, 1324,
	297, 1324,
	298, 1324,
	299, 1324,
	300, 1324,
	301, 1324,
	302, 1324,
	303, 1324,
	304, 1324,
	305, 1324,
	306, 1324,
	307, 1324,
	308, 1324,
	309, 1324,
	310, 1324,
	311, 1324,
	313, 1324,
	315, 1324,
	316, 1324,
	317, 1324,
	318, 1324,
	319, 1324,
	320, 1324,
	321, 1324,
	322, 1324,
	323, 1324,
	324, 1324,
	325, 1324,
	326, 1324,
	327, 1324,
	329, 1324,
	330, 1324,
	334, 1324,
	335, 1324,
	337, 1324,
	338, 1324,
	339, 1324,
	340, 1324,
	341, 1324,
	344, 1324,
	346, 1324,
	348, 1324,
	349, 1324,
	350, 1324,
	353, 1324,
	354, 1324,
	355, 1324,
	357, 1324,
	359, 1324,
	360, 1324,
	361, 1324,
	362, 1324,
	363, 1324,
	364, 1324,
	365, 1324,
	366, 1324,
	367, 1324,
	368, 1324,
	369, 1324,
	370, 1324,
	371, 1324,
	373, 1324,
	374, 1324,
	375, 1324,
	376, 1324,
	377, 1324,
	378, 1324,
	379, 1324,
	380, 1324,
	381, 1324,
	382, 1324,
	383, 1324,
	384, 1324,
	385, 1324,
	386, 1324,
	387, 1324,
	389, 1324,
	390, 1324,
	392, 1324,
	393, 1324,
	394, 1324,
	395, 1324,
	396, 1324,
	397, 1324,
	398, 1324,
	399, 1324,
	400, 1324,
	401, 1324,
	402, 1324,
	403, 1324,
	404, 1324,
	406, 1324,
	408, 1324,
	409, 1324,
	410, 1324,
	416, 1324,
	418, 1324,
	419, 1324,
	420, 1324,
	421, 1324,
	422, 1324,
	423, 1324,
	424, 1324,
	425, 1324,
	426, 1324,
	427, 1324,
	429, 1324,
	430, 1324,
	431, 1324,
	433, 1324,
	434, 1324,
	435, 1324,
	436, 1324,
	437, 1324,
	438, 1324,
	439, 1324,
	441, 1324,
	442, 1324,
	443, 1324,
	444, 1324,
	445, 1324,
	446, 1324,
	447, 1324,
	448, 1324,
	449, 1324,
	450, 1324,
	451, 1324,
	452, 1324,
	454, 1324,
	455, 1324,
	456, 1324,
	457, 1324,
	458, 1324,
	459, 1324,
	461, 1324,
	462, 1324,
	463, 1324,
	464, 1324,
	465, 1324,
	466, 1324,
	468, 1324,
	469, 1324,
	470, 1324,
	471, 1324,
	472, 1324,
	473, 1324,
	474, 1324,
	475, 1324,
	477, 1324,
	479, 1324,
	480, 1324,
	481, 1324,
	482, 1324,
	483, 1324,
	484, 1324,
	485, 1324,
	486, 1324,
	487, 1324,
	488, 1324,
	489, 1324,
	490, 1324,
	491, 1324,
	492, 1324,
	493, 1324,
	494, 1324,
	496, 1324,
	497, 1324,
	499, 1324,
	500, 1324,
	502, 1324,
	503, 1324,
	504, 1324,
	505, 1324,
	506, 1324,
	507, 1324,
	508, 1324,
	509, 1324,
	510, 1324,
	512, 1324,
	513, 1324,
	514, 1324,
	515, 1324,
	516, 1324,
	518, 1324,
	520, 1324,
	521, 1324,
	522, 1324,
	523, 1324,
	524, 1324,
	525, 1324,
	527, 1324,
	528, 1324,
	529, 1324,
	530, 1324,
	532, 1324,
	533, 1324,
	536, 1324,
	537, 1324,
	538, 1324,
	539, 1324,
	540, 1324,
	541, 1324,
	542, 1324,
	544, 1324,
	547, 1324,
	548, 1324,
	549, 1324,
	550, 1324,
	551, 1324,
	552, 1324,
	554, 1324,
	555, 1324,
	556, 1324,
	557, 1324,
	559, 1324,
	564, 1324,
	565, 1324,
	566, 1324,
	567, 1324,
	568, 1324,
	569, 1324,
	-2, 0,
	-1, 1624,
	1, 554,
	598, 554,
	600, 554,
	602, 554,
	-2, 1559,
	-1, 1627,
	4, 2754,
	11, 2754,
	12, 2754,
	14, 2754,
	15, 2754,
	16, 2754,
	17, 2754,
	18, 2754,
	19, 2754,
	21, 2754,
	22, 2754,
	23, 2754,
	24, 2754,
	25, 2754,
	26, 2754,
	27, 2754,
	29, 2754,
	30, 2754,
	33, 2754,
	34, 2754,
	36, 2754,
	38, 2754,
	41, 2754,
	42, 2754,
	44, 2754,
	45, 2754,
	46, 2754,
	47, 2754,
	48, 2754,
	49, 2754,
	50, 2754,
	51, 2754,
	53, 2754,
	54, 2754,
	55, 2754,
	56, 2754,
	58, 2754,
	59, 2754,
	60, 2754,
	61, 2754,
	62, 2754,
	63, 2754,
	64, 2754,
	67, 2754,
	68, 2754,
	69, 2754,
	70, 2754,
	71, 2754,
	73, 2754,
	74, 2754,
	75, 2754,
	76, 2754,
	79, 2754,
	80, 2754,
	81, 2754,
	82, 2754,
	83, 2754,
	84, 2754,
	85, 2754,
	86, 2754,
	88, 2754,
	89, 2754,
	90, 2754,
	91, 2754,
	92, 2754,
	94, 2754,
	95, 2754,
	96, 2754,
	97, 2754,
	98, 2754,
	99, 2754,
	100, 2754,
	101, 2754,
	103, 2754,
	104, 2754,
	105, 2754,
	106, 2754,
	107, 2754,
	108, 2754,
	109, 2754,
	117, 2754,
	118, 2754,
	119, 2754,
	120, 2754,
	121, 2754,
	123, 2754,
	124, 2754,
	125, 2754,
	126, 2754,
	128, 2754,
	129, 2754,
	130, 2754,
	132, 2754,
	133, 2754,
	134, 2754,
	136, 2754,
	137, 2754,
	138, 2754,
	141, 2754,
	142, 2754,
	143, 2754,
	145, 2754,
	146, 2754,
	148, 2754,
	149, 2754,
	150, 2754,
	152, 2754,
	153, 2754,
	154, 2754,
	155, 2754,
	156, 2754,
	157, 2754,
	158, 2754,
	159, 2754,
	160, 2754,
	161, 2754,
	162, 2754,
	163, 2754,
	164, 2754,
	165, 2754,
	166, 2754,
	167, 2754,
	171, 2754,
	172, 2754,
	173, 2754,
	174, 2754,
	175, 2754,
	176, 2754,
	177, 2754,
	178, 2754,
	181, 2754,
	182, 2754,
	184, 2754,
	185, 2754,
	186, 2754,
	189, 2754,
	190, 2754,
	191, 2754,
	192, 2754,
	193, 2754,
	194, 2754,
	195, 2754,
	196, 2754,
	197, 2754,
	198, 2754,
	199, 2754,
	200, 2754,
	201, 2754,
	202, 2754,
	203, 2754,
	205, 2754,
	206, 2754,
	208, 2754,
	209, 2754,
	211, 2754,
	212, 2754,
	213, 2754,
	214, 2754,
	215, 2754,
	216, 2754,
	217, 2754,
	218, 2754,
	219, 2754,
	220, 2754,
	221, 2754,
	222, 2754,
	223, 2754,
	224, 2754,
	225, 2754,
	226, 2754,
	227, 2754,
	228, 2754,
	230, 2754,
	231, 2754,
	233, 2754,
	234, 2754,
	235, 2754,
	236, 2754,
	238, 2754,
	239, 2754,
	240, 2754,
	241, 2754,
	243, 2754,
	245, 2754,
	246, 2754,
	247, 2754,
	248, 2754,
	249, 2754,
	250, 2754,
	251, 2754,
	252, 2754,
	253, 2754,
	254, 2754,
	256, 2754,
	257, 2754,
	258, 2754,
	259, 2754,
	260, 2754,
	261, 2754,
	262, 2754,
	263, 2754,
	265, 2754,
	266, 2754,
	267, 2754,
	269, 2754,
	270, 2754,
	271, 2754,
	272, 2754,
	273, 2754,
	274, 2754,
	276, 2754,
	280, 2754,
	281, 2754,
	282, 2754,
	285, 2754,
	286, 2754,
	287, 2754,
	288, 2754,
	289, 2754,
	290, 2754,
	291, 2754,
	292, 2754,
	293, 2754,
	294, 2754,
	295, 2754,
	296, 2754,
	297, 2754,
	298, 2754,
	299, 2754,
	300, 2754,
	301, 2754,
	302, 2754,
	303, 2754,
	304, 2754,
	305, 2754,
	306, 2754,
	307, 2754,
	308, 2754,
	309, 2754,
	310, 2754,
	311, 2754,
	313, 2754,
	314, 2754,
	315, 2754,
	316, 2754,
	317, 2754,
	318, 2754,
	319, 2754,
	320, 2754,
	321, 2754,
	322, 2754,
	323, 2754,
	324, 2754,
	325, 2754,
	326, 2754,
	327, 2754,
	329, 2754,
	330, 2754,
	333, 2754,
	334, 2754,
	335, 2754,
	337, 2754,
	338, 2754,
	339, 2754,
	340, 2754,
	341, 2754,
	344, 2754,
	348, 2754,
	349, 2754,
	350, 2754,
	351, 2754,
	353, 2754,
	354, 2754,
	355, 2754,
	357, 2754,
	359, 2754,
	360, 2754,
	361, 2754,
	362, 2754,
	363, 2754,
	364, 2754,
	365, 2754,
	366, 2754,
	367, 2754,
	368, 2754,
	369, 2754,
	370, 2754,
	371, 2754,
	373, 2754,
	374, 2754,
	375, 2754,
	376, 2754,
	377, 2754,
	378, 2754,
	379, 2754,
	380, 2754,
	381, 2754,
	382, 2754,
	383, 2754,
	384, 2754,
	385, 2754,
	386, 2754,
	387, 2754,
	389, 2754,
	390, 2754,
	392, 2754,
	393, 2754,
	394, 2754,
	395, 2754,
	396, 2754,
	397, 2754,
	398, 2754,
	399, 2754,
	400, 2754,
	401, 2754,
	402, 2754,
	403, 2754,
	404, 2754,
	406, 2754,
	408, 2754,
	409, 2754,
	410, 2754,
	416, 2754,
	417, 2754,
	418, 2754,
	419, 2754,
	420, 2754,
	421, 2754,
	422, 2754,
	423, 2754,
	424, 2754,
	425, 2754,
	426, 2754,
	427, 2754,
	429, 2754,
	430, 2754,
	431, 2754,
	432, 2754,
	433, 2754,
	434, 2754,
	435, 2754,
	436, 2754,
	437, 2754,
	438, 2754,
	439, 2754,
	440, 2754,
	441, 2754,
	442, 2754,
	443, 2754,
	444, 2754,
	445, 2754,
	446, 2754,
	447, 2754,
	448, 2754,
	449, 2754,
	450, 2754,
	451, 2754,
	452, 2754,
	454, 2754,
	455, 2754,
	456, 2754,
	457, 2754,
	458, 2754,
	459, 2754,
	461, 2754,
	462, 2754,
	463, 2754,
	464, 2754,
	465, 2754,
	466, 2754,
	467, 2754,
	468, 2754,
	469, 2754,
	470, 2754,
	471, 2754,
	472, 2754,
	473, 2754,
	474, 2754,
	475, 2754,
	477, 2754,
	479, 2754,
	480, 2754,
	481, 2754,
	482, 2754,
	483, 2754,
	484, 2754,
	485, 2754,
	486, 2754,
	487, 2754,
	488, 2754,
	489, 2754,
	490, 2754,
	491, 2754,
	492, 2754,
	493, 2754,
	494, 2754,
	496, 2754,
	497, 2754,
	498, 2754,
	499, 2754,
	500, 2754,
	502, 2754,
	503, 2754,
	504, 2754,
	505, 2754,
	506, 2754,
	507, 2754,
	508, 2754,
	509, 2754,
	510, 2754,
	512, 2754,
	513, 2754,
	514, 2754,
	515, 2754,
	516, 2754,
	518, 2754,
	520, 2754,
	521, 2754,
	522, 2754,
	523, 2754,
	524, 2754,
	525, 2754,
	527, 2754,
	528, 2754,
	529, 2754,
	530, 2754,
	532, 2754,
	533, 2754,
	536, 2754,
	537, 2754,
	538, 2754,
	539, 2754,
	540, 2754,
	541, 2754,
	542, 2754,
	544, 2754,
	547, 2754,
	548, 2754,
	549, 2754,
	550, 2754,
	551, 2754,
	552, 2754,
	554, 2754,
	555, 2754,
	556, 2754,
	557, 2754,
	559, 2754,
	564, 2754,
	565, 2754,
	566, 2754,
	567, 2754,
	568, 2754,
	569, 2754,
	570, 2754,
	572, 2754,
	580, 2754,
	581, 2754,
	582, 2754,
	583, 2754,
	584, 2754,
	585, 2754,
	587, 2754,
	588, 2754,
	589, 2754,
	590, 2754,
	591, 2754,
	592, 2754,
	593, 2754,
	594, 2754,
	595, 2754,
	597, 2754,
	600, 2754,
	601, 2754,
	603, 2754,
	604, 2754,
	-2, 0,
	-1, 1632,
	188, 2636,
	517, 2636,
	582, 2636,
	601, 2636,
	-2, 0,
	-1, 1685,
	394, 883,
	459, 883,
	500, 883,
	522, 883,
	-2, 0,
	-1, 1696,
	1, 1396,
	598, 1396,
	600, 1396,
	602, 1396,
	-2, 0,
	-1, 1713,
	1, 878,
	598, 878,
	600, 878,
	602, 878,
	-2, 0,
	-1, 1714,
	1, 922,
	598, 922,
	600, 922,
	602, 922,
	-2, 0,
	-1, 1715,
	1, 930,
	598, 930,
	600, 930,
	602, 930,
	-2, 0,
	-1, 1718,
	1, 887,
	598, 887,
	600, 887,
	602, 887,
	-2, 0,
	-1, 1720,
	1, 893,
	598, 893,
	600, 893,
	602, 893,
	-2, 0,
	-1, 1723,
	1, 889,
	598, 889,
	600, 889,
	602, 889,
	-2, 0,
	-1, 1728,
	1, 903,
	598, 903,
	600, 903,
	602, 903,
	-2, 0,
	-1, 1759,
	1, 2619,
	598, 2619,
	600, 2619,
	601, 2619,
	602, 2619,
	-2, 0,
	-1, 1763,
	1, 975,
	598, 975,
	600, 975,
	602, 975,
	-2, 0,
	-1, 1778,
	1, 1446,
	602, 1446,
	-2, 1451,
	-1, 1781,
	170, 1602,
	183, 1602,
	275, 1602,
	342, 1602,
	-2, 1540,
	-1, 1881,
	151, 1561,
	170, 1561,
	183, 1561,
	242, 1561,
	275, 1561,
	342, 1561,
	352, 1561,
	534, 1561,
	-2, 2011,
	-1, 1942,
	600, 2186,
	-2, 0,
	-1, 1977,
	151, 1561,
	170, 1561,
	183, 1561,
	242, 1561,
	275, 1561,
	342, 1561,
	352, 1561,
	534, 1561,
	-2, 1693,
	-1, 2014,
	517, 2633,
	601, 2633,
	604, 2633,
	-2, 0,
	-1, 2031,
	599, 1834,
	-2, 1822,
	-1, 2063,
	188, 2633,
	601, 2633,
	604, 2633,
	-2, 0,
	-1, 2105,
	1, 695,
	602, 695,
	-2, 1451,
	-1, 2245,
	223, 259,
	-2, 2334,
	-1, 2246,
	223, 260,
	-2, 312,
	-1, 2356,
	1, 880,
	598, 880,
	600, 880,
	602, 880,
	-2, 0,
	-1, 2357,
	1, 924,
	598, 924,
	600, 924,
	602, 924,
	-2, 0,
	-1, 2358,
	1, 932,
	598, 932,
	600, 932,
	602, 932,
	-2, 0,
	-1, 2359,
	1, 977,
	598, 977,
	600, 977,
	602, 977,
	-2, 0,
	-1, 2400,
	1, 905,
	598, 905,
	600, 905,
	602, 905,
	-2, 0,
	-1, 2418,
	1, 960,
	598, 960,
	600, 960,
	602, 960,
	-2, 0,
	-1, 2463,
	438, 1629,
	439, 1629,
	-2, 1867,
	-1, 2494,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1887,
	-1, 2495,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1888,
	-1, 2496,
	95, 0,
	256, 0,
	257, 0,
	584, 0,
	585, 0,
	-2, 1889,
	-1, 2497,
	95, 0,
	256, 0,
	257, 0,
	584, 0,
	585, 0,
	-2, 1890,
	-1, 2498,
	95, 0,
	256, 0,
	257, 0,
	584, 0,
	585, 0,
	-2, 1891,
	-1, 2499,
	95, 0,
	256, 0,
	257, 0,
	584, 0,
	585, 0,
	-2, 1892,
	-1, 2500,
	95, 0,
	256, 0,
	257, 0,
	584, 0,
	585, 0,
	-2, 1893,
	-1, 2501,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1894,
	-1, 2513,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1906,
	-1, 2514,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1907,
	-1, 2515,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1908,
	-1, 2519,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1915,
	-1, 2525,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1919,
	-1, 2527,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1927,
	-1, 2528,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1928,
	-1, 2529,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1929,
	-1, 2530,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1930,
	-1, 2704,
	5, 2338,
	188, 2197,
	599, 2335,
	-2, 2326,
	-1, 2705,
	188, 2198,
	-2, 2705,
	-1, 2706,
	188, 2199,
	-2, 2525,
	-1, 2707,
	188, 2200,
	-2, 2408,
	-1, 2708,
	188, 2201,
	-2, 2465,
	-1, 2709,
	188, 2202,
	-2, 2510,
	-1, 2710,
	188, 2203,
	-2, 2631,
	-1, 2711,
	188, 2204,
	-2, 1994,
	-1, 2782,
	1, 1694,
	2, 1694,
	106, 1694,
	151, 1694,
	170, 1694,
	183, 1694,
	189, 1694,
	207, 1694,
	210, 1694,
	238, 1694,
	242, 1694,
	253, 1694,
	271, 1694,
	275, 1694,
	314, 1694,
	342, 1694,
	346, 1694,
	352, 1694,
	428, 1694,
	432, 1694,
	534, 1694,
	545, 1694,
	561, 1694,
	562, 1694,
	563, 1694,
	573, 1694,
	598, 1694,
	600, 1694,
	602, 1694,
	604, 1694,
	-2, 1693,
	-1, 2795,
	599, 2307,
	-2, 2321,
	-1, 2797,
	1, 329,
	561, 329,
	-2, 1588,
	-1, 2826,
	599, 1833,
	-2, 1823,
	-1, 3011,
	1, 1299,
	423, 1263,
	461, 1263,
	576, 1263,
	598, 1299,
	600, 1299,
	602, 1299,
	-2, 1588,
	-1, 3197,
	347, 1632,
	-2, 2744,
	-1, 3198,
	347, 1633,
	-2, 2616,
	-1, 3202,
	438, 2263,
	439, 2263,
	-2, 1992,
	-1, 3203,
	438, 2267,
	439, 2267,
	-2, 1993,
	-1, 3204,
	438, 2264,
	439, 2264,
	-2, 1992,
	-1, 3205,
	438, 2268,
	439, 2268,
	-2, 1993,
	-1, 3218,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1917,
	-1, 3219,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1921,
	-1, 3225,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1923,
	-1, 3449,
	1, 690,
	598, 690,
	600, 690,
	602, 690,
	-2, 1451,
	-1, 3614,
	43, 2298,
	-2, 1047,
	-1, 3619,
	1, 1299,
	598, 1299,
	600, 1299,
	602, 1299,
	-2, 1588,
	-1, 3730,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1925,
	-1, 3737,
	247, 0,
	249, 0,
	333, 0,
	-2, 1944,
	-1, 3805,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1973,
	-1, 3806,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1974,
	-1, 3807,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1975,
	-1, 3811,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1979,
	-1, 3812,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1980,
	-1, 3813,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1981,
	-1, 3861,
	599, 2308,
	-2, 2322,
	-1, 4035,
	601, 2862,
	-2, 1514,
	-1, 4096,
	247, 0,
	249, 0,
	333, 0,
	-2, 1945,
	-1, 4099,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1948,
	-1, 4100,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1950,
	-1, 4200,
	601, 2323,
	-2, 1334,
	-1, 4354,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1949,
	-1, 4355,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1951,
	-1, 4366,
	247, 0,
	-2, 1984,
	-1, 4554,
	247, 0,
	-2, 1985,
	-1, 4755,
	50, 0,
	220, 0,
	274, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 2708,
}

const sqlPrivate = 57344

const sqlLast = 135219

var sqlAct = [...]int{
	275, 4747, 4951, 3603, 4872, 3356, 4748, 4859, 3099, 3086,
	4624, 4813, 4416, 4754, 4588, 4736, 4765, 2888, 4888, 4645,
	4596, 4723, 4704, 2155, 4476, 4681, 4620, 3602, 4766, 4507,
	4079, 4701, 2242, 2074, 4767, 4483, 2932, 4826, 4398, 4461,
	4309, 2319, 4558, 1253, 3770, 4304, 4270, 1264, 2473, 4245,
	2957, 4753, 4343, 4375, 4421, 4027, 1334, 3722, 3470, 1084,
	4019, 4291, 3056, 3636, 4293, 4492, 4196, 3955, 4284, 706,
	3211, 1338, 4177, 2331, 4197, 817, 1327, 3530, 4521, 2737,
	2542, 3630, 4314, 3598, 4000, 3982, 777, 2481, 3984, 1790,
	2087, 3473, 3108, 1650, 2292, 2163, 4371, 2018, 3587, 1401,
	3123, 3677, 2001, 817, 1320, 2970, 3042, 3075, 3679, 1983,
	1075, 3580, 3864, 3401, 3110, 3579, 1493, 3379, 2019, 2329,
	3371, 4078, 3101, 2474, 717, 3339, 3362, 896, 1329, 1083,
	182, 4135, 3118, 3070, 892, 4, 3087, 1952, 3072, 3107,
	2229, 2174, 3018, 4860, 3492, 2231, 2190, 1928, 2890, 3338,
	3360, 2775, 2478, 3831, 2620, 1889, 1859, 4559, 3195, 2555,
	1500, 3467, 887, 1332, 1588, 812, 2206, 2777, 3046, 773,
	111, 2230, 2774, 3117, 2987, 2225, 2213, 3057, 2147, 1244,
	1134, 1778, 2143, 1382, 3408, 2085, 2755, 1972, 1306, 2611,
	2539, 2931, 1693, 2734, 2133, 1139, 2462, 269, 2445, 750,
	2443, 1953, 2622, 2809, 3600, 3080, 3052, 1591, 1625, 1648,
	2279, 2913, 818, 819, 965, 4646, 1369, 693, 814, 2876,
	2614, 715, 3111, 2808, 182, 2764, 3976, 1247, 1923, 2745,
	268, 1226, 1962, 2700, 1969, 2592, 2666, 1873, 191, 1791,
	1340, 2444, 1261, 192, 1792, 2446, 758, 1728, 1713, 2305,
	769, 1317, 2239, 1141, 1623, 1616, 2278, 1525, 1184, 2162,
	4814, 2467, 4873, 1243, 1115, 3053, 710, 44, 43, 41,
	32, 30, 823, 807, 28, 733, 1777, 1224, 868, 707,
	1249, 718, 986, 3248, 1536, 3242, 73, 1797, 869, 3845,
	2076, 3846, 2076, 4794, 2076, 4964, 3358, 1719, 4391, 2754,
	823, 3655, 2076, 74, 4954, 826, 1079, 2076, 3655, 4938,
	1529, 2076, 4937, 2754, 4927, 3646, 2754, 2251, 2251, 79,
	4908, 913, 4906, 4388, 4420, 4845, 4420, 1130, 4802, 2251,
	3434, 4791, 4803, 826, 2251, 2754, 1530, 4789, 4786, 3645,
	4783, 2754, 4787, 4751, 4784, 4750, 4749, 2251, 4744, 2251,
	2097, 4743, 2097, 4734, 4732, 2097, 4729, 4420, 4420, 88,
	4495, 4699, 4670, 4663, 1080, 4420, 2817, 2754, 1241, 4662,
	4657, 4656, 1079, 2754, 4420, 4420, 3309, 3310, 4650, 4616,
	4556, 4538, 2251, 4261, 2817, 4064, 4535, 4532, 4485, 4439,
	2251, 4420, 4486, 2251, 4438, 4427, 3432, 2747, 2251, 2251,
	894, 1227, 1227, 4426, 4419, 1069, 4158, 4420, 4420, 4382,
	2094, 4356, 49, 2251, 110, 2817, 3417, 1378, 4333, 94,
	107, 1060, 2097, 4322, 4240, 4223, 1059, 3655, 2754, 2754,
	3083, 1378, 3210, 1284, 2568, 2569, 2570, 2587, 2588, 2589,
	4098, 4043, 4037, 2754, 2817, 3672, 3672, 2251, 2330, 3998,
	1137, 3856, 3854, 3999, 2590, 3857, 3855, 3838, 2837, 3754,
	2617, 2754, 3835, 2251, 94, 4671, 1805, 1806, 1277, 1838,
	1839, 1840, 1849, 1850, 1851, 1132, 1074, 3750, 1538, 95,
	3671, 2754, 3662, 1230, 3672, 1231, 3663, 1861, 1842, 1836,
	3355, 3350, 4560, 3257, 2754, 2754, 1808, 1805, 1806, 3258,
	3349, 2813, 4551, 2094, 2754, 1855, 2580, 3300, 4539, 3298,
	3290, 3301, 1228, 3299, 3291, 2576, 4495, 3288, 2097, 3259,
	1836, 2754, 1861, 2754, 3127, 3097, 3096, 1808, 2097, 2315,
	2315, 1807, 2860, 2816, 2806, 2799, 2754, 2817, 2754, 2251,
	2753, 1827, 2251, 1136, 2754, 2251, 3315, 3835, 2314, 2746,
	1824, 2618, 2315, 1861, 4302, 1278, 4261, 2094, 2754, 1278,
	4224, 4064, 1807, 3309, 3310, 3663, 3327, 3328, 3329, 1259,
	2960, 2167, 1827, 2875, 2112, 2075, 2091, 3048, 2250, 2980,
	2873, 1824, 1948, 1524, 3938, 3725, 3699, 1970, 2218, 3647,
	2791, 2581, 2582, 2583, 2584, 3309, 3310, 2790, 3327, 3328,
	3329, 2575, 1695, 2789, 2788, 2787, 1232, 1229, 3648, 2649,
	1068, 1067, 1066, 1065, 1064, 1063, 239, 4094, 239, 1062,
	1058, 1057, 1529, 1056, 3247, 99, 1830, 1831, 1832, 1833,
	1055, 1054, 1053, 2619, 1052, 2616, 1813, 1051, 3324, 1050,
	3169, 2647, 1049, 1048, 1047, 1046, 1045, 1044, 1043, 1042,
	1041, 2077, 1023, 2077, 3325, 2077, 963, 1830, 1831, 1832,
	1833, 888, 1659, 2077, 241, 962, 241, 1813, 2077, 961,
	3324, 960, 2077, 959, 958, 1846, 2585, 2586, 1856, 957,
	190, 102, 956, 955, 106, 1835, 1837, 954, 73, 953,
	891, 890, 1256, 952, 951, 950, 949, 948, 947, 946,
	2392, 945, 1852, 944, 1853, 74, 1641, 1805, 1806, 2578,
	239, 1822, 1823, 240, 2094, 240, 1835, 1837, 895, 943,
	1113, 79, 942, 153, 941, 940, 233, 1858, 939, 1844,
	938, 3645, 937, 3315, 1537, 234, 936, 1808, 935, 934,
	933, 932, 1822, 1823, 1828, 931, 1278, 930, 239, 929,
	928, 1343, 1139, 917, 916, 239, 239, 915, 241, 911,
	910, 88, 193, 903, 193, 3315, 902, 4153, 153, 901,
	886, 885, 1807, 842, 841, 1828, 840, 839, 830, 1139,
	1139, 1139, 829, 828, 157, 1255, 827, 793, 1854, 2621,
	784, 783, 782, 764, 263, 262, 241, 1404, 261, 194,
	260, 1404, 894, 241, 241, 3326, 1843, 240, 1343, 259,
	4316, 4110, 2094, 2746, 49, 258, 110, 1858, 3309, 3310,
	233, 94, 107, 257, 256, 255, 254, 253, 3878, 234,
	2251, 3331, 2847, 1139, 2075, 1139, 252, 1139, 1386, 1387,
	1388, 3325, 2094, 1538, 1343, 240, 1373, 2091, 1858, 1278,
	251, 2438, 240, 240, 250, 1721, 193, 249, 233, 3850,
	2579, 248, 247, 246, 245, 233, 233, 234, 244, 243,
	1343, 242, 1834, 3325, 234, 234, 3673, 1813, 3404, 1508,
	3270, 95, 3253, 1663, 3353, 3244, 1550, 1538, 3151, 3065,
	1343, 1544, 1503, 1645, 193, 1829, 2633, 1343, 3028, 2821,
	2796, 193, 3082, 1834, 1498, 2615, 1139, 1973, 1139, 1931,
	1931, 2781, 2141, 1343, 1858, 1538, 1930, 1930, 1860, 2631,
	2096, 1139, 1847, 1139, 3354, 1996, 1829, 1900, 1532, 1390,
	1263, 1528, 4776, 1311, 1314, 1804, 2830, 4542, 4775, 4772,
	4752, 1365, 4731, 1934, 1929, 4411, 1858, 1891, 1597, 1600,
	4631, 4548, 1324, 1860, 1367, 3311, 3312, 3313, 3314, 3316,
	3317, 4563, 1257, 4540, 4370, 1891, 4323, 4301, 4164, 4133,
	1513, 1343, 4132, 4126, 4125, 1397, 2322, 1490, 1495, 1603,
	4124, 4117, 3309, 3310, 1860, 3327, 3328, 3329, 3315, 3309,
	3310, 1139, 3326, 4116, 1139, 4114, 4109, 4106, 4105, 3997,
	2565, 2566, 2567, 2591, 2577, 2571, 3882, 2573, 2574, 2572,
	2559, 2560, 2561, 2562, 2563, 2564, 4318, 4003, 823, 1359,
	182, 182, 3881, 3880, 3326, 1845, 3860, 99, 3826, 3825,
	3824, 1586, 3746, 1527, 1526, 1819, 1820, 1826, 1848, 1825,
	1821, 3741, 1818, 1816, 1817, 1809, 1810, 1811, 1812, 1814,
	1815, 826, 1664, 1628, 1630, 4120, 3399, 3324, 1858, 4119,
	1080, 3346, 2321, 3337, 3308, 3305, 3304, 3302, 3297, 3296,
	1825, 1821, 3295, 1818, 1816, 1817, 1809, 1810, 1811, 1812,
	1814, 1815, 190, 102, 3936, 3292, 106, 3289, 1351, 1082,
	1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1893, 1898,
	1549, 1373, 3269, 3252, 1373, 1543, 1892, 3245, 1890, 1240,
	3243, 3098, 239, 239, 2782, 2604, 1804, 2295, 1803, 4958,
	895, 4898, 2258, 1139, 2256, 153, 2551, 4897, 4004, 1139,
	1626, 4861, 3321, 3322, 3323, 4812, 4810, 3067, 1265, 3320,
	3318, 3319, 3311, 3312, 3313, 3314, 3316, 3317, 1619, 3772,
	4691, 239, 3315, 4623, 4607, 4604, 4603, 239, 4602, 3315,
	241, 241, 3309, 3310, 3321, 3322, 3323, 4582, 4581, 1858,
	1782, 3320, 3318, 3319, 3311, 3312, 3313, 3314, 3316, 3317,
	4579, 1669, 4562, 1622, 4561, 239, 157, 4536, 1737, 4520,
	4519, 1640, 3351, 2545, 3332, 4505, 4502, 1805, 1806, 241,
	4501, 194, 4496, 4435, 1776, 241, 1658, 2648, 4406, 240,
	240, 4368, 4351, 4565, 3396, 4350, 4330, 4329, 3331, 4287,
	1836, 4262, 233, 233, 4152, 4131, 4065, 1808, 4057, 4054,
	1880, 234, 234, 241, 1139, 1139, 1139, 3924, 4564, 2646,
	1139, 3923, 3906, 3905, 3903, 3841, 3829, 1261, 240, 1261,
	3736, 1878, 3674, 1861, 240, 1686, 3656, 3622, 889, 193,
	3325, 233, 1807, 3547, 1404, 3505, 3472, 233, 3426, 4317,
	234, 3424, 4004, 1722, 1139, 1950, 234, 817, 3274, 3273,
	3268, 3234, 240, 2036, 817, 1783, 1809, 1810, 1811, 1812,
	1814, 1815, 3041, 1080, 1937, 233, 1936, 193, 1935, 1932,
	1924, 1922, 2828, 193, 234, 1805, 1806, 1779, 2827, 2793,
	2786, 2752, 2629, 1877, 1995, 1951, 1946, 1787, 1945, 1959,
	1944, 1786, 1060, 1943, 1942, 1941, 1940, 1059, 1939, 1938,
	1919, 193, 3315, 1858, 239, 1808, 1933, 239, 1918, 1917,
	3066, 1916, 239, 1781, 239, 2081, 1915, 1914, 2083, 1913,
	1912, 1911, 1910, 2009, 2088, 1909, 1908, 1907, 2090, 1139,
	1906, 2006, 1905, 2093, 1343, 1800, 1801, 1813, 1904, 1893,
	1807, 2000, 1956, 1957, 1879, 1980, 1876, 1871, 1358, 1617,
	182, 1282, 241, 1139, 1273, 241, 4290, 4160, 4102, 3877,
	241, 1404, 241, 1227, 3853, 3844, 3256, 3311, 3312, 3313,
	3314, 3316, 3317, 2819, 2157, 1805, 1806, 2784, 1925, 1926,
	4389, 3326, 4162, 3876, 3309, 3310, 1835, 1837, 2130, 1080,
	1892, 3422, 1874, 3651, 2132, 1991, 4895, 4226, 1385, 4887,
	2132, 240, 2132, 1621, 240, 1808, 1373, 1981, 2103, 240,
	3325, 240, 2139, 2102, 233, 2958, 4605, 233, 4497, 4488,
	2004, 4487, 233, 234, 233, 4321, 234, 4264, 4263, 4225,
	4155, 234, 4069, 234, 1383, 4068, 2201, 4067, 4066, 3848,
	1807, 4768, 3847, 2323, 823, 1828, 1978, 3676, 3675, 1971,
	193, 823, 2936, 193, 3658, 3657, 4841, 4839, 193, 1378,
	193, 4493, 1973, 1384, 2632, 2010, 3723, 3539, 3950, 2079,
	3294, 4007, 2059, 1949, 2985, 3309, 3310, 826, 4543, 1685,
	2215, 1378, 1774, 1858, 826, 3293, 3508, 2630, 1990, 1989,
	1988, 1986, 1985, 1343, 1343, 1984, 3216, 1975, 1931, 2918,
	1381, 2118, 3921, 1404, 4541, 1930, 2030, 1039, 1902, 239,
	239, 2033, 4410, 1694, 2105, 2016, 1378, 2167, 1858, 3474,
	1738, 3321, 3322, 3323, 4824, 3605, 2617, 3604, 3320, 3318,
	3319, 3311, 3312, 3313, 3314, 3316, 3317, 1914, 2320, 1914,
	3313, 3314, 3316, 3317, 1259, 1813, 1259, 4484, 3667, 4372,
	3324, 4798, 1040, 4779, 4764, 3588, 2232, 241, 241, 3124,
	2348, 3326, 1695, 2233, 2197, 4011, 2205, 2005, 3994, 2210,
	3952, 1379, 1999, 3947, 2109, 3929, 2101, 3696, 3447, 2327,
	3358, 3774, 2612, 3262, 2015, 2826, 2243, 2248, 1947, 2200,
	4773, 2064, 2966, 2066, 1927, 3596, 1829, 2289, 1596, 2108,
	1343, 1520, 1343, 4430, 1343, 4402, 240, 240, 2915, 1354,
	4788, 4785, 1310, 2135, 2974, 3641, 2125, 2618, 3898, 233,
	233, 2977, 1343, 1343, 2972, 2106, 4597, 4305, 234, 234,
	4698, 4211, 4575, 3477, 3916, 1343, 3105, 3079, 3571, 4208,
	4877, 2173, 4843, 4842, 4433, 3315, 4429, 1343, 2296, 1343,
	1343, 1343, 2965, 4408, 1860, 193, 193, 4774, 1673, 2099,
	2235, 2236, 3717, 1899, 3451, 4457, 4213, 1256, 2914, 1256,
	2237, 1571, 3965, 817, 1563, 3453, 1239, 2285, 2333, 2861,
	1037, 1035, 1522, 3150, 2195, 2406, 1019, 3020, 4953, 2347,
	1375, 1033, 823, 1031, 1622, 1139, 1028, 4611, 2404, 2619,
	4450, 2616, 2879, 2879, 2290, 4441, 1736, 1527, 1526, 3318,
	3319, 3311, 3312, 3313, 3314, 3316, 3317, 2877, 2877, 2302,
	4254, 2119, 4253, 3963, 3962, 826, 3954, 3944, 2024, 2194,
	1139, 2191, 3943, 2209, 2325, 3941, 3940, 3928, 3893, 2352,
	3964, 3892, 2340, 1818, 1816, 1817, 1809, 1810, 1811, 1812,
	1814, 1815, 2249, 3325, 1379, 3577, 2310, 3576, 1572, 3416,
	1255, 3267, 1255, 1385, 1139, 1735, 1139, 3266, 3265, 881,
	1080, 1380, 1080, 1139, 3264, 3220, 2036, 2036, 1404, 2437,
	1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139,
	1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139,
	1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139,
	1139, 1139, 1139, 1139, 1139, 1139, 2271, 1139, 2270, 1139,
	1139, 1139, 1139, 2299, 2312, 4431, 1858, 4403, 1384, 1376,
	3537, 3423, 2334, 3076, 2308, 2983, 2304, 2982, 1377, 1671,
	1626, 2442, 1626, 4207, 1619, 1139, 2307, 4878, 2307, 1139,
	1139, 2455, 1368, 1359, 2316, 2621, 2317, 1139, 4209, 1815,
	2979, 1139, 756, 1139, 1139, 1385, 756, 1734, 2968, 2952,
	823, 1404, 2164, 1375, 2951, 882, 2167, 1139, 1139, 1139,
	1139, 3474, 2916, 1139, 1139, 1139, 1139, 1139, 1139, 1139,
	1139, 2377, 2339, 3507, 2479, 2480, 2233, 2946, 2916, 2945,
	2320, 2944, 2453, 826, 3326, 2356, 2160, 2923, 1013, 1139,
	1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 2922, 2367,
	2124, 2123, 1139, 2883, 2132, 2134, 2807, 2453, 2593, 2594,
	1384, 2526, 1073, 2820, 1261, 2165, 2166, 1257, 1780, 1257,
	4349, 1404, 2593, 2609, 1621, 2662, 2661, 2483, 2400, 2940,
	1261, 1609, 2920, 1608, 1380, 1523, 1811, 1812, 1814, 1815,
	2466, 2451, 4170, 2834, 2892, 2161, 1139, 1404, 3317, 2657,
	1607, 2615, 1606, 2537, 1687, 2430, 2933, 2934, 4466, 3309,
	3310, 1379, 2933, 2934, 2933, 2934, 2451, 4227, 2703, 2703,
	2717, 3538, 2593, 2811, 2441, 2738, 2740, 2439, 2440, 2612,
	2454, 2744, 2535, 2447, 2557, 1666, 1060, 2269, 2418, 1060,
	1060, 2470, 1376, 1378, 2471, 2472, 1567, 1080, 2608, 1991,
	1296, 1377, 1078, 2427, 1014, 4169, 3697, 1080, 2364, 2030,
	2030, 1080, 1025, 2435, 2033, 2033, 3309, 3310, 4882, 2344,
	1088, 1717, 2449, 2127, 3901, 2794, 2769, 1772, 4842, 1773,
	1580, 3320, 3318, 3319, 3311, 3312, 3313, 3314, 3316, 3317,
	2761, 2868, 2203, 2417, 2541, 1717, 3231, 2798, 1343, 1343,
	4210, 3130, 2541, 1585, 1695, 1961, 1980, 4205, 791, 2895,
	2553, 1695, 3164, 2842, 1747, 2906, 1227, 2429, 755, 2846,
	4590, 2410, 755, 2175, 2398, 3229, 2976, 2659, 2606, 4770,
	1375, 3208, 2660, 2857, 3193, 2663, 2357, 2664, 2665, 2452,
	1683, 2810, 1404, 1077, 3450, 1785, 2179, 182, 1357, 2760,
	1080, 2973, 2814, 1667, 2783, 2856, 1733, 2768, 2975, 2773,
	1714, 2971, 2779, 2780, 2452, 2361, 4883, 2355, 2850, 3706,
	2365, 3925, 2878, 2712, 2699, 2531, 2036, 1716, 2729, 3315,
	2742, 2216, 3763, 4910, 2549, 1373, 2750, 2751, 1965, 2129,
	2833, 2547, 2766, 2767, 2849, 2532, 2858, 2762, 1933, 2358,
	2533, 1716, 1269, 2176, 2538, 884, 883, 1978, 2905, 2309,
	3705, 1380, 3166, 2450, 2621, 4252, 3942, 3939, 3885, 1404,
	789, 2882, 4891, 1715, 2853, 2822, 1378, 2128, 757, 1029,
	1029, 1672, 757, 2405, 2212, 1343, 3315, 1968, 2450, 4348,
	1029, 2884, 1030, 4592, 1266, 1029, 2403, 1015, 1592, 926,
	3872, 2919, 1963, 1079, 4467, 2829, 1139, 1139, 2852, 1139,
	3583, 2211, 3575, 3535, 3973, 3207, 4465, 2841, 3226, 1376,
	1966, 2844, 4463, 2845, 1925, 1926, 4885, 2882, 1377, 2978,
	2943, 2024, 2024, 817, 2832, 1343, 2859, 3325, 1271, 2881,
	2921, 1259, 2836, 3227, 2926, 2207, 2851, 3232, 3524, 1730,
	1590, 4856, 2941, 3913, 4771, 3516, 3175, 1259, 2969, 2436,
	2894, 4203, 2180, 1964, 4192, 2925, 1343, 2255, 2254, 4462,
	4864, 3974, 2426, 4863, 2165, 2166, 4206, 3090, 2862, 4667,
	2805, 1343, 1071, 1343, 1013, 4913, 2219, 4831, 2621, 2909,
	3063, 2226, 3119, 4084, 3325, 3373, 4083, 4464, 4185, 1343,
	3700, 879, 2924, 878, 2208, 3525, 1270, 3584, 1073, 705,
	1858, 2719, 3517, 3023, 3972, 2942, 2950, 1016, 3025, 2897,
	2900, 2887, 2935, 2937, 2938, 2939, 3015, 2984, 2181, 2182,
	3131, 3132, 3012, 3013, 3059, 700, 2428, 3926, 2864, 3581,
	2534, 3138, 3139, 3140, 1017, 3638, 3172, 1139, 3523, 1670,
	2536, 1013, 2177, 4186, 1072, 3515, 3987, 2192, 4769, 2866,
	3461, 2523, 2949, 4941, 1256, 3985, 2954, 1858, 3178, 2956,
	1751, 2964, 3911, 2076, 3125, 1073, 918, 3760, 1566, 2030,
	1256, 1967, 1295, 3016, 2033, 1076, 790, 3639, 3326, 2363,
	3021, 1569, 831, 2880, 182, 2178, 2867, 1018, 823, 3104,
	1014, 4677, 919, 1378, 3128, 2220, 3148, 2893, 2216, 1139,
	3133, 4394, 3134, 1527, 3026, 1139, 1139, 2865, 838, 3147,
	4204, 4884, 2959, 2167, 2187, 4889, 3014, 3094, 3039, 3092,
	823, 826, 2198, 3228, 3157, 792, 3159, 2948, 3161, 788,
	2947, 3049, 2148, 3230, 3989, 3326, 4738, 2149, 4739, 3200,
	3201, 3050, 4598, 4618, 3154, 4192, 2228, 1255, 2170, 3761,
	4591, 3550, 1592, 826, 3085, 3122, 4665, 1014, 3180, 3638,
	3182, 1139, 1139, 1255, 3095, 2109, 2193, 1139, 3106, 3988,
	3121, 2188, 3452, 754, 1668, 3183, 2136, 2137, 3185, 4185,
	1139, 1139, 3126, 4178, 3372, 1745, 1139, 1139, 3093, 3222,
	1696, 3177, 1139, 3074, 1521, 3145, 1626, 2540, 2399, 4666,
	4176, 1026, 1280, 2227, 4279, 2171, 2183, 3489, 3021, 4180,
	2204, 3156, 1267, 3158, 2186, 3160, 4830, 1920, 3420, 2797,
	3155, 2521, 3174, 4890, 2524, 3320, 3318, 3319, 3311, 3312,
	3313, 3314, 3316, 3317, 4186, 1746, 1961, 1139, 1139, 1139,
	3170, 1682, 1684, 1139, 3493, 3223, 1784, 4181, 2169, 1356,
	2148, 2150, 4182, 1139, 3045, 2149, 3582, 3462, 3188, 4892,
	4345, 3199, 4187, 2202, 3488, 1268, 2216, 2360, 2154, 2354,
	1139, 927, 2158, 4080, 2548, 2520, 4179, 4361, 4853, 1870,
	3190, 3189, 2184, 1015, 3319, 3311, 3312, 3313, 3314, 3316,
	3317, 2024, 2879, 2466, 1097, 3194, 3495, 2148, 3209, 904,
	4530, 4721, 2149, 1965, 4184, 2621, 4709, 2898, 1748, 4237,
	4805, 723, 3272, 2223, 2765, 920, 921, 3250, 3251, 1965,
	4806, 4188, 3254, 2603, 1257, 909, 4914, 3176, 2778, 1079,
	3776, 832, 833, 4901, 4289, 4294, 4074, 4899, 4085, 3986,
	1257, 4257, 2151, 2156, 3873, 3246, 1701, 1285, 3987, 3152,
	1015, 3153, 1968, 4522, 3221, 4295, 1080, 3985, 2955, 3719,
	3494, 3191, 1139, 1139, 1139, 1139, 4523, 2763, 1968, 2150,
	2221, 701, 1139, 1139, 1139, 4625, 4714, 1139, 4644, 4504,
	3912, 1795, 4256, 1963, 2189, 1966, 2154, 1139, 1261, 1404,
	4255, 4025, 3626, 1139, 2202, 1139, 3365, 3366, 2277, 4344,
	4524, 1966, 1958, 1016, 1261, 1283, 1276, 692, 4081, 4002,
	4129, 2204, 2469, 2222, 4942, 2168, 2150, 2120, 4829, 3409,
	4428, 3815, 1404, 4280, 2077, 2152, 4513, 4919, 1070, 4574,
	1017, 4026, 3958, 2154, 1261, 3945, 3989, 1404, 4181, 4626,
	3261, 2199, 3897, 4182, 1964, 3759, 2201, 1749, 3468, 1794,
	3627, 4183, 702, 4187, 3618, 3464, 3348, 3064, 2036, 3058,
	2151, 2156, 1404, 3043, 4526, 3389, 2303, 2297, 2522, 3499,
	1016, 3988, 3367, 2158, 835, 834, 2291, 3402, 1343, 2283,
	2263, 2262, 3889, 1018, 2196, 1560, 2459, 4525, 1287, 1794,
	4193, 4194, 763, 3830, 4682, 4184, 2117, 1017, 2756, 2882,
	1139, 703, 1789, 704, 3720, 4527, 4647, 2151, 2156, 2411,
	922, 923, 4188, 1794, 1139, 3437, 2203, 2927, 3439, 3440,
	3377, 2113, 2157, 3443, 1343, 3444, 3497, 3445, 4028, 2036,
	3375, 3689, 4310, 2759, 3457, 3458, 3398, 4346, 836, 837,
	3040, 1750, 1298, 2152, 3687, 3403, 1967, 1139, 905, 906,
	1018, 4482, 4480, 3680, 1793, 3478, 2157, 4405, 3482, 3448,
	4086, 3983, 1967, 1343, 4804, 3343, 3344, 3345, 4292, 3498,
	3480, 3476, 2115, 3454, 2758, 1373, 3421, 3395, 3441, 2757,
	3255, 3376, 3475, 3407, 3388, 1343, 3387, 1343, 3359, 3374,
	2152, 2158, 3390, 3391, 1793, 3214, 3192, 3479, 3843, 2200,
	3484, 2345, 2899, 3486, 3370, 3369, 3866, 2215, 2337, 1404,
	3393, 4130, 3394, 3816, 2116, 2804, 2215, 2328, 1793, 3465,
	1343, 1795, 3817, 3460, 1343, 2460, 3411, 3412, 3413, 3414,
	3553, 2260, 3555, 1718, 2146, 3559, 4918, 4627, 2158, 3565,
	2803, 3986, 4183, 1870, 3456, 2802, 4087, 3469, 2801, 1343,
	3540, 3510, 3682, 1724, 1723, 2800, 2153, 3993, 3514, 1615,
	3867, 1795, 1613, 1343, 3512, 1343, 3533, 3681, 3047, 1404,
	3427, 3428, 3438, 3429, 3442, 1077, 817, 1343, 4585, 4417,
	3890, 4193, 4194, 3449, 3435, 4477, 3526, 3868, 1343, 3865,
	1702, 2144, 2928, 2929, 3455, 1601, 925, 3536, 4271, 3601,
	2903, 3904, 3528, 1343, 3668, 2301, 3591, 4850, 3894, 1602,
	4327, 2030, 4622, 4688, 3548, 1259, 2033, 4392, 2109, 3019,
	1261, 3560, 3433, 3418, 3634, 3566, 3129, 3024, 3610, 3022,
	3463, 1259, 3496, 2332, 2145, 2232, 1676, 4413, 3551, 4586,
	3119, 4400, 3506, 907, 908, 1343, 1343, 3617, 4412, 3119,
	3410, 3519, 4695, 4679, 4528, 3572, 3586, 3678, 3589, 3522,
	4529, 1259, 4136, 3832, 2109, 2628, 4854, 3632, 3520, 3513,
	1343, 1768, 3521, 4716, 2153, 4855, 3549, 3541, 4852, 4790,
	3654, 762, 2030, 4326, 3415, 4418, 3625, 2033, 4401, 3643,
	4614, 3527, 3573, 3529, 3689, 2950, 3562, 4606, 1770, 2422,
	1767, 3568, 4689, 2109, 4367, 1765, 4128, 3687, 3430, 1742,
	1740, 1712, 3992, 3340, 3735, 1404, 3680, 1710, 1404, 3698,
	3694, 2153, 3633, 3574, 3693, 2109, 3561, 2109, 4587, 1708,
	3567, 1706, 1704, 1698, 1692, 1690, 1611, 3578, 1256, 2925,
	3431, 3593, 3303, 3233, 3044, 2402, 2967, 2917, 3628, 2831,
	2431, 1139, 1998, 1994, 1256, 3614, 3615, 1139, 1139, 3613,
	2109, 1139, 1139, 1139, 2109, 1139, 182, 182, 1771, 3691,
	3635, 3895, 1652, 823, 1139, 2036, 267, 3688, 3683, 3684,
	3685, 3686, 2369, 1139, 1256, 2241, 3690, 3666, 1139, 3869,
	4469, 3341, 3642, 1080, 1404, 3670, 3640, 3715, 2005, 3652,
	3653, 1614, 3714, 1139, 1612, 3649, 826, 1789, 3168, 3713,
	3381, 1404, 3167, 3664, 3136, 3682, 2627, 3712, 2448, 39,
	3710, 2036, 2036, 1139, 1139, 1729, 1139, 1139, 1139, 3716,
	3681, 1255, 2372, 2024, 2282, 2261, 2065, 1903, 924, 1665,
	1584, 4763, 4238, 3949, 1139, 3948, 2772, 1255, 1139, 3552,
	2036, 2036, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139,
	1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139,
	1139, 1139, 3738, 1139, 3721, 3709, 3788, 1255, 3789, 3692,
	2424, 1139, 1139, 2036, 1769, 2423, 1766, 4239, 1139, 1027,
	3702, 1764, 3703, 3718, 3704, 1741, 1739, 1711, 3585, 1139,
	3748, 3749, 4222, 1709, 2024, 4678, 3382, 4308, 4244, 4235,
	1261, 1261, 4174, 4024, 1139, 1707, 4015, 1705, 1703, 1697,
	1691, 1689, 1610, 3961, 3946, 2008, 2401, 3919, 3917, 3896,
	3621, 3616, 3606, 3077, 4303, 3069, 3062, 4827, 3051, 2479,
	3779, 3745, 3743, 3037, 3036, 1404, 3017, 1259, 2848, 2843,
	2259, 2257, 3862, 2234, 3755, 2217, 3380, 3386, 2185, 2172,
	3762, 3764, 3765, 2368, 2159, 2098, 2240, 3827, 2479, 3794,
	3771, 2095, 2092, 3778, 2089, 2084, 3849, 2082, 2078, 2069,
	3786, 3756, 3631, 3563, 3787, 4818, 4294, 3212, 2226, 1236,
	3385, 4843, 2121, 4584, 1139, 1798, 3791, 3186, 3184, 2434,
	3010, 3823, 3793, 4726, 3819, 4332, 4295, 4325, 1257, 4324,
	4251, 3766, 3887, 1139, 4166, 1237, 3888, 3120, 2140, 1565,
	3834, 182, 4515, 2879, 1257, 2904, 3828, 4508, 2030, 3820,
	4036, 2167, 2359, 2033, 3785, 2300, 3839, 3840, 2877, 1318,
	3688, 3683, 3684, 3685, 3686, 2432, 1139, 1139, 2879, 3708,
	1032, 1034, 1036, 1319, 1257, 2366, 3918, 2396, 3920, 3836,
	3837, 1762, 1763, 2901, 2391, 4725, 4246, 4214, 1805, 1806,
	1256, 1688, 4550, 2907, 2030, 2030, 4415, 4137, 4115, 2033,
	2033, 3491, 2908, 3213, 2930, 3851, 1805, 1806, 1139, 1802,
	1352, 2433, 1286, 4846, 4837, 4799, 3957, 3383, 3384, 3035,
	264, 4012, 3564, 2030, 2030, 2908, 1799, 3852, 2033, 2033,
	2284, 1363, 1343, 2974, 2972, 2981, 1808, 1343, 3956, 2963,
	1319, 2961, 2912, 2910, 1319, 3930, 1238, 4687, 4672, 3960,
	4638, 4632, 2962, 1807, 3934, 2911, 2030, 4583, 4499, 4475,
	4393, 2033, 2036, 4022, 4014, 3935, 3937, 689, 4001, 3859,
	3620, 1807, 3084, 2743, 2104, 2017, 4886, 4414, 3951, 3900,
	4718, 2953, 1519, 1255, 1518, 4719, 3419, 3953, 4917, 3879,
	3959, 3309, 3310, 1343, 1805, 1806, 3922, 4634, 4718, 1139,
	2871, 2872, 3927, 4719, 1529, 4858, 4107, 1261, 1139, 1675,
	4038, 3975, 3977, 2869, 2870, 1674, 2623, 3875, 1343, 1343,
	1343, 2871, 2869, 3090, 2925, 4045, 2658, 1744, 4021, 4500,
	1743, 4451, 3971, 4248, 4243, 1343, 1343, 1343, 3969, 4242,
	4103, 4008, 4029, 3874, 3767, 3557, 3554, 1897, 1896, 3991,
	3119, 3995, 4903, 4865, 1343, 4676, 4675, 1259, 1259, 4674,
	1404, 4033, 4049, 4613, 4030, 4612, 3981, 4567, 4478, 3990,
	2024, 4445, 3979, 4390, 4387, 4385, 4018, 4282, 4268, 4009,
	3469, 3968, 4212, 4161, 4060, 4042, 1404, 3980, 3996, 1139,
	1139, 4061, 3915, 4013, 3907, 1139, 1139, 2036, 3624, 3623,
	1139, 1139, 3485, 1139, 3436, 4032, 3173, 3165, 1139, 3144,
	3143, 3142, 3141, 3870, 3871, 3068, 2024, 2024, 3038, 1139,
	4016, 2902, 2839, 2835, 2824, 2823, 2812, 2552, 3883, 3884,
	2425, 3886, 2397, 2390, 2389, 1139, 4034, 1883, 4044, 4031,
	2388, 1888, 4039, 3970, 2387, 2024, 2024, 4072, 2386, 4050,
	4051, 4070, 2298, 2272, 2268, 4088, 2267, 4040, 2266, 4058,
	1257, 4055, 2265, 4052, 2264, 4059, 2072, 4056, 2071, 2070,
	2068, 2007, 4071, 1761, 1760, 1699, 1579, 2109, 2024, 1578,
	1256, 1256, 4101, 1577, 1576, 1575, 1574, 1573, 1568, 1564,
	1562, 4089, 1561, 1512, 4097, 4082, 1261, 1511, 1510, 1395,
	1147, 1394, 1393, 1392, 1261, 1391, 1355, 1305, 1404, 1404,
	1304, 1404, 1303, 1302, 1301, 2030, 1300, 1299, 1261, 1297,
	2033, 1292, 1291, 1290, 1289, 1288, 2463, 893, 8, 1343,
	1343, 1219, 2111, 1038, 1024, 4589, 4191, 4190, 4189, 1404,
	2421, 93, 1570, 855, 87, 2224, 271, 271, 271, 3914,
	695, 696, 4793, 711, 695, 711, 721, 992, 4715, 761,
	4077, 3402, 4617, 781, 1261, 1553, 1261, 863, 787, 4697,
	4167, 4168, 4010, 1255, 1255, 271, 3487, 4127, 2986, 2371,
	1700, 2373, 3397, 2785, 4664, 4111, 3271, 4557, 4360, 1343,
	2626, 1901, 3352, 89, 1123, 4215, 900, 1169, 4278, 1404,
	4277, 1343, 4175, 271, 1343, 3899, 3109, 4198, 4275, 4198,
	4274, 2021, 2023, 4145, 4147, 1404, 1087, 1407, 4737, 182,
	2122, 4141, 4138, 4144, 4134, 4150, 1129, 2138, 4139, 4140,
	4143, 4151, 4201, 4171, 1259, 2131, 4154, 2825, 4216, 4247,
	2702, 4249, 1146, 1143, 2025, 1328, 2027, 1145, 1144, 4173,
	2030, 2026, 1921, 1343, 1343, 2033, 1142, 2020, 4020, 3088,
	3650, 4159, 1620, 1618, 994, 2126, 2546, 2610, 3260, 1894,
	1103, 1125, 2720, 1343, 4165, 2607, 1281, 4272, 1114, 1102,
	3378, 3357, 3637, 3858, 4236, 1404, 2458, 873, 3306, 4220,
	1343, 2613, 1350, 1272, 2726, 1496, 4231, 2718, 1507, 1328,
	2714, 4250, 4229, 4269, 3446, 4232, 3078, 1775, 4374, 4266,
	1872, 3089, 1389, 1107, 2544, 1261, 1885, 3238, 2468, 3644,
	4241, 4234, 3400, 2818, 4722, 3775, 4300, 1343, 1343, 1343,
	1343, 3171, 2276, 1235, 695, 695, 4297, 2024, 1234, 4311,
	4260, 1404, 271, 1279, 1233, 4703, 4700, 4267, 2214, 4265,
	1257, 1257, 4259, 1139, 1139, 1139, 4258, 1256, 4198, 4053,
	3599, 4312, 2114, 1402, 2863, 2556, 3607, 1501, 1328, 1328,
	4299, 1404, 4288, 1535, 4273, 1542, 1139, 1548, 1119, 1139,
	1139, 4328, 4315, 1506, 2415, 3363, 3669, 1581, 786, 1139,
	4306, 4422, 2036, 1131, 1857, 4221, 3007, 1139, 1139, 4313,
	3006, 4578, 1374, 1372, 1371, 1370, 4874, 4230, 4940, 4320,
	4233, 3910, 3909, 3908, 1404, 238, 1343, 3206, 1796, 1788,
	4352, 4337, 235, 1259, 237, 236, 4283, 4335, 3863, 2109,
	3406, 1259, 4340, 4334, 4797, 3932, 3590, 23, 4142, 1404,
	4347, 2109, 22, 21, 2109, 1259, 1639, 1139, 1644, 116,
	1255, 42, 4341, 20, 155, 133, 152, 151, 125, 150,
	1139, 1657, 149, 1662, 148, 147, 154, 146, 145, 1139,
	140, 144, 2024, 143, 2036, 4357, 142, 141, 139, 4296,
	137, 138, 132, 1139, 136, 135, 1139, 134, 131, 4369,
	130, 1259, 129, 1259, 2247, 4396, 4380, 4381, 128, 4363,
	1139, 127, 126, 4202, 124, 156, 123, 1404, 122, 4436,
	4437, 121, 120, 2109, 1343, 4425, 4383, 119, 4384, 118,
	4217, 4218, 117, 774, 1343, 1343, 4397, 4395, 1720, 775,
	61, 60, 115, 113, 114, 4404, 19, 40, 14, 4452,
	65, 4454, 66, 4455, 18, 4444, 1256, 13, 35, 92,
	105, 104, 103, 36, 1256, 101, 4468, 100, 34, 17,
	4456, 16, 15, 98, 97, 3601, 96, 33, 1256, 1404,
	31, 4442, 1343, 4447, 11, 9, 4490, 37, 4481, 1982,
	12, 5, 187, 186, 4446, 189, 185, 188, 91, 184,
	1261, 1261, 4434, 183, 4453, 90, 29, 10, 179, 4491,
	4006, 82, 4448, 181, 180, 178, 177, 4498, 4471, 4460,
	4470, 1139, 1139, 176, 1256, 4458, 1256, 4479, 4473, 83,
	80, 4509, 175, 4494, 86, 4518, 4474, 1257, 1139, 2036,
	174, 4489, 81, 4198, 4198, 4537, 85, 84, 4512, 1255,
	27, 6, 1259, 4510, 64, 2030, 7, 1255, 4342, 3695,
	2033, 108, 109, 38, 4331, 4511, 4533, 4534, 78, 77,
	76, 1255, 4517, 4516, 75, 26, 4531, 1139, 63, 1139,
	4315, 1139, 25, 173, 4506, 220, 219, 218, 217, 216,
	215, 1261, 214, 213, 208, 207, 212, 210, 209, 211,
	4546, 4547, 206, 230, 1139, 229, 1261, 223, 222, 4573,
	4545, 228, 227, 226, 225, 224, 221, 1255, 232, 1255,
	205, 204, 203, 201, 197, 196, 200, 202, 199, 198,
	4459, 195, 231, 72, 4198, 171, 4555, 2030, 172, 4572,
	4569, 4549, 2033, 71, 170, 169, 168, 167, 166, 4198,
	165, 164, 70, 2157, 4600, 24, 2, 1, 1139, 1139,
	4609, 0, 0, 4594, 2109, 4593, 0, 0, 1139, 0,
	4621, 0, 4601, 1261, 0, 1256, 1261, 1507, 0, 0,
	1343, 0, 0, 0, 0, 0, 0, 0, 0, 4608,
	1343, 1343, 0, 0, 0, 2550, 0, 0, 0, 3196,
	1987, 0, 0, 0, 4610, 0, 0, 1343, 1274, 4615,
	0, 1883, 0, 0, 0, 0, 4198, 4629, 4630, 4198,
	0, 1139, 1139, 4655, 1507, 4628, 1257, 4633, 4636, 0,
	4635, 1139, 4640, 0, 1257, 4494, 0, 4649, 0, 4641,
	1997, 1294, 4643, 0, 4651, 0, 4653, 4654, 1257, 0,
	4652, 4648, 0, 271, 0, 271, 271, 0, 1323, 271,
	1333, 0, 4659, 4658, 0, 0, 2725, 0, 1255, 0,
	4669, 1353, 0, 0, 0, 1139, 1139, 2024, 1139, 781,
	2720, 2720, 781, 4690, 4673, 0, 0, 0, 0, 0,
	0, 4694, 2030, 0, 1257, 0, 1257, 2033, 0, 0,
	4668, 0, 0, 4702, 4705, 0, 271, 0, 271, 271,
	1323, 4724, 271, 271, 4685, 4686, 0, 1333, 4720, 0,
	4693, 4717, 4692, 0, 4514, 0, 4742, 1259, 1259, 0,
	4711, 271, 0, 1531, 0, 4707, 1139, 1139, 1139, 0,
	4745, 0, 0, 0, 0, 0, 0, 4746, 4727, 1551,
	0, 0, 0, 0, 4706, 0, 1558, 4710, 4733, 2024,
	4741, 0, 4777, 0, 0, 0, 0, 2142, 4740, 1139,
	0, 0, 0, 0, 0, 1583, 0, 0, 1333, 0,
	0, 0, 271, 271, 4761, 1323, 0, 4762, 4759, 4760,
	4782, 0, 0, 0, 0, 4566, 0, 0, 4568, 0,
	0, 4800, 0, 0, 0, 0, 781, 0, 271, 271,
	0, 0, 0, 0, 4780, 4792, 0, 4795, 1259, 4811,
	1646, 4823, 4807, 4809, 4796, 0, 1139, 0, 0, 0,
	1653, 4822, 0, 1259, 4808, 900, 0, 0, 0, 4828,
	4821, 4817, 0, 0, 0, 1257, 0, 4816, 0, 0,
	1256, 1256, 0, 0, 0, 4819, 4820, 0, 4815, 0,
	4844, 4825, 2720, 2720, 2720, 2720, 4840, 4834, 4835, 0,
	0, 4838, 4836, 0, 0, 0, 4847, 4848, 0, 0,
	4851, 1261, 0, 1261, 2157, 4702, 4849, 0, 4705, 4867,
	0, 4724, 0, 4879, 4868, 4862, 0, 2288, 0, 4881,
	1259, 4621, 4857, 1259, 4866, 0, 4870, 4876, 0, 2252,
	0, 0, 0, 271, 2024, 0, 0, 4880, 0, 0,
	4894, 0, 0, 0, 4198, 0, 4198, 0, 0, 0,
	0, 0, 4893, 0, 4896, 271, 0, 0, 0, 0,
	0, 1256, 4907, 1255, 1255, 0, 0, 4869, 4660, 4871,
	4661, 0, 4912, 4911, 0, 0, 1256, 1139, 1139, 0,
	0, 0, 4909, 4905, 4904, 0, 1139, 0, 1139, 1139,
	4915, 3235, 3236, 0, 0, 0, 0, 4929, 0, 4921,
	4925, 4931, 0, 0, 0, 4928, 4936, 4935, 0, 0,
	4934, 4933, 0, 4932, 0, 0, 0, 4930, 3090, 0,
	0, 0, 0, 4944, 4924, 4939, 4943, 4946, 4948, 0,
	4949, 0, 4950, 0, 4952, 4945, 0, 0, 4712, 4957,
	4955, 4713, 0, 1256, 0, 0, 1256, 4947, 4959, 1139,
	0, 4960, 0, 4962, 1255, 0, 4963, 4966, 4965, 0,
	4956, 4952, 273, 0, 0, 0, 0, 4922, 4923, 1255,
	0, 0, 0, 0, 0, 1337, 0, 0, 0, 1805,
	1806, 0, 0, 2416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2393, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 0, 0, 0, 0, 0, 1808,
	0, 0, 0, 0, 0, 0, 0, 0, 4778, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4961, 0,
	0, 0, 1515, 0, 0, 1861, 1255, 0, 0, 1255,
	1257, 1257, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 695, 0, 3309, 3310,
	0, 3327, 3328, 3329, 0, 0, 0, 0, 1555, 0,
	0, 0, 0, 3333, 3334, 3335, 3336, 271, 73, 271,
	4093, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 74, 1531, 1323, 2002, 271,
	0, 271, 0, 2725, 2482, 0, 0, 271, 1531, 711,
	0, 79, 0, 0, 271, 1531, 0, 1531, 0, 0,
	0, 1634, 0, 0, 0, 0, 0, 0, 1259, 2073,
	1259, 1257, 0, 3324, 0, 0, 0, 1649, 0, 0,
	0, 271, 4875, 0, 0, 0, 1257, 0, 271, 1813,
	0, 88, 0, 0, 0, 0, 0, 1101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3309, 3310,
	0, 3327, 3328, 3329, 0, 0, 0, 0, 0, 0,
	0, 0, 4900, 1531, 2725, 2725, 0, 781, 4902, 0,
	3740, 0, 894, 0, 0, 1677, 0, 2624, 1835, 1837,
	0, 0, 0, 0, 0, 0, 110, 0, 0, 0,
	0, 94, 107, 1257, 0, 0, 1257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1328, 0,
	0, 0, 0, 3324, 0, 0, 0, 0, 0, 0,
	0, 1256, 0, 1256, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2720, 2720, 0, 0, 0, 1328, 0, 0,
	0, 0, 73, 2795, 3331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 1328, 1328,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	1858, 0, 0, 0, 0, 0, 3325, 0, 3315, 0,
	0, 0, 0, 0, 1255, 0, 1255, 0, 0, 0,
	0, 271, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 88, 2725, 2725, 2725, 2725,
	0, 0, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720,
	2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720,
	2720, 2720, 0, 2720, 0, 0, 0, 2815, 0, 0,
	0, 0, 0, 0, 3331, 0, 894, 0, 1829, 1858,
	0, 271, 1496, 0, 0, 271, 0, 99, 49, 0,
	110, 271, 0, 0, 0, 94, 107, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2874, 0,
	0, 0, 0, 271, 1507, 271, 3325, 0, 0, 695,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 781, 0, 0, 1860, 900, 0, 0,
	0, 0, 190, 102, 0, 0, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 95, 0, 3326, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 1323, 271,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	895, 0, 0, 781, 0, 153, 0, 0, 0, 1858,
	271, 1257, 0, 1257, 3029, 0, 0, 3032, 2370, 3034,
	0, 0, 0, 271, 271, 0, 271, 0, 271, 0,
	271, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 1816, 1817, 1809, 1810,
	1811, 1812, 1814, 1815, 0, 0, 0, 2407, 0, 0,
	2408, 0, 2409, 3731, 3732, 3081, 157, 0, 3081, 0,
	0, 0, 0, 0, 271, 271, 271, 271, 0, 0,
	0, 194, 1507, 0, 0, 0, 0, 3326, 0, 240,
	0, 0, 0, 1328, 0, 0, 0, 0, 0, 0,
	0, 761, 233, 0, 0, 781, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 3321, 3322, 3323,
	0, 99, 0, 0, 3320, 3318, 3319, 3311, 3312, 3313,
	3314, 3316, 3317, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 1507, 0, 1507, 0, 0, 0,
	0, 3162, 0, 3795, 3796, 3797, 3798, 3799, 3800, 3801,
	3802, 3803, 3804, 3805, 3806, 3807, 3808, 3809, 3810, 3811,
	3812, 3813, 3814, 0, 3818, 0, 190, 102, 0, 0,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2558, 0,
	1805, 1806, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 895, 0, 0, 0, 0, 153,
	0, 0, 0, 1836, 0, 0, 0, 3321, 3322, 3323,
	1808, 1101, 1101, 1101, 3320, 3318, 3319, 3311, 3312, 3313,
	3314, 3316, 3317, 0, 0, 0, 0, 0, 0, 1488,
	0, 0, 0, 1488, 241, 0, 1861, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 0, 0, 0, 695,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 0,
	157, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 695, 0, 194, 0, 0, 0, 0,
	271, 0, 695, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 271, 1333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2318, 0,
	0, 0, 1631, 0, 0, 0, 2725, 2725, 0, 0,
	1830, 1831, 1832, 1833, 0, 0, 1337, 2335, 73, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 2338,
	0, 271, 1333, 0, 0, 74, 711, 0, 0, 0,
	2838, 2346, 0, 2349, 2350, 2351, 271, 0, 0, 271,
	0, 79, 0, 271, 0, 271, 0, 0, 0, 0,
	1323, 0, 271, 271, 0, 1333, 1333, 2854, 0, 1835,
	1837, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 0, 0, 0, 0, 2725, 2725, 2725, 2725,
	2725, 2725, 2725, 2725, 2725, 2725, 2725, 2725, 2725, 2725,
	2725, 2725, 2725, 2725, 2725, 2725, 0, 2725, 0, 2891,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	271, 0, 894, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 271, 49, 0, 110, 0, 0, 0,
	0, 94, 107, 0, 0, 0, 271, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 781, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3364, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1858, 0, 3309, 3310, 0, 3327, 3328, 3329, 0,
	0, 95, 1094, 88, 1507, 1507, 0, 0, 3392, 0,
	0, 271, 3027, 0, 0, 3739, 0, 0, 0, 0,
	0, 0, 0, 3405, 0, 0, 0, 0, 0, 0,
	0, 1805, 1806, 0, 0, 0, 0, 0, 1531, 0,
	0, 271, 0, 271, 894, 0, 1834, 0, 3425, 0,
	271, 0, 0, 0, 1836, 0, 0, 0, 110, 0,
	3073, 1808, 0, 94, 107, 0, 0, 0, 3324, 1829,
	2891, 0, 695, 0, 0, 0, 0, 1507, 0, 0,
	0, 3102, 900, 0, 2891, 2891, 0, 1861, 0, 0,
	0, 0, 0, 0, 0, 0, 1807, 0, 0, 0,
	0, 0, 2288, 0, 0, 271, 0, 0, 0, 0,
	3500, 3501, 0, 3502, 3503, 3504, 0, 0, 0, 2720,
	0, 0, 0, 95, 271, 1323, 271, 1860, 0, 0,
	0, 0, 0, 1531, 0, 1531, 1333, 271, 0, 0,
	1323, 0, 1323, 0, 1323, 0, 0, 99, 0, 0,
	0, 0, 0, 0, 0, 0, 1488, 0, 0, 0,
	0, 3542, 3543, 3315, 3544, 3545, 3546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 271, 271,
	271, 1323, 0, 0, 1323, 0, 271, 0, 0, 271,
	0, 1813, 190, 102, 0, 0, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 1816, 1817, 1809,
	1810, 1811, 1812, 1814, 1815, 0, 1328, 0, 0, 3331,
	271, 0, 239, 0, 0, 1805, 1806, 0, 271, 0,
	895, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	1835, 1837, 2855, 1337, 0, 3405, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 1808, 0, 0, 0, 99,
	0, 3325, 0, 0, 0, 1101, 0, 0, 0, 0,
	241, 0, 0, 1488, 0, 0, 0, 0, 0, 0,
	0, 1861, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 157, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 0, 0, 190, 102, 0, 0, 106, 240,
	0, 0, 0, 0, 0, 1507, 0, 0, 0, 0,
	0, 0, 233, 0, 1858, 3309, 3310, 0, 3327, 3328,
	3329, 234, 0, 0, 239, 0, 0, 0, 2720, 0,
	0, 0, 895, 0, 1531, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1629, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 3011,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2720,
	0, 1501, 241, 0, 1402, 1813, 0, 0, 0, 0,
	4366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3324, 0, 3326, 0, 2720, 1488, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 1835, 1837, 0, 0, 0, 0,
	1829, 0, 0, 0, 233, 0, 0, 0, 4407, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	3752, 0, 1805, 1806, 0, 1838, 1839, 1840, 1849, 1850,
	1851, 0, 0, 0, 0, 0, 0, 3768, 0, 0,
	193, 0, 0, 3137, 1842, 1836, 0, 0, 271, 0,
	0, 0, 1808, 1828, 0, 3315, 0, 0, 1860, 0,
	0, 1855, 0, 0, 271, 0, 0, 0, 0, 695,
	0, 0, 0, 0, 695, 0, 0, 695, 1861, 0,
	695, 695, 0, 0, 0, 0, 695, 1807, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 1827, 0, 0,
	0, 0, 3321, 3322, 3323, 0, 1824, 0, 1531, 3320,
	3318, 3319, 3311, 3312, 3313, 3314, 3316, 3317, 0, 0,
	0, 3331, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 1531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 271, 271,
	1809, 1810, 1811, 1812, 1814, 1815, 0, 0, 0, 0,
	0, 0, 0, 3325, 0, 0, 0, 0, 0, 0,
	0, 3861, 0, 0, 0, 0, 0, 2891, 2891, 271,
	0, 2002, 1830, 1831, 1832, 1833, 0, 2891, 0, 4554,
	3471, 0, 1813, 0, 0, 0, 0, 0, 2891, 3471,
	0, 2891, 3471, 0, 1829, 3471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 271, 2002, 0, 271, 0, 0, 0, 0, 0,
	4577, 1846, 0, 0, 1856, 0, 1858, 0, 0, 0,
	1488, 1835, 1837, 2725, 2002, 0, 271, 0, 3532, 3532,
	1328, 0, 0, 1323, 0, 4599, 0, 0, 1852, 0,
	1853, 0, 1860, 0, 0, 0, 0, 1822, 1823, 0,
	0, 0, 0, 2891, 0, 2891, 0, 3558, 2891, 2002,
	0, 0, 2891, 2002, 0, 1844, 781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 2725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1323, 0, 2288, 3326, 0, 0, 0, 271, 0,
	0, 0, 1531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1488, 0, 0, 271, 0, 3595, 0,
	0, 3597, 2891, 0, 1854, 271, 0, 0, 0, 271,
	0, 0, 1333, 1817, 1809, 1810, 1811, 1812, 1814, 1815,
	4017, 0, 1843, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 1858, 0, 3073, 0, 0, 1323, 0,
	271, 0, 0, 2891, 0, 695, 0, 0, 0, 0,
	0, 0, 2891, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 3073, 0, 0, 3073, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 1488,
	0, 0, 0, 0, 4073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 3701, 0, 3321, 3322, 3323, 0, 0, 0,
	0, 3320, 3318, 3319, 3311, 3312, 3313, 3314, 3316, 3317,
	3707, 0, 0, 1531, 0, 0, 1323, 271, 1847, 271,
	0, 0, 2725, 0, 0, 1323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1860,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 2725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	794, 0, 0, 0, 0, 0, 0, 0, 2725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 805, 0, 0, 0, 0,
	0, 0, 0, 3773, 1488, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 1820, 1826, 1848, 1825, 1821, 0, 1818, 1816,
	1817, 1809, 1810, 1811, 1812, 1814, 1815, 0, 0, 0,
	0, 3284, 0, 0, 0, 3285, 0, 4149, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2288, 0, 0, 0, 4163, 0, 0, 0, 0,
	0, 1488, 0, 0, 0, 0, 0, 0, 799, 0,
	0, 1328, 0, 0, 0, 811, 0, 0, 0, 0,
	271, 271, 0, 0, 0, 0, 0, 0, 0, 804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 695, 695, 0, 0, 0, 0,
	0, 0, 0, 3569, 1805, 1806, 0, 0, 0, 0,
	1849, 1850, 1851, 0, 0, 0, 0, 1531, 1531, 0,
	0, 0, 0, 0, 0, 0, 0, 1836, 803, 0,
	0, 3594, 1531, 1531, 1808, 1531, 0, 0, 0, 0,
	0, 4281, 3611, 1855, 0, 756, 0, 0, 0, 0,
	0, 0, 0, 0, 4298, 0, 0, 3619, 0, 0,
	1861, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	801, 0, 0, 0, 0, 0, 0, 4319, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3660,
	3661, 0, 0, 0, 0, 0, 0, 0, 781, 0,
	0, 0, 0, 0, 0, 1805, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 810,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 3532, 0, 0, 0, 1808, 0, 1402, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 1831, 1832, 1833, 0, 0,
	0, 1861, 0, 0, 1813, 0, 2002, 4358, 271, 0,
	1807, 0, 711, 711, 1333, 0, 0, 0, 0, 0,
	1827, 1841, 0, 0, 0, 0, 0, 271, 0, 1824,
	0, 0, 0, 796, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 1846, 0, 0, 1856, 271, 0, 0,
	4358, 0, 271, 1835, 1837, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2482, 2891, 271, 0, 1822,
	1823, 0, 0, 0, 4092, 0, 3102, 3102, 0, 0,
	0, 0, 900, 900, 2891, 0, 0, 1844, 3073, 3073,
	0, 755, 900, 2891, 0, 1830, 1831, 1832, 1833, 0,
	0, 0, 1828, 0, 0, 1813, 806, 0, 0, 0,
	0, 0, 798, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1835, 1837, 0, 0, 0, 795,
	0, 0, 0, 0, 0, 0, 1507, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	1822, 1823, 0, 0, 0, 0, 0, 802, 0, 0,
	0, 0, 0, 4112, 0, 0, 1841, 0, 3002, 0,
	0, 757, 1841, 0, 0, 0, 0, 0, 1841, 0,
	0, 0, 797, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 2994, 2992, 0, 0, 808, 809, 0, 2996, 2998,
	2988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 271, 0, 0, 0,
	0, 0, 1531, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1328, 0, 0, 0, 271, 0,
	1847, 0, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 1333, 0, 0, 0, 0, 0, 0,
	1841, 1488, 0, 0, 0, 1841, 1333, 0, 0, 0,
	0, 1860, 0, 2891, 2891, 0, 3532, 2891, 1841, 0,
	0, 0, 0, 1841, 4200, 0, 4200, 1531, 0, 0,
	0, 0, 0, 0, 1488, 4619, 0, 0, 2891, 0,
	3471, 1834, 0, 0, 1531, 1531, 271, 2002, 0, 1488,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 4639,
	2002, 0, 271, 2002, 1829, 271, 0, 3532, 0, 0,
	0, 0, 0, 0, 1488, 0, 0, 0, 0, 0,
	0, 0, 2891, 1845, 2891, 271, 3966, 0, 1841, 0,
	0, 0, 0, 0, 1841, 0, 1848, 1825, 1821, 0,
	1818, 1816, 1817, 1809, 1810, 1811, 1812, 1814, 1815, 0,
	0, 0, 1101, 0, 0, 0, 0, 0, 0, 0,
	2891, 2990, 1860, 0, 0, 4285, 1101, 0, 0, 0,
	0, 0, 3004, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 3003, 2995, 2993, 2997, 2999, 2989, 2991,
	3005, 0, 0, 0, 0, 0, 0, 0, 0, 3001,
	0, 0, 4046, 4047, 4048, 4200, 0, 0, 1531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1337,
	4062, 4063, 4728, 0, 0, 0, 0, 0, 4730, 0,
	0, 0, 3008, 0, 0, 0, 0, 0, 1825, 1821,
	0, 1818, 1816, 1817, 1809, 1810, 1811, 1812, 1814, 1815,
	0, 1488, 0, 0, 0, 1841, 1841, 1841, 1841, 1841,
	1841, 1841, 1841, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 0, 1086, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 741, 0,
	0, 1488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2891, 0, 3471, 724, 0,
	4399, 0, 0, 725, 2724, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 4423,
	0, 4423, 0, 1841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 726, 0, 0, 781, 0, 0, 0, 0,
	0, 0, 0, 727, 0, 0, 3532, 0, 1323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2002, 728, 271, 0, 0, 0, 0,
	0, 0, 3009, 4156, 4157, 0, 0, 0, 0, 0,
	0, 3000, 0, 0, 0, 0, 747, 0, 0, 0,
	4399, 0, 0, 0, 0, 0, 0, 0, 2891, 0,
	0, 0, 0, 0, 0, 0, 0, 729, 0, 0,
	0, 0, 0, 0, 0, 0, 4503, 1488, 0, 0,
	1488, 0, 0, 0, 0, 0, 0, 0, 1531, 0,
	730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4200, 4200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 731, 0, 0, 732, 0, 0, 271,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1488, 1337, 746, 1531,
	0, 0, 1531, 3532, 4571, 0, 0, 0, 0, 0,
	0, 4399, 0, 1488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4200, 0, 1805, 1806, 0, 1838, 1839, 1840, 1849,
	1850, 1851, 0, 0, 0, 0, 4200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 743, 0, 0,
	0, 0, 0, 1808, 0, 0, 0, 0, 271, 0,
	0, 4336, 1855, 4338, 4339, 0, 0, 0, 0, 0,
	711, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	0, 0, 0, 0, 0, 0, 0, 4285, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 4200, 0, 271, 4200, 1824, 0, 0,
	0, 0, 0, 0, 0, 0, 3471, 0, 734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1488, 0, 0,
	0, 0, 1531, 0, 1531, 0, 0, 754, 0, 735,
	4386, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4683, 0, 0, 1830, 1831, 1832, 1833, 0, 0, 755,
	0, 0, 0, 1813, 0, 0, 4423, 736, 0, 271,
	0, 0, 751, 752, 749, 0, 0, 0, 0, 0,
	744, 0, 1531, 737, 0, 1531, 0, 0, 0, 0,
	0, 0, 0, 0, 2891, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 1856, 0, 1841, 0, 0,
	0, 0, 1835, 1837, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 738, 0, 745, 4472, 0,
	0, 0, 1841, 0, 0, 0, 739, 0, 1822, 1823,
	0, 0, 3773, 0, 0, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 1348, 748, 1844, 0, 0, 0,
	0, 0, 1531, 0, 0, 0, 0, 0, 0, 757,
	1841, 1828, 0, 0, 1841, 0, 0, 0, 0, 0,
	742, 1086, 1086, 1086, 0, 0, 0, 0, 1841, 0,
	0, 0, 271, 0, 0, 0, 0, 1841, 1841, 1841,
	1841, 1841, 1841, 1841, 1841, 1841, 1841, 1841, 1841, 1841,
	1841, 1841, 1841, 1841, 1841, 1841, 1841, 1841, 1841, 1841,
	1841, 1841, 1841, 1841, 1841, 1841, 1841, 1841, 1841, 1841,
	1841, 1841, 1841, 0, 4399, 1533, 0, 1539, 1841, 1545,
	1841, 1841, 1841, 1841, 1858, 0, 0, 0, 0, 0,
	0, 0, 2724, 2724, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	0, 0, 0, 0, 2891, 0, 0, 0, 0, 0,
	0, 4200, 0, 4200, 0, 0, 1531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 1488, 0, 0, 0, 0, 0, 1637, 0,
	1642, 0, 0, 0, 0, 0, 0, 0, 1841, 0,
	0, 0, 1829, 1655, 0, 1660, 1531, 0, 1488, 0,
	0, 0, 1531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 1847,
	0, 1841, 0, 0, 1841, 0, 0, 1841, 0, 0,
	0, 0, 0, 1841, 1841, 1841, 1841, 1841, 1841, 1841,
	0, 0, 3102, 0, 0, 0, 0, 0, 0, 0,
	1860, 2891, 0, 0, 1337, 1337, 0, 0, 0, 0,
	0, 0, 0, 1725, 0, 0, 1731, 3102, 0, 0,
	0, 1337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	0, 0, 3330, 0, 2724, 2724, 2724, 2724, 0, 0,
	0, 1841, 0, 1841, 0, 0, 0, 0, 1841, 0,
	1488, 1488, 1845, 1488, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 1820, 1826, 1848, 1825, 1821, 0, 1818,
	1816, 1817, 1809, 1810, 1811, 1812, 1814, 1815, 0, 0,
	0, 1488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869,
	0, 0, 0, 2695, 2696, 2697, 2698, 2691, 2692, 2693,
	2694, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 1895, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1805, 1806, 0,
	1838, 1839, 1840, 1849, 1850, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2671, 2672, 2673, 2674, 1842,
	1836, 0, 0, 0, 0, 0, 0, 1808, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 2683, 2684,
	2685, 2686, 2679, 2680, 2681, 2682, 2687, 2688, 2689, 2690,
	0, 0, 0, 1861, 0, 0, 0, 1488, 0, 0,
	0, 0, 1807, 0, 0, 0, 1954, 1954, 1954, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1488, 2667, 2668, 2669, 2670, 2675, 2676,
	2677, 2678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1805, 1806, 0, 1830, 1831, 1832,
	1833, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 1841, 1841, 0, 1841, 1836, 0, 0,
	0, 0, 0, 0, 1808, 0, 1488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 0, 1171, 1856,
	1861, 1488, 0, 0, 0, 1086, 1835, 1837, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 1852, 0, 1853, 0, 0, 1824, 0,
	0, 0, 1822, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1101, 0,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 0, 1488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 0, 0, 0,
	0, 0, 0, 0, 1830, 1831, 1832, 1833, 0, 1854,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 0, 0,
	0, 1488, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1841, 1841, 0, 2724, 2724, 0, 0, 1841, 0,
	0, 0, 0, 1835, 1837, 0, 0, 0, 3330, 3330,
	0, 0, 1841, 1841, 0, 0, 0, 0, 0, 0,
	0, 0, 1841, 0, 0, 0, 0, 0, 0, 1822,
	1823, 0, 0, 1834, 0, 0, 1841, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1262, 0, 0, 1847, 2724, 2724, 2724, 2724, 2724, 2724,
	2724, 2724, 2724, 2724, 2724, 2724, 2724, 2724, 2724, 2724,
	2724, 2724, 2724, 2724, 0, 2724, 3330, 3330, 3330, 3330,
	0, 0, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 1841, 0, 0, 0, 0, 0, 0, 0, 0,
	1101, 1101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 2394, 0, 0,
	1834, 0, 0, 0, 0, 0, 1819, 1820, 1826, 1848,
	1825, 1821, 0, 1818, 1816, 1817, 1809, 1810, 1811, 1812,
	1814, 1815, 0, 1829, 0, 0, 2601, 0, 0, 0,
	2602, 0, 2419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2457, 0, 2461, 0,
	0, 0, 0, 1841, 0, 2475, 0, 0, 1101, 0,
	0, 1860, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 0, 2525,
	0, 2527, 2528, 2529, 2530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 2605, 0, 0, 0, 1825, 1821, 0,
	1818, 1816, 1817, 1809, 1810, 1811, 1812, 1814, 1815, 2635,
	2638, 2641, 2644, 0, 0, 2650, 2651, 2652, 2653, 2654,
	2655, 2656, 0, 0, 0, 0, 0, 0, 1805, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2716, 0, 2728, 2730, 2735, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 1808, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1861, 0, 0, 0, 0, 0,
	0, 1805, 1806, 1807, 1838, 1839, 1840, 1849, 1850, 1851,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 1842, 1836, 0, 0, 0, 0, 0,
	0, 1808, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	1841, 0, 0, 1841, 3330, 3330, 1841, 1861, 0, 0,
	1841, 0, 0, 0, 0, 0, 1807, 1841, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 3729, 0, 0,
	1841, 0, 0, 0, 0, 1824, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 1831,
	1832, 1833, 0, 1841, 1841, 1841, 1841, 1841, 1813, 0,
	0, 0, 0, 1841, 0, 1841, 0, 0, 3330, 3330,
	3330, 3330, 3330, 3330, 3330, 3330, 3330, 3330, 3330, 3330,
	3330, 3330, 3330, 3330, 3330, 3330, 3330, 3330, 0, 1262,
	0, 3330, 0, 0, 1841, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 1835, 1837, 0,
	0, 1830, 1831, 1832, 1833, 1841, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 1823, 1262, 0, 0, 0, 1262,
	0, 0, 0, 0, 0, 0, 1262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 1856, 1841, 0, 1828, 0, 1805, 1806,
	1835, 1837, 0, 0, 0, 1841, 0, 0, 0, 0,
	0, 0, 1262, 0, 0, 0, 0, 1852, 0, 1853,
	0, 1836, 0, 0, 0, 0, 1822, 1823, 1808, 0,
	0, 0, 0, 0, 1841, 0, 0, 0, 1262, 0,
	0, 0, 0, 0, 1844, 0, 0, 0, 3030, 3031,
	0, 3033, 0, 0, 1861, 0, 0, 0, 1262, 1828,
	0, 0, 0, 1807, 0, 1262, 0, 0, 0, 1858,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 1262, 1824, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 3728, 0, 1262,
	0, 0, 0, 0, 1841, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 1831,
	1832, 1833, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1834, 0, 3163,
	0, 0, 0, 1841, 1841, 0, 0, 0, 1841, 1841,
	0, 0, 1841, 1841, 0, 1860, 0, 1841, 0, 0,
	1829, 1841, 0, 0, 0, 0, 1841, 1835, 1837, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2724, 0, 0, 0, 0, 0, 1847, 0, 0,
	0, 0, 0, 1822, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2724,
	0, 1825, 1821, 0, 1818, 1816, 1817, 1809, 1810, 1811,
	1812, 1814, 1815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3218, 3219, 0, 0, 0, 0, 3225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3239, 3240,
	1845, 0, 0, 0, 2605, 0, 0, 0, 0, 1858,
	1819, 1820, 1826, 1848, 1825, 1821, 0, 1818, 1816, 1817,
	1809, 1810, 1811, 1812, 1814, 1815, 0, 0, 0, 0,
	0, 0, 0, 0, 4118, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 3263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1262, 0, 1262, 0, 0,
	0, 0, 3275, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 1262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 1841, 1841, 1841, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 1841, 3330,
	2724, 0, 0, 0, 0, 0, 1841, 0, 0, 1841,
	0, 0, 0, 0, 0, 1860, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3330, 2724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2735, 2735, 2735, 1841, 0, 0,
	0, 0, 1262, 0, 0, 1841, 2724, 0, 0, 1954,
	0, 0, 0, 1841, 0, 0, 0, 3368, 0, 0,
	0, 0, 1841, 0, 0, 0, 0, 0, 0, 1262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1825, 1821, 0, 1818, 1816, 1817, 1809, 1810, 1811,
	1812, 1814, 1815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1805, 1806, 0, 1838, 1839, 1840, 1849, 1850, 1851,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1086, 1842, 1836, 0, 0, 3330, 0, 0,
	0, 1808, 0, 0, 0, 0, 1086, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	3330, 0, 0, 1841, 0, 0, 0, 1861, 0, 0,
	0, 1262, 1262, 0, 0, 0, 1807, 0, 0, 3490,
	0, 1262, 3330, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1841, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1805, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 1808, 0, 0, 0, 0, 0, 0,
	0, 1830, 1831, 1832, 1833, 0, 0, 0, 1262, 0,
	1262, 1813, 1262, 0, 0, 0, 0, 0, 0, 1861,
	0, 0, 0, 0, 0, 0, 0, 0, 1807, 0,
	1262, 1262, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 1262, 0, 0, 0, 1824, 0, 0,
	1846, 0, 0, 1856, 0, 1262, 0, 1262, 1262, 1262,
	1835, 1837, 0, 0, 0, 1135, 0, 0, 0, 0,
	0, 1841, 0, 0, 0, 0, 0, 1852, 0, 1853,
	0, 0, 0, 0, 0, 0, 1822, 1823, 0, 0,
	0, 0, 0, 0, 1841, 0, 0, 0, 0, 0,
	0, 0, 3224, 0, 1844, 0, 0, 0, 0, 0,
	0, 270, 270, 270, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 1830, 1831, 1832, 1833, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	824, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 0, 0, 0, 0, 824, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1835, 1837, 2037, 2037, 1262, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1822, 1823,
	0, 0, 0, 2475, 0, 0, 0, 0, 0, 3726,
	3727, 0, 0, 3730, 0, 0, 0, 3733, 0, 1841,
	0, 0, 0, 1841, 0, 0, 3737, 0, 0, 0,
	0, 1828, 0, 0, 0, 3744, 0, 1834, 0, 0,
	3368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3757, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 1262,
	0, 0, 0, 0, 0, 3780, 3781, 0, 3782, 3783,
	3784, 0, 0, 0, 0, 0, 0, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 3790, 1258, 0, 0,
	3792, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1262, 3821, 3822, 0, 0, 0, 0, 1262,
	0, 0, 0, 0, 0, 0, 0, 0, 1262, 0,
	0, 3833, 0, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 1262, 3842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 1820, 1826, 1848, 1825, 1821, 0, 1818, 1816, 1817,
	1809, 1810, 1811, 1812, 1814, 1815, 0, 0, 0, 0,
	0, 0, 0, 0, 3742, 0, 0, 0, 0, 0,
	1805, 1806, 0, 1838, 1839, 1840, 1849, 1850, 1851, 0,
	1860, 0, 0, 0, 0, 0, 3891, 0, 0, 0,
	0, 0, 1842, 1836, 0, 0, 0, 0, 0, 0,
	1808, 0, 0, 0, 0, 3902, 1262, 1262, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1861, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 0, 0, 0, 3931,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 0,
	1262, 0, 0, 0, 1824, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1825, 1821, 0, 1818,
	1816, 1817, 1809, 1810, 1811, 1812, 1814, 1815, 0, 0,
	0, 0, 0, 0, 2037, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1124, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 1262, 0, 0,
	1830, 1831, 1832, 1833, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 1262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1954, 0, 0, 0, 0, 0, 0, 0, 1846,
	4041, 0, 1856, 0, 0, 0, 0, 0, 0, 1835,
	1837, 0, 0, 1262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1805, 1806, 1852, 0, 1853, 0,
	0, 0, 112, 0, 0, 1822, 1823, 0, 0, 0,
	0, 0, 0, 0, 1262, 0, 0, 1836, 0, 0,
	0, 0, 0, 1844, 1808, 0, 0, 0, 0, 1262,
	0, 1262, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 1262, 0, 0,
	1861, 4090, 4091, 0, 0, 0, 0, 4095, 4096, 1807,
	0, 0, 4099, 4100, 0, 0, 0, 0, 0, 1827,
	4104, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	0, 4108, 1854, 0, 0, 0, 0, 0, 0, 0,
	1061, 0, 0, 0, 0, 0, 0, 4113, 0, 0,
	1843, 1081, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	270, 270, 0, 3217, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1245,
	0, 0, 0, 0, 1830, 1831, 1832, 1833, 0, 0,
	0, 0, 0, 0, 1813, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 270, 270, 0, 0, 270, 270, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 824, 0, 0, 0,
	0, 0, 0, 1835, 1837, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	1823, 0, 0, 0, 0, 0, 0, 1860, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 270, 0,
	741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	724, 0, 0, 270, 270, 725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 0, 0, 0, 726, 0, 0, 0, 0, 1819,
	1820, 1826, 1848, 1825, 1821, 727, 1818, 1816, 1817, 1809,
	1810, 1811, 1812, 1814, 1815, 1858, 0, 0, 0, 0,
	0, 0, 0, 3287, 0, 0, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 729,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 4353, 4354, 4355, 0, 0,
	0, 0, 730, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2475, 0,
	0, 4364, 4365, 0, 0, 731, 1262, 1262, 732, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4373,
	4376, 0, 1262, 0, 0, 756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1262, 1860, 0, 0, 0, 0, 0, 0, 0, 0,
	746, 0, 1262, 0, 0, 1262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2037, 0, 0, 0,
	1262, 0, 4424, 0, 0, 0, 0, 0, 0, 0,
	0, 4432, 0, 0, 0, 0, 1262, 0, 0, 0,
	0, 0, 0, 0, 0, 4440, 0, 0, 1086, 743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4449, 0, 0, 0, 0, 1825, 1821, 0,
	1818, 1816, 1817, 1809, 1810, 1811, 1812, 1814, 1815, 0,
	0, 0, 1262, 0, 0, 0, 0, 2037, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 753, 0,
	734, 1262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1976, 0, 1258, 0, 0, 0, 270, 0,
	0, 0, 0, 1262, 0, 1262, 0, 0, 0, 754,
	0, 735, 0, 0, 270, 1976, 270, 0, 0, 0,
	112, 0, 824, 0, 0, 0, 0, 1262, 0, 824,
	0, 0, 0, 0, 0, 0, 0, 0, 1262, 0,
	0, 0, 1262, 0, 0, 0, 0, 0, 0, 0,
	0, 755, 0, 0, 0, 0, 270, 0, 0, 736,
	0, 0, 0, 270, 751, 752, 749, 1262, 0, 0,
	0, 0, 744, 0, 0, 737, 0, 0, 0, 0,
	0, 1262, 0, 1262, 0, 0, 0, 1262, 0, 4576,
	0, 0, 0, 4580, 0, 1262, 0, 0, 0, 0,
	0, 112, 0, 112, 0, 112, 1262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 738, 0, 745,
	844, 1262, 0, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1262, 0,
	846, 0, 740, 0, 0, 847, 0, 748, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1081, 112, 112,
	0, 757, 0, 1262, 1262, 0, 0, 0, 0, 0,
	1086, 1086, 742, 0, 112, 0, 112, 0, 0, 0,
	4637, 0, 0, 0, 848, 0, 865, 0, 1262, 112,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 849, 0, 0, 0, 0, 850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1262, 2475, 0, 1262, 0, 874, 0,
	0, 0, 0, 4376, 0, 851, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 0, 0, 872,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	824, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 845, 0, 0, 0, 0, 0, 1086, 0,
	0, 0, 0, 2037, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 852, 0, 0, 853, 0,
	0, 0, 1262, 0, 0, 0, 0, 0, 0, 0,
	876, 0, 0, 0, 0, 756, 270, 0, 0, 1262,
	270, 0, 0, 0, 0, 0, 270, 0, 0, 2037,
	2037, 0, 270, 0, 0, 0, 0, 0, 4758, 4758,
	4758, 1061, 0, 0, 0, 0, 0, 0, 270, 0,
	270, 0, 0, 0, 0, 0, 270, 0, 2037, 2037,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 4781, 0, 0, 0, 0, 0, 0, 0, 0,
	1881, 0, 0, 0, 1887, 0, 0, 0, 0, 875,
	0, 2037, 0, 0, 0, 0, 0, 0, 0, 870,
	0, 270, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1262, 1262,
	0, 0, 0, 0, 0, 270, 0, 0, 4758, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 824, 270,
	0, 270, 0, 270, 0, 270, 0, 270, 0, 0,
	0, 0, 0, 1262, 0, 0, 0, 0, 0, 854,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	856, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	270, 270, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 857, 0, 0, 1974, 0, 1977, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 843, 0, 867, 0, 0, 4758,
	4916, 0, 0, 0, 0, 858, 0, 0, 4920, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 859, 0, 0,
	0, 860, 879, 0, 878, 0, 0, 0, 861, 0,
	1262, 0, 0, 0, 0, 1262, 0, 0, 0, 0,
	0, 0, 862, 0, 0, 0, 0, 871, 0, 0,
	0, 0, 0, 880, 0, 877, 0, 0, 0, 0,
	2037, 757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1262, 0, 0, 0, 1258,
	0, 0, 0, 0, 0, 0, 1262, 1262, 1262, 0,
	0, 0, 0, 0, 0, 1258, 0, 0, 0, 0,
	0, 0, 0, 1262, 1262, 1262, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1262, 0, 0, 0, 0, 270, 1262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 1148, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 270, 0, 0, 0, 270, 0,
	270, 0, 0, 0, 0, 0, 0, 270, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 272, 272, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1262, 0, 0, 1081, 0, 1081,
	0, 0, 1262, 0, 0, 270, 1262, 1262, 0, 1262,
	0, 272, 0, 0, 163, 0, 1262, 0, 270, 0,
	0, 0, 73, 0, 46, 45, 0, 1262, 1262, 0,
	0, 270, 0, 0, 0, 0, 0, 1262, 0, 74,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 1262, 270, 1262, 0, 67, 0, 0, 0,
	0, 0, 0, 48, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1262, 0, 0,
	0, 112, 0, 47, 0, 88, 824, 1262, 0, 1262,
	0, 0, 1262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1262, 0, 0, 0, 0, 0, 0,
	0, 0, 50, 68, 0, 0, 270, 0, 824, 0,
	0, 51, 0, 0, 0, 270, 57, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 49, 0,
	110, 1262, 1262, 0, 0, 94, 107, 0, 0, 0,
	0, 0, 0, 0, 0, 1061, 0, 0, 1061, 1061,
	0, 1262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1262, 1251, 0, 0, 0, 1262, 0,
	270, 0, 0, 0, 0, 0, 0, 52, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 270, 0, 1262, 0, 95, 0, 0, 0, 0,
	0, 0, 270, 0, 2543, 1262, 1262, 1262, 1262, 0,
	266, 266, 691, 0, 0, 0, 0, 0, 0, 1262,
	0, 0, 0, 0, 1081, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 0, 0, 0, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1262,
	0, 0, 270, 270, 270, 270, 0, 0, 0, 0,
	0, 270, 0, 0, 270, 0, 0, 0, 0, 0,
	2037, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1262, 0, 1262, 270, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 1245, 0, 0, 0, 0, 0, 1262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1977, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 99, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2037, 0, 0, 0, 0, 0, 0, 53,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 56, 0, 0, 0, 0, 59,
	0, 0, 0, 0, 0, 1262, 0, 0, 0, 69,
	0, 0, 1262, 0, 0, 58, 190, 102, 0, 0,
	106, 0, 1262, 1262, 54, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 55, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 62, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 0, 0, 0, 1262, 0, 0,
	1262, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1262, 1262,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 2037, 0, 0,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 1258, 1262, 3, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 112, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1976,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 272, 272, 0, 0, 272, 0, 1346,
	0, 1262, 0, 0, 1262, 0, 0, 0, 1262, 0,
	0, 0, 0, 112, 0, 0, 112, 0, 1262, 1262,
	0, 0, 112, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 270, 270, 1262, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 1346, 272, 272, 0, 1346,
	272, 272, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 270, 270, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 1976, 0, 1346, 0,
	272, 272, 0, 0, 0, 0, 0, 0, 0, 1805,
	1806, 270, 1838, 1839, 1840, 1849, 1850, 1851, 1346, 0,
	0, 0, 0, 0, 0, 1346, 272, 272, 0, 0,
	0, 1842, 1836, 0, 0, 0, 0, 0, 0, 1808,
	0, 1346, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1861, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 0, 0, 0, 0, 0, 1346,
	0, 824, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 2543, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 1881, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1258, 0, 1309, 0, 1309,
	1309, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	1831, 1832, 1833, 0, 0, 0, 0, 0, 270, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1262,
	0, 1262, 0, 0, 0, 0, 0, 0, 0, 0,
	1399, 0, 0, 0, 0, 0, 1505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 1856, 0, 0, 0, 0, 0, 0, 1835, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 270, 1852, 0, 1853, 0, 0,
	0, 0, 0, 0, 1822, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1844, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 1828, 1805, 1806,
	0, 1838, 1839, 1840, 1849, 1850, 1851, 0, 0, 0,
	0, 0, 1635, 1636, 0, 0, 0, 0, 0, 0,
	1842, 1836, 0, 0, 0, 0, 0, 0, 1808, 0,
	0, 0, 0, 0, 0, 0, 0, 1855, 0, 0,
	0, 1854, 0, 0, 0, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 1861, 0, 0, 0, 0, 1843,
	0, 1245, 0, 1807, 0, 0, 0, 0, 0, 0,
	1858, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 0, 0, 272, 272, 272,
	0, 0, 0, 0, 0, 272, 0, 1752, 0, 0,
	0, 0, 272, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1258, 1258, 0, 1829, 272,
	0, 0, 0, 0, 0, 0, 272, 0, 1830, 1831,
	1832, 1833, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 276, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 0, 1860, 1846, 112, 112,
	1856, 112, 112, 112, 0, 0, 0, 1835, 1837, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 0, 0, 1852, 0, 1853, 0, 0, 0,
	0, 0, 0, 1822, 1823, 0, 0, 0, 0, 816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	112, 1844, 112, 112, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 816, 1845, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 1820,
	1826, 1848, 1825, 1821, 0, 1818, 1816, 1817, 1809, 1810,
	1811, 1812, 1814, 1815, 0, 0, 0, 0, 0, 0,
	0, 0, 3286, 0, 0, 0, 0, 0, 0, 0,
	1854, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 272,
	0, 1346, 1346, 272, 0, 0, 0, 1992, 0, 0,
	0, 1346, 270, 0, 0, 0, 0, 1245, 0, 0,
	1081, 0, 270, 2003, 0, 1505, 0, 0, 0, 0,
	0, 0, 270, 0, 112, 112, 0, 270, 0, 0,
	0, 0, 270, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 1258, 272, 0, 1309, 0, 1829, 0, 272,
	0, 0, 1505, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 272, 1847, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	1346, 0, 1346, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1860, 0, 0, 0, 0,
	1346, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 272, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 1346, 1346, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 272, 0, 272, 0, 272, 0, 272, 0,
	272, 0, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 1820, 1826,
	1848, 1825, 1821, 0, 1818, 1816, 1817, 1809, 1810, 1811,
	1812, 1814, 1815, 0, 0, 0, 0, 0, 0, 0,
	0, 3283, 272, 272, 272, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1140, 0, 0, 0, 0,
	0, 1258, 0, 0, 0, 0, 0, 0, 0, 1258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1976, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1245, 1245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1976,
	0, 1976, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2274, 0, 0, 0, 2281,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2294, 0, 0, 0, 0, 0, 270, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 2306, 0, 2306,
	0, 0, 0, 0, 0, 2313, 0, 0, 0, 1346,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2281, 0, 0, 2342, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 2362, 0, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 2378, 0,
	2380, 0, 2382, 0, 2384, 0, 2385, 0, 0, 0,
	1976, 0, 272, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2412, 2413,
	2414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 272, 112, 0,
	0, 272, 0, 272, 0, 1344, 0, 0, 0, 0,
	272, 272, 0, 0, 0, 0, 1346, 1346, 0, 0,
	272, 0, 0, 0, 1245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 1405, 0, 0, 0, 1405, 0, 0, 0, 0,
	1346, 0, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 1344, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 1346, 0, 0,
	0, 0, 0, 0, 1344, 0, 0, 0, 0, 0,
	0, 1344, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1344, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1976, 1976, 0, 2792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 272, 0, 1346, 270, 270, 0, 112, 272, 0,
	0, 0, 0, 1245, 0, 0, 0, 0, 0, 0,
	0, 1245, 0, 0, 0, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 1346, 0, 0,
	2840, 0, 0, 1309, 0, 0, 1976, 1309, 0, 1309,
	0, 0, 272, 0, 272, 0, 0, 0, 0, 0,
	0, 1976, 0, 0, 0, 272, 2294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 272, 272, 272, 0,
	0, 0, 0, 0, 272, 0, 0, 272, 1976, 0,
	270, 1976, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 112, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1505, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2281, 0, 0, 0, 0,
	0, 0, 1406, 0, 2294, 0, 1406, 0, 0, 0,
	0, 0, 0, 1345, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1345,
	0, 816, 0, 0, 0, 0, 0, 0, 816, 3135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1345, 0, 0, 3146, 0,
	3149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1345, 0, 270, 0, 0,
	0, 0, 1345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1344, 0,
	0, 3179, 1505, 3181, 1505, 0, 0, 0, 0, 0,
	3187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1345, 0, 0, 0,
	0, 0, 0, 0, 1309, 0, 1976, 1346, 1976, 0,
	0, 0, 3215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2543,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 272, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1344, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 1405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 1346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 272,
	0, 1346, 272, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 272, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 1344, 0, 1344, 1346, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	0, 0, 1346, 0, 0, 0, 1344, 1344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1344,
	0, 0, 0, 0, 0, 0, 0, 1346, 0, 0,
	0, 1344, 0, 1344, 1344, 1344, 272, 0, 0, 0,
	0, 1346, 0, 1346, 0, 0, 0, 1346, 0, 1406,
	0, 0, 0, 0, 272, 1346, 0, 816, 0, 0,
	0, 0, 0, 272, 0, 0, 1346, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 112, 0, 0, 0,
	0, 0, 0, 1346, 1346, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 1309, 0,
	0, 0, 1505, 1505, 0, 0, 0, 0, 1346, 1345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3459, 0, 0, 1406, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 272, 1346, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3509, 3511, 0, 0, 2294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 1805, 1806, 0, 1838,
	1839, 1840, 1849, 1850, 1851, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1405, 0, 0, 1842, 1836,
	0, 0, 0, 0, 0, 0, 1808, 0, 0, 0,
	0, 0, 1346, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 0, 0, 0, 0, 0, 0, 1345, 1345,
	0, 1827, 0, 0, 0, 0, 0, 0, 1406, 0,
	1824, 0, 0, 0, 0, 1405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3608,
	0, 0, 0, 3612, 0, 0, 0, 0, 0, 0,
	0, 1405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 1831, 1832, 1833,
	0, 0, 0, 0, 0, 0, 1813, 3665, 0, 0,
	0, 0, 0, 0, 0, 1345, 0, 1345, 0, 1345,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1345, 1345, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 1856, 0,
	1345, 0, 1344, 1344, 0, 1835, 1837, 0, 0, 0,
	0, 0, 1345, 0, 1345, 1345, 1345, 0, 0, 0,
	0, 3711, 1852, 1505, 1853, 0, 0, 0, 0, 0,
	0, 1822, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1405, 0, 0, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3724,
	0, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 1405, 0, 0, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 1344,
	1346, 0, 0, 1406, 0, 1346, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 816, 0, 1344,
	272, 0, 1834, 0, 0, 272, 0, 0, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	1344, 0, 0, 0, 0, 0, 1346, 1346, 1346, 0,
	0, 0, 0, 0, 0, 1344, 1406, 1344, 0, 0,
	0, 0, 1847, 1346, 1346, 1346, 0, 0, 0, 0,
	0, 0, 0, 1344, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 0, 272, 0, 1346, 0,
	0, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1406, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1406, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 1820, 1826, 1848, 1825,
	1821, 0, 1818, 1816, 1817, 1809, 1810, 1811, 1812, 1814,
	1815, 0, 0, 0, 0, 0, 0, 0, 0, 3282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 1346, 0, 1346,
	0, 0, 2294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1345, 1345, 0, 0, 1346, 1346, 0,
	0, 2294, 0, 0, 0, 0, 0, 1346, 0, 0,
	0, 4005, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2294, 0, 0, 0,
	0, 4023, 0, 0, 0, 0, 0, 1406, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 0, 1346,
	272, 0, 1346, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 4075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1406, 0, 0, 0, 0, 0,
	0, 1346, 1346, 0, 0, 0, 0, 0, 0, 0,
	1345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 272, 0, 0, 0, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 1346, 1346, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 1345, 0, 1405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1345, 0, 1345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 0, 0, 1345, 0, 1405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 1346, 0, 1405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1344, 0, 0, 0, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2294, 0, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 1346, 272, 0, 0, 0, 1344, 0, 0,
	0, 0, 1346, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1344,
	0, 1344, 0, 0, 0, 0, 0, 0, 0, 0,
	2294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4307, 0, 0, 1405, 0, 0, 0, 1346, 0, 0,
	1346, 0, 0, 0, 1344, 0, 0, 0, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 0, 0, 0, 272, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 1344, 0, 1344,
	0, 0, 0, 1405, 0, 0, 0, 0, 0, 0,
	816, 1344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1344, 0, 0,
	0, 0, 0, 0, 0, 0, 1805, 1806, 0, 1838,
	1839, 1840, 1849, 1850, 1851, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1842, 1836,
	0, 0, 0, 0, 0, 0, 1808, 0, 0, 1344,
	1344, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 1861, 4409, 1344, 0, 0, 0, 0, 0,
	0, 1807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 1346, 1405,
	0, 0, 1405, 0, 1406, 0, 0, 0, 1346, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2294,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1406, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1406, 0, 0, 0, 1830, 1831, 1832, 1833,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1406, 1405, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 1345, 0, 1405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 1856, 0,
	0, 0, 0, 4544, 1505, 1835, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1852, 272, 1853, 0, 0, 0, 0, 1345,
	0, 1822, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 0, 0, 1345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1345, 0, 1345, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 1854, 0,
	0, 0, 0, 0, 1406, 0, 0, 0, 0, 1405,
	0, 0, 0, 0, 0, 1345, 1843, 0, 0, 1345,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1345, 0, 0, 0, 0, 4642,
	0, 0, 0, 0, 0, 0, 0, 0, 1345, 0,
	1345, 0, 0, 0, 1406, 0, 0, 0, 0, 0,
	0, 0, 1345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1834, 1345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1345, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 0, 0, 0, 0, 0,
	1345, 1345, 0, 4696, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1860, 0, 1345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1344, 0, 0, 0,
	0, 1344, 0, 0, 0, 0, 0, 0, 0, 4735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1406, 0, 0, 1406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 0, 1344, 0, 0,
	0, 0, 0, 0, 0, 1819, 1820, 1826, 1848, 1825,
	1821, 0, 1818, 1816, 1817, 1809, 1810, 1811, 1812, 1814,
	1815, 0, 1344, 1344, 1344, 0, 4801, 0, 0, 3281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1344,
	1344, 1344, 0, 0, 0, 0, 0, 0, 0, 1406,
	0, 0, 0, 0, 0, 0, 0, 0, 1344, 0,
	0, 0, 0, 0, 1405, 0, 1406, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1805, 1806,
	0, 1838, 1839, 1840, 1849, 1850, 1851, 0, 0, 0,
	1405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1842, 1836, 0, 0, 0, 0, 0, 0, 1808, 0,
	0, 0, 0, 0, 0, 0, 0, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1861, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1406, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1405, 1405, 0, 1405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 1344, 0, 0, 0, 1830, 1831,
	1832, 1833, 0, 1405, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	1856, 0, 0, 1344, 0, 0, 0, 1835, 1837, 0,
	0, 0, 0, 1405, 0, 1344, 0, 0, 1344, 0,
	0, 0, 0, 0, 1852, 0, 1853, 0, 0, 1405,
	0, 0, 0, 1822, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 1344, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 1345, 0, 0,
	0, 0, 1345, 0, 0, 0, 0, 1344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1405,
	0, 0, 0, 0, 1344, 0, 0, 0, 0, 0,
	1854, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1345, 1858,
	0, 1344, 1344, 1344, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1405, 0, 0, 0, 0,
	0, 0, 0, 1345, 1345, 1345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1345, 1345, 1345, 0, 0, 1405, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 0, 0, 0, 1345,
	0, 0, 0, 0, 0, 1406, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1405, 0,
	1344, 1406, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 1405, 0, 0, 0, 0, 0, 1805,
	1806, 0, 1838, 1839, 1840, 1849, 1850, 1851, 0, 0,
	0, 0, 0, 0, 0, 1860, 0, 0, 0, 0,
	0, 1842, 1836, 0, 0, 0, 0, 0, 0, 1808,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1861, 0, 0, 0, 0,
	0, 1405, 0, 0, 1807, 0, 0, 0, 1344, 0,
	0, 0, 0, 0, 1827, 0, 0, 0, 1344, 1344,
	0, 0, 0, 1824, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 1406, 1406, 0, 1406, 1819, 1820, 1826,
	1848, 1825, 1821, 0, 1818, 1816, 1817, 1809, 1810, 1811,
	1812, 1814, 1815, 0, 1345, 1345, 0, 0, 0, 0,
	0, 2602, 0, 1405, 1406, 0, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	1831, 1832, 1833, 0, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 1345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1406, 0, 1345, 0, 0, 1345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1406, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 1856, 0, 0, 0, 0, 0, 0, 1835, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 1853, 1345, 1345,
	0, 0, 0, 0, 1822, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1345, 0,
	0, 0, 1844, 0, 0, 0, 0, 0, 0, 0,
	1406, 0, 0, 0, 0, 1345, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1345, 1345, 1345, 1345, 0, 0, 0, 0,
	0, 1854, 0, 0, 1344, 0, 1406, 0, 0, 0,
	0, 0, 0, 0, 1344, 1344, 0, 0, 0, 1843,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1858, 1344, 0, 0, 0, 0, 1406, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1406,
	0, 1345, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1406, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1860, 0, 0, 0,
	0, 0, 1406, 0, 0, 0, 0, 0, 0, 1345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1345,
	1345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1406, 0, 0, 1345, 1845, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 1820,
	1826, 1848, 1825, 1821, 0, 1818, 1816, 1817, 1809, 1810,
	1811, 1812, 1814, 1815, 0, 0, 0, 0, 4684, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1403, 0, 0, 1345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1345, 1345, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 1408, 287, 288, 1409,
	1410, 1411, 1345, 1412, 637, 1413, 1414, 1415, 1416, 289,
	290, 1202, 291, 292, 293, 294, 295, 296, 638, 639,
	0, 297, 640, 298, 641, 1417, 642, 299, 300, 301,
	302, 303, 304, 1418, 1419, 0, 305, 643, 644, 645,
	1420, 306, 307, 646, 1421, 1347, 1422, 308, 309, 310,
	311, 312, 313, 314, 0, 1423, 316, 317, 318, 315,
	319, 1424, 320, 0, 321, 322, 323, 324, 325, 326,
	1425, 327, 328, 329, 1203, 330, 331, 332, 1426, 1427,
	1429, 1428, 1430, 1431, 1432, 333, 334, 335, 336, 337,
	0, 338, 340, 647, 648, 1433, 343, 339, 341, 1434,
	344, 342, 345, 1435, 346, 347, 348, 1436, 1437, 349,
	350, 351, 1438, 352, 353, 1439, 354, 355, 356, 1440,
	357, 358, 649, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 650, 651, 370, 1441, 277, 1442, 0,
	0, 0, 0, 371, 372, 373, 652, 0, 0, 0,
	374, 1443, 375, 376, 377, 1444, 1445, 1204, 378, 379,
	380, 653, 654, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1446, 390, 655, 1447, 656, 391, 1448, 392,
	393, 394, 395, 396, 657, 658, 659, 476, 1206, 397,
	398, 1449, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 1450, 1205, 407, 660, 661,
	1451, 662, 1452, 409, 410, 1207, 663, 1208, 411, 412,
	413, 1209, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 1453, 421, 423, 422, 1454, 424, 664, 1210,
	425, 426, 1211, 1455, 427, 0, 0, 0, 428, 429,
	432, 1456, 1457, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1212, 458, 459, 460, 466, 468, 469, 464,
	465, 467, 470, 471, 462, 463, 1213, 472, 461, 1458,
	279, 1214, 473, 474, 1459, 665, 475, 666, 477, 478,
	1460, 0, 479, 0, 1461, 1462, 481, 482, 483, 1463,
	1464, 484, 485, 667, 1215, 486, 1216, 668, 487, 488,
	480, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	1465, 498, 499, 669, 500, 501, 502, 670, 503, 504,
	505, 671, 506, 672, 507, 508, 1466, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 517, 673, 518, 519,
	521, 520, 522, 1467, 523, 0, 524, 525, 526, 0,
	0, 0, 0, 0, 527, 0, 529, 530, 531, 532,
	528, 533, 534, 535, 536, 537, 1468, 538, 539, 540,
	1217, 541, 542, 543, 544, 545, 674, 546, 0, 547,
	548, 554, 555, 556, 549, 550, 557, 558, 559, 560,
	561, 1469, 563, 564, 562, 565, 566, 567, 1470, 568,
	569, 551, 552, 570, 571, 1218, 572, 573, 574, 575,
	576, 577, 578, 675, 0, 579, 1471, 580, 581, 582,
	584, 553, 585, 590, 591, 676, 586, 587, 588, 589,
	677, 593, 594, 1472, 595, 596, 0, 592, 583, 1473,
	597, 598, 599, 600, 601, 602, 603, 364, 604, 1474,
	605, 678, 679, 680, 681, 1475, 614, 1476, 606, 607,
	608, 682, 609, 683, 1477, 610, 611, 612, 613, 0,
	615, 616, 1478, 1479, 617, 618, 619, 621, 622, 620,
	623, 1480, 624, 1481, 0, 625, 626, 627, 684, 685,
	686, 1482, 629, 628, 630, 687, 1483, 631, 1484, 1485,
	1486, 1487, 632, 633, 688, 634, 635, 636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1403, 0, 0,
	0, 0, 0, 0, 0, 2770, 0, 0, 0, 0,
	0, 0, 0, 2771, 280, 282, 281, 283, 284, 285,
	286, 1408, 287, 288, 1409, 1410, 1411, 0, 1412, 637,
	1413, 1414, 1415, 1416, 289, 290, 1202, 291, 292, 293,
	294, 295, 296, 638, 639, 0, 297, 640, 298, 641,
	1417, 642, 299, 300, 301, 302, 303, 304, 1418, 1419,
	0, 305, 643, 644, 645, 1420, 306, 307, 646, 1421,
	1347, 1422, 308, 309, 310, 311, 312, 313, 314, 0,
	1423, 316, 317, 318, 315, 319, 1424, 320, 0, 321,
	322, 323, 324, 325, 326, 1425, 327, 328, 329, 1203,
	330, 331, 332, 1426, 1427, 1429, 1428, 1430, 1431, 1432,
	333, 334, 335, 336, 337, 0, 338, 340, 647, 648,
	1433, 343, 339, 341, 1434, 344, 342, 345, 1435, 346,
	347, 348, 1436, 1437, 349, 350, 351, 1438, 352, 353,
	1439, 354, 355, 356, 1440, 357, 358, 649, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 650, 651,
	370, 1441, 277, 1442, 0, 0, 0, 0, 371, 372,
	373, 652, 0, 0, 0, 374, 1443, 375, 376, 377,
	1444, 1445, 1204, 378, 379, 380, 653, 654, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1446, 390, 655,
	1447, 656, 391, 1448, 392, 393, 394, 395, 396, 657,
	658, 659, 476, 1206, 397, 398, 1449, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	1450, 1205, 407, 660, 661, 1451, 662, 1452, 409, 410,
	1207, 663, 1208, 411, 412, 413, 1209, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1453, 421, 423,
	422, 1454, 424, 664, 1210, 425, 426, 1211, 1455, 427,
	0, 0, 0, 428, 429, 432, 1456, 1457, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1212, 458, 459,
	460, 466, 468, 469, 464, 465, 467, 470, 471, 462,
	463, 1213, 472, 461, 1458, 279, 1214, 473, 474, 1459,
	665, 475, 666, 477, 478, 1460, 0, 479, 0, 1461,
	1462, 481, 482, 483, 1463, 1464, 484, 485, 667, 1215,
	486, 1216, 668, 487, 488, 480, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 1465, 498, 499, 669, 500,
	501, 502, 670, 503, 504, 505, 671, 506, 672, 507,
	508, 1466, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 517, 673, 518, 519, 521, 520, 522, 1467, 523,
	0, 524, 525, 526, 0, 0, 0, 0, 0, 527,
	0, 529, 530, 531, 532, 528, 533, 534, 535, 536,
	537, 1468, 538, 539, 540, 1217, 541, 542, 543, 544,
	545, 674, 546, 0, 547, 548, 554, 555, 556, 549,
	550, 557, 558, 559, 560, 561, 1469, 563, 564, 562,
	565, 566, 567, 1470, 568, 569, 551, 552, 570, 571,
	1218, 572, 573, 574, 575, 576, 577, 578, 675, 0,
	579, 1471, 580, 581, 582, 584, 553, 585, 590, 591,
	676, 586, 587, 588, 589, 677, 593, 594, 1472, 595,
	596, 0, 592, 583, 1473, 597, 598, 599, 600, 601,
	602, 603, 364, 604, 1474, 605, 678, 679, 680, 681,
	1475, 614, 1476, 606, 607, 608, 682, 609, 683, 1477,
	610, 611, 612, 613, 0, 615, 616, 1478, 1479, 617,
	618, 619, 621, 622, 620, 623, 1480, 624, 1481, 0,
	625, 626, 627, 684, 685, 686, 1482, 629, 628, 630,
	687, 1483, 631, 1484, 1485, 1486, 1487, 632, 633, 688,
	634, 635, 636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1403, 0, 0, 0, 0, 3751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3753, 280, 282, 281,
	283, 284, 285, 286, 1408, 287, 288, 1409, 1410, 1411,
	0, 1412, 637, 1413, 1414, 1415, 1416, 289, 290, 1202,
	291, 292, 293, 294, 295, 296, 638, 639, 0, 297,
	640, 298, 641, 1417, 642, 299, 300, 301, 302, 303,
	304, 1418, 1419, 0, 305, 643, 644, 645, 1420, 306,
	307, 646, 1421, 1347, 1422, 308, 309, 310, 311, 312,
	313, 314, 0, 1423, 316, 317, 318, 315, 319, 1424,
	320, 0, 321, 322, 323, 324, 325, 326, 1425, 327,
	328, 329, 1203, 330, 331, 332, 1426, 1427, 1429, 1428,
	1430, 1431, 1432, 333, 334, 335, 336, 337, 0, 338,
	340, 647, 648, 1433, 343, 339, 341, 1434, 344, 342,
	345, 1435, 346, 347, 348, 1436, 1437, 349, 350, 351,
	1438, 352, 353, 1439, 354, 355, 356, 1440, 357, 358,
	649, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 650, 651, 370, 1441, 277, 1442, 0, 0, 0,
	0, 371, 372, 373, 652, 0, 0, 0, 374, 1443,
	375, 376, 377, 1444, 1445, 1204, 378, 379, 380, 653,
	654, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1446, 390, 655, 1447, 656, 391, 1448, 392, 393, 394,
	395, 396, 657, 658, 659, 476, 1206, 397, 398, 1449,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 1450, 1205, 407, 660, 661, 1451, 662,
	1452, 409, 410, 1207, 663, 1208, 411, 412, 413, 1209,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	1453, 421, 423, 422, 1454, 424, 664, 1210, 425, 426,
	1211, 1455, 427, 0, 0, 0, 428, 429, 432, 1456,
	1457, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1212, 458, 459, 460, 466, 468, 469, 464, 465, 467,
	470, 471, 462, 463, 1213, 472, 461, 1458, 279, 1214,
	473, 474, 1459, 665, 475, 666, 477, 478, 1460, 0,
	479, 0, 1461, 1462, 481, 482, 483, 1463, 1464, 484,
	485, 667, 1215, 486, 1216, 668, 487, 488, 480, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 1465, 498,
	499, 669, 500, 501, 502, 670, 503, 504, 505, 671,
	506, 672, 507, 508, 1466, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 517, 673, 518, 519, 521, 520,
	522, 1467, 523, 0, 524, 525, 526, 0, 0, 0,
	0, 0, 527, 0, 529, 530, 531, 532, 528, 533,
	534, 535, 536, 537, 1468, 538, 539, 540, 1217, 541,
	542, 543, 544, 545, 674, 546, 0, 547, 548, 554,
	555, 556, 549, 550, 557, 558, 559, 560, 561, 1469,
	563, 564, 562, 565, 566, 567, 1470, 568, 569, 551,
	552, 570, 571, 1218, 572, 573, 574, 575, 576, 577,
	578, 675, 0, 579, 1471, 580, 581, 582, 584, 553,
	585, 590, 591, 676, 586, 587, 588, 589, 677, 593,
	594, 1472, 595, 596, 0, 592, 583, 1473, 597, 598,
	599, 600, 601, 602, 603, 364, 604, 1474, 605, 678,
	679, 680, 681, 1475, 614, 1476, 606, 607, 608, 682,
	609, 683, 1477, 610, 611, 612, 613, 0, 615, 616,
	1478, 1479, 617, 618, 619, 621, 622, 620, 623, 1480,
	624, 1481, 0, 625, 626, 627, 684, 685, 686, 1482,
	629, 628, 630, 687, 1483, 631, 1484, 1485, 1486, 1487,
	632, 633, 688, 634, 635, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4148, 280, 282, 281, 283, 284, 285,
	286, 1408, 287, 288, 1409, 1410, 1411, 0, 1412, 637,
	1413, 1414, 1415, 1416, 289, 290, 1202, 291, 292, 293,
	294, 295, 296, 638, 639, 0, 297, 640, 298, 641,
	1417, 642, 299, 300, 301, 302, 303, 304, 1418, 1419,
	0, 305, 643, 644, 645, 1420, 306, 307, 646, 1421,
	1347, 1422, 308, 309, 310, 311, 312, 313, 314, 0,
	1423, 316, 317, 318, 315, 319, 1424, 320, 0, 321,
	322, 323, 324, 325, 326, 1425, 327, 328, 329, 1203,
	330, 331, 332, 1426, 1427, 1429, 1428, 1430, 1431, 1432,
	333, 334, 335, 336, 337, 0, 338, 340, 647, 648,
	1433, 343, 339, 341, 1434, 344, 342, 345, 1435, 346,
	347, 348, 1436, 1437, 349, 350, 351, 1438, 352, 353,
	1439, 354, 355, 356, 1440, 357, 358, 649, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 650, 651,
	370, 1441, 277, 1442, 0, 0, 0, 0, 371, 372,
	373, 652, 0, 0, 0, 374, 1443, 375, 376, 377,
	1444, 1445, 1204, 378, 379, 380, 653, 654, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1446, 390, 655,
	1447, 656, 391, 1448, 392, 393, 394, 395, 396, 657,
	658, 659, 476, 1206, 397, 398, 1449, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	1450, 1205, 407, 660, 661, 1451, 662, 1452, 409, 410,
	1207, 663, 1208, 411, 412, 413, 1209, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1453, 421, 423,
	422, 1454, 424, 664, 1210, 425, 426, 1211, 1455, 427,
	0, 0, 0, 428, 429, 432, 1456, 1457, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1212, 458, 459,
	460, 466, 468, 469, 464, 465, 467, 470, 471, 462,
	463, 1213, 472, 461, 1458, 279, 1214, 473, 474, 1459,
	665, 475, 666, 477, 478, 1460, 0, 479, 0, 1461,
	1462, 481, 482, 483, 1463, 1464, 484, 485, 667, 1215,
	486, 1216, 668, 487, 488, 480, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 1465, 498, 499, 669, 500,
	501, 502, 670, 503, 504, 505, 671, 506, 672, 507,
	508, 1466, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 517, 673, 518, 519, 521, 520, 522, 1467, 523,
	0, 524, 525, 526, 0, 0, 0, 0, 0, 527,
	0, 529, 530, 531, 532, 528, 533, 534, 535, 536,
	537, 1468, 538, 539, 540, 1217, 541, 542, 543, 544,
	545, 674, 546, 0, 547, 548, 554, 555, 556, 549,
	550, 557, 558, 559, 560, 561, 1469, 563, 564, 562,
	565, 566, 567, 1470, 568, 569, 551, 552, 570, 571,
	1218, 572, 573, 574, 575, 576, 577, 578, 675, 0,
	579, 1471, 580, 581, 582, 584, 553, 585, 590, 591,
	676, 586, 587, 588, 589, 677, 593, 594, 1472, 595,
	596, 0, 592, 583, 1473, 597, 598, 599, 600, 601,
	602, 603, 364, 604, 1474, 605, 678, 679, 680, 681,
	1475, 614, 1476, 606, 607, 608, 682, 609, 683, 1477,
	610, 611, 612, 613, 0, 615, 616, 1478, 1479, 617,
	618, 619, 621, 622, 620, 623, 1480, 624, 1481, 0,
	625, 626, 627, 684, 685, 686, 1482, 629, 628, 630,
	687, 1483, 631, 1484, 1485, 1486, 1487, 632, 633, 688,
	634, 635, 636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4146, 280, 282, 281, 283, 284, 285, 286, 1408, 287,
	288, 1409, 1410, 1411, 0, 1412, 637, 1413, 1414, 1415,
	1416, 289, 290, 1202, 291, 292, 293, 294, 295, 296,
	638, 639, 0, 297, 640, 298, 641, 1417, 642, 299,
	300, 301, 302, 303, 304, 1418, 1419, 0, 305, 643,
	644, 645, 1420, 306, 307, 646, 1421, 1347, 1422, 308,
	309, 310, 311, 312, 313, 314, 0, 1423, 316, 317,
	318, 315, 319, 1424, 320, 0, 321, 322, 323, 324,
	325, 326, 1425, 327, 328, 329, 1203, 330, 331, 332,
	1426, 1427, 1429, 1428, 1430, 1431, 1432, 333, 334, 335,
	336, 337, 0, 338, 340, 647, 648, 1433, 343, 339,
	341, 1434, 344, 342, 345, 1435, 346, 347, 348, 1436,
	1437, 349, 350, 351, 1438, 352, 353, 1439, 354, 355,
	356, 1440, 357, 358, 649, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 650, 651, 370, 1441, 277,
	1442, 0, 0, 0, 0, 371, 372, 373, 652, 0,
	0, 0, 374, 1443, 375, 376, 377, 1444, 1445, 1204,
	378, 379, 380, 653, 654, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1446, 390, 655, 1447, 656, 391,
	1448, 392, 393, 394, 395, 396, 657, 658, 659, 476,
	1206, 397, 398, 1449, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 1450, 1205, 407,
	660, 661, 1451, 662, 1452, 409, 410, 1207, 663, 1208,
	411, 412, 413, 1209, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 1453, 421, 423, 422, 1454, 424,
	664, 1210, 425, 426, 1211, 1455, 427, 0, 0, 0,
	428, 429, 432, 1456, 1457, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1212, 458, 459, 460, 466, 468,
	469, 464, 465, 467, 470, 471, 462, 463, 1213, 472,
	461, 1458, 279, 1214, 473, 474, 1459, 665, 475, 666,
	477, 478, 1460, 0, 479, 0, 1461, 1462, 481, 482,
	483, 1463, 1464, 484, 485, 667, 1215, 486, 1216, 668,
	487, 488, 480, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 1465, 498, 499, 669, 500, 501, 502, 670,
	503, 504, 505, 671, 506, 672, 507, 508, 1466, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 517, 673,
	518, 519, 521, 520, 522, 1467, 523, 0, 524, 525,
	526, 0, 0, 0, 0, 0, 527, 0, 529, 530,
	531, 532, 528, 533, 534, 535, 536, 537, 1468, 538,
	539, 540, 1217, 541, 542, 543, 544, 545, 674, 546,
	0, 547, 548, 554, 555, 556, 549, 550, 557, 558,
	559, 560, 561, 1469, 563, 564, 562, 565, 566, 567,
	1470, 568, 569, 551, 552, 570, 571, 1218, 572, 573,
	574, 575, 576, 577, 578, 675, 0, 579, 1471, 580,
	581, 582, 584, 553, 585, 590, 591, 676, 586, 587,
	588, 589, 677, 593, 594, 1472, 595, 596, 0, 592,
	583, 1473, 597, 598, 599, 600, 601, 602, 603, 364,
	604, 1474, 605, 678, 679, 680, 681, 1475, 614, 1476,
	606, 607, 608, 682, 609, 683, 1477, 610, 611, 612,
	613, 0, 615, 616, 1478, 1479, 617, 618, 619, 621,
	622, 620, 623, 1480, 624, 1481, 0, 625, 626, 627,
	684, 685, 686, 1482, 629, 628, 630, 687, 1483, 631,
	1484, 1485, 1486, 1487, 632, 633, 688, 634, 635, 636,
	0, 0, 0, 0, 0, 0, 1403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4359, 280, 282, 281, 283, 284, 285, 286,
	1408, 287, 288, 1409, 1410, 1411, 0, 1412, 637, 1413,
	1414, 1415, 1416, 289, 290, 1202, 291, 292, 293, 294,
	295, 296, 638, 639, 0, 297, 640, 298, 641, 1417,
	642, 299, 300, 301, 302, 303, 304, 1418, 1419, 0,
	305, 643, 644, 645, 1420, 306, 307, 646, 1421, 1347,
	1422, 308, 309, 310, 311, 312, 313, 314, 0, 1423,
	316, 317, 318, 315, 319, 1424, 320, 0, 321, 322,
	323, 324, 325, 326, 1425, 327, 328, 329, 1203, 330,
	331, 332, 1426, 1427, 1429, 1428, 1430, 1431, 1432, 333,
	334, 335, 336, 337, 0, 338, 340, 647, 648, 1433,
	343, 339, 341, 1434, 344, 342, 345, 1435, 346, 347,
	348, 1436, 1437, 349, 350, 351, 1438, 352, 353, 1439,
	354, 355, 356, 1440, 357, 358, 649, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 650, 651, 370,
	1441, 277, 1442, 0, 0, 0, 0, 371, 372, 373,
	652, 0, 0, 0, 374, 1443, 375, 376, 377, 1444,
	1445, 1204, 378, 379, 380, 653, 654, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1446, 390, 655, 1447,
	656, 391, 1448, 392, 393, 394, 395, 396, 657, 658,
	659, 476, 1206, 397, 398, 1449, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 1450,
	1205, 407, 660, 661, 1451, 662, 1452, 409, 410, 1207,
	663, 1208, 411, 412, 413, 1209, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1453, 421, 423, 422,
	1454, 424, 664, 1210, 425, 426, 1211, 1455, 427, 0,
	0, 0, 428, 429, 432, 1456, 1457, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1212, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	1213, 472, 461, 1458, 279, 1214, 473, 474, 1459, 665,
	475, 666, 477, 478, 1460, 0, 479, 0, 1461, 1462,
	481, 482, 483, 1463, 1464, 484, 485, 667, 1215, 486,
	1216, 668, 487, 488, 480, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 1465, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 671, 506, 672, 507, 508,
	1466, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 673, 518, 519, 521, 520, 522, 1467, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	1468, 538, 539, 540, 1217, 541, 542, 543, 544, 545,
	674, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 1469, 563, 564, 562, 565,
	566, 567, 1470, 568, 569, 551, 552, 570, 571, 1218,
	572, 573, 574, 575, 576, 577, 578, 675, 0, 579,
	1471, 580, 581, 582, 584, 553, 585, 590, 591, 676,
	586, 587, 588, 589, 677, 593, 594, 1472, 595, 596,
	0, 592, 583, 1473, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 1474, 605, 678, 679, 680, 681, 1475,
	614, 1476, 606, 607, 608, 682, 609, 683, 1477, 610,
	611, 612, 613, 0, 615, 616, 1478, 1479, 617, 618,
	619, 621, 622, 620, 623, 1480, 624, 1481, 0, 625,
	626, 627, 684, 685, 686, 1482, 629, 628, 630, 687,
	1483, 631, 1484, 1485, 1486, 1487, 632, 633, 688, 634,
	635, 636, 0, 0, 0, 0, 0, 0, 1403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4228, 280, 282, 281, 283, 284,
	285, 286, 1408, 287, 288, 1409, 1410, 1411, 0, 1412,
	637, 1413, 1414, 1415, 1416, 289, 290, 1202, 291, 292,
	293, 294, 295, 296, 638, 639, 0, 297, 640, 298,
	641, 1417, 642, 299, 300, 301, 302, 303, 304, 1418,
	1419, 0, 305, 643, 644, 645, 1420, 306, 307, 646,
	1421, 1347, 1422, 308, 309, 310, 311, 312, 313, 314,
	0, 1423, 316, 317, 318, 315, 319, 1424, 320, 0,
	321, 322, 323, 324, 325, 326, 1425, 327, 328, 329,
	1203, 330, 331, 332, 1426, 1427, 1429, 1428, 1430, 1431,
	1432, 333, 334, 335, 336, 337, 0, 338, 340, 647,
	648, 1433, 343, 339, 341, 1434, 344, 342, 345, 1435,
	346, 347, 348, 1436, 1437, 349, 350, 351, 1438, 352,
	353, 1439, 354, 355, 356, 1440, 357, 358, 649, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 650,
	651, 370, 1441, 277, 1442, 0, 0, 0, 0, 371,
	372, 373, 652, 0, 0, 0, 374, 1443, 375, 376,
	377, 1444, 1445, 1204, 378, 379, 380, 653, 654, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1446, 390,
	655, 1447, 656, 391, 1448, 392, 393, 394, 395, 396,
	657, 658, 659, 476, 1206, 397, 398, 1449, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 1450, 1205, 407, 660, 661, 1451, 662, 1452, 409,
	410, 1207, 663, 1208, 411, 412, 413, 1209, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1453, 421,
	423, 422, 1454, 424, 664, 1210, 425, 426, 1211, 1455,
	427, 0, 0, 0, 428, 429, 432, 1456, 1457, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1212, 458,
	459, 460, 466, 468, 469, 464, 465, 467, 470, 471,
	462, 463, 1213, 472, 461, 1458, 279, 1214, 473, 474,
	1459, 665, 475, 666, 477, 478, 1460, 0, 479, 0,
	1461, 1462, 481, 482, 483, 1463, 1464, 484, 485, 667,
	1215, 486, 1216, 668, 487, 488, 480, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 1465, 498, 499, 669,
	500, 501, 502, 670, 503, 504, 505, 671, 506, 672,
	507, 508, 1466, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 517, 673, 518, 519, 521, 520, 522, 1467,
	523, 0, 524, 525, 526, 0, 0, 0, 0, 0,
	527, 0, 529, 530, 531, 532, 528, 533, 534, 535,
	536, 537, 1468, 538, 539, 540, 1217, 541, 542, 543,
	544, 545, 674, 546, 0, 547, 548, 554, 555, 556,
	549, 550, 557, 558, 559, 560, 561, 1469, 563, 564,
	562, 565, 566, 567, 1470, 568, 569, 551, 552, 570,
	571, 1218, 572, 573, 574, 575, 576, 577, 578, 675,
	0, 579, 1471, 580, 581, 582, 584, 553, 585, 590,
	591, 676, 586, 587, 588, 589, 677, 593, 594, 1472,
	595, 596, 0, 592, 583, 1473, 597, 598, 599, 600,
	601, 602, 603, 364, 604, 1474, 605, 678, 679, 680,
	681, 1475, 614, 1476, 606, 607, 608, 682, 609, 683,
	1477, 610, 611, 612, 613, 0, 615, 616, 1478, 1479,
	617, 618, 619, 621, 622, 620, 623, 1480, 624, 1481,
	0, 625, 626, 627, 684, 685, 686, 1482, 629, 628,
	630, 687, 1483, 631, 1484, 1485, 1486, 1487, 632, 633,
	688, 634, 635, 636, 0, 0, 0, 0, 0, 0,
	1403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4076, 280, 282, 281,
	283, 284, 285, 286, 1408, 287, 288, 1409, 1410, 1411,
	0, 1412, 637, 1413, 1414, 1415, 1416, 289, 290, 1202,
	291, 292, 293, 294, 295, 296, 638, 639, 0, 297,
	640, 298, 641, 1417, 642, 299, 300, 301, 302, 303,
	304, 1418, 1419, 0, 305, 643, 644, 645, 1420, 306,
	307, 646, 1421, 1347, 1422, 308, 309, 310, 311, 312,
	313, 314, 0, 1423, 316, 317, 318, 315, 319, 1424,
	320, 0, 321, 322, 323, 324, 325, 326, 1425, 327,
	328, 329, 1203, 330, 331, 332, 1426, 1427, 1429, 1428,
	1430, 1431, 1432, 333, 334, 335, 336, 337, 0, 338,
	340, 647, 648, 1433, 343, 339, 341, 1434, 344, 342,
	345, 1435, 346, 347, 348, 1436, 1437, 349, 350, 351,
	1438, 352, 353, 1439, 354, 355, 356, 1440, 357, 358,
	649, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 650, 651, 370, 1441, 277, 1442, 0, 0, 0,
	0, 371, 372, 373, 652, 0, 0, 0, 374, 1443,
	375, 376, 377, 1444, 1445, 1204, 378, 379, 380, 653,
	654, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1446, 390, 655, 1447, 656, 391, 1448, 392, 393, 394,
	395, 396, 657, 658, 659, 476, 1206, 397, 398, 1449,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 1450, 1205, 407, 660, 661, 1451, 662,
	1452, 409, 410, 1207, 663, 1208, 411, 412, 413, 1209,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	1453, 421, 423, 422, 1454, 424, 664, 1210, 425, 426,
	1211, 1455, 427, 0, 0, 0, 428, 429, 432, 1456,
	1457, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1212, 458, 459, 460, 466, 468, 469, 464, 465, 467,
	470, 471, 462, 463, 1213, 472, 461, 1458, 279, 1214,
	473, 474, 1459, 665, 475, 666, 477, 478, 1460, 0,
	479, 0, 1461, 1462, 481, 482, 483, 1463, 1464, 484,
	485, 667, 1215, 486, 1216, 668, 487, 488, 480, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 1465, 498,
	499, 669, 500, 501, 502, 670, 503, 504, 505, 671,
	506, 672, 507, 508, 1466, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 517, 673, 518, 519, 521, 520,
	522, 1467, 523, 0, 524, 525, 526, 0, 0, 0,
	0, 0, 527, 0, 529, 530, 531, 532, 528, 533,
	534, 535, 536, 537, 1468, 538, 539, 540, 1217, 541,
	542, 543, 544, 545, 674, 546, 0, 547, 548, 554,
	555, 556, 549, 550, 557, 558, 559, 560, 561, 1469,
	563, 564, 562, 565, 566, 567, 1470, 568, 569, 551,
	552, 570, 571, 1218, 572, 573, 574, 575, 576, 577,
	578, 675, 0, 579, 1471, 580, 581, 582, 584, 553,
	585, 590, 591, 676, 586, 587, 588, 589, 677, 593,
	594, 1472, 595, 596, 0, 592, 583, 1473, 597, 598,
	599, 600, 601, 602, 603, 364, 604, 1474, 605, 678,
	679, 680, 681, 1475, 614, 1476, 606, 607, 608, 682,
	609, 683, 1477, 610, 611, 612, 613, 0, 615, 616,
	1478, 1479, 617, 618, 619, 621, 622, 620, 623, 1480,
	624, 1481, 0, 625, 626, 627, 684, 685, 686, 1482,
	629, 628, 630, 687, 1483, 631, 1484, 1485, 1486, 1487,
	632, 633, 688, 634, 635, 636, 0, 0, 0, 0,
	0, 0, 1403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3769, 280,
	282, 281, 283, 284, 285, 286, 1408, 287, 288, 1409,
	1410, 1411, 0, 1412, 637, 1413, 1414, 1415, 1416, 289,
	290, 1202, 291, 292, 293, 294, 295, 296, 638, 639,
	0, 297, 640, 298, 641, 1417, 642, 299, 300, 301,
	302, 303, 304, 1418, 1419, 0, 305, 643, 644, 645,
	1420, 306, 307, 646, 1421, 1347, 1422, 308, 309, 310,
	311, 312, 313, 314, 0, 1423, 316, 317, 318, 315,
	319, 1424, 320, 0, 321, 322, 323, 324, 325, 326,
	1425, 327, 328, 329, 1203, 330, 331, 332, 1426, 1427,
	1429, 1428, 1430, 1431, 1432, 333, 334, 335, 336, 337,
	0, 338, 340, 647, 648, 1433, 343, 339, 341, 1434,
	344, 342, 345, 1435, 346, 347, 348, 1436, 1437, 349,
	350, 351, 1438, 352, 353, 1439, 354, 355, 356, 1440,
	357, 358, 649, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 650, 651, 370, 1441, 277, 1442, 0,
	0, 0, 0, 371, 372, 373, 652, 0, 0, 0,
	374, 1443, 375, 376, 377, 1444, 1445, 1204, 378, 379,
	380, 653, 654, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1446, 390, 655, 1447, 656, 391, 1448, 392,
	393, 394, 395, 396, 657, 658, 659, 476, 1206, 397,
	398, 1449, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 1450, 1205, 407, 660, 661,
	1451, 662, 1452, 409, 410, 1207, 663, 1208, 411, 412,
	413, 1209, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 1453, 421, 423, 422, 1454, 424, 664, 1210,
	425, 426, 1211, 1455, 427, 0, 0, 0, 428, 429,
	432, 1456, 1457, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1212, 458, 459, 460, 466, 468, 469, 464,
	465, 467, 470, 471, 462, 463, 1213, 472, 461, 1458,
	279, 1214, 473, 474, 1459, 665, 475, 666, 477, 478,
	1460, 0, 479, 0, 1461, 1462, 481, 482, 483, 1463,
	1464, 484, 485, 667, 1215, 486, 1216, 668, 487, 488,
	480, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	1465, 498, 499, 669, 500, 501, 502, 670, 503, 504,
	505, 671, 506, 672, 507, 508, 1466, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 517, 673, 518, 519,
	521, 520, 522, 1467, 523, 0, 524, 525, 526, 0,
	0, 0, 0, 0, 527, 0, 529, 530, 531, 532,
	528, 533, 534, 535, 536, 537, 1468, 538, 539, 540,
	1217, 541, 542, 543, 544, 545, 674, 546, 0, 547,
	548, 554, 555, 556, 549, 550, 557, 558, 559, 560,
	561, 1469, 563, 564, 562, 565, 566, 567, 1470, 568,
	569, 551, 552, 570, 571, 1218, 572, 573, 574, 575,
	576, 577, 578, 675, 0, 579, 1471, 580, 581, 582,
	584, 553, 585, 590, 591, 676, 586, 587, 588, 589,
	677, 593, 594, 1472, 595, 596, 0, 592, 583, 1473,
	597, 598, 599, 600, 601, 602, 603, 364, 604, 1474,
	605, 678, 679, 680, 681, 1475, 614, 1476, 606, 607,
	608, 682, 609, 683, 1477, 610, 611, 612, 613, 0,
	615, 616, 1478, 1479, 617, 618, 619, 621, 622, 620,
	623, 1480, 624, 1481, 0, 625, 626, 627, 684, 685,
	686, 1482, 629, 628, 630, 687, 1483, 631, 1484, 1485,
	1486, 1487, 632, 633, 688, 634, 635, 636, 0, 0,
	0, 0, 0, 0, 1403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3592, 280, 282, 281, 283, 284, 285, 286, 1408, 287,
	288, 1409, 1410, 1411, 0, 1412, 637, 1413, 1414, 1415,
	1416, 289, 290, 1202, 291, 292, 293, 294, 295, 296,
	638, 639, 0, 297, 640, 298, 641, 1417, 642, 299,
	300, 301, 302, 303, 304, 1418, 1419, 0, 305, 643,
	644, 645, 1420, 306, 307, 646, 1421, 1347, 1422, 308,
	309, 310, 311, 312, 313, 314, 0, 1423, 316, 317,
	318, 315, 319, 1424, 320, 0, 321, 322, 323, 324,
	325, 326, 1425, 327, 328, 329, 1203, 330, 331, 332,
	1426, 1427, 1429, 1428, 1430, 1431, 1432, 333, 334, 335,
	336, 337, 0, 338, 340, 647, 648, 1433, 343, 339,
	341, 1434, 344, 342, 345, 1435, 346, 347, 348, 1436,
	1437, 349, 350, 351, 1438, 352, 353, 1439, 354, 355,
	356, 1440, 357, 358, 649, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 650, 651, 370, 1441, 277,
	1442, 0, 0, 0, 0, 371, 372, 373, 652, 0,
	0, 0, 374, 1443, 375, 376, 377, 1444, 1445, 1204,
	378, 379, 380, 653, 654, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1446, 390, 655, 1447, 656, 391,
	1448, 392, 393, 394, 395, 396, 657, 658, 659, 476,
	1206, 397, 398, 1449, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 1450, 1205, 407,
	660, 661, 1451, 662, 1452, 409, 410, 1207, 663, 1208,
	411, 412, 413, 1209, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 1453, 421, 423, 422, 1454, 424,
	664, 1210, 425, 426, 1211, 1455, 427, 0, 0, 0,
	428, 429, 432, 1456, 1457, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1212, 458, 459, 460, 466, 468,
	469, 464, 465, 467, 470, 471, 462, 463, 1213, 472,
	461, 1458, 279, 1214, 473, 474, 1459, 665, 475, 666,
	477, 478, 1460, 0, 479, 0, 1461, 1462, 481, 482,
	483, 1463, 1464, 484, 485, 667, 1215, 486, 1216, 668,
	487, 488, 480, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 1465, 498, 499, 669, 500, 501, 502, 670,
	503, 504, 505, 671, 506, 672, 507, 508, 1466, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 517, 673,
	518, 519, 521, 520, 522, 1467, 523, 0, 524, 525,
	526, 0, 0, 0, 0, 0, 527, 0, 529, 530,
	531, 532, 528, 533, 534, 535, 536, 537, 1468, 538,
	539, 540, 1217, 541, 542, 543, 544, 545, 674, 546,
	0, 547, 548, 554, 555, 556, 549, 550, 557, 558,
	559, 560, 561, 1469, 563, 564, 562, 565, 566, 567,
	1470, 568, 569, 551, 552, 570, 571, 1218, 572, 573,
	574, 575, 576, 577, 578, 675, 0, 579, 1471, 580,
	581, 582, 584, 553, 585, 590, 591, 676, 586, 587,
	588, 589, 677, 593, 594, 1472, 595, 596, 0, 592,
	583, 1473, 597, 598, 599, 600, 601, 602, 603, 364,
	604, 1474, 605, 678, 679, 680, 681, 1475, 614, 1476,
	606, 607, 608, 682, 609, 683, 1477, 610, 611, 612,
	613, 0, 615, 616, 1478, 1479, 617, 618, 619, 621,
	622, 620, 623, 1480, 624, 1481, 0, 625, 626, 627,
	684, 685, 686, 1482, 629, 628, 630, 687, 1483, 631,
	1484, 1485, 1486, 1487, 632, 633, 688, 634, 635, 636,
	0, 0, 0, 0, 0, 0, 1403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2625, 280, 282, 281, 283, 284, 285, 286,
	1408, 287, 288, 1409, 1410, 1411, 0, 1412, 637, 1413,
	1414, 1415, 1416, 289, 290, 1202, 291, 292, 293, 294,
	295, 296, 638, 639, 0, 297, 640, 298, 641, 1417,
	642, 299, 300, 301, 302, 303, 304, 1418, 1419, 0,
	305, 643, 644, 645, 1420, 306, 307, 646, 1421, 1347,
	1422, 308, 309, 310, 311, 312, 313, 314, 0, 1423,
	316, 317, 318, 315, 319, 1424, 320, 0, 321, 322,
	323, 324, 325, 326, 1425, 327, 328, 329, 1203, 330,
	331, 332, 1426, 1427, 1429, 1428, 1430, 1431, 1432, 333,
	334, 335, 336, 337, 0, 338, 340, 647, 648, 1433,
	343, 339, 341, 1434, 344, 342, 345, 1435, 346, 347,
	348, 1436, 1437, 349, 350, 351, 1438, 352, 353, 1439,
	354, 355, 356, 1440, 357, 358, 649, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 650, 651, 370,
	1441, 277, 1442, 0, 0, 0, 0, 371, 372, 373,
	652, 0, 0, 0, 374, 1443, 375, 376, 377, 1444,
	1445, 1204, 378, 379, 380, 653, 654, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1446, 390, 655, 1447,
	656, 391, 1448, 392, 393, 394, 395, 396, 657, 658,
	659, 476, 1206, 397, 398, 1449, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 1450,
	1205, 407, 660, 661, 1451, 662, 1452, 409, 410, 1207,
	663, 1208, 411, 412, 413, 1209, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1453, 421, 423, 422,
	1454, 424, 664, 1210, 425, 426, 1211, 1455, 427, 0,
	0, 0, 428, 429, 432, 1456, 1457, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1212, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	1213, 472, 461, 1458, 279, 1214, 473, 474, 1459, 665,
	475, 666, 477, 478, 1460, 0, 479, 0, 1461, 1462,
	481, 482, 483, 1463, 1464, 484, 485, 667, 1215, 486,
	1216, 668, 487, 488, 480, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 1465, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 671, 506, 672, 507, 508,
	1466, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 673, 518, 519, 521, 520, 522, 1467, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	1468, 538, 539, 540, 1217, 541, 542, 543, 544, 545,
	674, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 1469, 563, 564, 562, 565,
	566, 567, 1470, 568, 569, 551, 552, 570, 571, 1218,
	572, 573, 574, 575, 576, 577, 578, 675, 0, 579,
	1471, 580, 581, 582, 584, 553, 585, 590, 591, 676,
	586, 587, 588, 589, 677, 593, 594, 1472, 595, 596,
	0, 592, 583, 1473, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 1474, 605, 678, 679, 680, 681, 1475,
	614, 1476, 606, 607, 608, 682, 609, 683, 1477, 610,
	611, 612, 613, 0, 615, 616, 1478, 1479, 617, 618,
	619, 621, 622, 620, 623, 1480, 624, 1481, 0, 625,
	626, 627, 684, 685, 686, 1482, 629, 628, 630, 687,
	1483, 631, 1484, 1485, 1486, 1487, 632, 633, 688, 634,
	635, 636, 0, 0, 0, 0, 1499, 0, 1403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2253, 280, 282, 281, 283, 284,
	285, 286, 1408, 287, 288, 1409, 1410, 1411, 0, 1412,
	637, 1413, 1414, 1415, 1416, 289, 290, 1202, 291, 292,
	293, 294, 295, 296, 638, 639, 0, 297, 640, 298,
	641, 1417, 642, 299, 300, 301, 302, 303, 304, 1418,
	1419, 0, 305, 643, 644, 645, 1420, 306, 307, 646,
	1421, 1347, 1422, 308, 309, 310, 311, 312, 313, 314,
	0, 1423, 316, 317, 318, 315, 319, 1424, 320, 0,
	321, 322, 323, 324, 325, 326, 1425, 327, 328, 329,
	1203, 330, 331, 332, 1426, 1427, 1429, 1428, 1430, 1431,
	1432, 333, 334, 335, 336, 337, 0, 338, 340, 647,
	648, 1433, 343, 339, 341, 1434, 344, 342, 345, 1435,
	346, 347, 348, 1436, 1437, 349, 350, 351, 1438, 352,
	353, 1439, 354, 355, 356, 1440, 357, 358, 649, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 650,
	651, 370, 1441, 277, 1442, 0, 0, 0, 0, 371,
	372, 373, 652, 0, 0, 0, 374, 1443, 375, 376,
	377, 1444, 1445, 1204, 378, 379, 380, 653, 654, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1446, 390,
	655, 1447, 656, 391, 1448, 392, 393, 394, 395, 396,
	657, 658, 659, 476, 1206, 397, 398, 1449, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 1450, 1205, 407, 660, 661, 1451, 662, 1452, 409,
	410, 1207, 663, 1208, 411, 412, 413, 1209, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1453, 421,
	423, 422, 1454, 424, 664, 1210, 425, 426, 1211, 1455,
	427, 0, 0, 0, 428, 429, 432, 1456, 1457, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1212, 458,
	459, 460, 466, 468, 469, 464, 465, 467, 470, 471,
	462, 463, 1213, 472, 461, 1458, 279, 1214, 473, 474,
	1459, 665, 475, 666, 477, 478, 1460, 0, 479, 0,
	1461, 1462, 481, 482, 483, 1463, 1464, 484, 485, 667,
	1215, 486, 1216, 668, 487, 488, 480, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 1465, 498, 499, 669,
	500, 501, 502, 670, 503, 504, 505, 671, 506, 672,
	507, 508, 1466, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 517, 673, 518, 519, 521, 520, 522, 1467,
	523, 0, 524, 525, 526, 0, 0, 0, 0, 0,
	527, 0, 529, 530, 531, 532, 528, 533, 534, 535,
	536, 537, 1468, 538, 539, 540, 1217, 541, 542, 543,
	544, 545, 674, 546, 0, 547, 548, 554, 555, 556,
	549, 550, 557, 558, 559, 560, 561, 1469, 563, 564,
	562, 565, 566, 567, 1470, 568, 569, 551, 552, 570,
	571, 1218, 572, 573, 574, 575, 576, 577, 578, 675,
	0, 579, 1471, 580, 581, 582, 584, 553, 585, 590,
	591, 676, 586, 587, 588, 589, 677, 593, 594, 1472,
	595, 596, 0, 592, 583, 1473, 597, 598, 599, 600,
	601, 602, 603, 364, 604, 1474, 605, 678, 679, 680,
	681, 1475, 614, 1476, 606, 607, 608, 682, 609, 683,
	1477, 610, 611, 612, 613, 0, 615, 616, 1478, 1479,
	617, 618, 619, 621, 622, 620, 623, 1480, 624, 1481,
	0, 625, 626, 627, 684, 685, 686, 1482, 629, 628,
	630, 687, 1483, 631, 1484, 1485, 1486, 1487, 632, 633,
	688, 634, 635, 636, 1400, 0, 1403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	1408, 287, 288, 1409, 1410, 1411, 0, 1412, 637, 1413,
	1414, 1415, 1416, 289, 290, 1202, 291, 292, 293, 294,
	295, 296, 638, 639, 0, 297, 640, 298, 641, 1417,
	642, 299, 300, 301, 302, 303, 304, 1418, 1419, 0,
	305, 643, 644, 645, 1420, 306, 307, 646, 1421, 1347,
	1422, 308, 309, 310, 311, 312, 313, 314, 0, 1423,
	316, 317, 318, 315, 319, 1424, 320, 0, 321, 322,
	323, 324, 325, 326, 1425, 327, 328, 329, 1203, 330,
	331, 332, 1426, 1427, 1429, 1428, 1430, 1431, 1432, 333,
	334, 335, 336, 337, 0, 338, 340, 647, 648, 1433,
	343, 339, 341, 1434, 344, 342, 345, 1435, 346, 347,
	348, 1436, 1437, 349, 350, 351, 1438, 352, 353, 1439,
	354, 355, 356, 1440, 357, 358, 649, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 650, 651, 370,
	1441, 277, 1442, 0, 0, 0, 0, 371, 372, 373,
	652, 0, 0, 0, 374, 1443, 375, 376, 377, 1444,
	1445, 1204, 378, 379, 380, 653, 654, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1446, 390, 655, 1447,
	656, 391, 1448, 392, 393, 394, 395, 396, 657, 658,
	659, 476, 1206, 397, 398, 1449, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 1450,
	1205, 407, 660, 661, 1451, 662, 1452, 409, 410, 1207,
	663, 1208, 411, 412, 413, 1209, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1453, 421, 423, 422,
	1454, 424, 664, 1210, 425, 426, 1211, 1455, 427, 0,
	0, 0, 428, 429, 432, 1456, 1457, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1212, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	1213, 472, 461, 1458, 279, 1214, 473, 474, 1459, 665,
	475, 666, 477, 478, 1460, 0, 479, 0, 1461, 1462,
	481, 482, 483, 1463, 1464, 484, 485, 667, 1215, 486,
	1216, 668, 487, 488, 480, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 1465, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 671, 506, 672, 507, 508,
	1466, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 673, 518, 519, 521, 520, 522, 1467, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	1468, 538, 539, 540, 1217, 541, 542, 543, 544, 545,
	674, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 1469, 563, 564, 562, 565,
	566, 567, 1470, 568, 569, 551, 552, 570, 571, 1218,
	572, 573, 574, 575, 576, 577, 578, 675, 0, 579,
	1471, 580, 581, 582, 584, 553, 585, 590, 591, 676,
	586, 587, 588, 589, 677, 593, 594, 1472, 595, 596,
	0, 592, 583, 1473, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 1474, 605, 678, 679, 680, 681, 1475,
	614, 1476, 606, 607, 608, 682, 609, 683, 1477, 610,
	611, 612, 613, 0, 615, 616, 1478, 1479, 617, 618,
	619, 621, 622, 620, 623, 1480, 624, 1481, 0, 625,
	626, 627, 684, 685, 686, 1482, 629, 628, 630, 687,
	1483, 631, 1484, 1485, 1486, 1487, 632, 633, 688, 634,
	635, 636, 1403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 1408, 287, 288, 1409,
	1410, 1411, 0, 1412, 637, 1413, 1414, 1415, 1416, 289,
	290, 1202, 291, 292, 293, 294, 295, 296, 638, 639,
	0, 297, 640, 298, 641, 1417, 642, 299, 300, 301,
	302, 303, 304, 1418, 1419, 0, 305, 643, 644, 645,
	1420, 306, 307, 646, 1421, 1347, 1422, 308, 309, 310,
	311, 312, 313, 314, 0, 1423, 316, 317, 318, 315,
	319, 1424, 320, 0, 321, 322, 323, 324, 325, 326,
	1425, 327, 328, 329, 1203, 330, 331, 332, 1426, 1427,
	1429, 1428, 1430, 1431, 1432, 333, 334, 335, 336, 337,
	0, 338, 340, 647, 648, 1433, 343, 339, 341, 1434,
	344, 342, 345, 1435, 346, 347, 348, 1436, 1437, 349,
	350, 351, 1438, 352, 353, 1439, 354, 355, 356, 1440,
	357, 358, 649, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 650, 651, 370, 1441, 277, 1442, 0,
	0, 0, 0, 371, 372, 373, 652, 0, 0, 0,
	374, 1443, 375, 376, 377, 1444, 1445, 1204, 378, 379,
	380, 653, 654, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1446, 390, 655, 1447, 656, 391, 1448, 392,
	393, 394, 395, 396, 657, 658, 659, 476, 1206, 397,
	398, 1449, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 1450, 1205, 407, 660, 661,
	1451, 662, 1452, 409, 410, 1207, 663, 1208, 411, 412,
	413, 1209, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 1453, 421, 423, 422, 1454, 424, 664, 1210,
	425, 426, 1211, 1455, 427, 0, 0, 0, 428, 429,
	432, 1456, 1457, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1212, 458, 459, 460, 466, 468, 469, 464,
	465, 467, 470, 471, 462, 463, 1213, 472, 461, 1458,
	279, 1214, 473, 474, 1459, 665, 475, 666, 477, 478,
	1460, 0, 479, 0, 1461, 1462, 481, 482, 483, 1463,
	1464, 484, 485, 667, 1215, 486, 1216, 668, 487, 488,
	480, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	1465, 498, 499, 669, 500, 501, 502, 670, 503, 504,
	505, 671, 506, 672, 507, 508, 1466, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 517, 673, 518, 519,
	521, 520, 522, 1467, 523, 0, 524, 525, 526, 0,
	0, 0, 0, 0, 527, 0, 529, 530, 531, 532,
	528, 533, 534, 535, 536, 537, 1468, 538, 539, 540,
	1217, 541, 542, 543, 544, 545, 674, 546, 0, 547,
	548, 554, 555, 556, 549, 550, 557, 558, 559, 560,
	561, 1469, 563, 564, 562, 565, 566, 567, 1470, 568,
	569, 551, 552, 570, 571, 1218, 572, 573, 574, 575,
	576, 577, 578, 675, 0, 579, 1471, 580, 581, 582,
	584, 553, 585, 590, 591, 676, 586, 587, 588, 589,
	677, 593, 594, 1472, 595, 596, 0, 592, 583, 1473,
	597, 598, 599, 600, 601, 602, 603, 364, 604, 1474,
	605, 678, 679, 680, 681, 1475, 614, 1476, 606, 607,
	608, 682, 609, 683, 1477, 610, 611, 612, 613, 0,
	615, 616, 1478, 1479, 617, 618, 619, 621, 622, 620,
	623, 1480, 624, 1481, 0, 625, 626, 627, 684, 685,
	686, 1482, 629, 628, 630, 687, 1483, 631, 1484, 1485,
	1486, 1487, 632, 633, 688, 634, 635, 636, 2600, 0,
	1138, 1110, 1111, 1112, 1108, 1109, 1121, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 2597, 287, 288, 0, 0, 0,
	0, 0, 1162, 1126, 0, 0, 0, 289, 290, 1202,
	291, 292, 293, 294, 295, 296, 638, 1175, 0, 297,
	1182, 298, 1181, 0, 1192, 299, 300, 301, 302, 303,
	304, 1128, 1161, 1093, 305, 1222, 1223, 645, 0, 306,
	307, 1168, 0, 1149, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1203, 330, 331, 332, 1152, 1150, 1151, 1158,
	1154, 1153, 1157, 333, 334, 335, 336, 337, 1185, 338,
	340, 1179, 1178, 1098, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 2598, 0, 349, 1170, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1104, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1193, 1194, 370, 1117, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1177, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1204, 378, 379, 380, 1190,
	1191, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1200, 0, 1127, 391, 0, 392, 393, 394,
	395, 396, 1163, 1164, 1167, 476, 1206, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1205, 407, 1172, 1173, 0, 1133,
	0, 409, 410, 1207, 1165, 1208, 411, 412, 413, 1209,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1201, 1210, 425, 426,
	1211, 0, 427, 0, 0, 0, 428, 429, 432, 1156,
	1155, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1212, 458, 459, 460, 466, 468, 469, 464, 465, 467,
	470, 471, 462, 463, 1213, 472, 461, 1095, 279, 1214,
	473, 474, 1118, 1166, 475, 1180, 477, 478, 0, 0,
	479, 0, 0, 0, 481, 482, 483, 0, 0, 484,
	485, 667, 1215, 486, 1216, 1195, 487, 488, 1105, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 498,
	499, 669, 500, 501, 502, 670, 503, 504, 505, 1196,
	506, 672, 507, 508, 0, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 517, 1176, 518, 519, 521, 520,
	522, 0, 523, 0, 524, 525, 526, 0, 0, 0,
	0, 0, 527, 0, 529, 530, 531, 532, 528, 533,
	534, 535, 536, 537, 0, 538, 539, 540, 1217, 541,
	542, 543, 544, 545, 1106, 546, 0, 547, 548, 554,
	555, 556, 549, 550, 557, 558, 559, 560, 561, 0,
	563, 564, 562, 565, 566, 567, 1159, 568, 569, 551,
	552, 570, 571, 1218, 572, 573, 574, 575, 576, 577,
	578, 1174, 0, 579, 0, 580, 581, 582, 584, 553,
	585, 590, 591, 1221, 586, 587, 588, 589, 1197, 593,
	594, 0, 595, 596, 1092, 592, 583, 0, 597, 598,
	599, 600, 601, 602, 603, 364, 604, 0, 605, 1186,
	1187, 1188, 1189, 0, 614, 0, 606, 607, 608, 1198,
	609, 1199, 1116, 610, 611, 612, 613, 0, 615, 616,
	0, 1099, 617, 618, 619, 621, 622, 620, 623, 1160,
	624, 0, 0, 625, 626, 627, 684, 1183, 1220, 2596,
	629, 628, 630, 687, 0, 631, 0, 0, 0, 0,
	632, 633, 688, 634, 635, 636, 1096, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1091,
	0, 0, 0, 0, 0, 0, 1089, 1090, 2599, 0,
	0, 0, 0, 0, 0, 1122, 2595, 0, 1082, 1120,
	1138, 1110, 1111, 1112, 1108, 1109, 1121, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 1162, 1126, 0, 0, 0, 289, 290, 1202,
	291, 292, 293, 294, 295, 296, 638, 1175, 0, 297,
	1182, 298, 1181, 0, 1192, 299, 300, 301, 302, 303,
	304, 1128, 1161, 1093, 305, 1222, 1223, 645, 0, 306,
	307, 1168, 0, 1149, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1203, 330, 331, 332, 1152, 1150, 1151, 1158,
	1154, 1153, 1157, 333, 334, 335, 336, 337, 1185, 338,
	340, 1179, 1178, 1098, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1170, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1104, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1193, 1194, 370, 1117, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1177, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1204, 378, 379, 380, 1190,
	1191, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1200, 0, 1127, 391, 0, 392, 393, 394,
	395, 396, 1163, 1164, 1167, 476, 1206, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1205, 407, 1172, 1173, 0, 1133,
	0, 409, 410, 1207, 1165, 1208, 411, 412, 413, 1209,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1201, 1210, 425, 426,
	1211, 0, 427, 0, 0, 0, 428, 429, 432, 1156,
	1155, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1212, 458, 459, 460, 466, 468, 469, 464, 465, 467,
	470, 471, 462, 463, 1213, 472, 461, 1095, 279, 1214,
	473, 474, 1118, 1166, 475, 1180, 477, 478, 0, 0,
	479, 0, 0, 0, 481, 482, 483, 0, 0, 484,
	485, 667, 1215, 486, 1216, 1195, 487, 488, 1105, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 498,
	499, 669, 500, 501, 502, 670, 503, 504, 505, 1196,
	506, 672, 507, 508, 0, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 517, 1176, 518, 519, 521, 520,
	522, 0, 523, 0, 524, 525, 526, 0, 0, 0,
	0, 0, 527, 0, 529, 530, 531, 532, 528, 533,
	534, 535, 536, 537, 0, 538, 539, 540, 1217, 541,
	542, 543, 544, 545, 1106, 546, 0, 547, 548, 554,
	555, 556, 549, 550, 557, 558, 559, 560, 561, 239,
	563, 564, 562, 565, 566, 567, 1159, 568, 569, 551,
	552, 570, 571, 1218, 572, 573, 574, 575, 576, 577,
	578, 1174, 0, 579, 0, 580, 581, 582, 584, 553,
	585, 590, 591, 1221, 586, 587, 588, 589, 1197, 593,
	594, 0, 595, 596, 1092, 592, 583, 241, 597, 598,
	599, 600, 601, 602, 603, 364, 604, 0, 605, 1186,
	1187, 1188, 1189, 0, 614, 0, 606, 607, 608, 1198,
	609, 1199, 1116, 610, 611, 612, 613, 0, 615, 616,
	0, 1099, 617, 618, 619, 621, 622, 620, 623, 1160,
	624, 0, 0, 625, 626, 627, 1627, 1183, 1220, 0,
	629, 628, 630, 687, 0, 631, 0, 0, 0, 233,
	632, 633, 688, 634, 635, 636, 1096, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1091,
	0, 0, 0, 0, 0, 0, 1089, 1090, 1138, 1110,
	1111, 1112, 1108, 1109, 1121, 1886, 1884, 0, 0, 1120,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1162, 1126, 0, 0, 0, 289, 290, 1202, 291, 292,
	293, 294, 295, 296, 638, 1175, 0, 297, 1182, 298,
	1181, 0, 1192, 299, 300, 301, 302, 303, 304, 1128,
	1161, 1093, 305, 1222, 1223, 645, 0, 306, 307, 1168,
	0, 1149, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1203, 330, 331, 332, 1152, 1150, 1151, 1158, 1154, 1153,
	1157, 333, 334, 335, 336, 337, 1185, 338, 340, 1179,
	1178, 1098, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1170, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1104, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1193,
	1194, 370, 1117, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1177, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1204, 378, 379, 380, 1190, 1191, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1200, 0, 1127, 391, 0, 392, 393, 394, 395, 396,
	1163, 1164, 1167, 476, 1206, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1205, 407, 1172, 1173, 0, 1133, 0, 409,
	410, 1207, 1165, 1208, 411, 412, 413, 1209, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1201, 1210, 425, 426, 1211, 0,
	427, 0, 0, 0, 428, 429, 432, 1156, 1155, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1212, 458,
	459, 460, 466, 468, 469, 464, 465, 467, 470, 471,
	462, 463, 1213, 472, 461, 1095, 279, 1214, 473, 474,
	1118, 1166, 475, 1180, 477, 478, 0, 0, 479, 0,
	0, 0, 481, 482, 483, 0, 0, 484, 485, 667,
	1215, 486, 1216, 1195, 487, 488, 1105, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 498, 499, 669,
	500, 501, 502, 670, 503, 504, 505, 1196, 506, 672,
	507, 508, 0, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 517, 1176, 518, 519, 521, 520, 522, 0,
	523, 0, 524, 525, 526, 0, 0, 0, 0, 0,
	527, 0, 529, 530, 531, 532, 528, 533, 534, 535,
	536, 537, 0, 538, 539, 540, 1217, 541, 542, 543,
	544, 545, 1106, 546, 0, 547, 548, 554, 555, 556,
	549, 550, 557, 558, 559, 560, 561, 239, 563, 564,
	562, 565, 566, 567, 1159, 568, 569, 551, 552, 570,
	571, 1218, 572, 573, 574, 575, 576, 577, 578, 1174,
	0, 579, 0, 580, 581, 582, 584, 553, 585, 590,
	591, 1221, 586, 587, 588, 589, 1197, 593, 594, 0,
	595, 596, 1092, 592, 583, 241, 597, 598, 599, 600,
	601, 602, 603, 364, 604, 0, 605, 1186, 1187, 1188,
	1189, 0, 614, 0, 606, 607, 608, 1198, 609, 1199,
	1116, 610, 611, 612, 613, 0, 615, 616, 0, 1099,
	617, 618, 619, 621, 622, 620, 623, 1160, 624, 0,
	0, 625, 626, 627, 1627, 1183, 1220, 0, 629, 628,
	630, 687, 0, 631, 0, 0, 0, 233, 632, 633,
	688, 634, 635, 636, 1096, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1091, 0, 0,
	0, 0, 0, 0, 1089, 1090, 1138, 1110, 1111, 1112,
	1108, 1109, 1121, 1886, 3237, 0, 0, 1120, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 1162, 1126,
	0, 0, 0, 289, 290, 1202, 291, 292, 293, 294,
	295, 296, 638, 1175, 0, 297, 1182, 298, 1181, 0,
	1192, 299, 300, 301, 302, 303, 304, 1128, 1161, 1093,
	305, 1222, 1223, 645, 0, 306, 307, 1168, 0, 1149,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1203, 330,
	331, 332, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 333,
	334, 335, 336, 337, 1185, 338, 340, 1179, 1178, 1098,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1170, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1104, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1193, 1194, 370,
	1117, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1177, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1204, 378, 379, 380, 1190, 1191, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1200, 0,
	1127, 391, 0, 392, 393, 394, 395, 396, 1163, 1164,
	1167, 476, 1206, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1205, 407, 1172, 1173, 0, 1133, 0, 409, 410, 1207,
	1165, 1208, 411, 412, 413, 1209, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1201, 1210, 425, 426, 1211, 0, 427, 0,
	0, 0, 428, 429, 432, 1156, 1155, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1212, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	1213, 472, 461, 1095, 279, 1214, 473, 474, 1118, 1166,
	475, 1180, 477, 478, 0, 0, 479, 0, 0, 0,
	481, 482, 483, 0, 0, 484, 485, 667, 1215, 486,
	1216, 1195, 487, 488, 1105, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 1196, 506, 672, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 1176, 518, 519, 521, 520, 522, 0, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	0, 538, 539, 540, 1217, 541, 542, 543, 544, 545,
	1106, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 239, 563, 564, 562, 565,
	566, 567, 1159, 568, 569, 551, 552, 570, 571, 1218,
	572, 573, 574, 575, 576, 577, 578, 1174, 0, 579,
	0, 580, 581, 582, 584, 553, 585, 590, 591, 1221,
	586, 587, 588, 589, 1197, 593, 594, 0, 595, 596,
	1092, 592, 583, 241, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 0, 605, 1186, 1187, 1188, 1189, 0,
	614, 0, 606, 607, 608, 1198, 609, 1199, 1116, 610,
	611, 612, 613, 0, 615, 616, 0, 1099, 617, 618,
	619, 621, 622, 620, 623, 1160, 624, 0, 0, 625,
	626, 627, 1627, 1183, 1220, 0, 629, 628, 630, 687,
	0, 631, 0, 0, 0, 233, 632, 633, 688, 634,
	635, 636, 1096, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1091, 0, 0, 0, 0,
	0, 0, 1089, 1090, 1138, 1110, 1111, 1112, 1108, 1109,
	1121, 1886, 1884, 0, 0, 1120, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 1162, 1126, 0, 0,
	0, 289, 290, 1202, 291, 292, 293, 294, 295, 296,
	638, 1175, 0, 297, 1182, 298, 1181, 2731, 1192, 299,
	300, 301, 302, 303, 304, 1128, 1161, 1093, 305, 1222,
	1223, 645, 0, 306, 307, 1168, 0, 1149, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1203, 330, 331, 332,
	1152, 1150, 1151, 1158, 1154, 1153, 1157, 333, 334, 335,
	336, 337, 1185, 338, 340, 1179, 1178, 1098, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1170, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1104, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1193, 1194, 370, 1117, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1177, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 2736, 1204,
	378, 379, 380, 1190, 1191, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1200, 0, 1127, 391,
	0, 392, 393, 394, 395, 396, 1163, 1164, 1167, 476,
	1206, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1205, 407,
	1172, 1173, 0, 1133, 0, 409, 410, 1207, 1165, 1208,
	411, 412, 413, 1209, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 2732, 424,
	1201, 1210, 425, 426, 1211, 0, 427, 0, 0, 0,
	428, 429, 432, 1156, 1155, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1212, 458, 459, 460, 466, 468,
	469, 464, 465, 467, 470, 471, 462, 463, 1213, 472,
	461, 1095, 279, 1214, 473, 474, 1118, 1166, 475, 1180,
	477, 478, 0, 0, 479, 0, 0, 0, 481, 482,
	483, 0, 0, 484, 485, 667, 1215, 486, 1216, 1195,
	487, 488, 1105, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 498, 499, 669, 500, 501, 502, 670,
	503, 504, 505, 1196, 506, 672, 507, 508, 0, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 517, 1176,
	518, 519, 521, 520, 522, 0, 523, 0, 524, 525,
	526, 0, 0, 0, 0, 0, 527, 0, 529, 530,
	531, 532, 528, 533, 534, 535, 536, 537, 0, 538,
	539, 540, 1217, 541, 542, 543, 544, 545, 1106, 546,
	0, 547, 548, 554, 555, 556, 549, 550, 557, 558,
	559, 560, 561, 0, 563, 564, 562, 565, 566, 567,
	1159, 568, 569, 551, 552, 570, 571, 1218, 572, 573,
	574, 575, 576, 577, 578, 1174, 0, 579, 0, 580,
	581, 582, 584, 553, 585, 590, 591, 1221, 586, 587,
	588, 589, 1197, 593, 594, 0, 595, 596, 1092, 592,
	583, 0, 597, 598, 599, 600, 601, 602, 603, 364,
	604, 0, 605, 1186, 1187, 1188, 1189, 0, 614, 2733,
	606, 607, 608, 1198, 609, 1199, 1116, 610, 611, 612,
	613, 0, 615, 616, 0, 1099, 617, 618, 619, 621,
	622, 620, 623, 1160, 624, 0, 0, 625, 626, 627,
	684, 1183, 1220, 0, 629, 628, 630, 687, 0, 631,
	0, 0, 0, 0, 632, 633, 688, 634, 635, 636,
	1096, 0, 0, 2645, 0, 1138, 1110, 1111, 1112, 1108,
	1109, 1121, 0, 1091, 0, 0, 0, 0, 0, 0,
	1089, 1090, 280, 282, 281, 283, 284, 285, 286, 1122,
	287, 288, 0, 1120, 0, 0, 0, 1162, 1126, 0,
	0, 0, 289, 290, 1202, 291, 292, 293, 294, 295,
	296, 638, 1175, 0, 297, 1182, 298, 1181, 0, 1192,
	299, 300, 301, 302, 303, 304, 1128, 1161, 1093, 305,
	1222, 1223, 645, 0, 306, 307, 1168, 0, 1149, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1203, 330, 331,
	332, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 333, 334,
	335, 336, 337, 1185, 338, 340, 1179, 1178, 1098, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1170, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1104, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1193, 1194, 370, 1117,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1177,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1204, 378, 379, 380, 1190, 1191, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1200, 0, 1127,
	391, 0, 392, 393, 394, 395, 396, 1163, 1164, 1167,
	476, 1206, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1205,
	407, 1172, 1173, 0, 1133, 0, 409, 410, 1207, 1165,
	1208, 411, 412, 413, 1209, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1201, 1210, 425, 426, 1211, 0, 427, 0, 0,
	0, 428, 429, 432, 1156, 1155, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 466,
	468, 469, 464, 465, 467, 470, 471, 462, 463, 1213,
	472, 461, 1095, 279, 1214, 473, 474, 1118, 1166, 475,
	1180, 477, 478, 0, 0, 479, 0, 0, 0, 481,
	482, 483, 0, 0, 484, 485, 667, 1215, 486, 1216,
	1195, 487, 488, 1105, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 498, 499, 669, 500, 501, 502,
	670, 503, 504, 505, 1196, 506, 672, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 517,
	1176, 518, 519, 521, 520, 522, 0, 523, 0, 524,
	525, 526, 0, 0, 0, 0, 0, 527, 0, 529,
	530, 531, 532, 528, 533, 534, 535, 536, 537, 0,
	538, 539, 540, 1217, 541, 542, 543, 544, 545, 1106,
	546, 0, 547, 548, 554, 555, 556, 549, 550, 557,
	558, 559, 560, 561, 0, 563, 564, 562, 565, 566,
	567, 1159, 568, 569, 551, 552, 570, 571, 1218, 572,
	573, 574, 575, 576, 577, 578, 1174, 0, 579, 0,
	580, 581, 582, 584, 553, 585, 590, 591, 1221, 586,
	587, 588, 589, 1197, 593, 594, 0, 595, 596, 1092,
	592, 583, 0, 597, 598, 599, 600, 601, 602, 603,
	364, 604, 0, 605, 1186, 1187, 1188, 1189, 0, 614,
	0, 606, 607, 608, 1198, 609, 1199, 1116, 610, 611,
	612, 613, 0, 615, 616, 0, 1099, 617, 618, 619,
	621, 622, 620, 623, 1160, 624, 0, 0, 625, 626,
	627, 684, 1183, 1220, 0, 629, 628, 630, 687, 0,
	631, 0, 0, 0, 0, 632, 633, 688, 634, 635,
	636, 1096, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1091, 0, 0, 0, 0, 0,
	0, 1089, 1090, 0, 0, 0, 0, 0, 0, 0,
	1122, 2643, 0, 2642, 1120, 1138, 1110, 1111, 1112, 1108,
	1109, 1121, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 1162, 1126, 0,
	0, 0, 289, 290, 1202, 291, 292, 293, 294, 295,
	296, 638, 1175, 0, 297, 1182, 298, 1181, 0, 1192,
	299, 300, 301, 302, 303, 304, 1128, 1161, 1093, 305,
	1222, 1223, 645, 0, 306, 307, 1168, 0, 1149, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1203, 330, 331,
	332, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 333, 334,
	335, 336, 337, 1185, 338, 340, 1179, 1178, 1098, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1170, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1104, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1193, 1194, 370, 1117,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1177,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1204, 378, 379, 380, 1190, 1191, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1200, 0, 1127,
	391, 0, 392, 393, 394, 395, 396, 1163, 1164, 1167,
	476, 1206, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1205,
	407, 1172, 1173, 0, 1133, 0, 409, 410, 1207, 1165,
	1208, 411, 412, 413, 1209, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1201, 1210, 425, 426, 1211, 0, 427, 0, 0,
	0, 428, 429, 432, 1156, 1155, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 466,
	468, 469, 464, 465, 467, 470, 471, 462, 463, 1213,
	472, 461, 1095, 279, 1214, 473, 474, 1118, 1166, 475,
	1180, 477, 478, 0, 0, 479, 0, 0, 0, 481,
	482, 483, 0, 0, 484, 485, 667, 1215, 486, 1216,
	1195, 487, 488, 1105, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 498, 499, 669, 500, 501, 502,
	670, 503, 504, 505, 1196, 506, 672, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 517,
	1176, 518, 519, 521, 520, 522, 0, 523, 0, 524,
	525, 526, 0, 0, 0, 0, 0, 527, 0, 529,
	530, 531, 532, 528, 533, 534, 535, 536, 537, 0,
	538, 539, 540, 1217, 541, 542, 543, 544, 545, 1106,
	546, 0, 547, 548, 554, 555, 556, 549, 550, 557,
	558, 559, 560, 561, 0, 563, 564, 562, 565, 566,
	567, 1159, 568, 569, 551, 552, 570, 571, 1218, 572,
	573, 574, 575, 576, 577, 578, 1174, 0, 579, 0,
	580, 581, 582, 584, 553, 585, 590, 591, 1221, 586,
	587, 588, 589, 1197, 593, 594, 0, 595, 596, 1092,
	592, 583, 0, 597, 598, 599, 600, 601, 602, 603,
	364, 604, 0, 605, 1186, 1187, 1188, 1189, 0, 614,
	0, 606, 607, 608, 1198, 609, 1199, 1116, 610, 611,
	612, 613, 0, 615, 616, 0, 1099, 617, 618, 619,
	621, 622, 620, 623, 1160, 624, 0, 0, 625, 626,
	627, 684, 1183, 1220, 0, 629, 628, 630, 687, 0,
	631, 0, 0, 0, 0, 632, 633, 688, 634, 635,
	636, 1096, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1091, 0, 0, 0, 0, 0,
	0, 1089, 1090, 0, 0, 0, 0, 0, 0, 0,
	1122, 2640, 0, 2639, 1120, 1138, 1110, 1111, 1112, 1108,
	1109, 1121, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 1162, 1126, 0,
	0, 0, 289, 290, 1202, 291, 292, 293, 294, 295,
	296, 638, 1175, 0, 297, 1182, 298, 1181, 0, 1192,
	299, 300, 301, 302, 303, 304, 1128, 1161, 1093, 305,
	1222, 1223, 645, 0, 306, 307, 1168, 0, 1149, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1203, 330, 331,
	332, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 333, 334,
	335, 336, 337, 1185, 338, 340, 1179, 1178, 1098, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1170, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1104, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1193, 1194, 370, 1117,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1177,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1204, 378, 379, 380, 1190, 1191, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1200, 0, 1127,
	391, 0, 392, 393, 394, 395, 396, 1163, 1164, 1167,
	476, 1206, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1205,
	407, 1172, 1173, 0, 1133, 0, 409, 410, 1207, 1165,
	1208, 411, 412, 413, 1209, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1201, 1210, 425, 426, 1211, 0, 427, 0, 0,
	0, 428, 429, 432, 1156, 1155, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 466,
	468, 469, 464, 465, 467, 470, 471, 462, 463, 1213,
	472, 461, 1095, 279, 1214, 473, 474, 1118, 1166, 475,
	1180, 477, 478, 0, 0, 479, 0, 0, 0, 481,
	482, 483, 0, 0, 484, 485, 667, 1215, 486, 1216,
	1195, 487, 488, 1105, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 498, 499, 669, 500, 501, 502,
	670, 503, 504, 505, 1196, 506, 672, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 517,
	1176, 518, 519, 521, 520, 522, 0, 523, 0, 524,
	525, 526, 0, 0, 0, 0, 0, 527, 0, 529,
	530, 531, 532, 528, 533, 534, 535, 536, 537, 0,
	538, 539, 540, 1217, 541, 542, 543, 544, 545, 1106,
	546, 0, 547, 548, 554, 555, 556, 549, 550, 557,
	558, 559, 560, 561, 0, 563, 564, 562, 565, 566,
	567, 1159, 568, 569, 551, 552, 570, 571, 1218, 572,
	573, 574, 575, 576, 577, 578, 1174, 0, 579, 0,
	580, 581, 582, 584, 553, 585, 590, 591, 1221, 586,
	587, 588, 589, 1197, 593, 594, 0, 595, 596, 1092,
	592, 583, 0, 597, 598, 599, 600, 601, 602, 603,
	364, 604, 0, 605, 1186, 1187, 1188, 1189, 0, 614,
	0, 606, 607, 608, 1198, 609, 1199, 1116, 610, 611,
	612, 613, 0, 615, 616, 0, 1099, 617, 618, 619,
	621, 622, 620, 623, 1160, 624, 0, 0, 625, 626,
	627, 684, 1183, 1220, 0, 629, 628, 630, 687, 0,
	631, 0, 0, 0, 0, 632, 633, 688, 634, 635,
	636, 1096, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1091, 0, 0, 0, 0, 0,
	0, 1089, 1090, 0, 0, 0, 0, 0, 0, 0,
	1122, 2637, 0, 2636, 1120, 1138, 1110, 1111, 1112, 1108,
	1109, 1121, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 1162, 1126, 0,
	0, 0, 289, 290, 1202, 291, 292, 293, 294, 295,
	296, 638, 1175, 0, 297, 1182, 298, 1181, 0, 1192,
	299, 300, 301, 302, 303, 304, 1128, 1161, 1093, 305,
	1222, 1223, 645, 0, 306, 307, 1168, 0, 1149, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1203, 330, 331,
	332, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 333, 334,
	335, 336, 337, 1185, 338, 340, 1179, 1178, 1098, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1170, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1104, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1193, 1194, 370, 1117,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1177,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1204, 378, 379, 380, 1190, 1191, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1200, 0, 1127,
	391, 0, 392, 393, 394, 395, 396, 1163, 1164, 1167,
	476, 1206, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1205,
	407, 1172, 1173, 0, 1133, 0, 409, 410, 1207, 1165,
	1208, 411, 412, 413, 1209, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1201, 1210, 425, 426, 1211, 0, 427, 0, 0,
	0, 428, 429, 432, 1156, 1155, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 466,
	468, 469, 464, 465, 467, 470, 471, 462, 463, 1213,
	472, 461, 1095, 279, 1214, 473, 474, 1118, 1166, 475,
	1180, 477, 478, 0, 0, 479, 0, 0, 0, 481,
	482, 483, 0, 0, 484, 485, 667, 1215, 486, 1216,
	1195, 487, 488, 1105, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 498, 499, 669, 500, 501, 502,
	670, 503, 504, 505, 1196, 506, 672, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 517,
	1176, 518, 519, 521, 520, 522, 0, 523, 0, 524,
	525, 526, 0, 0, 0, 0, 0, 527, 0, 529,
	530, 531, 532, 528, 533, 534, 535, 536, 537, 0,
	538, 539, 540, 1217, 541, 542, 543, 544, 545, 1106,
	546, 0, 547, 548, 554, 555, 556, 549, 550, 557,
	558, 559, 560, 561, 0, 563, 564, 562, 565, 566,
	567, 1159, 568, 569, 551, 552, 570, 571, 1218, 572,
	573, 574, 575, 576, 577, 578, 1174, 0, 579, 0,
	580, 581, 582, 584, 553, 585, 590, 591, 1221, 586,
	587, 588, 589, 1197, 593, 594, 0, 595, 596, 1092,
	592, 583, 0, 597, 598, 599, 600, 601, 602, 603,
	364, 604, 0, 605, 1186, 1187, 1188, 1189, 0, 614,
	0, 606, 607, 608, 1198, 609, 1199, 1116, 610, 611,
	612, 613, 0, 615, 616, 0, 1099, 617, 618, 619,
	621, 622, 620, 623, 1160, 624, 0, 0, 625, 626,
	627, 684, 1183, 1220, 0, 629, 628, 630, 687, 0,
	631, 0, 0, 0, 0, 632, 633, 688, 634, 635,
	636, 1096, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1091, 0, 0, 0, 0, 0,
	0, 1089, 1090, 0, 0, 0, 0, 0, 0, 0,
	1122, 2634, 0, 1727, 1120, 1138, 1110, 1111, 1112, 1108,
	1109, 1121, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 1162, 1126, 0,
	0, 0, 289, 290, 1202, 291, 292, 293, 294, 295,
	296, 638, 1175, 0, 297, 1182, 298, 1181, 0, 1192,
	299, 300, 301, 302, 303, 304, 1128, 1161, 1093, 305,
	1222, 1223, 645, 0, 306, 307, 1168, 0, 1149, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1203, 330, 331,
	332, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 333, 334,
	335, 336, 337, 1185, 338, 340, 1179, 1178, 1098, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1170, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1104, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1193, 1194, 370, 1117,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1177,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1204, 378, 379, 380, 1190, 1191, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1200, 0, 1127,
	391, 0, 392, 393, 394, 395, 396, 1163, 1164, 1167,
	476, 1206, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1205,
	407, 1172, 1173, 0, 1133, 0, 409, 410, 1207, 1165,
	1208, 411, 412, 413, 1209, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1201, 1210, 425, 426, 1211, 0, 427, 0, 0,
	0, 428, 429, 432, 1156, 1155, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 466,
	468, 469, 464, 465, 467, 470, 471, 462, 463, 1213,
	472, 461, 1095, 279, 1214, 473, 474, 1118, 1166, 475,
	1180, 477, 478, 0, 0, 479, 0, 0, 0, 481,
	482, 483, 0, 0, 484, 485, 667, 1215, 486, 1216,
	1195, 487, 488, 1105, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 498, 499, 669, 500, 501, 502,
	670, 503, 504, 505, 1196, 506, 672, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 517,
	1176, 518, 519, 521, 520, 522, 0, 523, 0, 524,
	525, 526, 0, 0, 0, 0, 0, 527, 0, 529,
	530, 531, 532, 528, 533, 534, 535, 536, 537, 0,
	538, 539, 540, 1217, 541, 542, 543, 544, 545, 1106,
	546, 0, 547, 548, 554, 555, 556, 549, 550, 557,
	558, 559, 560, 561, 0, 563, 564, 562, 565, 566,
	567, 1159, 568, 569, 551, 552, 570, 571, 1218, 572,
	573, 574, 575, 576, 577, 578, 1174, 0, 579, 0,
	580, 581, 582, 584, 553, 585, 590, 591, 1221, 586,
	587, 588, 589, 1197, 593, 594, 0, 595, 596, 1092,
	592, 583, 0, 597, 598, 599, 600, 601, 602, 603,
	364, 604, 0, 605, 1186, 1187, 1188, 1189, 0, 614,
	0, 606, 607, 608, 1198, 609, 1199, 1116, 610, 611,
	612, 613, 0, 615, 616, 0, 1099, 617, 618, 619,
	621, 622, 620, 623, 1160, 624, 0, 0, 625, 626,
	627, 684, 1183, 1220, 0, 629, 628, 630, 687, 0,
	631, 1726, 0, 0, 0, 632, 633, 688, 634, 635,
	636, 1096, 0, 0, 1085, 0, 1138, 1110, 1111, 1112,
	1108, 1109, 1121, 0, 1091, 0, 0, 0, 0, 0,
	0, 1089, 1090, 280, 282, 281, 283, 284, 285, 286,
	1122, 287, 288, 0, 1120, 0, 0, 0, 1162, 1126,
	0, 0, 0, 289, 290, 1202, 291, 292, 293, 294,
	295, 296, 638, 1175, 0, 297, 1182, 298, 1181, 0,
	1192, 299, 300, 301, 302, 303, 304, 1128, 1161, 1093,
	305, 1222, 1223, 645, 0, 306, 307, 1168, 0, 1149,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1203, 330,
	331, 332, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 333,
	334, 335, 336, 337, 1185, 338, 340, 1179, 1178, 1098,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1170, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1104, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1193, 1194, 370,
	1117, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1177, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1204, 378, 379, 380, 1190, 1191, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1200, 0,
	1127, 391, 0, 392, 393, 394, 395, 396, 1163, 1164,
	1167, 476, 1206, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1205, 407, 1172, 1173, 0, 1133, 0, 409, 410, 1207,
	1165, 1208, 411, 412, 413, 1209, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1201, 1210, 425, 426, 1211, 0, 427, 0,
	0, 0, 428, 429, 432, 1156, 1155, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1212, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	1213, 472, 461, 1095, 279, 1214, 473, 474, 1118, 1166,
	475, 1180, 477, 478, 0, 0, 479, 0, 1100, 0,
	481, 482, 483, 0, 0, 484, 485, 667, 1215, 486,
	1216, 1195, 487, 488, 1105, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 1196, 506, 672, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 1176, 518, 519, 521, 520, 522, 0, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	0, 538, 539, 540, 1217, 541, 542, 543, 544, 545,
	1106, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 0, 563, 564, 562, 565,
	566, 567, 1159, 568, 569, 551, 552, 570, 571, 1218,
	572, 573, 574, 575, 576, 577, 578, 1174, 0, 579,
	0, 580, 581, 582, 584, 553, 585, 590, 591, 1221,
	586, 587, 588, 589, 1197, 593, 594, 0, 595, 596,
	1092, 592, 583, 0, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 0, 605, 1186, 1187, 1188, 1189, 0,
	614, 0, 606, 607, 608, 1198, 609, 1199, 1116, 610,
	611, 612, 613, 0, 615, 616, 0, 1099, 617, 618,
	619, 621, 622, 620, 623, 1160, 624, 0, 0, 625,
	626, 627, 684, 1183, 1220, 0, 629, 628, 630, 687,
	0, 631, 0, 0, 0, 0, 632, 633, 688, 634,
	635, 636, 1096, 0, 0, 0, 0, 1138, 1110, 1111,
	1112, 1108, 1109, 1121, 0, 1091, 0, 0, 0, 0,
	0, 0, 1089, 1090, 280, 282, 281, 283, 284, 285,
	286, 1122, 287, 288, 0, 1120, 0, 0, 0, 1162,
	1126, 0, 0, 0, 289, 290, 1202, 291, 292, 293,
	294, 295, 296, 638, 1175, 0, 297, 1182, 298, 1181,
	0, 1192, 299, 300, 301, 302, 303, 304, 1128, 1161,
	1093, 305, 1222, 1223, 645, 0, 306, 307, 1168, 0,
	1149, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 4708, 326, 0, 327, 328, 329, 1203,
	330, 331, 332, 1152, 1150, 1151, 1158, 1154, 1153, 1157,
	333, 334, 335, 336, 337, 1185, 338, 340, 1179, 1178,
	1098, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1170, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1104, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1193, 1194,
	370, 1117, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1177, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1204, 378, 379, 380, 1190, 1191, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1200,
	0, 1127, 391, 0, 392, 393, 394, 395, 396, 1163,
	1164, 1167, 476, 1206, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1205, 407, 1172, 1173, 0, 1133, 0, 409, 410,
	1207, 1165, 1208, 411, 412, 413, 1209, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1201, 1210, 425, 426, 1211, 0, 427,
	0, 0, 0, 428, 429, 432, 1156, 1155, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1212, 458, 459,
	460, 466, 468, 469, 464, 465, 467, 470, 471, 462,
	463, 1213, 472, 461, 1095, 279, 1214, 473, 474, 1118,
	1166, 475, 1180, 477, 478, 0, 0, 479, 0, 1100,
	0, 481, 482, 483, 0, 0, 484, 485, 667, 1215,
	486, 1216, 1195, 487, 488, 1105, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 0, 498, 499, 669, 500,
	501, 502, 670, 503, 504, 505, 1196, 506, 672, 507,
	508, 0, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 517, 1176, 518, 519, 521, 520, 522, 0, 523,
	0, 524, 525, 526, 0, 0, 0, 0, 0, 527,
	0, 529, 530, 531, 532, 528, 533, 534, 535, 536,
	537, 0, 538, 539, 540, 1217, 541, 542, 543, 544,
	545, 1106, 546, 0, 547, 548, 554, 555, 556, 549,
	550, 557, 558, 559, 560, 561, 0, 563, 564, 562,
	565, 566, 567, 1159, 568, 569, 551, 552, 570, 571,
	1218, 572, 573, 574, 575, 576, 577, 578, 1174, 0,
	579, 0, 580, 581, 582, 584, 553, 585, 590, 591,
	1221, 586, 587, 588, 589, 1197, 593, 594, 0, 595,
	596, 1092, 592, 583, 0, 597, 598, 599, 600, 601,
	602, 603, 364, 604, 0, 605, 1186, 1187, 1188, 1189,
	0, 614, 0, 606, 607, 608, 1198, 609, 1199, 1116,
	610, 611, 612, 613, 0, 615, 616, 0, 1099, 617,
	618, 619, 621, 622, 620, 623, 1160, 624, 0, 0,
	625, 626, 627, 684, 1183, 1220, 0, 629, 628, 630,
	687, 0, 631, 0, 0, 0, 0, 632, 633, 688,
	634, 635, 636, 1096, 0, 0, 0, 0, 1138, 1110,
	1111, 1112, 1108, 1109, 1121, 0, 1091, 0, 0, 0,
	0, 0, 0, 1089, 1090, 280, 282, 281, 283, 284,
	285, 286, 1122, 287, 288, 0, 1120, 0, 0, 0,
	1162, 1126, 0, 0, 0, 289, 290, 1202, 291, 292,
	293, 294, 295, 296, 638, 1175, 0, 297, 1182, 298,
	1181, 0, 1192, 299, 300, 301, 302, 303, 304, 1128,
	1161, 1093, 305, 1222, 1223, 645, 0, 306, 307, 1168,
	0, 1149, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1203, 330, 331, 332, 1152, 1150, 1151, 1158, 1154, 1153,
	1157, 333, 334, 335, 336, 337, 1185, 338, 340, 1179,
	1178, 1098, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1170, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1104, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1193,
	1194, 370, 1117, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1177, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1204, 378, 379, 380, 1190, 1191, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1200, 0, 1127, 391, 0, 392, 393, 394, 395, 396,
	1163, 1164, 1167, 476, 1206, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 2477, 404, 405, 406,
	408, 0, 1205, 407, 1172, 1173, 0, 1133, 0, 409,
	410, 1207, 1165, 1208, 411, 412, 413, 1209, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1201, 1210, 425, 426, 1211, 0,
	427, 0, 0, 0, 428, 429, 432, 1156, 1155, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1212, 458,
	459, 460, 466, 468, 469, 464, 465, 467, 470, 471,
	462, 463, 1213, 472, 461, 1095, 279, 1214, 473, 474,
	1118, 1166, 475, 1180, 477, 478, 0, 0, 479, 0,
	0, 0, 481, 482, 483, 0, 0, 484, 485, 667,
	1215, 486, 1216, 1195, 487, 488, 1105, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 498, 499, 669,
	500, 501, 502, 670, 503, 504, 505, 1196, 506, 672,
	507, 508, 2476, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 517, 1176, 518, 519, 521, 520, 522, 0,
	523, 0, 524, 525, 526, 0, 0, 0, 0, 0,
	527, 0, 529, 530, 531, 532, 528, 533, 534, 535,
	536, 537, 0, 538, 539, 540, 1217, 541, 542, 543,
	544, 545, 1106, 546, 0, 547, 548, 554, 555, 556,
	549, 550, 557, 558, 559, 560, 561, 0, 563, 564,
	562, 565, 566, 567, 1159, 568, 569, 551, 552, 570,
	571, 1218, 572, 573, 574, 575, 576, 577, 578, 1174,
	0, 579, 0, 580, 581, 582, 584, 553, 585, 590,
	591, 1221, 586, 587, 588, 589, 1197, 593, 594, 0,
	595, 596, 1092, 592, 583, 0, 597, 598, 599, 600,
	601, 602, 603, 364, 604, 0, 605, 1186, 1187, 1188,
	1189, 0, 614, 0, 606, 607, 608, 1198, 609, 1199,
	1116, 610, 611, 612, 613, 0, 615, 616, 0, 1099,
	617, 618, 619, 621, 622, 620, 623, 1160, 624, 0,
	0, 625, 626, 627, 684, 1183, 1220, 0, 629, 628,
	630, 687, 0, 631, 0, 0, 0, 0, 632, 633,
	688, 634, 635, 636, 1096, 0, 0, 0, 0, 1138,
	1110, 1111, 1112, 1108, 1109, 1121, 0, 1091, 0, 0,
	0, 0, 0, 0, 1089, 1090, 280, 282, 281, 283,
	284, 285, 286, 1122, 287, 288, 0, 1120, 0, 0,
	0, 1162, 1126, 0, 0, 0, 289, 290, 1202, 291,
	292, 293, 294, 295, 296, 638, 1175, 0, 297, 1182,
	298, 1181, 0, 1192, 299, 300, 301, 302, 303, 304,
	1128, 1161, 1093, 305, 1222, 1223, 645, 0, 306, 307,
	1168, 0, 1149, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1203, 330, 331, 332, 1152, 1150, 1151, 1158, 1154,
	1153, 1157, 333, 334, 335, 336, 337, 1185, 338, 340,
	1179, 1178, 1098, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1170, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1104,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1193, 1194, 370, 1117, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1177, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1204, 378, 379, 380, 1190, 1191,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1200, 0, 1127, 391, 0, 392, 393, 394, 395,
	396, 1163, 1164, 1167, 476, 1206, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1205, 407, 1172, 1173, 0, 1133, 0,
	409, 410, 1207, 1165, 1208, 411, 412, 413, 1209, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1201, 1210, 425, 426, 1211,
	0, 427, 0, 0, 0, 428, 429, 432, 1156, 1155,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1212,
	458, 459, 460, 466, 468, 469, 464, 465, 467, 470,
	471, 462, 463, 1213, 472, 461, 1095, 279, 1214, 473,
	474, 1118, 1166, 475, 1180, 477, 478, 0, 0, 479,
	0, 1100, 0, 481, 482, 483, 0, 0, 484, 485,
	667, 1215, 486, 1216, 1195, 487, 488, 1105, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 0, 498, 499,
	669, 500, 501, 502, 670, 503, 504, 505, 1196, 506,
	672, 507, 508, 0, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 517, 1176, 518, 519, 521, 520, 522,
	0, 523, 0, 524, 525, 526, 0, 0, 0, 0,
	0, 527, 0, 529, 530, 531, 532, 528, 533, 534,
	535, 536, 537, 0, 538, 539, 540, 1217, 541, 542,
	543, 544, 545, 1106, 546, 0, 547, 548, 554, 555,
	556, 549, 550, 557, 558, 559, 560, 561, 0, 563,
	564, 562, 565, 566, 567, 1159, 568, 569, 551, 552,
	570, 571, 1218, 572, 573, 574, 575, 576, 577, 578,
	1174, 0, 579, 0, 580, 581, 582, 584, 553, 585,
	590, 591, 1221, 586, 587, 588, 589, 1197, 593, 594,
	0, 595, 596, 1092, 592, 583, 0, 597, 598, 599,
	600, 601, 602, 603, 364, 604, 0, 605, 1186, 1187,
	1188, 1189, 0, 614, 0, 606, 607, 608, 1198, 609,
	1199, 1116, 610, 611, 612, 613, 0, 615, 616, 0,
	1099, 617, 618, 619, 621, 622, 620, 623, 1160, 624,
	0, 0, 625, 626, 627, 684, 1183, 1220, 0, 629,
	628, 630, 687, 0, 631, 0, 0, 0, 0, 632,
	633, 688, 634, 635, 636, 1096, 0, 0, 0, 0,
	1138, 1110, 1111, 1112, 1108, 1109, 1121, 0, 1091, 0,
	0, 0, 0, 0, 0, 1089, 1090, 280, 282, 281,
	283, 284, 285, 286, 1122, 287, 288, 0, 1120, 0,
	0, 0, 1162, 1126, 0, 0, 0, 289, 290, 1202,
	291, 292, 293, 294, 295, 296, 638, 1175, 0, 297,
	1182, 298, 1181, 0, 1192, 299, 300, 301, 302, 303,
	304, 1128, 1161, 1093, 305, 1222, 1223, 645, 0, 306,
	307, 1168, 0, 1149, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 4443, 326, 0, 327,
	328, 329, 1203, 330, 331, 332, 1152, 1150, 1151, 1158,
	1154, 1153, 1157, 333, 334, 335, 336, 337, 1185, 338,
	340, 1179, 1178, 1098, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1170, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1104, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1193, 1194, 370, 1117, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1177, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1204, 378, 379, 380, 1190,
	1191, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1200, 0, 1127, 391, 0, 392, 393, 394,
	395, 396, 1163, 1164, 1167, 476, 1206, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1205, 407, 1172, 1173, 0, 1133,
	0, 409, 410, 1207, 1165, 1208, 411, 412, 413, 1209,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1201, 1210, 425, 426,
	1211, 0, 427, 0, 0, 0, 428, 429, 432, 1156,
	1155, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1212, 458, 459, 460, 466, 468, 469, 464, 465, 467,
	470, 471, 462, 463, 1213, 472, 461, 1095, 279, 1214,
	473, 474, 1118, 1166, 475, 1180, 477, 478, 0, 0,
	479, 0, 1100, 0, 481, 482, 483, 0, 0, 484,
	485, 667, 1215, 486, 1216, 1195, 487, 488, 1105, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 498,
	499, 669, 500, 501, 502, 670, 503, 504, 505, 1196,
	506, 672, 507, 508, 0, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 517, 1176, 518, 519, 521, 520,
	522, 0, 523, 0, 524, 525, 526, 0, 0, 0,
	0, 0, 527, 0, 529, 530, 531, 532, 528, 533,
	534, 535, 536, 537, 0, 538, 539, 540, 1217, 541,
	542, 543, 544, 545, 1106, 546, 0, 547, 548, 554,
	555, 556, 549, 550, 557, 558, 559, 560, 561, 0,
	563, 564, 562, 565, 566, 567, 1159, 568, 569, 551,
	552, 570, 571, 1218, 572, 573, 574, 575, 576, 577,
	578, 1174, 0, 579, 0, 580, 581, 582, 584, 553,
	585, 590, 591, 1221, 586, 587, 588, 589, 1197, 593,
	594, 0, 595, 596, 1092, 592, 583, 0, 597, 598,
	599, 600, 601, 602, 603, 364, 604, 0, 605, 1186,
	1187, 1188, 1189, 0, 614, 0, 606, 607, 608, 1198,
	609, 1199, 1116, 610, 611, 612, 613, 0, 615, 616,
	0, 1099, 617, 618, 619, 621, 622, 620, 623, 1160,
	624, 0, 0, 625, 626, 627, 684, 1183, 1220, 0,
	629, 628, 630, 687, 0, 631, 0, 0, 0, 0,
	632, 633, 688, 634, 635, 636, 1096, 0, 0, 0,
	0, 1138, 1110, 1111, 1112, 1108, 1109, 1121, 0, 1091,
	0, 0, 0, 0, 0, 0, 1089, 1090, 280, 282,
	281, 283, 284, 285, 286, 1122, 287, 288, 0, 1120,
	0, 0, 0, 1162, 1126, 0, 0, 0, 289, 290,
	1202, 291, 292, 293, 294, 295, 296, 638, 1175, 0,
	297, 1182, 298, 1181, 0, 1192, 299, 300, 301, 302,
	303, 304, 1128, 1161, 1093, 305, 1222, 1223, 645, 0,
	306, 307, 1168, 0, 1149, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1203, 330, 331, 332, 1152, 1150, 1151,
	1158, 1154, 1153, 1157, 333, 334, 335, 336, 337, 1185,
	338, 340, 1179, 1178, 1098, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1170,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1104, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1193, 1194, 370, 1117, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1177, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1204, 378, 379, 380,
	1190, 1191, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1200, 0, 1127, 391, 0, 392, 393,
	394, 395, 396, 1163, 1164, 1167, 476, 1206, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1205, 407, 1172, 1173, 0,
	1133, 0, 409, 410, 1207, 1165, 1208, 411, 412, 413,
	1209, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1201, 1210, 425,
	426, 1211, 0, 427, 0, 0, 0, 428, 429, 432,
	1156, 1155, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1212, 458, 459, 460, 466, 468, 469, 464, 465,
	467, 470, 471, 462, 463, 1213, 472, 461, 1095, 4035,
	1214, 473, 474, 1118, 1166, 475, 1180, 477, 478, 0,
	0, 479, 0, 0, 0, 481, 482, 483, 0, 0,
	484, 485, 667, 1215, 486, 1216, 1195, 487, 488, 1105,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 0,
	498, 499, 669, 500, 501, 502, 670, 503, 504, 505,
	1196, 506, 672, 507, 508, 0, 509, 510, 0, 511,
	512, 513, 514, 515, 516, 517, 1176, 518, 519, 521,
	520, 522, 0, 523, 0, 524, 525, 526, 0, 0,
	0, 0, 0, 527, 0, 529, 530, 531, 532, 528,
	533, 534, 535, 536, 537, 0, 538, 539, 540, 1217,
	541, 542, 543, 544, 545, 1106, 546, 0, 547, 548,
	554, 555, 556, 549, 550, 557, 558, 559, 560, 561,
	0, 563, 564, 562, 565, 566, 567, 1159, 568, 569,
	551, 552, 570, 571, 1218, 572, 573, 574, 575, 576,
	577, 578, 1174, 0, 579, 0, 580, 581, 582, 584,
	553, 585, 590, 591, 1221, 586, 587, 588, 589, 1197,
	593, 594, 0, 595, 596, 1092, 592, 583, 0, 597,
	598, 599, 600, 601, 602, 603, 364, 604, 0, 605,
	1186, 1187, 1188, 1189, 0, 614, 0, 606, 607, 608,
	1198, 609, 1199, 1116, 610, 611, 612, 613, 0, 615,
	616, 0, 1099, 617, 618, 619, 621, 622, 620, 623,
	1160, 624, 0, 0, 625, 626, 627, 684, 1183, 1220,
	0, 629, 628, 630, 687, 0, 631, 0, 0, 0,
	0, 632, 633, 688, 634, 635, 636, 1096, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1091, 0, 0, 0, 0, 0, 0, 1089, 1090, 1955,
	0, 0, 0, 0, 0, 0, 1122, 0, 0, 0,
	1120, 1138, 1110, 1111, 1112, 1108, 1109, 1121, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 1162, 1126, 0, 0, 0, 289, 290,
	1202, 291, 292, 293, 294, 295, 296, 638, 1175, 0,
	297, 1182, 298, 1181, 0, 1192, 299, 300, 301, 302,
	303, 304, 1128, 1161, 1093, 305, 1222, 1223, 645, 0,
	306, 307, 1168, 0, 1149, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1203, 330, 331, 332, 1152, 1150, 1151,
	1158, 1154, 1153, 1157, 333, 334, 335, 336, 337, 1185,
	338, 340, 1179, 1178, 1098, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1170,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1104, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1193, 1194, 370, 1117, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1177, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1204, 378, 379, 380,
	1190, 1191, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1200, 0, 1127, 391, 0, 392, 393,
	394, 395, 396, 1163, 1164, 1167, 476, 1206, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1205, 407, 1172, 1173, 0,
	1133, 0, 409, 410, 1207, 1165, 1208, 411, 412, 413,
	1209, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1201, 1210, 425,
	426, 1211, 0, 427, 0, 0, 0, 428, 429, 432,
	1156, 1155, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1212, 458, 459, 460, 466, 468, 469, 464, 465,
	467, 470, 471, 462, 463, 1213, 472, 461, 1095, 279,
	1214, 473, 474, 1118, 1166, 475, 1180, 477, 478, 0,
	0, 479, 0, 0, 0, 481, 482, 483, 0, 0,
	484, 485, 667, 1215, 486, 1216, 1195, 487, 488, 1105,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 0,
	498, 499, 669, 500, 501, 502, 670, 503, 504, 505,
	1196, 506, 672, 507, 508, 0, 509, 510, 0, 511,
	512, 513, 514, 515, 516, 517, 1176, 518, 519, 521,
	520, 522, 0, 523, 0, 524, 525, 526, 0, 0,
	0, 0, 0, 527, 0, 529, 530, 531, 532, 528,
	533, 534, 535, 536, 537, 0, 538, 539, 540, 1217,
	541, 542, 543, 544, 545, 1106, 546, 0, 547, 548,
	554, 555, 556, 549, 550, 557, 558, 559, 560, 561,
	0, 563, 564, 562, 565, 566, 567, 1159, 568, 569,
	551, 552, 570, 571, 1218, 572, 573, 574, 575, 576,
	577, 578, 1174, 0, 579, 0, 580, 581, 582, 584,
	553, 585, 590, 591, 1221, 586, 587, 588, 589, 1197,
	593, 594, 0, 595, 596, 1092, 592, 583, 0, 597,
	598, 599, 600, 601, 602, 603, 364, 604, 0, 605,
	1186, 1187, 1188, 1189, 0, 614, 0, 606, 607, 608,
	1198, 609, 1199, 1116, 610, 611, 612, 613, 0, 615,
	616, 0, 1099, 617, 618, 619, 621, 622, 620, 623,
	1160, 624, 0, 0, 625, 626, 627, 684, 1183, 1220,
	3747, 629, 628, 630, 687, 0, 631, 0, 0, 0,
	0, 632, 633, 688, 634, 635, 636, 1096, 0, 0,
	0, 0, 1138, 1110, 1111, 1112, 1108, 1109, 1121, 0,
	1091, 0, 0, 0, 0, 0, 0, 1089, 1090, 280,
	282, 281, 283, 284, 285, 286, 1122, 287, 288, 0,
	1120, 0, 0, 0, 1162, 1126, 0, 0, 0, 289,
	290, 1202, 291, 292, 293, 294, 295, 296, 638, 1175,
	0, 297, 1182, 298, 1181, 0, 1192, 299, 300, 301,
	302, 303, 304, 1128, 1161, 1093, 305, 1222, 1223, 645,
	0, 306, 307, 1168, 0, 1149, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1203, 330, 331, 332, 1152, 1150,
	1151, 1158, 1154, 1153, 1157, 333, 334, 335, 336, 337,
	1185, 338, 340, 1179, 1178, 1098, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1170, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1104, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1193, 1194, 370, 1117, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1177, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1204, 378, 379,
	380, 1190, 1191, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1200, 0, 1127, 391, 0, 392,
	393, 394, 395, 396, 1163, 1164, 1167, 476, 1206, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1205, 407, 1172, 1173,
	0, 1133, 0, 409, 410, 1207, 1165, 1208, 411, 412,
	413, 1209, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1201, 1210,
	425, 426, 1211, 0, 427, 0, 0, 0, 428, 429,
	432, 1156, 1155, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1212, 458, 459, 460, 466, 468, 469, 464,
	465, 467, 470, 471, 462, 463, 1213, 472, 461, 1095,
	279, 1214, 473, 474, 1118, 1166, 475, 1180, 477, 478,
	0, 0, 479, 0, 0, 0, 481, 482, 483, 0,
	0, 484, 485, 667, 1215, 486, 1216, 1195, 487, 488,
	1105, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 498, 499, 669, 500, 501, 502, 670, 503, 504,
	505, 1196, 506, 672, 507, 508, 0, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 517, 1176, 518, 519,
	521, 520, 522, 0, 523, 0, 524, 525, 526, 0,
	0, 0, 0, 0, 527, 0, 529, 530, 531, 532,
	528, 533, 534, 535, 536, 537, 0, 538, 539, 540,
	1217, 541, 542, 543, 544, 545, 1106, 546, 0, 547,
	548, 554, 555, 556, 549, 550, 557, 558, 559, 560,
	561, 0, 563, 564, 562, 565, 566, 567, 1159, 568,
	569, 551, 552, 570, 571, 1218, 572, 573, 574, 575,
	576, 577, 578, 1174, 0, 579, 0, 580, 581, 582,
	584, 553, 585, 590, 591, 1221, 586, 587, 588, 589,
	1197, 593, 594, 0, 595, 596, 1092, 592, 583, 0,
	597, 598, 599, 600, 601, 602, 603, 364, 604, 0,
	605, 1186, 1187, 1188, 1189, 0, 614, 0, 606, 607,
	608, 1198, 609, 1199, 1116, 610, 611, 612, 613, 0,
	615, 616, 0, 1099, 617, 618, 619, 621, 622, 620,
	623, 1160, 624, 0, 0, 625, 626, 627, 684, 1183,
	1220, 0, 629, 628, 630, 687, 0, 631, 0, 0,
	0, 0, 632, 633, 688, 634, 635, 636, 1096, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1091, 0, 0, 0, 0, 0, 0, 1089, 1090,
	1955, 0, 0, 0, 0, 0, 0, 1122, 0, 0,
	0, 1120, 1138, 1110, 1111, 1112, 1108, 1109, 1121, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 1162, 1126, 0, 0, 0, 289,
	290, 1202, 291, 292, 293, 294, 295, 296, 638, 1175,
	0, 297, 1182, 298, 1181, 0, 1192, 299, 300, 301,
	302, 303, 304, 1128, 1161, 1093, 305, 1222, 1223, 645,
	0, 306, 307, 1168, 0, 1149, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1203, 330, 331, 332, 1152, 1150,
	1151, 1158, 1154, 1153, 1157, 333, 334, 335, 336, 337,
	1185, 338, 340, 1179, 1178, 1098, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1170, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1104, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1193, 1194, 370, 1117, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1177, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 2736, 1204, 378, 379,
	380, 1190, 1191, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1200, 0, 1127, 391, 0, 392,
	393, 394, 395, 396, 1163, 1164, 1167, 476, 1206, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1205, 407, 1172, 1173,
	0, 1133, 0, 409, 410, 1207, 1165, 1208, 411, 412,
	413, 1209, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1201, 1210,
	425, 426, 1211, 0, 427, 0, 0, 0, 428, 429,
	432, 1156, 1155, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1212, 458, 459, 460, 466, 468, 469, 464,
	465, 467, 470, 471, 462, 463, 1213, 472, 461, 1095,
	279, 1214, 473, 474, 1118, 1166, 475, 1180, 477, 478,
	0, 0, 479, 0, 0, 0, 481, 482, 483, 0,
	0, 484, 485, 667, 1215, 486, 1216, 1195, 487, 488,
	1105, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 498, 499, 669, 500, 501, 502, 670, 503, 504,
	505, 1196, 506, 672, 507, 508, 0, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 517, 1176, 518, 519,
	521, 520, 522, 0, 523, 0, 524, 525, 526, 0,
	0, 0, 0, 0, 527, 0, 529, 530, 531, 532,
	528, 533, 534, 535, 536, 537, 0, 538, 539, 540,
	1217, 541, 542, 543, 544, 545, 1106, 546, 0, 547,
	548, 554, 555, 556, 549, 550, 557, 558, 559, 560,
	561, 0, 563, 564, 562, 565, 566, 567, 1159, 568,
	569, 551, 552, 570, 571, 1218, 572, 573, 574, 575,
	576, 577, 578, 1174, 0, 579, 0, 580, 581, 582,
	584, 553, 585, 590, 591, 1221, 586, 587, 588, 589,
	1197, 593, 594, 0, 595, 596, 1092, 592, 583, 0,
	597, 598, 599, 600, 601, 602, 603, 364, 604, 0,
	605, 1186, 1187, 1188, 1189, 0, 614, 0, 606, 607,
	608, 1198, 609, 1199, 1116, 610, 611, 612, 613, 0,
	615, 616, 0, 1099, 617, 618, 619, 621, 622, 620,
	623, 1160, 624, 0, 0, 625, 626, 627, 684, 1183,
	1220, 0, 629, 628, 630, 687, 0, 631, 0, 0,
	0, 0, 632, 633, 688, 634, 635, 636, 1096, 0,
	0, 0, 0, 1138, 1110, 1111, 1112, 1108, 1109, 1121,
	0, 1091, 0, 0, 0, 0, 0, 0, 1089, 1090,
	280, 282, 281, 283, 284, 285, 286, 1122, 287, 288,
	0, 1120, 0, 0, 0, 1162, 1126, 0, 0, 0,
	289, 290, 1202, 291, 292, 293, 294, 295, 296, 638,
	1175, 0, 297, 1182, 298, 1181, 0, 1192, 299, 300,
	301, 302, 303, 304, 1128, 1161, 1093, 305, 1222, 1223,
	645, 0, 306, 307, 1168, 0, 1149, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1203, 330, 331, 332, 1152,
	1150, 1151, 1158, 1154, 1153, 1157, 333, 334, 335, 336,
	337, 1185, 338, 340, 1179, 1178, 1098, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1170, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1104, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1193, 1194, 370, 1117, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1177, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1204, 378,
	379, 380, 1190, 1191, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1200, 0, 1127, 391, 0,
	392, 393, 394, 395, 396, 1163, 1164, 1167, 476, 1206,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1205, 407, 1172,
	1173, 0, 1133, 0, 409, 410, 1207, 1165, 1208, 411,
	412, 413, 1209, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1201,
	1210, 425, 426, 1211, 0, 427, 0, 0, 0, 428,
	429, 432, 1156, 1155, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1212, 458, 459, 460, 466, 468, 469,
	464, 465, 467, 470, 471, 462, 463, 1213, 472, 461,
	1095, 279, 1214, 473, 474, 1118, 1166, 475, 1180, 477,
	478, 0, 0, 479, 0, 0, 0, 481, 482, 483,
	0, 0, 484, 485, 667, 1215, 486, 1216, 1195, 487,
	488, 1105, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 498, 499, 669, 500, 501, 502, 670, 503,
	504, 505, 1196, 506, 672, 507, 508, 0, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 517, 1176, 518,
	519, 521, 520, 522, 0, 523, 0, 524, 525, 526,
	0, 0, 0, 0, 0, 527, 0, 529, 530, 531,
	532, 528, 533, 534, 535, 536, 537, 0, 538, 539,
	540, 1217, 541, 542, 543, 544, 545, 1106, 546, 0,
	547, 548, 554, 555, 556, 549, 550, 557, 558, 559,
	560, 561, 0, 563, 564, 562, 565, 566, 567, 1159,
	568, 569, 551, 552, 570, 571, 1218, 572, 573, 574,
	575, 576, 577, 578, 1174, 0, 579, 0, 580, 581,
	582, 584, 553, 585, 590, 591, 1221, 586, 587, 588,
	589, 1197, 593, 594, 0, 595, 596, 1092, 592, 583,
	0, 597, 598, 599, 600, 601, 602, 603, 364, 604,
	0, 605, 1186, 1187, 1188, 1189, 0, 614, 0, 606,
	607, 608, 1198, 609, 1199, 1116, 610, 611, 612, 613,
	0, 615, 616, 0, 1099, 617, 618, 619, 621, 622,
	620, 623, 1160, 624, 0, 0, 625, 626, 627, 684,
	1183, 1220, 0, 629, 628, 630, 687, 0, 631, 0,
	0, 0, 0, 632, 633, 688, 634, 635, 636, 1096,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1091, 0, 0, 0, 0, 0, 0, 1089,
	1090, 0, 0, 0, 0, 0, 0, 0, 1122, 1884,
	0, 2741, 1120, 1138, 1110, 1111, 1112, 1108, 1109, 1121,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1162, 1126, 0, 0, 0,
	289, 290, 1202, 291, 292, 293, 294, 295, 296, 638,
	1175, 0, 297, 1182, 298, 1181, 0, 1192, 299, 300,
	301, 302, 303, 304, 1128, 1161, 1093, 305, 1222, 1223,
	645, 0, 306, 307, 1168, 0, 1149, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1203, 330, 331, 332, 1152,
	1150, 1151, 1158, 1154, 1153, 1157, 333, 334, 335, 336,
	337, 1185, 338, 340, 1179, 1178, 1098, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1170, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1104, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1193, 1194, 370, 1117, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1177, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1204, 378,
	379, 380, 1190, 1191, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1200, 0, 1127, 391, 0,
	392, 393, 394, 395, 396, 1163, 1164, 1167, 476, 1206,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1205, 407, 1172,
	1173, 0, 1133, 0, 409, 410, 1207, 1165, 1208, 411,
	412, 413, 1209, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1201,
	1210, 425, 426, 1211, 0, 427, 0, 0, 0, 428,
	429, 432, 1156, 1155, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1212, 458, 459, 460, 466, 468, 469,
	464, 465, 467, 470, 471, 462, 463, 1213, 472, 461,
	1095, 279, 1214, 473, 474, 1118, 1166, 475, 1180, 477,
	478, 0, 0, 479, 0, 0, 0, 481, 482, 483,
	0, 0, 484, 485, 667, 1215, 486, 1216, 1195, 487,
	488, 1105, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 498, 499, 669, 500, 501, 502, 670, 503,
	504, 505, 1196, 506, 672, 507, 508, 0, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 517, 1176, 518,
	519, 521, 520, 522, 0, 523, 0, 524, 525, 526,
	0, 0, 0, 0, 0, 527, 0, 529, 530, 531,
	532, 528, 533, 534, 535, 536, 537, 0, 538, 539,
	540, 1217, 541, 542, 543, 544, 545, 1106, 546, 0,
	547, 548, 554, 555, 556, 549, 550, 557, 558, 559,
	560, 561, 0, 563, 564, 562, 565, 566, 567, 1159,
	568, 569, 551, 552, 570, 571, 1218, 572, 573, 574,
	575, 576, 577, 578, 1174, 0, 579, 0, 580, 581,
	582, 584, 553, 585, 590, 591, 1221, 586, 587, 588,
	589, 1197, 593, 594, 0, 595, 596, 1092, 592, 583,
	0, 597, 598, 599, 600, 601, 602, 603, 364, 604,
	0, 605, 1186, 1187, 1188, 1189, 0, 614, 0, 606,
	607, 608, 1198, 609, 1199, 1116, 610, 611, 612, 613,
	0, 615, 616, 0, 1099, 617, 618, 619, 621, 622,
	620, 623, 1160, 624, 0, 0, 625, 626, 627, 684,
	1183, 1220, 0, 629, 628, 630, 687, 0, 631, 0,
	0, 0, 0, 632, 633, 688, 634, 635, 636, 1096,
	0, 0, 2739, 0, 1138, 1110, 1111, 1112, 1108, 1109,
	1121, 0, 1091, 0, 0, 0, 0, 0, 0, 1089,
	1090, 280, 282, 281, 283, 284, 285, 286, 1122, 287,
	288, 0, 1120, 0, 0, 0, 1162, 1126, 0, 0,
	0, 289, 290, 1202, 291, 292, 293, 294, 295, 296,
	638, 1175, 0, 297, 1182, 298, 1181, 0, 1192, 299,
	300, 301, 302, 303, 304, 1128, 1161, 1093, 305, 1222,
	1223, 645, 0, 306, 307, 1168, 0, 1149, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1203, 330, 331, 332,
	1152, 1150, 1151, 1158, 1154, 1153, 1157, 333, 334, 335,
	336, 337, 1185, 338, 340, 1179, 1178, 1098, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1170, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1104, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1193, 1194, 370, 1117, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1177, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1204,
	378, 379, 380, 1190, 1191, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1200, 0, 1127, 391,
	0, 392, 393, 394, 395, 396, 1163, 1164, 1167, 476,
	1206, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1205, 407,
	1172, 1173, 0, 1133, 0, 409, 410, 1207, 1165, 1208,
	411, 412, 413, 1209, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1201, 1210, 425, 426, 1211, 0, 427, 0, 0, 0,
	428, 429, 432, 1156, 1155, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1212, 458, 459, 460, 466, 468,
	469, 464, 465, 467, 470, 471, 462, 463, 1213, 472,
	461, 1095, 279, 1214, 473, 474, 1118, 1166, 475, 1180,
	477, 478, 0, 0, 479, 0, 0, 0, 481, 482,
	483, 0, 0, 484, 485, 667, 1215, 486, 1216, 1195,
	487, 488, 1105, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 498, 499, 669, 500, 501, 502, 670,
	503, 504, 505, 1196, 506, 672, 507, 508, 0, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 517, 1176,
	518, 519, 521, 520, 522, 0, 523, 0, 524, 525,
	526, 0, 0, 0, 0, 0, 527, 0, 529, 530,
	531, 532, 528, 533, 534, 535, 536, 537, 0, 538,
	539, 540, 1217, 541, 542, 543, 544, 545, 1106, 546,
	0, 547, 548, 554, 555, 556, 549, 550, 557, 558,
	559, 560, 561, 0, 563, 564, 562, 565, 566, 567,
	1159, 568, 569, 551, 552, 570, 571, 1218, 572, 573,
	574, 575, 576, 577, 578, 1174, 0, 579, 0, 580,
	581, 582, 584, 553, 585, 590, 591, 1221, 586, 587,
	588, 589, 1197, 593, 594, 0, 595, 596, 1092, 592,
	583, 0, 597, 598, 599, 600, 601, 602, 603, 364,
	604, 0, 605, 1186, 1187, 1188, 1189, 0, 614, 0,
	606, 607, 608, 1198, 609, 1199, 1116, 610, 611, 612,
	613, 0, 615, 616, 0, 1099, 617, 618, 619, 621,
	622, 620, 623, 1160, 624, 0, 0, 625, 626, 627,
	684, 1183, 1220, 0, 629, 628, 630, 687, 0, 631,
	0, 0, 0, 0, 632, 633, 688, 634, 635, 636,
	1096, 0, 0, 2727, 0, 1138, 1110, 1111, 1112, 1108,
	1109, 1121, 0, 1091, 0, 0, 0, 0, 0, 0,
	1089, 1090, 280, 282, 281, 283, 284, 285, 286, 1122,
	287, 288, 0, 1120, 0, 0, 0, 1162, 1126, 0,
	0, 0, 289, 290, 1202, 291, 292, 293, 294, 295,
	296, 638, 1175, 0, 297, 1182, 298, 1181, 0, 1192,
	299, 300, 301, 302, 303, 304, 1128, 1161, 1093, 305,
	1222, 1223, 645, 0, 306, 307, 1168, 0, 1149, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1203, 330, 331,
	332, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 333, 334,
	335, 336, 337, 1185, 338, 340, 1179, 1178, 1098, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1170, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1104, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1193, 1194, 370, 1117,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1177,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1204, 378, 379, 380, 1190, 1191, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1200, 0, 1127,
	391, 0, 392, 393, 394, 395, 396, 1163, 1164, 1167,
	476, 1206, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1205,
	407, 1172, 1173, 0, 1133, 0, 409, 410, 1207, 1165,
	1208, 411, 412, 413, 1209, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1201, 1210, 425, 426, 1211, 0, 427, 0, 0,
	0, 428, 429, 432, 1156, 1155, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 466,
	468, 469, 464, 465, 467, 470, 471, 462, 463, 1213,
	472, 461, 1095, 279, 1214, 473, 474, 1118, 1166, 475,
	1180, 477, 478, 0, 0, 479, 0, 0, 0, 481,
	482, 483, 0, 0, 484, 485, 667, 1215, 486, 1216,
	1195, 487, 488, 1105, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 498, 499, 669, 500, 501, 502,
	670, 503, 504, 505, 1196, 506, 672, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 517,
	1176, 518, 519, 521, 520, 522, 0, 523, 0, 524,
	525, 526, 0, 0, 0, 0, 0, 527, 0, 529,
	530, 531, 532, 528, 533, 534, 535, 536, 537, 0,
	538, 539, 540, 1217, 541, 542, 543, 544, 545, 1106,
	546, 0, 547, 548, 554, 555, 556, 549, 550, 557,
	558, 559, 560, 561, 0, 563, 564, 562, 565, 566,
	567, 1159, 568, 569, 551, 552, 570, 571, 1218, 572,
	573, 574, 575, 576, 577, 578, 1174, 0, 579, 0,
	580, 581, 582, 584, 553, 585, 590, 591, 1221, 586,
	587, 588, 589, 1197, 593, 594, 0, 595, 596, 1092,
	592, 583, 0, 597, 598, 599, 600, 601, 602, 603,
	364, 604, 0, 605, 1186, 1187, 1188, 1189, 0, 614,
	0, 606, 607, 608, 1198, 609, 1199, 1116, 610, 611,
	612, 613, 0, 615, 616, 0, 1099, 617, 618, 619,
	621, 622, 620, 623, 1160, 624, 0, 0, 625, 626,
	627, 684, 1183, 1220, 0, 629, 628, 630, 687, 0,
	631, 0, 0, 0, 0, 632, 633, 688, 634, 635,
	636, 1096, 0, 0, 2715, 0, 1138, 1110, 1111, 1112,
	1108, 1109, 1121, 0, 1091, 0, 0, 0, 0, 0,
	0, 1089, 1090, 280, 282, 281, 283, 284, 285, 286,
	1122, 287, 288, 0, 1120, 0, 0, 0, 1162, 1126,
	0, 0, 0, 289, 290, 1202, 291, 292, 293, 294,
	295, 296, 638, 1175, 0, 297, 1182, 298, 1181, 0,
	1192, 299, 300, 301, 302, 303, 304, 1128, 1161, 1093,
	305, 1222, 1223, 645, 0, 306, 307, 1168, 0, 1149,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1203, 330,
	331, 332, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 333,
	334, 335, 336, 337, 1185, 338, 340, 1179, 1178, 1098,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1170, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1104, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1193, 1194, 370,
	1117, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1177, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1204, 378, 379, 380, 1190, 1191, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1200, 0,
	1127, 391, 0, 392, 393, 394, 395, 396, 1163, 1164,
	1167, 476, 1206, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1205, 407, 1172, 1173, 0, 1133, 0, 409, 410, 1207,
	1165, 1208, 411, 412, 413, 1209, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1201, 1210, 425, 426, 1211, 0, 427, 0,
	0, 0, 428, 429, 432, 1156, 1155, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1212, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	1213, 472, 461, 1095, 279, 1214, 473, 474, 1118, 1166,
	475, 1180, 477, 478, 0, 0, 479, 0, 0, 0,
	481, 482, 483, 0, 0, 484, 485, 667, 1215, 486,
	1216, 1195, 487, 488, 1105, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 1196, 506, 672, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 1176, 518, 519, 521, 520, 522, 0, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	0, 538, 539, 540, 1217, 541, 542, 543, 544, 545,
	1106, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 0, 563, 564, 562, 565,
	566, 567, 1159, 568, 569, 551, 552, 570, 571, 1218,
	572, 573, 574, 575, 576, 577, 578, 1174, 0, 579,
	0, 580, 581, 582, 584, 553, 585, 590, 591, 1221,
	586, 587, 588, 589, 1197, 593, 594, 0, 595, 596,
	1092, 592, 583, 0, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 0, 605, 1186, 1187, 1188, 1189, 0,
	614, 0, 606, 607, 608, 1198, 609, 1199, 1116, 610,
	611, 612, 613, 0, 615, 616, 0, 1099, 617, 618,
	619, 621, 622, 620, 623, 1160, 624, 0, 0, 625,
	626, 627, 684, 1183, 1220, 0, 629, 628, 630, 687,
	0, 631, 0, 0, 0, 0, 632, 633, 688, 634,
	635, 636, 1096, 0, 0, 2713, 0, 2704, 2711, 1111,
	1112, 1108, 1109, 1121, 0, 1091, 0, 0, 0, 0,
	0, 0, 1089, 1090, 280, 282, 281, 283, 284, 285,
	286, 1122, 287, 288, 0, 1120, 0, 0, 0, 1162,
	1126, 0, 0, 0, 289, 290, 1202, 291, 292, 293,
	294, 295, 296, 638, 1175, 0, 297, 1182, 298, 1181,
	0, 1192, 299, 300, 301, 302, 303, 304, 1128, 1161,
	1093, 305, 1222, 1223, 645, 0, 306, 307, 1168, 0,
	1149, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1203,
	330, 331, 332, 1152, 1150, 1151, 1158, 1154, 1153, 1157,
	333, 334, 335, 336, 337, 1185, 2707, 340, 1179, 1178,
	1098, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1170, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1104, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1193, 1194,
	370, 1117, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1177, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1204, 378, 379, 380, 1190, 1191, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1200,
	0, 1127, 391, 0, 392, 393, 394, 2708, 396, 1163,
	1164, 1167, 476, 1206, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1205, 407, 1172, 1173, 0, 1133, 0, 409, 410,
	1207, 1165, 1208, 411, 412, 413, 1209, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1201, 1210, 425, 426, 1211, 0, 427,
	0, 0, 0, 428, 429, 432, 1156, 1155, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 2709,
	442, 2706, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1212, 458, 459,
	460, 466, 468, 469, 464, 465, 467, 470, 471, 462,
	463, 1213, 472, 461, 1095, 279, 1214, 473, 474, 1118,
	1166, 475, 1180, 477, 478, 0, 0, 479, 0, 0,
	0, 481, 482, 483, 0, 0, 484, 485, 667, 1215,
	486, 1216, 1195, 487, 488, 1105, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 0, 498, 499, 669, 500,
	501, 502, 670, 503, 504, 505, 1196, 506, 672, 507,
	508, 0, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 517, 1176, 518, 519, 521, 520, 522, 0, 523,
	0, 524, 525, 526, 0, 0, 0, 0, 0, 527,
	0, 529, 530, 531, 532, 528, 533, 534, 535, 536,
	537, 0, 538, 539, 540, 1217, 541, 542, 543, 544,
	545, 1106, 546, 0, 547, 548, 554, 555, 556, 549,
	550, 557, 558, 559, 560, 2710, 0, 563, 564, 562,
	565, 566, 567, 1159, 568, 569, 551, 552, 570, 571,
	1218, 572, 573, 574, 575, 576, 577, 578, 1174, 0,
	579, 0, 580, 581, 582, 584, 553, 585, 590, 591,
	1221, 586, 587, 588, 589, 1197, 593, 594, 0, 595,
	596, 1092, 592, 583, 0, 597, 598, 599, 600, 601,
	602, 603, 364, 604, 0, 605, 1186, 1187, 1188, 1189,
	0, 614, 0, 606, 607, 608, 1198, 609, 1199, 1116,
	610, 611, 612, 613, 0, 615, 616, 0, 1099, 617,
	618, 619, 621, 622, 620, 623, 1160, 624, 0, 0,
	625, 626, 627, 684, 1183, 1220, 0, 629, 628, 630,
	687, 0, 631, 0, 0, 0, 0, 632, 633, 688,
	634, 2705, 636, 1096, 0, 0, 2701, 0, 2704, 2711,
	1111, 1112, 1108, 1109, 1121, 0, 1091, 0, 0, 0,
	0, 0, 0, 1089, 1090, 280, 282, 281, 283, 284,
	285, 286, 1122, 287, 288, 0, 1120, 0, 0, 0,
	1162, 1126, 0, 0, 0, 289, 290, 1202, 291, 292,
	293, 294, 295, 296, 638, 1175, 0, 297, 1182, 298,
	1181, 0, 1192, 299, 300, 301, 302, 303, 304, 1128,
	1161, 1093, 305, 1222, 1223, 645, 0, 306, 307, 1168,
	0, 1149, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1203, 330, 331, 332, 1152, 1150, 1151, 1158, 1154, 1153,
	1157, 333, 334, 335, 336, 337, 1185, 2707, 340, 1179,
	1178, 1098, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1170, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1104, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1193,
	1194, 370, 1117, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1177, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1204, 378, 379, 380, 1190, 1191, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1200, 0, 1127, 391, 0, 392, 393, 394, 2708, 396,
	1163, 1164, 1167, 476, 1206, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1205, 407, 1172, 1173, 0, 1133, 0, 409,
	410, 1207, 1165, 1208, 411, 412, 413, 1209, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1201, 1210, 425, 426, 1211, 0,
	427, 0, 0, 0, 428, 429, 432, 1156, 1155, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	2709, 442, 2706, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1212, 458,
	459, 460, 466, 468, 469, 464, 465, 467, 470, 471,
	462, 463, 1213, 472, 461, 1095, 279, 1214, 473, 474,
	1118, 1166, 475, 1180, 477, 478, 0, 0, 479, 0,
	0, 0, 481, 482, 483, 0, 0, 484, 485, 667,
	1215, 486, 1216, 1195, 487, 488, 1105, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 498, 499, 669,
	500, 501, 502, 670, 503, 504, 505, 1196, 506, 672,
	507, 508, 0, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 517, 1176, 518, 519, 521, 520, 522, 0,
	523, 0, 524, 525, 526, 0, 0, 0, 0, 0,
	527, 0, 529, 530, 531, 532, 528, 533, 534, 535,
	536, 537, 0, 538, 539, 540, 1217, 541, 542, 543,
	544, 545, 1106, 546, 0, 547, 548, 554, 555, 556,
	549, 550, 557, 558, 559, 560, 2710, 0, 563, 564,
	562, 565, 566, 567, 1159, 568, 569, 551, 552, 570,
	571, 1218, 572, 573, 574, 575, 576, 577, 578, 1174,
	0, 579, 0, 580, 581, 582, 584, 553, 585, 590,
	591, 1221, 586, 587, 588, 589, 1197, 593, 594, 0,
	595, 596, 1092, 592, 583, 0, 597, 598, 599, 600,
	601, 602, 603, 364, 604, 0, 605, 1186, 1187, 1188,
	1189, 0, 614, 0, 606, 607, 608, 1198, 609, 1199,
	1116, 610, 611, 612, 613, 0, 615, 616, 0, 1099,
	617, 618, 619, 621, 622, 620, 623, 1160, 624, 0,
	0, 625, 626, 627, 684, 1183, 1220, 0, 629, 628,
	630, 687, 0, 631, 0, 0, 0, 0, 632, 633,
	688, 634, 2705, 636, 1096, 0, 0, 0, 0, 1138,
	1110, 1111, 1112, 1108, 1109, 1121, 0, 1091, 0, 0,
	0, 0, 0, 0, 1089, 1090, 280, 282, 281, 283,
	284, 285, 286, 1122, 287, 288, 0, 1120, 0, 0,
	0, 1162, 1126, 0, 0, 0, 289, 290, 1202, 291,
	292, 293, 294, 295, 296, 638, 1175, 0, 297, 1182,
	298, 1181, 0, 1192, 299, 300, 301, 302, 303, 304,
	1128, 1161, 1093, 305, 1222, 1223, 645, 0, 306, 307,
	1168, 0, 1149, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1203, 330, 331, 332, 1152, 1150, 1151, 1158, 1154,
	1153, 1157, 333, 334, 335, 336, 337, 1185, 338, 340,
	1179, 1178, 1098, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1170, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1104,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1193, 1194, 370, 1117, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1177, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1204, 378, 379, 380, 1190, 1191,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1200, 0, 1127, 391, 0, 392, 393, 394, 395,
	396, 1163, 1164, 1167, 476, 1206, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1205, 407, 1172, 1173, 0, 1133, 0,
	409, 410, 1207, 1165, 1208, 411, 412, 413, 1209, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1201, 1210, 425, 426, 1211,
	0, 427, 0, 0, 0, 428, 429, 432, 1156, 1155,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1212,
	458, 459, 460, 466, 468, 469, 464, 465, 467, 470,
	471, 462, 463, 1213, 472, 461, 1095, 279, 1214, 473,
	474, 1118, 1166, 475, 1180, 477, 478, 0, 0, 479,
	0, 0, 0, 481, 482, 483, 0, 0, 484, 485,
	667, 1215, 486, 1216, 1195, 487, 488, 1105, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 0, 498, 499,
	669, 500, 501, 502, 670, 503, 504, 505, 1196, 506,
	672, 507, 508, 0, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 517, 1176, 518, 519, 521, 520, 522,
	0, 523, 0, 524, 525, 526, 0, 0, 0, 0,
	0, 527, 0, 529, 530, 531, 532, 528, 533, 534,
	535, 536, 537, 0, 538, 539, 540, 1217, 541, 542,
	543, 544, 545, 1106, 546, 0, 547, 548, 554, 555,
	556, 549, 550, 557, 558, 559, 560, 561, 0, 563,
	564, 562, 565, 566, 567, 1159, 568, 569, 551, 552,
	570, 571, 1218, 572, 573, 574, 575, 576, 577, 578,
	1174, 0, 579, 0, 580, 581, 582, 584, 553, 585,
	590, 591, 1221, 586, 587, 588, 589, 1197, 593, 594,
	0, 595, 596, 1092, 592, 583, 0, 597, 598, 599,
	600, 601, 602, 603, 364, 604, 0, 605, 1186, 1187,
	1188, 1189, 0, 614, 0, 606, 607, 608, 1198, 609,
	1199, 1116, 610, 611, 612, 613, 0, 615, 616, 0,
	1099, 617, 618, 619, 621, 622, 620, 623, 1160, 624,
	0, 0, 625, 626, 627, 684, 1183, 1220, 0, 629,
	628, 630, 687, 0, 631, 0, 0, 0, 0, 632,
	633, 688, 634, 635, 636, 1096, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1091, 0,
	0, 0, 0, 0, 0, 1089, 1090, 0, 0, 0,
	0, 0, 1892, 0, 1122, 0, 0, 0, 1120, 1138,
	1110, 1111, 1112, 1108, 1109, 1121, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 2456, 287, 288, 0, 0, 0, 0,
	0, 1162, 1126, 0, 0, 0, 289, 290, 1202, 291,
	292, 293, 294, 295, 296, 638, 1175, 0, 297, 1182,
	298, 1181, 0, 1192, 299, 300, 301, 302, 303, 304,
	1128, 1161, 1093, 305, 1222, 1223, 645, 0, 306, 307,
	1168, 0, 1149, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1203, 330, 331, 332, 1152, 1150, 1151, 1158, 1154,
	1153, 1157, 333, 334, 335, 336, 337, 1185, 338, 340,
	1179, 1178, 1098, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1170, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1104,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1193, 1194, 370, 1117, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1177, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1204, 378, 379, 380, 1190, 1191,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1200, 0, 1127, 391, 0, 392, 393, 394, 395,
	396, 1163, 1164, 1167, 476, 1206, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1205, 407, 1172, 1173, 0, 1133, 0,
	409, 410, 1207, 1165, 1208, 411, 412, 413, 1209, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1201, 1210, 425, 426, 1211,
	0, 427, 0, 0, 0, 428, 429, 432, 1156, 1155,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1212,
	458, 459, 460, 466, 468, 469, 464, 465, 467, 470,
	471, 462, 463, 1213, 472, 461, 1095, 279, 1214, 473,
	474, 1118, 1166, 475, 1180, 477, 478, 0, 0, 479,
	0, 0, 0, 481, 482, 483, 0, 0, 484, 485,
	667, 1215, 486, 1216, 1195, 487, 488, 1105, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 0, 498, 499,
	669, 500, 501, 502, 670, 503, 504, 505, 1196, 506,
	672, 507, 508, 0, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 517, 1176, 518, 519, 521, 520, 522,
	0, 523, 0, 524, 525, 526, 0, 0, 0, 0,
	0, 527, 0, 529, 530, 531, 532, 528, 533, 534,
	535, 536, 537, 0, 538, 539, 540, 1217, 541, 542,
	543, 544, 545, 1106, 546, 0, 547, 548, 554, 555,
	556, 549, 550, 557, 558, 559, 560, 561, 0, 563,
	564, 562, 565, 566, 567, 1159, 568, 569, 551, 552,
	570, 571, 1218, 572, 573, 574, 575, 576, 577, 578,
	1174, 0, 579, 0, 580, 581, 582, 584, 553, 585,
	590, 591, 1221, 586, 587, 588, 589, 1197, 593, 594,
	0, 595, 596, 1092, 592, 583, 0, 597, 598, 599,
	600, 601, 602, 603, 364, 604, 0, 605, 1186, 1187,
	1188, 1189, 0, 614, 0, 606, 607, 608, 1198, 609,
	1199, 1116, 610, 611, 612, 613, 0, 615, 616, 0,
	1099, 617, 618, 619, 621, 622, 620, 623, 1160, 624,
	0, 0, 625, 626, 627, 684, 1183, 1220, 0, 629,
	628, 630, 687, 0, 631, 0, 0, 0, 0, 632,
	633, 688, 634, 635, 636, 1096, 0, 0, 2420, 0,
	1138, 1110, 1111, 1112, 1108, 1109, 1121, 0, 1091, 0,
	0, 0, 0, 0, 0, 1089, 1090, 280, 282, 281,
	283, 284, 285, 286, 1122, 287, 288, 0, 1120, 0,
	0, 0, 1162, 1126, 0, 0, 0, 289, 290, 1202,
	291, 292, 293, 294, 295, 296, 638, 1175, 0, 297,
	1182, 298, 1181, 0, 1192, 299, 300, 301, 302, 303,
	304, 1128, 1161, 1093, 305, 1222, 1223, 645, 0, 306,
	307, 1168, 0, 1149, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1203, 330, 331, 332, 1152, 1150, 1151, 1158,
	1154, 1153, 1157, 333, 334, 335, 336, 337, 1185, 338,
	340, 1179, 1178, 1098, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1170, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1104, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1193, 1194, 370, 1117, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1177, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1204, 378, 379, 380, 1190,
	1191, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1200, 0, 1127, 391, 0, 392, 393, 394,
	395, 396, 1163, 1164, 1167, 476, 1206, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1205, 407, 1172, 1173, 0, 1133,
	0, 409, 410, 1207, 1165, 1208, 411, 412, 413, 1209,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1201, 1210, 425, 426,
	1211, 0, 427, 0, 0, 0, 428, 429, 432, 1156,
	1155, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1212, 458, 459, 460, 466, 468, 469, 464, 465, 467,
	470, 471, 462, 463, 1213, 472, 461, 1095, 279, 1214,
	473, 474, 1118, 1166, 475, 1180, 477, 478, 0, 0,
	479, 0, 0, 0, 481, 482, 483, 0, 0, 484,
	485, 667, 1215, 486, 1216, 1195, 487, 488, 1105, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 498,
	499, 669, 500, 501, 502, 670, 503, 504, 505, 1196,
	506, 672, 507, 508, 0, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 517, 1176, 518, 519, 521, 520,
	522, 0, 523, 0, 524, 525, 526, 0, 0, 0,
	0, 0, 527, 0, 529, 530, 531, 532, 528, 533,
	534, 535, 536, 537, 0, 538, 539, 540, 1217, 541,
	542, 543, 544, 545, 1106, 546, 0, 547, 548, 554,
	555, 556, 549, 550, 557, 558, 559, 560, 561, 0,
	563, 564, 562, 565, 566, 567, 1159, 568, 569, 551,
	552, 570, 571, 1218, 572, 573, 574, 575, 576, 577,
	578, 1174, 0, 579, 0, 580, 581, 582, 584, 553,
	585, 590, 591, 1221, 586, 587, 588, 589, 1197, 593,
	594, 0, 595, 596, 1092, 592, 583, 0, 597, 598,
	599, 600, 601, 602, 603, 364, 604, 0, 605, 1186,
	1187, 1188, 1189, 0, 614, 0, 606, 607, 608, 1198,
	609, 1199, 1116, 610, 611, 612, 613, 0, 615, 616,
	0, 1099, 617, 618, 619, 621, 622, 620, 623, 1160,
	624, 0, 0, 625, 626, 627, 684, 1183, 1220, 0,
	629, 628, 630, 687, 0, 631, 0, 0, 0, 0,
	632, 633, 688, 634, 635, 636, 1096, 0, 0, 2395,
	0, 1138, 1110, 1111, 1112, 1108, 1109, 1121, 0, 1091,
	0, 0, 0, 0, 0, 0, 1089, 1090, 280, 282,
	281, 283, 284, 285, 286, 1122, 287, 288, 0, 1120,
	0, 0, 0, 1162, 1126, 0, 0, 0, 289, 290,
	1202, 291, 292, 293, 294, 295, 296, 638, 1175, 0,
	297, 1182, 298, 1181, 0, 1192, 299, 300, 301, 302,
	303, 304, 1128, 1161, 1093, 305, 1222, 1223, 645, 0,
	306, 307, 1168, 0, 1149, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1203, 330, 331, 332, 1152, 1150, 1151,
	1158, 1154, 1153, 1157, 333, 334, 335, 336, 337, 1185,
	338, 340, 1179, 1178, 1098, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1170,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1104, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1193, 1194, 370, 1117, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1177, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1204, 378, 379, 380,
	1190, 1191, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1200, 0, 1127, 391, 0, 392, 393,
	394, 395, 396, 1163, 1164, 1167, 476, 1206, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1205, 407, 1172, 1173, 0,
	1133, 0, 409, 410, 1207, 1165, 1208, 411, 412, 413,
	1209, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1201, 1210, 425,
	426, 1211, 0, 427, 0, 0, 0, 428, 429, 432,
	1156, 1155, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1212, 458, 459, 460, 466, 468, 469, 464, 465,
	467, 470, 471, 462, 463, 1213, 472, 461, 1095, 279,
	1214, 473, 474, 1118, 1166, 475, 1180, 477, 478, 0,
	0, 479, 0, 0, 0, 481, 482, 483, 0, 0,
	484, 485, 667, 1215, 486, 1216, 1195, 487, 488, 1105,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 0,
	498, 499, 669, 500, 501, 502, 670, 503, 504, 505,
	1196, 506, 672, 507, 508, 0, 509, 510, 0, 511,
	512, 513, 514, 515, 516, 517, 1176, 518, 519, 521,
	520, 522, 0, 523, 0, 524, 525, 526, 0, 0,
	0, 0, 0, 527, 0, 529, 530, 531, 532, 528,
	533, 534, 535, 536, 537, 0, 538, 539, 540, 1217,
	541, 542, 543, 544, 545, 1106, 546, 0, 547, 548,
	554, 555, 556, 549, 550, 557, 558, 559, 560, 561,
	0, 563, 564, 562, 565, 566, 567, 1159, 568, 569,
	551, 552, 570, 571, 1218, 572, 573, 574, 575, 576,
	577, 578, 1174, 0, 579, 0, 580, 581, 582, 584,
	553, 585, 590, 591, 1221, 586, 587, 588, 589, 1197,
	593, 594, 0, 595, 596, 1092, 592, 583, 0, 597,
	598, 599, 600, 601, 602, 603, 364, 604, 0, 605,
	1186, 1187, 1188, 1189, 0, 614, 0, 606, 607, 608,
	1198, 609, 1199, 1116, 610, 611, 612, 613, 0, 615,
	616, 0, 1099, 617, 618, 619, 621, 622, 620, 623,
	1160, 624, 0, 0, 625, 626, 627, 684, 1183, 1220,
	0, 629, 628, 630, 687, 0, 631, 0, 0, 0,
	0, 632, 633, 688, 634, 635, 636, 1096, 0, 0,
	1732, 0, 1138, 1110, 1111, 1112, 1108, 1109, 1121, 0,
	1091, 0, 0, 0, 0, 0, 0, 1089, 1090, 280,
	282, 281, 283, 284, 285, 286, 1122, 287, 288, 0,
	1120, 0, 0, 0, 1162, 1126, 0, 0, 0, 289,
	290, 1202, 291, 292, 293, 294, 295, 296, 638, 1175,
	0, 297, 1182, 298, 1181, 0, 1192, 299, 300, 301,
	302, 303, 304, 1128, 1161, 1093, 305, 1222, 1223, 645,
	0, 306, 307, 1168, 0, 1149, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1203, 330, 331, 332, 1152, 1150,
	1151, 1158, 1154, 1153, 1157, 333, 334, 335, 336, 337,
	1185, 338, 340, 1179, 1178, 1098, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1170, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1104, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1193, 1194, 370, 1117, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1177, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1204, 378, 379,
	380, 1190, 1191, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1200, 0, 1127, 391, 0, 392,
	393, 394, 395, 396, 1163, 1164, 1167, 476, 1206, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1205, 407, 1172, 1173,
	0, 1133, 0, 409, 410, 1207, 1165, 1208, 411, 412,
	413, 1209, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1201, 1210,
	425, 426, 1211, 0, 427, 0, 0, 0, 428, 429,
	432, 1156, 1155, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1212, 458, 459, 460, 466, 468, 469, 464,
	465, 467, 470, 471, 462, 463, 1213, 472, 461, 1095,
	279, 1214, 473, 474, 1118, 1166, 475, 1180, 477, 478,
	0, 0, 479, 0, 0, 0, 481, 482, 483, 0,
	0, 484, 485, 667, 1215, 486, 1216, 1195, 487, 488,
	1105, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 498, 499, 669, 500, 501, 502, 670, 503, 504,
	505, 1196, 506, 672, 507, 508, 0, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 517, 1176, 518, 519,
	521, 520, 522, 0, 523, 0, 524, 525, 526, 0,
	0, 0, 0, 0, 527, 0, 529, 530, 531, 532,
	528, 533, 534, 535, 536, 537, 0, 538, 539, 540,
	1217, 541, 542, 543, 544, 545, 1106, 546, 0, 547,
	548, 554, 555, 556, 549, 550, 557, 558, 559, 560,
	561, 0, 563, 564, 562, 565, 566, 567, 1159, 568,
	569, 551, 552, 570, 571, 1218, 572, 573, 574, 575,
	576, 577, 578, 1174, 0, 579, 0, 580, 581, 582,
	584, 553, 585, 590, 591, 1221, 586, 587, 588, 589,
	1197, 593, 594, 0, 595, 596, 1092, 592, 583, 0,
	597, 598, 599, 600, 601, 602, 603, 364, 604, 0,
	605, 1186, 1187, 1188, 1189, 0, 614, 0, 606, 607,
	608, 1198, 609, 1199, 1116, 610, 611, 612, 613, 0,
	615, 616, 0, 1099, 617, 618, 619, 621, 622, 620,
	623, 1160, 624, 0, 0, 625, 626, 627, 684, 1183,
	1220, 0, 629, 628, 630, 687, 0, 631, 0, 0,
	0, 0, 632, 633, 688, 634, 635, 636, 1096, 0,
	0, 1661, 0, 1138, 1110, 1111, 1112, 1108, 1109, 1121,
	0, 1091, 0, 0, 0, 0, 0, 0, 1089, 1090,
	280, 282, 281, 283, 284, 285, 286, 1122, 287, 288,
	0, 1120, 0, 0, 0, 1162, 1126, 0, 0, 0,
	289, 290, 1202, 291, 292, 293, 294, 295, 296, 638,
	1175, 0, 297, 1182, 298, 1181, 0, 1192, 299, 300,
	301, 302, 303, 304, 1128, 1161, 1093, 305, 1222, 1223,
	645, 0, 306, 307, 1168, 0, 1149, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1203, 330, 331, 332, 1152,
	1150, 1151, 1158, 1154, 1153, 1157, 333, 334, 335, 336,
	337, 1185, 338, 340, 1179, 1178, 1098, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1170, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1104, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1193, 1194, 370, 1117, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1177, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1204, 378,
	379, 380, 1190, 1191, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1200, 0, 1127, 391, 0,
	392, 393, 394, 395, 396, 1163, 1164, 1167, 476, 1206,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1205, 407, 1172,
	1173, 0, 1133, 0, 409, 410, 1207, 1165, 1208, 411,
	412, 413, 1209, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1201,
	1210, 425, 426, 1211, 0, 427, 0, 0, 0, 428,
	429, 432, 1156, 1155, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1212, 458, 459, 460, 466, 468, 469,
	464, 465, 467, 470, 471, 462, 463, 1213, 472, 461,
	1095, 279, 1214, 473, 474, 1118, 1166, 475, 1180, 477,
	478, 0, 0, 479, 0, 0, 0, 481, 482, 483,
	0, 0, 484, 485, 667, 1215, 486, 1216, 1195, 487,
	488, 1105, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 498, 499, 669, 500, 501, 502, 670, 503,
	504, 505, 1196, 506, 672, 507, 508, 0, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 517, 1176, 518,
	519, 521, 520, 522, 0, 523, 0, 524, 525, 526,
	0, 0, 0, 0, 0, 527, 0, 529, 530, 531,
	532, 528, 533, 534, 535, 536, 537, 0, 538, 539,
	540, 1217, 541, 542, 543, 544, 545, 1106, 546, 0,
	547, 548, 554, 555, 556, 549, 550, 557, 558, 559,
	560, 561, 0, 563, 564, 562, 565, 566, 567, 1159,
	568, 569, 551, 552, 570, 571, 1218, 572, 573, 574,
	575, 576, 577, 578, 1174, 0, 579, 0, 580, 581,
	582, 584, 553, 585, 590, 591, 1221, 586, 587, 588,
	589, 1197, 593, 594, 0, 595, 596, 1092, 592, 583,
	0, 597, 598, 599, 600, 601, 602, 603, 364, 604,
	0, 605, 1186, 1187, 1188, 1189, 0, 614, 0, 606,
	607, 608, 1198, 609, 1199, 1116, 610, 611, 612, 613,
	0, 615, 616, 0, 1099, 617, 618, 619, 621, 622,
	620, 623, 1160, 624, 0, 0, 625, 626, 627, 684,
	1183, 1220, 0, 629, 628, 630, 687, 0, 631, 0,
	0, 0, 0, 632, 633, 688, 634, 635, 636, 1096,
	0, 0, 1656, 0, 1138, 1110, 1111, 1112, 1108, 1109,
	1121, 0, 1091, 0, 0, 0, 0, 0, 0, 1089,
	1090, 280, 282, 281, 283, 284, 285, 286, 1122, 287,
	288, 0, 1120, 0, 0, 0, 1162, 1126, 0, 0,
	0, 289, 290, 1202, 291, 292, 293, 294, 295, 296,
	638, 1175, 0, 297, 1182, 298, 1181, 0, 1192, 299,
	300, 301, 302, 303, 304, 1128, 1161, 1093, 305, 1222,
	1223, 645, 0, 306, 307, 1168, 0, 1149, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1203, 330, 331, 332,
	1152, 1150, 1151, 1158, 1154, 1153, 1157, 333, 334, 335,
	336, 337, 1185, 338, 340, 1179, 1178, 1098, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1170, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1104, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1193, 1194, 370, 1117, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1177, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1204,
	378, 379, 380, 1190, 1191, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1200, 0, 1127, 391,
	0, 392, 393, 394, 395, 396, 1163, 1164, 1167, 476,
	1206, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1205, 407,
	1172, 1173, 0, 1133, 0, 409, 410, 1207, 1165, 1208,
	411, 412, 413, 1209, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1201, 1210, 425, 426, 1211, 0, 427, 0, 0, 0,
	428, 429, 432, 1156, 1155, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1212, 458, 459, 460, 466, 468,
	469, 464, 465, 467, 470, 471, 462, 463, 1213, 472,
	461, 1095, 279, 1214, 473, 474, 1118, 1166, 475, 1180,
	477, 478, 0, 0, 479, 0, 0, 0, 481, 482,
	483, 0, 0, 484, 485, 667, 1215, 486, 1216, 1195,
	487, 488, 1105, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 498, 499, 669, 500, 501, 502, 670,
	503, 504, 505, 1196, 506, 672, 507, 508, 0, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 517, 1176,
	518, 519, 521, 520, 522, 0, 523, 0, 524, 525,
	526, 0, 0, 0, 0, 0, 527, 0, 529, 530,
	531, 532, 528, 533, 534, 535, 536, 537, 0, 538,
	539, 540, 1217, 541, 542, 543, 544, 545, 1106, 546,
	0, 547, 548, 554, 555, 556, 549, 550, 557, 558,
	559, 560, 561, 0, 563, 564, 562, 565, 566, 567,
	1159, 568, 569, 551, 552, 570, 571, 1218, 572, 573,
	574, 575, 576, 577, 578, 1174, 0, 579, 0, 580,
	581, 582, 584, 553, 585, 590, 591, 1221, 586, 587,
	588, 589, 1197, 593, 594, 0, 595, 596, 1092, 592,
	583, 0, 597, 598, 599, 600, 601, 602, 603, 364,
	604, 0, 605, 1186, 1187, 1188, 1189, 0, 614, 0,
	606, 607, 608, 1198, 609, 1199, 1116, 610, 611, 612,
	613, 0, 615, 616, 0, 1099, 617, 618, 619, 621,
	622, 620, 623, 1160, 624, 0, 0, 625, 626, 627,
	684, 1183, 1220, 0, 629, 628, 630, 687, 0, 631,
	0, 0, 0, 0, 632, 633, 688, 634, 635, 636,
	1096, 0, 0, 1643, 0, 1138, 1110, 1111, 1112, 1108,
	1109, 1121, 0, 1091, 0, 0, 0, 0, 0, 0,
	1089, 1090, 280, 282, 281, 283, 284, 285, 286, 1122,
	287, 288, 0, 1120, 0, 0, 0, 1162, 1126, 0,
	0, 0, 289, 290, 1202, 291, 292, 293, 294, 295,
	296, 638, 1175, 0, 297, 1182, 298, 1181, 0, 1192,
	299, 300, 301, 302, 303, 304, 1128, 1161, 1093, 305,
	1222, 1223, 645, 0, 306, 307, 1168, 0, 1149, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1203, 330, 331,
	332, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 333, 334,
	335, 336, 337, 1185, 338, 340, 1179, 1178, 1098, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1170, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1104, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1193, 1194, 370, 1117,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1177,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1204, 378, 379, 380, 1190, 1191, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1200, 0, 1127,
	391, 0, 392, 393, 394, 395, 396, 1163, 1164, 1167,
	476, 1206, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1205,
	407, 1172, 1173, 0, 1133, 0, 409, 410, 1207, 1165,
	1208, 411, 412, 413, 1209, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1201, 1210, 425, 426, 1211, 0, 427, 0, 0,
	0, 428, 429, 432, 1156, 1155, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 466,
	468, 469, 464, 465, 467, 470, 471, 462, 463, 1213,
	472, 461, 1095, 279, 1214, 473, 474, 1118, 1166, 475,
	1180, 477, 478, 0, 0, 479, 0, 0, 0, 481,
	482, 483, 0, 0, 484, 485, 667, 1215, 486, 1216,
	1195, 487, 488, 1105, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 498, 499, 669, 500, 501, 502,
	670, 503, 504, 505, 1196, 506, 672, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 517,
	1176, 518, 519, 521, 520, 522, 0, 523, 0, 524,
	525, 526, 0, 0, 0, 0, 0, 527, 0, 529,
	530, 531, 532, 528, 533, 534, 535, 536, 537, 0,
	538, 539, 540, 1217, 541, 542, 543, 544, 545, 1106,
	546, 0, 547, 548, 554, 555, 556, 549, 550, 557,
	558, 559, 560, 561, 0, 563, 564, 562, 565, 566,
	567, 1159, 568, 569, 551, 552, 570, 571, 1218, 572,
	573, 574, 575, 576, 577, 578, 1174, 0, 579, 0,
	580, 581, 582, 584, 553, 585, 590, 591, 1221, 586,
	587, 588, 589, 1197, 593, 594, 0, 595, 596, 1092,
	592, 583, 0, 597, 598, 599, 600, 601, 602, 603,
	364, 604, 0, 605, 1186, 1187, 1188, 1189, 0, 614,
	0, 606, 607, 608, 1198, 609, 1199, 1116, 610, 611,
	612, 613, 0, 615, 616, 0, 1099, 617, 618, 619,
	621, 622, 620, 623, 1160, 624, 0, 0, 625, 626,
	627, 684, 1183, 1220, 0, 629, 628, 630, 687, 0,
	631, 0, 0, 0, 0, 632, 633, 688, 634, 635,
	636, 1096, 0, 0, 1638, 0, 1138, 1110, 1111, 1112,
	1108, 1109, 1121, 0, 1091, 0, 0, 0, 0, 0,
	0, 1089, 1090, 280, 282, 281, 283, 284, 285, 286,
	1122, 287, 288, 0, 1120, 0, 0, 0, 1162, 1126,
	0, 0, 0, 289, 290, 1202, 291, 292, 293, 294,
	295, 296, 638, 1175, 0, 297, 1182, 298, 1181, 0,
	1192, 299, 300, 301, 302, 303, 304, 1128, 1161, 1093,
	305, 1222, 1223, 645, 0, 306, 307, 1168, 0, 1149,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1203, 330,
	331, 332, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 333,
	334, 335, 336, 337, 1185, 338, 340, 1179, 1178, 1098,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1170, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1104, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1193, 1194, 370,
	1117, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1177, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1204, 378, 379, 380, 1190, 1191, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1200, 0,
	1127, 391, 0, 392, 393, 394, 395, 396, 1163, 1164,
	1167, 476, 1206, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1205, 407, 1172, 1173, 0, 1133, 0, 409, 410, 1207,
	1165, 1208, 411, 412, 413, 1209, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1201, 1210, 425, 426, 1211, 0, 427, 0,
	0, 0, 428, 429, 432, 1156, 1155, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1212, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	1213, 472, 461, 1095, 279, 1214, 473, 474, 1118, 1166,
	475, 1180, 477, 478, 0, 0, 479, 0, 0, 0,
	481, 482, 483, 0, 0, 484, 485, 667, 1215, 486,
	1216, 1195, 487, 488, 1105, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 1196, 506, 672, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 1176, 518, 519, 521, 520, 522, 0, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	0, 538, 539, 540, 1217, 541, 542, 543, 544, 545,
	1106, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 0, 563, 564, 562, 565,
	566, 567, 1159, 568, 569, 551, 552, 570, 571, 1218,
	572, 573, 574, 575, 576, 577, 578, 1174, 0, 579,
	0, 580, 581, 582, 584, 553, 585, 590, 591, 1221,
	586, 587, 588, 589, 1197, 593, 594, 0, 595, 596,
	1092, 592, 583, 0, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 0, 605, 1186, 1187, 1188, 1189, 0,
	614, 0, 606, 607, 608, 1198, 609, 1199, 1116, 610,
	611, 612, 613, 0, 615, 616, 0, 1099, 617, 618,
	619, 621, 622, 620, 623, 1160, 624, 0, 0, 625,
	626, 627, 684, 1183, 1220, 0, 629, 628, 630, 687,
	0, 631, 0, 0, 0, 0, 632, 633, 688, 634,
	635, 636, 1096, 0, 0, 1547, 0, 1138, 1110, 1111,
	1112, 1108, 1109, 1121, 0, 1091, 0, 0, 0, 0,
	0, 0, 1089, 1090, 280, 282, 281, 283, 284, 285,
	286, 1122, 287, 288, 0, 1120, 0, 0, 0, 1162,
	1126, 0, 0, 0, 289, 290, 1202, 291, 292, 293,
	294, 295, 296, 638, 1175, 0, 297, 1182, 298, 1181,
	0, 1192, 299, 300, 301, 302, 303, 304, 1128, 1161,
	1093, 305, 1222, 1223, 645, 0, 306, 307, 1168, 0,
	1149, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1203,
	330, 331, 332, 1152, 1150, 1151, 1158, 1154, 1153, 1157,
	333, 334, 335, 336, 337, 1185, 338, 340, 1179, 1178,
	1098, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1170, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1104, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1193, 1194,
	370, 1117, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1177, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1204, 378, 379, 380, 1190, 1191, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1200,
	0, 1127, 391, 0, 392, 393, 394, 395, 396, 1546,
	1164, 1167, 476, 1206, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1205, 407, 1172, 1173, 0, 1133, 0, 409, 410,
	1207, 1165, 1208, 411, 412, 413, 1209, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1201, 1210, 425, 426, 1211, 0, 427,
	0, 0, 0, 428, 429, 432, 1156, 1155, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1212, 458, 459,
	460, 466, 468, 469, 464, 465, 467, 470, 471, 462,
	463, 1213, 472, 461, 1095, 279, 1214, 473, 474, 1118,
	1166, 475, 1180, 477, 478, 0, 0, 479, 0, 0,
	0, 481, 482, 483, 0, 0, 484, 485, 667, 1215,
	486, 1216, 1195, 487, 488, 1105, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 0, 498, 499, 669, 500,
	501, 502, 670, 503, 504, 505, 1196, 506, 672, 507,
	508, 0, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 517, 1176, 518, 519, 521, 520, 522, 0, 523,
	0, 524, 525, 526, 0, 0, 0, 0, 0, 527,
	0, 529, 530, 531, 532, 528, 533, 534, 535, 536,
	537, 0, 538, 539, 540, 1217, 541, 542, 543, 544,
	545, 1106, 546, 0, 547, 548, 554, 555, 556, 549,
	550, 557, 558, 559, 560, 561, 0, 563, 564, 562,
	565, 566, 567, 1159, 568, 569, 551, 552, 570, 571,
	1218, 572, 573, 574, 575, 576, 577, 578, 1174, 0,
	579, 0, 580, 581, 582, 584, 553, 585, 590, 591,
	1221, 586, 587, 588, 589, 1197, 593, 594, 0, 595,
	596, 1092, 592, 583, 0, 597, 598, 599, 600, 601,
	602, 603, 364, 604, 0, 605, 1186, 1187, 1188, 1189,
	0, 614, 0, 606, 607, 608, 1198, 609, 1199, 1116,
	610, 611, 612, 613, 0, 615, 616, 0, 1099, 617,
	618, 619, 621, 622, 620, 623, 1160, 624, 0, 0,
	625, 626, 627, 684, 1183, 1220, 0, 629, 628, 630,
	687, 0, 631, 0, 0, 0, 0, 632, 633, 688,
	634, 635, 636, 1096, 0, 0, 1541, 0, 1138, 1110,
	1111, 1112, 1108, 1109, 1121, 0, 1091, 0, 0, 0,
	0, 0, 0, 1089, 1090, 280, 282, 281, 283, 284,
	285, 286, 1122, 287, 288, 0, 1120, 0, 0, 0,
	1162, 1126, 0, 0, 0, 289, 290, 1202, 291, 292,
	293, 294, 295, 296, 638, 1175, 0, 297, 1182, 298,
	1181, 0, 1192, 299, 300, 301, 302, 303, 304, 1128,
	1161, 1093, 305, 1222, 1223, 645, 0, 306, 307, 1168,
	0, 1149, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1203, 330, 331, 332, 1152, 1150, 1151, 1158, 1154, 1153,
	1157, 333, 334, 335, 336, 337, 1185, 338, 340, 1179,
	1178, 1098, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1170, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1104, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1193,
	1194, 370, 1117, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1177, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1204, 378, 379, 380, 1190, 1191, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1200, 0, 1127, 391, 0, 392, 393, 394, 395, 396,
	1540, 1164, 1167, 476, 1206, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1205, 407, 1172, 1173, 0, 1133, 0, 409,
	410, 1207, 1165, 1208, 411, 412, 413, 1209, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1201, 1210, 425, 426, 1211, 0,
	427, 0, 0, 0, 428, 429, 432, 1156, 1155, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1212, 458,
	459, 460, 466, 468, 469, 464, 465, 467, 470, 471,
	462, 463, 1213, 472, 461, 1095, 279, 1214, 473, 474,
	1118, 1166, 475, 1180, 477, 478, 0, 0, 479, 0,
	0, 0, 481, 482, 483, 0, 0, 484, 485, 667,
	1215, 486, 1216, 1195, 487, 488, 1105, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 498, 499, 669,
	500, 501, 502, 670, 503, 504, 505, 1196, 506, 672,
	507, 508, 0, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 517, 1176, 518, 519, 521, 520, 522, 0,
	523, 0, 524, 525, 526, 0, 0, 0, 0, 0,
	527, 0, 529, 530, 531, 532, 528, 533, 534, 535,
	536, 537, 0, 538, 539, 540, 1217, 541, 542, 543,
	544, 545, 1106, 546, 0, 547, 548, 554, 555, 556,
	549, 550, 557, 558, 559, 560, 561, 0, 563, 564,
	562, 565, 566, 567, 1159, 568, 569, 551, 552, 570,
	571, 1218, 572, 573, 574, 575, 576, 577, 578, 1174,
	0, 579, 0, 580, 581, 582, 584, 553, 585, 590,
	591, 1221, 586, 587, 588, 589, 1197, 593, 594, 0,
	595, 596, 1092, 592, 583, 0, 597, 598, 599, 600,
	601, 602, 603, 364, 604, 0, 605, 1186, 1187, 1188,
	1189, 0, 614, 0, 606, 607, 608, 1198, 609, 1199,
	1116, 610, 611, 612, 613, 0, 615, 616, 0, 1099,
	617, 618, 619, 621, 622, 620, 623, 1160, 624, 0,
	0, 625, 626, 627, 684, 1183, 1220, 0, 629, 628,
	630, 687, 0, 631, 0, 0, 0, 0, 632, 633,
	688, 634, 635, 636, 1096, 0, 0, 1534, 0, 1138,
	1110, 1111, 1112, 1108, 1109, 1121, 0, 1091, 0, 0,
	0, 0, 0, 0, 1089, 1090, 280, 282, 281, 283,
	284, 285, 286, 1122, 287, 288, 0, 1120, 0, 0,
	0, 1162, 1126, 0, 0, 0, 289, 290, 1202, 291,
	292, 293, 294, 295, 296, 638, 1175, 0, 297, 1182,
	298, 1181, 0, 1192, 299, 300, 301, 302, 303, 304,
	1128, 1161, 1093, 305, 1222, 1223, 645, 0, 306, 307,
	1168, 0, 1149, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1203, 330, 331, 332, 1152, 1150, 1151, 1158, 1154,
	1153, 1157, 333, 334, 335, 336, 337, 1185, 338, 340,
	1179, 1178, 1098, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1170, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1104,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1193, 1194, 370, 1117, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1177, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1204, 378, 379, 380, 1190, 1191,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1200, 0, 1127, 391, 0, 392, 393, 394, 395,
	396, 1163, 1164, 1167, 476, 1206, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1205, 407, 1172, 1173, 0, 1133, 0,
	409, 410, 1207, 1165, 1208, 411, 412, 413, 1209, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1201, 1210, 425, 426, 1211,
	0, 427, 0, 0, 0, 428, 429, 432, 1156, 1155,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1212,
	458, 459, 460, 466, 468, 469, 464, 465, 467, 470,
	471, 462, 463, 1213, 472, 461, 1095, 279, 1214, 473,
	474, 1118, 1166, 475, 1180, 477, 478, 0, 0, 479,
	0, 0, 0, 481, 482, 483, 0, 0, 484, 485,
	667, 1215, 486, 1216, 1195, 487, 488, 1105, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 0, 498, 499,
	669, 500, 501, 502, 670, 503, 504, 505, 1196, 506,
	672, 507, 508, 0, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 517, 1176, 518, 519, 521, 520, 522,
	0, 523, 0, 524, 525, 526, 0, 0, 0, 0,
	0, 527, 0, 529, 530, 531, 532, 528, 533, 534,
	535, 536, 537, 0, 538, 539, 540, 1217, 541, 542,
	543, 544, 545, 1106, 546, 0, 547, 548, 554, 555,
	556, 549, 550, 557, 558, 559, 560, 561, 0, 563,
	564, 562, 565, 566, 567, 1159, 568, 569, 551, 552,
	570, 571, 1218, 572, 573, 574, 575, 576, 577, 578,
	1174, 0, 579, 0, 580, 581, 582, 584, 553, 585,
	590, 591, 1221, 586, 587, 588, 589, 1197, 593, 594,
	0, 595, 596, 1092, 592, 583, 0, 597, 598, 599,
	600, 601, 602, 603, 364, 604, 0, 605, 1186, 1187,
	1188, 1189, 0, 614, 0, 606, 607, 608, 1198, 609,
	1199, 1116, 610, 611, 612, 613, 0, 615, 616, 0,
	1099, 617, 618, 619, 621, 622, 620, 623, 1160, 624,
	0, 0, 625, 626, 627, 684, 1183, 1220, 0, 629,
	628, 630, 687, 0, 631, 0, 0, 0, 0, 632,
	633, 688, 634, 635, 636, 1096, 0, 0, 1349, 0,
	1138, 1110, 1111, 1112, 1108, 1109, 1121, 0, 1091, 0,
	0, 0, 0, 0, 0, 1089, 1090, 280, 282, 281,
	283, 284, 285, 286, 1122, 287, 288, 0, 1120, 0,
	0, 0, 1162, 1126, 0, 0, 0, 289, 290, 1202,
	291, 292, 293, 294, 295, 296, 638, 1175, 0, 297,
	1182, 298, 1181, 0, 1192, 299, 300, 301, 302, 303,
	304, 1128, 1161, 1093, 305, 1222, 1223, 645, 0, 306,
	307, 1168, 0, 1149, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1203, 330, 331, 332, 1152, 1150, 1151, 1158,
	1154, 1153, 1157, 333, 334, 335, 336, 337, 1185, 338,
	340, 1179, 1178, 1098, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1170, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1104, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1193, 1194, 370, 1117, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1177, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1204, 378, 379, 380, 1190,
	1191, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1200, 0, 1127, 391, 0, 392, 393, 394,
	395, 396, 1163, 1164, 1167, 476, 1206, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1205, 407, 1172, 1173, 0, 1133,
	0, 409, 410, 1207, 1165, 1208, 411, 412, 413, 1209,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1201, 1210, 425, 426,
	1211, 0, 427, 0, 0, 0, 428, 429, 432, 1156,
	1155, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1212, 458, 459, 460, 466, 468, 469, 464, 465, 467,
	470, 471, 462, 463, 1213, 472, 461, 1095, 279, 1214,
	473, 474, 1118, 1166, 475, 1180, 477, 478, 0, 0,
	479, 0, 0, 0, 481, 482, 483, 0, 0, 484,
	485, 667, 1215, 486, 1216, 1195, 487, 488, 1105, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 498,
	499, 669, 500, 501, 502, 670, 503, 504, 505, 1196,
	506, 672, 507, 508, 0, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 517, 1176, 518, 519, 521, 520,
	522, 0, 523, 0, 524, 525, 526, 0, 0, 0,
	0, 0, 527, 0, 529, 530, 531, 532, 528, 533,
	534, 535, 536, 537, 0, 538, 539, 540, 1217, 541,
	542, 543, 544, 545, 1106, 546, 0, 547, 548, 554,
	555, 556, 549, 550, 557, 558, 559, 560, 561, 0,
	563, 564, 562, 565, 566, 567, 1159, 568, 569, 551,
	552, 570, 571, 1218, 572, 573, 574, 575, 576, 577,
	578, 1174, 0, 579, 0, 580, 581, 582, 584, 553,
	585, 590, 591, 1221, 586, 587, 588, 589, 1197, 593,
	594, 0, 595, 596, 1092, 592, 583, 0, 597, 598,
	599, 600, 601, 602, 603, 364, 604, 0, 605, 1186,
	1187, 1188, 1189, 0, 614, 0, 606, 607, 608, 1198,
	609, 1199, 1116, 610, 611, 612, 613, 0, 615, 616,
	0, 1099, 617, 618, 619, 621, 622, 620, 623, 1160,
	624, 0, 0, 625, 626, 627, 684, 1183, 1220, 0,
	629, 628, 630, 687, 0, 631, 0, 0, 0, 0,
	632, 633, 688, 634, 635, 636, 1096, 0, 0, 0,
	0, 1138, 1110, 1111, 1112, 1108, 1109, 1121, 0, 1091,
	0, 0, 0, 0, 0, 0, 1089, 1090, 280, 282,
	281, 283, 284, 285, 286, 1122, 287, 288, 0, 1120,
	0, 0, 0, 1162, 1126, 0, 0, 0, 289, 290,
	1202, 291, 292, 293, 294, 295, 296, 638, 1175, 0,
	297, 1182, 298, 1181, 0, 1192, 299, 300, 301, 302,
	303, 304, 1128, 1161, 1093, 305, 1222, 1223, 645, 0,
	306, 307, 1168, 0, 1149, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1203, 330, 331, 332, 1152, 1150, 1151,
	1158, 1154, 1153, 1157, 333, 334, 335, 336, 337, 1185,
	338, 340, 1179, 1178, 1098, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1170,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1104, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1193, 1194, 370, 1117, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1177, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1204, 378, 379, 380,
	1190, 1191, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1200, 0, 1127, 391, 0, 392, 393,
	394, 395, 396, 1163, 1164, 1167, 476, 1206, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1205, 407, 1172, 1173, 0,
	1133, 0, 409, 410, 1207, 1165, 1208, 411, 412, 413,
	1209, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1201, 1210, 425,
	426, 1211, 0, 427, 0, 0, 0, 428, 429, 432,
	1156, 1155, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1212, 458, 459, 460, 466, 468, 469, 464, 465,
	467, 470, 471, 462, 463, 1213, 472, 461, 1095, 279,
	1214, 473, 474, 1118, 1166, 475, 1180, 477, 478, 0,
	0, 479, 0, 0, 0, 481, 482, 483, 0, 0,
	484, 485, 667, 1215, 486, 1216, 1195, 487, 488, 1105,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 0,
	498, 499, 669, 500, 501, 502, 670, 503, 504, 505,
	1196, 506, 672, 507, 508, 0, 509, 510, 0, 511,
	512, 513, 514, 515, 516, 517, 1176, 518, 519, 521,
	520, 522, 0, 523, 0, 524, 525, 526, 0, 0,
	0, 0, 0, 527, 0, 529, 530, 531, 532, 528,
	533, 534, 535, 536, 537, 0, 538, 539, 540, 1217,
	541, 542, 543, 544, 545, 1106, 546, 0, 547, 548,
	554, 555, 556, 549, 550, 557, 558, 559, 560, 561,
	0, 563, 564, 562, 565, 566, 567, 1159, 568, 569,
	551, 552, 570, 571, 1218, 572, 573, 574, 575, 576,
	577, 578, 1174, 0, 579, 0, 580, 581, 582, 584,
	553, 585, 590, 591, 1221, 586, 587, 588, 589, 1197,
	593, 594, 0, 595, 596, 1092, 592, 583, 0, 597,
	598, 599, 600, 601, 602, 603, 364, 604, 0, 605,
	1186, 1187, 1188, 1189, 0, 614, 0, 606, 607, 608,
	1198, 609, 1199, 1116, 610, 611, 612, 613, 0, 615,
	616, 0, 1099, 617, 618, 619, 621, 622, 620, 623,
	1160, 624, 0, 0, 625, 626, 627, 684, 1183, 1220,
	0, 629, 628, 630, 687, 0, 631, 0, 0, 0,
	0, 632, 633, 688, 634, 635, 636, 1096, 0, 0,
	0, 0, 1138, 1110, 1111, 1112, 1108, 1109, 1121, 0,
	1091, 0, 0, 0, 0, 0, 0, 1089, 1090, 280,
	282, 281, 283, 284, 285, 286, 1122, 287, 288, 0,
	1120, 0, 0, 0, 1162, 1126, 0, 0, 0, 289,
	290, 1202, 291, 292, 293, 294, 295, 296, 638, 1175,
	0, 297, 1182, 298, 1181, 0, 1192, 299, 300, 301,
	302, 303, 304, 1128, 1161, 1093, 305, 1222, 1223, 645,
	0, 306, 307, 1168, 0, 1149, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1203, 330, 331, 4757, 1152, 1150,
	1151, 1158, 1154, 1153, 1157, 333, 334, 335, 336, 337,
	1185, 338, 340, 1179, 1178, 1098, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1170, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1104, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1193, 1194, 370, 1117, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1177, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1204, 378, 379,
	380, 1190, 1191, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1200, 0, 1127, 391, 0, 392,
	393, 394, 395, 396, 1163, 1164, 1167, 476, 1206, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1205, 407, 1172, 1173,
	0, 1133, 0, 409, 410, 1207, 1165, 1208, 411, 412,
	413, 1209, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1201, 1210,
	425, 426, 1211, 0, 427, 0, 0, 0, 428, 429,
	432, 1156, 1155, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1212, 458, 459, 460, 466, 468, 469, 464,
	465, 467, 470, 471, 462, 463, 1213, 472, 461, 1095,
	279, 1214, 473, 474, 1118, 1166, 475, 1180, 477, 478,
	0, 0, 479, 0, 0, 0, 481, 482, 483, 0,
	0, 484, 485, 667, 1215, 486, 1216, 1195, 487, 488,
	1105, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 498, 499, 669, 500, 501, 502, 670, 503, 504,
	505, 1196, 506, 672, 507, 508, 0, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 517, 1176, 518, 519,
	521, 520, 522, 0, 523, 0, 524, 525, 526, 0,
	0, 0, 0, 0, 527, 0, 529, 530, 531, 532,
	528, 533, 534, 535, 536, 537, 0, 538, 539, 540,
	1217, 541, 542, 543, 544, 545, 1106, 546, 0, 547,
	548, 554, 555, 556, 549, 550, 557, 558, 559, 560,
	561, 0, 563, 564, 562, 565, 566, 567, 1159, 568,
	569, 551, 552, 570, 571, 1218, 572, 573, 574, 575,
	576, 577, 578, 1174, 0, 579, 0, 580, 581, 582,
	584, 553, 585, 590, 591, 1221, 586, 587, 588, 589,
	1197, 593, 594, 0, 595, 596, 1092, 592, 583, 0,
	597, 598, 599, 600, 601, 602, 603, 364, 604, 0,
	605, 1186, 1187, 1188, 1189, 0, 614, 0, 606, 607,
	608, 1198, 609, 1199, 1116, 610, 611, 612, 613, 0,
	4756, 616, 0, 1099, 617, 618, 619, 621, 622, 620,
	623, 1160, 624, 0, 0, 625, 626, 627, 684, 1183,
	1220, 0, 629, 628, 630, 687, 0, 631, 0, 0,
	0, 0, 632, 633, 688, 634, 635, 636, 1096, 0,
	0, 0, 0, 1138, 1110, 1111, 1112, 1108, 1109, 1121,
	0, 1091, 0, 0, 0, 0, 0, 0, 1089, 1090,
	280, 282, 281, 283, 284, 285, 286, 1122, 287, 288,
	0, 1120, 0, 0, 0, 1162, 1126, 0, 0, 0,
	289, 290, 1202, 291, 292, 293, 294, 295, 296, 4755,
	1175, 0, 297, 1182, 298, 1181, 0, 1192, 299, 300,
	301, 302, 303, 304, 1128, 1161, 1093, 305, 1222, 1223,
	645, 0, 306, 307, 1168, 0, 1149, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1203, 330, 331, 4757, 1152,
	1150, 1151, 1158, 1154, 1153, 1157, 333, 334, 335, 336,
	337, 1185, 338, 340, 1179, 1178, 1098, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1170, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1104, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1193, 1194, 370, 1117, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1177, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1204, 378,
	379, 380, 1190, 1191, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1200, 0, 1127, 391, 0,
	392, 393, 394, 395, 396, 1163, 1164, 1167, 476, 1206,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1205, 407, 1172,
	1173, 0, 1133, 0, 409, 410, 1207, 1165, 1208, 411,
	412, 413, 1209, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1201,
	1210, 425, 426, 1211, 0, 427, 0, 0, 0, 428,
	429, 432, 1156, 1155, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1212, 458, 459, 460, 466, 468, 469,
	464, 465, 467, 470, 471, 462, 463, 1213, 472, 461,
	1095, 279, 1214, 473, 474, 1118, 1166, 475, 1180, 477,
	478, 0, 0, 479, 0, 0, 0, 481, 482, 483,
	0, 0, 484, 485, 667, 1215, 486, 1216, 1195, 487,
	488, 1105, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 498, 499, 669, 500, 501, 502, 670, 503,
	504, 505, 1196, 506, 672, 507, 508, 0, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 517, 1176, 518,
	519, 521, 520, 522, 0, 523, 0, 524, 525, 526,
	0, 0, 0, 0, 0, 527, 0, 529, 530, 531,
	532, 528, 533, 534, 535, 536, 537, 0, 538, 539,
	540, 1217, 541, 542, 543, 544, 545, 1106, 546, 0,
	547, 548, 554, 555, 556, 549, 550, 557, 558, 559,
	560, 561, 0, 563, 564, 562, 565, 566, 567, 1159,
	568, 569, 551, 552, 570, 571, 1218, 572, 573, 574,
	575, 576, 577, 578, 1174, 0, 579, 0, 580, 581,
	582, 584, 553, 585, 590, 591, 1221, 586, 587, 588,
	589, 1197, 593, 594, 0, 595, 596, 1092, 592, 583,
	0, 597, 598, 599, 600, 601, 602, 603, 364, 604,
	0, 605, 1186, 1187, 1188, 1189, 0, 614, 0, 606,
	607, 608, 1198, 609, 1199, 1116, 610, 611, 612, 613,
	0, 4756, 616, 0, 1099, 617, 618, 619, 621, 622,
	620, 623, 1160, 624, 0, 0, 625, 626, 627, 684,
	1183, 1220, 0, 629, 628, 630, 687, 0, 631, 0,
	0, 0, 0, 632, 633, 688, 634, 635, 636, 1096,
	0, 0, 0, 0, 1138, 1110, 1111, 1112, 1108, 1109,
	1121, 0, 1091, 0, 0, 0, 0, 0, 0, 1089,
	1090, 280, 282, 281, 283, 284, 285, 286, 1122, 287,
	288, 0, 1120, 0, 0, 0, 1162, 1126, 0, 0,
	0, 289, 290, 1202, 291, 292, 293, 294, 295, 296,
	638, 1175, 0, 297, 1182, 298, 1181, 0, 1192, 299,
	300, 301, 302, 303, 304, 1128, 1161, 1093, 305, 1222,
	1223, 645, 0, 306, 307, 1168, 0, 1149, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1203, 330, 4378, 332,
	1152, 1150, 1151, 1158, 1154, 1153, 1157, 333, 334, 335,
	336, 337, 1185, 338, 340, 1179, 1178, 1098, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1170, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1104, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1193, 1194, 370, 1117, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1177, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1204,
	378, 379, 380, 1190, 1191, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1200, 0, 4379, 391,
	0, 392, 393, 394, 395, 396, 1163, 1164, 1167, 476,
	1206, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1205, 407,
	1172, 1173, 0, 1133, 0, 409, 410, 1207, 1165, 1208,
	411, 412, 413, 1209, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1201, 1210, 425, 426, 1211, 0, 427, 0, 0, 0,
	428, 429, 432, 1156, 1155, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1212, 458, 459, 460, 466, 468,
	469, 464, 465, 467, 470, 471, 462, 463, 1213, 472,
	461, 1095, 279, 1214, 473, 474, 1118, 1166, 475, 1180,
	477, 478, 0, 0, 479, 0, 0, 0, 481, 482,
	483, 0, 0, 484, 485, 667, 1215, 486, 1216, 1195,
	487, 488, 1105, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 498, 499, 669, 500, 501, 502, 670,
	503, 504, 505, 1196, 506, 672, 507, 508, 0, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 517, 1176,
	518, 519, 521, 520, 522, 0, 523, 0, 524, 525,
	526, 0, 0, 0, 0, 0, 527, 0, 529, 530,
	531, 532, 528, 533, 534, 535, 536, 537, 0, 538,
	539, 540, 1217, 541, 542, 543, 4377, 545, 1106, 546,
	0, 547, 548, 554, 555, 556, 549, 550, 557, 558,
	559, 560, 561, 0, 563, 564, 562, 565, 566, 567,
	1159, 568, 569, 551, 552, 570, 571, 1218, 572, 573,
	574, 575, 576, 577, 578, 1174, 0, 579, 0, 580,
	581, 582, 584, 553, 585, 590, 591, 1221, 586, 587,
	588, 589, 1197, 593, 594, 0, 595, 596, 1092, 592,
	583, 0, 597, 598, 599, 600, 601, 602, 603, 364,
	604, 0, 605, 1186, 1187, 1188, 1189, 0, 614, 0,
	606, 607, 608, 1198, 609, 1199, 1116, 610, 611, 612,
	613, 0, 615, 616, 0, 1099, 617, 618, 619, 621,
	622, 620, 623, 1160, 624, 0, 0, 625, 626, 627,
	684, 1183, 1220, 0, 629, 628, 630, 687, 0, 631,
	0, 0, 0, 0, 632, 633, 688, 634, 635, 636,
	1096, 0, 0, 0, 0, 1138, 1110, 1111, 1112, 3204,
	3205, 1121, 0, 1091, 0, 0, 0, 0, 0, 0,
	1089, 1090, 280, 282, 281, 283, 284, 285, 286, 1122,
	287, 288, 0, 1120, 0, 0, 0, 1162, 1126, 0,
	0, 0, 289, 290, 1202, 291, 292, 293, 294, 295,
	296, 638, 1175, 0, 297, 1182, 298, 1181, 0, 1192,
	299, 300, 301, 302, 303, 304, 1128, 1161, 1093, 305,
	1222, 1223, 645, 0, 306, 307, 1168, 0, 1149, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1203, 330, 331,
	332, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 333, 334,
	335, 336, 337, 1185, 338, 340, 1179, 1178, 1098, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1170, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1104, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1193, 1194, 370, 1117,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1177,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1204, 378, 379, 380, 1190, 1191, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1200, 0, 1127,
	391, 0, 392, 393, 394, 395, 396, 1163, 1164, 1167,
	476, 1206, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1205,
	407, 1172, 1173, 0, 1133, 0, 409, 410, 1207, 1165,
	1208, 411, 412, 413, 1209, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1201, 1210, 425, 426, 1211, 0, 427, 0, 0,
	0, 428, 429, 432, 1156, 1155, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 466,
	468, 469, 464, 465, 467, 470, 471, 462, 463, 1213,
	472, 461, 1095, 279, 1214, 473, 474, 1118, 1166, 475,
	1180, 477, 478, 0, 0, 479, 0, 0, 0, 481,
	482, 483, 0, 0, 484, 485, 667, 1215, 486, 1216,
	1195, 487, 488, 1105, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 498, 499, 669, 500, 501, 502,
	670, 503, 504, 505, 1196, 506, 672, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 517,
	1176, 518, 519, 521, 520, 522, 0, 523, 0, 524,
	525, 526, 0, 0, 0, 0, 0, 527, 0, 529,
	530, 531, 532, 528, 533, 534, 535, 536, 537, 0,
	538, 539, 540, 1217, 541, 542, 543, 544, 545, 1106,
	546, 0, 547, 548, 554, 555, 556, 549, 550, 557,
	558, 559, 560, 561, 0, 563, 564, 562, 565, 566,
	567, 1159, 568, 569, 551, 552, 570, 571, 1218, 572,
	573, 574, 575, 576, 577, 578, 1174, 0, 579, 0,
	580, 581, 582, 584, 553, 585, 590, 591, 1221, 586,
	587, 588, 589, 1197, 593, 594, 0, 595, 596, 1092,
	592, 583, 0, 597, 598, 599, 600, 601, 602, 603,
	364, 604, 0, 605, 1186, 1187, 1188, 1189, 0, 614,
	0, 606, 607, 608, 1198, 609, 1199, 1116, 610, 611,
	612, 613, 0, 615, 616, 0, 1099, 617, 618, 619,
	621, 622, 620, 623, 1160, 624, 0, 0, 625, 626,
	627, 684, 1183, 1220, 0, 629, 628, 630, 687, 0,
	631, 0, 0, 0, 0, 632, 633, 688, 634, 635,
	636, 1096, 0, 0, 0, 0, 1138, 1110, 1111, 1112,
	3202, 3203, 1121, 0, 1091, 0, 0, 0, 0, 0,
	0, 1089, 1090, 280, 282, 281, 283, 284, 285, 286,
	1122, 287, 288, 0, 1120, 0, 0, 0, 1162, 1126,
	0, 0, 0, 289, 290, 1202, 291, 292, 293, 294,
	295, 296, 638, 1175, 0, 297, 1182, 298, 1181, 0,
	1192, 299, 300, 301, 302, 303, 304, 1128, 1161, 1093,
	305, 1222, 1223, 645, 0, 306, 307, 1168, 0, 1149,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1203, 330,
	331, 332, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 333,
	334, 335, 336, 337, 1185, 338, 340, 1179, 1178, 1098,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1170, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1104, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1193, 1194, 370,
	1117, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1177, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1204, 378, 379, 380, 1190, 1191, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1200, 0,
	1127, 391, 0, 392, 393, 394, 395, 396, 1163, 1164,
	1167, 476, 1206, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1205, 407, 1172, 1173, 0, 1133, 0, 409, 410, 1207,
	1165, 1208, 411, 412, 413, 1209, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1201, 1210, 425, 426, 1211, 0, 427, 0,
	0, 0, 428, 429, 432, 1156, 1155, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1212, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	1213, 472, 461, 1095, 279, 1214, 473, 474, 1118, 1166,
	475, 1180, 477, 478, 0, 0, 479, 0, 0, 0,
	481, 482, 483, 0, 0, 484, 485, 667, 1215, 486,
	1216, 1195, 487, 488, 1105, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 1196, 506, 672, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 1176, 518, 519, 521, 520, 522, 0, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	0, 538, 539, 540, 1217, 541, 542, 543, 544, 545,
	1106, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 0, 563, 564, 562, 565,
	566, 567, 1159, 568, 569, 551, 552, 570, 571, 1218,
	572, 573, 574, 575, 576, 577, 578, 1174, 0, 579,
	0, 580, 581, 582, 584, 553, 585, 590, 591, 1221,
	586, 587, 588, 589, 1197, 593, 594, 0, 595, 596,
	1092, 592, 583, 0, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 0, 605, 1186, 1187, 1188, 1189, 0,
	614, 0, 606, 607, 608, 1198, 609, 1199, 1116, 610,
	611, 612, 613, 0, 615, 616, 0, 1099, 617, 618,
	619, 621, 622, 620, 623, 1160, 624, 0, 0, 625,
	626, 627, 684, 1183, 1220, 0, 629, 628, 630, 687,
	0, 631, 0, 0, 0, 0, 632, 633, 688, 634,
	635, 636, 1096, 0, 0, 0, 0, 1138, 1110, 1111,
	1112, 1108, 1109, 1121, 0, 1091, 0, 0, 0, 0,
	0, 0, 1089, 1090, 280, 282, 281, 283, 284, 285,
	286, 1122, 287, 288, 0, 1120, 0, 0, 0, 1162,
	1126, 0, 0, 0, 289, 290, 1202, 291, 292, 293,
	294, 295, 296, 638, 1175, 0, 297, 1182, 298, 1181,
	0, 1192, 299, 300, 301, 302, 303, 304, 1128, 1161,
	1093, 305, 1222, 1223, 645, 0, 306, 307, 1168, 0,
	1149, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1203,
	330, 331, 332, 1152, 1150, 1151, 1158, 1154, 1153, 1157,
	333, 334, 335, 336, 337, 1185, 338, 340, 1179, 1178,
	1098, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1170, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1104, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1193, 1194,
	370, 1117, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1177, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1204, 378, 379, 380, 1190, 1191, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1200,
	0, 1127, 391, 0, 392, 393, 394, 395, 396, 1163,
	1164, 1167, 476, 1206, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1205, 407, 1172, 1173, 0, 1133, 0, 409, 410,
	1207, 1165, 1208, 411, 412, 413, 1209, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1201, 1210, 425, 426, 1211, 0, 427,
	0, 0, 0, 428, 429, 432, 1156, 1155, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1212, 458, 459,
	460, 466, 468, 469, 464, 465, 467, 470, 471, 462,
	463, 1213, 472, 461, 1095, 279, 1214, 473, 474, 1118,
	1166, 475, 1180, 477, 478, 0, 0, 479, 0, 0,
	0, 481, 482, 483, 0, 0, 484, 485, 667, 1215,
	486, 1216, 1195, 487, 488, 1105, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 0, 498, 499, 669, 500,
	501, 502, 670, 503, 504, 505, 1196, 506, 672, 507,
	508, 0, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 517, 1176, 518, 519, 521, 520, 522, 0, 523,
	0, 524, 525, 526, 0, 0, 0, 0, 0, 527,
	0, 529, 530, 531, 532, 528, 533, 534, 535, 536,
	537, 0, 538, 539, 540, 1217, 541, 542, 543, 544,
	545, 1106, 546, 0, 547, 548, 554, 555, 556, 549,
	550, 557, 558, 559, 560, 561, 0, 563, 564, 562,
	565, 566, 567, 1159, 568, 569, 551, 552, 570, 571,
	1218, 572, 573, 574, 575, 576, 577, 578, 1174, 0,
	579, 0, 580, 581, 582, 584, 553, 585, 590, 591,
	1221, 586, 587, 588, 589, 1197, 593, 594, 0, 595,
	596, 1092, 592, 583, 0, 597, 598, 599, 600, 601,
	602, 603, 364, 604, 0, 605, 1186, 1187, 1188, 1189,
	0, 614, 0, 606, 607, 608, 1198, 609, 1199, 1116,
	610, 611, 612, 613, 0, 615, 616, 0, 1099, 617,
	618, 619, 621, 622, 620, 623, 1160, 624, 0, 0,
	625, 626, 627, 684, 1183, 1220, 0, 629, 628, 630,
	687, 0, 631, 0, 0, 0, 0, 632, 633, 688,
	634, 635, 636, 1096, 0, 0, 0, 0, 1138, 1110,
	1111, 1112, 1108, 1109, 1121, 0, 1091, 0, 0, 0,
	0, 0, 0, 2464, 2465, 280, 282, 281, 283, 284,
	285, 286, 1122, 287, 288, 0, 1120, 0, 0, 0,
	1162, 1126, 0, 0, 0, 289, 290, 1202, 291, 292,
	293, 294, 295, 296, 638, 1175, 0, 297, 1182, 298,
	1181, 0, 1192, 299, 300, 301, 302, 303, 304, 1128,
	1161, 0, 305, 1222, 1223, 645, 0, 306, 307, 1168,
	0, 1149, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1203, 330, 331, 332, 1152, 1150, 1151, 1158, 1154, 1153,
	1157, 333, 334, 335, 336, 337, 1185, 338, 340, 1179,
	1178, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1170, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1104, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1193,
	1194, 370, 1117, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1177, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1204, 378, 379, 380, 1190, 1191, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1200, 0, 1127, 391, 0, 392, 393, 394, 395, 396,
	1163, 1164, 1167, 476, 1206, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1205, 407, 1172, 1173, 0, 1133, 0, 409,
	410, 1207, 1165, 1208, 411, 412, 413, 1209, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1201, 1210, 425, 426, 1211, 0,
	427, 0, 0, 0, 428, 429, 432, 1156, 1155, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1212, 458,
	459, 460, 466, 468, 469, 464, 465, 467, 470, 471,
	462, 463, 1213, 472, 461, 0, 279, 1214, 473, 474,
	1118, 1166, 475, 1180, 477, 478, 0, 0, 479, 0,
	0, 0, 481, 482, 483, 0, 0, 484, 485, 667,
	1215, 486, 1216, 1195, 487, 488, 1105, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 498, 499, 669,
	500, 501, 502, 670, 503, 504, 505, 1196, 506, 672,
	507, 508, 0, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 517, 1176, 518, 519, 521, 520, 522, 0,
	523, 0, 524, 525, 526, 0, 0, 0, 0, 0,
	527, 0, 529, 530, 531, 532, 528, 533, 534, 535,
	536, 537, 0, 538, 539, 540, 1217, 541, 542, 543,
	544, 545, 1106, 546, 0, 547, 548, 554, 555, 556,
	549, 550, 557, 558, 559, 560, 561, 0, 563, 564,
	562, 565, 566, 567, 1159, 568, 569, 551, 552, 570,
	571, 1218, 572, 573, 574, 575, 576, 577, 578, 1174,
	0, 579, 0, 580, 581, 582, 584, 553, 585, 590,
	591, 1221, 586, 587, 588, 589, 1197, 593, 594, 0,
	595, 596, 0, 592, 583, 0, 597, 598, 599, 600,
	601, 602, 603, 364, 604, 0, 605, 1186, 1187, 1188,
	1189, 0, 614, 0, 606, 607, 608, 1198, 609, 1199,
	1116, 610, 611, 612, 613, 0, 615, 616, 0, 0,
	617, 618, 619, 621, 622, 620, 623, 1160, 624, 0,
	0, 625, 626, 627, 684, 1183, 1220, 0, 629, 628,
	630, 687, 0, 631, 0, 0, 0, 0, 632, 633,
	688, 634, 635, 636, 0, 0, 0, 0, 0, 1138,
	1110, 1111, 1112, 1108, 1109, 1121, 0, 2723, 0, 0,
	0, 0, 0, 0, 2721, 2722, 280, 282, 281, 283,
	284, 285, 286, 1122, 287, 288, 0, 1120, 0, 0,
	0, 1162, 1126, 0, 0, 0, 289, 290, 1202, 291,
	292, 293, 294, 295, 296, 638, 1175, 0, 297, 1182,
	298, 1181, 0, 1192, 299, 300, 301, 302, 303, 304,
	1128, 1161, 0, 305, 1222, 1223, 645, 0, 306, 307,
	1168, 0, 1149, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1203, 330, 331, 332, 1152, 1150, 1151, 1158, 1154,
	1153, 1157, 333, 334, 335, 336, 337, 1185, 338, 340,
	1179, 1178, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1170, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1104,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1193, 1194, 370, 1117, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1177, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1204, 378, 379, 380, 1190, 1191,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1200, 0, 1127, 391, 0, 392, 393, 394, 395,
	396, 1163, 1164, 1167, 476, 1206, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1205, 407, 1172, 1173, 0, 1133, 0,
	409, 410, 1207, 1165, 1208, 411, 412, 413, 1209, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1201, 1210, 425, 426, 1211,
	0, 427, 0, 0, 0, 428, 429, 432, 1156, 1155,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1212,
	458, 459, 460, 466, 468, 469, 464, 465, 467, 470,
	471, 462, 463, 1213, 472, 461, 0, 279, 1214, 473,
	474, 1118, 1166, 475, 1180, 477, 478, 0, 0, 479,
	0, 0, 0, 481, 482, 483, 0, 0, 484, 485,
	667, 1215, 486, 1216, 1195, 487, 488, 480, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 0, 498, 499,
	669, 500, 501, 502, 670, 503, 504, 505, 1196, 506,
	672, 507, 508, 0, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 517, 1176, 518, 519, 521, 520, 522,
	0, 523, 0, 524, 525, 526, 0, 0, 0, 0,
	0, 527, 0, 529, 530, 531, 532, 528, 533, 534,
	535, 536, 537, 0, 538, 539, 540, 1217, 541, 542,
	543, 544, 545, 3197, 3198, 0, 547, 548, 554, 555,
	556, 549, 550, 557, 558, 559, 560, 561, 0, 563,
	564, 562, 565, 566, 567, 1159, 568, 569, 551, 552,
	570, 571, 1218, 572, 573, 574, 575, 576, 577, 578,
	1174, 0, 579, 0, 580, 581, 582, 584, 553, 585,
	590, 591, 1221, 586, 587, 588, 589, 1197, 593, 594,
	0, 595, 596, 0, 592, 583, 0, 597, 598, 599,
	600, 601, 602, 603, 364, 604, 0, 605, 1186, 1187,
	1188, 1189, 0, 614, 0, 606, 607, 608, 1198, 609,
	1199, 1116, 610, 611, 612, 613, 0, 615, 616, 0,
	0, 617, 618, 619, 621, 622, 620, 623, 1160, 624,
	0, 0, 625, 626, 627, 684, 1183, 1220, 0, 629,
	628, 630, 687, 0, 631, 0, 0, 0, 0, 632,
	633, 688, 634, 635, 636, 0, 0, 0, 0, 0,
	1138, 1110, 1111, 1112, 1108, 1109, 1121, 0, 0, 0,
	0, 0, 0, 0, 0, 2136, 2137, 280, 282, 281,
	283, 284, 285, 286, 1122, 287, 288, 0, 1120, 0,
	0, 0, 1162, 1126, 0, 0, 0, 289, 290, 1202,
	291, 292, 293, 294, 295, 296, 0, 1175, 0, 297,
	1182, 298, 1181, 0, 1192, 299, 300, 301, 302, 303,
	304, 1128, 1161, 1093, 305, 1222, 1223, 645, 0, 306,
	307, 1168, 0, 1149, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1203, 330, 331, 4757, 1152, 1150, 1151, 1158,
	1154, 1153, 1157, 333, 334, 335, 336, 337, 1185, 338,
	340, 1179, 1178, 1098, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1170, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1104, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1193, 1194, 370, 1117, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1177, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1204, 378, 379, 380, 1190,
	1191, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1200, 0, 1127, 391, 0, 392, 393, 394,
	395, 396, 1163, 1164, 1167, 476, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1205, 407, 1172, 1173, 0, 1133,
	0, 409, 410, 0, 1165, 0, 411, 412, 413, 1209,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1201, 1210, 425, 426,
	0, 0, 427, 0, 0, 0, 428, 429, 432, 1156,
	1155, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1212, 458, 459, 460, 466, 468, 469, 464, 465, 467,
	470, 471, 462, 463, 1213, 472, 461, 1095, 279, 0,
	473, 474, 1118, 1166, 475, 1180, 477, 478, 0, 0,
	479, 0, 0, 0, 481, 482, 483, 0, 0, 484,
	485, 667, 1215, 486, 1216, 1195, 487, 488, 1105, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 498,
	499, 669, 500, 501, 502, 670, 503, 504, 505, 1196,
	506, 672, 507, 508, 0, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 517, 1176, 518, 519, 521, 520,
	522, 0, 523, 0, 524, 525, 526, 0, 0, 0,
	0, 0, 527, 0, 529, 530, 531, 532, 528, 533,
	534, 535, 536, 537, 0, 538, 539, 540, 1217, 541,
	542, 543, 544, 545, 1106, 546, 0, 547, 548, 554,
	555, 556, 549, 550, 557, 558, 559, 560, 561, 0,
	563, 564, 562, 565, 566, 567, 1159, 568, 569, 551,
	552, 570, 571, 0, 572, 573, 574, 575, 576, 577,
	578, 1174, 0, 579, 0, 580, 581, 582, 584, 553,
	585, 590, 591, 1221, 586, 587, 588, 589, 1197, 593,
	594, 0, 595, 596, 1092, 592, 583, 0, 597, 598,
	599, 600, 601, 602, 603, 364, 604, 0, 605, 1186,
	1187, 1188, 1189, 0, 614, 0, 606, 607, 608, 1198,
	609, 1199, 1116, 610, 611, 612, 613, 0, 4756, 616,
	0, 1099, 617, 618, 619, 621, 622, 620, 623, 1160,
	624, 0, 0, 625, 626, 627, 684, 1183, 1220, 0,
	629, 628, 630, 687, 0, 631, 0, 0, 0, 0,
	632, 633, 688, 634, 635, 636, 0, 0, 0, 1082,
	0, 1260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1089, 1090, 280, 282,
	281, 283, 284, 285, 286, 1122, 287, 288, 0, 1120,
	0, 0, 0, 1162, 0, 0, 0, 0, 289, 290,
	1202, 291, 292, 293, 294, 295, 296, 638, 639, 0,
	297, 640, 298, 641, 0, 642, 299, 300, 301, 302,
	303, 304, 0, 1161, 0, 305, 643, 644, 645, 0,
	306, 307, 1168, 0, 1149, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1203, 330, 331, 332, 1152, 1150, 1151,
	1158, 1154, 1153, 1157, 333, 334, 335, 336, 337, 0,
	338, 340, 647, 648, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 649, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1193, 1194, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 652, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1204, 378, 379, 380,
	653, 654, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1200, 0, 656, 391, 0, 392, 393,
	394, 395, 396, 1163, 1164, 1167, 476, 1206, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1205, 407, 660, 661, 0,
	662, 0, 409, 410, 1207, 1165, 1208, 411, 412, 413,
	1209, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 1246, 421, 423, 422, 0, 424, 1201, 1210, 425,
	426, 1211, 0, 427, 0, 0, 0, 428, 429, 432,
	1156, 1155, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1212, 458, 459, 460, 466, 468, 469, 464, 465,
	467, 470, 471, 462, 463, 1213, 472, 461, 0, 279,
	1214, 473, 474, 0, 1166, 475, 666, 477, 478, 0,
	0, 479, 0, 0, 1252, 481, 482, 483, 0, 0,
	484, 485, 667, 1215, 486, 1216, 1195, 487, 488, 480,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 0,
	498, 499, 669, 500, 501, 502, 670, 503, 504, 505,
	1196, 506, 672, 507, 508, 0, 509, 510, 0, 511,
	512, 513, 514, 515, 516, 517, 673, 518, 519, 521,
	520, 522, 0, 523, 0, 524, 525, 526, 0, 0,
	0, 0, 0, 527, 0, 529, 530, 531, 532, 528,
	533, 534, 535, 536, 537, 0, 538, 539, 540, 1217,
	541, 542, 543, 544, 545, 674, 1254, 0, 547, 548,
	554, 555, 556, 549, 550, 557, 558, 559, 560, 561,
	239, 563, 564, 562, 565, 566, 567, 1159, 568, 569,
	551, 552, 570, 571, 1218, 572, 573, 574, 575, 576,
	577, 578, 675, 0, 579, 0, 580, 581, 582, 584,
	553, 585, 590, 591, 676, 586, 587, 588, 589, 1197,
	593, 594, 0, 595, 596, 0, 592, 583, 241, 597,
	598, 599, 600, 601, 602, 603, 364, 604, 0, 605,
	678, 679, 680, 681, 0, 614, 0, 606, 607, 608,
	1198, 609, 1199, 0, 610, 611, 612, 613, 0, 615,
	616, 0, 0, 617, 618, 619, 621, 622, 620, 623,
	1160, 624, 0, 0, 625, 626, 627, 1627, 685, 686,
	0, 629, 628, 630, 687, 0, 631, 0, 0, 0,
	233, 632, 633, 688, 634, 635, 636, 1260, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 1250, 0, 1979, 0, 0, 1162,
	0, 0, 0, 0, 289, 290, 1202, 291, 292, 293,
	294, 295, 296, 638, 639, 0, 297, 640, 298, 641,
	0, 642, 299, 300, 301, 302, 303, 304, 0, 1161,
	0, 305, 643, 644, 645, 0, 306, 307, 1168, 0,
	1149, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1203,
	330, 331, 332, 1152, 1150, 1151, 1158, 1154, 1153, 1157,
	333, 334, 335, 336, 337, 0, 338, 340, 647, 648,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 649, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1193, 1194,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 652, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1204, 378, 379, 380, 653, 654, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1200,
	0, 656, 391, 0, 392, 393, 394, 395, 396, 1163,
	1164, 1167, 476, 1206, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1205, 407, 660, 661, 0, 662, 0, 409, 410,
	1207, 1165, 1208, 411, 412, 413, 1209, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1246, 421, 423,
	422, 0, 424, 1201, 1210, 425, 426, 1211, 0, 427,
	0, 0, 0, 428, 429, 432, 1156, 1155, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1212, 458, 459,
	460, 466, 468, 469, 464, 465, 467, 470, 471, 462,
	463, 1213, 472, 461, 0, 279, 1214, 473, 474, 0,
	1166, 475, 666, 477, 478, 0, 0, 479, 0, 0,
	1252, 481, 482, 483, 0, 0, 484, 485, 667, 1215,
	486, 1216, 1195, 487, 488, 480, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 0, 498, 499, 669, 500,
	501, 502, 670, 503, 504, 505, 1196, 506, 672, 507,
	508, 0, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 517, 673, 518, 519, 521, 520, 522, 0, 523,
	0, 524, 525, 526, 0, 0, 0, 0, 0, 527,
	0, 529, 530, 531, 532, 528, 533, 534, 535, 536,
	537, 0, 538, 539, 540, 1217, 541, 542, 543, 544,
	545, 674, 1254, 0, 547, 548, 554, 555, 556, 549,
	550, 557, 558, 559, 560, 561, 239, 563, 564, 562,
	565, 566, 567, 1159, 568, 569, 551, 552, 570, 571,
	1218, 572, 573, 574, 575, 576, 577, 578, 675, 0,
	579, 0, 580, 581, 582, 584, 553, 585, 590, 591,
	676, 586, 587, 588, 589, 1197, 593, 594, 0, 595,
	596, 0, 592, 583, 241, 597, 598, 599, 600, 601,
	602, 603, 364, 604, 0, 605, 678, 679, 680, 681,
	0, 614, 0, 606, 607, 608, 1198, 609, 1199, 0,
	610, 611, 612, 613, 0, 615, 616, 0, 0, 617,
	618, 619, 621, 622, 620, 623, 1160, 624, 0, 0,
	625, 626, 627, 1627, 685, 686, 0, 629, 628, 630,
	687, 0, 631, 0, 0, 0, 233, 632, 633, 688,
	634, 635, 636, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 3361, 0, 1260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1250, 0, 1979, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 1162, 0,
	0, 0, 0, 289, 290, 1202, 291, 292, 293, 294,
	295, 296, 638, 639, 0, 297, 640, 298, 641, 0,
	642, 299, 300, 301, 302, 303, 304, 0, 1161, 0,
	305, 643, 644, 645, 0, 306, 307, 1168, 0, 1149,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1203, 330,
	331, 332, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 333,
	334, 335, 336, 337, 0, 338, 340, 647, 648, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 649, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1193, 1194, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	652, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1204, 378, 379, 380, 653, 654, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1200, 0,
	656, 391, 0, 392, 393, 394, 395, 396, 1163, 1164,
	1167, 476, 1206, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1205, 407, 660, 661, 0, 662, 0, 409, 410, 1207,
	1165, 1208, 411, 412, 413, 1209, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1246, 421, 423, 422,
	0, 424, 1201, 1210, 425, 426, 1211, 0, 427, 0,
	0, 0, 428, 429, 432, 1156, 1155, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1212, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	1213, 472, 461, 0, 279, 1214, 473, 474, 0, 1166,
	475, 666, 477, 478, 0, 0, 479, 0, 0, 1252,
	481, 482, 483, 0, 0, 484, 485, 667, 1215, 486,
	1216, 1195, 487, 488, 480, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 1196, 506, 672, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 673, 518, 519, 521, 520, 522, 0, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	0, 538, 539, 540, 1217, 541, 542, 543, 544, 545,
	674, 1254, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 0, 563, 564, 562, 565,
	566, 567, 1159, 568, 569, 551, 552, 570, 571, 1218,
	572, 573, 574, 575, 576, 577, 578, 675, 0, 579,
	0, 580, 581, 582, 584, 553, 585, 590, 591, 676,
	586, 587, 588, 589, 1197, 593, 594, 0, 595, 596,
	0, 592, 583, 0, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 0, 605, 678, 679, 680, 681, 0,
	614, 0, 606, 607, 608, 1198, 609, 1199, 0, 610,
	611, 612, 613, 0, 615, 616, 0, 0, 617, 618,
	619, 621, 622, 620, 623, 1160, 624, 0, 0, 625,
	626, 627, 684, 685, 686, 0, 629, 628, 630, 687,
	0, 631, 0, 1242, 0, 1260, 632, 633, 688, 634,
	635, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 1162, 0, 1250,
	0, 1248, 289, 290, 1202, 291, 292, 293, 294, 295,
	296, 638, 639, 0, 297, 640, 298, 641, 0, 642,
	299, 300, 301, 302, 303, 304, 0, 1161, 0, 305,
	643, 644, 645, 0, 306, 307, 1168, 0, 1149, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1203, 330, 331,
	332, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 333, 334,
	335, 336, 337, 0, 338, 340, 647, 648, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 649, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1193, 1194, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 652,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1204, 378, 379, 380, 653, 654, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1200, 0, 656,
	391, 0, 392, 393, 394, 395, 396, 1163, 1164, 1167,
	476, 1206, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1205,
	407, 660, 661, 0, 662, 0, 409, 410, 1207, 1165,
	1208, 411, 412, 413, 1209, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 1246, 421, 423, 422, 0,
	424, 1201, 1210, 425, 426, 1211, 0, 427, 0, 0,
	0, 428, 429, 432, 1156, 1155, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 466,
	468, 469, 464, 465, 467, 470, 471, 462, 463, 1213,
	472, 461, 0, 279, 1214, 473, 474, 0, 1166, 475,
	666, 477, 478, 0, 0, 479, 0, 0, 1252, 481,
	482, 483, 0, 0, 484, 485, 667, 1215, 486, 1216,
	1195, 487, 488, 480, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 498, 499, 669, 500, 501, 502,
	670, 503, 504, 505, 1196, 506, 672, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 517,
	673, 518, 519, 521, 520, 522, 0, 523, 0, 524,
	525, 526, 0, 0, 0, 0, 0, 527, 0, 529,
	530, 531, 532, 528, 533, 534, 535, 536, 537, 0,
	538, 539, 540, 1217, 541, 542, 543, 544, 545, 674,
	1254, 0, 547, 548, 554, 555, 556, 549, 550, 557,
	558, 559, 560, 561, 0, 563, 564, 562, 565, 566,
	567, 1159, 568, 569, 551, 552, 570, 571, 1218, 572,
	573, 574, 575, 576, 577, 578, 675, 0, 579, 0,
	580, 581, 582, 584, 553, 585, 590, 591, 676, 586,
	587, 588, 589, 1197, 593, 594, 0, 595, 596, 0,
	592, 583, 0, 597, 598, 599, 600, 601, 602, 603,
	364, 604, 0, 605, 678, 679, 680, 681, 0, 614,
	0, 606, 607, 608, 1198, 609, 1199, 0, 610, 611,
	612, 613, 0, 615, 616, 0, 0, 617, 618, 619,
	621, 622, 620, 623, 1160, 624, 0, 0, 625, 626,
	627, 684, 685, 686, 0, 629, 628, 630, 687, 0,
	631, 0, 0, 0, 1260, 632, 633, 688, 634, 635,
	636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 1162, 0, 1250, 0,
	1248, 289, 290, 1202, 291, 292, 293, 294, 295, 296,
	638, 639, 0, 297, 640, 298, 641, 0, 642, 299,
	300, 301, 302, 303, 304, 0, 1161, 0, 305, 643,
	644, 645, 0, 306, 307, 1168, 0, 1149, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1203, 330, 331, 332,
	1152, 1150, 1151, 1158, 1154, 1153, 1157, 333, 334, 335,
	336, 337, 0, 338, 340, 647, 648, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 649, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1193, 1194, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 652, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1204,
	378, 379, 380, 653, 654, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1200, 0, 656, 391,
	0, 392, 393, 394, 395, 396, 1163, 1164, 1167, 476,
	1206, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1205, 407,
	660, 661, 0, 662, 0, 409, 410, 1207, 1165, 1208,
	411, 412, 413, 1209, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 1246, 421, 423, 422, 0, 424,
	1201, 1210, 425, 426, 1211, 0, 427, 0, 0, 0,
	428, 429, 432, 1156, 1155, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1212, 458, 459, 460, 466, 468,
	469, 464, 465, 467, 470, 471, 462, 463, 1213, 472,
	461, 0, 279, 1214, 473, 474, 0, 1166, 475, 666,
	477, 478, 0, 0, 479, 0, 0, 1252, 481, 482,
	483, 0, 0, 484, 485, 667, 1215, 486, 1216, 1195,
	487, 488, 480, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 498, 499, 669, 500, 501, 502, 670,
	503, 504, 505, 1196, 506, 672, 507, 508, 0, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 517, 673,
	518, 519, 521, 520, 522, 0, 523, 0, 524, 525,
	526, 0, 0, 0, 0, 0, 527, 0, 529, 530,
	531, 532, 528, 533, 534, 535, 536, 537, 0, 538,
	539, 540, 1217, 541, 542, 543, 544, 545, 674, 1254,
	0, 547, 548, 554, 555, 556, 549, 550, 557, 558,
	559, 560, 561, 0, 563, 564, 562, 565, 566, 567,
	1159, 568, 569, 551, 552, 570, 571, 1218, 572, 573,
	574, 575, 576, 577, 578, 675, 0, 579, 0, 580,
	581, 582, 584, 553, 585, 590, 591, 676, 586, 587,
	588, 589, 1197, 593, 594, 0, 595, 596, 0, 592,
	583, 0, 597, 598, 599, 600, 601, 602, 603, 364,
	604, 0, 605, 678, 679, 680, 681, 0, 614, 0,
	606, 607, 608, 1198, 609, 1199, 0, 610, 611, 612,
	613, 0, 615, 616, 0, 0, 617, 618, 619, 621,
	622, 620, 623, 1160, 624, 0, 0, 625, 626, 627,
	684, 685, 686, 0, 629, 628, 630, 687, 0, 631,
	0, 0, 0, 1260, 632, 633, 688, 634, 635, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1162, 0, 1250, 0, 1248,
	289, 290, 1202, 291, 292, 293, 294, 295, 296, 638,
	639, 0, 297, 640, 298, 641, 0, 642, 299, 300,
	301, 302, 303, 304, 0, 1161, 0, 305, 643, 644,
	645, 0, 306, 307, 1168, 0, 1149, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1203, 330, 331, 332, 1152,
	1150, 1151, 1158, 1154, 1153, 1157, 333, 334, 335, 336,
	337, 0, 338, 340, 647, 648, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 649, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1193, 1194, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 652, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1204, 378,
	379, 380, 653, 654, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1200, 0, 656, 391, 0,
	392, 393, 394, 395, 396, 1163, 1164, 1167, 476, 1206,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1205, 407, 660,
	661, 0, 662, 0, 409, 410, 1207, 1165, 1208, 411,
	412, 413, 1209, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1201,
	1210, 425, 426, 1211, 0, 427, 0, 0, 0, 428,
	429, 432, 1156, 1155, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1212, 458, 459, 460, 466, 468, 469,
	464, 465, 467, 470, 471, 462, 463, 1213, 472, 461,
	0, 279, 1214, 473, 474, 0, 1166, 475, 666, 477,
	478, 0, 0, 479, 0, 0, 0, 481, 482, 483,
	0, 0, 484, 485, 667, 1215, 486, 1216, 1195, 487,
	488, 480, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 498, 499, 669, 500, 501, 502, 670, 503,
	504, 505, 1196, 506, 672, 507, 508, 0, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 517, 673, 518,
	519, 521, 520, 522, 0, 523, 0, 524, 525, 526,
	0, 0, 0, 0, 0, 527, 0, 529, 530, 531,
	532, 528, 533, 534, 535, 536, 537, 0, 538, 539,
	540, 1217, 541, 542, 543, 544, 545, 674, 546, 0,
	547, 548, 554, 555, 556, 549, 550, 557, 558, 559,
	560, 561, 0, 563, 564, 562, 565, 566, 567, 1159,
	568, 569, 551, 552, 570, 571, 1218, 572, 573, 574,
	575, 576, 577, 578, 675, 0, 579, 0, 580, 581,
	582, 584, 553, 585, 590, 591, 676, 586, 587, 588,
	589, 1197, 593, 594, 0, 595, 596, 0, 592, 583,
	0, 597, 598, 599, 600, 601, 602, 603, 364, 604,
	0, 605, 678, 679, 680, 681, 0, 614, 0, 606,
	607, 608, 1198, 609, 1199, 0, 610, 611, 612, 613,
	0, 615, 616, 0, 0, 617, 618, 619, 621, 622,
	620, 623, 1160, 624, 0, 0, 625, 626, 627, 684,
	685, 686, 0, 629, 628, 630, 687, 0, 631, 0,
	0, 0, 1260, 632, 633, 688, 634, 635, 636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 1162, 0, 0, 0, 4199, 289,
	290, 1202, 291, 292, 293, 294, 295, 296, 638, 639,
	0, 297, 640, 298, 641, 0, 642, 299, 300, 301,
	302, 303, 304, 0, 1161, 0, 305, 643, 644, 645,
	0, 306, 307, 1168, 0, 1149, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1203, 330, 331, 332, 1152, 1150,
	1151, 1158, 1154, 1153, 1157, 333, 334, 335, 336, 337,
	0, 338, 340, 647, 648, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 649, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1193, 1194, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 652, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1204, 378, 379,
	380, 653, 654, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1200, 0, 656, 391, 0, 392,
	393, 394, 395, 396, 1163, 1164, 1167, 476, 1206, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1205, 407, 660, 661,
	0, 662, 0, 409, 410, 1207, 1165, 1208, 411, 412,
	413, 1209, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1201, 1210,
	425, 426, 1211, 0, 427, 0, 0, 0, 428, 429,
	432, 1156, 1155, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1212, 458, 459, 460, 466, 468, 469, 464,
	465, 467, 470, 471, 462, 463, 1213, 472, 461, 0,
	279, 1214, 473, 474, 0, 1166, 475, 666, 477, 478,
	0, 0, 479, 0, 0, 0, 481, 482, 483, 0,
	0, 484, 485, 667, 1215, 486, 1216, 1195, 487, 488,
	480, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 498, 499, 669, 500, 501, 502, 670, 503, 504,
	505, 1196, 506, 672, 507, 508, 0, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 517, 673, 518, 519,
	521, 520, 522, 0, 523, 0, 524, 525, 526, 0,
	0, 0, 0, 0, 527, 0, 529, 530, 531, 532,
	528, 533, 534, 535, 536, 537, 0, 538, 539, 540,
	1217, 541, 542, 543, 544, 545, 674, 1254, 0, 547,
	548, 554, 555, 556, 549, 550, 557, 558, 559, 560,
	561, 0, 563, 564, 562, 565, 566, 567, 1159, 568,
	569, 551, 552, 570, 571, 1218, 572, 573, 574, 575,
	576, 577, 578, 675, 0, 579, 0, 580, 581, 582,
	584, 553, 585, 590, 591, 676, 586, 587, 588, 589,
	1197, 593, 594, 0, 595, 596, 0, 592, 583, 0,
	597, 598, 599, 600, 601, 602, 603, 364, 604, 0,
	605, 678, 679, 680, 681, 0, 614, 0, 606, 607,
	608, 1198, 609, 1199, 0, 610, 611, 612, 613, 0,
	615, 616, 0, 0, 617, 618, 619, 621, 622, 620,
	623, 1160, 624, 0, 0, 625, 626, 627, 684, 685,
	686, 0, 629, 628, 630, 687, 0, 631, 274, 0,
	0, 0, 632, 633, 688, 634, 635, 636, 2568, 2569,
	2570, 2587, 2588, 2589, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 2590, 0,
	637, 0, 0, 0, 0, 289, 290, 1876, 291, 292,
	293, 294, 295, 296, 638, 639, 0, 297, 640, 298,
	641, 0, 642, 299, 300, 301, 302, 303, 304, 0,
	0, 1861, 305, 643, 644, 645, 0, 306, 307, 646,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	2580, 0, 316, 317, 318, 315, 319, 0, 320, 2576,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 647,
	648, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 649, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 650,
	651, 370, 0, 0, 0, 2581, 2582, 2583, 2584, 371,
	372, 373, 652, 0, 0, 2575, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 653, 654, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	655, 0, 656, 391, 0, 392, 393, 394, 395, 396,
	657, 658, 659, 476, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 660, 661, 0, 662, 0, 409,
	410, 0, 663, 0, 411, 412, 413, 0, 414, 0,
	2585, 2586, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 664, 0, 425, 426, 0, 0,
	427, 0, 0, 0, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 2578, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 466, 468, 469, 464, 465, 467, 470, 471,
	462, 463, 0, 472, 461, 0, 0, 0, 473, 474,
	0, 665, 475, 666, 477, 478, 0, 0, 479, 0,
	0, 0, 481, 482, 483, 0, 0, 484, 485, 667,
	0, 486, 0, 668, 487, 488, 480, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 498, 499, 669,
	500, 501, 502, 670, 503, 504, 505, 671, 506, 672,
	507, 508, 0, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 517, 673, 518, 519, 521, 520, 522, 0,
	523, 0, 524, 525, 526, 0, 0, 0, 0, 0,
	527, 0, 529, 530, 531, 532, 528, 533, 534, 535,
	536, 537, 0, 538, 539, 540, 0, 541, 542, 543,
	544, 545, 674, 546, 2579, 547, 548, 554, 555, 556,
	549, 550, 557, 558, 559, 560, 561, 0, 563, 564,
	562, 565, 566, 567, 0, 568, 569, 551, 552, 570,
	571, 0, 572, 573, 574, 575, 576, 577, 578, 675,
	0, 579, 0, 580, 581, 582, 584, 553, 585, 590,
	591, 676, 586, 587, 588, 589, 677, 593, 594, 0,
	595, 596, 1860, 592, 583, 0, 597, 598, 599, 600,
	601, 602, 603, 364, 604, 0, 605, 678, 679, 680,
	681, 0, 614, 0, 606, 607, 608, 682, 609, 683,
	0, 610, 611, 612, 613, 0, 615, 616, 0, 0,
	617, 618, 619, 621, 622, 620, 623, 0, 624, 0,
	0, 625, 626, 627, 684, 685, 686, 0, 629, 628,
	630, 687, 0, 631, 0, 0, 0, 0, 632, 633,
	688, 634, 635, 636, 0, 0, 0, 0, 0, 0,
	0, 1082, 0, 1342, 2565, 2566, 2567, 2591, 2577, 2571,
	0, 2573, 2574, 2572, 2559, 2560, 2561, 2562, 2563, 2564,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	289, 290, 1202, 291, 292, 293, 294, 295, 296, 638,
	639, 0, 297, 640, 298, 641, 0, 642, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 643, 644,
	645, 0, 306, 307, 646, 0, 1347, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1203, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 647, 648, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 649, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 650, 651, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 652, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1204, 378,
	379, 380, 653, 654, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 655, 0, 656, 391, 0,
	392, 393, 394, 395, 396, 657, 658, 659, 476, 1206,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 1205, 407, 660,
	661, 0, 662, 0, 409, 410, 1207, 663, 1208, 411,
	412, 413, 1209, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 664,
	1210, 425, 426, 1211, 0, 427, 0, 0, 0, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1212, 458, 459, 460, 466, 468, 469,
	464, 465, 467, 470, 471, 462, 463, 1213, 472, 461,
	0, 0, 1214, 473, 474, 0, 665, 475, 666, 477,
	478, 0, 0, 479, 0, 0, 0, 481, 482, 483,
	0, 0, 484, 485, 667, 1215, 486, 1216, 668, 487,
	488, 480, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 498, 499, 669, 500, 501, 502, 670, 503,
	504, 505, 671, 506, 672, 507, 508, 0, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 517, 673, 518,
	519, 521, 520, 522, 0, 523, 0, 524, 525, 526,
	0, 0, 0, 0, 0, 527, 0, 529, 530, 531,
	532, 528, 533, 534, 535, 536, 537, 0, 538, 539,
	540, 1217, 541, 542, 543, 544, 545, 674, 546, 0,
	547, 548, 554, 555, 556, 549, 550, 557, 558, 559,
	560, 561, 239, 563, 564, 562, 565, 566, 567, 0,
	568, 569, 551, 552, 570, 571, 1218, 572, 573, 574,
	575, 576, 577, 578, 675, 0, 579, 0, 580, 581,
	582, 584, 553, 585, 590, 591, 676, 586, 587, 588,
	589, 677, 593, 594, 0, 595, 596, 0, 592, 583,
	241, 597, 598, 599, 600, 601, 602, 603, 364, 604,
	0, 605, 678, 679, 680, 681, 0, 614, 0, 606,
	607, 608, 682, 609, 683, 0, 610, 611, 612, 613,
	0, 615, 616, 0, 0, 617, 618, 619, 621, 622,
	620, 623, 0, 624, 0, 0, 625, 626, 627, 1627,
	685, 686, 0, 629, 628, 630, 687, 0, 631, 0,
	0, 0, 233, 632, 633, 688, 634, 635, 636, 0,
	0, 234, 1624, 0, 1342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 193, 287,
	288, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	0, 289, 290, 1202, 291, 292, 293, 294, 295, 296,
	638, 639, 0, 297, 640, 298, 641, 0, 642, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 643,
	644, 645, 0, 306, 307, 646, 0, 1347, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1203, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 647, 648, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 649, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 650, 651, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 652, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1204,
	378, 379, 380, 653, 654, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 655, 0, 656, 391,
	0, 392, 393, 394, 395, 396, 657, 658, 659, 476,
	1206, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 1205, 407,
	660, 661, 0, 662, 0, 409, 410, 1207, 663, 1208,
	411, 412, 413, 1209, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	664, 1210, 425, 426, 1211, 0, 427, 0, 0, 0,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1212, 458, 459, 460, 466, 468,
	469, 464, 465, 467, 470, 471, 462, 463, 1213, 472,
	461, 0, 0, 1214, 473, 474, 0, 665, 475, 666,
	477, 478, 0, 0, 479, 0, 0, 0, 481, 482,
	483, 0, 0, 484, 485, 667, 1215, 486, 1216, 668,
	487, 488, 480, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 498, 499, 669, 500, 501, 502, 670,
	503, 504, 505, 671, 506, 672, 507, 508, 0, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 517, 673,
	518, 519, 521, 520, 522, 0, 523, 0, 524, 525,
	526, 0, 0, 0, 0, 0, 527, 0, 529, 530,
	531, 532, 528, 533, 534, 535, 536, 537, 0, 538,
	539, 540, 1217, 541, 542, 543, 544, 545, 674, 546,
	0, 547, 548, 554, 555, 556, 549, 550, 557, 558,
	559, 560, 561, 239, 563, 564, 562, 565, 566, 567,
	0, 568, 569, 551, 552, 570, 571, 1218, 572, 573,
	574, 575, 576, 577, 578, 675, 0, 579, 0, 580,
	581, 582, 584, 553, 585, 590, 591, 676, 586, 587,
	588, 589, 677, 593, 594, 0, 595, 596, 0, 592,
	583, 241, 597, 598, 599, 600, 601, 602, 603, 364,
	604, 0, 605, 678, 679, 680, 681, 0, 614, 0,
	606, 607, 608, 682, 609, 683, 0, 610, 611, 612,
	613, 0, 615, 616, 0, 0, 617, 618, 619, 621,
	622, 620, 623, 0, 624, 0, 0, 625, 626, 627,
	1627, 685, 686, 0, 629, 628, 630, 687, 0, 631,
	0, 0, 0, 233, 632, 633, 688, 634, 635, 636,
	1342, 1341, 234, 0, 0, 0, 1339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 193,
	0, 0, 637, 0, 0, 0, 0, 289, 290, 1202,
	291, 292, 293, 294, 295, 296, 638, 639, 0, 297,
	640, 298, 641, 0, 642, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 643, 644, 645, 0, 306,
	307, 646, 0, 1347, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1203, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 647, 648, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	649, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 650, 651, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 652, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1204, 378, 379, 380, 653,
	654, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 655, 0, 656, 391, 0, 392, 393, 394,
	395, 396, 657, 658, 659, 476, 1206, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 1205, 407, 660, 661, 0, 662,
	0, 409, 410, 1207, 663, 1208, 411, 412, 413, 1209,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 664, 1210, 425, 426,
	1211, 0, 427, 0, 0, 0, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1212, 458, 459, 460, 466, 468, 469, 464, 465, 467,
	470, 471, 462, 463, 1213, 472, 461, 0, 0, 1214,
	473, 474, 0, 665, 475, 666, 477, 478, 0, 0,
	479, 0, 0, 0, 481, 482, 483, 0, 0, 484,
	485, 667, 1215, 486, 1216, 668, 487, 488, 480, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 498,
	499, 669, 500, 501, 502, 670, 503, 504, 505, 671,
	506, 672, 507, 508, 0, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 517, 673, 518, 519, 521, 520,
	522, 0, 523, 0, 524, 525, 526, 0, 0, 0,
	0, 0, 527, 0, 529, 530, 531, 532, 528, 533,
	534, 535, 536, 537, 0, 538, 539, 540, 1217, 541,
	542, 543, 544, 545, 674, 546, 0, 547, 548, 554,
	555, 556, 549, 550, 557, 558, 559, 560, 561, 0,
	563, 564, 562, 565, 566, 567, 0, 568, 569, 551,
	552, 570, 571, 1218, 572, 573, 574, 575, 576, 577,
	578, 675, 0, 579, 0, 580, 581, 582, 584, 553,
	585, 590, 591, 676, 586, 587, 588, 589, 677, 593,
	594, 0, 595, 596, 0, 592, 583, 0, 597, 598,
	599, 600, 601, 602, 603, 364, 604, 0, 605, 678,
	679, 680, 681, 0, 614, 0, 606, 607, 608, 682,
	609, 683, 0, 610, 611, 612, 613, 0, 615, 616,
	0, 0, 617, 618, 619, 621, 622, 620, 623, 0,
	624, 0, 0, 625, 626, 627, 684, 685, 686, 0,
	629, 628, 630, 687, 0, 631, 0, 0, 0, 0,
	632, 633, 688, 634, 635, 636, 1342, 1341, 0, 0,
	0, 0, 1339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 1651, 0, 0, 637, 0,
	0, 0, 0, 289, 290, 1202, 291, 292, 293, 294,
	295, 296, 638, 639, 0, 297, 640, 298, 641, 0,
	642, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 643, 644, 645, 0, 306, 307, 646, 0, 1347,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1203, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 647, 648, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 649, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 650, 651, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	652, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1204, 378, 379, 380, 653, 654, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 655, 0,
	656, 391, 0, 392, 393, 394, 395, 396, 657, 658,
	659, 476, 1206, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	1205, 407, 660, 661, 0, 662, 0, 409, 410, 1207,
	663, 1208, 411, 412, 413, 1209, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 664, 1210, 425, 426, 1211, 0, 427, 0,
	0, 0, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1212, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	1213, 472, 461, 0, 0, 1214, 473, 474, 0, 665,
	475, 666, 477, 478, 0, 0, 479, 0, 0, 0,
	481, 482, 483, 0, 0, 484, 485, 667, 1215, 486,
	1216, 668, 487, 488, 480, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 671, 506, 672, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 673, 518, 519, 521, 520, 522, 0, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	0, 538, 539, 540, 1217, 541, 542, 543, 544, 545,
	674, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 0, 563, 564, 562, 565,
	566, 567, 0, 568, 569, 551, 552, 570, 571, 1218,
	572, 573, 574, 575, 576, 577, 578, 675, 0, 579,
	0, 580, 581, 582, 584, 553, 585, 590, 591, 676,
	586, 587, 588, 589, 677, 593, 594, 0, 595, 596,
	0, 592, 583, 0, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 0, 605, 678, 679, 680, 681, 0,
	614, 0, 606, 607, 608, 682, 609, 683, 0, 610,
	611, 612, 613, 0, 615, 616, 0, 0, 617, 618,
	619, 621, 622, 620, 623, 0, 624, 0, 0, 625,
	626, 627, 684, 685, 686, 0, 629, 628, 630, 687,
	0, 631, 0, 0, 0, 0, 632, 633, 688, 634,
	635, 636, 1342, 1341, 0, 0, 0, 0, 1339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 3659, 0, 0, 637, 0, 0, 0, 0, 289,
	290, 1202, 291, 292, 293, 294, 295, 296, 638, 639,
	0, 297, 640, 298, 641, 0, 642, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 643, 644, 645,
	0, 306, 307, 646, 0, 1347, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1203, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 647, 648, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 649, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 650, 651, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 652, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1204, 378, 379,
	380, 653, 654, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 655, 0, 656, 391, 0, 392,
	393, 394, 395, 396, 657, 658, 659, 476, 1206, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 1205, 407, 660, 661,
	0, 662, 0, 409, 410, 1207, 663, 1208, 411, 412,
	413, 1209, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 664, 1210,
	425, 426, 1211, 0, 427, 0, 0, 0, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1212, 458, 459, 460, 466, 468, 469, 464,
	465, 467, 470, 471, 462, 463, 1213, 472, 461, 0,
	0, 1214, 473, 474, 0, 665, 475, 666, 477, 478,
	0, 0, 479, 0, 0, 0, 481, 482, 483, 0,
	0, 484, 485, 667, 1215, 486, 1216, 668, 487, 488,
	480, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 498, 499, 669, 500, 501, 502, 670, 503, 504,
	505, 671, 506, 672, 507, 508, 0, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 517, 673, 518, 519,
	521, 520, 522, 0, 523, 0, 524, 525, 526, 0,
	0, 0, 0, 0, 527, 0, 529, 530, 531, 2336,
	528, 533, 534, 535, 536, 537, 0, 538, 539, 540,
	1217, 541, 542, 543, 544, 545, 674, 546, 0, 547,
	548, 554, 555, 556, 549, 550, 557, 558, 559, 560,
	561, 0, 563, 564, 562, 565, 566, 567, 0, 568,
	569, 551, 552, 570, 571, 1218, 572, 573, 574, 575,
	576, 577, 578, 675, 0, 579, 0, 580, 581, 582,
	584, 553, 585, 590, 591, 676, 586, 587, 588, 589,
	677, 593, 594, 0, 595, 596, 0, 592, 583, 0,
	597, 598, 599, 600, 601, 602, 603, 364, 604, 0,
	605, 678, 679, 680, 681, 0, 614, 0, 606, 607,
	608, 682, 609, 683, 0, 610, 611, 612, 613, 0,
	615, 616, 0, 0, 617, 618, 619, 621, 622, 620,
	623, 0, 624, 0, 0, 625, 626, 627, 684, 685,
	686, 0, 629, 628, 630, 687, 0, 631, 0, 0,
	0, 0, 632, 633, 688, 634, 635, 636, 1342, 2245,
	0, 0, 0, 0, 2246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 1651, 0, 0,
	637, 0, 0, 0, 0, 289, 290, 1202, 291, 292,
	293, 294, 295, 296, 638, 639, 0, 297, 640, 298,
	641, 0, 642, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 643, 644, 645, 0, 306, 307, 646,
	0, 1347, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1203, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 647,
	648, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 649, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 650,
	651, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 652, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1204, 378, 379, 380, 653, 654, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	655, 0, 656, 391, 0, 392, 393, 394, 395, 396,
	657, 658, 659, 476, 1206, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 1205, 407, 660, 661, 0, 662, 0, 409,
	410, 1207, 663, 1208, 411, 412, 413, 1209, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 2244,
	423, 422, 0, 424, 664, 1210, 425, 426, 1211, 0,
	427, 0, 0, 0, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1212, 458,
	459, 460, 466, 468, 469, 464, 465, 467, 470, 471,
	462, 463, 1213, 472, 461, 0, 0, 1214, 473, 474,
	0, 665, 475, 666, 477, 478, 0, 0, 479, 0,
	0, 0, 481, 482, 483, 0, 0, 484, 485, 667,
	1215, 486, 1216, 668, 487, 488, 480, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 498, 499, 669,
	500, 501, 502, 670, 503, 504, 505, 671, 506, 672,
	507, 508, 0, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 517, 673, 518, 519, 521, 520, 522, 0,
	523, 0, 524, 525, 526, 0, 0, 0, 0, 0,
	527, 0, 529, 530, 531, 532, 528, 533, 534, 535,
	536, 537, 0, 538, 539, 540, 1217, 541, 542, 543,
	544, 545, 674, 546, 0, 547, 548, 554, 555, 556,
	549, 550, 557, 558, 559, 560, 561, 0, 563, 564,
	562, 565, 566, 567, 0, 568, 569, 551, 552, 570,
	571, 1218, 572, 573, 574, 575, 576, 577, 578, 675,
	0, 579, 0, 580, 581, 582, 584, 553, 585, 590,
	591, 676, 586, 587, 588, 589, 677, 593, 594, 0,
	595, 596, 0, 592, 583, 0, 597, 598, 599, 600,
	601, 602, 603, 364, 604, 0, 605, 678, 679, 680,
	681, 0, 614, 0, 606, 607, 608, 682, 609, 683,
	0, 610, 611, 612, 613, 0, 615, 616, 0, 0,
	617, 618, 619, 621, 622, 620, 623, 0, 624, 0,
	0, 625, 626, 627, 684, 685, 686, 0, 629, 628,
	630, 687, 0, 631, 0, 0, 0, 0, 632, 633,
	688, 634, 635, 636, 1342, 1341, 0, 0, 0, 0,
	1339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 1651, 0, 0, 637, 0, 0, 0,
	0, 289, 290, 1202, 291, 292, 293, 294, 295, 296,
	638, 639, 0, 297, 640, 298, 641, 0, 642, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 643,
	644, 645, 0, 306, 307, 646, 0, 1347, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1203, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 647, 648, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 649, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 650, 651, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 652, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1204,
	378, 379, 380, 653, 654, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 655, 0, 656, 391,
	0, 392, 393, 394, 395, 396, 657, 658, 659, 476,
	1206, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 1205, 407,
	660, 661, 0, 662, 0, 409, 410, 1207, 663, 1208,
	411, 412, 413, 1209, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	664, 1210, 425, 426, 1211, 0, 427, 0, 0, 0,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1212, 458, 459, 460, 466, 468,
	469, 464, 465, 467, 470, 471, 462, 463, 1213, 472,
	461, 0, 0, 1214, 473, 474, 0, 665, 475, 666,
	477, 478, 0, 0, 479, 0, 0, 0, 481, 482,
	483, 0, 0, 484, 485, 667, 1215, 486, 1216, 668,
	487, 488, 480, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 498, 499, 669, 500, 501, 502, 670,
	503, 504, 505, 671, 506, 672, 507, 508, 0, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 517, 673,
	518, 519, 521, 520, 522, 0, 523, 0, 524, 525,
	526, 0, 0, 0, 0, 0, 527, 0, 529, 530,
	531, 532, 528, 533, 534, 535, 536, 537, 0, 538,
	539, 540, 1217, 541, 542, 543, 544, 545, 674, 546,
	0, 547, 548, 554, 555, 556, 549, 550, 557, 558,
	559, 560, 561, 0, 563, 564, 562, 565, 566, 567,
	0, 568, 569, 551, 552, 570, 571, 1218, 572, 573,
	574, 575, 576, 577, 578, 675, 0, 579, 0, 580,
	581, 582, 584, 553, 585, 590, 591, 676, 586, 587,
	588, 589, 677, 593, 594, 0, 595, 596, 0, 592,
	583, 0, 597, 598, 599, 600, 601, 602, 603, 364,
	604, 0, 605, 678, 679, 680, 681, 0, 614, 0,
	606, 607, 608, 682, 609, 683, 0, 610, 611, 612,
	613, 0, 615, 616, 0, 0, 617, 618, 619, 621,
	622, 620, 623, 0, 624, 0, 0, 625, 626, 627,
	684, 685, 686, 0, 629, 628, 630, 687, 1082, 631,
	274, 0, 0, 0, 632, 633, 688, 634, 635, 636,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 637, 0, 0, 0, 0, 289, 290, 1633,
	291, 292, 293, 294, 295, 296, 638, 639, 0, 297,
	640, 298, 641, 0, 642, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 643, 644, 645, 0, 306,
	307, 646, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 647, 648, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	649, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 650, 651, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 652, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 653,
	654, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 655, 0, 656, 391, 0, 392, 393, 394,
	395, 396, 657, 658, 659, 476, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 660, 661, 0, 662,
	0, 409, 410, 0, 663, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 664, 0, 425, 426,
	0, 0, 427, 0, 0, 0, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 466, 468, 469, 464, 465, 467,
	470, 471, 462, 463, 0, 472, 461, 0, 0, 0,
	473, 474, 0, 665, 475, 666, 477, 478, 0, 0,
	479, 0, 0, 0, 481, 482, 483, 0, 0, 484,
	485, 667, 0, 486, 0, 668, 487, 488, 480, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 498,
	499, 669, 500, 501, 502, 670, 503, 504, 505, 671,
	506, 672, 507, 508, 0, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 517, 673, 518, 519, 521, 520,
	522, 0, 523, 0, 524, 525, 526, 0, 0, 0,
	0, 0, 527, 0, 529, 530, 531, 532, 528, 533,
	534, 535, 536, 537, 0, 538, 539, 540, 0, 541,
	542, 543, 544, 545, 674, 546, 0, 547, 548, 554,
	555, 556, 549, 550, 557, 558, 559, 560, 561, 239,
	563, 564, 562, 565, 566, 567, 0, 568, 569, 551,
	552, 570, 571, 0, 572, 573, 574, 575, 576, 577,
	578, 675, 0, 579, 0, 580, 581, 582, 584, 553,
	585, 590, 591, 676, 586, 587, 588, 589, 677, 593,
	594, 0, 595, 596, 0, 592, 583, 241, 597, 598,
	599, 600, 601, 602, 603, 364, 604, 0, 605, 678,
	679, 680, 681, 0, 614, 0, 606, 607, 608, 682,
	609, 683, 0, 610, 611, 612, 613, 0, 615, 616,
	0, 0, 617, 618, 619, 621, 622, 620, 623, 0,
	624, 0, 0, 625, 626, 627, 1627, 685, 686, 0,
	629, 628, 630, 687, 0, 631, 274, 0, 0, 233,
	632, 633, 688, 634, 635, 636, 0, 0, 234, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 289, 290, 193, 291, 292, 293, 294,
	295, 296, 638, 639, 0, 297, 640, 298, 641, 0,
	642, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 643, 644, 645, 0, 306, 307, 646, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 647, 648, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 649, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 650, 651, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	652, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 653, 654, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 655, 0,
	656, 391, 0, 392, 393, 394, 395, 396, 657, 658,
	659, 476, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 660, 661, 0, 662, 0, 409, 410, 0,
	663, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 664, 0, 425, 426, 0, 0, 427, 0,
	0, 0, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	0, 472, 461, 0, 279, 0, 473, 474, 0, 665,
	475, 666, 477, 478, 0, 0, 479, 0, 0, 0,
	481, 482, 483, 0, 0, 484, 485, 667, 0, 486,
	0, 668, 487, 488, 480, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 671, 506, 672, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 673, 518, 519, 521, 520, 522, 0, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	0, 538, 539, 540, 0, 541, 542, 543, 544, 545,
	674, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 0, 563, 564, 562, 565,
	566, 567, 0, 568, 569, 551, 552, 570, 571, 0,
	572, 573, 574, 575, 576, 577, 578, 675, 0, 579,
	0, 580, 581, 582, 584, 553, 585, 590, 591, 676,
	586, 587, 588, 589, 677, 593, 594, 0, 595, 596,
	0, 592, 583, 0, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 0, 605, 678, 679, 680, 681, 0,
	614, 0, 606, 607, 608, 682, 609, 683, 0, 610,
	611, 612, 613, 0, 615, 616, 0, 0, 617, 618,
	619, 621, 622, 620, 623, 0, 624, 0, 0, 625,
	626, 627, 684, 685, 686, 0, 629, 628, 630, 687,
	0, 631, 0, 0, 0, 1260, 632, 633, 688, 634,
	635, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 1162, 0, 0,
	0, 1993, 289, 290, 1202, 291, 292, 293, 294, 295,
	296, 638, 639, 0, 297, 640, 298, 641, 0, 642,
	299, 300, 301, 302, 303, 304, 0, 1161, 0, 305,
	643, 644, 645, 0, 306, 307, 1168, 0, 1149, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1203, 330, 331,
	332, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 333, 334,
	335, 336, 337, 0, 338, 340, 647, 648, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 649, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1193, 1194, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 652,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1204, 378, 379, 380, 653, 654, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1200, 0, 656,
	391, 0, 392, 393, 394, 395, 396, 1163, 1164, 1167,
	476, 1206, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1205,
	407, 660, 661, 0, 662, 0, 409, 410, 1207, 1165,
	1208, 411, 412, 413, 1209, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1201, 1210, 425, 426, 1211, 0, 427, 0, 0,
	0, 428, 429, 432, 1156, 1155, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 466,
	468, 469, 464, 465, 467, 470, 471, 462, 463, 1213,
	472, 461, 0, 279, 1214, 473, 474, 0, 1166, 475,
	666, 477, 478, 0, 0, 479, 0, 0, 0, 481,
	482, 483, 0, 0, 484, 485, 667, 1215, 486, 1216,
	1195, 487, 488, 480, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 498, 499, 669, 500, 501, 502,
	670, 503, 504, 505, 1196, 506, 672, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 517,
	673, 518, 519, 521, 520, 522, 0, 523, 0, 524,
	525, 526, 0, 0, 0, 0, 0, 527, 0, 529,
	530, 531, 532, 528, 533, 534, 535, 536, 537, 0,
	538, 539, 540, 1217, 541, 542, 543, 544, 545, 674,
	546, 0, 547, 548, 554, 555, 556, 549, 550, 557,
	558, 559, 560, 561, 0, 563, 564, 562, 565, 566,
	567, 1159, 568, 569, 551, 552, 570, 571, 1218, 572,
	573, 574, 575, 576, 577, 578, 675, 0, 579, 0,
	580, 581, 582, 584, 553, 585, 590, 591, 676, 586,
	587, 588, 589, 1197, 593, 594, 0, 595, 596, 0,
	592, 583, 0, 597, 598, 599, 600, 601, 602, 603,
	364, 604, 0, 605, 678, 679, 680, 681, 0, 614,
	0, 606, 607, 608, 1198, 609, 1199, 0, 610, 611,
	612, 613, 0, 615, 616, 0, 0, 617, 618, 619,
	621, 622, 620, 623, 1160, 624, 0, 0, 625, 626,
	627, 684, 685, 686, 0, 629, 628, 630, 687, 0,
	631, 274, 3103, 0, 0, 632, 633, 688, 634, 635,
	636, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 637, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 638, 639, 0,
	297, 640, 298, 641, 0, 642, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 643, 644, 645, 0,
	306, 307, 646, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 647, 648, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 649, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 650, 651, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 652, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	653, 654, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 655, 0, 656, 391, 0, 392, 393,
	394, 395, 396, 657, 658, 659, 476, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 660, 661, 0,
	662, 0, 409, 410, 0, 663, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 664, 0, 425,
	426, 0, 0, 427, 0, 0, 0, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 466, 468, 469, 464, 465,
	467, 470, 471, 462, 463, 0, 472, 461, 0, 0,
	0, 473, 474, 0, 665, 475, 666, 477, 478, 0,
	0, 479, 0, 0, 0, 481, 482, 483, 0, 0,
	484, 485, 667, 0, 486, 0, 668, 487, 488, 480,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 0,
	498, 499, 669, 500, 501, 502, 670, 503, 504, 505,
	671, 506, 672, 507, 508, 0, 509, 510, 0, 511,
	512, 513, 514, 515, 516, 517, 673, 518, 519, 521,
	520, 522, 0, 523, 0, 524, 525, 526, 0, 0,
	0, 0, 0, 527, 0, 529, 530, 531, 532, 528,
	533, 534, 535, 536, 537, 0, 538, 539, 540, 0,
	541, 542, 543, 544, 545, 674, 546, 0, 547, 548,
	554, 555, 556, 549, 550, 557, 558, 559, 560, 561,
	0, 563, 564, 562, 565, 566, 567, 0, 568, 569,
	551, 552, 570, 571, 0, 572, 573, 574, 575, 576,
	577, 578, 675, 0, 579, 0, 580, 581, 582, 584,
	553, 585, 590, 591, 676, 586, 587, 588, 589, 677,
	593, 594, 0, 595, 596, 0, 592, 583, 0, 597,
	598, 599, 600, 601, 602, 603, 364, 604, 0, 605,
	678, 679, 680, 681, 0, 614, 0, 606, 607, 608,
	682, 609, 683, 0, 610, 611, 612, 613, 0, 615,
	616, 0, 0, 617, 618, 619, 621, 622, 620, 623,
	0, 624, 0, 0, 625, 626, 627, 684, 685, 686,
	0, 629, 628, 630, 687, 0, 631, 274, 0, 0,
	0, 632, 633, 688, 634, 635, 636, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 289, 290, 4926, 291, 292, 293,
	294, 295, 296, 638, 639, 0, 297, 640, 298, 641,
	0, 642, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 643, 644, 645, 0, 306, 307, 646, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 647, 648,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 649, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 650, 651,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 652, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 653, 654, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 655,
	0, 656, 391, 0, 392, 393, 394, 395, 396, 657,
	658, 659, 476, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 660, 661, 0, 662, 0, 409, 410,
	0, 663, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 664, 0, 425, 426, 0, 0, 427,
	0, 0, 0, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 466, 468, 469, 464, 465, 467, 470, 471, 462,
	463, 0, 472, 461, 0, 279, 0, 473, 474, 0,
	665, 475, 666, 477, 478, 0, 0, 479, 0, 0,
	0, 481, 482, 483, 0, 0, 484, 485, 667, 0,
	486, 0, 668, 487, 488, 480, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 0, 498, 499, 669, 500,
	501, 502, 670, 503, 504, 505, 671, 506, 672, 507,
	508, 0, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 517, 673, 518, 519, 521, 520, 522, 0, 523,
	0, 524, 525, 526, 0, 0, 0, 0, 0, 527,
	0, 529, 530, 531, 532, 528, 533, 534, 535, 536,
	537, 0, 538, 539, 540, 0, 541, 542, 543, 544,
	545, 674, 546, 0, 547, 548, 554, 555, 556, 549,
	550, 557, 558, 559, 560, 561, 0, 563, 564, 562,
	565, 566, 567, 0, 568, 569, 551, 552, 570, 571,
	0, 572, 573, 574, 575, 576, 577, 578, 675, 0,
	579, 0, 580, 581, 582, 584, 553, 585, 590, 591,
	676, 586, 587, 588, 589, 677, 593, 594, 0, 595,
	596, 0, 592, 583, 0, 597, 598, 599, 600, 601,
	602, 603, 364, 604, 0, 605, 678, 679, 680, 681,
	0, 614, 0, 606, 607, 608, 682, 609, 683, 0,
	610, 611, 612, 613, 0, 615, 616, 0, 0, 617,
	618, 619, 621, 622, 620, 623, 0, 624, 0, 0,
	625, 626, 627, 684, 685, 686, 0, 629, 628, 630,
	687, 274, 631, 0, 0, 0, 0, 632, 633, 688,
	634, 635, 636, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 637, 0, 0, 0, 0, 289, 290,
	3609, 291, 292, 293, 294, 295, 296, 638, 639, 0,
	297, 640, 298, 641, 0, 642, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 643, 644, 645, 0,
	306, 307, 646, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 647, 648, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 649, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 650, 651, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 652, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	653, 654, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 655, 0, 656, 391, 0, 392, 393,
	394, 395, 396, 657, 658, 659, 476, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 660, 661, 0,
	662, 0, 409, 410, 0, 663, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 664, 0, 425,
	426, 0, 0, 427, 0, 0, 0, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 466, 468, 469, 464, 465,
	467, 470, 471, 462, 463, 0, 472, 461, 0, 279,
	0, 473, 474, 0, 665, 475, 666, 477, 478, 0,
	0, 479, 0, 0, 0, 481, 482, 483, 0, 0,
	484, 485, 667, 0, 486, 0, 668, 487, 488, 480,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 0,
	498, 499, 669, 500, 501, 502, 670, 503, 504, 505,
	671, 506, 672, 507, 508, 0, 509, 510, 0, 511,
	512, 513, 514, 515, 516, 517, 673, 518, 519, 521,
	520, 522, 0, 523, 0, 524, 525, 526, 0, 0,
	0, 0, 0, 527, 0, 529, 530, 531, 532, 528,
	533, 534, 535, 536, 537, 0, 538, 539, 540, 0,
	541, 542, 543, 544, 545, 674, 546, 0, 547, 548,
	554, 555, 556, 549, 550, 557, 558, 559, 560, 561,
	0, 563, 564, 562, 565, 566, 567, 0, 568, 569,
	551, 552, 570, 571, 0, 572, 573, 574, 575, 576,
	577, 578, 675, 0, 579, 0, 580, 581, 582, 584,
	553, 585, 590, 591, 676, 586, 587, 588, 589, 677,
	593, 594, 0, 595, 596, 0, 592, 583, 0, 597,
	598, 599, 600, 601, 602, 603, 364, 604, 0, 605,
	678, 679, 680, 681, 0, 614, 0, 606, 607, 608,
	682, 609, 683, 0, 610, 611, 612, 613, 0, 615,
	616, 0, 0, 617, 618, 619, 621, 622, 620, 623,
	0, 624, 0, 0, 625, 626, 627, 684, 685, 686,
	0, 629, 628, 630, 687, 274, 631, 0, 0, 0,
	0, 632, 633, 688, 634, 635, 636, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 0, 289, 290, 1621, 291, 292, 293, 294, 295,
	296, 638, 639, 0, 297, 640, 298, 641, 0, 642,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	643, 644, 645, 0, 306, 307, 646, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 647, 648, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 649, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 650, 651, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 652,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 653, 654, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 655, 0, 656,
	391, 0, 392, 393, 394, 395, 396, 657, 658, 659,
	476, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 660, 661, 0, 662, 0, 409, 410, 0, 663,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 664, 0, 425, 426, 0, 0, 427, 0, 0,
	0, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 466,
	468, 469, 464, 465, 467, 470, 471, 462, 463, 0,
	472, 461, 0, 0, 0, 473, 474, 0, 665, 475,
	666, 477, 478, 0, 0, 479, 0, 0, 0, 481,
	482, 483, 0, 0, 484, 485, 667, 0, 486, 0,
	668, 487, 488, 480, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 498, 499, 669, 500, 501, 502,
	670, 503, 504, 505, 671, 506, 672, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 517,
	673, 518, 519, 521, 520, 522, 0, 523, 0, 524,
	525, 526, 0, 0, 0, 0, 0, 527, 0, 529,
	530, 531, 532, 528, 533, 534, 535, 536, 537, 0,
	538, 539, 540, 0, 541, 542, 543, 544, 545, 674,
	546, 0, 547, 548, 554, 555, 556, 549, 550, 557,
	558, 559, 560, 561, 0, 563, 564, 562, 565, 566,
	567, 0, 568, 569, 551, 552, 570, 571, 0, 572,
	573, 574, 575, 576, 577, 578, 675, 0, 579, 0,
	580, 581, 582, 584, 553, 585, 590, 591, 676, 586,
	587, 588, 589, 677, 593, 594, 0, 595, 596, 0,
	592, 583, 0, 597, 598, 599, 600, 601, 602, 603,
	364, 604, 0, 605, 678, 679, 680, 681, 0, 614,
	0, 606, 607, 608, 682, 609, 683, 0, 610, 611,
	612, 613, 0, 615, 616, 0, 0, 617, 618, 619,
	621, 622, 620, 623, 0, 624, 0, 0, 625, 626,
	627, 684, 685, 686, 0, 629, 628, 630, 687, 0,
	631, 274, 0, 0, 0, 632, 633, 688, 634, 635,
	636, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 637, 0, 0, 0, 0, 289, 290,
	3091, 291, 292, 293, 294, 295, 296, 638, 639, 0,
	297, 640, 298, 641, 0, 642, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 643, 644, 645, 0,
	306, 307, 646, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 647, 648, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 649, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 650, 651, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 652, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	653, 654, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 655, 0, 656, 391, 0, 392, 393,
	394, 395, 396, 657, 658, 659, 476, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 660, 661, 0,
	662, 0, 409, 410, 0, 663, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 664, 0, 425,
	426, 0, 0, 427, 0, 0, 0, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 466, 468, 469, 464, 465,
	467, 470, 471, 462, 463, 0, 472, 461, 0, 0,
	0, 473, 474, 0, 665, 475, 666, 477, 478, 0,
	0, 479, 0, 0, 0, 481, 482, 483, 0, 0,
	484, 485, 667, 0, 486, 0, 668, 487, 488, 480,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 0,
	498, 499, 669, 500, 501, 502, 670, 503, 504, 505,
	671, 506, 672, 507, 508, 0, 509, 510, 0, 511,
	512, 513, 514, 515, 516, 517, 673, 518, 519, 521,
	520, 522, 0, 523, 0, 524, 525, 526, 0, 0,
	0, 0, 0, 527, 0, 529, 530, 531, 532, 528,
	533, 534, 535, 536, 537, 0, 538, 539, 540, 0,
	541, 542, 543, 544, 545, 674, 546, 0, 547, 548,
	554, 555, 556, 549, 550, 557, 558, 559, 560, 561,
	0, 563, 564, 562, 565, 566, 567, 0, 568, 569,
	551, 552, 570, 571, 0, 572, 573, 574, 575, 576,
	577, 578, 675, 0, 579, 0, 580, 581, 582, 584,
	553, 585, 590, 591, 676, 586, 587, 588, 589, 677,
	593, 594, 0, 595, 596, 0, 592, 583, 0, 597,
	598, 599, 600, 601, 602, 603, 364, 604, 0, 605,
	678, 679, 680, 681, 0, 614, 0, 606, 607, 608,
	682, 609, 683, 0, 610, 611, 612, 613, 0, 615,
	616, 0, 0, 617, 618, 619, 621, 622, 620, 623,
	0, 624, 0, 0, 625, 626, 627, 684, 685, 686,
	0, 629, 628, 630, 687, 0, 631, 274, 0, 0,
	0, 632, 633, 688, 634, 635, 636, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 289, 290, 3772, 291, 292, 293,
	294, 295, 296, 638, 639, 0, 297, 640, 298, 641,
	0, 642, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 643, 644, 645, 0, 306, 307, 646, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 647, 648,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 649, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 650, 651,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 652, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 653, 654, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 655,
	0, 656, 391, 0, 392, 393, 394, 395, 396, 657,
	658, 659, 476, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 660, 661, 0, 662, 0, 409, 410,
	0, 663, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 664, 0, 425, 426, 0, 0, 427,
	0, 0, 0, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 466, 468, 469, 464, 465, 467, 470, 471, 462,
	463, 0, 472, 461, 0, 0, 0, 473, 474, 0,
	665, 475, 666, 477, 478, 0, 0, 479, 0, 0,
	0, 481, 482, 483, 0, 0, 484, 485, 667, 0,
	486, 0, 668, 487, 488, 480, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 0, 498, 499, 669, 500,
	501, 502, 670, 503, 504, 505, 671, 506, 672, 507,
	508, 0, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 517, 673, 518, 519, 521, 520, 522, 0, 523,
	0, 524, 525, 526, 0, 0, 0, 0, 0, 527,
	0, 529, 530, 531, 532, 528, 533, 534, 535, 536,
	537, 0, 538, 539, 540, 0, 541, 542, 543, 544,
	545, 674, 546, 0, 547, 548, 554, 555, 556, 549,
	550, 557, 558, 559, 560, 561, 0, 563, 564, 562,
	565, 566, 567, 0, 568, 569, 551, 552, 570, 571,
	0, 572, 573, 574, 575, 576, 577, 578, 675, 0,
	579, 0, 580, 581, 582, 584, 553, 585, 590, 591,
	676, 586, 587, 588, 589, 677, 593, 594, 0, 595,
	596, 0, 592, 583, 0, 597, 598, 599, 600, 601,
	602, 603, 364, 604, 0, 605, 678, 679, 680, 681,
	0, 614, 0, 606, 607, 608, 682, 609, 683, 0,
	610, 611, 612, 613, 0, 615, 616, 0, 0, 617,
	618, 619, 621, 622, 620, 623, 0, 624, 0, 0,
	625, 626, 627, 684, 685, 686, 0, 629, 628, 630,
	687, 914, 631, 815, 0, 0, 0, 632, 633, 688,
	634, 635, 636, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	289, 290, 2324, 291, 292, 293, 294, 295, 296, 638,
	639, 0, 297, 640, 298, 641, 0, 642, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 643, 644,
	645, 0, 306, 307, 646, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 822,
	337, 0, 338, 340, 647, 648, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 649, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 650, 651, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 652, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 912, 0, 378,
	379, 380, 653, 654, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 655, 0, 656, 391, 0,
	392, 393, 394, 395, 396, 657, 658, 659, 476, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 660,
	661, 0, 662, 0, 409, 410, 0, 663, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 664,
	0, 425, 426, 0, 0, 427, 0, 0, 0, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 466, 468, 469,
	464, 465, 467, 470, 471, 462, 463, 0, 472, 461,
	0, 279, 0, 473, 474, 0, 665, 475, 666, 477,
	478, 0, 0, 479, 0, 0, 0, 481, 482, 483,
	0, 0, 484, 485, 667, 0, 486, 0, 668, 487,
	488, 480, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 498, 499, 669, 500, 501, 502, 670, 503,
	504, 505, 671, 506, 672, 507, 508, 0, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 517, 673, 518,
	519, 521, 520, 522, 0, 523, 0, 524, 525, 526,
	0, 0, 0, 0, 0, 527, 0, 529, 530, 531,
	532, 528, 533, 534, 535, 536, 537, 0, 538, 539,
	540, 0, 541, 542, 543, 544, 545, 674, 546, 0,
	547, 548, 554, 555, 556, 549, 550, 557, 558, 559,
	560, 561, 0, 563, 564, 562, 565, 566, 567, 0,
	568, 569, 551, 552, 570, 571, 0, 572, 573, 574,
	575, 576, 577, 578, 675, 0, 579, 0, 580, 581,
	582, 584, 553, 585, 590, 591, 676, 586, 587, 588,
	589, 677, 593, 594, 0, 595, 596, 0, 592, 583,
	820, 597, 598, 599, 600, 601, 821, 603, 364, 604,
	0, 605, 678, 679, 680, 681, 0, 614, 0, 606,
	607, 608, 682, 609, 683, 0, 610, 611, 612, 613,
	0, 615, 616, 0, 0, 617, 618, 619, 621, 622,
	620, 623, 0, 624, 0, 0, 625, 626, 627, 684,
	685, 686, 815, 629, 628, 630, 687, 0, 631, 0,
	0, 0, 0, 632, 633, 688, 634, 635, 636, 280,
	282, 281, 283, 284, 285, 286, 2062, 287, 288, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 0, 289,
	290, 825, 291, 292, 293, 294, 295, 296, 638, 639,
	0, 297, 640, 298, 641, 0, 642, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 643, 644, 645,
	0, 306, 307, 646, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 822, 337,
	0, 338, 340, 647, 648, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 649, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 650, 651, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 652, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 653, 654, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 655, 0, 656, 391, 0, 392,
	393, 394, 395, 396, 657, 658, 659, 476, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 660, 661,
	0, 662, 0, 409, 410, 0, 663, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 664, 0,
	425, 426, 0, 0, 427, 0, 0, 0, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 466, 468, 469, 464,
	465, 467, 470, 471, 462, 463, 0, 472, 461, 0,
	279, 0, 473, 474, 0, 665, 475, 666, 477, 478,
	0, 0, 479, 0, 0, 0, 481, 482, 483, 0,
	0, 484, 485, 667, 0, 486, 0, 668, 487, 488,
	480, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 498, 499, 669, 500, 501, 502, 670, 503, 504,
	505, 671, 506, 672, 507, 508, 0, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 517, 673, 518, 519,
	521, 520, 522, 0, 523, 0, 524, 525, 526, 0,
	0, 0, 0, 0, 527, 0, 529, 530, 531, 532,
	528, 533, 534, 535, 536, 537, 0, 538, 539, 540,
	0, 541, 542, 543, 544, 545, 674, 546, 0, 547,
	548, 554, 555, 556, 549, 550, 2061, 558, 559, 560,
	561, 0, 2063, 564, 562, 565, 566, 567, 0, 568,
	569, 551, 552, 570, 571, 0, 572, 573, 574, 575,
	576, 577, 578, 675, 0, 579, 0, 580, 581, 582,
	584, 553, 585, 590, 591, 676, 586, 587, 588, 589,
	677, 593, 594, 0, 595, 596, 0, 592, 583, 820,
	597, 598, 599, 600, 601, 821, 603, 364, 604, 0,
	605, 678, 679, 680, 681, 0, 614, 0, 606, 607,
	608, 682, 609, 683, 0, 610, 611, 2060, 613, 0,
	615, 616, 0, 0, 617, 618, 619, 621, 622, 620,
	623, 0, 624, 0, 0, 625, 626, 627, 684, 685,
	686, 815, 629, 628, 630, 687, 0, 631, 0, 0,
	0, 0, 632, 633, 688, 634, 635, 636, 280, 282,
	281, 283, 284, 285, 286, 2013, 287, 288, 0, 0,
	0, 0, 0, 637, 0, 0, 0, 0, 289, 290,
	825, 291, 292, 293, 294, 295, 296, 638, 639, 0,
	297, 640, 298, 641, 0, 642, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 643, 644, 645, 0,
	306, 307, 646, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 822, 337, 0,
	338, 340, 647, 648, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 649, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 650, 651, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 652, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	653, 654, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 655, 0, 656, 391, 0, 392, 393,
	394, 395, 396, 657, 658, 659, 476, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 660, 661, 0,
	662, 0, 409, 410, 0, 663, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 664, 0, 425,
	426, 0, 0, 427, 0, 0, 0, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 466, 468, 469, 464, 465,
	467, 470, 471, 462, 463, 0, 472, 461, 0, 279,
	0, 473, 474, 0, 665, 475, 666, 477, 478, 0,
	0, 479, 0, 0, 0, 481, 482, 483, 0, 0,
	484, 485, 667, 0, 486, 0, 668, 487, 488, 480,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 0,
	498, 499, 669, 500, 501, 502, 670, 503, 504, 505,
	671, 506, 672, 507, 508, 0, 509, 510, 0, 511,
	512, 513, 514, 515, 516, 517, 673, 518, 519, 521,
	520, 522, 0, 523, 0, 524, 525, 526, 0, 0,
	0, 0, 0, 527, 0, 529, 530, 531, 532, 528,
	533, 534, 535, 536, 537, 0, 538, 539, 540, 0,
	541, 542, 543, 544, 545, 674, 546, 0, 547, 548,
	554, 555, 556, 549, 550, 2012, 558, 559, 560, 561,
	0, 2014, 564, 562, 565, 566, 567, 0, 568, 569,
	551, 552, 570, 571, 0, 572, 573, 574, 575, 576,
	577, 578, 675, 0, 579, 0, 580, 581, 582, 584,
	553, 585, 590, 591, 676, 586, 587, 588, 589, 677,
	593, 594, 0, 595, 596, 0, 592, 583, 820, 597,
	598, 599, 600, 601, 821, 603, 364, 604, 0, 605,
	678, 679, 680, 681, 0, 614, 0, 606, 607, 608,
	682, 609, 683, 0, 610, 611, 2011, 613, 0, 615,
	616, 0, 0, 617, 618, 619, 621, 622, 620, 623,
	0, 624, 0, 0, 625, 626, 627, 684, 685, 686,
	0, 629, 628, 630, 687, 0, 631, 813, 0, 815,
	0, 632, 633, 688, 634, 635, 636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 825,
	0, 637, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 638, 639, 0, 297, 640,
	298, 641, 0, 642, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 643, 644, 645, 0, 306, 307,
	646, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 822, 337, 0, 338, 340,
	647, 648, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 649,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	650, 651, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 652, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 653, 654,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 655, 0, 656, 391, 0, 392, 393, 394, 395,
	396, 657, 658, 659, 476, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 660, 661, 0, 662, 0,
	409, 410, 0, 663, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 664, 0, 425, 426, 0,
	0, 427, 0, 0, 0, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 466, 468, 469, 464, 465, 467, 470,
	471, 462, 463, 0, 472, 461, 0, 279, 0, 473,
	474, 0, 665, 475, 666, 477, 478, 0, 0, 479,
	0, 0, 0, 481, 482, 483, 0, 0, 484, 485,
	667, 0, 486, 0, 668, 487, 488, 480, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 0, 498, 499,
	669, 500, 501, 502, 670, 503, 504, 505, 671, 506,
	672, 507, 508, 0, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 517, 673, 518, 519, 521, 520, 522,
	0, 523, 0, 524, 525, 526, 0, 0, 0, 0,
	0, 527, 0, 529, 530, 531, 532, 528, 533, 534,
	535, 536, 537, 0, 538, 539, 540, 0, 541, 542,
	543, 544, 545, 674, 546, 0, 547, 548, 554, 555,
	556, 549, 550, 557, 558, 559, 560, 561, 0, 563,
	564, 562, 565, 566, 567, 0, 568, 569, 551, 552,
	570, 571, 0, 572, 573, 574, 575, 576, 577, 578,
	675, 0, 579, 0, 580, 581, 582, 584, 553, 585,
	590, 591, 676, 586, 587, 588, 589, 677, 593, 594,
	0, 595, 596, 0, 592, 583, 820, 597, 598, 599,
	600, 601, 821, 603, 364, 604, 0, 605, 678, 679,
	680, 681, 0, 614, 0, 606, 607, 608, 682, 609,
	683, 0, 610, 611, 612, 613, 0, 615, 616, 0,
	0, 617, 618, 619, 621, 622, 620, 623, 0, 624,
	0, 0, 625, 626, 627, 684, 685, 686, 0, 629,
	628, 630, 687, 2035, 631, 0, 0, 0, 0, 632,
	633, 688, 634, 635, 636, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 0, 0, 825, 0, 0,
	289, 290, 1202, 291, 292, 293, 294, 295, 296, 0,
	2041, 0, 297, 2031, 298, 2047, 0, 2054, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 2057, 2058,
	0, 0, 306, 307, 0, 0, 1347, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1203, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 1185, 338, 340, 2045, 2044, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1170, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 0, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 2043, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1204, 378,
	379, 380, 2052, 2053, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 0, 0, 0, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 476, 1206,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 1205, 407, 2038,
	2039, 0, 2034, 0, 409, 410, 1207, 0, 1208, 411,
	412, 413, 1209, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 0,
	1210, 425, 426, 1211, 0, 427, 0, 0, 0, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1212, 458, 459, 460, 466, 468, 469,
	464, 465, 467, 470, 471, 462, 463, 1213, 472, 461,
	0, 0, 1214, 473, 474, 0, 0, 475, 2046, 477,
	478, 0, 0, 479, 0, 0, 0, 481, 482, 483,
	0, 0, 484, 485, 0, 1215, 486, 1216, 0, 487,
	488, 480, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 498, 499, 2028, 500, 501, 502, 2029, 503,
	504, 505, 0, 506, 0, 507, 508, 0, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 517, 2042, 518,
	519, 521, 520, 522, 0, 523, 0, 524, 525, 526,
	0, 0, 0, 0, 0, 527, 0, 529, 530, 531,
	532, 528, 533, 534, 535, 536, 537, 0, 538, 539,
	540, 1217, 541, 542, 543, 544, 545, 0, 546, 0,
	547, 548, 554, 555, 556, 549, 550, 557, 558, 559,
	560, 561, 0, 563, 564, 562, 565, 566, 567, 0,
	568, 569, 551, 552, 570, 571, 1218, 572, 573, 574,
	575, 576, 577, 578, 2040, 0, 579, 0, 580, 581,
	582, 584, 553, 585, 590, 591, 2056, 586, 587, 588,
	589, 0, 593, 594, 0, 595, 596, 0, 592, 583,
	0, 597, 598, 599, 600, 601, 602, 603, 364, 604,
	0, 605, 2048, 2049, 2050, 2051, 0, 614, 0, 606,
	607, 608, 0, 609, 0, 0, 610, 611, 612, 613,
	0, 615, 616, 0, 0, 617, 618, 619, 621, 622,
	620, 623, 0, 624, 0, 0, 625, 626, 627, 0,
	2032, 2055, 0, 629, 628, 630, 0, 0, 631, 0,
	0, 0, 0, 632, 633, 0, 634, 635, 636, 815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 637, 2022, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 638, 639, 0, 297, 640,
	298, 641, 0, 642, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 643, 644, 645, 0, 306, 307,
	646, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 822, 337, 0, 338, 340,
	647, 648, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 649,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	650, 651, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 652, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 653, 654,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 655, 0, 656, 391, 0, 392, 393, 394, 395,
	396, 657, 658, 659, 476, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 660, 661, 0, 662, 0,
	409, 410, 0, 663, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 664, 0, 425, 426, 0,
	0, 427, 0, 0, 0, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 466, 468, 469, 464, 465, 467, 470,
	471, 462, 463, 0, 472, 461, 0, 279, 0, 473,
	474, 0, 665, 475, 666, 477, 478, 0, 0, 479,
	0, 0, 0, 481, 482, 483, 0, 0, 484, 485,
	667, 0, 486, 0, 668, 487, 488, 480, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 0, 498, 499,
	669, 500, 501, 502, 670, 503, 504, 505, 671, 506,
	672, 507, 508, 0, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 517, 673, 518, 519, 521, 520, 522,
	0, 523, 0, 524, 525, 526, 0, 0, 0, 0,
	0, 527, 0, 529, 530, 531, 532, 528, 533, 534,
	535, 536, 537, 0, 538, 539, 540, 0, 541, 542,
	543, 544, 545, 674, 546, 0, 547, 548, 554, 555,
	556, 549, 550, 557, 558, 559, 560, 561, 0, 563,
	564, 562, 565, 566, 567, 0, 568, 569, 551, 552,
	570, 571, 0, 572, 573, 574, 575, 576, 577, 578,
	675, 0, 579, 0, 580, 581, 582, 584, 553, 585,
	590, 591, 676, 586, 587, 588, 589, 677, 593, 594,
	0, 595, 596, 0, 592, 583, 820, 597, 598, 599,
	600, 601, 821, 603, 364, 604, 0, 605, 678, 679,
	680, 681, 0, 614, 0, 606, 607, 608, 682, 609,
	683, 0, 610, 611, 612, 613, 0, 615, 616, 0,
	0, 617, 618, 619, 621, 622, 620, 623, 0, 624,
	0, 0, 625, 626, 627, 684, 685, 686, 815, 629,
	628, 630, 687, 0, 631, 0, 0, 0, 0, 632,
	633, 688, 634, 635, 636, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 0, 289, 290, 825, 291, 292,
	293, 294, 295, 296, 638, 639, 0, 297, 640, 298,
	641, 0, 642, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 643, 644, 645, 0, 306, 307, 646,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 822, 337, 0, 338, 340, 647,
	648, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 649, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 650,
	651, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 652, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 653, 654, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	655, 0, 656, 391, 0, 392, 393, 394, 395, 396,
	657, 658, 659, 476, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 660, 661, 0, 662, 0, 409,
	410, 0, 663, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 664, 0, 425, 426, 0, 0,
	427, 0, 0, 0, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 466, 468, 469, 464, 465, 467, 470, 471,
	462, 463, 0, 472, 461, 0, 279, 0, 473, 474,
	0, 665, 475, 666, 477, 478, 0, 0, 479, 0,
	0, 0, 481, 482, 483, 0, 0, 484, 485, 667,
	0, 486, 0, 668, 487, 488, 480, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 498, 499, 669,
	500, 501, 502, 670, 503, 504, 505, 671, 506, 672,
	507, 508, 0, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 517, 673, 518, 519, 521, 520, 522, 0,
	523, 0, 524, 525, 526, 0, 0, 0, 0, 0,
	527, 0, 529, 530, 531, 532, 528, 533, 534, 535,
	536, 537, 0, 538, 539, 540, 0, 2374, 542, 543,
	544, 545, 674, 546, 0, 547, 548, 554, 555, 556,
	549, 550, 2375, 558, 559, 560, 561, 0, 563, 564,
	562, 565, 566, 567, 0, 568, 569, 551, 552, 570,
	571, 0, 572, 573, 574, 575, 576, 577, 578, 675,
	0, 579, 0, 580, 581, 582, 584, 553, 585, 590,
	591, 676, 586, 587, 588, 589, 677, 593, 594, 0,
	595, 596, 0, 592, 583, 820, 597, 598, 599, 600,
	601, 821, 603, 364, 604, 0, 605, 678, 679, 680,
	681, 0, 614, 0, 606, 607, 608, 682, 609, 683,
	0, 610, 611, 2376, 613, 0, 615, 616, 0, 0,
	617, 618, 619, 621, 622, 620, 623, 0, 624, 0,
	0, 625, 626, 627, 684, 685, 686, 274, 629, 628,
	630, 687, 0, 631, 0, 0, 0, 0, 632, 633,
	688, 634, 635, 636, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 289, 290, 825, 291, 292, 293,
	294, 295, 296, 638, 639, 0, 297, 640, 298, 641,
	0, 642, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 643, 644, 645, 0, 306, 307, 646, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 647, 648,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 649, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 650, 651,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 652, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 653, 654, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 655,
	0, 656, 391, 0, 392, 393, 394, 395, 396, 657,
	658, 659, 476, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 660, 661, 0, 662, 0, 409, 410,
	0, 663, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 664, 0, 425, 426, 0, 0, 427,
	0, 0, 0, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 466, 468, 469, 464, 465, 467, 470, 471, 462,
	463, 0, 472, 461, 0, 279, 0, 473, 474, 0,
	665, 475, 666, 477, 478, 0, 0, 479, 0, 0,
	0, 481, 482, 483, 0, 0, 484, 485, 667, 0,
	486, 0, 668, 487, 488, 480, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 0, 498, 499, 669, 500,
	501, 502, 670, 503, 504, 505, 671, 506, 672, 507,
	508, 0, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 517, 673, 518, 519, 521, 520, 522, 0, 523,
	0, 524, 525, 526, 0, 0, 0, 0, 0, 527,
	0, 529, 530, 531, 532, 528, 533, 534, 535, 536,
	537, 0, 538, 539, 540, 0, 541, 542, 543, 544,
	545, 674, 546, 0, 547, 548, 554, 555, 556, 549,
	550, 557, 558, 559, 560, 561, 0, 563, 564, 562,
	565, 566, 567, 0, 568, 569, 551, 552, 570, 571,
	0, 572, 573, 574, 575, 576, 577, 578, 675, 0,
	579, 0, 580, 581, 582, 584, 553, 585, 590, 591,
	676, 586, 587, 588, 589, 677, 593, 594, 0, 595,
	596, 0, 592, 583, 0, 597, 598, 599, 600, 601,
	602, 603, 364, 604, 0, 605, 678, 679, 680, 681,
	0, 614, 0, 606, 607, 608, 682, 609, 683, 0,
	610, 611, 612, 613, 0, 615, 616, 0, 0, 617,
	618, 619, 621, 622, 620, 623, 0, 624, 0, 0,
	625, 626, 627, 684, 685, 686, 0, 629, 628, 630,
	687, 0, 631, 0, 1342, 2110, 0, 632, 633, 688,
	634, 635, 636, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 825, 637, 0, 0, 0,
	0, 289, 290, 1202, 291, 292, 293, 294, 295, 296,
	638, 639, 0, 297, 640, 298, 641, 0, 642, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 643,
	644, 645, 0, 306, 307, 646, 0, 1347, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1203, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 3054, 333, 334, 335,
	336, 337, 0, 338, 340, 647, 648, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 649, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 650, 651, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 652, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1204,
	378, 379, 380, 653, 654, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 655, 0, 656, 391,
	0, 392, 393, 394, 395, 396, 657, 658, 659, 476,
	1206, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 1205, 407,
	660, 661, 0, 662, 0, 409, 410, 1207, 663, 1208,
	411, 412, 413, 1209, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	664, 1210, 425, 426, 1211, 0, 427, 0, 0, 0,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1212, 458, 459, 460, 466, 468,
	469, 464, 465, 467, 470, 471, 462, 463, 1213, 472,
	461, 0, 0, 1214, 473, 474, 0, 665, 475, 666,
	477, 478, 0, 0, 479, 0, 0, 0, 481, 482,
	483, 0, 0, 484, 485, 667, 1215, 486, 1216, 668,
	487, 488, 480, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 498, 499, 669, 500, 501, 502, 670,
	503, 504, 505, 671, 506, 672, 507, 508, 0, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 517, 673,
	518, 519, 521, 520, 522, 0, 523, 0, 524, 525,
	526, 0, 0, 0, 0, 0, 527, 0, 529, 530,
	531, 532, 528, 533, 534, 535, 536, 537, 0, 538,
	539, 540, 1217, 541, 542, 543, 544, 545, 674, 546,
	0, 547, 548, 554, 555, 556, 549, 550, 557, 558,
	559, 560, 561, 0, 563, 564, 562, 565, 566, 567,
	3055, 568, 569, 551, 552, 570, 571, 1218, 572, 573,
	574, 575, 576, 577, 578, 675, 0, 579, 0, 580,
	581, 582, 584, 553, 585, 590, 591, 676, 586, 587,
	588, 589, 677, 593, 594, 0, 595, 596, 0, 592,
	583, 0, 597, 598, 599, 600, 601, 602, 603, 364,
	604, 0, 605, 678, 679, 680, 681, 0, 614, 0,
	606, 607, 608, 682, 609, 683, 0, 610, 611, 612,
	613, 0, 615, 616, 0, 0, 617, 618, 619, 621,
	622, 620, 623, 0, 624, 0, 0, 625, 626, 627,
	684, 685, 686, 0, 629, 628, 630, 687, 0, 631,
	0, 0, 0, 0, 632, 633, 688, 634, 635, 636,
	1342, 1341, 0, 0, 0, 0, 1339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 637, 0, 0, 0, 0, 289, 290, 1202,
	291, 292, 293, 294, 295, 296, 638, 639, 0, 297,
	640, 298, 641, 0, 642, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 643, 644, 645, 0, 306,
	307, 646, 0, 1347, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1203, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 647, 648, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	649, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 650, 651, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 652, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1204, 378, 379, 380, 653,
	654, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 655, 0, 656, 391, 0, 392, 393, 394,
	395, 396, 657, 658, 659, 476, 1206, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 1205, 407, 660, 661, 0, 662,
	0, 409, 410, 1207, 663, 1208, 411, 412, 413, 1209,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 664, 1210, 425, 426,
	1211, 0, 427, 0, 0, 0, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1212, 458, 459, 460, 466, 468, 469, 464, 465, 467,
	470, 471, 462, 463, 1213, 472, 461, 0, 0, 1214,
	473, 474, 3967, 665, 475, 666, 477, 478, 0, 0,
	479, 0, 0, 0, 481, 482, 483, 0, 0, 484,
	485, 667, 1215, 486, 1216, 668, 487, 488, 480, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 498,
	499, 669, 500, 501, 502, 670, 503, 504, 505, 671,
	506, 672, 507, 508, 0, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 517, 673, 518, 519, 521, 520,
	522, 0, 523, 0, 524, 525, 526, 0, 0, 0,
	0, 0, 527, 0, 529, 530, 531, 532, 528, 533,
	534, 535, 536, 537, 0, 538, 539, 540, 1217, 541,
	542, 543, 544, 545, 674, 546, 0, 547, 548, 554,
	555, 556, 549, 550, 557, 558, 559, 560, 561, 0,
	563, 564, 562, 565, 566, 567, 0, 568, 569, 551,
	552, 570, 571, 1218, 572, 573, 574, 575, 576, 577,
	578, 675, 0, 579, 0, 580, 581, 582, 584, 553,
	585, 590, 591, 676, 586, 587, 588, 589, 677, 593,
	594, 0, 595, 596, 0, 592, 583, 0, 597, 598,
	599, 600, 601, 602, 603, 364, 604, 0, 605, 678,
	679, 680, 681, 0, 614, 0, 606, 607, 608, 682,
	609, 683, 0, 610, 611, 612, 613, 0, 615, 616,
	0, 0, 617, 618, 619, 621, 622, 620, 623, 0,
	624, 0, 0, 625, 626, 627, 684, 685, 686, 0,
	629, 628, 630, 687, 0, 631, 0, 0, 0, 0,
	632, 633, 688, 634, 635, 636, 1342, 1341, 0, 0,
	0, 0, 1339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 289, 290, 1202, 291, 292, 293, 294,
	295, 296, 638, 639, 0, 297, 640, 298, 641, 0,
	642, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 643, 644, 645, 0, 306, 307, 646, 0, 1347,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1203, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 647, 648, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 649, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 650, 651, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	652, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1204, 378, 379, 380, 653, 654, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 655, 0,
	656, 391, 0, 392, 393, 394, 395, 396, 657, 658,
	659, 476, 1206, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	1205, 407, 660, 661, 0, 662, 0, 409, 410, 1207,
	663, 1208, 411, 412, 413, 1209, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 664, 1210, 425, 426, 1211, 0, 427, 0,
	0, 0, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1212, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	1213, 472, 461, 0, 0, 1214, 473, 474, 3570, 665,
	475, 666, 477, 478, 0, 0, 479, 0, 0, 0,
	481, 482, 483, 0, 0, 484, 485, 667, 1215, 486,
	1216, 668, 487, 488, 480, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 671, 506, 672, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 673, 518, 519, 521, 520, 522, 0, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	0, 538, 539, 540, 1217, 541, 542, 543, 544, 545,
	674, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 0, 563, 564, 562, 565,
	566, 567, 0, 568, 569, 551, 552, 570, 571, 1218,
	572, 573, 574, 575, 576, 577, 578, 675, 0, 579,
	0, 580, 581, 582, 584, 553, 585, 590, 591, 676,
	586, 587, 588, 589, 677, 593, 594, 0, 595, 596,
	0, 592, 583, 0, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 0, 605, 678, 679, 680, 681, 0,
	614, 0, 606, 607, 608, 682, 609, 683, 0, 610,
	611, 612, 613, 0, 615, 616, 0, 0, 617, 618,
	619, 621, 622, 620, 623, 0, 624, 0, 0, 625,
	626, 627, 684, 685, 686, 0, 629, 628, 630, 687,
	0, 631, 0, 0, 0, 0, 632, 633, 688, 634,
	635, 636, 1681, 0, 1342, 1341, 0, 0, 0, 0,
	1339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	0, 289, 290, 1202, 291, 292, 293, 294, 295, 296,
	638, 639, 0, 297, 640, 298, 641, 0, 642, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 643,
	644, 645, 0, 306, 307, 646, 0, 1347, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1203, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 647, 648, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 649, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 650, 651, 370, 0, 277,
	0, 0, 0, 0, 0, 1680, 372, 373, 652, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1204,
	378, 379, 380, 653, 654, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 655, 0, 656, 391,
	0, 392, 393, 394, 395, 396, 657, 658, 659, 476,
	1206, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 1205, 407,
	660, 661, 0, 662, 0, 409, 410, 1207, 663, 1208,
	411, 412, 413, 1209, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	664, 1210, 425, 426, 1211, 0, 427, 0, 0, 0,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1212, 458, 459, 460, 466, 468,
	469, 464, 465, 467, 470, 471, 462, 463, 1213, 472,
	461, 0, 0, 1214, 473, 474, 0, 665, 475, 666,
	477, 478, 0, 0, 479, 0, 0, 0, 481, 482,
	483, 0, 0, 484, 485, 667, 1215, 486, 1216, 668,
	487, 488, 480, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 498, 499, 669, 500, 501, 502, 670,
	503, 504, 505, 671, 506, 672, 507, 508, 0, 509,
	510, 0, 511, 512, 513, 514, 515, 1679, 517, 673,
	518, 519, 521, 520, 522, 0, 523, 0, 524, 525,
	526, 0, 0, 0, 0, 0, 527, 0, 529, 530,
	531, 532, 528, 533, 534, 535, 536, 537, 0, 538,
	539, 540, 1217, 541, 542, 543, 544, 545, 674, 546,
	0, 547, 548, 554, 555, 556, 549, 550, 557, 1678,
	559, 560, 561, 0, 563, 564, 562, 565, 566, 567,
	0, 568, 569, 551, 552, 570, 571, 1218, 572, 573,
	574, 575, 576, 577, 578, 675, 0, 579, 0, 580,
	581, 582, 584, 553, 585, 590, 591, 676, 586, 587,
	588, 589, 677, 593, 594, 0, 595, 596, 0, 592,
	583, 0, 597, 598, 599, 600, 601, 602, 603, 364,
	604, 0, 605, 678, 679, 680, 681, 0, 614, 0,
	606, 607, 608, 682, 609, 683, 0, 610, 611, 612,
	613, 0, 615, 616, 0, 0, 617, 618, 619, 621,
	622, 620, 623, 0, 624, 0, 0, 625, 626, 627,
	684, 685, 686, 0, 629, 628, 630, 687, 0, 631,
	0, 0, 0, 0, 632, 633, 688, 634, 635, 636,
	1595, 0, 1342, 1341, 0, 0, 0, 0, 1339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 0, 289,
	290, 1202, 291, 292, 293, 294, 295, 296, 638, 639,
	0, 297, 640, 298, 641, 0, 642, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 643, 644, 645,
	0, 306, 307, 646, 0, 1347, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1203, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 647, 648, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 649, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 650, 651, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 652, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1204, 378, 379,
	380, 653, 654, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 655, 0, 656, 391, 0, 392,
	393, 394, 395, 396, 1594, 658, 659, 476, 1206, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 1205, 407, 660, 661,
	0, 662, 0, 409, 410, 1207, 663, 1208, 411, 412,
	413, 1209, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 664, 1210,
	425, 426, 1211, 0, 427, 0, 0, 0, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1212, 458, 459, 460, 466, 468, 469, 464,
	465, 467, 470, 471, 462, 463, 1213, 472, 461, 0,
	0, 1214, 473, 474, 0, 665, 475, 666, 477, 478,
	0, 0, 479, 0, 0, 0, 481, 482, 483, 0,
	0, 484, 485, 667, 1215, 486, 1216, 668, 487, 488,
	480, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 498, 499, 669, 500, 501, 502, 670, 503, 504,
	505, 671, 506, 672, 507, 508, 0, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 517, 673, 518, 519,
	521, 520, 522, 0, 523, 0, 524, 525, 526, 0,
	0, 0, 0, 0, 527, 0, 529, 530, 531, 532,
	528, 533, 534, 535, 536, 537, 0, 538, 539, 540,
	1217, 541, 542, 543, 544, 545, 674, 546, 0, 547,
	548, 554, 555, 556, 549, 550, 557, 558, 559, 560,
	561, 0, 563, 564, 562, 565, 566, 567, 0, 568,
	569, 551, 552, 570, 571, 1218, 572, 573, 574, 575,
	576, 577, 578, 675, 0, 579, 0, 580, 581, 582,
	584, 553, 585, 590, 591, 676, 586, 587, 588, 589,
	677, 593, 594, 0, 595, 596, 0, 592, 583, 0,
	597, 598, 599, 600, 601, 602, 603, 364, 604, 0,
	605, 678, 679, 680, 681, 0, 614, 0, 606, 607,
	608, 682, 609, 683, 0, 610, 611, 612, 613, 0,
	615, 616, 0, 0, 617, 618, 619, 621, 622, 620,
	623, 0, 624, 0, 0, 625, 626, 627, 684, 685,
	686, 0, 629, 628, 630, 687, 0, 631, 0, 0,
	0, 0, 632, 633, 688, 634, 635, 636, 1554, 0,
	1342, 1341, 0, 0, 0, 0, 1339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 637, 0, 0, 0, 0, 289, 290, 1202,
	291, 292, 293, 294, 295, 296, 638, 639, 0, 297,
	640, 298, 641, 0, 642, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 643, 644, 645, 0, 306,
	307, 646, 0, 1347, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1203, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 647, 648, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	649, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 650, 651, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 652, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1204, 378, 379, 380, 653,
	654, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 655, 0, 656, 391, 0, 392, 393, 394,
	395, 396, 1556, 658, 659, 476, 1206, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 1205, 407, 660, 661, 0, 662,
	0, 409, 410, 1207, 663, 1208, 411, 412, 413, 1209,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 664, 1210, 425, 426,
	1211, 0, 427, 0, 0, 0, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1212, 458, 459, 460, 466, 468, 469, 464, 465, 467,
	470, 471, 462, 463, 1213, 472, 461, 0, 0, 1214,
	473, 474, 0, 665, 475, 666, 477, 478, 0, 0,
	479, 0, 0, 0, 481, 482, 483, 0, 0, 484,
	485, 667, 1215, 486, 1216, 668, 487, 488, 480, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 498,
	499, 669, 500, 501, 502, 670, 503, 504, 505, 671,
	506, 672, 507, 508, 0, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 517, 673, 518, 519, 521, 520,
	522, 0, 523, 0, 524, 525, 526, 0, 0, 0,
	0, 0, 527, 0, 529, 530, 531, 532, 528, 533,
	534, 535, 536, 537, 0, 538, 539, 540, 1217, 541,
	542, 543, 544, 545, 674, 546, 0, 547, 548, 554,
	555, 556, 549, 550, 557, 558, 559, 560, 561, 0,
	563, 564, 562, 565, 566, 567, 0, 568, 569, 551,
	552, 570, 571, 1218, 572, 573, 574, 575, 576, 577,
	578, 675, 0, 579, 0, 580, 581, 582, 584, 553,
	585, 590, 591, 676, 586, 587, 588, 589, 677, 593,
	594, 0, 595, 596, 0, 592, 583, 0, 597, 598,
	599, 600, 601, 602, 603, 364, 604, 0, 605, 678,
	679, 680, 681, 0, 614, 0, 606, 607, 608, 682,
	609, 683, 0, 610, 611, 612, 613, 0, 615, 616,
	0, 0, 617, 618, 619, 621, 622, 620, 623, 0,
	624, 0, 0, 625, 626, 627, 684, 685, 686, 0,
	629, 628, 630, 687, 0, 631, 0, 0, 0, 0,
	632, 633, 688, 634, 635, 636, 1517, 0, 1342, 1341,
	0, 0, 0, 0, 1339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 0, 289, 290, 1202, 291, 292,
	293, 294, 295, 296, 638, 639, 0, 297, 640, 298,
	641, 0, 642, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 643, 644, 645, 0, 306, 307, 646,
	0, 1347, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1203, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 647,
	648, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 649, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 650,
	651, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 652, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1204, 378, 379, 380, 653, 654, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	655, 0, 656, 391, 0, 392, 393, 394, 395, 396,
	1516, 658, 659, 476, 1206, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 1205, 407, 660, 661, 0, 662, 0, 409,
	410, 1207, 663, 1208, 411, 412, 413, 1209, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 664, 1210, 425, 426, 1211, 0,
	427, 0, 0, 0, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1212, 458,
	459, 460, 466, 468, 469, 464, 465, 467, 470, 471,
	462, 463, 1213, 472, 461, 0, 0, 1214, 473, 474,
	0, 665, 475, 666, 477, 478, 0, 0, 479, 0,
	0, 0, 481, 482, 483, 0, 0, 484, 485, 667,
	1215, 486, 1216, 668, 487, 488, 480, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 498, 499, 669,
	500, 501, 502, 670, 503, 504, 505, 671, 506, 672,
	507, 508, 0, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 517, 673, 518, 519, 521, 520, 522, 0,
	523, 0, 524, 525, 526, 0, 0, 0, 0, 0,
	527, 0, 529, 530, 531, 532, 528, 533, 534, 535,
	536, 537, 0, 538, 539, 540, 1217, 541, 542, 543,
	544, 545, 674, 546, 0, 547, 548, 554, 555, 556,
	549, 550, 557, 558, 559, 560, 561, 0, 563, 564,
	562, 565, 566, 567, 0, 568, 569, 551, 552, 570,
	571, 1218, 572, 573, 574, 575, 576, 577, 578, 675,
	0, 579, 0, 580, 581, 582, 584, 553, 585, 590,
	591, 676, 586, 587, 588, 589, 677, 593, 594, 0,
	595, 596, 0, 592, 583, 0, 597, 598, 599, 600,
	601, 602, 603, 364, 604, 0, 605, 678, 679, 680,
	681, 0, 614, 0, 606, 607, 608, 682, 609, 683,
	0, 610, 611, 612, 613, 0, 615, 616, 0, 0,
	617, 618, 619, 621, 622, 620, 623, 0, 624, 0,
	0, 625, 626, 627, 684, 685, 686, 0, 629, 628,
	630, 687, 0, 631, 0, 0, 0, 0, 632, 633,
	688, 634, 635, 636, 1336, 0, 1342, 1341, 0, 0,
	0, 0, 1339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 289, 290, 1202, 291, 292, 293, 294,
	295, 296, 638, 639, 0, 297, 640, 298, 641, 0,
	642, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 643, 644, 645, 0, 306, 307, 646, 0, 1347,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1203, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 647, 648, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 649, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 650, 651, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	652, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1204, 378, 379, 380, 653, 654, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 655, 0,
	656, 391, 0, 392, 393, 394, 395, 396, 1335, 658,
	659, 476, 1206, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	1205, 407, 660, 661, 0, 662, 0, 409, 410, 1207,
	663, 1208, 411, 412, 413, 1209, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 664, 1210, 425, 426, 1211, 0, 427, 0,
	0, 0, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1212, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	1213, 472, 461, 0, 0, 1214, 473, 474, 0, 665,
	475, 666, 477, 478, 0, 0, 479, 0, 0, 0,
	481, 482, 483, 0, 0, 484, 485, 667, 1215, 486,
	1216, 668, 487, 488, 480, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 671, 506, 672, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 673, 518, 519, 521, 520, 522, 0, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	0, 538, 539, 540, 1217, 541, 542, 543, 544, 545,
	674, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 0, 563, 564, 562, 565,
	566, 567, 0, 568, 569, 551, 552, 570, 571, 1218,
	572, 573, 574, 575, 576, 577, 578, 675, 0, 579,
	0, 580, 581, 582, 584, 553, 585, 590, 591, 676,
	586, 587, 588, 589, 677, 593, 594, 0, 595, 596,
	0, 592, 583, 0, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 0, 605, 678, 679, 680, 681, 0,
	614, 0, 606, 607, 608, 682, 609, 683, 0, 610,
	611, 612, 613, 0, 615, 616, 0, 0, 617, 618,
	619, 621, 622, 620, 623, 0, 624, 0, 0, 625,
	626, 627, 684, 685, 686, 0, 629, 628, 630, 687,
	0, 631, 0, 0, 0, 0, 632, 633, 688, 634,
	635, 636, 1342, 1341, 0, 0, 0, 0, 1339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 0, 289,
	290, 1202, 291, 292, 293, 294, 295, 296, 638, 639,
	0, 297, 640, 298, 641, 0, 642, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 643, 644, 645,
	0, 306, 307, 646, 0, 1347, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1203, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 647, 648, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 649, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 650, 651, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 652, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1204, 378, 379,
	380, 653, 654, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 655, 0, 656, 391, 0, 392,
	393, 394, 395, 396, 657, 658, 659, 476, 1206, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 1205, 407, 660, 661,
	0, 662, 0, 409, 410, 1207, 663, 1208, 411, 412,
	413, 1209, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 664, 1210,
	425, 426, 1211, 0, 427, 0, 0, 0, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1212, 458, 459, 460, 466, 468, 469, 464,
	465, 467, 470, 471, 462, 463, 1213, 472, 461, 0,
	0, 1214, 473, 474, 0, 665, 475, 666, 477, 478,
	0, 0, 479, 0, 0, 0, 481, 482, 483, 0,
	0, 484, 485, 667, 1215, 486, 1216, 668, 487, 488,
	480, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 498, 499, 669, 500, 501, 502, 670, 503, 504,
	505, 671, 506, 672, 507, 508, 0, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 517, 673, 518, 519,
	521, 520, 522, 0, 523, 0, 524, 525, 526, 0,
	0, 0, 0, 0, 527, 0, 529, 530, 531, 532,
	528, 533, 534, 535, 536, 537, 0, 538, 539, 540,
	1217, 541, 542, 543, 544, 545, 674, 546, 0, 547,
	548, 554, 555, 556, 549, 550, 557, 558, 559, 560,
	561, 0, 563, 564, 562, 565, 566, 567, 0, 568,
	569, 551, 552, 570, 571, 1218, 572, 573, 574, 575,
	576, 577, 578, 675, 0, 579, 0, 580, 581, 582,
	584, 553, 585, 590, 591, 676, 586, 587, 588, 589,
	677, 593, 594, 0, 595, 596, 0, 592, 583, 0,
	597, 598, 599, 600, 601, 602, 603, 364, 604, 0,
	605, 678, 679, 680, 681, 0, 614, 0, 606, 607,
	608, 682, 609, 683, 0, 610, 611, 612, 613, 0,
	615, 616, 0, 0, 617, 618, 619, 621, 622, 620,
	623, 0, 624, 0, 0, 625, 626, 627, 684, 685,
	686, 0, 629, 628, 630, 687, 0, 631, 1342, 2110,
	0, 0, 632, 633, 688, 634, 635, 636, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 0, 289, 290, 1202, 291, 292,
	293, 294, 295, 296, 638, 639, 0, 297, 640, 298,
	641, 0, 642, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 643, 644, 645, 0, 306, 307, 646,
	0, 1347, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1203, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 647,
	648, 2107, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 649, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 650,
	651, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 652, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1204, 378, 379, 380, 653, 654, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	655, 0, 656, 391, 0, 392, 393, 394, 395, 396,
	657, 658, 659, 476, 1206, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 1205, 407, 660, 661, 0, 662, 0, 409,
	410, 1207, 663, 1208, 411, 412, 413, 1209, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 664, 1210, 425, 426, 1211, 0,
	427, 0, 0, 0, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1212, 458,
	459, 460, 466, 468, 469, 464, 465, 467, 470, 471,
	462, 463, 1213, 472, 461, 0, 0, 1214, 473, 474,
	0, 665, 475, 666, 477, 478, 0, 0, 479, 0,
	0, 0, 481, 482, 483, 0, 0, 484, 485, 667,
	1215, 486, 1216, 668, 487, 488, 480, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 498, 499, 669,
	500, 501, 502, 670, 503, 504, 505, 671, 506, 672,
	507, 508, 0, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 517, 673, 518, 519, 521, 520, 522, 0,
	523, 0, 524, 525, 526, 0, 0, 0, 0, 0,
	527, 0, 529, 530, 531, 532, 528, 533, 534, 535,
	536, 537, 0, 538, 539, 540, 1217, 541, 542, 543,
	544, 545, 674, 546, 0, 547, 548, 554, 555, 556,
	549, 550, 557, 558, 559, 560, 561, 0, 563, 564,
	562, 565, 566, 567, 0, 568, 569, 551, 552, 570,
	571, 1218, 572, 573, 574, 575, 576, 577, 578, 675,
	0, 579, 0, 580, 581, 582, 584, 553, 585, 590,
	591, 676, 586, 587, 588, 589, 677, 593, 594, 0,
	595, 596, 0, 592, 583, 0, 597, 598, 599, 600,
	601, 602, 603, 364, 604, 0, 605, 678, 679, 680,
	681, 0, 614, 0, 606, 607, 608, 682, 609, 683,
	0, 610, 611, 612, 613, 0, 615, 616, 0, 0,
	617, 618, 619, 621, 622, 620, 623, 0, 624, 0,
	0, 625, 626, 627, 684, 685, 686, 0, 629, 628,
	630, 687, 0, 631, 1342, 1341, 0, 0, 632, 633,
	688, 634, 635, 636, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	0, 289, 290, 1202, 291, 292, 293, 294, 295, 296,
	638, 639, 0, 297, 640, 298, 641, 0, 642, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 643,
	644, 645, 0, 306, 307, 646, 0, 1347, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1203, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 647, 648, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 649, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 650, 651, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 652, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1204,
	378, 379, 380, 653, 654, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 655, 0, 656, 391,
	0, 392, 393, 394, 395, 396, 657, 658, 659, 476,
	1206, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 1205, 407,
	660, 661, 0, 662, 0, 409, 410, 1207, 663, 1208,
	411, 412, 413, 1209, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	664, 1210, 425, 426, 1211, 0, 427, 0, 0, 0,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1212, 458, 459, 460, 466, 468,
	469, 464, 465, 467, 470, 471, 462, 463, 1213, 472,
	461, 0, 0, 1214, 473, 474, 0, 665, 475, 666,
	477, 478, 0, 0, 479, 0, 0, 0, 481, 482,
	483, 0, 0, 484, 485, 667, 1215, 486, 1216, 668,
	487, 488, 480, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 498, 499, 669, 500, 501, 502, 670,
	503, 504, 505, 671, 506, 672, 507, 508, 0, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 517, 673,
	518, 519, 521, 520, 522, 0, 523, 0, 524, 525,
	526, 0, 0, 0, 0, 0, 527, 0, 529, 530,
	531, 532, 528, 533, 534, 535, 536, 537, 0, 538,
	539, 540, 1217, 541, 542, 543, 544, 545, 674, 546,
	0, 547, 548, 554, 555, 556, 549, 550, 557, 558,
	559, 560, 561, 0, 563, 564, 562, 565, 566, 567,
	0, 568, 569, 551, 552, 570, 571, 1218, 572, 573,
	574, 575, 576, 577, 578, 675, 0, 579, 0, 580,
	581, 582, 584, 553, 585, 590, 591, 676, 586, 587,
	588, 589, 677, 593, 594, 0, 595, 596, 0, 592,
	583, 0, 597, 598, 599, 600, 601, 602, 603, 364,
	604, 0, 605, 678, 679, 680, 681, 0, 614, 0,
	606, 607, 608, 682, 609, 683, 0, 610, 611, 612,
	613, 0, 615, 616, 0, 0, 617, 618, 619, 621,
	622, 620, 623, 0, 624, 0, 0, 625, 626, 627,
	684, 685, 686, 1342, 629, 628, 630, 687, 0, 631,
	0, 0, 0, 0, 632, 633, 688, 634, 635, 636,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	289, 290, 1202, 291, 292, 293, 294, 295, 296, 638,
	639, 0, 297, 640, 298, 641, 0, 642, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 643, 644,
	645, 0, 306, 307, 646, 0, 1347, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1203, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 647, 648, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 649, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 650, 651, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 652, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1204, 378,
	379, 380, 653, 654, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 655, 0, 656, 391, 0,
	392, 393, 394, 395, 396, 657, 658, 659, 476, 1206,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 1205, 407, 660,
	661, 0, 662, 0, 409, 410, 1207, 663, 1208, 411,
	412, 413, 1209, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 664,
	1210, 425, 426, 1211, 0, 427, 0, 0, 0, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1212, 458, 459, 460, 466, 468, 469,
	464, 465, 467, 470, 471, 462, 463, 1213, 472, 461,
	0, 0, 1214, 473, 474, 0, 665, 475, 666, 477,
	478, 0, 0, 479, 0, 0, 0, 481, 482, 483,
	0, 0, 484, 485, 667, 1215, 486, 1216, 668, 487,
	488, 480, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 498, 499, 669, 500, 501, 502, 670, 503,
	504, 505, 671, 506, 672, 507, 508, 0, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 517, 673, 518,
	519, 521, 520, 522, 0, 523, 0, 524, 525, 526,
	0, 0, 0, 0, 0, 527, 0, 529, 530, 531,
	532, 528, 533, 534, 535, 536, 537, 0, 538, 539,
	540, 1217, 541, 542, 543, 544, 545, 674, 546, 0,
	547, 548, 554, 555, 556, 549, 550, 557, 558, 559,
	560, 561, 0, 563, 564, 562, 565, 566, 567, 0,
	568, 569, 551, 552, 570, 571, 1218, 572, 573, 574,
	575, 576, 577, 578, 675, 0, 579, 0, 580, 581,
	582, 584, 553, 585, 590, 591, 676, 586, 587, 588,
	589, 677, 593, 594, 0, 595, 596, 0, 592, 583,
	0, 597, 598, 599, 600, 601, 602, 603, 364, 604,
	0, 605, 678, 679, 680, 681, 0, 614, 0, 606,
	607, 608, 682, 609, 683, 0, 610, 611, 612, 613,
	0, 615, 616, 0, 0, 617, 618, 619, 621, 622,
	620, 623, 0, 624, 0, 0, 625, 626, 627, 684,
	685, 686, 274, 629, 628, 630, 687, 0, 631, 0,
	0, 0, 0, 632, 633, 688, 634, 635, 636, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 638, 639,
	0, 297, 640, 298, 641, 0, 642, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 643, 644, 645,
	2892, 306, 307, 646, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 2889, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 647, 648, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	2896, 358, 649, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 650, 651, 370, 0, 3116, 0, 0,
	0, 0, 0, 371, 372, 373, 652, 0, 0, 0,
	374, 0, 375, 376, 377, 2895, 0, 0, 378, 379,
	380, 653, 654, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 655, 0, 656, 391, 0, 392,
	393, 394, 395, 396, 657, 658, 659, 476, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	3113, 404, 405, 406, 408, 0, 0, 407, 660, 661,
	0, 662, 0, 409, 3115, 0, 663, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 664, 0,
	425, 426, 3112, 0, 427, 0, 0, 0, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 466, 468, 469, 464,
	465, 467, 470, 471, 462, 463, 0, 472, 461, 0,
	0, 0, 473, 474, 0, 665, 475, 666, 477, 478,
	0, 0, 479, 0, 0, 0, 481, 482, 483, 0,
	0, 484, 485, 667, 0, 486, 0, 668, 487, 488,
	480, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 498, 499, 669, 500, 501, 502, 670, 503, 504,
	505, 671, 506, 672, 507, 508, 2894, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 517, 673, 518, 519,
	521, 520, 522, 0, 523, 0, 524, 525, 526, 0,
	0, 0, 0, 0, 527, 0, 529, 530, 531, 532,
	528, 533, 534, 535, 536, 537, 0, 538, 539, 540,
	0, 541, 542, 543, 544, 545, 674, 546, 0, 547,
	548, 554, 555, 556, 549, 550, 557, 558, 559, 560,
	561, 0, 563, 564, 562, 565, 566, 567, 0, 568,
	569, 551, 552, 570, 571, 0, 572, 573, 574, 575,
	576, 577, 578, 675, 0, 579, 0, 580, 581, 582,
	584, 553, 585, 590, 591, 676, 586, 587, 588, 589,
	677, 593, 594, 0, 595, 596, 0, 592, 583, 0,
	597, 598, 599, 600, 601, 602, 603, 364, 604, 0,
	605, 678, 679, 680, 681, 0, 614, 0, 606, 607,
	608, 682, 609, 683, 0, 610, 611, 612, 613, 0,
	615, 616, 0, 3114, 617, 618, 619, 621, 622, 620,
	623, 0, 624, 0, 0, 625, 626, 627, 684, 685,
	686, 274, 629, 628, 630, 687, 0, 631, 0, 0,
	0, 0, 632, 633, 688, 634, 635, 636, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 637, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 638, 639, 0,
	297, 640, 298, 641, 0, 642, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 643, 644, 645, 2892,
	306, 307, 646, 0, 0, 2886, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	2889, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 647, 648, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 2896,
	358, 649, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 650, 651, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 652, 0, 0, 0, 374,
	0, 375, 376, 377, 2895, 0, 0, 378, 379, 380,
	653, 654, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 655, 0, 656, 391, 0, 392, 393,
	394, 395, 396, 2885, 658, 659, 476, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 660, 661, 0,
	662, 0, 409, 410, 0, 663, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 664, 0, 425,
	426, 0, 0, 427, 0, 0, 0, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 466, 468, 469, 464, 465,
	467, 470, 471, 462, 463, 0, 472, 461, 0, 0,
	0, 473, 474, 0, 665, 475, 666, 477, 478, 0,
	0, 479, 0, 0, 0, 481, 482, 483, 0, 0,
	484, 485, 667, 0, 486, 0, 668, 487, 488, 480,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 0,
	498, 499, 669, 500, 501, 502, 670, 503, 504, 505,
	671, 506, 672, 507, 508, 2894, 509, 510, 0, 511,
	512, 513, 514, 515, 516, 517, 673, 518, 519, 521,
	520, 522, 0, 523, 0, 524, 525, 526, 0, 0,
	0, 0, 0, 527, 0, 529, 530, 531, 532, 528,
	533, 534, 535, 536, 537, 0, 538, 539, 540, 0,
	541, 542, 543, 544, 545, 674, 546, 0, 547, 548,
	554, 555, 556, 549, 550, 557, 558, 559, 560, 561,
	0, 563, 564, 562, 565, 566, 567, 0, 568, 569,
	551, 552, 570, 571, 0, 572, 573, 574, 575, 576,
	577, 578, 675, 0, 579, 0, 580, 581, 582, 584,
	553, 585, 590, 591, 676, 586, 587, 588, 589, 677,
	593, 594, 0, 595, 596, 0, 592, 583, 0, 597,
	598, 599, 600, 601, 602, 603, 364, 604, 0, 605,
	678, 679, 680, 681, 0, 614, 0, 606, 607, 608,
	682, 609, 683, 0, 610, 611, 612, 613, 0, 615,
	616, 0, 2893, 617, 618, 619, 621, 622, 620, 623,
	0, 624, 0, 0, 625, 626, 627, 684, 685, 686,
	0, 629, 628, 630, 687, 1758, 631, 274, 0, 0,
	0, 632, 633, 688, 634, 635, 636, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 1757, 287, 288, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 638, 639, 0, 297, 640, 298, 641,
	0, 642, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 643, 644, 645, 0, 306, 307, 646, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 1756, 337, 0, 338, 340, 647, 648,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 649, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 650, 651,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 652, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 653, 654, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 655,
	0, 656, 391, 0, 392, 393, 394, 395, 396, 657,
	658, 659, 476, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 660, 661, 0, 662, 0, 409, 410,
	0, 663, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 664, 0, 425, 426, 0, 0, 427,
	0, 0, 0, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 466, 468, 469, 464, 465, 467, 470, 471, 462,
	463, 0, 472, 461, 0, 279, 0, 473, 474, 0,
	665, 475, 666, 477, 478, 0, 0, 479, 0, 0,
	0, 481, 482, 483, 0, 0, 484, 485, 667, 0,
	486, 0, 668, 487, 488, 480, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 0, 498, 499, 669, 500,
	501, 502, 670, 503, 504, 505, 671, 506, 672, 507,
	508, 0, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 517, 673, 518, 519, 521, 520, 522, 0, 523,
	0, 524, 525, 526, 0, 0, 0, 0, 0, 527,
	0, 529, 530, 531, 532, 528, 533, 534, 535, 536,
	537, 0, 538, 539, 540, 0, 541, 542, 543, 544,
	545, 674, 546, 0, 547, 548, 554, 555, 556, 1759,
	550, 557, 558, 559, 560, 561, 0, 1755, 564, 562,
	565, 566, 567, 0, 568, 569, 551, 552, 570, 571,
	0, 572, 573, 574, 575, 576, 577, 578, 675, 0,
	579, 0, 580, 581, 582, 584, 553, 585, 590, 591,
	676, 586, 587, 588, 589, 677, 593, 594, 0, 595,
	596, 0, 592, 583, 1753, 597, 598, 599, 600, 601,
	602, 603, 364, 604, 0, 605, 678, 679, 680, 681,
	0, 614, 0, 606, 607, 608, 682, 609, 683, 0,
	610, 611, 612, 613, 0, 615, 616, 0, 0, 617,
	618, 619, 621, 622, 620, 623, 0, 624, 0, 0,
	625, 626, 627, 684, 685, 686, 0, 1754, 628, 630,
	687, 1492, 631, 274, 0, 0, 0, 632, 633, 688,
	634, 635, 636, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 638,
	639, 0, 297, 640, 298, 641, 0, 642, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 643, 644,
	645, 0, 306, 307, 646, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 647, 648, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 649, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 650, 651, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 652, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 653, 654, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 655, 0, 656, 391, 0,
	392, 393, 394, 395, 396, 1494, 658, 659, 476, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 660,
	661, 0, 662, 0, 409, 410, 0, 663, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 664,
	0, 425, 426, 0, 0, 427, 0, 0, 0, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 466, 468, 469,
	464, 465, 467, 470, 471, 462, 463, 0, 472, 461,
	0, 279, 0, 473, 474, 0, 665, 475, 666, 477,
	478, 0, 0, 479, 0, 0, 1252, 481, 482, 483,
	0, 0, 484, 485, 667, 0, 486, 0, 668, 487,
	488, 480, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 498, 499, 669, 500, 501, 502, 670, 503,
	504, 505, 671, 506, 672, 507, 508, 0, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 517, 673, 518,
	519, 521, 520, 522, 0, 523, 0, 524, 525, 526,
	0, 0, 0, 0, 0, 527, 0, 529, 530, 531,
	532, 528, 533, 534, 535, 536, 537, 0, 538, 539,
	540, 0, 541, 542, 543, 544, 545, 674, 546, 0,
	547, 548, 554, 555, 556, 549, 550, 557, 558, 559,
	560, 561, 0, 563, 564, 562, 565, 566, 567, 0,
	568, 569, 551, 552, 570, 571, 0, 572, 573, 574,
	575, 576, 577, 578, 675, 0, 579, 0, 580, 581,
	582, 584, 553, 585, 590, 591, 676, 586, 587, 588,
	589, 677, 593, 594, 0, 595, 596, 0, 592, 583,
	0, 597, 598, 599, 600, 601, 602, 603, 364, 604,
	0, 605, 678, 679, 680, 681, 0, 614, 0, 606,
	607, 608, 682, 609, 683, 0, 610, 611, 612, 613,
	0, 615, 616, 0, 0, 617, 618, 619, 621, 622,
	620, 623, 0, 624, 0, 0, 625, 626, 627, 684,
	685, 686, 0, 629, 628, 630, 687, 1489, 631, 274,
	0, 0, 0, 632, 633, 688, 634, 635, 636, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 637, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 638, 639, 0, 297, 640,
	298, 641, 0, 642, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 643, 644, 645, 0, 306, 307,
	646, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	647, 648, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 649,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	650, 651, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 652, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 653, 654,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 655, 0, 656, 391, 0, 392, 393, 394, 395,
	396, 1491, 658, 659, 476, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 660, 661, 0, 662, 0,
	409, 410, 0, 663, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 664, 0, 425, 426, 0,
	0, 427, 0, 0, 0, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 466, 468, 469, 464, 465, 467, 470,
	471, 462, 463, 0, 472, 461, 0, 279, 0, 473,
	474, 0, 665, 475, 666, 477, 478, 0, 0, 479,
	0, 0, 1252, 481, 482, 483, 0, 0, 484, 485,
	667, 0, 486, 0, 668, 487, 488, 480, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 0, 498, 499,
	669, 500, 501, 502, 670, 503, 504, 505, 671, 506,
	672, 507, 508, 0, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 517, 673, 518, 519, 521, 520, 522,
	0, 523, 0, 524, 525, 526, 0, 0, 0, 0,
	0, 527, 0, 529, 530, 531, 532, 528, 533, 534,
	535, 536, 537, 0, 538, 539, 540, 0, 541, 542,
	543, 544, 545, 674, 546, 0, 547, 548, 554, 555,
	556, 549, 550, 557, 558, 559, 560, 561, 0, 563,
	564, 562, 565, 566, 567, 0, 568, 569, 551, 552,
	570, 571, 0, 572, 573, 574, 575, 576, 577, 578,
	675, 0, 579, 0, 580, 581, 582, 584, 553, 585,
	590, 591, 676, 586, 587, 588, 589, 677, 593, 594,
	0, 595, 596, 0, 592, 583, 0, 597, 598, 599,
	600, 601, 602, 603, 364, 604, 0, 605, 678, 679,
	680, 681, 0, 614, 0, 606, 607, 608, 682, 609,
	683, 0, 610, 611, 612, 613, 0, 615, 616, 0,
	0, 617, 618, 619, 621, 622, 620, 623, 0, 624,
	0, 0, 625, 626, 627, 684, 685, 686, 0, 629,
	628, 630, 687, 1396, 631, 274, 0, 0, 0, 632,
	633, 688, 634, 635, 636, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 638, 639, 0, 297, 640, 298, 641, 0, 642,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	643, 644, 645, 0, 306, 307, 646, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 647, 648, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 649, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 650, 651, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 652,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 653, 654, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 655, 0, 656,
	391, 0, 392, 393, 394, 395, 396, 1398, 658, 659,
	476, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 660, 661, 0, 662, 0, 409, 410, 0, 663,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 664, 0, 425, 426, 0, 0, 427, 0, 0,
	0, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 466,
	468, 469, 464, 465, 467, 470, 471, 462, 463, 0,
	472, 461, 0, 279, 0, 473, 474, 0, 665, 475,
	666, 477, 478, 0, 0, 479, 0, 0, 1252, 481,
	482, 483, 0, 0, 484, 485, 667, 0, 486, 0,
	668, 487, 488, 480, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 498, 499, 669, 500, 501, 502,
	670, 503, 504, 505, 671, 506, 672, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 517,
	673, 518, 519, 521, 520, 522, 0, 523, 0, 524,
	525, 526, 0, 0, 0, 0, 0, 527, 0, 529,
	530, 531, 532, 528, 533, 534, 535, 536, 537, 0,
	538, 539, 540, 0, 541, 542, 543, 544, 545, 674,
	546, 0, 547, 548, 554, 555, 556, 549, 550, 557,
	558, 559, 560, 561, 0, 563, 564, 562, 565, 566,
	567, 0, 568, 569, 551, 552, 570, 571, 0, 572,
	573, 574, 575, 576, 577, 578, 675, 0, 579, 0,
	580, 581, 582, 584, 553, 585, 590, 591, 676, 586,
	587, 588, 589, 677, 593, 594, 0, 595, 596, 0,
	592, 583, 0, 597, 598, 599, 600, 601, 602, 603,
	364, 604, 0, 605, 678, 679, 680, 681, 0, 614,
	0, 606, 607, 608, 682, 609, 683, 0, 610, 611,
	612, 613, 0, 615, 616, 0, 0, 617, 618, 619,
	621, 622, 620, 623, 0, 624, 0, 0, 625, 626,
	627, 684, 685, 686, 0, 629, 628, 630, 687, 720,
	631, 274, 0, 0, 0, 632, 633, 688, 634, 635,
	636, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 719, 285, 286, 709, 287, 288, 0, 0,
	0, 0, 0, 637, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 638, 639, 0,
	297, 640, 298, 641, 0, 642, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 643, 644, 645, 0,
	306, 307, 646, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 712,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 647, 648, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 649, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 650, 651, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 652, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	653, 654, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 713, 390, 655, 0, 656, 391, 0, 392, 393,
	394, 395, 396, 657, 658, 659, 476, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 660, 661, 0,
	662, 0, 409, 410, 0, 663, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 664, 0, 425,
	426, 0, 0, 427, 0, 0, 0, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 466, 468, 469, 464, 465,
	467, 470, 471, 462, 463, 0, 472, 461, 0, 0,
	0, 473, 474, 0, 665, 475, 666, 477, 478, 0,
	0, 479, 0, 0, 0, 481, 482, 483, 0, 0,
	484, 485, 667, 0, 486, 0, 668, 487, 488, 480,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 0,
	498, 499, 669, 500, 501, 502, 670, 503, 504, 505,
	671, 506, 672, 507, 508, 0, 509, 510, 0, 511,
	512, 513, 514, 515, 516, 517, 673, 518, 519, 521,
	520, 522, 0, 523, 0, 524, 525, 526, 0, 0,
	0, 0, 0, 527, 0, 529, 530, 531, 532, 528,
	533, 534, 535, 536, 537, 0, 538, 539, 540, 0,
	541, 542, 543, 544, 545, 674, 546, 0, 547, 548,
	554, 555, 556, 549, 550, 557, 558, 559, 560, 561,
	714, 563, 564, 562, 565, 566, 567, 0, 568, 569,
	551, 552, 570, 571, 0, 572, 573, 574, 575, 576,
	577, 578, 675, 0, 579, 0, 580, 581, 582, 584,
	553, 585, 590, 591, 676, 586, 587, 588, 589, 677,
	593, 594, 0, 595, 596, 0, 592, 583, 0, 597,
	598, 599, 600, 601, 602, 603, 364, 604, 0, 605,
	678, 679, 680, 681, 0, 614, 0, 606, 607, 608,
	682, 609, 683, 0, 610, 611, 612, 613, 0, 615,
	616, 0, 0, 617, 618, 619, 621, 622, 620, 623,
	0, 624, 0, 0, 625, 626, 627, 684, 685, 686,
	0, 629, 628, 630, 687, 708, 631, 274, 0, 0,
	0, 632, 633, 688, 634, 635, 636, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 709, 287, 288, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 638, 639, 0, 297, 640, 298, 641,
	0, 642, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 643, 644, 645, 0, 306, 307, 646, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 712, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 647, 648,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 649, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 650, 651,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 652, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 653, 654, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 713, 390, 655,
	0, 656, 391, 0, 392, 393, 394, 395, 396, 657,
	658, 659, 476, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 660, 661, 0, 662, 0, 409, 410,
	0, 663, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 664, 0, 425, 426, 0, 0, 427,
	0, 0, 0, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 466, 468, 469, 464, 465, 467, 470, 471, 462,
	463, 0, 472, 461, 0, 0, 0, 473, 474, 0,
	665, 475, 666, 477, 478, 0, 0, 479, 0, 0,
	0, 481, 482, 483, 0, 0, 484, 485, 667, 0,
	486, 0, 668, 487, 488, 480, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 0, 498, 499, 669, 500,
	501, 502, 670, 503, 504, 505, 671, 506, 672, 507,
	508, 0, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 517, 673, 518, 519, 521, 520, 522, 0, 523,
	0, 524, 525, 526, 0, 0, 0, 0, 0, 527,
	0, 529, 530, 531, 532, 528, 533, 534, 535, 536,
	537, 0, 538, 539, 540, 0, 541, 542, 543, 544,
	545, 674, 546, 0, 547, 548, 554, 555, 556, 549,
	550, 557, 558, 559, 560, 561, 714, 563, 564, 562,
	565, 566, 567, 0, 568, 569, 551, 552, 570, 571,
	0, 572, 573, 574, 575, 576, 577, 578, 675, 0,
	579, 0, 580, 581, 582, 584, 553, 585, 590, 591,
	676, 586, 587, 588, 589, 677, 593, 594, 0, 595,
	596, 0, 592, 583, 0, 597, 598, 599, 600, 601,
	602, 603, 364, 604, 0, 605, 678, 679, 680, 681,
	0, 614, 0, 606, 607, 608, 682, 609, 683, 0,
	610, 611, 612, 613, 0, 615, 616, 0, 0, 617,
	618, 619, 621, 622, 620, 623, 0, 624, 0, 0,
	625, 626, 627, 684, 685, 686, 274, 629, 628, 630,
	687, 0, 631, 0, 0, 0, 0, 632, 633, 688,
	634, 635, 636, 280, 282, 281, 283, 284, 285, 286,
	709, 287, 288, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 638, 639, 0, 297, 640, 298, 641, 0,
	642, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 643, 644, 645, 0, 306, 307, 646, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 712, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 647, 648, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 649, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 650, 651, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	652, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 653, 654, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 713, 390, 655, 0,
	656, 391, 0, 392, 393, 394, 395, 396, 657, 658,
	659, 476, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 660, 661, 0, 662, 0, 409, 410, 0,
	663, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 664, 0, 425, 426, 0, 0, 427, 0,
	0, 0, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	0, 472, 461, 0, 0, 0, 473, 474, 0, 665,
	475, 666, 477, 478, 0, 0, 479, 0, 0, 0,
	481, 482, 483, 0, 0, 484, 485, 667, 0, 486,
	0, 668, 487, 488, 480, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 671, 506, 672, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 673, 518, 519, 521, 520, 522, 0, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	0, 538, 539, 540, 0, 541, 542, 543, 544, 545,
	674, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 714, 563, 564, 562, 565,
	566, 567, 0, 568, 569, 551, 552, 570, 571, 0,
	572, 573, 574, 575, 576, 577, 578, 675, 0, 579,
	0, 580, 581, 582, 584, 553, 585, 590, 591, 676,
	586, 587, 588, 589, 677, 593, 594, 0, 595, 596,
	0, 592, 583, 0, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 0, 605, 678, 679, 680, 681, 0,
	614, 0, 606, 607, 608, 682, 609, 683, 0, 610,
	611, 612, 613, 0, 615, 616, 0, 0, 617, 618,
	619, 621, 622, 620, 623, 0, 624, 0, 0, 625,
	626, 627, 684, 685, 686, 274, 629, 628, 630, 687,
	0, 631, 0, 0, 0, 0, 632, 633, 688, 634,
	635, 636, 280, 282, 281, 283, 284, 285, 286, 709,
	287, 288, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 638, 639, 0, 297, 640, 298, 641, 0, 642,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	643, 644, 645, 0, 306, 307, 646, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 712, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 647, 648, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 649, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 650, 651, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 652,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 653, 654, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 3978, 390, 655, 0, 656,
	391, 0, 392, 393, 394, 395, 396, 657, 658, 659,
	476, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 660, 661, 0, 662, 0, 409, 410, 0, 663,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 664, 0, 425, 426, 0, 0, 427, 0, 0,
	0, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 466,
	468, 469, 464, 465, 467, 470, 471, 462, 463, 0,
	472, 461, 0, 0, 0, 473, 474, 0, 665, 475,
	666, 477, 478, 0, 0, 479, 0, 0, 0, 481,
	482, 483, 0, 0, 484, 485, 667, 0, 486, 0,
	668, 487, 488, 480, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 498, 499, 669, 500, 501, 502,
	670, 503, 504, 505, 671, 506, 672, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 517,
	673, 518, 519, 521, 520, 522, 0, 523, 0, 524,
	525, 526, 0, 0, 0, 0, 0, 527, 0, 529,
	530, 531, 532, 528, 533, 534, 535, 536, 537, 0,
	538, 539, 540, 0, 541, 542, 543, 544, 545, 674,
	546, 0, 547, 548, 554, 555, 556, 549, 550, 557,
	558, 559, 560, 561, 714, 563, 564, 562, 565, 566,
	567, 0, 568, 569, 551, 552, 570, 571, 0, 572,
	573, 574, 575, 576, 577, 578, 675, 0, 579, 0,
	580, 581, 582, 584, 553, 585, 590, 591, 676, 586,
	587, 588, 589, 677, 593, 594, 0, 595, 596, 0,
	592, 583, 0, 597, 598, 599, 600, 601, 602, 603,
	364, 604, 0, 605, 678, 679, 680, 681, 0, 614,
	0, 606, 607, 608, 682, 609, 683, 0, 610, 611,
	612, 613, 0, 615, 616, 0, 0, 617, 618, 619,
	621, 622, 620, 623, 0, 624, 0, 0, 625, 626,
	627, 684, 685, 686, 274, 629, 628, 630, 687, 0,
	631, 0, 0, 0, 0, 632, 633, 688, 634, 635,
	636, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	638, 639, 0, 297, 640, 298, 641, 0, 642, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 643,
	644, 645, 0, 306, 307, 646, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 647, 648, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 649, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 650, 651, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 652, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 653, 654, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 655, 0, 656, 391,
	0, 392, 393, 394, 395, 396, 657, 658, 659, 476,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	660, 661, 0, 662, 0, 409, 410, 0, 663, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	664, 0, 425, 426, 0, 0, 427, 0, 0, 0,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 466, 468,
	469, 464, 465, 467, 470, 471, 462, 463, 0, 472,
	461, 0, 279, 0, 473, 474, 0, 665, 475, 666,
	477, 478, 0, 0, 479, 0, 0, 1252, 481, 482,
	483, 0, 0, 484, 485, 667, 0, 486, 0, 668,
	487, 488, 480, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 498, 499, 669, 500, 501, 502, 670,
	503, 504, 505, 671, 506, 672, 507, 508, 0, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 517, 673,
	518, 519, 521, 520, 522, 0, 523, 0, 524, 525,
	526, 0, 0, 0, 0, 0, 527, 0, 529, 530,
	531, 532, 528, 533, 534, 535, 536, 537, 0, 538,
	539, 540, 0, 541, 542, 543, 544, 545, 674, 546,
	0, 547, 548, 554, 555, 556, 549, 550, 557, 558,
	559, 560, 561, 0, 563, 564, 562, 565, 566, 567,
	0, 568, 569, 551, 552, 570, 571, 0, 572, 573,
	574, 575, 576, 577, 578, 675, 0, 579, 0, 580,
	581, 582, 584, 553, 585, 590, 591, 676, 586, 587,
	588, 589, 677, 593, 594, 0, 595, 596, 0, 592,
	583, 0, 597, 598, 599, 600, 601, 602, 603, 364,
	604, 0, 605, 678, 679, 680, 681, 0, 614, 0,
	606, 607, 608, 682, 609, 683, 0, 610, 611, 612,
	613, 0, 615, 616, 0, 0, 617, 618, 619, 621,
	622, 620, 623, 0, 624, 0, 0, 625, 626, 627,
	684, 685, 686, 274, 629, 628, 630, 687, 0, 631,
	0, 0, 0, 0, 632, 633, 688, 634, 635, 636,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 638,
	639, 0, 297, 640, 298, 641, 0, 642, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 643, 644,
	645, 0, 306, 307, 646, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 647, 648, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 649, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 650, 651, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 652, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 653, 654, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 655, 0, 656, 391, 0,
	392, 393, 394, 395, 396, 657, 658, 659, 476, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 660,
	661, 0, 662, 0, 409, 410, 0, 663, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 664,
	0, 425, 426, 0, 0, 427, 0, 0, 0, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 466, 468, 469,
	464, 465, 467, 470, 471, 462, 463, 3518, 472, 461,
	0, 279, 0, 473, 474, 0, 665, 475, 666, 477,
	478, 0, 0, 479, 0, 0, 0, 481, 482, 483,
	0, 0, 484, 485, 667, 0, 486, 0, 668, 487,
	488, 480, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 498, 499, 669, 500, 501, 502, 670, 503,
	504, 505, 671, 506, 672, 507, 508, 0, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 517, 673, 518,
	519, 521, 520, 522, 0, 523, 0, 524, 525, 526,
	0, 0, 0, 0, 0, 527, 0, 529, 530, 531,
	532, 528, 533, 534, 535, 536, 537, 0, 538, 539,
	540, 0, 541, 542, 543, 544, 545, 674, 546, 0,
	547, 548, 554, 555, 556, 549, 550, 557, 558, 559,
	560, 561, 0, 563, 564, 562, 565, 566, 567, 0,
	568, 569, 551, 552, 570, 571, 0, 572, 573, 574,
	575, 576, 577, 578, 675, 0, 579, 0, 580, 581,
	582, 584, 553, 585, 590, 591, 676, 586, 587, 588,
	589, 677, 593, 594, 0, 595, 596, 0, 592, 583,
	0, 597, 598, 599, 600, 601, 602, 603, 364, 604,
	0, 605, 678, 679, 680, 681, 0, 614, 0, 606,
	607, 608, 682, 609, 683, 0, 610, 611, 612, 613,
	0, 615, 616, 0, 0, 617, 618, 619, 621, 622,
	620, 623, 0, 624, 0, 0, 625, 626, 627, 684,
	685, 686, 0, 629, 628, 630, 687, 3061, 631, 274,
	0, 0, 0, 632, 633, 688, 634, 635, 636, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 637, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 638, 639, 0, 297, 640,
	298, 641, 0, 642, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 643, 644, 645, 0, 306, 307,
	646, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	647, 648, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 649,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	650, 651, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 652, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 653, 654,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 655, 0, 656, 391, 0, 392, 393, 394, 395,
	396, 3060, 658, 659, 476, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 660, 661, 0, 662, 0,
	409, 410, 0, 663, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 664, 0, 425, 426, 0,
	0, 427, 0, 0, 0, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 466, 468, 469, 464, 465, 467, 470,
	471, 462, 463, 0, 472, 461, 0, 279, 0, 473,
	474, 0, 665, 475, 666, 477, 478, 0, 0, 479,
	0, 0, 0, 481, 482, 483, 0, 0, 484, 485,
	667, 0, 486, 0, 668, 487, 488, 480, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 0, 498, 499,
	669, 500, 501, 502, 670, 503, 504, 505, 671, 506,
	672, 507, 508, 0, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 517, 673, 518, 519, 521, 520, 522,
	0, 523, 0, 524, 525, 526, 0, 0, 0, 0,
	0, 527, 0, 529, 530, 531, 532, 528, 533, 534,
	535, 536, 537, 0, 538, 539, 540, 0, 541, 542,
	543, 544, 545, 674, 546, 0, 547, 548, 554, 555,
	556, 549, 550, 557, 558, 559, 560, 561, 0, 563,
	564, 562, 565, 566, 567, 0, 568, 569, 551, 552,
	570, 571, 0, 572, 573, 574, 575, 576, 577, 578,
	675, 0, 579, 0, 580, 581, 582, 584, 553, 585,
	590, 591, 676, 586, 587, 588, 589, 677, 593, 594,
	0, 595, 596, 0, 592, 583, 0, 597, 598, 599,
	600, 601, 602, 603, 364, 604, 0, 605, 678, 679,
	680, 681, 0, 614, 0, 606, 607, 608, 682, 609,
	683, 0, 610, 611, 612, 613, 0, 615, 616, 0,
	0, 617, 618, 619, 621, 622, 620, 623, 0, 624,
	0, 0, 625, 626, 627, 684, 685, 686, 0, 629,
	628, 630, 687, 2343, 631, 274, 0, 0, 0, 632,
	633, 688, 634, 635, 636, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 638, 639, 0, 297, 640, 298, 641, 0, 642,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	643, 644, 645, 0, 306, 307, 646, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 647, 648, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 649, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 650, 651, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 652,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 653, 654, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 655, 0, 656,
	391, 0, 392, 393, 394, 395, 396, 657, 658, 659,
	476, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 660, 661, 0, 662, 0, 409, 410, 0, 663,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 664, 0, 425, 426, 0, 0, 427, 0, 0,
	0, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 466,
	468, 469, 464, 465, 467, 470, 471, 462, 463, 0,
	472, 461, 0, 279, 0, 473, 474, 0, 665, 475,
	666, 477, 478, 0, 0, 479, 0, 0, 0, 481,
	482, 483, 0, 0, 484, 485, 667, 0, 486, 0,
	668, 487, 488, 480, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 498, 499, 669, 500, 501, 502,
	670, 503, 504, 505, 671, 506, 672, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 517,
	673, 518, 519, 521, 520, 522, 0, 523, 0, 524,
	525, 526, 0, 0, 0, 0, 0, 527, 0, 529,
	530, 531, 532, 528, 533, 534, 535, 536, 537, 0,
	538, 539, 540, 0, 541, 542, 543, 544, 545, 674,
	546, 0, 547, 548, 554, 555, 556, 549, 550, 557,
	558, 559, 560, 561, 0, 563, 564, 562, 565, 566,
	567, 0, 568, 569, 551, 552, 570, 571, 0, 572,
	573, 574, 575, 576, 577, 578, 675, 0, 579, 0,
	580, 581, 582, 584, 553, 585, 590, 591, 676, 586,
	587, 588, 589, 677, 593, 594, 0, 595, 596, 0,
	592, 583, 0, 597, 598, 599, 600, 601, 602, 603,
	364, 604, 0, 605, 678, 679, 680, 681, 0, 614,
	0, 606, 607, 608, 682, 609, 683, 0, 610, 611,
	612, 613, 0, 615, 616, 0, 0, 617, 618, 619,
	621, 622, 620, 623, 0, 624, 0, 0, 625, 626,
	627, 684, 685, 686, 274, 629, 628, 630, 687, 0,
	631, 0, 0, 0, 0, 632, 633, 688, 634, 635,
	636, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	638, 639, 0, 297, 640, 298, 641, 0, 642, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 643,
	644, 645, 0, 306, 307, 646, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 647, 648, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 649, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 650, 651, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 652, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 653, 654, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 655, 0, 656, 391,
	0, 392, 393, 394, 395, 396, 657, 658, 659, 476,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	660, 661, 0, 662, 0, 409, 410, 0, 663, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	664, 0, 425, 426, 0, 0, 427, 0, 0, 0,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 466, 468,
	469, 464, 465, 467, 470, 471, 462, 463, 0, 472,
	461, 0, 279, 0, 473, 474, 0, 665, 475, 666,
	477, 478, 0, 0, 479, 0, 0, 0, 481, 482,
	483, 0, 0, 484, 485, 667, 0, 486, 0, 668,
	487, 488, 480, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 498, 499, 669, 500, 501, 502, 670,
	503, 504, 505, 671, 506, 672, 507, 508, 0, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 517, 673,
	518, 519, 521, 520, 522, 0, 523, 0, 524, 525,
	526, 0, 0, 0, 0, 0, 527, 0, 529, 530,
	531, 532, 528, 533, 534, 535, 536, 537, 0, 538,
	539, 540, 0, 541, 542, 543, 544, 545, 674, 546,
	0, 547, 548, 554, 555, 556, 549, 550, 557, 558,
	559, 560, 561, 0, 563, 564, 562, 565, 566, 567,
	0, 568, 569, 551, 552, 570, 571, 0, 572, 573,
	574, 575, 576, 577, 578, 675, 0, 579, 0, 580,
	581, 582, 584, 553, 585, 590, 591, 676, 586, 587,
	588, 589, 677, 593, 594, 0, 595, 596, 0, 592,
	583, 2280, 597, 598, 599, 600, 601, 602, 603, 364,
	604, 0, 605, 678, 679, 680, 681, 0, 614, 0,
	606, 607, 608, 682, 609, 683, 0, 610, 611, 612,
	613, 0, 615, 616, 0, 0, 617, 618, 619, 621,
	622, 620, 623, 0, 624, 0, 0, 625, 626, 627,
	684, 685, 686, 0, 629, 628, 630, 687, 2287, 631,
	274, 0, 0, 0, 632, 633, 688, 634, 635, 636,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 637, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 638, 639, 0, 297,
	640, 298, 641, 0, 642, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 643, 644, 645, 0, 306,
	307, 646, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 647, 648, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	649, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 650, 651, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 652, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 653,
	654, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 655, 0, 656, 391, 0, 392, 393, 394,
	395, 396, 2286, 658, 659, 476, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 660, 661, 0, 662,
	0, 409, 410, 0, 663, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 664, 0, 425, 426,
	0, 0, 427, 0, 0, 0, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 466, 468, 469, 464, 465, 467,
	470, 471, 462, 463, 0, 472, 461, 0, 279, 0,
	473, 474, 0, 665, 475, 666, 477, 478, 0, 0,
	479, 0, 0, 0, 481, 482, 483, 0, 0, 484,
	485, 667, 0, 486, 0, 668, 487, 488, 480, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 498,
	499, 669, 500, 501, 502, 670, 503, 504, 505, 671,
	506, 672, 507, 508, 0, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 517, 673, 518, 519, 521, 520,
	522, 0, 523, 0, 524, 525, 526, 0, 0, 0,
	0, 0, 527, 0, 529, 530, 531, 532, 528, 533,
	534, 535, 536, 537, 0, 538, 539, 540, 0, 541,
	542, 543, 544, 545, 674, 546, 0, 547, 548, 554,
	555, 556, 549, 550, 557, 558, 559, 560, 561, 0,
	563, 564, 562, 565, 566, 567, 0, 568, 569, 551,
	552, 570, 571, 0, 572, 573, 574, 575, 576, 577,
	578, 675, 0, 579, 0, 580, 581, 582, 584, 553,
	585, 590, 591, 676, 586, 587, 588, 589, 677, 593,
	594, 0, 595, 596, 0, 592, 583, 0, 597, 598,
	599, 600, 601, 602, 603, 364, 604, 0, 605, 678,
	679, 680, 681, 0, 614, 0, 606, 607, 608, 682,
	609, 683, 0, 610, 611, 612, 613, 0, 615, 616,
	0, 0, 617, 618, 619, 621, 622, 620, 623, 0,
	624, 0, 0, 625, 626, 627, 684, 685, 686, 0,
	629, 628, 630, 687, 2273, 631, 274, 0, 0, 0,
	632, 633, 688, 634, 635, 636, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 638, 639, 0, 297, 640, 298, 641, 0,
	642, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 643, 644, 645, 0, 306, 307, 646, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 647, 648, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 649, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 650, 651, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	652, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 653, 654, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 655, 0,
	656, 391, 0, 392, 393, 394, 395, 396, 2275, 658,
	659, 476, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 660, 661, 0, 662, 0, 409, 410, 0,
	663, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 664, 0, 425, 426, 0, 0, 427, 0,
	0, 0, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	0, 472, 461, 0, 279, 0, 473, 474, 0, 665,
	475, 666, 477, 478, 0, 0, 479, 0, 0, 0,
	481, 482, 483, 0, 0, 484, 485, 667, 0, 486,
	0, 668, 487, 488, 480, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 671, 506, 672, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 673, 518, 519, 521, 520, 522, 0, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	0, 538, 539, 540, 0, 541, 542, 543, 544, 545,
	674, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 0, 563, 564, 562, 565,
	566, 567, 0, 568, 569, 551, 552, 570, 571, 0,
	572, 573, 574, 575, 576, 577, 578, 675, 0, 579,
	0, 580, 581, 582, 584, 553, 585, 590, 591, 676,
	586, 587, 588, 589, 677, 593, 594, 0, 595, 596,
	0, 592, 583, 0, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 0, 605, 678, 679, 680, 681, 0,
	614, 0, 606, 607, 608, 682, 609, 683, 0, 610,
	611, 612, 613, 0, 615, 616, 0, 0, 617, 618,
	619, 621, 622, 620, 623, 0, 624, 0, 0, 625,
	626, 627, 684, 685, 686, 274, 629, 628, 630, 687,
	0, 631, 0, 0, 0, 0, 632, 633, 688, 634,
	635, 636, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 638, 639, 0, 297, 640, 298, 641, 0, 642,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	643, 644, 645, 0, 306, 307, 646, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 647, 648, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 649, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 650, 651, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 652,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 653, 654, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 655, 0, 656,
	391, 0, 392, 393, 394, 395, 396, 2238, 658, 659,
	476, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 660, 661, 0, 662, 0, 409, 410, 0, 663,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 664, 0, 425, 426, 0, 0, 427, 0, 0,
	0, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 466,
	468, 469, 464, 465, 467, 470, 471, 462, 463, 0,
	472, 461, 0, 279, 0, 473, 474, 0, 665, 475,
	666, 477, 478, 0, 0, 479, 0, 0, 1252, 481,
	482, 483, 0, 0, 484, 485, 667, 0, 486, 0,
	668, 487, 488, 480, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 498, 499, 669, 500, 501, 502,
	670, 503, 504, 505, 671, 506, 672, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 517,
	673, 518, 519, 521, 520, 522, 0, 523, 0, 524,
	525, 526, 0, 0, 0, 0, 0, 527, 0, 529,
	530, 531, 532, 528, 533, 534, 535, 536, 537, 0,
	538, 539, 540, 0, 541, 542, 543, 544, 545, 674,
	546, 0, 547, 548, 554, 555, 556, 549, 550, 557,
	558, 559, 560, 561, 0, 563, 564, 562, 565, 566,
	567, 0, 568, 569, 551, 552, 570, 571, 0, 572,
	573, 574, 575, 576, 577, 578, 675, 0, 579, 0,
	580, 581, 582, 584, 553, 585, 590, 591, 676, 586,
	587, 588, 589, 677, 593, 594, 0, 595, 596, 0,
	592, 583, 0, 597, 598, 599, 600, 601, 602, 603,
	364, 604, 0, 605, 678, 679, 680, 681, 0, 614,
	0, 606, 607, 608, 682, 609, 683, 0, 610, 611,
	612, 613, 0, 615, 616, 0, 0, 617, 618, 619,
	621, 622, 620, 623, 0, 624, 0, 0, 625, 626,
	627, 684, 685, 686, 0, 629, 628, 630, 687, 1599,
	631, 274, 0, 0, 0, 632, 633, 688, 634, 635,
	636, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 637, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 638, 639, 0,
	297, 640, 298, 641, 0, 642, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 643, 644, 645, 0,
	306, 307, 646, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 647, 648, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 649, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 650, 651, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 652, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	653, 654, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 655, 0, 656, 391, 0, 392, 393,
	394, 395, 396, 1598, 658, 659, 476, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 660, 661, 0,
	662, 0, 409, 410, 0, 663, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 664, 0, 425,
	426, 0, 0, 427, 0, 0, 0, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 466, 468, 469, 464, 465,
	467, 470, 471, 462, 463, 0, 472, 461, 0, 279,
	0, 473, 474, 0, 665, 475, 666, 477, 478, 0,
	0, 479, 0, 0, 0, 481, 482, 483, 0, 0,
	484, 485, 667, 0, 486, 0, 668, 487, 488, 480,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 0,
	498, 499, 669, 500, 501, 502, 670, 503, 504, 505,
	671, 506, 672, 507, 508, 0, 509, 510, 0, 511,
	512, 513, 514, 515, 516, 517, 673, 518, 519, 521,
	520, 522, 0, 523, 0, 524, 525, 526, 0, 0,
	0, 0, 0, 527, 0, 529, 530, 531, 532, 528,
	533, 534, 535, 536, 537, 0, 538, 539, 540, 0,
	541, 542, 543, 544, 545, 674, 546, 0, 547, 548,
	554, 555, 556, 549, 550, 557, 558, 559, 560, 561,
	0, 563, 564, 562, 565, 566, 567, 0, 568, 569,
	551, 552, 570, 571, 0, 572, 573, 574, 575, 576,
	577, 578, 675, 0, 579, 0, 580, 581, 582, 584,
	553, 585, 590, 591, 676, 586, 587, 588, 589, 677,
	593, 594, 0, 595, 596, 0, 592, 583, 0, 597,
	598, 599, 600, 601, 602, 603, 364, 604, 0, 605,
	678, 679, 680, 681, 0, 614, 0, 606, 607, 608,
	682, 609, 683, 0, 610, 611, 612, 613, 0, 615,
	616, 0, 0, 617, 618, 619, 621, 622, 620, 623,
	0, 624, 0, 0, 625, 626, 627, 684, 685, 686,
	0, 629, 628, 630, 687, 1509, 631, 274, 0, 0,
	0, 632, 633, 688, 634, 635, 636, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 638, 639, 0, 297, 640, 298, 641,
	0, 642, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 643, 644, 645, 0, 306, 307, 646, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 647, 648,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 649, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 650, 651,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 652, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 653, 654, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 655,
	0, 656, 391, 0, 392, 393, 394, 395, 396, 657,
	658, 659, 476, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 660, 661, 0, 662, 0, 409, 410,
	0, 663, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 664, 0, 425, 426, 0, 0, 427,
	0, 0, 0, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 466, 468, 469, 464, 465, 467, 470, 471, 462,
	463, 0, 472, 461, 0, 279, 0, 473, 474, 0,
	665, 475, 666, 477, 478, 0, 0, 479, 0, 0,
	0, 481, 482, 483, 0, 0, 484, 485, 667, 0,
	486, 0, 668, 487, 488, 480, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 0, 498, 499, 669, 500,
	501, 502, 670, 503, 504, 505, 671, 506, 672, 507,
	508, 0, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 517, 673, 518, 519, 521, 520, 522, 0, 523,
	0, 524, 525, 526, 0, 0, 0, 0, 0, 527,
	0, 529, 530, 531, 532, 528, 533, 534, 535, 536,
	537, 0, 538, 539, 540, 0, 541, 542, 543, 544,
	545, 674, 546, 0, 547, 548, 554, 555, 556, 549,
	550, 557, 558, 559, 560, 561, 0, 563, 564, 562,
	565, 566, 567, 0, 568, 569, 551, 552, 570, 571,
	0, 572, 573, 574, 575, 576, 577, 578, 675, 0,
	579, 0, 580, 581, 582, 584, 553, 585, 590, 591,
	676, 586, 587, 588, 589, 677, 593, 594, 0, 595,
	596, 0, 592, 583, 0, 597, 598, 599, 600, 601,
	602, 603, 364, 604, 0, 605, 678, 679, 680, 681,
	0, 614, 0, 606, 607, 608, 682, 609, 683, 0,
	610, 611, 612, 613, 0, 615, 616, 0, 0, 617,
	618, 619, 621, 622, 620, 623, 0, 624, 0, 0,
	625, 626, 627, 684, 685, 686, 0, 629, 628, 630,
	687, 1502, 631, 274, 0, 0, 0, 632, 633, 688,
	634, 635, 636, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 638,
	639, 0, 297, 640, 298, 641, 0, 642, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 643, 644,
	645, 0, 306, 307, 646, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 647, 648, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 649, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 650, 651, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 652, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 653, 654, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 655, 0, 656, 391, 0,
	392, 393, 394, 395, 396, 1504, 658, 659, 476, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 660,
	661, 0, 662, 0, 409, 410, 0, 663, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 664,
	0, 425, 426, 0, 0, 427, 0, 0, 0, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 466, 468, 469,
	464, 465, 467, 470, 471, 462, 463, 0, 472, 461,
	0, 279, 0, 473, 474, 0, 665, 475, 666, 477,
	478, 0, 0, 479, 0, 0, 0, 481, 482, 483,
	0, 0, 484, 485, 667, 0, 486, 0, 668, 487,
	488, 480, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 498, 499, 669, 500, 501, 502, 670, 503,
	504, 505, 671, 506, 672, 507, 508, 0, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 517, 673, 518,
	519, 521, 520, 522, 0, 523, 0, 524, 525, 526,
	0, 0, 0, 0, 0, 527, 0, 529, 530, 531,
	532, 528, 533, 534, 535, 536, 537, 0, 538, 539,
	540, 0, 541, 542, 543, 544, 545, 674, 546, 0,
	547, 548, 554, 555, 556, 549, 550, 557, 558, 559,
	560, 561, 0, 563, 564, 562, 565, 566, 567, 0,
	568, 569, 551, 552, 570, 571, 0, 572, 573, 574,
	575, 576, 577, 578, 675, 0, 579, 0, 580, 581,
	582, 584, 553, 585, 590, 591, 676, 586, 587, 588,
	589, 677, 593, 594, 0, 595, 596, 0, 592, 583,
	0, 597, 598, 599, 600, 601, 602, 603, 364, 604,
	0, 605, 678, 679, 680, 681, 0, 614, 0, 606,
	607, 608, 682, 609, 683, 0, 610, 611, 612, 613,
	0, 615, 616, 0, 0, 617, 618, 619, 621, 622,
	620, 623, 0, 624, 0, 0, 625, 626, 627, 684,
	685, 686, 0, 629, 628, 630, 687, 1326, 631, 274,
	0, 0, 0, 632, 633, 688, 634, 635, 636, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 637, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 638, 639, 0, 297, 640,
	298, 641, 0, 642, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 643, 644, 645, 0, 306, 307,
	646, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	647, 648, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 649,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	650, 651, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 652, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 653, 654,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 655, 0, 656, 391, 0, 392, 393, 394, 395,
	396, 1325, 658, 659, 476, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 660, 661, 0, 662, 0,
	409, 410, 0, 663, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 664, 0, 425, 426, 0,
	0, 427, 0, 0, 0, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 466, 468, 469, 464, 465, 467, 470,
	471, 462, 463, 0, 472, 461, 0, 279, 0, 473,
	474, 0, 665, 475, 666, 477, 478, 0, 0, 479,
	0, 0, 0, 481, 482, 483, 0, 0, 484, 485,
	667, 0, 486, 0, 668, 487, 488, 480, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 0, 498, 499,
	669, 500, 501, 502, 670, 503, 504, 505, 671, 506,
	672, 507, 508, 0, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 517, 673, 518, 519, 521, 520, 522,
	0, 523, 0, 524, 525, 526, 0, 0, 0, 0,
	0, 527, 0, 529, 530, 531, 532, 528, 533, 534,
	535, 536, 537, 0, 538, 539, 540, 0, 541, 542,
	543, 544, 545, 674, 546, 0, 547, 548, 554, 555,
	556, 549, 550, 557, 558, 559, 560, 561, 0, 563,
	564, 562, 565, 566, 567, 0, 568, 569, 551, 552,
	570, 571, 0, 572, 573, 574, 575, 576, 577, 578,
	675, 0, 579, 0, 580, 581, 582, 584, 553, 585,
	590, 591, 676, 586, 587, 588, 589, 677, 593, 594,
	0, 595, 596, 0, 592, 583, 0, 597, 598, 599,
	600, 601, 602, 603, 364, 604, 0, 605, 678, 679,
	680, 681, 0, 614, 0, 606, 607, 608, 682, 609,
	683, 0, 610, 611, 612, 613, 0, 615, 616, 0,
	0, 617, 618, 619, 621, 622, 620, 623, 0, 624,
	0, 0, 625, 626, 627, 684, 685, 686, 0, 629,
	628, 630, 687, 1316, 631, 274, 0, 0, 0, 632,
	633, 688, 634, 635, 636, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 638, 639, 0, 297, 640, 298, 641, 0, 642,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	643, 644, 645, 0, 306, 307, 646, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 647, 648, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 649, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 650, 651, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 652,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 653, 654, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 655, 0, 656,
	391, 0, 392, 393, 394, 395, 396, 1315, 658, 659,
	476, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 660, 661, 0, 662, 0, 409, 410, 0, 663,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 664, 0, 425, 426, 0, 0, 427, 0, 0,
	0, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 466,
	468, 469, 464, 465, 467, 470, 471, 462, 463, 0,
	472, 461, 0, 279, 0, 473, 474, 0, 665, 475,
	666, 477, 478, 0, 0, 479, 0, 0, 0, 481,
	482, 483, 0, 0, 484, 485, 667, 0, 486, 0,
	668, 487, 488, 480, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 498, 499, 669, 500, 501, 502,
	670, 503, 504, 505, 671, 506, 672, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 517,
	673, 518, 519, 521, 520, 522, 0, 523, 0, 524,
	525, 526, 0, 0, 0, 0, 0, 527, 0, 529,
	530, 531, 532, 528, 533, 534, 535, 536, 537, 0,
	538, 539, 540, 0, 541, 542, 543, 544, 545, 674,
	546, 0, 547, 548, 554, 555, 556, 549, 550, 557,
	558, 559, 560, 561, 0, 563, 564, 562, 565, 566,
	567, 0, 568, 569, 551, 552, 570, 571, 0, 572,
	573, 574, 575, 576, 577, 578, 675, 0, 579, 0,
	580, 581, 582, 584, 553, 585, 590, 591, 676, 586,
	587, 588, 589, 677, 593, 594, 0, 595, 596, 0,
	592, 583, 0, 597, 598, 599, 600, 601, 602, 603,
	364, 604, 0, 605, 678, 679, 680, 681, 0, 614,
	0, 606, 607, 608, 682, 609, 683, 0, 610, 611,
	612, 613, 0, 615, 616, 0, 0, 617, 618, 619,
	621, 622, 620, 623, 0, 624, 0, 0, 625, 626,
	627, 684, 685, 686, 0, 629, 628, 630, 687, 1313,
	631, 274, 0, 0, 0, 632, 633, 688, 634, 635,
	636, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 637, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 638, 639, 0,
	297, 640, 298, 641, 0, 642, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 643, 644, 645, 0,
	306, 307, 646, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 647, 648, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 649, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 650, 651, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 652, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	653, 654, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 655, 0, 656, 391, 0, 392, 393,
	394, 395, 396, 1312, 658, 659, 476, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 660, 661, 0,
	662, 0, 409, 410, 0, 663, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 664, 0, 425,
	426, 0, 0, 427, 0, 0, 0, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 466, 468, 469, 464, 465,
	467, 470, 471, 462, 463, 0, 472, 461, 0, 279,
	0, 473, 474, 0, 665, 475, 666, 477, 478, 0,
	0, 479, 0, 0, 0, 481, 482, 483, 0, 0,
	484, 485, 667, 0, 486, 0, 668, 487, 488, 480,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 0,
	498, 499, 669, 500, 501, 502, 670, 503, 504, 505,
	671, 506, 672, 507, 508, 0, 509, 510, 0, 511,
	512, 513, 514, 515, 516, 517, 673, 518, 519, 521,
	520, 522, 0, 523, 0, 524, 525, 526, 0, 0,
	0, 0, 0, 527, 0, 529, 530, 531, 532, 528,
	533, 534, 535, 536, 537, 0, 538, 539, 540, 0,
	541, 542, 543, 544, 545, 674, 546, 0, 547, 548,
	554, 555, 556, 549, 550, 557, 558, 559, 560, 561,
	0, 563, 564, 562, 565, 566, 567, 0, 568, 569,
	551, 552, 570, 571, 0, 572, 573, 574, 575, 576,
	577, 578, 675, 0, 579, 0, 580, 581, 582, 584,
	553, 585, 590, 591, 676, 586, 587, 588, 589, 677,
	593, 594, 0, 595, 596, 0, 592, 583, 0, 597,
	598, 599, 600, 601, 602, 603, 364, 604, 0, 605,
	678, 679, 680, 681, 0, 614, 0, 606, 607, 608,
	682, 609, 683, 0, 610, 611, 612, 613, 0, 615,
	616, 0, 0, 617, 618, 619, 621, 622, 620, 623,
	0, 624, 0, 0, 625, 626, 627, 684, 685, 686,
	0, 629, 628, 630, 687, 1308, 631, 274, 0, 0,
	0, 632, 633, 688, 634, 635, 636, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 638, 639, 0, 297, 640, 298, 641,
	0, 642, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 643, 644, 645, 0, 306, 307, 646, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 647, 648,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 649, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 650, 651,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 652, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 653, 654, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 655,
	0, 656, 391, 0, 392, 393, 394, 395, 396, 1307,
	658, 659, 476, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 660, 661, 0, 662, 0, 409, 410,
	0, 663, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 664, 0, 425, 426, 0, 0, 427,
	0, 0, 0, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 466, 468, 469, 464, 465, 467, 470, 471, 462,
	463, 0, 472, 461, 0, 279, 0, 473, 474, 0,
	665, 475, 666, 477, 478, 0, 0, 479, 0, 0,
	0, 481, 482, 483, 0, 0, 484, 485, 667, 0,
	486, 0, 668, 487, 488, 480, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 0, 498, 499, 669, 500,
	501, 502, 670, 503, 504, 505, 671, 506, 672, 507,
	508, 0, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 517, 673, 518, 519, 521, 520, 522, 0, 523,
	0, 524, 525, 526, 0, 0, 0, 0, 0, 527,
	0, 529, 530, 531, 532, 528, 533, 534, 535, 536,
	537, 0, 538, 539, 540, 0, 541, 542, 543, 544,
	545, 674, 546, 0, 547, 548, 554, 555, 556, 549,
	550, 557, 558, 559, 560, 561, 0, 563, 564, 562,
	565, 566, 567, 0, 568, 569, 551, 552, 570, 571,
	0, 572, 573, 574, 575, 576, 577, 578, 675, 0,
	579, 0, 580, 581, 582, 584, 553, 585, 590, 591,
	676, 586, 587, 588, 589, 677, 593, 594, 0, 595,
	596, 0, 592, 583, 0, 597, 598, 599, 600, 601,
	602, 603, 364, 604, 0, 605, 678, 679, 680, 681,
	0, 614, 0, 606, 607, 608, 682, 609, 683, 0,
	610, 611, 612, 613, 0, 615, 616, 0, 0, 617,
	618, 619, 621, 622, 620, 623, 0, 624, 0, 0,
	625, 626, 627, 684, 685, 686, 0, 629, 628, 630,
	687, 690, 631, 274, 0, 0, 0, 632, 633, 688,
	634, 635, 636, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 638,
	639, 0, 297, 640, 298, 641, 0, 642, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 643, 644,
	645, 0, 306, 307, 646, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 647, 648, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 649, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 650, 651, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 652, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 653, 654, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 655, 0, 656, 391, 0,
	392, 393, 394, 395, 396, 657, 658, 659, 476, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 660,
	661, 0, 662, 0, 409, 410, 0, 663, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 664,
	0, 425, 426, 0, 0, 427, 0, 0, 0, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 466, 468, 469,
	464, 465, 467, 470, 471, 462, 463, 0, 472, 461,
	0, 279, 0, 473, 474, 0, 665, 475, 666, 477,
	478, 0, 0, 479, 0, 0, 0, 481, 482, 483,
	0, 0, 484, 485, 667, 0, 486, 0, 668, 487,
	488, 480, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 498, 499, 669, 500, 501, 502, 670, 503,
	504, 505, 671, 506, 672, 507, 508, 0, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 517, 673, 518,
	519, 521, 520, 522, 0, 523, 0, 524, 525, 526,
	0, 0, 0, 0, 0, 527, 0, 529, 530, 531,
	532, 528, 533, 534, 535, 536, 537, 0, 538, 539,
	540, 0, 541, 542, 543, 544, 545, 674, 546, 0,
	547, 548, 554, 555, 556, 549, 550, 557, 558, 559,
	560, 561, 0, 563, 564, 562, 565, 566, 567, 0,
	568, 569, 551, 552, 570, 571, 0, 572, 573, 574,
	575, 576, 577, 578, 675, 0, 579, 0, 580, 581,
	582, 584, 553, 585, 590, 591, 676, 586, 587, 588,
	589, 677, 593, 594, 0, 595, 596, 0, 592, 583,
	0, 597, 598, 599, 600, 601, 602, 603, 364, 604,
	0, 605, 678, 679, 680, 681, 0, 614, 0, 606,
	607, 608, 682, 609, 683, 0, 610, 611, 612, 613,
	0, 615, 616, 0, 0, 617, 618, 619, 621, 622,
	620, 623, 0, 624, 0, 0, 625, 626, 627, 684,
	685, 686, 0, 629, 628, 630, 687, 265, 631, 274,
	0, 0, 0, 632, 633, 688, 634, 635, 636, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 637, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 638, 639, 0, 297, 640,
	298, 641, 0, 642, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 643, 644, 645, 0, 306, 307,
	646, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	647, 648, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 649,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	650, 651, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 652, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 653, 654,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 655, 0, 656, 391, 0, 392, 393, 394, 395,
	396, 657, 658, 659, 476, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 660, 661, 0, 662, 0,
	409, 410, 0, 663, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 664, 0, 425, 426, 0,
	0, 427, 0, 0, 0, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 466, 468, 469, 464, 465, 467, 470,
	471, 462, 463, 0, 472, 461, 0, 279, 0, 473,
	474, 0, 665, 475, 666, 477, 478, 0, 0, 479,
	0, 0, 0, 481, 482, 483, 0, 0, 484, 485,
	667, 0, 486, 0, 668, 487, 488, 480, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 0, 498, 499,
	669, 500, 501, 502, 670, 503, 504, 505, 671, 506,
	672, 507, 508, 0, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 517, 673, 518, 519, 521, 520, 522,
	0, 523, 0, 524, 525, 526, 0, 0, 0, 0,
	0, 527, 0, 529, 530, 531, 532, 528, 533, 534,
	535, 536, 537, 0, 538, 539, 540, 0, 541, 542,
	543, 544, 545, 674, 546, 0, 547, 548, 554, 555,
	556, 549, 550, 557, 558, 559, 560, 561, 0, 563,
	564, 562, 565, 566, 567, 0, 568, 569, 551, 552,
	570, 571, 0, 572, 573, 574, 575, 576, 577, 578,
	675, 0, 579, 0, 580, 581, 582, 584, 553, 585,
	590, 591, 676, 586, 587, 588, 589, 677, 593, 594,
	0, 595, 596, 0, 592, 583, 0, 597, 598, 599,
	600, 601, 602, 603, 364, 604, 0, 605, 678, 679,
	680, 681, 0, 614, 0, 606, 607, 608, 682, 609,
	683, 0, 610, 611, 612, 613, 0, 615, 616, 0,
	0, 617, 618, 619, 621, 622, 620, 623, 0, 624,
	0, 0, 625, 626, 627, 684, 685, 686, 274, 629,
	628, 630, 687, 0, 631, 0, 0, 0, 0, 632,
	633, 688, 634, 635, 636, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 638, 639, 0, 297, 640, 298,
	641, 0, 642, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 643, 644, 645, 0, 306, 307, 646,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 647,
	648, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 649, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 650,
	651, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 652, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 653, 654, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	655, 0, 656, 391, 0, 392, 393, 394, 395, 396,
	657, 658, 659, 476, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 660, 661, 0, 662, 0, 409,
	410, 0, 663, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 664, 0, 425, 426, 0, 0,
	427, 0, 0, 0, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 466, 468, 469, 464, 465, 467, 470, 471,
	462, 463, 0, 472, 461, 0, 279, 0, 473, 474,
	0, 665, 475, 666, 477, 478, 0, 0, 479, 0,
	0, 0, 481, 482, 483, 0, 0, 484, 485, 667,
	0, 486, 0, 668, 487, 488, 480, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 498, 499, 669,
	500, 501, 502, 670, 503, 504, 505, 671, 506, 672,
	507, 508, 0, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 517, 673, 518, 519, 521, 520, 522, 0,
	523, 0, 524, 525, 526, 0, 0, 0, 0, 0,
	527, 0, 529, 530, 531, 532, 528, 533, 534, 535,
	536, 537, 0, 538, 539, 540, 0, 541, 542, 543,
	544, 545, 674, 546, 0, 547, 548, 554, 555, 556,
	549, 550, 557, 558, 559, 560, 561, 0, 563, 564,
	562, 565, 566, 567, 0, 568, 569, 551, 552, 570,
	571, 0, 572, 573, 574, 575, 576, 577, 578, 675,
	0, 579, 0, 580, 581, 582, 584, 553, 585, 590,
	591, 676, 586, 587, 588, 589, 677, 593, 594, 0,
	595, 596, 0, 592, 583, 0, 597, 598, 599, 600,
	601, 602, 603, 364, 604, 0, 605, 678, 679, 680,
	681, 0, 614, 0, 606, 607, 608, 682, 609, 683,
	0, 610, 611, 612, 613, 0, 615, 616, 0, 0,
	617, 618, 619, 621, 622, 620, 623, 0, 624, 0,
	0, 625, 626, 627, 684, 685, 686, 274, 629, 628,
	630, 687, 0, 631, 0, 0, 0, 0, 632, 633,
	688, 634, 635, 636, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 638, 639, 0, 297, 640, 298, 641,
	0, 642, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 643, 644, 645, 0, 306, 307, 646, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 712, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 647, 648,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 649, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 650, 651,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 652, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 653, 654, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 713, 390, 655,
	0, 656, 391, 0, 392, 393, 394, 395, 396, 657,
	658, 659, 476, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 660, 661, 0, 662, 0, 409, 410,
	0, 663, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 664, 0, 425, 426, 0, 0, 427,
	0, 0, 0, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 466, 468, 469, 464, 465, 467, 470, 471, 462,
	463, 0, 472, 461, 0, 0, 0, 473, 474, 0,
	665, 475, 666, 477, 478, 0, 0, 479, 0, 0,
	0, 481, 482, 483, 0, 0, 484, 485, 667, 0,
	486, 0, 668, 487, 488, 480, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 0, 498, 499, 669, 500,
	501, 502, 670, 503, 504, 505, 671, 506, 672, 507,
	508, 0, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 517, 673, 518, 519, 521, 520, 522, 0, 523,
	0, 524, 525, 526, 0, 0, 0, 0, 0, 527,
	0, 529, 530, 531, 532, 528, 533, 534, 535, 536,
	537, 0, 538, 539, 540, 0, 541, 542, 543, 544,
	545, 674, 546, 0, 547, 548, 554, 555, 556, 549,
	550, 557, 558, 559, 560, 561, 714, 563, 564, 562,
	565, 566, 567, 0, 568, 569, 551, 552, 570, 571,
	0, 572, 573, 574, 575, 576, 577, 578, 675, 0,
	579, 0, 580, 581, 582, 584, 553, 585, 590, 591,
	676, 586, 587, 588, 589, 677, 593, 594, 0, 595,
	596, 0, 592, 583, 0, 597, 598, 599, 600, 601,
	602, 603, 364, 604, 0, 605, 678, 679, 680, 681,
	0, 614, 0, 606, 607, 608, 682, 609, 683, 0,
	610, 611, 612, 613, 0, 615, 616, 0, 0, 617,
	618, 619, 621, 622, 620, 623, 0, 624, 0, 0,
	625, 626, 627, 684, 685, 686, 274, 629, 628, 630,
	687, 0, 631, 0, 0, 0, 0, 632, 633, 688,
	634, 635, 636, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 638, 639, 0, 297, 640, 298, 641, 0,
	642, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 643, 644, 645, 0, 306, 307, 646, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 2383, 337, 0, 338, 340, 647, 648, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 649, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 650, 651, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	652, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 653, 654, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 655, 0,
	656, 391, 0, 392, 393, 394, 395, 396, 657, 658,
	659, 476, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 660, 661, 0, 662, 0, 409, 410, 0,
	663, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 664, 0, 425, 426, 0, 0, 427, 0,
	0, 0, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	0, 472, 461, 0, 279, 0, 473, 474, 0, 665,
	475, 666, 477, 478, 0, 0, 479, 0, 0, 0,
	481, 482, 483, 0, 0, 484, 485, 667, 0, 486,
	0, 668, 487, 488, 480, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 671, 506, 672, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 673, 518, 519, 521, 520, 522, 0, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	0, 538, 539, 540, 0, 541, 542, 543, 544, 545,
	674, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 0, 563, 564, 562, 565,
	566, 567, 0, 568, 569, 551, 552, 570, 571, 0,
	572, 573, 574, 575, 576, 577, 578, 675, 0, 579,
	0, 580, 581, 582, 584, 553, 585, 590, 591, 676,
	586, 587, 588, 589, 677, 593, 594, 0, 595, 596,
	0, 592, 583, 0, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 0, 605, 678, 679, 680, 681, 0,
	614, 0, 606, 607, 608, 682, 609, 683, 0, 610,
	611, 612, 613, 0, 615, 616, 0, 0, 617, 618,
	619, 621, 622, 620, 623, 0, 624, 0, 0, 625,
	626, 627, 684, 685, 686, 274, 629, 628, 630, 687,
	0, 631, 0, 0, 0, 0, 632, 633, 688, 634,
	635, 636, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 638, 639, 0, 297, 640, 298, 641, 0, 642,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	643, 644, 645, 0, 306, 307, 646, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 2381, 337, 0, 338, 340, 647, 648, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 649, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 650, 651, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 652,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 653, 654, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 655, 0, 656,
	391, 0, 392, 393, 394, 395, 396, 657, 658, 659,
	476, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 660, 661, 0, 662, 0, 409, 410, 0, 663,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 664, 0, 425, 426, 0, 0, 427, 0, 0,
	0, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 466,
	468, 469, 464, 465, 467, 470, 471, 462, 463, 0,
	472, 461, 0, 279, 0, 473, 474, 0, 665, 475,
	666, 477, 478, 0, 0, 479, 0, 0, 0, 481,
	482, 483, 0, 0, 484, 485, 667, 0, 486, 0,
	668, 487, 488, 480, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 498, 499, 669, 500, 501, 502,
	670, 503, 504, 505, 671, 506, 672, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 517,
	673, 518, 519, 521, 520, 522, 0, 523, 0, 524,
	525, 526, 0, 0, 0, 0, 0, 527, 0, 529,
	530, 531, 532, 528, 533, 534, 535, 536, 537, 0,
	538, 539, 540, 0, 541, 542, 543, 544, 545, 674,
	546, 0, 547, 548, 554, 555, 556, 549, 550, 557,
	558, 559, 560, 561, 0, 563, 564, 562, 565, 566,
	567, 0, 568, 569, 551, 552, 570, 571, 0, 572,
	573, 574, 575, 576, 577, 578, 675, 0, 579, 0,
	580, 581, 582, 584, 553, 585, 590, 591, 676, 586,
	587, 588, 589, 677, 593, 594, 0, 595, 596, 0,
	592, 583, 0, 597, 598, 599, 600, 601, 602, 603,
	364, 604, 0, 605, 678, 679, 680, 681, 0, 614,
	0, 606, 607, 608, 682, 609, 683, 0, 610, 611,
	612, 613, 0, 615, 616, 0, 0, 617, 618, 619,
	621, 622, 620, 623, 0, 624, 0, 0, 625, 626,
	627, 684, 685, 686, 274, 629, 628, 630, 687, 0,
	631, 0, 0, 0, 0, 632, 633, 688, 634, 635,
	636, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	638, 639, 0, 297, 640, 298, 641, 0, 642, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 643,
	644, 645, 0, 306, 307, 646, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	2379, 337, 0, 338, 340, 647, 648, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 649, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 650, 651, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 652, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 653, 654, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 655, 0, 656, 391,
	0, 392, 393, 394, 395, 396, 657, 658, 659, 476,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	660, 661, 0, 662, 0, 409, 410, 0, 663, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	664, 0, 425, 426, 0, 0, 427, 0, 0, 0,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 466, 468,
	469, 464, 465, 467, 470, 471, 462, 463, 0, 472,
	461, 0, 279, 0, 473, 474, 0, 665, 475, 666,
	477, 478, 0, 0, 479, 0, 0, 0, 481, 482,
	483, 0, 0, 484, 485, 667, 0, 486, 0, 668,
	487, 488, 480, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 498, 499, 669, 500, 501, 502, 670,
	503, 504, 505, 671, 506, 672, 507, 508, 0, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 517, 673,
	518, 519, 521, 520, 522, 0, 523, 0, 524, 525,
	526, 0, 0, 0, 0, 0, 527, 0, 529, 530,
	531, 532, 528, 533, 534, 535, 536, 537, 0, 538,
	539, 540, 0, 541, 542, 543, 544, 545, 674, 546,
	0, 547, 548, 554, 555, 556, 549, 550, 557, 558,
	559, 560, 561, 0, 563, 564, 562, 565, 566, 567,
	0, 568, 569, 551, 552, 570, 571, 0, 572, 573,
	574, 575, 576, 577, 578, 675, 0, 579, 0, 580,
	581, 582, 584, 553, 585, 590, 591, 676, 586, 587,
	588, 589, 677, 593, 594, 0, 595, 596, 0, 592,
	583, 0, 597, 598, 599, 600, 601, 602, 603, 364,
	604, 0, 605, 678, 679, 680, 681, 0, 614, 0,
	606, 607, 608, 682, 609, 683, 0, 610, 611, 612,
	613, 0, 615, 616, 0, 0, 617, 618, 619, 621,
	622, 620, 623, 0, 624, 0, 0, 625, 626, 627,
	684, 685, 686, 274, 629, 628, 630, 687, 0, 631,
	0, 0, 0, 0, 632, 633, 688, 634, 635, 636,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 638,
	639, 0, 297, 640, 298, 641, 0, 642, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 643, 644,
	645, 0, 306, 307, 646, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 647, 648, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 649, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 650, 651, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 652, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 653, 654, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 655, 0, 656, 391, 0,
	392, 393, 394, 395, 396, 2293, 658, 659, 476, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 660,
	661, 0, 662, 0, 409, 410, 0, 663, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 664,
	0, 425, 426, 0, 0, 427, 0, 0, 0, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 466, 468, 469,
	464, 465, 467, 470, 471, 462, 463, 0, 472, 461,
	0, 279, 0, 473, 474, 0, 665, 475, 666, 477,
	478, 0, 0, 479, 0, 0, 0, 481, 482, 483,
	0, 0, 484, 485, 667, 0, 486, 0, 668, 487,
	488, 480, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 498, 499, 669, 500, 501, 502, 670, 503,
	504, 505, 671, 506, 672, 507, 508, 0, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 517, 673, 518,
	519, 521, 520, 522, 0, 523, 0, 524, 525, 526,
	0, 0, 0, 0, 0, 527, 0, 529, 530, 531,
	532, 528, 533, 534, 535, 536, 537, 0, 538, 539,
	540, 0, 541, 542, 543, 544, 545, 674, 546, 0,
	547, 548, 554, 555, 556, 549, 550, 557, 558, 559,
	560, 561, 0, 563, 564, 562, 565, 566, 567, 0,
	568, 569, 551, 552, 570, 571, 0, 572, 573, 574,
	575, 576, 577, 578, 675, 0, 579, 0, 580, 581,
	582, 584, 553, 585, 590, 591, 676, 586, 587, 588,
	589, 677, 593, 594, 0, 595, 596, 0, 592, 583,
	0, 597, 598, 599, 600, 601, 602, 603, 364, 604,
	0, 605, 678, 679, 680, 681, 0, 614, 0, 606,
	607, 608, 682, 609, 683, 0, 610, 611, 612, 613,
	0, 615, 616, 0, 0, 617, 618, 619, 621, 622,
	620, 623, 0, 624, 0, 0, 625, 626, 627, 684,
	685, 686, 274, 629, 628, 630, 687, 0, 631, 0,
	0, 0, 0, 632, 633, 688, 634, 635, 636, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 638, 639,
	0, 297, 640, 298, 641, 0, 642, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 643, 644, 645,
	0, 306, 307, 646, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 647, 648, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 649, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 650, 651, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 652, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 653, 654, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 655, 0, 656, 391, 0, 392,
	393, 394, 395, 396, 2086, 658, 659, 476, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 660, 661,
	0, 662, 0, 409, 410, 0, 663, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 664, 0,
	425, 426, 0, 0, 427, 0, 0, 0, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 466, 468, 469, 464,
	465, 467, 470, 471, 462, 463, 0, 472, 461, 0,
	279, 0, 473, 474, 0, 665, 475, 666, 477, 478,
	0, 0, 479, 0, 0, 0, 481, 482, 483, 0,
	0, 484, 485, 667, 0, 486, 0, 668, 487, 488,
	480, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 498, 499, 669, 500, 501, 502, 670, 503, 504,
	505, 671, 506, 672, 507, 508, 0, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 517, 673, 518, 519,
	521, 520, 522, 0, 523, 0, 524, 525, 526, 0,
	0, 0, 0, 0, 527, 0, 529, 530, 531, 532,
	528, 533, 534, 535, 536, 537, 0, 538, 539, 540,
	0, 541, 542, 543, 544, 545, 674, 546, 0, 547,
	548, 554, 555, 556, 549, 550, 557, 558, 559, 560,
	561, 0, 563, 564, 562, 565, 566, 567, 0, 568,
	569, 551, 552, 570, 571, 0, 572, 573, 574, 575,
	576, 577, 578, 675, 0, 579, 0, 580, 581, 582,
	584, 553, 585, 590, 591, 676, 586, 587, 588, 589,
	677, 593, 594, 0, 595, 596, 0, 592, 583, 0,
	597, 598, 599, 600, 601, 602, 603, 364, 604, 0,
	605, 678, 679, 680, 681, 0, 614, 0, 606, 607,
	608, 682, 609, 683, 0, 610, 611, 612, 613, 0,
	615, 616, 0, 0, 617, 618, 619, 621, 622, 620,
	623, 0, 624, 0, 0, 625, 626, 627, 684, 685,
	686, 274, 629, 628, 630, 687, 0, 631, 0, 0,
	0, 0, 632, 633, 688, 634, 635, 636, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 637, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 638, 639, 0,
	297, 640, 298, 641, 0, 642, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 643, 644, 645, 0,
	306, 307, 646, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 647, 648, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 649, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 650, 651, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 652, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	653, 654, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 655, 0, 656, 391, 0, 392, 393,
	394, 395, 396, 2080, 658, 659, 476, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 660, 661, 0,
	662, 0, 409, 410, 0, 663, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 664, 0, 425,
	426, 0, 0, 427, 0, 0, 0, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 466, 468, 469, 464, 465,
	467, 470, 471, 462, 463, 0, 472, 461, 0, 279,
	0, 473, 474, 0, 665, 475, 666, 477, 478, 0,
	0, 479, 0, 0, 0, 481, 482, 483, 0, 0,
	484, 485, 667, 0, 486, 0, 668, 487, 488, 480,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 0,
	498, 499, 669, 500, 501, 502, 670, 503, 504, 505,
	671, 506, 672, 507, 508, 0, 509, 510, 0, 511,
	512, 513, 514, 515, 516, 517, 673, 518, 519, 521,
	520, 522, 0, 523, 0, 524, 525, 526, 0, 0,
	0, 0, 0, 527, 0, 529, 530, 531, 532, 528,
	533, 534, 535, 536, 537, 0, 538, 539, 540, 0,
	541, 542, 543, 544, 545, 674, 546, 0, 547, 548,
	554, 555, 556, 549, 550, 557, 558, 559, 560, 561,
	0, 563, 564, 562, 565, 566, 567, 0, 568, 569,
	551, 552, 570, 571, 0, 572, 573, 574, 575, 576,
	577, 578, 675, 0, 579, 0, 580, 581, 582, 584,
	553, 585, 590, 591, 676, 586, 587, 588, 589, 677,
	593, 594, 0, 595, 596, 0, 592, 583, 0, 597,
	598, 599, 600, 601, 602, 603, 364, 604, 0, 605,
	678, 679, 680, 681, 0, 614, 0, 606, 607, 608,
	682, 609, 683, 0, 610, 611, 612, 613, 0, 615,
	616, 0, 0, 617, 618, 619, 621, 622, 620, 623,
	0, 624, 0, 0, 625, 626, 627, 684, 685, 686,
	0, 629, 628, 630, 687, 899, 631, 274, 0, 0,
	0, 632, 633, 688, 634, 635, 636, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 638, 639, 0, 297, 640, 298, 641,
	0, 642, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 643, 644, 645, 0, 306, 307, 646, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 647, 648,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 649, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 650, 651,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 652, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 653, 654, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 655,
	0, 656, 391, 0, 392, 393, 394, 395, 396, 657,
	658, 659, 476, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 660, 661, 0, 662, 898, 409, 410,
	0, 663, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 664, 0, 425, 426, 0, 0, 427,
	0, 0, 0, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 466, 468, 469, 464, 465, 467, 470, 471, 462,
	463, 0, 472, 461, 0, 0, 0, 473, 474, 0,
	665, 475, 666, 477, 478, 0, 0, 479, 0, 0,
	0, 481, 482, 483, 0, 0, 484, 485, 667, 0,
	486, 0, 668, 487, 488, 480, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 0, 498, 499, 669, 500,
	501, 502, 670, 503, 504, 505, 671, 506, 672, 507,
	508, 0, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 517, 673, 518, 519, 521, 520, 522, 0, 523,
	0, 524, 525, 526, 0, 0, 0, 0, 0, 527,
	0, 529, 530, 531, 532, 528, 533, 534, 535, 536,
	537, 0, 538, 539, 540, 0, 541, 542, 543, 544,
	545, 674, 546, 0, 547, 548, 554, 555, 556, 549,
	550, 557, 558, 559, 560, 561, 0, 563, 564, 562,
	565, 566, 567, 0, 568, 569, 551, 552, 570, 571,
	0, 572, 573, 574, 575, 576, 577, 578, 675, 0,
	579, 0, 580, 581, 582, 584, 553, 585, 590, 591,
	676, 586, 587, 588, 589, 677, 593, 594, 0, 595,
	596, 0, 592, 583, 897, 597, 598, 599, 600, 601,
	602, 603, 364, 604, 0, 605, 678, 679, 680, 681,
	0, 614, 0, 606, 607, 608, 682, 609, 683, 0,
	610, 611, 612, 613, 0, 615, 616, 0, 0, 617,
	618, 619, 621, 622, 620, 623, 0, 624, 0, 0,
	625, 626, 627, 684, 685, 686, 274, 629, 628, 630,
	687, 0, 631, 0, 0, 0, 0, 632, 633, 688,
	634, 635, 636, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 638, 639, 0, 297, 640, 298, 641, 0,
	642, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 643, 644, 645, 0, 306, 307, 646, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 647, 648, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 649, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 650, 651, 370,
	0, 3116, 0, 0, 0, 0, 0, 371, 372, 373,
	652, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 653, 654, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 655, 0,
	656, 391, 0, 392, 393, 394, 395, 396, 657, 658,
	659, 476, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 660, 661, 0, 662, 0, 409, 410, 0,
	663, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 664, 0, 425, 426, 0, 0, 427, 0,
	0, 0, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	0, 472, 461, 0, 0, 0, 473, 474, 0, 665,
	475, 666, 477, 478, 0, 0, 479, 0, 0, 0,
	481, 482, 483, 0, 0, 484, 485, 667, 0, 486,
	0, 668, 487, 488, 480, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 671, 506, 672, 507, 508,
	4276, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 673, 518, 519, 521, 520, 522, 0, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	0, 538, 539, 540, 0, 541, 542, 543, 544, 545,
	674, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 0, 563, 564, 562, 565,
	566, 567, 0, 568, 569, 551, 552, 570, 571, 0,
	572, 573, 574, 575, 576, 577, 578, 675, 0, 579,
	0, 580, 581, 582, 584, 553, 585, 590, 591, 676,
	586, 587, 588, 589, 677, 593, 594, 0, 595, 596,
	0, 592, 583, 0, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 0, 605, 678, 679, 680, 681, 0,
	614, 0, 606, 607, 608, 682, 609, 683, 0, 610,
	611, 612, 613, 0, 615, 616, 0, 0, 617, 618,
	619, 621, 622, 620, 623, 0, 624, 0, 0, 625,
	626, 627, 684, 685, 686, 0, 629, 628, 630, 687,
	1360, 631, 274, 0, 0, 0, 632, 633, 688, 634,
	635, 636, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 0, 289,
	290, 1363, 291, 292, 293, 294, 295, 296, 638, 639,
	0, 297, 640, 298, 641, 0, 642, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 643, 644, 1361,
	0, 306, 307, 646, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 647, 648, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 649, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 650, 651, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 652, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 653, 654, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 655, 0, 656, 391, 0, 392,
	393, 394, 395, 396, 657, 658, 659, 476, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 660, 661,
	0, 662, 0, 409, 410, 0, 663, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 664, 0,
	425, 426, 0, 0, 427, 0, 0, 0, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 780, 0, 458, 459, 460, 466, 468, 469, 464,
	465, 467, 470, 471, 462, 463, 0, 472, 461, 0,
	0, 0, 473, 474, 0, 665, 475, 666, 477, 478,
	0, 0, 479, 0, 0, 0, 481, 482, 483, 0,
	0, 484, 485, 667, 0, 486, 0, 668, 487, 488,
	480, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 498, 499, 669, 500, 501, 502, 670, 503, 504,
	505, 671, 506, 672, 507, 508, 0, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 517, 673, 518, 519,
	521, 520, 522, 0, 523, 0, 524, 525, 526, 0,
	0, 0, 0, 0, 527, 0, 529, 530, 531, 532,
	528, 533, 534, 535, 536, 537, 0, 538, 539, 540,
	0, 779, 542, 543, 544, 545, 674, 546, 0, 547,
	548, 554, 555, 556, 549, 550, 778, 558, 559, 560,
	561, 0, 563, 564, 562, 565, 1364, 567, 0, 568,
	569, 551, 552, 570, 571, 0, 572, 573, 574, 575,
	576, 577, 578, 675, 0, 579, 0, 580, 581, 582,
	584, 553, 585, 590, 591, 676, 586, 587, 588, 589,
	677, 593, 594, 0, 595, 596, 0, 592, 583, 0,
	597, 598, 599, 600, 601, 602, 603, 364, 604, 0,
	605, 776, 679, 680, 681, 0, 614, 0, 606, 607,
	608, 682, 609, 683, 0, 610, 611, 612, 613, 0,
	615, 616, 0, 0, 617, 618, 619, 621, 622, 620,
	623, 0, 624, 0, 0, 625, 626, 627, 684, 685,
	686, 0, 629, 628, 630, 687, 1360, 631, 274, 0,
	0, 0, 632, 633, 688, 634, 635, 636, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 0, 289, 290, 1363, 291, 292,
	293, 294, 295, 296, 638, 639, 0, 297, 640, 298,
	641, 0, 642, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 643, 644, 1361, 0, 306, 307, 646,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 647,
	648, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 649, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 650,
	651, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 652, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 653, 654, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	655, 0, 656, 391, 0, 392, 393, 394, 395, 396,
	657, 658, 659, 476, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 660, 661, 0, 662, 0, 409,
	410, 0, 663, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 664, 0, 425, 426, 0, 0,
	427, 0, 0, 0, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 780, 0, 458,
	459, 460, 466, 468, 469, 464, 465, 467, 470, 471,
	462, 463, 0, 472, 461, 0, 0, 0, 473, 474,
	0, 665, 475, 666, 477, 478, 0, 0, 479, 0,
	0, 0, 481, 482, 483, 0, 0, 484, 485, 667,
	0, 486, 0, 668, 487, 488, 480, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 498, 499, 669,
	500, 501, 502, 670, 503, 504, 505, 671, 506, 672,
	507, 508, 0, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 517, 673, 518, 519, 521, 520, 522, 0,
	523, 0, 524, 525, 526, 0, 0, 0, 0, 0,
	527, 0, 529, 530, 531, 532, 528, 533, 534, 535,
	536, 537, 0, 538, 539, 540, 0, 779, 542, 543,
	544, 545, 674, 546, 0, 547, 548, 554, 555, 556,
	549, 550, 778, 558, 559, 560, 561, 0, 563, 564,
	562, 565, 1364, 567, 0, 568, 569, 551, 552, 570,
	571, 0, 572, 573, 574, 575, 576, 577, 578, 675,
	0, 579, 0, 580, 581, 582, 584, 553, 585, 590,
	591, 676, 586, 587, 588, 589, 677, 593, 594, 0,
	595, 596, 0, 592, 583, 0, 597, 598, 599, 600,
	601, 602, 603, 364, 604, 0, 605, 776, 679, 680,
	681, 0, 614, 0, 606, 1362, 608, 682, 609, 683,
	0, 610, 611, 612, 613, 0, 615, 616, 0, 0,
	617, 618, 619, 621, 622, 620, 623, 0, 624, 0,
	0, 625, 626, 627, 684, 685, 686, 0, 629, 628,
	630, 687, 699, 631, 274, 0, 0, 0, 632, 633,
	688, 634, 635, 636, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 698, 287,
	288, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	638, 639, 0, 297, 640, 298, 641, 0, 642, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 643,
	644, 645, 0, 306, 307, 646, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 647, 648, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 649, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 650, 651, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 652, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 653, 654, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 655, 0, 656, 391,
	0, 392, 393, 394, 395, 396, 657, 658, 659, 476,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	660, 661, 0, 662, 0, 409, 410, 0, 663, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	664, 0, 425, 426, 0, 0, 427, 0, 0, 0,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 466, 468,
	469, 464, 465, 467, 470, 471, 462, 463, 0, 472,
	461, 0, 0, 0, 473, 474, 0, 665, 475, 666,
	477, 478, 0, 0, 479, 0, 0, 0, 481, 482,
	483, 0, 0, 484, 485, 667, 0, 486, 0, 668,
	487, 488, 480, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 498, 499, 669, 500, 501, 502, 670,
	503, 504, 505, 671, 506, 672, 697, 508, 0, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 517, 673,
	518, 519, 521, 520, 522, 0, 523, 0, 524, 525,
	526, 0, 0, 0, 0, 0, 527, 0, 529, 530,
	531, 532, 528, 533, 534, 535, 536, 537, 0, 538,
	539, 540, 0, 541, 542, 543, 544, 545, 674, 546,
	0, 547, 548, 554, 555, 556, 549, 550, 557, 558,
	559, 560, 561, 0, 563, 564, 562, 565, 566, 567,
	0, 568, 569, 551, 552, 570, 571, 0, 572, 573,
	574, 575, 576, 577, 578, 675, 0, 579, 0, 580,
	581, 582, 584, 553, 585, 590, 591, 676, 586, 587,
	588, 589, 677, 593, 594, 0, 595, 596, 0, 592,
	583, 0, 597, 598, 599, 600, 601, 602, 603, 364,
	604, 0, 605, 678, 679, 680, 681, 0, 614, 0,
	606, 607, 608, 682, 609, 683, 0, 610, 611, 612,
	613, 0, 615, 616, 0, 0, 617, 618, 619, 621,
	622, 620, 623, 0, 624, 0, 0, 625, 626, 627,
	684, 685, 686, 0, 629, 628, 630, 687, 0, 631,
	274, 3103, 0, 0, 632, 633, 688, 634, 635, 636,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 637, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 638, 639, 0, 297,
	640, 298, 641, 0, 642, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 643, 644, 645, 0, 306,
	307, 646, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 647, 648, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	649, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 650, 651, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 652, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 653,
	654, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 655, 0, 656, 391, 0, 392, 393, 394,
	395, 396, 657, 658, 659, 476, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 660, 661, 0, 662,
	0, 409, 410, 0, 663, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 664, 0, 425, 426,
	0, 0, 427, 0, 0, 0, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 466, 468, 469, 464, 465, 467,
	470, 471, 462, 463, 0, 472, 461, 0, 0, 0,
	473, 474, 0, 665, 475, 666, 477, 478, 0, 0,
	479, 0, 0, 0, 481, 482, 483, 0, 0, 484,
	485, 667, 0, 486, 0, 668, 487, 488, 480, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 498,
	499, 669, 500, 501, 502, 670, 503, 504, 505, 671,
	506, 672, 507, 508, 0, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 517, 673, 518, 519, 521, 520,
	522, 0, 523, 0, 524, 525, 526, 0, 0, 0,
	0, 0, 527, 0, 529, 530, 531, 532, 528, 533,
	534, 535, 536, 537, 0, 538, 539, 540, 0, 541,
	542, 543, 544, 545, 674, 546, 0, 547, 548, 554,
	555, 556, 549, 550, 557, 558, 559, 560, 561, 0,
	563, 564, 562, 565, 566, 567, 0, 568, 569, 551,
	552, 570, 571, 0, 572, 573, 574, 575, 576, 577,
	578, 675, 0, 579, 0, 580, 581, 582, 584, 553,
	585, 590, 591, 676, 586, 587, 588, 589, 677, 593,
	594, 0, 595, 596, 0, 592, 583, 0, 597, 598,
	599, 600, 601, 602, 603, 364, 604, 0, 605, 678,
	679, 680, 681, 0, 614, 0, 606, 607, 608, 682,
	609, 683, 0, 610, 611, 612, 613, 0, 615, 616,
	0, 0, 617, 618, 619, 621, 622, 620, 623, 0,
	624, 0, 0, 625, 626, 627, 684, 685, 686, 0,
	629, 628, 630, 687, 0, 631, 274, 4286, 0, 0,
	632, 633, 688, 634, 635, 636, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 638, 639, 0, 297, 640, 298, 641, 0,
	642, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 643, 644, 645, 0, 306, 307, 646, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 647, 648, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 649, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 650, 651, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	652, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 653, 654, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 655, 0,
	656, 391, 0, 392, 393, 394, 395, 396, 657, 658,
	659, 476, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 660, 661, 0, 662, 0, 409, 410, 0,
	663, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 664, 0, 425, 426, 0, 0, 427, 0,
	0, 0, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	0, 472, 461, 0, 0, 0, 473, 474, 0, 665,
	475, 666, 477, 478, 0, 0, 479, 0, 0, 0,
	481, 482, 483, 0, 0, 484, 485, 667, 0, 486,
	0, 668, 487, 488, 480, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 671, 506, 672, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 673, 518, 519, 521, 520, 522, 0, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	0, 538, 539, 540, 0, 541, 542, 543, 544, 545,
	674, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 0, 563, 564, 562, 565,
	566, 567, 0, 568, 569, 551, 552, 570, 571, 0,
	572, 573, 574, 575, 576, 577, 578, 675, 0, 579,
	0, 580, 581, 582, 584, 553, 585, 590, 591, 676,
	586, 587, 588, 589, 677, 593, 594, 0, 595, 596,
	0, 592, 583, 0, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 0, 605, 678, 679, 680, 681, 0,
	614, 0, 606, 607, 608, 682, 609, 683, 0, 610,
	611, 612, 613, 0, 615, 616, 0, 0, 617, 618,
	619, 621, 622, 620, 623, 0, 624, 0, 0, 625,
	626, 627, 684, 685, 686, 274, 629, 628, 630, 687,
	0, 631, 0, 0, 0, 0, 632, 633, 688, 634,
	635, 636, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 638, 639, 0, 297, 640, 298, 641, 0, 642,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	643, 644, 645, 0, 306, 307, 646, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 647, 648, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 649, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 650, 651, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 652,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 653, 654, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 655, 0, 656,
	391, 0, 392, 393, 394, 395, 396, 657, 658, 659,
	476, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 660, 661, 0, 662, 0, 409, 410, 0, 663,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 664, 0, 425, 426, 0, 0, 427, 0, 0,
	0, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 466,
	468, 469, 464, 465, 467, 470, 471, 462, 463, 0,
	472, 461, 0, 0, 0, 473, 474, 0, 665, 475,
	666, 477, 478, 0, 0, 479, 0, 0, 0, 481,
	482, 483, 0, 0, 484, 485, 667, 0, 486, 0,
	668, 487, 488, 480, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 498, 499, 669, 500, 501, 502,
	670, 503, 504, 505, 671, 506, 672, 507, 508, 4570,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 517,
	673, 518, 519, 521, 520, 522, 0, 523, 0, 524,
	525, 526, 0, 0, 0, 0, 0, 527, 0, 529,
	530, 531, 532, 528, 533, 534, 535, 536, 537, 0,
	538, 539, 540, 0, 541, 542, 543, 544, 545, 674,
	546, 0, 547, 548, 554, 555, 556, 549, 550, 557,
	558, 559, 560, 561, 0, 563, 564, 562, 565, 566,
	567, 0, 568, 569, 551, 552, 570, 571, 0, 572,
	573, 574, 575, 576, 577, 578, 675, 0, 579, 0,
	580, 581, 582, 584, 553, 585, 590, 591, 676, 586,
	587, 588, 589, 677, 593, 594, 0, 595, 596, 0,
	592, 583, 0, 597, 598, 599, 600, 601, 602, 603,
	364, 604, 0, 605, 678, 679, 680, 681, 0, 614,
	0, 606, 607, 608, 682, 609, 683, 0, 610, 611,
	612, 613, 0, 615, 616, 0, 0, 617, 618, 619,
	621, 622, 620, 623, 0, 624, 0, 0, 625, 626,
	627, 684, 685, 686, 274, 629, 628, 630, 687, 0,
	631, 0, 0, 0, 0, 632, 633, 688, 634, 635,
	636, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	638, 639, 0, 297, 640, 298, 641, 0, 642, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 643,
	644, 645, 0, 306, 307, 646, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 647, 648, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 649, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 650, 651, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 652, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 653, 654, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 655, 0, 656, 391,
	0, 392, 393, 394, 395, 396, 657, 658, 659, 476,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	660, 661, 0, 662, 0, 409, 410, 0, 663, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	664, 0, 425, 426, 0, 0, 427, 0, 0, 0,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 466, 468,
	469, 464, 465, 467, 470, 471, 462, 463, 0, 472,
	461, 0, 0, 0, 473, 474, 0, 665, 475, 666,
	477, 478, 0, 0, 479, 0, 0, 0, 481, 482,
	483, 0, 0, 484, 485, 667, 0, 486, 0, 668,
	487, 488, 480, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 498, 499, 669, 500, 501, 502, 670,
	503, 504, 505, 671, 506, 672, 507, 508, 4172, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 517, 673,
	518, 519, 521, 520, 522, 0, 523, 0, 524, 525,
	526, 0, 0, 0, 0, 0, 527, 0, 529, 530,
	531, 532, 528, 533, 534, 535, 536, 537, 0, 538,
	539, 540, 0, 541, 542, 543, 544, 545, 674, 546,
	0, 547, 548, 554, 555, 556, 549, 550, 557, 558,
	559, 560, 561, 0, 563, 564, 562, 565, 566, 567,
	0, 568, 569, 551, 552, 570, 571, 0, 572, 573,
	574, 575, 576, 577, 578, 675, 0, 579, 0, 580,
	581, 582, 584, 553, 585, 590, 591, 676, 586, 587,
	588, 589, 677, 593, 594, 0, 595, 596, 0, 592,
	583, 0, 597, 598, 599, 600, 601, 602, 603, 364,
	604, 0, 605, 678, 679, 680, 681, 0, 614, 0,
	606, 607, 608, 682, 609, 683, 0, 610, 611, 612,
	613, 0, 615, 616, 0, 0, 617, 618, 619, 621,
	622, 620, 623, 0, 624, 0, 0, 625, 626, 627,
	684, 685, 686, 274, 629, 628, 630, 687, 0, 631,
	0, 0, 0, 0, 632, 633, 688, 634, 635, 636,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 638,
	639, 0, 297, 640, 298, 641, 0, 642, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 643, 644,
	645, 0, 306, 307, 646, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 647, 648, 3933, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 649, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 650, 651, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 652, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 653, 654, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 655, 0, 656, 391, 0,
	392, 393, 394, 395, 396, 657, 658, 659, 476, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 660,
	661, 0, 662, 0, 409, 410, 0, 663, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 664,
	0, 425, 426, 0, 0, 427, 0, 0, 0, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 466, 468, 469,
	464, 465, 467, 470, 471, 462, 463, 0, 472, 461,
	0, 0, 0, 473, 474, 0, 665, 475, 666, 477,
	478, 0, 0, 479, 0, 0, 0, 481, 482, 483,
	0, 0, 484, 485, 667, 0, 486, 0, 668, 487,
	488, 480, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 498, 499, 669, 500, 501, 502, 670, 503,
	504, 505, 671, 506, 672, 507, 508, 0, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 517, 673, 518,
	519, 521, 520, 522, 0, 523, 0, 524, 525, 526,
	0, 0, 0, 0, 0, 527, 0, 529, 530, 531,
	532, 528, 533, 534, 535, 536, 537, 0, 538, 539,
	540, 0, 541, 542, 543, 544, 545, 674, 546, 0,
	547, 548, 554, 555, 556, 549, 550, 557, 558, 559,
	560, 561, 0, 563, 564, 562, 565, 566, 567, 0,
	568, 569, 551, 552, 570, 571, 0, 572, 573, 574,
	575, 576, 577, 578, 675, 0, 579, 0, 580, 581,
	582, 584, 553, 585, 590, 591, 676, 586, 587, 588,
	589, 677, 593, 594, 0, 595, 596, 0, 592, 583,
	0, 597, 598, 599, 600, 601, 602, 603, 364, 604,
	0, 605, 678, 679, 680, 681, 0, 614, 0, 606,
	607, 608, 682, 609, 683, 0, 610, 611, 612, 613,
	0, 615, 616, 0, 0, 617, 618, 619, 621, 622,
	620, 623, 0, 624, 0, 0, 625, 626, 627, 684,
	685, 686, 274, 629, 628, 630, 687, 0, 631, 0,
	0, 0, 0, 632, 633, 688, 634, 635, 636, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 637, 0, 2776, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 638, 639,
	0, 297, 640, 298, 641, 0, 642, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 643, 644, 645,
	0, 306, 307, 646, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 647, 648, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 649, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 650, 651, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 652, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 653, 654, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 655, 0, 656, 391, 0, 392,
	393, 394, 395, 396, 657, 658, 659, 476, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 660, 661,
	0, 662, 0, 409, 410, 0, 663, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 664, 0,
	425, 426, 0, 0, 427, 0, 0, 0, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 466, 468, 469, 464,
	465, 467, 470, 471, 462, 463, 0, 472, 461, 0,
	0, 0, 473, 474, 0, 665, 475, 666, 477, 478,
	0, 0, 479, 0, 0, 0, 481, 482, 483, 0,
	0, 484, 485, 667, 0, 486, 0, 668, 487, 488,
	480, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 498, 499, 669, 500, 501, 502, 670, 503, 504,
	505, 671, 506, 672, 507, 508, 0, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 517, 673, 518, 519,
	521, 520, 522, 0, 523, 0, 524, 525, 526, 0,
	0, 0, 0, 0, 527, 0, 529, 530, 531, 532,
	528, 533, 534, 535, 536, 537, 0, 538, 539, 540,
	0, 541, 542, 543, 544, 545, 674, 546, 0, 547,
	548, 554, 555, 556, 549, 550, 557, 558, 559, 560,
	561, 0, 563, 564, 562, 565, 566, 567, 0, 568,
	569, 551, 552, 570, 571, 0, 572, 573, 574, 575,
	576, 577, 578, 675, 0, 579, 0, 580, 581, 582,
	584, 553, 585, 590, 591, 676, 586, 587, 588, 589,
	677, 593, 594, 0, 595, 596, 0, 592, 583, 0,
	597, 598, 599, 600, 601, 602, 603, 364, 604, 0,
	605, 678, 679, 680, 681, 0, 614, 0, 606, 607,
	608, 682, 609, 683, 0, 610, 611, 612, 613, 0,
	615, 616, 0, 0, 617, 618, 619, 621, 622, 620,
	623, 0, 624, 0, 0, 625, 626, 627, 684, 685,
	686, 0, 629, 628, 630, 687, 0, 631, 274, 3103,
	0, 0, 632, 633, 688, 634, 635, 636, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 638, 639, 0, 297, 640, 298,
	641, 0, 642, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 643, 644, 645, 0, 306, 307, 646,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 647,
	648, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 649, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 650,
	651, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 652, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 653, 654, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	655, 0, 656, 391, 0, 392, 393, 394, 395, 396,
	657, 658, 659, 476, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 660, 661, 0, 662, 0, 409,
	410, 0, 663, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 664, 0, 425, 426, 0, 0,
	427, 0, 0, 0, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 466, 468, 469, 464, 465, 467, 470, 471,
	462, 463, 0, 472, 461, 0, 0, 0, 473, 474,
	0, 665, 475, 666, 477, 478, 0, 0, 479, 0,
	0, 0, 481, 482, 3100, 0, 0, 484, 485, 667,
	0, 486, 0, 668, 487, 488, 480, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 498, 499, 669,
	500, 501, 502, 670, 503, 504, 505, 671, 506, 672,
	507, 508, 0, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 517, 673, 518, 519, 521, 520, 522, 0,
	523, 0, 524, 525, 526, 0, 0, 0, 0, 0,
	527, 0, 529, 530, 531, 532, 528, 533, 534, 535,
	536, 537, 0, 538, 539, 540, 0, 541, 542, 543,
	544, 545, 674, 546, 0, 547, 548, 554, 555, 556,
	549, 550, 557, 558, 559, 560, 561, 0, 563, 564,
	562, 565, 566, 567, 0, 568, 569, 551, 552, 570,
	571, 0, 572, 573, 574, 575, 576, 577, 578, 675,
	0, 579, 0, 580, 581, 582, 584, 553, 585, 590,
	591, 676, 586, 587, 588, 589, 677, 593, 594, 0,
	595, 596, 0, 592, 583, 0, 597, 598, 599, 600,
	601, 602, 603, 364, 604, 0, 605, 678, 679, 680,
	681, 0, 614, 0, 606, 607, 608, 682, 609, 683,
	0, 610, 611, 612, 613, 0, 615, 616, 0, 0,
	617, 618, 619, 621, 622, 620, 623, 0, 624, 0,
	0, 625, 626, 627, 684, 685, 686, 274, 629, 628,
	630, 687, 0, 631, 0, 0, 0, 0, 632, 633,
	688, 634, 635, 636, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 638, 639, 0, 297, 640, 298, 641,
	0, 642, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 643, 644, 645, 0, 306, 307, 646, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 647, 648,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 649, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 650, 651,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 652, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 653, 654, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 655,
	0, 656, 391, 0, 392, 393, 394, 395, 396, 657,
	658, 659, 476, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 660, 661, 0, 662, 0, 409, 410,
	0, 663, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 664, 0, 425, 426, 0, 0, 427,
	0, 0, 0, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 466, 468, 469, 464, 465, 467, 470, 471, 462,
	463, 0, 472, 461, 0, 0, 0, 473, 474, 0,
	665, 475, 666, 477, 478, 0, 0, 479, 0, 0,
	0, 481, 482, 483, 0, 0, 484, 485, 667, 0,
	486, 0, 668, 487, 488, 480, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 0, 498, 499, 669, 500,
	501, 502, 670, 503, 504, 505, 671, 506, 672, 507,
	508, 2204, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 517, 673, 518, 519, 521, 520, 522, 0, 523,
	0, 524, 525, 526, 0, 0, 0, 0, 0, 527,
	0, 529, 530, 531, 532, 528, 533, 534, 535, 536,
	537, 0, 538, 539, 540, 0, 779, 542, 543, 544,
	545, 674, 546, 0, 547, 548, 554, 555, 556, 549,
	550, 778, 558, 559, 560, 561, 0, 563, 564, 562,
	565, 566, 567, 0, 568, 569, 551, 552, 570, 571,
	0, 572, 573, 574, 575, 576, 577, 578, 675, 0,
	579, 0, 580, 581, 582, 584, 553, 585, 590, 591,
	676, 586, 587, 588, 589, 677, 593, 594, 0, 595,
	596, 0, 592, 583, 0, 597, 598, 599, 600, 601,
	602, 603, 364, 604, 0, 605, 776, 679, 680, 681,
	0, 614, 0, 606, 607, 608, 682, 609, 683, 0,
	610, 611, 612, 613, 0, 615, 616, 0, 0, 617,
	618, 619, 621, 622, 620, 623, 0, 624, 0, 0,
	625, 626, 627, 684, 685, 686, 274, 629, 628, 630,
	687, 0, 631, 0, 0, 0, 0, 632, 633, 688,
	634, 635, 636, 280, 282, 281, 283, 284, 285, 286,
	2353, 287, 288, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 638, 639, 0, 297, 640, 298, 641, 0,
	642, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 643, 644, 645, 0, 306, 307, 646, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 647, 648, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 649, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 650, 651, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	652, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 653, 654, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 655, 0,
	656, 391, 0, 392, 393, 394, 395, 396, 657, 658,
	659, 476, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 660, 661, 0, 662, 0, 409, 410, 0,
	663, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 664, 0, 425, 426, 0, 0, 427, 0,
	0, 0, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	0, 472, 461, 0, 0, 0, 473, 474, 0, 665,
	475, 666, 477, 478, 0, 0, 479, 0, 0, 0,
	481, 482, 483, 0, 0, 484, 485, 667, 0, 486,
	0, 668, 487, 488, 480, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 671, 506, 672, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 673, 518, 519, 521, 520, 522, 0, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	0, 538, 539, 540, 0, 541, 542, 543, 544, 545,
	674, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 0, 563, 564, 562, 565,
	566, 567, 0, 568, 569, 551, 552, 570, 571, 0,
	572, 573, 574, 575, 576, 577, 578, 675, 0, 579,
	0, 580, 581, 582, 584, 553, 585, 590, 591, 676,
	586, 587, 588, 589, 677, 593, 594, 0, 595, 596,
	0, 592, 583, 0, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 0, 605, 678, 679, 680, 681, 0,
	614, 0, 606, 607, 608, 682, 609, 683, 0, 610,
	611, 612, 613, 0, 615, 616, 0, 0, 617, 618,
	619, 621, 622, 620, 623, 0, 624, 0, 0, 625,
	626, 627, 684, 685, 686, 0, 629, 628, 630, 687,
	2341, 631, 274, 0, 0, 0, 632, 633, 688, 634,
	635, 636, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 638, 639,
	0, 297, 640, 298, 641, 0, 642, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 643, 644, 645,
	0, 306, 307, 646, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 647, 648, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 649, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 650, 651, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 652, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 653, 654, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 655, 0, 656, 391, 0, 392,
	393, 394, 395, 396, 657, 658, 659, 476, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 660, 661,
	0, 662, 0, 409, 410, 0, 663, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 664, 0,
	425, 426, 0, 0, 427, 0, 0, 0, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 466, 468, 469, 464,
	465, 467, 470, 471, 462, 463, 0, 472, 461, 0,
	0, 0, 473, 474, 0, 665, 475, 666, 477, 478,
	0, 0, 479, 0, 0, 0, 481, 482, 483, 0,
	0, 484, 485, 667, 0, 486, 0, 668, 487, 488,
	480, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 498, 499, 669, 500, 501, 502, 670, 503, 504,
	505, 671, 506, 672, 507, 508, 0, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 517, 673, 518, 519,
	521, 520, 522, 0, 523, 0, 524, 525, 526, 0,
	0, 0, 0, 0, 527, 0, 529, 530, 531, 532,
	528, 533, 534, 535, 536, 537, 0, 538, 539, 540,
	0, 541, 542, 543, 544, 545, 674, 546, 0, 547,
	548, 554, 555, 556, 549, 550, 557, 558, 559, 560,
	561, 0, 563, 564, 562, 565, 566, 567, 0, 568,
	569, 551, 552, 570, 571, 0, 572, 573, 574, 575,
	576, 577, 578, 675, 0, 579, 0, 580, 581, 582,
	584, 553, 585, 590, 591, 676, 586, 587, 588, 589,
	677, 593, 594, 0, 595, 596, 0, 592, 583, 0,
	597, 598, 599, 600, 601, 602, 603, 364, 604, 0,
	605, 678, 679, 680, 681, 0, 614, 0, 606, 607,
	608, 682, 609, 683, 0, 610, 611, 612, 613, 0,
	615, 616, 0, 0, 617, 618, 619, 621, 622, 620,
	623, 0, 624, 0, 0, 625, 626, 627, 684, 685,
	686, 0, 629, 628, 630, 687, 2100, 631, 274, 0,
	0, 0, 632, 633, 688, 634, 635, 636, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 638, 639, 0, 297, 640, 298,
	641, 0, 642, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 643, 644, 645, 0, 306, 307, 646,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 647,
	648, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 649, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 650,
	651, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 652, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 653, 654, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	655, 0, 656, 391, 0, 392, 393, 394, 395, 396,
	657, 658, 659, 476, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 660, 661, 0, 662, 0, 409,
	410, 0, 663, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 664, 0, 425, 426, 0, 0,
	427, 0, 0, 0, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 466, 468, 469, 464, 465, 467, 470, 471,
	462, 463, 0, 472, 461, 0, 0, 0, 473, 474,
	0, 665, 475, 666, 477, 478, 0, 0, 479, 0,
	0, 0, 481, 482, 483, 0, 0, 484, 485, 667,
	0, 486, 0, 668, 487, 488, 480, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 498, 499, 669,
	500, 501, 502, 670, 503, 504, 505, 671, 506, 672,
	507, 508, 0, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 517, 673, 518, 519, 521, 520, 522, 0,
	523, 0, 524, 525, 526, 0, 0, 0, 0, 0,
	527, 0, 529, 530, 531, 532, 528, 533, 534, 535,
	536, 537, 0, 538, 539, 540, 0, 541, 542, 543,
	544, 545, 674, 546, 0, 547, 548, 554, 555, 556,
	549, 550, 557, 558, 559, 560, 561, 0, 563, 564,
	562, 565, 566, 567, 0, 568, 569, 551, 552, 570,
	571, 0, 572, 573, 574, 575, 576, 577, 578, 675,
	0, 579, 0, 580, 581, 582, 584, 553, 585, 590,
	591, 676, 586, 587, 588, 589, 677, 593, 594, 0,
	595, 596, 0, 592, 583, 0, 597, 598, 599, 600,
	601, 602, 603, 364, 604, 0, 605, 678, 679, 680,
	681, 0, 614, 0, 606, 607, 608, 682, 609, 683,
	0, 610, 611, 612, 613, 0, 615, 616, 0, 0,
	617, 618, 619, 621, 622, 620, 623, 0, 624, 0,
	0, 625, 626, 627, 684, 685, 686, 0, 629, 628,
	630, 687, 2067, 631, 274, 0, 0, 0, 632, 633,
	688, 634, 635, 636, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	638, 639, 0, 297, 640, 298, 641, 0, 642, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 643,
	644, 645, 0, 306, 307, 646, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 647, 648, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 649, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 650, 651, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 652, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 653, 654, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 655, 0, 656, 391,
	0, 392, 393, 394, 395, 396, 657, 658, 659, 476,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	660, 661, 0, 662, 0, 409, 410, 0, 663, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	664, 0, 425, 426, 0, 0, 427, 0, 0, 0,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 466, 468,
	469, 464, 465, 467, 470, 471, 462, 463, 0, 472,
	461, 0, 0, 0, 473, 474, 0, 665, 475, 666,
	477, 478, 0, 0, 479, 0, 0, 0, 481, 482,
	483, 0, 0, 484, 485, 667, 0, 486, 0, 668,
	487, 488, 480, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 498, 499, 669, 500, 501, 502, 670,
	503, 504, 505, 671, 506, 672, 507, 508, 0, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 517, 673,
	518, 519, 521, 520, 522, 0, 523, 0, 524, 525,
	526, 0, 0, 0, 0, 0, 527, 0, 529, 530,
	531, 532, 528, 533, 534, 535, 536, 537, 0, 538,
	539, 540, 0, 541, 542, 543, 544, 545, 674, 546,
	0, 547, 548, 554, 555, 556, 549, 550, 557, 558,
	559, 560, 561, 0, 563, 564, 562, 565, 566, 567,
	0, 568, 569, 551, 552, 570, 571, 0, 572, 573,
	574, 575, 576, 577, 578, 675, 0, 579, 0, 580,
	581, 582, 584, 553, 585, 590, 591, 676, 586, 587,
	588, 589, 677, 593, 594, 0, 595, 596, 0, 592,
	583, 0, 597, 598, 599, 600, 601, 602, 603, 364,
	604, 0, 605, 678, 679, 680, 681, 0, 614, 0,
	606, 607, 608, 682, 609, 683, 0, 610, 611, 612,
	613, 0, 615, 616, 0, 0, 617, 618, 619, 621,
	622, 620, 623, 0, 624, 0, 0, 625, 626, 627,
	684, 685, 686, 0, 629, 628, 630, 687, 1654, 631,
	274, 0, 0, 0, 632, 633, 688, 634, 635, 636,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 637, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 638, 639, 0, 297,
	640, 298, 641, 0, 642, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 643, 644, 645, 0, 306,
	307, 646, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 647, 648, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	649, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 650, 651, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 652, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 653,
	654, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 655, 0, 656, 391, 0, 392, 393, 394,
	395, 396, 657, 658, 659, 476, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 660, 661, 0, 662,
	0, 409, 410, 0, 663, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 664, 0, 425, 426,
	0, 0, 427, 0, 0, 0, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 466, 468, 469, 464, 465, 467,
	470, 471, 462, 463, 0, 472, 461, 0, 0, 0,
	473, 474, 0, 665, 475, 666, 477, 478, 0, 0,
	479, 0, 0, 0, 481, 482, 483, 0, 0, 484,
	485, 667, 0, 486, 0, 668, 487, 488, 480, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 498,
	499, 669, 500, 501, 502, 670, 503, 504, 505, 671,
	506, 672, 507, 508, 0, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 517, 673, 518, 519, 521, 520,
	522, 0, 523, 0, 524, 525, 526, 0, 0, 0,
	0, 0, 527, 0, 529, 530, 531, 532, 528, 533,
	534, 535, 536, 537, 0, 538, 539, 540, 0, 541,
	542, 543, 544, 545, 674, 546, 0, 547, 548, 554,
	555, 556, 549, 550, 557, 558, 559, 560, 561, 0,
	563, 564, 562, 565, 566, 567, 0, 568, 569, 551,
	552, 570, 571, 0, 572, 573, 574, 575, 576, 577,
	578, 675, 0, 579, 0, 580, 581, 582, 584, 553,
	585, 590, 591, 676, 586, 587, 588, 589, 677, 593,
	594, 0, 595, 596, 0, 592, 583, 0, 597, 598,
	599, 600, 601, 602, 603, 364, 604, 0, 605, 678,
	679, 680, 681, 0, 614, 0, 606, 607, 608, 682,
	609, 683, 0, 610, 611, 612, 613, 0, 615, 616,
	0, 0, 617, 618, 619, 621, 622, 620, 623, 0,
	624, 0, 0, 625, 626, 627, 684, 685, 686, 0,
	629, 628, 630, 687, 1647, 631, 274, 0, 0, 0,
	632, 633, 688, 634, 635, 636, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 638, 639, 0, 297, 640, 298, 641, 0,
	642, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 643, 644, 645, 0, 306, 307, 646, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 647, 648, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 649, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 650, 651, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	652, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 653, 654, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 655, 0,
	656, 391, 0, 392, 393, 394, 395, 396, 657, 658,
	659, 476, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 660, 661, 0, 662, 0, 409, 410, 0,
	663, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 664, 0, 425, 426, 0, 0, 427, 0,
	0, 0, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	0, 472, 461, 0, 0, 0, 473, 474, 0, 665,
	475, 666, 477, 478, 0, 0, 479, 0, 0, 0,
	481, 482, 483, 0, 0, 484, 485, 667, 0, 486,
	0, 668, 487, 488, 480, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 671, 506, 672, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 673, 518, 519, 521, 520, 522, 0, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	0, 538, 539, 540, 0, 541, 542, 543, 544, 545,
	674, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 0, 563, 564, 562, 565,
	566, 567, 0, 568, 569, 551, 552, 570, 571, 0,
	572, 573, 574, 575, 576, 577, 578, 675, 0, 579,
	0, 580, 581, 582, 584, 553, 585, 590, 591, 676,
	586, 587, 588, 589, 677, 593, 594, 0, 595, 596,
	0, 592, 583, 0, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 0, 605, 678, 679, 680, 681, 0,
	614, 0, 606, 607, 608, 682, 609, 683, 0, 610,
	611, 612, 613, 0, 615, 616, 0, 0, 617, 618,
	619, 621, 622, 620, 623, 0, 624, 0, 0, 625,
	626, 627, 684, 685, 686, 0, 629, 628, 630, 687,
	770, 631, 274, 0, 0, 0, 632, 633, 688, 634,
	635, 636, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 638, 639,
	0, 297, 640, 298, 641, 0, 642, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 643, 644, 645,
	0, 306, 766, 646, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 647, 648, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 649, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 650, 651, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 652, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 653, 654, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 655, 0, 656, 391, 0, 392,
	393, 394, 395, 396, 657, 658, 659, 476, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 660, 661,
	0, 662, 0, 409, 410, 0, 663, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 664, 0,
	425, 426, 0, 0, 427, 0, 0, 0, 428, 771,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 780, 0, 458, 459, 460, 466, 468, 469, 464,
	465, 467, 470, 471, 462, 463, 0, 472, 461, 0,
	0, 0, 473, 474, 0, 665, 475, 666, 477, 478,
	0, 0, 479, 0, 0, 0, 481, 482, 483, 0,
	0, 484, 485, 667, 0, 486, 0, 668, 487, 488,
	480, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 498, 499, 669, 500, 501, 502, 670, 503, 504,
	505, 671, 506, 672, 507, 508, 0, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 517, 673, 518, 519,
	521, 520, 522, 0, 523, 0, 524, 525, 526, 0,
	0, 0, 0, 0, 527, 0, 529, 530, 531, 532,
	528, 533, 534, 535, 536, 537, 0, 538, 539, 540,
	0, 779, 542, 543, 544, 545, 674, 546, 0, 547,
	548, 554, 555, 556, 549, 550, 778, 558, 559, 560,
	561, 0, 563, 564, 562, 565, 1632, 567, 0, 568,
	569, 551, 552, 570, 571, 0, 572, 573, 574, 575,
	576, 577, 578, 675, 0, 579, 0, 580, 581, 582,
	584, 553, 585, 590, 591, 676, 586, 587, 588, 589,
	677, 593, 594, 0, 595, 596, 0, 592, 583, 0,
	597, 598, 599, 600, 601, 602, 603, 364, 604, 0,
	605, 776, 679, 680, 681, 0, 614, 0, 606, 607,
	608, 682, 609, 683, 0, 610, 611, 612, 613, 0,
	615, 616, 0, 0, 617, 618, 619, 621, 622, 620,
	623, 0, 624, 0, 0, 625, 626, 627, 684, 685,
	686, 0, 629, 628, 630, 687, 1605, 631, 274, 0,
	0, 0, 632, 633, 688, 634, 635, 636, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 638, 639, 0, 297, 640, 298,
	641, 0, 642, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 643, 644, 645, 0, 306, 307, 646,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 647,
	648, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 649, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 650,
	651, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 652, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 653, 654, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	655, 0, 656, 391, 0, 392, 393, 394, 395, 396,
	1604, 658, 659, 476, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 660, 661, 0, 662, 0, 409,
	410, 0, 663, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 664, 0, 425, 426, 0, 0,
	427, 0, 0, 0, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 466, 468, 469, 464, 465, 467, 470, 471,
	462, 463, 0, 472, 461, 0, 0, 0, 473, 474,
	0, 665, 475, 666, 477, 478, 0, 0, 479, 0,
	0, 0, 481, 482, 483, 0, 0, 484, 485, 667,
	0, 486, 0, 668, 487, 488, 480, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 498, 499, 669,
	500, 501, 502, 670, 503, 504, 505, 671, 506, 672,
	507, 508, 0, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 517, 673, 518, 519, 521, 520, 522, 0,
	523, 0, 524, 525, 526, 0, 0, 0, 0, 0,
	527, 0, 529, 530, 531, 532, 528, 533, 534, 535,
	536, 537, 0, 538, 539, 540, 0, 541, 542, 543,
	544, 545, 674, 546, 0, 547, 548, 554, 555, 556,
	549, 550, 557, 558, 559, 560, 561, 0, 563, 564,
	562, 565, 566, 567, 0, 568, 569, 551, 552, 570,
	571, 0, 572, 573, 574, 575, 576, 577, 578, 675,
	0, 579, 0, 580, 581, 582, 584, 553, 585, 590,
	591, 676, 586, 587, 588, 589, 677, 593, 594, 0,
	595, 596, 0, 592, 583, 0, 597, 598, 599, 600,
	601, 602, 603, 364, 604, 0, 605, 678, 679, 680,
	681, 0, 614, 0, 606, 607, 608, 682, 609, 683,
	0, 610, 611, 612, 613, 0, 615, 616, 0, 0,
	617, 618, 619, 621, 622, 620, 623, 0, 624, 0,
	0, 625, 626, 627, 684, 685, 686, 0, 629, 628,
	630, 687, 1589, 631, 274, 0, 0, 0, 632, 633,
	688, 634, 635, 636, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	638, 639, 0, 297, 640, 298, 641, 0, 642, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 643,
	644, 645, 0, 306, 307, 646, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 647, 648, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 649, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 650, 651, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 652, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 653, 654, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 655, 0, 656, 391,
	0, 392, 393, 394, 395, 396, 1587, 658, 659, 476,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	660, 661, 0, 662, 0, 409, 410, 0, 663, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	664, 0, 425, 426, 0, 0, 427, 0, 0, 0,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 466, 468,
	469, 464, 465, 467, 470, 471, 462, 463, 0, 472,
	461, 0, 0, 0, 473, 474, 0, 665, 475, 666,
	477, 478, 0, 0, 479, 0, 0, 0, 481, 482,
	483, 0, 0, 484, 485, 667, 0, 486, 0, 668,
	487, 488, 480, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 498, 499, 669, 500, 501, 502, 670,
	503, 504, 505, 671, 506, 672, 507, 508, 0, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 517, 673,
	518, 519, 521, 520, 522, 0, 523, 0, 524, 525,
	526, 0, 0, 0, 0, 0, 527, 0, 529, 530,
	531, 532, 528, 533, 534, 535, 536, 537, 0, 538,
	539, 540, 0, 541, 542, 543, 544, 545, 674, 546,
	0, 547, 548, 554, 555, 556, 549, 550, 557, 558,
	559, 560, 561, 0, 563, 564, 562, 565, 566, 567,
	0, 568, 569, 551, 552, 570, 571, 0, 572, 573,
	574, 575, 576, 577, 578, 675, 0, 579, 0, 580,
	581, 582, 584, 553, 585, 590, 591, 676, 586, 587,
	588, 589, 677, 593, 594, 0, 595, 596, 0, 592,
	583, 0, 597, 598, 599, 600, 601, 602, 603, 364,
	604, 0, 605, 678, 679, 680, 681, 0, 614, 0,
	606, 607, 608, 682, 609, 683, 0, 610, 611, 612,
	613, 0, 615, 616, 0, 0, 617, 618, 619, 621,
	622, 620, 623, 0, 624, 0, 0, 625, 626, 627,
	684, 685, 686, 0, 629, 628, 630, 687, 1582, 631,
	274, 0, 0, 0, 632, 633, 688, 634, 635, 636,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 637, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 638, 639, 0, 297,
	640, 298, 641, 0, 642, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 643, 644, 645, 0, 306,
	307, 646, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 647, 648, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	649, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 650, 651, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 652, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 653,
	654, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 655, 0, 656, 391, 0, 392, 393, 394,
	395, 396, 657, 658, 659, 476, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 660, 661, 0, 662,
	0, 409, 410, 0, 663, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 664, 0, 425, 426,
	0, 0, 427, 0, 0, 0, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 466, 468, 469, 464, 465, 467,
	470, 471, 462, 463, 0, 472, 461, 0, 0, 0,
	473, 474, 0, 665, 475, 666, 477, 478, 0, 0,
	479, 0, 0, 0, 481, 482, 483, 0, 0, 484,
	485, 667, 0, 486, 0, 668, 487, 488, 480, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 498,
	499, 669, 500, 501, 502, 670, 503, 504, 505, 671,
	506, 672, 507, 508, 0, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 517, 673, 518, 519, 521, 520,
	522, 0, 523, 0, 524, 525, 526, 0, 0, 0,
	0, 0, 527, 0, 529, 530, 531, 532, 528, 533,
	534, 535, 536, 537, 0, 538, 539, 540, 0, 541,
	542, 543, 544, 545, 674, 546, 0, 547, 548, 554,
	555, 556, 549, 550, 557, 558, 559, 560, 561, 0,
	563, 564, 562, 565, 566, 567, 0, 568, 569, 551,
	552, 570, 571, 0, 572, 573, 574, 575, 576, 577,
	578, 675, 0, 579, 0, 580, 581, 582, 584, 553,
	585, 590, 591, 676, 586, 587, 588, 589, 677, 593,
	594, 0, 595, 596, 0, 592, 583, 0, 597, 598,
	599, 600, 601, 602, 603, 364, 604, 0, 605, 678,
	679, 680, 681, 0, 614, 0, 606, 607, 608, 682,
	609, 683, 0, 610, 611, 612, 613, 0, 615, 616,
	0, 0, 617, 618, 619, 621, 622, 620, 623, 0,
	624, 0, 0, 625, 626, 627, 684, 685, 686, 0,
	629, 628, 630, 687, 1559, 631, 274, 0, 0, 0,
	632, 633, 688, 634, 635, 636, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 638, 639, 0, 297, 640, 298, 641, 0,
	642, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 643, 644, 645, 0, 306, 307, 646, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 647, 648, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 649, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 650, 651, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	652, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 653, 654, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 655, 0,
	656, 391, 0, 392, 393, 394, 395, 396, 1557, 658,
	659, 476, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 660, 661, 0, 662, 0, 409, 410, 0,
	663, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 664, 0, 425, 426, 0, 0, 427, 0,
	0, 0, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	0, 472, 461, 0, 0, 0, 473, 474, 0, 665,
	475, 666, 477, 478, 0, 0, 479, 0, 0, 0,
	481, 482, 483, 0, 0, 484, 485, 667, 0, 486,
	0, 668, 487, 488, 480, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 671, 506, 672, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 673, 518, 519, 521, 520, 522, 0, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	0, 538, 539, 540, 0, 541, 542, 543, 544, 545,
	674, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 0, 563, 564, 562, 565,
	566, 567, 0, 568, 569, 551, 552, 570, 571, 0,
	572, 573, 574, 575, 576, 577, 578, 675, 0, 579,
	0, 580, 581, 582, 584, 553, 585, 590, 591, 676,
	586, 587, 588, 589, 677, 593, 594, 0, 595, 596,
	0, 592, 583, 0, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 0, 605, 678, 679, 680, 681, 0,
	614, 0, 606, 607, 608, 682, 609, 683, 0, 610,
	611, 612, 613, 0, 615, 616, 0, 0, 617, 618,
	619, 621, 622, 620, 623, 0, 624, 0, 0, 625,
	626, 627, 684, 685, 686, 0, 629, 628, 630, 687,
	1552, 631, 274, 0, 0, 0, 632, 633, 688, 634,
	635, 636, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 638, 639,
	0, 297, 640, 298, 641, 0, 642, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 643, 644, 645,
	0, 306, 307, 646, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 647, 648, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 649, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 650, 651, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 652, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 653, 654, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 655, 0, 656, 391, 0, 392,
	393, 394, 395, 396, 657, 658, 659, 476, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 660, 661,
	0, 662, 0, 409, 410, 0, 663, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 664, 0,
	425, 426, 0, 0, 427, 0, 0, 0, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 466, 468, 469, 464,
	465, 467, 470, 471, 462, 463, 0, 472, 461, 0,
	0, 0, 473, 474, 0, 665, 475, 666, 477, 478,
	0, 0, 479, 0, 0, 0, 481, 482, 483, 0,
	0, 484, 485, 667, 0, 486, 0, 668, 487, 488,
	480, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 498, 499, 669, 500, 501, 502, 670, 503, 504,
	505, 671, 506, 672, 507, 508, 0, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 517, 673, 518, 519,
	521, 520, 522, 0, 523, 0, 524, 525, 526, 0,
	0, 0, 0, 0, 527, 0, 529, 530, 531, 532,
	528, 533, 534, 535, 536, 537, 0, 538, 539, 540,
	0, 541, 542, 543, 544, 545, 674, 546, 0, 547,
	548, 554, 555, 556, 549, 550, 557, 558, 559, 560,
	561, 0, 563, 564, 562, 565, 566, 567, 0, 568,
	569, 551, 552, 570, 571, 0, 572, 573, 574, 575,
	576, 577, 578, 675, 0, 579, 0, 580, 581, 582,
	584, 553, 585, 590, 591, 676, 586, 587, 588, 589,
	677, 593, 594, 0, 595, 596, 0, 592, 583, 0,
	597, 598, 599, 600, 601, 602, 603, 364, 604, 0,
	605, 678, 679, 680, 681, 0, 614, 0, 606, 607,
	608, 682, 609, 683, 0, 610, 611, 612, 613, 0,
	615, 616, 0, 0, 617, 618, 619, 621, 622, 620,
	623, 0, 624, 0, 0, 625, 626, 627, 684, 685,
	686, 0, 629, 628, 630, 687, 1514, 631, 274, 0,
	0, 0, 632, 633, 688, 634, 635, 636, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 638, 639, 0, 297, 640, 298,
	641, 0, 642, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 643, 644, 645, 0, 306, 307, 646,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 647,
	648, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 649, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 650,
	651, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 652, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 653, 654, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	655, 0, 656, 391, 0, 392, 393, 394, 395, 396,
	657, 658, 659, 476, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 660, 661, 0, 662, 0, 409,
	410, 0, 663, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 664, 0, 425, 426, 0, 0,
	427, 0, 0, 0, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 466, 468, 469, 464, 465, 467, 470, 471,
	462, 463, 0, 472, 461, 0, 0, 0, 473, 474,
	0, 665, 475, 666, 477, 478, 0, 0, 479, 0,
	0, 0, 481, 482, 483, 0, 0, 484, 485, 667,
	0, 486, 0, 668, 487, 488, 480, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 498, 499, 669,
	500, 501, 502, 670, 503, 504, 505, 671, 506, 672,
	507, 508, 0, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 517, 673, 518, 519, 521, 520, 522, 0,
	523, 0, 524, 525, 526, 0, 0, 0, 0, 0,
	527, 0, 529, 530, 531, 532, 528, 533, 534, 535,
	536, 537, 0, 538, 539, 540, 0, 541, 542, 543,
	544, 545, 674, 546, 0, 547, 548, 554, 555, 556,
	549, 550, 557, 558, 559, 560, 561, 0, 563, 564,
	562, 565, 566, 567, 0, 568, 569, 551, 552, 570,
	571, 0, 572, 573, 574, 575, 576, 577, 578, 675,
	0, 579, 0, 580, 581, 582, 584, 553, 585, 590,
	591, 676, 586, 587, 588, 589, 677, 593, 594, 0,
	595, 596, 0, 592, 583, 0, 597, 598, 599, 600,
	601, 602, 603, 364, 604, 0, 605, 678, 679, 680,
	681, 0, 614, 0, 606, 607, 608, 682, 609, 683,
	0, 610, 611, 612, 613, 0, 615, 616, 0, 0,
	617, 618, 619, 621, 622, 620, 623, 0, 624, 0,
	0, 625, 626, 627, 684, 685, 686, 0, 629, 628,
	630, 687, 1497, 631, 274, 0, 0, 0, 632, 633,
	688, 634, 635, 636, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	638, 639, 0, 297, 640, 298, 641, 0, 642, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 643,
	644, 645, 0, 306, 307, 646, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 647, 648, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 649, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 650, 651, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 652, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 653, 654, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 655, 0, 656, 391,
	0, 392, 393, 394, 395, 396, 657, 658, 659, 476,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	660, 661, 0, 662, 0, 409, 410, 0, 663, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	664, 0, 425, 426, 0, 0, 427, 0, 0, 0,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 466, 468,
	469, 464, 465, 467, 470, 471, 462, 463, 0, 472,
	461, 0, 0, 0, 473, 474, 0, 665, 475, 666,
	477, 478, 0, 0, 479, 0, 0, 0, 481, 482,
	483, 0, 0, 484, 485, 667, 0, 486, 0, 668,
	487, 488, 480, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 498, 499, 669, 500, 501, 502, 670,
	503, 504, 505, 671, 506, 672, 507, 508, 0, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 517, 673,
	518, 519, 521, 520, 522, 0, 523, 0, 524, 525,
	526, 0, 0, 0, 0, 0, 527, 0, 529, 530,
	531, 532, 528, 533, 534, 535, 536, 537, 0, 538,
	539, 540, 0, 541, 542, 543, 544, 545, 674, 546,
	0, 547, 548, 554, 555, 556, 549, 550, 557, 558,
	559, 560, 561, 0, 563, 564, 562, 565, 566, 567,
	0, 568, 569, 551, 552, 570, 571, 0, 572, 573,
	574, 575, 576, 577, 578, 675, 0, 579, 0, 580,
	581, 582, 584, 553, 585, 590, 591, 676, 586, 587,
	588, 589, 677, 593, 594, 0, 595, 596, 0, 592,
	583, 0, 597, 598, 599, 600, 601, 602, 603, 364,
	604, 0, 605, 678, 679, 680, 681, 0, 614, 0,
	606, 607, 608, 682, 609, 683, 0, 610, 611, 612,
	613, 0, 615, 616, 0, 0, 617, 618, 619, 621,
	622, 620, 623, 0, 624, 0, 0, 625, 626, 627,
	684, 685, 686, 0, 629, 628, 630, 687, 1366, 631,
	274, 0, 0, 0, 632, 633, 688, 634, 635, 636,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 637, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 638, 639, 0, 297,
	640, 298, 641, 0, 642, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 643, 644, 645, 0, 306,
	307, 646, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 647, 648, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	649, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 650, 651, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 652, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 653,
	654, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 655, 0, 656, 391, 0, 392, 393, 394,
	395, 396, 657, 658, 659, 476, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 660, 661, 0, 662,
	0, 409, 410, 0, 663, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 664, 0, 425, 426,
	0, 0, 427, 0, 0, 0, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 466, 468, 469, 464, 465, 467,
	470, 471, 462, 463, 0, 472, 461, 0, 0, 0,
	473, 474, 0, 665, 475, 666, 477, 478, 0, 0,
	479, 0, 0, 0, 481, 482, 483, 0, 0, 484,
	485, 667, 0, 486, 0, 668, 487, 488, 480, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 498,
	499, 669, 500, 501, 502, 670, 503, 504, 505, 671,
	506, 672, 507, 508, 0, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 517, 673, 518, 519, 521, 520,
	522, 0, 523, 0, 524, 525, 526, 0, 0, 0,
	0, 0, 527, 0, 529, 530, 531, 532, 528, 533,
	534, 535, 536, 537, 0, 538, 539, 540, 0, 779,
	542, 543, 544, 545, 674, 546, 0, 547, 548, 554,
	555, 556, 549, 550, 778, 558, 559, 560, 561, 0,
	563, 564, 562, 565, 566, 567, 0, 568, 569, 551,
	552, 570, 571, 0, 572, 573, 574, 575, 576, 577,
	578, 675, 0, 579, 0, 580, 581, 582, 584, 553,
	585, 590, 591, 676, 586, 587, 588, 589, 677, 593,
	594, 0, 595, 596, 0, 592, 583, 0, 597, 598,
	599, 600, 601, 602, 603, 364, 604, 0, 605, 776,
	679, 680, 681, 0, 614, 0, 606, 607, 608, 682,
	609, 683, 0, 610, 611, 612, 613, 0, 615, 616,
	0, 0, 617, 618, 619, 621, 622, 620, 623, 0,
	624, 0, 0, 625, 626, 627, 684, 685, 686, 0,
	629, 628, 630, 687, 1331, 631, 274, 0, 0, 0,
	632, 633, 688, 634, 635, 636, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 638, 639, 0, 297, 640, 298, 641, 0,
	642, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 643, 644, 645, 0, 306, 307, 646, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 647, 648, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 649, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 650, 651, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	652, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 653, 654, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 655, 0,
	656, 391, 0, 392, 393, 394, 395, 396, 1330, 658,
	659, 476, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 660, 661, 0, 662, 0, 409, 410, 0,
	663, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 664, 0, 425, 426, 0, 0, 427, 0,
	0, 0, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	0, 472, 461, 0, 0, 0, 473, 474, 0, 665,
	475, 666, 477, 478, 0, 0, 479, 0, 0, 0,
	481, 482, 483, 0, 0, 484, 485, 667, 0, 486,
	0, 668, 487, 488, 480, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 671, 506, 672, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 673, 518, 519, 521, 520, 522, 0, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	0, 538, 539, 540, 0, 541, 542, 543, 544, 545,
	674, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 0, 563, 564, 562, 565,
	566, 567, 0, 568, 569, 551, 552, 570, 571, 0,
	572, 573, 574, 575, 576, 577, 578, 675, 0, 579,
	0, 580, 581, 582, 584, 553, 585, 590, 591, 676,
	586, 587, 588, 589, 677, 593, 594, 0, 595, 596,
	0, 592, 583, 0, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 0, 605, 678, 679, 680, 681, 0,
	614, 0, 606, 607, 608, 682, 609, 683, 0, 610,
	611, 612, 613, 0, 615, 616, 0, 0, 617, 618,
	619, 621, 622, 620, 623, 0, 624, 0, 0, 625,
	626, 627, 684, 685, 686, 0, 629, 628, 630, 687,
	1322, 631, 274, 0, 0, 0, 632, 633, 688, 634,
	635, 636, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 638, 639,
	0, 297, 640, 298, 641, 0, 642, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 643, 644, 645,
	0, 306, 307, 646, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 647, 648, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 649, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 650, 651, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 652, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 653, 654, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 655, 0, 656, 391, 0, 392,
	393, 394, 395, 396, 1321, 658, 659, 476, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 660, 661,
	0, 662, 0, 409, 410, 0, 663, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 664, 0,
	425, 426, 0, 0, 427, 0, 0, 0, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 466, 468, 469, 464,
	465, 467, 470, 471, 462, 463, 0, 472, 461, 0,
	0, 0, 473, 474, 0, 665, 475, 666, 477, 478,
	0, 0, 479, 0, 0, 0, 481, 482, 483, 0,
	0, 484, 485, 667, 0, 486, 0, 668, 487, 488,
	480, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 498, 499, 669, 500, 501, 502, 670, 503, 504,
	505, 671, 506, 672, 507, 508, 0, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 517, 673, 518, 519,
	521, 520, 522, 0, 523, 0, 524, 525, 526, 0,
	0, 0, 0, 0, 527, 0, 529, 530, 531, 532,
	528, 533, 534, 535, 536, 537, 0, 538, 539, 540,
	0, 541, 542, 543, 544, 545, 674, 546, 0, 547,
	548, 554, 555, 556, 549, 550, 557, 558, 559, 560,
	561, 0, 563, 564, 562, 565, 566, 567, 0, 568,
	569, 551, 552, 570, 571, 0, 572, 573, 574, 575,
	576, 577, 578, 675, 0, 579, 0, 580, 581, 582,
	584, 553, 585, 590, 591, 676, 586, 587, 588, 589,
	677, 593, 594, 0, 595, 596, 0, 592, 583, 0,
	597, 598, 599, 600, 601, 602, 603, 364, 604, 0,
	605, 678, 679, 680, 681, 0, 614, 0, 606, 607,
	608, 682, 609, 683, 0, 610, 611, 612, 613, 0,
	615, 616, 0, 0, 617, 618, 619, 621, 622, 620,
	623, 0, 624, 0, 0, 625, 626, 627, 684, 685,
	686, 274, 629, 628, 630, 687, 0, 631, 0, 0,
	0, 0, 632, 633, 688, 634, 635, 636, 280, 282,
	281, 283, 284, 285, 286, 1275, 287, 288, 0, 0,
	0, 0, 0, 637, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 638, 639, 0,
	297, 640, 298, 641, 0, 642, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 643, 644, 645, 0,
	306, 307, 646, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 647, 648, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 649, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 650, 651, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 652, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	653, 654, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 655, 0, 656, 391, 0, 392, 393,
	394, 395, 396, 657, 658, 659, 476, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 660, 661, 0,
	662, 0, 409, 410, 0, 663, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 664, 0, 425,
	426, 0, 0, 427, 0, 0, 0, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 466, 468, 469, 464, 465,
	467, 470, 471, 462, 463, 0, 472, 461, 0, 0,
	0, 473, 474, 0, 665, 475, 666, 477, 478, 0,
	0, 479, 0, 0, 0, 481, 482, 483, 0, 0,
	484, 485, 667, 0, 486, 0, 668, 487, 488, 480,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 0,
	498, 499, 669, 500, 501, 502, 670, 503, 504, 505,
	671, 506, 672, 507, 508, 0, 509, 510, 0, 511,
	512, 513, 514, 515, 516, 517, 673, 518, 519, 521,
	520, 522, 0, 523, 0, 524, 525, 526, 0, 0,
	0, 0, 0, 527, 0, 529, 530, 531, 532, 528,
	533, 534, 535, 536, 537, 0, 538, 539, 540, 0,
	541, 542, 543, 544, 545, 674, 546, 0, 547, 548,
	554, 555, 556, 549, 550, 557, 558, 559, 560, 561,
	0, 563, 564, 562, 565, 566, 567, 0, 568, 569,
	551, 552, 570, 571, 0, 572, 573, 574, 575, 576,
	577, 578, 675, 0, 579, 0, 580, 581, 582, 584,
	553, 585, 590, 591, 676, 586, 587, 588, 589, 677,
	593, 594, 0, 595, 596, 0, 592, 583, 0, 597,
	598, 599, 600, 601, 602, 603, 364, 604, 0, 605,
	678, 679, 680, 681, 0, 614, 0, 606, 607, 608,
	682, 609, 683, 0, 610, 611, 612, 613, 0, 615,
	616, 0, 0, 617, 618, 619, 621, 622, 620, 623,
	0, 624, 0, 0, 625, 626, 627, 684, 685, 686,
	274, 629, 628, 630, 687, 0, 631, 0, 0, 0,
	0, 632, 633, 688, 634, 635, 636, 280, 282, 281,
	283, 284, 285, 286, 785, 287, 288, 0, 0, 0,
	0, 0, 637, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 638, 639, 0, 297,
	640, 298, 641, 0, 642, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 643, 644, 645, 0, 306,
	307, 646, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 647, 648, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	649, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 650, 651, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 652, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 653,
	654, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 655, 0, 656, 391, 0, 392, 393, 394,
	395, 396, 657, 658, 659, 476, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 660, 661, 0, 662,
	0, 409, 410, 0, 663, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 664, 0, 425, 426,
	0, 0, 427, 0, 0, 0, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 466, 468, 469, 464, 465, 467,
	470, 471, 462, 463, 0, 472, 461, 0, 0, 0,
	473, 474, 0, 665, 475, 666, 477, 478, 0, 0,
	479, 0, 0, 0, 481, 482, 483, 0, 0, 484,
	485, 667, 0, 486, 0, 668, 487, 488, 480, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 498,
	499, 669, 500, 501, 502, 670, 503, 504, 505, 671,
	506, 672, 507, 508, 0, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 517, 673, 518, 519, 521, 520,
	522, 0, 523, 0, 524, 525, 526, 0, 0, 0,
	0, 0, 527, 0, 529, 530, 531, 532, 528, 533,
	534, 535, 536, 537, 0, 538, 539, 540, 0, 541,
	542, 543, 544, 545, 674, 546, 0, 547, 548, 554,
	555, 556, 549, 550, 557, 558, 559, 560, 561, 0,
	563, 564, 562, 565, 566, 567, 0, 568, 569, 551,
	552, 570, 571, 0, 572, 573, 574, 575, 576, 577,
	578, 675, 0, 579, 0, 580, 581, 582, 584, 553,
	585, 590, 591, 676, 586, 587, 588, 589, 677, 593,
	594, 0, 595, 596, 0, 592, 583, 0, 597, 598,
	599, 600, 601, 602, 603, 364, 604, 0, 605, 678,
	679, 680, 681, 0, 614, 0, 606, 607, 608, 682,
	609, 683, 0, 610, 611, 612, 613, 0, 615, 616,
	0, 0, 617, 618, 619, 621, 622, 620, 623, 0,
	624, 0, 0, 625, 626, 627, 684, 685, 686, 0,
	629, 628, 630, 687, 770, 631, 274, 0, 0, 0,
	632, 633, 688, 634, 635, 636, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 638, 639, 0, 297, 640, 298, 641, 0,
	642, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 643, 644, 645, 0, 306, 766, 646, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 765, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 647, 648, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 649, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 650, 651, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	652, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 653, 654, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 655, 0,
	656, 391, 0, 392, 393, 394, 395, 396, 657, 658,
	659, 476, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 660, 661, 0, 662, 0, 409, 410, 0,
	663, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 664, 0, 425, 426, 0, 0, 427, 0,
	0, 0, 428, 771, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 780, 0, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	0, 472, 461, 0, 0, 0, 473, 474, 0, 665,
	475, 666, 477, 478, 0, 0, 479, 0, 0, 0,
	481, 482, 483, 0, 0, 484, 485, 667, 0, 486,
	0, 668, 487, 488, 480, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 671, 506, 672, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 673, 518, 519, 521, 520, 522, 0, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	0, 538, 539, 540, 0, 779, 542, 543, 544, 545,
	767, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	778, 558, 559, 560, 561, 0, 563, 564, 562, 565,
	768, 567, 0, 568, 569, 551, 552, 570, 571, 0,
	572, 573, 574, 575, 576, 577, 578, 675, 0, 579,
	0, 580, 581, 582, 584, 553, 585, 590, 591, 676,
	586, 587, 588, 589, 677, 593, 594, 0, 595, 596,
	0, 592, 583, 0, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 0, 605, 776, 679, 680, 681, 0,
	614, 0, 606, 772, 608, 682, 609, 683, 0, 610,
	611, 612, 613, 0, 615, 616, 0, 0, 617, 618,
	619, 621, 622, 620, 623, 0, 624, 0, 0, 625,
	626, 627, 684, 685, 686, 0, 629, 628, 630, 687,
	759, 631, 274, 0, 0, 0, 632, 633, 688, 634,
	635, 636, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 638, 639,
	0, 297, 640, 298, 641, 0, 642, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 643, 644, 645,
	0, 306, 307, 646, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 647, 648, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 649, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 650, 651, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 652, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 653, 654, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 655, 0, 656, 391, 0, 392,
	393, 394, 395, 396, 657, 658, 659, 476, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 660, 661,
	0, 662, 0, 409, 410, 0, 663, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 664, 0,
	425, 426, 0, 0, 427, 0, 0, 0, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 466, 468, 469, 464,
	465, 467, 470, 471, 462, 463, 0, 472, 461, 0,
	0, 0, 473, 474, 0, 665, 475, 666, 477, 478,
	0, 0, 479, 0, 0, 0, 481, 482, 483, 0,
	0, 484, 485, 667, 0, 486, 0, 668, 487, 488,
	480, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 498, 499, 669, 500, 501, 502, 670, 503, 504,
	505, 671, 506, 672, 507, 508, 0, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 517, 673, 518, 519,
	521, 520, 522, 0, 523, 0, 524, 525, 526, 0,
	0, 0, 0, 0, 527, 0, 529, 530, 531, 532,
	528, 533, 534, 535, 536, 537, 0, 538, 539, 540,
	0, 541, 542, 543, 544, 545, 674, 546, 0, 547,
	548, 760, 555, 556, 549, 550, 557, 558, 559, 560,
	561, 0, 563, 564, 562, 565, 566, 567, 0, 568,
	569, 551, 552, 570, 571, 0, 572, 573, 574, 575,
	576, 577, 578, 675, 0, 579, 0, 580, 581, 582,
	584, 553, 585, 590, 591, 676, 586, 587, 588, 589,
	677, 593, 594, 0, 595, 596, 0, 592, 583, 0,
	597, 598, 599, 600, 601, 602, 603, 364, 604, 0,
	605, 678, 679, 680, 681, 0, 614, 0, 606, 607,
	608, 682, 609, 683, 0, 610, 611, 612, 613, 0,
	615, 616, 0, 0, 617, 618, 619, 621, 622, 620,
	623, 0, 624, 0, 0, 625, 626, 627, 684, 685,
	686, 0, 629, 628, 630, 687, 722, 631, 274, 0,
	0, 0, 632, 633, 688, 634, 635, 636, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 638, 639, 0, 297, 640, 298,
	641, 0, 642, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 643, 644, 645, 0, 306, 307, 646,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 647,
	648, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 649, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 650,
	651, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 652, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 653, 654, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	655, 0, 656, 391, 0, 392, 393, 394, 395, 396,
	657, 658, 659, 476, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 660, 661, 0, 662, 0, 409,
	410, 0, 663, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 664, 0, 425, 426, 0, 0,
	427, 0, 0, 0, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 466, 468, 469, 464, 465, 467, 470, 471,
	462, 463, 0, 472, 461, 0, 0, 0, 473, 474,
	0, 665, 475, 666, 477, 478, 0, 0, 479, 0,
	0, 0, 481, 482, 483, 0, 0, 484, 485, 667,
	0, 486, 0, 668, 487, 488, 480, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 498, 499, 669,
	500, 501, 502, 670, 503, 504, 505, 671, 506, 672,
	507, 508, 0, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 517, 673, 518, 519, 521, 520, 522, 0,
	523, 0, 524, 525, 526, 0, 0, 0, 0, 0,
	527, 0, 529, 530, 531, 532, 528, 533, 534, 535,
	536, 537, 0, 538, 539, 540, 0, 541, 542, 543,
	544, 545, 674, 546, 0, 547, 548, 554, 555, 556,
	549, 550, 557, 558, 559, 560, 561, 0, 563, 564,
	562, 565, 566, 567, 0, 568, 569, 551, 552, 570,
	571, 0, 572, 573, 574, 575, 576, 577, 578, 675,
	0, 579, 0, 580, 581, 582, 584, 553, 585, 590,
	591, 676, 586, 587, 588, 589, 677, 593, 594, 0,
	595, 596, 0, 592, 583, 0, 597, 598, 599, 600,
	601, 602, 603, 364, 604, 0, 605, 678, 679, 680,
	681, 0, 614, 0, 606, 607, 608, 682, 609, 683,
	0, 610, 611, 612, 613, 0, 615, 616, 0, 0,
	617, 618, 619, 621, 622, 620, 623, 0, 624, 0,
	0, 625, 626, 627, 684, 685, 686, 0, 629, 628,
	630, 687, 716, 631, 274, 0, 0, 0, 632, 633,
	688, 634, 635, 636, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	638, 639, 0, 297, 640, 298, 641, 0, 642, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 643,
	644, 645, 0, 306, 307, 646, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 647, 648, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 649, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 650, 651, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 652, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 653, 654, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 655, 0, 656, 391,
	0, 392, 393, 394, 395, 396, 657, 658, 659, 476,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	660, 661, 0, 662, 0, 409, 410, 0, 663, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	664, 0, 425, 426, 0, 0, 427, 0, 0, 0,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 466, 468,
	469, 464, 465, 467, 470, 471, 462, 463, 0, 472,
	461, 0, 0, 0, 473, 474, 0, 665, 475, 666,
	477, 478, 0, 0, 479, 0, 0, 0, 481, 482,
	483, 0, 0, 484, 485, 667, 0, 486, 0, 668,
	487, 488, 480, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 498, 499, 669, 500, 501, 502, 670,
	503, 504, 505, 671, 506, 672, 507, 508, 0, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 517, 673,
	518, 519, 521, 520, 522, 0, 523, 0, 524, 525,
	526, 0, 0, 0, 0, 0, 527, 0, 529, 530,
	531, 532, 528, 533, 534, 535, 536, 537, 0, 538,
	539, 540, 0, 541, 542, 543, 544, 545, 674, 546,
	0, 547, 548, 554, 555, 556, 549, 550, 557, 558,
	559, 560, 561, 0, 563, 564, 562, 565, 566, 567,
	0, 568, 569, 551, 552, 570, 571, 0, 572, 573,
	574, 575, 576, 577, 578, 675, 0, 579, 0, 580,
	581, 582, 584, 553, 585, 590, 591, 676, 586, 587,
	588, 589, 677, 593, 594, 0, 595, 596, 0, 592,
	583, 0, 597, 598, 599, 600, 601, 602, 603, 364,
	604, 0, 605, 678, 679, 680, 681, 0, 614, 0,
	606, 607, 608, 682, 609, 683, 0, 610, 611, 612,
	613, 0, 615, 616, 0, 0, 617, 618, 619, 621,
	622, 620, 623, 0, 624, 0, 0, 625, 626, 627,
	684, 685, 686, 0, 629, 628, 630, 687, 694, 631,
	274, 0, 0, 0, 632, 633, 688, 634, 635, 636,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 637, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 638, 639, 0, 297,
	640, 298, 641, 0, 642, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 643, 644, 645, 0, 306,
	307, 646, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 647, 648, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	649, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 650, 651, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 652, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 653,
	654, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 655, 0, 656, 391, 0, 392, 393, 394,
	395, 396, 657, 658, 659, 476, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 660, 661, 0, 662,
	0, 409, 410, 0, 663, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 664, 0, 425, 426,
	0, 0, 427, 0, 0, 0, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 466, 468, 469, 464, 465, 467,
	470, 471, 462, 463, 0, 472, 461, 0, 0, 0,
	473, 474, 0, 665, 475, 666, 477, 478, 0, 0,
	479, 0, 0, 0, 481, 482, 483, 0, 0, 484,
	485, 667, 0, 486, 0, 668, 487, 488, 480, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 498,
	499, 669, 500, 501, 502, 670, 503, 504, 505, 671,
	506, 672, 507, 508, 0, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 517, 673, 518, 519, 521, 520,
	522, 0, 523, 0, 524, 525, 526, 0, 0, 0,
	0, 0, 527, 0, 529, 530, 531, 532, 528, 533,
	534, 535, 536, 537, 0, 538, 539, 540, 0, 541,
	542, 543, 544, 545, 674, 546, 0, 547, 548, 554,
	555, 556, 549, 550, 557, 558, 559, 560, 561, 0,
	563, 564, 562, 565, 566, 567, 0, 568, 569, 551,
	552, 570, 571, 0, 572, 573, 574, 575, 576, 577,
	578, 675, 0, 579, 0, 580, 581, 582, 584, 553,
	585, 590, 591, 676, 586, 587, 588, 589, 677, 593,
	594, 0, 595, 596, 0, 592, 583, 0, 597, 598,
	599, 600, 601, 602, 603, 364, 604, 0, 605, 678,
	679, 680, 681, 0, 614, 0, 606, 607, 608, 682,
	609, 683, 0, 610, 611, 612, 613, 0, 615, 616,
	0, 0, 617, 618, 619, 621, 622, 620, 623, 0,
	624, 0, 0, 625, 626, 627, 684, 685, 686, 274,
	629, 628, 630, 687, 0, 631, 0, 0, 0, 0,
	632, 633, 688, 634, 635, 636, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 637, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 638, 639, 0, 297, 640,
	298, 641, 0, 642, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 643, 644, 645, 0, 306, 307,
	646, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	647, 648, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 649,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	650, 651, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 652, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 653, 654,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 655, 0, 656, 391, 0, 392, 393, 394, 395,
	396, 657, 658, 659, 476, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 660, 661, 0, 662, 0,
	409, 410, 0, 663, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 664, 0, 425, 426, 0,
	0, 427, 0, 0, 0, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 466, 468, 469, 464, 465, 467, 470,
	471, 462, 463, 0, 472, 461, 0, 0, 0, 473,
	474, 0, 665, 475, 666, 477, 478, 0, 0, 479,
	0, 0, 0, 481, 482, 483, 0, 0, 484, 485,
	667, 0, 486, 0, 668, 487, 488, 480, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 0, 498, 499,
	669, 500, 501, 502, 670, 503, 504, 505, 671, 506,
	672, 507, 508, 0, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 517, 673, 518, 519, 521, 520, 522,
	0, 523, 0, 524, 525, 526, 0, 0, 0, 0,
	0, 527, 0, 529, 530, 531, 532, 528, 533, 534,
	535, 536, 537, 0, 538, 539, 540, 0, 541, 542,
	543, 544, 545, 674, 546, 0, 547, 548, 554, 555,
	556, 549, 550, 557, 558, 559, 560, 561, 0, 563,
	564, 562, 565, 566, 567, 0, 568, 569, 551, 552,
	570, 571, 0, 572, 573, 574, 575, 576, 577, 578,
	675, 0, 579, 0, 580, 581, 582, 584, 553, 585,
	590, 591, 676, 586, 587, 588, 589, 677, 593, 594,
	0, 595, 596, 0, 592, 583, 0, 597, 598, 599,
	600, 601, 602, 603, 364, 604, 0, 605, 678, 679,
	680, 681, 0, 614, 0, 606, 607, 608, 682, 609,
	683, 0, 610, 611, 612, 613, 0, 615, 616, 0,
	0, 617, 618, 619, 621, 622, 620, 623, 0, 624,
	0, 0, 625, 626, 627, 684, 685, 686, 274, 629,
	628, 630, 687, 0, 631, 0, 0, 0, 0, 632,
	633, 688, 634, 635, 636, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 638, 639, 0, 297, 640, 298,
	641, 0, 642, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 643, 644, 645, 0, 306, 307, 646,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 647,
	648, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 649, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 650,
	651, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 652, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 653, 654, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	655, 0, 656, 391, 0, 392, 393, 394, 395, 396,
	3629, 658, 659, 476, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 660, 661, 0, 662, 0, 409,
	410, 0, 663, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 664, 0, 425, 426, 0, 0,
	427, 0, 0, 0, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 466, 468, 469, 464, 465, 467, 470, 471,
	462, 463, 0, 472, 461, 0, 0, 0, 473, 474,
	0, 665, 475, 666, 477, 478, 0, 0, 479, 0,
	0, 0, 481, 482, 483, 0, 0, 484, 485, 667,
	0, 486, 0, 668, 487, 488, 480, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 498, 499, 669,
	500, 501, 502, 670, 503, 504, 505, 671, 506, 672,
	507, 508, 0, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 517, 673, 518, 519, 521, 520, 522, 0,
	523, 0, 524, 525, 526, 0, 0, 0, 0, 0,
	527, 0, 529, 530, 531, 532, 528, 533, 534, 535,
	536, 537, 0, 538, 539, 540, 0, 541, 542, 543,
	544, 545, 674, 546, 0, 547, 548, 554, 555, 556,
	549, 550, 557, 558, 559, 560, 561, 0, 563, 564,
	562, 565, 566, 567, 0, 568, 569, 551, 552, 570,
	571, 0, 572, 573, 574, 575, 576, 577, 578, 675,
	0, 579, 0, 580, 581, 582, 584, 553, 585, 590,
	591, 676, 586, 587, 588, 589, 677, 593, 594, 0,
	595, 596, 0, 592, 583, 0, 597, 598, 599, 600,
	601, 602, 603, 364, 604, 0, 605, 678, 679, 680,
	681, 0, 614, 0, 606, 607, 608, 682, 609, 683,
	0, 610, 611, 612, 613, 0, 615, 616, 0, 0,
	617, 618, 619, 621, 622, 620, 623, 0, 624, 0,
	0, 625, 626, 627, 684, 685, 686, 274, 629, 628,
	630, 687, 0, 631, 0, 0, 0, 0, 632, 633,
	688, 634, 635, 636, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 638, 639, 0, 297, 640, 298, 641,
	0, 642, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 643, 644, 645, 0, 306, 307, 646, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 647, 648,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 649, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 650, 651,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 652, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 653, 654, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 655,
	0, 656, 391, 0, 392, 393, 394, 395, 396, 657,
	658, 659, 476, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 660, 661, 0, 662, 0, 409, 410,
	0, 663, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 664, 0, 425, 426, 0, 0, 427,
	0, 0, 0, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 466, 468, 469, 464, 465, 467, 470, 471, 462,
	463, 0, 472, 461, 0, 0, 0, 473, 474, 0,
	665, 475, 666, 477, 478, 0, 0, 479, 0, 0,
	0, 481, 482, 483, 0, 0, 484, 485, 667, 0,
	486, 0, 668, 487, 488, 480, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 0, 498, 499, 669, 500,
	501, 502, 670, 503, 504, 505, 671, 506, 672, 507,
	508, 0, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 517, 673, 518, 519, 521, 520, 522, 0, 523,
	0, 524, 525, 526, 0, 0, 0, 0, 0, 527,
	0, 529, 530, 531, 532, 528, 533, 534, 535, 536,
	537, 0, 538, 539, 540, 0, 779, 542, 543, 544,
	545, 674, 546, 0, 547, 548, 554, 555, 556, 549,
	550, 778, 558, 559, 560, 561, 0, 563, 564, 562,
	565, 566, 567, 0, 568, 569, 551, 552, 570, 571,
	0, 572, 573, 574, 575, 576, 577, 578, 675, 0,
	579, 0, 580, 581, 582, 584, 553, 585, 590, 591,
	676, 586, 587, 588, 589, 677, 593, 594, 0, 595,
	596, 0, 592, 583, 0, 597, 598, 599, 600, 601,
	602, 603, 364, 604, 0, 605, 776, 679, 680, 681,
	0, 614, 0, 606, 607, 608, 682, 609, 683, 0,
	610, 611, 612, 613, 0, 615, 616, 0, 0, 617,
	618, 619, 621, 622, 620, 623, 0, 624, 0, 0,
	625, 626, 627, 684, 685, 686, 274, 629, 628, 630,
	687, 0, 631, 0, 0, 0, 0, 632, 633, 688,
	634, 635, 636, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 638, 639, 0, 297, 640, 298, 641, 0,
	642, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 643, 644, 645, 0, 306, 307, 646, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 647, 648, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 649, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 650, 651, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	652, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 653, 654, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 655, 0,
	656, 391, 0, 392, 393, 394, 395, 396, 3556, 658,
	659, 476, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 660, 661, 0, 662, 0, 409, 410, 0,
	663, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 664, 0, 425, 426, 0, 0, 427, 0,
	0, 0, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	0, 472, 461, 0, 0, 0, 473, 474, 0, 665,
	475, 666, 477, 478, 0, 0, 479, 0, 0, 0,
	481, 482, 483, 0, 0, 484, 485, 667, 0, 486,
	0, 668, 487, 488, 480, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 671, 506, 672, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 673, 518, 519, 521, 520, 522, 0, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	0, 538, 539, 540, 0, 541, 542, 543, 544, 545,
	674, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 0, 563, 564, 562, 565,
	566, 567, 0, 568, 569, 551, 552, 570, 571, 0,
	572, 573, 574, 575, 576, 577, 578, 675, 0, 579,
	0, 580, 581, 582, 584, 553, 585, 590, 591, 676,
	586, 587, 588, 589, 677, 593, 594, 0, 595, 596,
	0, 592, 583, 0, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 0, 605, 678, 679, 680, 681, 0,
	614, 0, 606, 607, 608, 682, 609, 683, 0, 610,
	611, 612, 613, 0, 615, 616, 0, 0, 617, 618,
	619, 621, 622, 620, 623, 0, 624, 0, 0, 625,
	626, 627, 684, 685, 686, 274, 629, 628, 630, 687,
	0, 631, 0, 0, 0, 0, 632, 633, 688, 634,
	635, 636, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 638, 639, 0, 297, 640, 298, 641, 0, 642,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	643, 644, 645, 0, 306, 307, 646, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 647, 648, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 649, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 650, 651, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 652,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 653, 654, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 655, 0, 656,
	391, 0, 392, 393, 394, 395, 396, 3534, 658, 659,
	476, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 660, 661, 0, 662, 0, 409, 410, 0, 663,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 664, 0, 425, 426, 0, 0, 427, 0, 0,
	0, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 466,
	468, 469, 464, 465, 467, 470, 471, 462, 463, 0,
	472, 461, 0, 0, 0, 473, 474, 0, 665, 475,
	666, 477, 478, 0, 0, 479, 0, 0, 0, 481,
	482, 483, 0, 0, 484, 485, 667, 0, 486, 0,
	668, 487, 488, 480, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 498, 499, 669, 500, 501, 502,
	670, 503, 504, 505, 671, 506, 672, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 517,
	673, 518, 519, 521, 520, 522, 0, 523, 0, 524,
	525, 526, 0, 0, 0, 0, 0, 527, 0, 529,
	530, 531, 532, 528, 533, 534, 535, 536, 537, 0,
	538, 539, 540, 0, 541, 542, 543, 544, 545, 674,
	546, 0, 547, 548, 554, 555, 556, 549, 550, 557,
	558, 559, 560, 561, 0, 563, 564, 562, 565, 566,
	567, 0, 568, 569, 551, 552, 570, 571, 0, 572,
	573, 574, 575, 576, 577, 578, 675, 0, 579, 0,
	580, 581, 582, 584, 553, 585, 590, 591, 676, 586,
	587, 588, 589, 677, 593, 594, 0, 595, 596, 0,
	592, 583, 0, 597, 598, 599, 600, 601, 602, 603,
	364, 604, 0, 605, 678, 679, 680, 681, 0, 614,
	0, 606, 607, 608, 682, 609, 683, 0, 610, 611,
	612, 613, 0, 615, 616, 0, 0, 617, 618, 619,
	621, 622, 620, 623, 0, 624, 0, 0, 625, 626,
	627, 684, 685, 686, 274, 629, 628, 630, 687, 0,
	631, 0, 0, 0, 0, 632, 633, 688, 634, 635,
	636, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	638, 639, 0, 297, 640, 298, 641, 0, 642, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 643,
	644, 645, 0, 306, 307, 646, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 647, 648, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 649, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 650, 651, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 652, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 653, 654, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 655, 0, 656, 391,
	0, 392, 393, 394, 395, 396, 3531, 658, 659, 476,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	660, 661, 0, 662, 0, 409, 410, 0, 663, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	664, 0, 425, 426, 0, 0, 427, 0, 0, 0,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 466, 468,
	469, 464, 465, 467, 470, 471, 462, 463, 0, 472,
	461, 0, 0, 0, 473, 474, 0, 665, 475, 666,
	477, 478, 0, 0, 479, 0, 0, 0, 481, 482,
	483, 0, 0, 484, 485, 667, 0, 486, 0, 668,
	487, 488, 480, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 498, 499, 669, 500, 501, 502, 670,
	503, 504, 505, 671, 506, 672, 507, 508, 0, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 517, 673,
	518, 519, 521, 520, 522, 0, 523, 0, 524, 525,
	526, 0, 0, 0, 0, 0, 527, 0, 529, 530,
	531, 532, 528, 533, 534, 535, 536, 537, 0, 538,
	539, 540, 0, 541, 542, 543, 544, 545, 674, 546,
	0, 547, 548, 554, 555, 556, 549, 550, 557, 558,
	559, 560, 561, 0, 563, 564, 562, 565, 566, 567,
	0, 568, 569, 551, 552, 570, 571, 0, 572, 573,
	574, 575, 576, 577, 578, 675, 0, 579, 0, 580,
	581, 582, 584, 553, 585, 590, 591, 676, 586, 587,
	588, 589, 677, 593, 594, 0, 595, 596, 0, 592,
	583, 0, 597, 598, 599, 600, 601, 602, 603, 364,
	604, 0, 605, 678, 679, 680, 681, 0, 614, 0,
	606, 607, 608, 682, 609, 683, 0, 610, 611, 612,
	613, 0, 615, 616, 0, 0, 617, 618, 619, 621,
	622, 620, 623, 0, 624, 0, 0, 625, 626, 627,
	684, 685, 686, 274, 629, 628, 630, 687, 0, 631,
	0, 0, 0, 0, 632, 633, 688, 634, 635, 636,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 638,
	639, 0, 297, 640, 298, 641, 0, 642, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 643, 644,
	645, 0, 306, 307, 646, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 647, 648, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 649, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 650, 651, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 652, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 653, 654, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 655, 0, 656, 391, 0,
	392, 393, 394, 395, 396, 3483, 658, 659, 476, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 660,
	661, 0, 662, 0, 409, 410, 0, 663, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 664,
	0, 425, 426, 0, 0, 427, 0, 0, 0, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 466, 468, 469,
	464, 465, 467, 470, 471, 462, 463, 0, 472, 461,
	0, 0, 0, 473, 474, 0, 665, 475, 666, 477,
	478, 0, 0, 479, 0, 0, 0, 481, 482, 483,
	0, 0, 484, 485, 667, 0, 486, 0, 668, 487,
	488, 480, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 498, 499, 669, 500, 501, 502, 670, 503,
	504, 505, 671, 506, 672, 507, 508, 0, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 517, 673, 518,
	519, 521, 520, 522, 0, 523, 0, 524, 525, 526,
	0, 0, 0, 0, 0, 527, 0, 529, 530, 531,
	532, 528, 533, 534, 535, 536, 537, 0, 538, 539,
	540, 0, 541, 542, 543, 544, 545, 674, 546, 0,
	547, 548, 554, 555, 556, 549, 550, 557, 558, 559,
	560, 561, 0, 563, 564, 562, 565, 566, 567, 0,
	568, 569, 551, 552, 570, 571, 0, 572, 573, 574,
	575, 576, 577, 578, 675, 0, 579, 0, 580, 581,
	582, 584, 553, 585, 590, 591, 676, 586, 587, 588,
	589, 677, 593, 594, 0, 595, 596, 0, 592, 583,
	0, 597, 598, 599, 600, 601, 602, 603, 364, 604,
	0, 605, 678, 679, 680, 681, 0, 614, 0, 606,
	607, 608, 682, 609, 683, 0, 610, 611, 612, 613,
	0, 615, 616, 0, 0, 617, 618, 619, 621, 622,
	620, 623, 0, 624, 0, 0, 625, 626, 627, 684,
	685, 686, 274, 629, 628, 630, 687, 0, 631, 0,
	0, 0, 0, 632, 633, 688, 634, 635, 636, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 638, 639,
	0, 297, 640, 298, 641, 0, 642, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 643, 644, 645,
	0, 306, 307, 646, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 647, 648, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 649, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 650, 651, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 652, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 653, 654, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 655, 0, 656, 391, 0, 392,
	393, 394, 395, 396, 3481, 658, 659, 476, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 660, 661,
	0, 662, 0, 409, 410, 0, 663, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 664, 0,
	425, 426, 0, 0, 427, 0, 0, 0, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 466, 468, 469, 464,
	465, 467, 470, 471, 462, 463, 0, 472, 461, 0,
	0, 0, 473, 474, 0, 665, 475, 666, 477, 478,
	0, 0, 479, 0, 0, 0, 481, 482, 483, 0,
	0, 484, 485, 667, 0, 486, 0, 668, 487, 488,
	480, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 498, 499, 669, 500, 501, 502, 670, 503, 504,
	505, 671, 506, 672, 507, 508, 0, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 517, 673, 518, 519,
	521, 520, 522, 0, 523, 0, 524, 525, 526, 0,
	0, 0, 0, 0, 527, 0, 529, 530, 531, 532,
	528, 533, 534, 535, 536, 537, 0, 538, 539, 540,
	0, 541, 542, 543, 544, 545, 674, 546, 0, 547,
	548, 554, 555, 556, 549, 550, 557, 558, 559, 560,
	561, 0, 563, 564, 562, 565, 566, 567, 0, 568,
	569, 551, 552, 570, 571, 0, 572, 573, 574, 575,
	576, 577, 578, 675, 0, 579, 0, 580, 581, 582,
	584, 553, 585, 590, 591, 676, 586, 587, 588, 589,
	677, 593, 594, 0, 595, 596, 0, 592, 583, 0,
	597, 598, 599, 600, 601, 602, 603, 364, 604, 0,
	605, 678, 679, 680, 681, 0, 614, 0, 606, 607,
	608, 682, 609, 683, 0, 610, 611, 612, 613, 0,
	615, 616, 0, 0, 617, 618, 619, 621, 622, 620,
	623, 0, 624, 0, 0, 625, 626, 627, 684, 685,
	686, 274, 629, 628, 630, 687, 0, 631, 0, 0,
	0, 0, 632, 633, 688, 634, 635, 636, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 637, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 638, 639, 0,
	297, 640, 298, 641, 0, 642, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 643, 644, 645, 0,
	306, 307, 646, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 647, 648, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 649, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 650, 651, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 652, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	653, 654, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 655, 0, 656, 391, 0, 392, 393,
	394, 395, 396, 3466, 658, 659, 476, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 660, 661, 0,
	662, 0, 409, 410, 0, 663, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 664, 0, 425,
	426, 0, 0, 427, 0, 0, 0, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 466, 468, 469, 464, 465,
	467, 470, 471, 462, 463, 0, 472, 461, 0, 0,
	0, 473, 474, 0, 665, 475, 666, 477, 478, 0,
	0, 479, 0, 0, 0, 481, 482, 483, 0, 0,
	484, 485, 667, 0, 486, 0, 668, 487, 488, 480,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 0,
	498, 499, 669, 500, 501, 502, 670, 503, 504, 505,
	671, 506, 672, 507, 508, 0, 509, 510, 0, 511,
	512, 513, 514, 515, 516, 517, 673, 518, 519, 521,
	520, 522, 0, 523, 0, 524, 525, 526, 0, 0,
	0, 0, 0, 527, 0, 529, 530, 531, 532, 528,
	533, 534, 535, 536, 537, 0, 538, 539, 540, 0,
	541, 542, 543, 544, 545, 674, 546, 0, 547, 548,
	554, 555, 556, 549, 550, 557, 558, 559, 560, 561,
	0, 563, 564, 562, 565, 566, 567, 0, 568, 569,
	551, 552, 570, 571, 0, 572, 573, 574, 575, 576,
	577, 578, 675, 0, 579, 0, 580, 581, 582, 584,
	553, 585, 590, 591, 676, 586, 587, 588, 589, 677,
	593, 594, 0, 595, 596, 0, 592, 583, 0, 597,
	598, 599, 600, 601, 602, 603, 364, 604, 0, 605,
	678, 679, 680, 681, 0, 614, 0, 606, 607, 608,
	682, 609, 683, 0, 610, 611, 612, 613, 0, 615,
	616, 0, 0, 617, 618, 619, 621, 622, 620, 623,
	0, 624, 0, 0, 625, 626, 627, 684, 685, 686,
	274, 629, 628, 630, 687, 0, 631, 0, 0, 0,
	0, 632, 633, 688, 634, 635, 636, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 637, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 638, 639, 0, 297,
	640, 298, 641, 0, 642, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 643, 644, 645, 0, 306,
	307, 646, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 647, 648, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	649, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 650, 651, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 652, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 653,
	654, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 655, 0, 656, 391, 0, 392, 393, 394,
	395, 396, 3071, 658, 659, 476, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 660, 661, 0, 662,
	0, 409, 410, 0, 663, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 664, 0, 425, 426,
	0, 0, 427, 0, 0, 0, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 466, 468, 469, 464, 465, 467,
	470, 471, 462, 463, 0, 472, 461, 0, 0, 0,
	473, 474, 0, 665, 475, 666, 477, 478, 0, 0,
	479, 0, 0, 0, 481, 482, 483, 0, 0, 484,
	485, 667, 0, 486, 0, 668, 487, 488, 480, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 498,
	499, 669, 500, 501, 502, 670, 503, 504, 505, 671,
	506, 672, 507, 508, 0, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 517, 673, 518, 519, 521, 520,
	522, 0, 523, 0, 524, 525, 526, 0, 0, 0,
	0, 0, 527, 0, 529, 530, 531, 532, 528, 533,
	534, 535, 536, 537, 0, 538, 539, 540, 0, 541,
	542, 543, 544, 545, 674, 546, 0, 547, 548, 554,
	555, 556, 549, 550, 557, 558, 559, 560, 561, 0,
	563, 564, 562, 565, 566, 567, 0, 568, 569, 551,
	552, 570, 571, 0, 572, 573, 574, 575, 576, 577,
	578, 675, 0, 579, 0, 580, 581, 582, 584, 553,
	585, 590, 591, 676, 586, 587, 588, 589, 677, 593,
	594, 0, 595, 596, 0, 592, 583, 0, 597, 598,
	599, 600, 601, 602, 603, 364, 604, 0, 605, 678,
	679, 680, 681, 0, 614, 0, 606, 607, 608, 682,
	609, 683, 0, 610, 611, 612, 613, 0, 615, 616,
	0, 0, 617, 618, 619, 621, 622, 620, 623, 0,
	624, 0, 0, 625, 626, 627, 684, 685, 686, 274,
	629, 628, 630, 687, 0, 631, 0, 0, 0, 0,
	632, 633, 688, 634, 635, 636, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 637, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 638, 639, 0, 297, 640,
	298, 641, 0, 642, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 643, 644, 645, 0, 306, 307,
	646, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	647, 648, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 649,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	650, 651, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 652, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 653, 654,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 655, 0, 656, 391, 0, 392, 393, 394, 395,
	396, 657, 658, 659, 476, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 660, 661, 0, 662, 0,
	409, 410, 0, 663, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 664, 0, 425, 426, 0,
	0, 427, 0, 0, 0, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 466, 468, 469, 464, 465, 467, 470,
	471, 462, 463, 0, 472, 461, 0, 0, 0, 473,
	474, 0, 665, 475, 666, 477, 478, 0, 0, 479,
	0, 0, 0, 481, 482, 483, 0, 0, 484, 485,
	667, 0, 486, 0, 668, 487, 488, 480, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 0, 498, 499,
	669, 500, 501, 502, 670, 503, 504, 505, 671, 506,
	672, 507, 508, 0, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 517, 673, 518, 519, 521, 520, 522,
	0, 523, 0, 524, 525, 526, 0, 0, 0, 0,
	0, 527, 0, 529, 530, 531, 532, 528, 533, 534,
	535, 536, 537, 0, 538, 539, 540, 0, 541, 542,
	543, 544, 545, 674, 546, 0, 547, 548, 760, 555,
	556, 549, 550, 557, 558, 559, 560, 561, 0, 563,
	564, 562, 565, 566, 567, 0, 568, 569, 551, 552,
	570, 571, 0, 572, 573, 574, 575, 576, 577, 578,
	675, 0, 579, 0, 580, 581, 582, 584, 553, 585,
	590, 591, 676, 586, 587, 588, 589, 677, 593, 594,
	0, 595, 596, 0, 592, 583, 0, 597, 598, 599,
	600, 601, 602, 603, 364, 604, 0, 605, 678, 679,
	680, 681, 0, 614, 0, 606, 607, 608, 682, 609,
	683, 0, 610, 611, 612, 613, 0, 615, 616, 0,
	0, 617, 618, 619, 621, 622, 620, 623, 0, 624,
	0, 0, 625, 626, 627, 684, 685, 686, 274, 629,
	628, 630, 687, 0, 631, 0, 0, 0, 0, 632,
	633, 688, 634, 635, 636, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	637, 0, 2311, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 638, 639, 0, 297, 640, 298,
	641, 0, 642, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 643, 644, 645, 0, 306, 307, 646,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 647,
	648, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 649, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 650,
	651, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 652, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 653, 654, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	655, 0, 656, 391, 0, 392, 393, 394, 395, 396,
	657, 658, 659, 476, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 660, 661, 0, 662, 0, 409,
	410, 0, 663, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 664, 0, 425, 426, 0, 0,
	427, 0, 0, 0, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 466, 468, 469, 464, 465, 467, 470, 471,
	462, 463, 0, 472, 461, 0, 0, 0, 473, 474,
	0, 665, 475, 666, 477, 478, 0, 0, 479, 0,
	0, 0, 481, 482, 483, 0, 0, 484, 485, 667,
	0, 486, 0, 668, 487, 488, 480, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 498, 499, 669,
	500, 501, 502, 670, 503, 504, 505, 671, 506, 672,
	507, 508, 0, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 517, 673, 518, 519, 521, 520, 522, 0,
	523, 0, 524, 525, 526, 0, 0, 0, 0, 0,
	527, 0, 529, 530, 531, 532, 528, 533, 534, 535,
	536, 537, 0, 538, 539, 540, 0, 541, 542, 543,
	544, 545, 674, 546, 0, 547, 548, 554, 555, 556,
	549, 550, 557, 558, 559, 560, 561, 0, 563, 564,
	562, 565, 566, 567, 0, 0, 569, 551, 552, 570,
	571, 0, 572, 573, 574, 575, 576, 577, 578, 675,
	0, 579, 0, 580, 581, 582, 584, 553, 585, 590,
	591, 676, 586, 587, 588, 589, 677, 593, 594, 0,
	595, 596, 0, 592, 583, 0, 597, 598, 599, 600,
	601, 602, 603, 364, 604, 0, 605, 678, 679, 680,
	681, 0, 614, 0, 606, 607, 608, 682, 609, 683,
	0, 610, 611, 612, 613, 0, 615, 616, 0, 0,
	617, 618, 619, 621, 622, 620, 623, 0, 624, 0,
	0, 625, 626, 627, 684, 685, 686, 274, 629, 628,
	630, 687, 0, 631, 0, 0, 0, 0, 632, 633,
	688, 634, 635, 636, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 638, 639, 0, 297, 640, 298, 641,
	0, 642, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 643, 644, 645, 0, 306, 307, 646, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 647, 648,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 649, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 650, 651,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 652, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 653, 654, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 655,
	0, 656, 391, 0, 392, 393, 394, 395, 396, 1293,
	658, 659, 476, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 660, 661, 0, 662, 0, 409, 410,
	0, 663, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 664, 0, 425, 426, 0, 0, 427,
	0, 0, 0, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 466, 468, 469, 464, 465, 467, 470, 471, 462,
	463, 0, 472, 461, 0, 0, 0, 473, 474, 0,
	665, 475, 666, 477, 478, 0, 0, 479, 0, 0,
	0, 481, 482, 483, 0, 0, 484, 485, 667, 0,
	486, 0, 668, 487, 488, 480, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 0, 498, 499, 669, 500,
	501, 502, 670, 503, 504, 505, 671, 506, 672, 507,
	508, 0, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 517, 673, 518, 519, 521, 520, 522, 0, 523,
	0, 524, 525, 526, 0, 0, 0, 0, 0, 527,
	0, 529, 530, 531, 532, 528, 533, 534, 535, 536,
	537, 0, 538, 539, 540, 0, 541, 542, 543, 544,
	545, 674, 546, 0, 547, 548, 554, 555, 556, 549,
	550, 557, 558, 559, 560, 561, 0, 563, 564, 562,
	565, 566, 567, 0, 568, 569, 551, 552, 570, 571,
	0, 572, 573, 574, 575, 576, 577, 578, 675, 0,
	579, 0, 580, 581, 582, 584, 553, 585, 590, 591,
	676, 586, 587, 588, 589, 677, 593, 594, 0, 595,
	596, 0, 592, 583, 0, 597, 598, 599, 600, 601,
	602, 603, 364, 604, 0, 605, 678, 679, 680, 681,
	0, 614, 0, 606, 607, 608, 682, 609, 683, 0,
	610, 611, 612, 613, 0, 615, 616, 0, 0, 617,
	618, 619, 621, 622, 620, 623, 0, 624, 0, 0,
	625, 626, 627, 684, 685, 686, 274, 629, 628, 630,
	687, 0, 631, 0, 0, 0, 0, 632, 633, 688,
	634, 635, 636, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 638, 639, 0, 297, 640, 298, 641, 0,
	642, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 643, 644, 645, 0, 306, 307, 646, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 647, 648, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 649, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 650, 651, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	652, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 653, 654, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 655, 0,
	656, 391, 0, 392, 393, 394, 395, 396, 657, 658,
	659, 476, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 660, 661, 0, 662, 0, 409, 410, 0,
	663, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 664, 0, 425, 426, 0, 0, 427, 0,
	0, 0, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	466, 468, 469, 464, 465, 467, 470, 471, 462, 463,
	0, 472, 461, 0, 0, 0, 473, 474, 0, 665,
	475, 666, 477, 478, 0, 0, 479, 0, 0, 0,
	481, 482, 483, 0, 0, 484, 485, 667, 0, 486,
	0, 668, 487, 488, 480, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 498, 499, 669, 500, 501,
	502, 670, 503, 504, 505, 671, 506, 672, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	517, 673, 518, 519, 1225, 520, 522, 0, 523, 0,
	524, 525, 526, 0, 0, 0, 0, 0, 527, 0,
	529, 530, 531, 532, 528, 533, 534, 535, 536, 537,
	0, 538, 539, 540, 0, 541, 542, 543, 544, 545,
	674, 546, 0, 547, 548, 554, 555, 556, 549, 550,
	557, 558, 559, 560, 561, 0, 563, 564, 562, 565,
	566, 567, 0, 568, 569, 551, 552, 570, 571, 0,
	572, 573, 574, 575, 576, 577, 578, 675, 0, 579,
	0, 580, 581, 582, 584, 553, 585, 590, 591, 676,
	586, 587, 588, 589, 677, 593, 594, 0, 595, 596,
	0, 592, 583, 0, 597, 598, 599, 600, 601, 602,
	603, 364, 604, 0, 605, 678, 679, 680, 681, 0,
	614, 0, 606, 607, 608, 682, 609, 683, 0, 610,
	611, 612, 613, 0, 615, 616, 0, 0, 617, 618,
	619, 621, 622, 620, 623, 0, 624, 0, 0, 625,
	626, 627, 684, 685, 686, 274, 629, 628, 630, 687,
	0, 631, 0, 0, 0, 0, 632, 633, 688, 634,
	635, 636, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 638, 639, 0, 297, 640, 298, 641, 0, 642,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	643, 644, 645, 0, 306, 307, 646, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 647, 648, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 649, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 650, 651, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 652,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 653, 654, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 655, 0, 656,
	0, 0, 392, 393, 394, 395, 396, 657, 658, 659,
	476, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 660, 661, 0, 662, 0, 409, 410, 0, 663,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 664, 0, 425, 426, 0, 0, 427, 0, 0,
	0, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 466,
	468, 469, 464, 465, 467, 470, 471, 462, 463, 0,
	472, 461, 0, 0, 0, 473, 474, 0, 665, 475,
	666, 477, 478, 0, 0, 479, 0, 0, 0, 481,
	482, 483, 0, 0, 484, 485, 667, 0, 486, 0,
	668, 487, 488, 480, 489, 490, 0, 492, 493, 494,
	495, 496, 497, 0, 498, 499, 669, 500, 501, 502,
	670, 503, 504, 505, 671, 506, 672, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 514, 0, 516, 517,
	673, 518, 519, 521, 520, 522, 0, 523, 0, 524,
	525, 526, 0, 0, 0, 0, 0, 527, 0, 529,
	530, 531, 532, 528, 533, 534, 535, 536, 537, 0,
	538, 539, 540, 0, 541, 542, 543, 544, 545, 674,
	0, 0, 547, 548, 554, 555, 556, 549, 550, 557,
	558, 559, 560, 561, 0, 563, 564, 562, 565, 566,
	567, 0, 568, 569, 551, 552, 570, 571, 0, 572,
	573, 574, 575, 576, 577, 578, 675, 0, 579, 0,
	580, 581, 582, 584, 553, 585, 590, 591, 676, 586,
	587, 588, 589, 677, 593, 594, 0, 595, 596, 0,
	592, 583, 0, 597, 598, 599, 600, 601, 602, 603,
	364, 604, 0, 605, 678, 679, 680, 681, 0, 614,
	0, 606, 607, 608, 682, 609, 683, 0, 610, 611,
	612, 613, 0, 615, 616, 0, 0, 617, 618, 619,
	621, 622, 620, 623, 0, 624, 0, 0, 625, 626,
	627, 684, 685, 686, 0, 629, 628, 630, 687, 0,
	631, 0, 0, 0, 0, 632, 633, 688, 634, 635,
	636, 1805, 1806, 0, 1838, 1839, 1840, 1849, 1850, 1851,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1842, 1836, 0, 0, 0, 0, 0,
	0, 1808, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 1805, 1806, 0, 1838, 1839, 1840, 1849, 1850,
	1851, 0, 0, 0, 0, 0, 0, 1861, 0, 0,
	0, 0, 0, 0, 1842, 1836, 1807, 0, 0, 0,
	0, 0, 1808, 0, 0, 0, 1827, 0, 0, 0,
	0, 1855, 0, 0, 0, 1824, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 1831, 1832, 1833, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 1831, 1832, 1833, 0, 0, 0, 0,
	1846, 0, 1813, 1856, 0, 0, 0, 0, 0, 0,
	1835, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 1853,
	0, 0, 0, 0, 0, 0, 1822, 1823, 0, 0,
	0, 1846, 0, 0, 1856, 0, 0, 0, 0, 0,
	0, 1835, 1837, 0, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 1828,
	1853, 0, 0, 0, 0, 0, 0, 1822, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 1854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 1805, 1806, 0, 1838,
	1839, 1840, 1849, 1850, 1851, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 1847, 1842, 1836,
	0, 0, 0, 0, 0, 0, 1808, 0, 0, 0,
	0, 1829, 0, 0, 0, 1855, 0, 1805, 1806, 0,
	1838, 1839, 1840, 1849, 1850, 1851, 0, 0, 1860, 0,
	0, 0, 1861, 0, 0, 0, 0, 0, 1847, 1842,
	1836, 1807, 0, 0, 0, 0, 0, 1808, 0, 0,
	0, 1827, 0, 0, 0, 0, 1855, 0, 0, 0,
	1824, 0, 0, 0, 0, 0, 0, 0, 0, 1860,
	0, 0, 0, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	1845, 1824, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 1820, 1826, 1848, 1825, 1821, 0, 1818, 1816, 1817,
	1809, 1810, 1811, 1812, 1814, 1815, 0, 0, 0, 0,
	4680, 0, 0, 0, 0, 0, 1830, 1831, 1832, 1833,
	0, 1845, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 1819, 1820, 1826, 1848, 1825, 1821, 0, 1818, 1816,
	1817, 1809, 1810, 1811, 1812, 1814, 1815, 0, 0, 0,
	0, 4595, 0, 0, 0, 0, 0, 1830, 1831, 1832,
	1833, 0, 0, 0, 0, 1846, 0, 1813, 1856, 0,
	0, 0, 0, 0, 0, 1835, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1852, 0, 1853, 0, 0, 0, 0, 0,
	0, 1822, 1823, 0, 0, 0, 1846, 0, 0, 1856,
	0, 0, 0, 0, 0, 0, 1835, 1837, 0, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 1828, 1853, 0, 0, 0, 0,
	0, 0, 1822, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 1805, 1806, 0, 1838, 1839, 1840, 1849, 1850, 1851,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 1842, 1836, 0, 0, 0, 0, 0,
	0, 1808, 0, 0, 0, 0, 1829, 0, 0, 0,
	1855, 0, 1805, 1806, 0, 1838, 1839, 1840, 1849, 1850,
	1851, 0, 0, 1860, 0, 0, 0, 1861, 0, 0,
	0, 0, 0, 1847, 1842, 1836, 1807, 0, 0, 0,
	0, 0, 1808, 0, 0, 0, 1827, 0, 0, 0,
	0, 1855, 0, 0, 0, 1824, 0, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 1845, 1824, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 1820, 1826, 1848, 1825,
	1821, 0, 1818, 1816, 1817, 1809, 1810, 1811, 1812, 1814,
	1815, 0, 0, 0, 0, 4553, 0, 0, 0, 0,
	0, 1830, 1831, 1832, 1833, 0, 1845, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 1819, 1820, 1826, 1848,
	1825, 1821, 0, 1818, 1816, 1817, 1809, 1810, 1811, 1812,
	1814, 1815, 0, 0, 0, 0, 4552, 0, 0, 0,
	0, 0, 1830, 1831, 1832, 1833, 0, 0, 0, 0,
	1846, 0, 1813, 1856, 0, 0, 0, 0, 0, 0,
	1835, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 1853,
	0, 0, 0, 0, 0, 0, 1822, 1823, 0, 0,
	0, 1846, 0, 0, 1856, 0, 0, 0, 0, 0,
	0, 1835, 1837, 0, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 1828,
	1853, 0, 0, 0, 0, 0, 0, 1822, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 1854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 1805, 1806, 0, 1838,
	1839, 1840, 1849, 1850, 1851, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 1847, 1842, 1836,
	0, 0, 0, 0, 0, 0, 1808, 0, 0, 0,
	0, 1829, 0, 0, 0, 1855, 0, 1805, 1806, 0,
	1838, 1839, 1840, 1849, 1850, 1851, 0, 0, 1860, 0,
	0, 0, 1861, 0, 0, 0, 0, 0, 1847, 1842,
	1836, 1807, 0, 0, 0, 0, 0, 1808, 0, 0,
	0, 1827, 0, 0, 0, 0, 1855, 0, 0, 0,
	1824, 0, 0, 0, 0, 0, 0, 0, 0, 1860,
	0, 0, 0, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	1845, 1824, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 1820, 1826, 1848, 1825, 1821, 0, 1818, 1816, 1817,
	1809, 1810, 1811, 1812, 1814, 1815, 0, 0, 0, 0,
	4362, 0, 0, 0, 0, 0, 1830, 1831, 1832, 1833,
	0, 1845, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 1819, 1820, 1826, 1848, 1825, 1821, 0, 1818, 1816,
	1817, 1809, 1810, 1811, 1812, 1814, 1815, 0, 0, 0,
	0, 4195, 0, 0, 0, 0, 0, 1830, 1831, 1832,
	1833, 0, 0, 0, 0, 1846, 0, 1813, 1856, 0,
	0, 0, 0, 0, 0, 1835, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1852, 0, 1853, 0, 0, 0, 0, 0,
	0, 1822, 1823, 0, 0, 0, 1846, 0, 0, 1856,
	0, 0, 0, 0, 0, 0, 1835, 1837, 0, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 1828, 1853, 0, 0, 0, 0,
	0, 0, 1822, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 1805, 1806, 0, 1838, 1839, 1840, 1849, 1850, 1851,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 1842, 1836, 0, 0, 0, 0, 0,
	0, 1808, 0, 0, 0, 0, 1829, 0, 0, 0,
	1855, 0, 1805, 1806, 0, 1838, 1839, 1840, 1849, 1850,
	1851, 0, 0, 1860, 0, 0, 0, 1861, 0, 0,
	0, 0, 0, 1847, 1842, 1836, 1807, 0, 0, 0,
	0, 0, 1808, 0, 0, 0, 1827, 0, 0, 0,
	0, 1855, 0, 0, 0, 1824, 0, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 1845, 1824, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 1820, 1826, 1848, 1825,
	1821, 0, 1818, 1816, 1817, 1809, 1810, 1811, 1812, 1814,
	1815, 0, 0, 0, 0, 4123, 0, 0, 0, 0,
	0, 1830, 1831, 1832, 1833, 0, 1845, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 1819, 1820, 1826, 1848,
	1825, 1821, 0, 1818, 1816, 1817, 1809, 1810, 1811, 1812,
	1814, 1815, 0, 0, 0, 0, 4122, 0, 0, 0,
	0, 0, 1830, 1831, 1832, 1833, 0, 0, 0, 0,
	1846, 0, 1813, 1856, 0, 0, 0, 0, 0, 0,
	1835, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 1853,
	0, 0, 0, 0, 0, 0, 1822, 1823, 0, 0,
	0, 1846, 0, 0, 1856, 0, 0, 0, 0, 0,
	0, 1835, 1837, 0, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 1828,
	1853, 0, 0, 0, 0, 0, 0, 1822, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 1854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 1805, 1806, 0, 1838,
	1839, 1840, 1849, 1850, 1851, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 1847, 1842, 1836,
	0, 0, 0, 0, 0, 0, 1808, 0, 0, 0,
	0, 1829, 0, 0, 0, 1855, 0, 1805, 1806, 0,
	1838, 1839, 1840, 1849, 1850, 1851, 0, 0, 1860, 0,
	0, 0, 1861, 0, 0, 0, 0, 0, 1847, 1842,
	1836, 1807, 0, 0, 0, 0, 0, 1808, 0, 0,
	0, 1827, 0, 0, 0, 0, 1855, 0, 0, 0,
	1824, 0, 0, 0, 0, 0, 0, 0, 0, 1860,
	0, 0, 0, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	1845, 1824, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 1820, 1826, 1848, 1825, 1821, 0, 1818, 1816, 1817,
	1809, 1810, 1811, 1812, 1814, 1815, 0, 0, 0, 0,
	4121, 0, 0, 0, 0, 0, 1830, 1831, 1832, 1833,
	0, 1845, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 1819, 1820, 1826, 1848, 1825, 1821, 0, 1818, 1816,
	1817, 1809, 1810, 1811, 1812, 1814, 1815, 0, 0, 0,
	0, 3777, 0, 0, 0, 0, 0, 1830, 1831, 1832,
	1833, 0, 0, 0, 0, 1846, 0, 1813, 1856, 0,
	0, 0, 0, 0, 0, 1835, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1852, 0, 1853, 0, 0, 0, 0, 0,
	0, 1822, 1823, 0, 0, 0, 1846, 0, 0, 1856,
	0, 0, 0, 0, 0, 0, 1835, 1837, 0, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 1828, 1853, 0, 0, 0, 0,
	0, 0, 1822, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 1805, 1806, 0, 1838, 1839, 1840, 1849, 1850, 1851,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 1842, 1836, 0, 0, 0, 0, 0,
	0, 1808, 0, 0, 0, 0, 1829, 0, 0, 0,
	1855, 0, 1805, 1806, 0, 1838, 1839, 1840, 1849, 1850,
	1851, 0, 0, 1860, 0, 0, 0, 1861, 0, 0,
	0, 0, 0, 1847, 1842, 1836, 1807, 0, 0, 0,
	0, 0, 1808, 0, 0, 0, 1827, 0, 0, 0,
	0, 1855, 0, 0, 0, 1824, 0, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 1845, 1824, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 1820, 1826, 1848, 1825,
	1821, 0, 1818, 1816, 1817, 1809, 1810, 1811, 1812, 1814,
	1815, 0, 0, 0, 0, 3279, 0, 0, 0, 0,
	0, 1830, 1831, 1832, 1833, 0, 1845, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 1819, 1820, 1826, 1848,
	1825, 1821, 0, 1818, 1816, 1817, 1809, 1810, 1811, 1812,
	1814, 1815, 0, 0, 0, 0, 3278, 0, 0, 0,
	0, 0, 1830, 1831, 1832, 1833, 0, 0, 0, 0,
	1846, 0, 1813, 1856, 0, 0, 0, 0, 0, 0,
	1835, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 1853,
	0, 0, 0, 0, 0, 0, 1822, 1823, 0, 0,
	0, 1846, 0, 0, 1856, 0, 0, 0, 0, 0,
	0, 1835, 1837, 0, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 1828,
	1853, 0, 0, 0, 0, 0, 0, 1822, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 1854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 1805, 1806, 0, 1838,
	1839, 1840, 1849, 1850, 1851, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 1847, 1842, 1836,
	0, 0, 0, 0, 0, 0, 1808, 0, 0, 0,
	0, 1829, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1860, 0,
	0, 0, 1861, 0, 0, 0, 0, 0, 1847, 0,
	0, 1807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 0, 0, 0, 0, 0, 0, 0, 0, 1860,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 1820, 1826, 1848, 1825, 1821, 0, 1818, 1816, 1817,
	1809, 1810, 1811, 1812, 1814, 1815, 0, 0, 0, 0,
	3277, 0, 0, 0, 0, 0, 1830, 1831, 1832, 1833,
	0, 1845, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 1819, 1820, 1826, 1848, 1825, 1821, 0, 1818, 1816,
	1817, 1809, 1810, 1811, 1812, 1814, 1815, 0, 0, 0,
	0, 3276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 1856, 0,
	0, 0, 0, 0, 0, 1835, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1852, 0, 1853, 0, 0, 0, 0, 0,
	0, 1822, 1823, 0, 0, 0, 0, 0, 0, 1805,
	1806, 0, 1838, 1839, 1840, 1849, 1850, 1851, 0, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1842, 1836, 0, 1828, 0, 0, 0, 0, 1808,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1861, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 0, 0, 0, 1854, 0,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 0, 0, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 1830,
	1831, 1832, 1833, 0, 0, 0, 0, 0, 0, 1813,
	4833, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 1805, 1806, 0, 1838, 1839, 1840,
	1849, 1850, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 0, 1842, 1836, 1846, 0,
	0, 1856, 0, 0, 1808, 0, 0, 0, 1835, 1837,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1860, 0, 1852, 0, 1853, 0, 0,
	1861, 0, 0, 0, 1822, 1823, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 1844, 0, 0, 0, 0, 0, 1824, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 1820, 1826, 1848, 1825,
	1821, 1854, 1818, 1816, 1817, 1809, 1810, 1811, 1812, 1814,
	1815, 0, 0, 3241, 0, 0, 0, 0, 0, 1843,
	0, 0, 0, 0, 1830, 1831, 1832, 1833, 0, 0,
	1858, 0, 0, 0, 1813, 0, 3341, 0, 0, 0,
	0, 3340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4832, 0, 0, 0, 0, 0, 0, 1805,
	1806, 0, 1838, 1839, 1840, 1849, 1850, 1851, 0, 0,
	0, 0, 0, 1846, 0, 0, 1856, 0, 0, 0,
	0, 1842, 1836, 1835, 1837, 1834, 0, 3212, 0, 1808,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	1852, 0, 1853, 0, 0, 0, 0, 0, 1829, 1822,
	1823, 0, 0, 0, 0, 1861, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 0, 0, 1844, 0, 0,
	0, 0, 0, 0, 1827, 1847, 0, 0, 0, 0,
	0, 0, 1828, 1824, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1860, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3213, 0, 0, 1854, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 1830,
	1831, 1832, 1833, 0, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 1820,
	1826, 1848, 1825, 1821, 0, 1818, 1816, 1817, 1809, 1810,
	1811, 1812, 1814, 1815, 0, 0, 0, 0, 1846, 0,
	1834, 1856, 0, 0, 0, 0, 0, 0, 1835, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 1852, 0, 1853, 0, 0,
	0, 0, 0, 0, 1822, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2749, 0, 0, 0,
	1847, 0, 1844, 1805, 1806, 0, 1838, 1839, 1840, 1849,
	1850, 1851, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 1842, 1836, 0, 0, 0,
	2748, 1860, 0, 1808, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	0, 1854, 0, 0, 0, 0, 0, 0, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 1843,
	0, 0, 0, 0, 0, 0, 0, 1824, 0, 0,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 1820, 1826, 1848, 1825, 1821, 0,
	1818, 1816, 1817, 1809, 1810, 1811, 1812, 1814, 1815, 0,
	0, 0, 1805, 1806, 0, 1838, 1839, 1840, 1849, 1850,
	1851, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 1842, 1836, 0, 0, 0, 0,
	0, 0, 1808, 1830, 1831, 1832, 1833, 0, 1829, 0,
	0, 1855, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1861, 0,
	0, 0, 0, 0, 0, 1847, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 1846, 0, 0, 1856, 1824, 0, 0, 0,
	0, 0, 1835, 1837, 0, 0, 1860, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	0, 1853, 0, 0, 0, 0, 0, 0, 1822, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 1831, 1832, 1833, 0, 0, 1845, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 1819, 1820,
	1826, 1848, 1825, 1821, 0, 1818, 1816, 1817, 1809, 1810,
	1811, 1812, 1814, 1815, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 1843, 1856, 0, 0, 0, 0, 0,
	0, 1835, 1837, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 0,
	1853, 0, 0, 0, 0, 0, 0, 1822, 1823, 0,
	0, 0, 0, 0, 0, 1805, 1806, 0, 1838, 1839,
	1840, 1849, 1850, 1851, 0, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1842, 1836, 1834,
	1828, 0, 0, 0, 0, 1808, 0, 0, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 1861, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 0, 0, 0, 1854, 0, 0, 0, 0, 1847,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	0, 0, 1843, 1079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	1860, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 1830, 1831, 1832, 1833, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 1829, 1845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 1820, 1826, 1848, 1825, 1821, 0, 1818,
	1816, 1817, 1809, 1810, 1811, 1812, 1814, 1815, 1847, 0,
	0, 0, 0, 0, 1846, 0, 0, 1856, 0, 0,
	0, 0, 0, 0, 1835, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1860,
	0, 1852, 0, 1853, 0, 0, 0, 0, 0, 0,
	1822, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 1820, 1826, 1848, 1825, 1821, 1854, 1818, 1816,
	1817, 1809, 1810, 1811, 1812, 1814, 1815, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1805, 1806, 0, 1838, 1839, 1840, 1849, 1850,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1842, 1836, 0, 0, 0, 0,
	0, 1834, 1808, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 0, 1861, 0,
	0, 0, 0, 0, 0, 1805, 1806, 1807, 1838, 1839,
	1840, 1849, 1850, 1851, 0, 0, 0, 1827, 0, 0,
	0, 1847, 0, 0, 0, 0, 1824, 1842, 1836, 0,
	0, 0, 3342, 0, 0, 1808, 0, 0, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 0,
	0, 1861, 0, 0, 0, 3758, 0, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 1831, 1832, 1833, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 3347,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 1820, 1826, 1848, 1825, 1821,
	0, 1818, 1816, 1817, 1809, 1810, 1811, 1812, 1814, 1815,
	0, 1846, 0, 0, 1856, 0, 0, 0, 0, 0,
	0, 1835, 1837, 0, 0, 1830, 1831, 1832, 1833, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 1852, 0,
	1853, 0, 0, 0, 0, 0, 0, 1822, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 0, 1856, 0, 0,
	1828, 0, 0, 0, 1835, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 1853, 0, 0, 0, 0, 0, 0,
	1822, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 0, 0, 0, 1844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1805, 1806, 0, 1838, 1839, 1840, 1849, 1850,
	1851, 0, 0, 0, 0, 0, 0, 0, 1847, 0,
	0, 0, 0, 0, 1842, 1836, 0, 0, 0, 0,
	0, 1834, 1808, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 1860,
	0, 0, 0, 0, 1829, 0, 0, 0, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 1847, 0, 0, 0, 0, 1824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 1820, 1826, 1848, 1825, 1821, 0, 1818, 1816,
	1817, 1809, 1810, 1811, 1812, 1814, 1815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 1831, 1832, 1833, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 1820, 1826, 1848, 1825, 1821,
	0, 1818, 1816, 1817, 1809, 1810, 1811, 1812, 1814, 1815,
	0, 1846, 0, 0, 1856, 0, 0, 0, 0, 0,
	0, 1835, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 0,
	1853, 0, 0, 0, 0, 0, 0, 1822, 1823, 0,
	0, 0, 0, 0, 0, 1805, 1806, 0, 1838, 1839,
	1840, 1849, 1850, 1851, 0, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1842, 1836, 0,
	1828, 0, 3280, 0, 0, 1808, 0, 0, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1861, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 0, 0, 0, 1854, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	0, 0, 1843, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1805, 1806, 0, 1838, 1839, 1840,
	1849, 1850, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 1836, 1834, 0,
	0, 0, 0, 0, 1808, 1830, 1831, 1832, 1833, 0,
	0, 0, 0, 1855, 0, 1813, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	1861, 0, 0, 0, 0, 0, 0, 1805, 1806, 1807,
	1838, 1839, 1840, 1849, 1850, 1851, 0, 0, 1847, 1827,
	0, 0, 0, 0, 1846, 0, 0, 1856, 1824, 1842,
	1836, 0, 0, 0, 1835, 1837, 0, 1808, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 1860,
	0, 1852, 0, 1853, 0, 0, 0, 0, 0, 0,
	1822, 1823, 0, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 1844, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 1831, 1832, 1833, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 1820, 1826, 1848, 1825, 1821, 1854, 1818, 1816,
	1817, 1809, 1810, 1811, 1812, 1814, 1815, 0, 0, 0,
	0, 0, 0, 1846, 0, 1843, 1856, 0, 0, 0,
	0, 0, 0, 1835, 1837, 0, 1858, 1830, 1831, 1832,
	1833, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	1852, 0, 1853, 0, 0, 0, 0, 0, 0, 1822,
	1823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1844, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 0, 0, 1856,
	0, 1834, 1828, 0, 0, 0, 1835, 1837, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 1829, 1853, 0, 0, 0, 0,
	0, 0, 1822, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 0, 0, 0,
	1844, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 1820, 1826, 1848, 1825, 1821,
	0, 1818, 1816, 1817, 1809, 1810, 1811, 1812, 1814, 1815,
	1847, 0, 1805, 1806, 0, 1838, 1839, 1840, 1849, 1850,
	1851, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1842, 1836, 0, 0, 0, 0,
	0, 1860, 1808, 0, 0, 0, 1829, 0, 0, 0,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1861, 0,
	0, 0, 0, 1847, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 2326, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 1820, 1826, 1848, 1825, 1821, 0,
	1818, 1816, 1817, 1809, 1810, 1811, 1812, 1814, 1815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 1831, 1832, 1833, 1845, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 1819, 1820, 1826, 1848,
	1825, 1821, 0, 1818, 1816, 1817, 1809, 1810, 1811, 1812,
	1814, 1815, 0, 0, 1805, 1806, 0, 1838, 1839, 1840,
	1849, 1850, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 1856, 0, 0, 1836, 0, 0,
	0, 1835, 1837, 0, 1808, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 1852, 0,
	1853, 0, 0, 0, 0, 0, 0, 1822, 1823, 0,
	1861, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 1844, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 1830, 1831, 1832, 1833, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 0, 0, 1856, 0, 1834, 0,
	0, 0, 0, 1835, 1837, 0, 0, 0, 0, 0,
	0, 964, 0, 1013, 0, 0, 0, 0, 0, 0,
	1852, 1829, 1853, 0, 0, 0, 0, 0, 0, 1822,
	1823, 0, 0, 0, 0, 0, 0, 972, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1844, 1847, 0,
	0, 0, 0, 987, 0, 970, 969, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 989, 0, 1860,
	0, 0, 0, 971, 0, 0, 0, 0, 974, 0,
	0, 0, 0, 1022, 0, 0, 0, 0, 0, 0,
	0, 0, 984, 985, 0, 0, 1854, 0, 0, 0,
	0, 1002, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1014,
	976, 0, 0, 0, 0, 1858, 977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 978, 0,
	0, 1819, 1820, 1826, 1848, 1825, 1821, 1011, 1818, 1816,
	1817, 1809, 1810, 1811, 1812, 1814, 1815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 1012, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 980, 0, 0, 0, 0, 0,
	0, 0, 968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 981, 982, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	990, 988, 0, 0, 0, 0, 0, 0, 983, 0,
	0, 1860, 999, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1019, 1010, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1015, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 1820, 1826, 1848, 1825, 1821, 0,
	1818, 1816, 1817, 1809, 1810, 1811, 1812, 1814, 1815, 0,
	0, 0, 0, 0, 0, 975, 0, 0, 1021, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 973, 0, 0, 0, 1006, 1007, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1009,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1016, 1004, 0, 0, 0, 0, 0, 0,
	0, 1020, 1000, 0, 0, 993, 991, 0, 996, 0,
	0, 0, 0, 0, 997, 0, 0, 966, 0, 1017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 967, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1008, 0, 998, 0, 0, 0, 0,
	0, 995, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1018, 0, 0, 0, 0, 0, 0, 0,
	1001, 0, 0, 0, 0, 0, 0, 0, 0, 979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1003, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1005,
}

var sqlPact = [...]int{
	12983, -1000, -1000, -1000, -1000, 269, -1000, -1000, 267, 266,
	262, 261, 260, 259, 255, 252, 248, 234, 225, -1000,
	-1000, -1000, -1000, -1000, -1000, 224, -1000, -1000, 223, -1000,
	222, 221, 213, -1000, -1000, 207, -1000, 198, -1000, -1000,
	-1000, -1000, 196, 193, 192, 94545, 93989, 95094, 2421, 119446,
	101710, 2357, 84023, 118890, 83467, 118334, 2311, 11708, 117778, 2850,
	191, -1000, 117222, 190, 189, 188, -1000, 116666, -1000, 1988,
	-1000, 185, -1000, 7078, 70615, 184, 181, 180, 176, 2440,
	175, -1000, 174, 172, -1000, -1000, 171, -1000, 12208, 1666,
	-1000, 169, 168, -1000, 659, 99493, 167, 164, 161, 2657,
	158, 157, 68959, 155, 152, 151, 2424, 3054, -1000, -1000,
	2181, -1000, -1000, 148, 147, 145, 143, 139, 138, 137,
	136, 134, 130, 128, 126, 123, -1000, 122, 120, 117,
	101, 99, -1000, 97, 96, 95, -1000, 94, -1000, 93,
	92, 91, 87, 85, 81, 80, 77, 72, 71, 69,
	67, 63, 54, 134649, -1000, -1000, 50, 2060, 1724, 1721,
	1719, 1709, 1708, 1016, 48, 47, 46, 45, 44, 43,
	42, 41, 40, 37, 35, 32, 30, 29, 28, 21,
	19, 18, 165, 17, 13, 12, 11, 10, 9, 8,
	2330, -1000, 1901, 1087, 33102, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 127132, 119995, 5, -119, 4, -1000, 3447,
	1107, 57191, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	329, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 539, 2124, 785, -1000, -1000, -1000, 116117, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2420, -49, -1000, 2172,
	-1000, -1000, -1000, -1000, -1000, 782, -1000, 2419, 245, 2358,
	-1000, -1000, -1000, 3492, 2553, 3863, 3862, 3861, 3860, 3859,
	126583, 1931, 3857, 2640, 3855, 3854, 3852, 3851, 3850, 3848,
	3845, -1000, 93433, 1088, 92877, 92321, 3497, 115568, 91765, 115012,
	77362, 49206, 1086, 3490, -1000, -1000, -1000, -1000, -1000, -1000,
	119995, -1000, 1085, -1000, -1000, 3844, 2146, 779, 101154, -1000,
	-1000, 114456, 1880, -1000, -1000, -1000, 961, 1276, 34815, 34815,
	34815, 328, -1000, -1000, -1000, -1000, -1000, -1000, 3843, 3841,
	3840, 3839, 3837, -1000, -1000, 82911, 26062, 82355, 81799, 113900,
	25494, 91209, 90653, 3836, 3835, 3831, 113344, 76794, 3596, 3594,
	1077, 2164, 1468, -1000, -1000, -1000, -1000, -1000, -1000, -21,
	72833, 3636, 119995, -1000, 327, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 48635, 732, 48064, 889, 47493, 884, 112788, -1000,
	-1000, -1000, -1000, 76226, -1000, 112232, 2550, 3830, 3828, 1180,
	3827, 3381, 1927, 3826, 2021, 1260, 3825, 3824, 3823, 3822,
	3821, 3817, 3814, 1579, 111676, 3117, 1618, 111120, 1846, 75658,
	1074, 90097, 95094, 2823, 110564, 1496, 1477, -1000, -1000, -1000,
	-1000, 3194, 3020, 3017, 1377, -1000, -1000, -1000, -1000, 60570,
	5859, 5273, -1000, -1000, 7996, 110008, 63400, 95094, 95094, -1000,
	-1000, -1000, -1000, -1000, -1000, 46922, 704, 46351, 891, 109452,
	-1000, -1000, 61136, 3044, -1000, -1000, -1000, -1000, -1000, 108896,
	45780, 660, 45209, 881, 119995, -1000, 3116, 2033, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2397, 1686, 3647, 2873,
	75090, 2138, 1435, 3457, 3193, 3192, 1541, 2160, 3191, 3813,
	2704, 3190, 3189, 3187, 3175, 3169, 1701, 2741, 295, 2762,
	32531, 3102, 1852, 44638, 1636, 1548, 3168, 3167, 3665, 2150,
	2112, 2418, 81243, 3812, 3811, 3433, 3163, 3158, 2928, 3156,
	-1000, 3040, 1576, -1000, -1000, -1000, -1000, -1000, 1510, -1000,
	-1000, -1000, -1000, -1000, 85670, -1000, -1000, 1470, -1000, -1000,
	1470, -1000, -1000, -1000, -1000, -1000, 1451, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1901,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1934, -1000, 2143, -1000, -1000, 2679, 3427, 3427, 3427, 3489,
	518, 516, -1000, 165, -1000, -1000, 133826, -1000, -1000, 49777,
	49777, 49777, 49777, 49777, 49777, 49777, 49777, 2281, -1000, 778,
	-1000, -1000, 825, -1000, 777, 714, 652, -1000, -1000, -1000,
	-1000, -1000, -1000, 775, -1000, -1000, -1000, -1000, -1000, -1000,
	3636, -1000, 28972, -1000, -1000, -1000, 509, 770, 49777, -1000,
	-1000, 3683, 3682, 1094, -1000, 326, 974, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3114,
	769, 763, -1000, 761, 758, 757, 756, 753, -1000, 752,
	-1000, 751, 750, 748, 747, 742, 740, 739, 731, -1000,
	2192, -1000, -1000, -1000, -1000, -1000, -1000, 702, 701, 701,
	701, -1000, 1069, -1000, -1000, -1000, 345, 700, 344, 699,
	697, 695, -1000, 730, 729, 727, 726, 725, 724, 721,
	719, 717, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1063,
	-1000, -1000, -1000, -1000, -22, 119995, -1000, 539, -22, -1000,
	-1000, 716, -1000, 37128, 37128, 37128, -1000, -1000, 2416, 49777,
	-1000, 2490, -1000, -16, -16, 920, 58868, -1000, 56053, 920,
	302, 833, 64512, -1000, 3025, -1000, -1000, 715, 324, -1000,
	-1000, -1000, -1000, 26628, 3024, 119995, 119995, 119995, 95094, 95094,
	95094, 3809, 3247, 49777, -1000, -1000, 70057, 119995, 95643, -1000,
	-1000, 3577, 71169, 69508, 119995, 3113, 108340, 3808, -1000, -1000,
	-1000, -1000, -1000, 3285, 3807, 3806, 3804, -1000, 119995, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 230, 3284, -1000, -1000,
	98937, 230, 3283, -1000, 230, 3281, -1000, 98388, -1000, -1000,
	2359, 3280, -1000, -1000, 243, 3278, -1000, -1000, -1000, 238,
	3277, -1000, -1000, 319, -86, 3271, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 133826, -1000,
	-1000, -1000, 107784, -1000, 3426, -1000, 119995, -1000, 49777, -1000,
	-1000, 3576, 1653, 78484, 3528, -1000, -1000, -30, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2608, 2644, 1184, 2437, -1000,
	3321, 1946, 34815, 3369, -1000, -1000, -1000, -1000, -1000, 311,
	26628, -1000, -1000, -1000, -1000, -1000, -1000, 2633, 3270, 1457,
	-1000, 2435, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2147, 3265, -1000, 2085, 3264, 2113, -1000, -1000, 2383, -1000,
	3401, -1000, -1000, 1816, 3261, -15, -1000, -1000, 2312, -1000,
	-1000, -1000, -1000, 2145, -1000, 1363, 3259, -1000, 2872, 2872,
	89541, 3243, 62834, 61136, 72833, -26, -1000, -1000, -1000, -1000,
	-287, -1000, 24922, 133826, -1000, -1000, -1000, -1000, 1871, 133826,
	970, -1000, -1000, 3257, -1000, 133826, 968, -1000, -1000, 3256,
	-1000, 2739, -1000, 3112, -1000, -1000, 2510, 2509, -1000, -1000,
	3802, -1000, -1000, 3800, -1000, 3796, 3794, 3792, -1000, 1847,
	2142, 3791, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	88992, 2412, -1000, -1000, 87880, 3111, -1000, 2508, 3527, -1000,
	88436, 1073, -1000, 1030, 2505, -1000, 97839, 1079, 2496, -1000,
	3790, 3493, 2833, 1030, 2495, -1000, -1000, -1000, -1000, -1000,
	836, -1000, 66737, -1000, 66737, -1000, 1748, -1000, 126034, -16,
	95094, 3636, -1000, -52, -1000, -1000, -1000, 1107, -1000, 59999,
	-1000, 59999, 100598, 77928, 1005, 874, 68403, 133763, -1000, 1046,
	-1000, -1000, 133826, -1000, -1000, -1000, 2725, -1000, -156, 2870,
	-1000, 77928, 62268, 2716, -1000, 133826, -1000, -1000, -1000, -1000,
	133826, -1000, -1000, -1000, 77928, 87880, -1000, 107228, 87331, -1000,
	-1000, 1568, 2707, -1000, -1000, -1000, 77928, 1367, 77928, 77928,
	77928, -1000, 106672, -1000, -1000, 2165, 1677, 3403, 2163, 95094,
	-1000, 1938, -1000, -1000, -1000, 3435, 3240, 119995, -1000, -1000,
	3109, -1000, 72284, 97290, -1000, 96741, -1000, 96192, -1000, 95094,
	-1000, 95094, -1000, 3786, 3782, 3778, -1000, -1000, 3772, -1000,
	3771, 3439, -1000, 698, 44067, 133826, 3432, -1000, 3770, 2078,
	3102, 133826, -1000, 3203, 1726, 1713, 119995, -1000, -1000, 119995,
	-1000, 119995, -1000, -1000, -1000, 1639, -1000, -1000, 2596, -1000,
	-1000, -1000, -1000, 95094, 95094, 95094, 95094, 1591, -1000, 43496,
	-1000, -1000, 3157, 3768, 1821, -1000, 1885, -1000, 3022, 3431,
	-1000, 1562, 1865, -1000, -1000, 247, -1000, -1000, -30, -1000,
	125485, -1000, 2679, -1000, 119995, -1000, 2639, 3084, 3095, 1674,
	2399, 2703, -1000, 42925, 2669, 53203, 2432, 165, -1000, -1000,
	165, 165, 34244, -1000, -1000, 71169, 71169, 26628, 1464, 49777,
	49777, 49777, 49777, 49777, 49777, 49777, 49777, 49777, 49777, 49777,
	49777, 49777, 49777, 49777, 49777, 49777, 49777, 49777, 49777, 49777,
	49777, 49777, 49777, 49777, 49777, 49777, 49777, 49777, 49777, 49777,
	49777, 49777, 49777, 49777, 49777, 2361, 49777, 1444, 49777, 49777,
	49777, 49777, 1864, -1000, -1000, 2062, 594, 2156, 714, -1000,
	-1000, -1000, 3623, 3623, 3623, 696, 696, 696, 134413, 134413,
	527, 3765, 825, -1000, 49777, -1000, 163, 59424, 49777, 27196,
	-1000, 516, 8926, 2645, -1000, 515, 27796, -1000, -1000, -1000,
	28972, 652, 42325, 49777, 1052, 133826, -1000, -1000, 1433, 3648,
	24350, 3100, 2918, 713, 917, 894, 31931, 31331, 30731, 30131,
	639, 607, 49777, 49777, 49777, 49777, 49777, 49777, 49777, 49777,
	-1000, -1000, 3658, -1000, 3648, -1000, -1000, -1000, -1000, 3648,
	1463, 1462, 3648, -1000, 3648, 3648, 8679, 8679, 41754, 41183,
	40612, 53774, 40041, 49777, 29560, 39470, 38899, -1000, 119995, -22,
	3575, 49777, 209, -1000, 132182, -1000, 209, 209, 712, -60,
	133826, 2647, 2647, 57750, 2474, 2318, 2318, 2318, -1000, 920,
	19168, 920, 105018, 2335, 920, 920, 310, 335, 514, 55487,
	2490, 105018, 809, 711, 3, 2, 1, -1000, -1000, -5,
	-12, -1000, -1000, 95094, 710, 27196, 26628, 299, 2095, -65,
	2768, 2761, -1000, 2758, 2753, -1000, 2728, -1000, 1891, -66,
	1439, 95094, 119995, 1521, 3764, -62, -1000, 5059, -67, -1000,
	1366, 298, 3648, -1000, -1000, -1000, -1000, -1000, 3763, 3762,
	-1000, 1060, 709, 703, 337, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 702, 701, 701, 701, -1000, 345, 700,
	344, 699, 697, 695, -1000, -1000, -1000, -1000, -1000, 3021,
	95094, 119995, 1491, 3761, -287, 95643, -59, -1000, -1000, 119995,
	-1000, -1000, -1000, 3760, -1000, 95094, -1000, -1000, 95094, 230,
	3255, -1000, 95094, -1000, 95094, 228, 3254, -1000, -1000, 119995,
	-1000, 95094, 95094, -1000, 119995, 119995, 119995, 77928, 77928, 226,
	-1000, 95094, 911, -68, 1188, -30, -1000, -1000, -1000, -1000,
	-1000, 1470, -1000, 1990, -1000, -1000, -1000, -1000, -1000, -1000,
	1594, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1094,
	-1000, -1000, -1000, -1000, -1000, -1000, 3645, 3632, -24, -1000,
	-1000, 26628, -1000, -31, 1655, 1995, 1436, -1000, 80687, 2574,
	3430, 3759, 2826, 3392, 1747, -1000, 1633, -1000, 3505, 85670,
	3542, 3554, 1369, -1000, 3019, -1000, -1000, 960, 1750, 1842,
	1431, 1420, 85670, 2085, -1000, 71169, -1000, 2759, 3484, 1424,
	1422, 1424, 1424, 1416, -1000, 85670, 1832, 1414, 1412, 1410,
	-1000, -1000, 2082, 2079, -1000, -1000, 106123, -1000, 1387, 1382,
	3593, 1934, 2292, 863, 2064, -1000, -34, 3540, 3551, 1353,
	-1000, 3018, 1381, -1000, -1000, -1000, 3482, 95094, 26628, 1612,
	1602, 1609, 1831, 1373, -25, -1000, 3533, 1350, 1348, -1000,
	1043, 7555, 3340, -1000, 77928, 1043, 1043, 2015, 3252, 2856,
	1689, -1000, 2866, 916, 2864, -1000, -1000, -1000, 916, -26,
	72833, 119995, 297, -1000, 163, 49777, 49777, 163, 49777, 163,
	-1000, 3513, 3250, 3249, -1000, -1000, -1000, -1000, -1000, 3756,
	2110, 2638, -1000, -1000, 693, 2492, 3016, 119995, 2784, -27,
	95094, -1000, 71735, 3244, 73390, 2085, 2488, -1000, -1000, 86775,
	-1000, 3242, 539, 2486, -1000, 741, 3753, 3241, -1000, 124936,
	-1000, 3426, 1358, 3239, 1122, 303, 3574, -1000, 303, 67291,
	-1000, 119995, -1000, -16, 257, 79589, -74, -75, 511, -1000,
	105574, 119995, 1121, 80138, 119995, 3358, 2130, 2115, -1000, 1026,
	61136, -1000, 61136, -76, -156, 2863, 1616, -1000, 1005, 1005,
	916, -1000, 916, -1000, 95094, 3091, -1000, -1000, 77928, 1005,
	1005, 1005, -1000, -1000, -1000, -1000, 3750, 3749, 3748, 3747,
	-1000, -1000, 1029, 95094, 119995, 95094, -1000, -1000, 1685, -1000,
	287, -1000, 119995, -1000, 119995, 119995, 95094, -1000, 1029, 119995,
	1029, 119995, 1029, 119995, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 163, -1000, -1000, 133826, -1000, 49777, -1000, -1000, 1630,
	3745, 1754, -1000, 3089, -1000, 3085, -1000, 39, -1000, -1000,
	1968, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3744, 133826,
	-1000, 2186, -1000, -1000, -1000, -1000, 95094, 95094, 95094, 95094,
	119995, 3338, -1000, 119995, 3336, 95094, -1000, -1000, 85670, -1000,
	2639, 3084, -1000, -1000, -1000, -1000, -1000, -1000, 1699, 2374,
	-1000, 2698, -1000, 1669, -1000, -1000, -1000, 133826, 54345, -1000,
	-1000, 133826, 2061, -1000, 52632, 52061, -1000, -1000, 1796, 95094,
	2793, -1000, 2793, -172, -1000, 131918, 2697, 95094, -1000, -1000,
	-1000, -1000, -1000, 957, 1394, 1394, 1294, 1294, 1294, 1294,
	3535, 6304, 6100, 4978, 7233, 7233, 5709, 5709, 5709, 5709,
	5709, 7233, 1186, 696, 696, 1186, 1186, 1186, 1186, 1186,
	696, 696, 696, 7233, 7233, 7233, 696, 134413, 134221, 11433,
	49777, 49777, 1288, 2054, 594, 10722, 49777, 486, 486, 486,
	486, -1000, 1957, -1000, -1000, -1000, -1000, 3015, 682, 53774,
	53774, -1000, -1000, -1000, -1000, 28384, 49777, -1000, -1000, -1000,
	-1000, 38299, -1000, -1000, 131285, -322, 510, -1000, 284, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 507, -161, 20, -1000, 49777, 49777, 49777, 503,
	-1000, 281, 49777, 119995, -1000, 17937, 798, -105, -1000, -81,
	1469, -1000, 49777, -1000, -1000, 1287, -1000, 1281, 1280, 1274,
	-1000, 681, 502, -1000, 279, -1000, 2315, 680, 679, 49777,
	-1000, -1000, -1000, -1000, -1000, 130891, -1000, -1000, 130850, -1000,
	-1000, 130456, -1000, -1000, 130415, -1000, -1000, -1000, -1000, -1000,
	133634, 17295, 16105, 14047, 6551, 13768, 11199, -83, 487, -90,
	485, 946, 931, 472, 469, 468, -91, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -93,
	467, -1000, 3014, -161, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 466, -1000, 465, -1000, 133381, -161, 464, 971,
	-1000, 53774, 53774, 53774, 53774, -1000, 463, -1000, 131723, -1000,
	133004, 37728, 37728, 37728, 461, 132941, 49777, -161, -100, -1000,
	-109, -1000, -1000, 593, -110, 1049, 37128, 56632, 26628, -1000,
	1049, 1049, 49777, -1000, 49777, 2712, -1000, -1000, -1000, -1000,
	2711, 1999, 2647, 57750, -1000, -1000, -1000, -1000, 105018, -1000,
	3636, 3231, -1000, 105018, -1000, -1000, 119995, 539, -1000, 105018,
	105018, 26628, 920, -1000, 920, 105018, 614, -1000, -1000, -1000,
	-1000, -1000, 456, 65071, 20, 277, 26628, 1030, -1000, -1000,
	2774, 2774, 2774, 2774, 2774, -1000, -1000, 119995, 1272, -28,
	-101, 2860, -1000, 3601, -1000, 2205, -1000, 71169, -1000, 824,
	1263, 26628, -1000, -1000, -1000, 669, -1000, 3648, 3648, -1000,
	3648, 119995, 3012, 208, 2859, -1000, 142, 73390, 3742, -1000,
	-1000, 230, -1000, 95094, 230, 230, -1000, 95094, 95094, 2359,
	-1000, 243, -1000, 238, -1000, -1000, -86, -1000, 1045, 34815,
	-1000, 1470, -1000, -1000, 1611, -1000, 2134, -1000, 1192, -1000,
	-1000, -1000, -1000, 34815, -1000, 2586, 119995, 119995, 95094, -1000,
	119995, -1000, 2208, 73390, -1000, 2484, 124387, 2477, 71169, 119995,
	-1000, -1000, 667, 984, 2684, 2673, 1118, 119995, 119995, 2672,
	123838, 123289, -1000, 3740, 119995, 2226, 49777, 3481, 2324, 2468,
	163, 163, -1000, 163, 163, 163, -1000, 666, 1378, 95094,
	95094, 119995, 73390, 95094, 1944, -1000, -1000, -1000, -1000, -1000,
	86219, -1000, -1000, 3654, 3653, -1000, 1424, -1000, -1000, -1000,
	1424, 2085, 1937, 119995, 73390, 95094, 73390, 122740, 122191, -1000,
	-1000, 1815, 119995, -1000, -1000, -1000, -1000, 1452, -1000, 863,
	2261, 163, 163, -1000, 163, 163, 163, 664, 26628, 2093,
	-1000, 3093, 119995, 3681, 121642, 3680, 119995, 119995, 119995, 73390,
	3419, 119995, 119995, 73390, -1000, 121093, 7555, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 74522, 1127,
	119995, 1363, -1000, -1000, 1814, 1270, 1268, 85670, 2185, 1812,
	1923, 119995, 61136, 1022, 61136, 2838, -1000, -1000, 23778, -1000,
	133826, 133826, -1000, 133826, -1000, 71735, 77928, 119995, -1000, 1071,
	119995, 80138, 992, 3238, 66183, -287, 1005, 77928, 95094, -27,
	2784, 119995, -1000, -1000, -1000, -1000, -1000, 2085, 3237, 539,
	2483, -1000, 77928, 3572, 3236, 658, 3737, 3736, -1000, 95094,
	2406, 2479, -1000, -1000, 120544, 3297, 863, 119995, 1049, 57750,
	2091, -1000, 63956, 1095, 119995, 1967, 127, -1000, -1000, -1000,
	7, 119995, -1000, 831, -1000, -1000, 257, 257, 1005, -303,
	657, -1000, 903, 902, 61702, 77928, -118, -1000, -1000, -1000,
	-1000, 2477, 95094, 119995, 1346, 2832, 119995, -120, -1000, 275,
	653, 896, 895, -1000, 2767, -1000, -156, -1000, 1026, 61136,
	2996, 2992, -1000, -1000, 1044, -1000, 1555, 1005, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -17,
	1916, 119995, -287, -287, -47, -28, -1000, 1029, -1000, 1029,
	-1000, 1029, -1000, 133826, -1000, -1000, -1000, 1752, 1711, 119995,
	-1000, -1000, 119995, -1000, 26628, 119995, 95094, 26628, 95094, 3079,
	3074, -1000, -1000, -1000, 119995, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1153, -1000, 2061, 2372, -1000, 652, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2579, -1000, -29,
	34244, 925, -1000, -1000, 95094, -18, 49777, 49777, 9967, 9687,
	49777, 53774, 53774, -1000, 49777, 9083, -1000, -1000, -1000, -1000,
	-1000, 2986, 651, 49777, 71169, 6062, 5167, -1000, 441, 10600,
	1186, -1000, 49777, -1000, 420, -1000, 432, 36557, -1000, 132311,
	-46, -123, -1000, 19753, -161, -141, -1000, -1000, 823, -1000,
	3294, -1000, 49777, 132564, 2507, 2213, 1886, 1762, 3648, 3679,
	23206, -1000, 67847, 1050, 2338, 130021, -1000, -1000, -1000, -1000,
	71169, 71169, 49777, 49777, -1000, 49777, 49777, 49777, -1000, -1000,
	-1000, 3648, 963, -1000, -1000, -1000, 963, -1000, -1000, 1424,
	-1000, 1424, -1000, 49777, -1000, -1000, 2985, 49777, -1000, 71169,
	71169, 53774, 53774, 53774, 53774, 53774, 53774, 53774, 53774, 53774,
	53774, 53774, 53774, 53774, 53774, 53774, 53774, 53774, 53774, 53774,
	53774, 2642, 53774, 3620, 3620, 3620, 807, -1000, 3068, 2985,
	49777, 49777, 71169, 430, 429, 428, -1000, 49777, -161, -1000,
	-1000, 5981, 647, -1000, 2562, -1000, 2916, -1000, 49777, -1000,
	-142, -1000, 2490, -1000, -1000, 2916, 2916, -143, 133826, 57750,
	57750, -1000, 646, 49777, 2705, -1000, -1000, 797, -315, -1000,
	890, -1000, -1000, -1000, -1000, -1000, 887, -1000, 539, -1000,
	-1000, -1000, 258, 105018, 105018, 796, -1000, -148, -1000, -1000,
	-149, -1000, 3571, 426, 26628, -1000, 1049, 2913, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -287, 119995, 119995, 1802, 2355,
	3678, -1000, 3649, 816, 791, 227, 3648, 423, 422, 406,
	-287, 119995, 119995, 1770, 119995, -1000, -1000, -1000, 230, -1000,
	-1000, -1000, 228, -1000, -1000, -1000, -1000, 2723, -1000, -30,
	-1000, -1000, -1000, 49777, -1000, -1000, 3405, 1254, 1251, -1000,
	-1000, -1000, 3008, -1000, 3235, -1000, 2471, -1000, 1101, -1000,
	1922, -1000, 49777, 645, 2829, 644, 643, 3732, 2279, 3730,
	1119, 3234, 2359, 3233, 2359, -1000, -1000, -1000, 965, -1000,
	133826, 2324, -1000, 642, 638, -1000, -31, 1654, 1939, 1250,
	1042, -1000, -1000, -1000, -1000, 49777, 49777, 104469, -1000, 481,
	3401, -19, -1000, -1000, -1000, 1769, 1249, 1248, -1000, -1000,
	-1000, -1000, 2085, 1768, 1245, 1240, -1000, -1000, -1000, -1000,
	-1000, 2464, -1000, -1000, 3230, 1040, -1000, 3138, 3136, 929,
	119995, -1000, 1037, -1000, -1000, -1000, -1000, 49777, -1000, -34,
	1239, 3530, 2461, 95094, -1000, 2359, 3229, 1237, -1000, 1236,
	-1000, -1000, -1000, 3532, 3531, 1241, -1000, -1000, -1000, -1000,
	-1000, 73956, -1000, -1000, 1043, 119995, 73390, 95094, 1903, -1000,
	-1000, 84572, 85121, 119995, 2856, -287, 916, -1000, 2571, 916,
	1022, 2984, -1000, 2773, -1000, 1035, 95094, 3726, 399, -151,
	-39, 71169, 3570, -1000, 2425, 673, 95094, 938, -1000, 3636,
	-1000, -1000, -1000, 1032, -1000, 3518, 95094, 3566, 3222, 1030,
	163, 95094, 3663, -1000, -1000, 3565, 95094, 3219, 2405, 2460,
	2621, 863, 79040, 1030, 2337, -57, -1000, 1967, 35957, 3399,
	-158, -1000, -1000, -1000, 1049, 67291, 57750, 49777, 3723, -159,
	-1000, -1000, -1000, -1000, -1000, 102266, 102266, 77928, 77928, 77928,
	1005, 119995, 119995, 80138, -1000, -1000, 630, 119995, 119995, 629,
	-1000, 119995, 119995, 3722, 77928, 77928, 77928, -43, 627, -1000,
	886, 885, 883, -1000, -1000, -1000, -1000, -1000, -1000, 880,
	1026, -1000, -156, 61136, 163, -1000, 2346, 95094, -1000, 22634,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1029, -287, -1000,
	-1000, 2268, 2428, 2268, 1908, 1905, -1000, -1000, 2351, -1000,
	-1000, -1000, -1000, 2743, 3408, 26628, 3517, 486, 49777, 49777,
	7344, 5057, 584, 486, 49777, 49777, 71169, 8252, -160, 49777,
	49777, -1000, 49777, 790, 133826, -1000, 3675, 49777, 398, 397,
	-1000, -1000, -1000, 3638, -1000, -1000, -1000, 133826, 49777, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 396, -1000, 210, -1000,
	-1000, -1000, 127681, -1000, 49777, 395, 3478, -1000, 393, 381,
	9750, 455, 129980, 129586, 129545, 380, -1000, -1000, 374, 373,
	133826, 3068, 133826, -1000, -1000, 978, 978, 1403, 1403, 1403,
	1403, 3620, 2055, 365, 1151, 1494, 1494, 1494, 1998, 807,
	807, 1494, 1494, 1494, 807, 2978, 2631, 626, 6414, -1000,
	-1000, 133826, 133826, 372, -1000, -1000, -1000, -161, 369, 5981,
	-1000, 2912, 3477, 133826, -1000, 57750, 2912, 2912, -1000, -1000,
	1999, 119995, 133826, 57750, -1000, 3231, -1000, 20913, 20336, -1000,
	26628, -1000, -1000, -1000, -1000, 3636, -1000, 65071, -1000, 625,
	-1000, 166, -1000, 2913, -1000, 878, -1000, -1000, 77928, 77928,
	-287, -157, 119995, -1000, -1000, 789, 3721, 815, 26628, 368,
	-1000, -1000, -1000, -287, -287, 119995, -287, -1000, -1000, -1000,
	3355, 133826, 119995, 119995, 1554, 103920, 119995, 3218, -1000, 2467,
	-1000, 1118, 129151, 58309, -1000, 58309, 119995, -1000, -1000, -1000,
	-1000, 1980, 1542, 3720, 1167, -1000, 3448, 119995, -1000, 119995,
	-1000, -1000, -1000, 119995, 119995, 95094, 119995, -1000, 73390, 3201,
	-175, 133826, -44, -1000, 877, -1000, 1425, -1000, 22062, 119995,
	73390, 95094, 119995, 73390, 95094, 3215, 119995, 2306, -1000, -1000,
	3135, -1000, 3186, -176, 26628, -1000, 3674, 3669, 3214, 3450,
	-1000, 119995, 3668, 119995, 95094, 3351, -1000, -1000, -1000, -1000,
	-1000, -1000, 1767, 1235, 1233, 2404, -45, 2396, 2352, -47,
	2185, 1022, -48, 622, -1000, 876, -1000, -1000, 875, -1000,
	1022, -1000, 77928, 61136, 3716, 539, -1000, 2824, -1000, 100042,
	2395, 163, -1000, 3715, 102822, 620, -1000, 2344, -1000, 788,
	-1000, 2578, 73390, 2085, 163, 95094, -1000, -1000, 539, 367,
	-50, -1000, 3246, 1112, 26628, 95094, 3213, 2626, 863, 79040,
	-1000, 1358, 2703, -1000, -55, -1000, 670, 163, 2337, -1000,
	-57, 133826, -1000, 873, -1000, -177, -1000, -1000, 366, -1000,
	3350, 3348, -1000, 2917, 58309, 618, 617, 119995, 3346, -1000,
	-1000, -182, -1000, -1000, 3030, 3030, 77928, 61136, 77928, 77928,
	-1000, 1026, 916, -1000, 2527, -1000, -1000, -1000, -1000, -1000,
	26628, 1738, -1000, 616, 613, -1000, -1000, -1000, -1000, 3408,
	486, 486, 49777, 49777, 49777, 486, 8252, -189, -1000, 486,
	486, -161, -1000, -1000, 132311, -1000, -1000, -1000, 133826, -1000,
	21490, 2272, -1000, 129110, -1000, 34244, -1000, -1000, 49777, 49777,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 53774, 2976,
	612, 71169, -1000, -1000, 364, 1017, 49777, 51490, 2490, 1017,
	1017, -1000, -191, -1000, -1000, -1000, 3636, -1000, 3636, 166,
	-1000, -1000, 3713, 26628, -1000, 77928, -1000, -1000, 3712, -194,
	813, -1000, 3711, -1000, -1000, 110, -1000, -1000, -1000, 2854,
	3562, -1000, 2053, -1000, 119995, -1000, 119995, -1000, 26628, 119995,
	2932, 1299, -1000, 984, 2659, 609, 53774, 1144, 95094, 943,
	2893, 2882, -1000, 3587, 3476, 2908, -196, -1000, 119995, 49777,
	119995, -197, -205, 2444, -1000, -1000, 1137, 1297, 49777, 1135,
	-1000, -1000, -1000, 71169, 604, 2359, 2359, -206, -211, -1000,
	-1000, -1000, 49777, 1218, 119995, 35386, -1000, 3709, 3401, -1000,
	-1000, -1000, -1000, -1000, -1000, 119995, -1000, 119995, -1000, 49777,
	1213, -1000, -1000, -1000, 3666, 2359, 26628, 2359, -1000, 2359,
	3450, 1166, 119995, 73390, 95094, 1817, 1817, 3067, -1000, -1000,
	-1000, 2269, 2269, 77928, 61136, -1000, -86, 1022, -1000, 3561,
	2809, 3706, -1000, -1000, -1000, -1000, 2654, -1000, -1000, 119995,
	2653, 1014, -1000, -212, -1000, 869, 867, 80138, 992, 973,
	-1000, -88, 603, -1000, 866, -1000, -1000, -1000, -1000, 539,
	3560, -1000, 3664, 601, 597, 119995, 2393, 596, 26628, 3395,
	863, 79040, -1000, 3297, 1967, -1000, 2454, 119995, 3389, -1000,
	2703, 594, -1000, 1005, 591, 590, 2632, 2632, -213, 58309,
	58309, -214, 588, 1005, -1000, -219, -1000, -1000, -1000, -1000,
	-1000, -1000, -96, -1000, 935, 909, -1000, -1000, 95094, 95094,
	49777, 49777, -1000, 486, 486, 486, -1000, 351, -1000, -1000,
	2337, 3472, -1000, -102, 128716, 128675, 552, 53774, 71169, -220,
	-1000, -1000, 119995, 133826, -112, -1000, 133826, 585, 583, 499,
	-1000, -1000, -1000, 640, 615, -1000, -1000, -1000, 119995, 3705,
	-1000, 119995, 103371, 119995, -1000, -1000, 2276, -1000, -1000, -1000,
	119995, 2458, -1000, -1000, -1000, 1117, 49777, 6414, 53774, 581,
	49777, -1000, 569, 568, 3559, 3326, -1000, 2801, 2967, 2019,
	58309, -1000, 3408, -1000, 128281, -1000, 1111, 2097, -1000, -1000,
	-1000, -1000, 133826, 53774, 3450, 58309, -1000, -1000, 559, 557,
	133826, 556, 864, 2969, -1000, -1000, -1000, -1000, -1000, 133826,
	555, 3530, -1000, -1000, -1000, -1000, 2359, 95094, -1000, -1000,
	-1000, 1210, -1000, -1000, -1000, -1000, 3703, 3701, 2962, 84572,
	-1000, -221, -1000, -1000, 2100, 163, 2267, 2849, -1000, 2395,
	554, -1000, -1000, 2389, 2680, -1000, 102822, 34815, 34815, 350,
	3553, 973, -1000, 3628, -1000, 3329, 3329, 49777, 3552, 163,
	-1000, 3663, 58309, -1000, 95094, 58309, 2392, 2182, 2591, 79040,
	-1000, 2621, -1000, -1000, -222, 119995, 1967, -1000, -1000, 77928,
	77928, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1111, -229, -230, -1000, 77928, -1000, -1000, 2527,
	-1000, 119995, -1000, 119995, -1000, -1000, -231, -237, -1000, 2120,
	49777, 34244, -1000, -1000, 552, -238, -1000, -139, -1000, 3550,
	51490, 3697, 3694, 3693, -1000, -1000, -287, -1000, -287, -1000,
	2043, -1000, -1000, -1000, 3211, 2902, 128240, 6414, 2564, 119995,
	18408, 2085, 2085, -1000, 3549, 2941, -1000, -1000, 2809, 551,
	-1000, -1000, -1000, -1000, 925, 119995, 2809, 2901, 95094, 6414,
	1115, -239, 2268, 2268, 49777, 33673, 2303, 49777, -1000, -1000,
	3450, 119995, -1000, -1000, 119995, 2390, -1000, 2944, 3633, -1000,
	992, -1000, 2298, 119995, -1000, 3443, -1000, 3344, -1000, -1000,
	-1000, 2824, 163, -1000, -1000, -1000, -244, 133826, 163, -1000,
	342, -246, 1112, -247, 95094, 2088, -1000, 863, -1000, 2626,
	1049, -1000, -1000, -249, -252, 2019, 1111, 2261, -254, -1000,
	-255, -257, -1000, -1000, 340, 50919, 50919, 50919, -161, -172,
	-1000, 119995, 550, -1000, -1000, -1000, -1000, -1000, 3132, 1021,
	-1000, 892, 1940, 339, 1130, 338, 332, -1000, -1000, -1000,
	2261, 119995, -1000, -1000, -1000, 1020, 539, -1000, 49777, 1111,
	-260, -1000, 1091, -262, -1000, 1090, -263, -1000, 2951, -1000,
	-269, 2359, -270, 226, 1817, 1018, 3509, -1000, -1000, -1000,
	2389, 95094, -272, -1000, -1000, 2537, -1000, 2809, 1014, -1000,
	-1000, -1000, 1111, 537, 2019, 536, 1599, 863, -1000, -1000,
	1424, 3395, 3305, 1005, 1005, 2809, 2019, 991, -1000, 1005,
	-1000, -1000, -1000, 3245, -1000, 54916, 2394, 1899, 131538, 3245,
	3245, -1000, -1000, 119995, 3499, -1000, 908, 907, 1539, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2908, -275, 3498,
	2564, 133826, 2809, -1000, 2268, 2844, -1000, 2268, 2950, -1000,
	2275, -1000, -1000, -1000, 2922, -1000, 2947, -1000, 1855, 3615,
	2577, 532, -1000, 119995, 1884, 1881, 3691, 2267, 2389, 2019,
	58309, 2809, 58309, 2252, -1000, 119995, -1000, 2182, 1338, -1000,
	-1000, 2261, 2809, 1049, 529, -1000, -1000, 1959, 3583, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 847, -1000, 3318,
	-1000, 1134, 2158, 2158, 1049, -1000, 844, 892, -1000, -1000,
	528, -1000, 522, -1000, 2348, 119995, 2343, -1000, -1000, -1000,
	-1000, 119995, -1000, -1000, 3690, -1000, 992, -1000, 2809, -278,
	2261, -280, -1000, -1000, -1000, -287, 2088, -1000, 1722, 991,
	2261, -1000, 1897, -1000, -1000, 2332, 50348, 49777, -1000, 3605,
	-1000, -1000, 2660, -1000, -1000, 49777, 2908, 49777, 49777, -1000,
	226, 65627, -286, -1000, 2389, 2261, 1111, 991, 2019, 1599,
	67291, 1049, 991, -1000, -1000, -1000, 133826, -1000, -1000, -1000,
	133826, -1000, -288, -291, -1000, -303, 102266, 2349, 2577, 991,
	2019, 1049, 2809, 2252, -265, -1000, 1049, 2261, 1201, -296,
	-1000, -1000, -1000, -1000, 1049, 2809, -1000, 2261, -1000, -1000,
	-1000, -1000, -1000, 520, -1000, -1000, 2261, 991, 49777, 991,
	1049, -305, 1049, -1000, 2261, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4487, 4486, 4485, 4482, 4481, 4480, 4478, 4477, 4476,
	4475, 4474, 4473, 146, 4468, 4465, 4463, 4462, 4461, 4459,
	4458, 4457, 4456, 4455, 4454, 4453, 4452, 4451, 4450, 4448,
	4446, 4445, 4444, 4443, 4442, 4441, 4438, 4437, 4435, 4433,
	4432, 4429, 4428, 4427, 4426, 4425, 4424, 4423, 4422, 4420,
	4419, 4418, 4417, 4416, 4415, 4413, 4412, 4408, 4405, 4404,
	4400, 4399, 4398, 4393, 4392, 4391, 4389, 4388, 52, 4386,
	4384, 4381, 4380, 4377, 4376, 4372, 4370, 4364, 4362, 4360,
	4359, 4353, 4346, 4345, 4344, 4343, 4341, 4340, 4339, 65,
	4338, 274, 4337, 4336, 4335, 4333, 4329, 4328, 4327, 4326,
	4325, 4323, 4322, 4321, 271, 4320, 134, 162, 4319, 4317,
	3867, 4315, 4314, 270, 4310, 4307, 4306, 4304, 4303, 284,
	4302, 4301, 4299, 4298, 4297, 4295, 4293, 4292, 4291, 4290,
	4289, 4288, 93, 209, 4287, 4284, 3279, 4282, 4280, 4278,
	4277, 4276, 4274, 4273, 4272, 4271, 4270, 4269, 250, 169,
	4263, 269, 4262, 4259, 4257, 4252, 4251, 4248, 4246, 4245,
	4244, 4242, 4241, 4238, 4232, 4230, 4228, 4227, 4225, 4224,
	4222, 4221, 4220, 4218, 4217, 4216, 4213, 4211, 4210, 4208,
	4207, 4206, 4205, 4204, 4202, 4199, 4198, 4197, 4196, 4195,
	4194, 248, 214, 184, 4193, 4191, 268, 267, 4189, 4183,
	4182, 4177, 4176, 122, 8, 41, 4175, 4174, 98, 88,
	85, 100, 108, 101, 4170, 112, 4168, 127, 68, 4166,
	27, 3, 170, 243, 11357, 238, 4165, 4164, 4162, 245,
	198, 4159, 244, 4158, 4157, 4155, 4153, 4152, 4151, 70,
	57, 178, 182, 176, 166, 33, 4148, 161, 107, 81,
	55, 40, 15, 77, 215, 19, 4, 262, 4146, 260,
	11, 143, 7, 29, 4145, 4144, 4143, 4142, 3840, 138,
	4141, 266, 246, 174, 4140, 4136, 4134, 720, 4133, 4131,
	49, 4128, 104, 105, 133, 17, 132, 4127, 157, 171,
	38, 4126, 167, 58, 4125, 160, 99, 87, 10835, 13174,
	4124, 4123, 116, 76, 94, 3236, 230, 197, 203, 102,
	163, 164, 128, 213, 212, 180, 327, 4118, 249, 4106,
	3560, 90, 185, 156, 6082, 4105, 4104, 4102, 83, 204,
	106, 4100, 4099, 78, 10, 24, 2, 6, 144, 26,
	23, 1, 4088, 30, 121, 46, 31, 4086, 22, 4085,
	4084, 4083, 4078, 4073, 47, 173, 4072, 4071, 283, 4065,
	110, 48, 66, 4064, 336, 226, 4063, 229, 150, 4062,
	4059, 257, 210, 188, 4058, 79, 235, 4057, 4056, 4054,
	4053, 4052, 137, 9, 136, 4051, 4050, 153, 4048, 53,
	241, 200, 4047, 63, 4046, 4044, 177, 62, 141, 287,
	192, 225, 120, 232, 186, 233, 4040, 4037, 4034, 193,
	4033, 4031, 220, 154, 4028, 4027, 251, 282, 91, 45,
	89, 239, 82, 196, 158, 4026, 205, 4023, 4022, 276,
	181, 216, 20, 14, 92, 139, 4021, 5, 237, 159,
	234, 117, 4020, 7772, 2361, 2070, 4019, 4018, 149, 125,
	80, 131, 155, 264, 97, 4016, 4015, 2654, 4011, 4010,
	4009, 4008, 189, 4007, 4006, 4005, 151, 172, 187, 4004,
	123, 74, 54, 21, 126, 263, 280, 113, 227, 179,
	255, 4003, 4002, 4000, 201, 3999, 73, 119, 168, 208,
	254, 60, 3998, 118, 3997, 152, 475, 67, 147, 3996,
	228, 3992, 3991, 3988, 3987, 3986, 3984, 3983, 258, 236,
	3982, 3980, 3977, 36, 194, 3975, 261, 202, 191, 109,
	59, 3967, 86, 3306, 3966, 253, 240, 71, 265, 206,
	3960, 4234, 56, 3958, 0, 14665, 9148, 12898, 14234, 3957,
	4972, 3956, 3952, 3951, 222, 148, 3950, 3948, 3946, 114,
	3945, 84, 3942, 3940, 72, 3938, 25, 16, 18, 34,
	28, 543, 450, 3937, 3934, 43, 145, 129, 3933, 277,
	231, 3932, 3931, 3930, 3928, 96, 3927, 42, 3926, 44,
	3925, 3924, 51, 13, 37, 3923, 3922, 218, 3921, 223,
	256, 3920, 165, 3919, 69, 140, 3918, 3916, 3912, 64,
	61, 259, 95, 3909, 278, 3907, 199, 3905, 3902, 3902,
	32, 3898, 3897, 247, 115, 111, 3892, 252, 142, 39,
	211, 183, 219, 3889, 3885, 175, 3884, 3883, 3882, 275,
	3881, 3880, 35, 3878, 3877, 3876, 12, 3875, 3874, 207,
	3349, 3873, 3872, 50, 3871, 190,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	601, 601, 620, 620, 23, 23, 45, 45, 24, 46,
	17, 602, 602, 602, 602, 36, 25, 47, 29, 29,
	29, 29, 29, 206, 206, 206, 206, 22, 22, 41,
	41, 242, 242, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	597, 597, 244, 244, 243, 236, 236, 237, 237, 238,
	238, 603, 603, 245, 245, 245, 247, 247, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 497, 497,
	497, 529, 529, 529, 528, 528, 624, 624, 625, 625,
	625, 625, 625, 135, 135, 395, 395, 395, 56, 56,
	56, 56, 56, 592, 592, 208, 208, 208, 210, 210,
	209, 209, 209, 209, 209, 80, 80, 609, 609, 610,
	610, 608, 607, 607, 607, 611, 611, 611, 207, 207,
	207, 131, 131, 131, 131, 131, 131, 132, 132, 133,
	133, 211, 211, 211, 213, 213, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 217, 16, 16, 16,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 109,
	109, 531, 531, 532, 532, 202, 202, 203, 203, 203,
	203, 204, 204, 205, 205, 205, 71, 71, 214, 214,
	216, 216, 215, 215, 215, 215, 215, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 59, 59, 59, 59,
	59, 60, 60, 60, 60, 60, 60, 61, 61, 61,
	61, 61, 61, 62, 62, 69, 69, 69, 69, 69,
	69, 193, 193, 72, 72, 72, 72, 72, 72, 72,
	72, 72, 72, 72, 72, 72, 77, 77, 77, 77,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 627,
	627, 628, 628, 629, 629, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 75, 75, 75, 75, 75, 75,
	75, 75, 75, 75, 75, 75, 75, 75, 75, 75,
	75, 86, 86, 356, 356, 319, 319, 87, 87, 87,
	88, 88, 89, 89, 73, 73, 590, 590, 372, 372,
	488, 488, 74, 598, 598, 598, 600, 600, 599, 599,
	91, 91, 394, 394, 92, 92, 92, 92, 92, 92,
	93, 93, 93, 93, 93, 93, 93, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 101, 101, 101, 101, 101, 102, 102, 102, 99,
	99, 99, 96, 96, 96, 95, 95, 95, 100, 100,
	100, 589, 308, 308, 98, 98, 98, 97, 97, 97,
	373, 373, 103, 103, 103, 103, 320, 104, 104, 104,
	104, 104, 104, 104, 104, 107, 107, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	490, 490, 105, 105, 105, 455, 455, 110, 110, 110,
	410, 410, 111, 111, 111, 111, 111, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 134, 134, 134, 134,
	134, 134, 134, 134, 594, 594, 365, 365, 271, 271,
	271, 271, 123, 123, 123, 123, 124, 124, 124, 125,
	125, 198, 198, 141, 141, 141, 141, 140, 140, 140,
	140, 140, 140, 140, 140, 63, 63, 63, 64, 64,
	65, 65, 66, 66, 67, 67, 68, 68, 68, 68,
	68, 144, 144, 621, 621, 146, 143, 143, 143, 143,
	143, 142, 142, 145, 145, 145, 145, 147, 149, 149,
	149, 149, 149, 148, 148, 148, 148, 150, 150, 522,
	522, 381, 381, 520, 520, 541, 541, 521, 521, 326,
	326, 326, 326, 326, 327, 327, 327, 530, 530, 530,
	530, 530, 530, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 199, 199, 200, 201,
	201, 201, 201, 201, 176, 176, 176, 192, 192, 192,
	192, 192, 192, 192, 192, 179, 179, 179, 163, 163,
	152, 152, 152, 152, 152, 152, 152, 157, 157, 157,
	157, 157, 157, 157, 157, 153, 153, 165, 165, 165,
	165, 165, 158, 158, 159, 159, 159, 160, 160, 160,
	160, 186, 186, 162, 162, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 154, 154, 154, 154, 167, 167,
	167, 167, 417, 417, 417, 191, 191, 166, 166, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 189, 189, 189, 189, 189, 189, 612,
	612, 613, 613, 613, 183, 183, 183, 183, 183, 183,
	469, 469, 177, 177, 177, 177, 182, 182, 182, 182,
	185, 185, 185, 185, 400, 400, 174, 174, 174, 175,
	175, 175, 180, 180, 181, 357, 357, 178, 178, 184,
	184, 184, 184, 155, 155, 155, 155, 155, 155, 155,
	156, 156, 156, 156, 187, 187, 173, 173, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 631,
	631, 169, 169, 169, 168, 168, 168, 168, 171, 171,
	172, 172, 172, 172, 172, 172, 170, 161, 190, 591,
	591, 587, 587, 587, 587, 587, 587, 587, 587, 588,
	588, 588, 588, 593, 593, 115, 115, 115, 115, 115,
	115, 115, 126, 126, 126, 126, 126, 126, 126, 129,
	129, 116, 116, 116, 116, 116, 116, 116, 119, 119,
	117, 117, 117, 117, 118, 118, 81, 81, 81, 81,
	81, 15, 15, 15, 82, 82, 262, 262, 220, 220,
	220, 345, 345, 221, 221, 334, 334, 334, 334, 218,
	218, 219, 219, 83, 83, 632, 632, 632, 604, 604,
	604, 605, 605, 605, 605, 605, 605, 328, 328, 329,
	329, 435, 435, 435, 435, 435, 332, 332, 332, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 335, 335,
	246, 246, 246, 343, 344, 344, 336, 336, 342, 341,
	341, 340, 340, 339, 339, 337, 338, 338, 338, 347,
	347, 346, 349, 349, 348, 434, 550, 550, 552, 552,
	552, 552, 552, 552, 552, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 418, 418, 633, 633, 634, 635, 548, 548,
	548, 549, 544, 544, 545, 545, 545, 545, 545, 330,
	330, 331, 331, 331, 331, 546, 547, 363, 363, 473,
	551, 551, 553, 553, 555, 636, 636, 636, 636, 636,
	636, 637, 637, 637, 433, 433, 432, 432, 354, 354,
	556, 556, 556, 556, 557, 557, 557, 557, 557, 560,
	559, 558, 558, 558, 558, 558, 85, 85, 85, 397,
	397, 396, 396, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 195, 195,
	274, 274, 79, 79, 79, 12, 12, 12, 12, 12,
	12, 12, 289, 289, 13, 13, 13, 606, 606, 606,
	84, 84, 84, 84, 84, 84, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 596, 596, 595, 595,
	275, 275, 639, 639, 90, 90, 90, 90, 90, 90,
	90, 90, 491, 491, 492, 492, 78, 78, 78, 78,
	78, 419, 419, 416, 416, 415, 415, 362, 362, 471,
	471, 471, 472, 279, 279, 280, 280, 239, 239, 239,
	31, 30, 21, 21, 26, 26, 27, 27, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 28, 28, 49,
	49, 49, 49, 50, 50, 50, 50, 53, 53, 54,
	54, 48, 48, 48, 48, 51, 51, 44, 44, 55,
	55, 55, 55, 55, 614, 616, 616, 615, 615, 619,
	619, 619, 619, 619, 619, 617, 617, 618, 618, 622,
	622, 623, 623, 122, 122, 127, 127, 127, 127, 127,
	128, 128, 128, 128, 130, 130, 130, 130, 139, 139,
	194, 194, 194, 194, 194, 194, 194, 57, 57, 57,
	57, 70, 70, 70, 70, 137, 641, 641, 641, 138,
	138, 138, 640, 640, 272, 272, 429, 429, 430, 430,
	642, 642, 431, 431, 431, 431, 431, 265, 264, 266,
	266, 267, 267, 76, 76, 76, 255, 255, 254, 256,
	256, 257, 257, 252, 252, 533, 533, 259, 259, 259,
	260, 260, 248, 248, 249, 249, 250, 250, 251, 251,
	263, 263, 643, 643, 113, 113, 113, 197, 197, 318,
	318, 318, 426, 426, 426, 355, 355, 286, 286, 428,
	428, 428, 428, 393, 393, 393, 196, 196, 370, 370,
	383, 383, 384, 384, 485, 485, 385, 120, 120, 121,
	121, 136, 136, 224, 224, 222, 222, 222, 222, 222,
	222, 222, 222, 229, 229, 230, 230, 231, 231, 232,
	233, 233, 233, 233, 374, 374, 234, 234, 234, 223,
	223, 223, 225, 225, 225, 225, 225, 225, 225, 228,
	228, 228, 228, 235, 235, 235, 227, 227, 567, 567,
	567, 569, 569, 571, 571, 570, 570, 566, 566, 568,
	568, 638, 638, 399, 399, 399, 352, 353, 350, 350,
	351, 351, 360, 360, 358, 359, 359, 361, 361, 470,
	470, 470, 240, 240, 240, 390, 390, 390, 390, 391,
	391, 422, 422, 420, 420, 420, 420, 421, 421, 423,
	423, 423, 424, 424, 425, 425, 387, 387, 388, 388,
	389, 389, 389, 389, 451, 451, 226, 226, 226, 367,
	367, 367, 368, 368, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 442, 442, 440, 440, 440, 440,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 475,
	476, 476, 369, 369, 477, 427, 427, 585, 585, 585,
	586, 586, 468, 468, 478, 478, 478, 478, 478, 478,
	466, 466, 467, 467, 486, 487, 487, 403, 403, 403,
	403, 401, 401, 404, 404, 404, 404, 404, 402, 402,
	479, 479, 479, 479, 392, 392, 480, 480, 480, 480,
	481, 482, 482, 483, 483, 436, 437, 437, 493, 493,
	493, 493, 495, 366, 366, 366, 366, 366, 543, 542,
	542, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 510, 510, 510, 510, 510, 510, 510, 496,
	496, 496, 496, 496, 500, 500, 500, 499, 499, 499,
	499, 499, 499, 499, 499, 499, 499, 499, 501, 501,
	506, 506, 507, 507, 507, 502, 503, 508, 508, 508,
	508, 644, 644, 512, 512, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 498, 498, 498, 505, 505, 505,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 411, 411, 413, 413, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 445, 445,
	445, 445, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 561, 561, 561,
	561, 561, 561, 561, 561, 447, 447, 564, 564, 565,
	565, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 572, 572, 573, 573, 575, 575, 576, 576,
	577, 578, 578, 578, 579, 580, 580, 574, 574, 581,
	581, 581, 581, 582, 582, 583, 583, 583, 583, 583,
	584, 584, 584, 584, 584, 457, 457, 458, 458, 464,
	464, 464, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 325, 325, 324,
	276, 276, 276, 276, 276, 276, 379, 379, 377, 377,
	377, 380, 380, 378, 378, 376, 376, 375, 375, 454,
	454, 452, 452, 456, 456, 405, 405, 511, 511, 511,
	511, 511, 511, 511, 511, 406, 406, 406, 414, 407,
	407, 408, 408, 408, 408, 408, 448, 449, 409, 409,
	409, 450, 450, 459, 463, 463, 462, 461, 461, 460,
	460, 438, 438, 439, 439, 386, 386, 645, 645, 382,
	382, 484, 484, 484, 484, 322, 322, 371, 371, 321,
	321, 313, 313, 314, 314, 314, 314, 364, 364, 465,
	465, 513, 513, 514, 514, 515, 515, 516, 516, 517,
	518, 519, 453, 453, 297, 296, 283, 284, 295, 294,
	293, 282, 285, 290, 291, 292, 287, 288, 304, 303,
	302, 253, 258, 309, 310, 310, 312, 312, 311, 311,
	299, 300, 301, 489, 281, 315, 315, 316, 316, 316,
	317, 317, 317, 317, 277, 277, 278, 278, 305, 305,
	306, 307, 307, 298, 298, 298, 268, 268, 268, 269,
	269, 270, 270, 527, 527, 524, 524, 524, 525, 525,
	525, 526, 526, 526, 526, 523, 523, 523, 523, 523,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 535,
	535, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 537,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 540, 540,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	6, 7, 9, 6, 2, 2, 3, 0, 8, 6,
	8, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 3, 1, 12, 3, 1, 0, 1,
	1, 2, 1, 4, 0, 3, 3, 0, 4, 6,
	0, 5, 7, 6, 8, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 3, 3,
	6, 4, 9, 7, 12, 12, 12, 9, 2, 7,
	2, 1, 1, 1, 3, 3, 0, 3, 1, 3,
	1, 1, 3, 2, 5, 0, 7, 5, 2, 0,
	1, 2, 3, 1, 1, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 4, 3, 6, 6, 6, 6, 6,
	4, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 6, 3, 8, 3,
	4, 3, 3, 4, 3, 4, 4, 4, 3, 5,
	7, 3, 3, 4, 3, 3, 3, 3, 3, 2,
	0, 1, 0, 1, 0, 4, 3, 3, 3, 3,
	3, 6, 4, 4, 4, 3, 5, 3, 3, 3,
	3, 3, 3, 3, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 2, 1, 3,
	2, 0, 7, 2, 5, 0, 1, 3, 3, 1,
	9, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 6, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 1, 1, 3, 4, 6, 3, 3, 5, 3,
	1, 3, 2, 2, 2, 2, 1, 2, 2, 5,
	3, 3, 6, 6, 3, 1, 1, 1, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 3, 5, 7, 2, 3, 0, 3, 5, 2,
	3, 0, 2, 3, 2, 3, 2, 6, 4, 7,
	7, 7, 9, 10, 5, 2, 6, 4, 7, 7,
	7, 10, 5, 2, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 1, 1, 5, 3, 3, 2, 2,
	6, 3, 3, 3, 3, 4, 4, 3, 1, 3,
	3, 2, 2, 1, 3, 3, 1, 2, 1, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 1, 1, 1, 2, 2, 2, 1, 3,
	3, 3, 3, 3, 2, 3, 3, 1, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 4, 6, 4, 2, 6, 4,
	3, 2, 3, 4, 3, 5, 3, 6, 5, 6,
	3, 5, 6, 3, 4, 3, 4, 3, 3, 4,
	4, 5, 0, 1, 1, 1, 1, 3, 2, 3,
	4, 3, 4, 3, 5, 3, 4, 4, 3, 4,
	5, 3, 4, 3, 4, 4, 5, 3, 3, 1,
	1, 0, 2, 3, 5, 4, 6, 4, 6, 4,
	1, 0, 3, 4, 4, 5, 7, 5, 3, 3,
	3, 4, 4, 5, 2, 0, 4, 2, 3, 4,
	2, 3, 3, 3, 5, 2, 0, 3, 3, 4,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 3,
	4, 5, 4, 4, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 4, 3, 4, 4, 5, 1,
	1, 10, 10, 3, 5, 5, 5, 3, 5, 6,
	4, 4, 5, 5, 2, 3, 2, 5, 4, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	2, 2, 1, 2, 0, 1, 2, 1, 2, 1,
	2, 2, 1, 2, 1, 2, 1, 2, 2, 4,
	3, 3, 7, 3, 3, 7, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 3, 3, 6, 5, 8,
	3, 6, 6, 3, 13, 16, 1, 0, 1, 2,
	3, 0, 2, 0, 4, 0, 4, 5, 4, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 2, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 8, 0,
	1, 1, 0, 2, 1, 0, 1, 0, 1, 1,
	0, 1, 4, 1, 0, 3, 7, 7, 1, 1,
	3, 7, 1, 3, 11, 3, 2, 0, 3, 1,
	2, 2, 3, 2, 6, 2, 1, 2, 2, 2,
	8, 4, 2, 3, 5, 5, 5, 2, 5, 5,
	2, 2, 2, 0, 1, 1, 3, 4, 11, 12,
	9, 5, 3, 1, 5, 10, 7, 11, 3, 3,
	0, 2, 4, 3, 3, 1, 5, 1, 3, 1,
	2, 0, 1, 2, 2, 0, 1, 3, 3, 2,
	2, 1, 1, 1, 4, 0, 6, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 4, 2,
	2, 2, 4, 7, 3, 4, 6, 5, 7, 5,
	5, 3, 3, 0, 2, 2, 2, 1, 1, 1,
	8, 10, 11, 7, 10, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 11, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 17, 20, 16, 19,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 2,
	4, 2, 3, 1, 0, 2, 0, 1, 1, 0,
	9, 6, 6, 8, 6, 8, 5, 7, 2, 6,
	7, 4, 4, 5, 2, 4, 6, 6, 8, 6,
	7, 8, 9, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	6, 8, 8, 4, 7, 3, 0, 7, 10, 1,
	1, 1, 1, 2, 2, 3, 0, 3, 0, 1,
	0, 2, 0, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 0, 2,
	4, 2, 1, 0, 2, 1, 1, 0, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 2, 3, 2,
	2, 1, 2, 13, 16, 3, 1, 0, 4, 1,
	0, 2, 2, 3, 0, 1, 1, 4, 4, 5,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	4, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 4,
	8, 11, 5, 2, 2, 0, 10, 3, 2, 0,
	1, 3, 1, 1, 3, 3, 5, 6, 4, 5,
	4, 1, 1, 3, 3, 1, 2, 4, 4, 2,
	3, 5, 5, 1, 3, 1, 0, 1, 2, 3,
	2, 4, 2, 3, 0, 2, 0, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 8,
	8, 8, 2, 4, 4, 4, 2, 2, 2, 2,
	3, 1, 3, 1, 2, 6, 7, 1, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 1, 0, 3, 3, 5, 1, 3, 3,
	4, 5, 2, 2, 0, 2, 2, 1, 1, 1,
	0, 1, 0, 2, 2, 5, 4, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 3,
	1, 3, 3, 3, 2, 0, 4, 2, 5, 3,
	2, 0, 1, 3, 3, 5, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 3, 2, 4, 4, 0,
	4, 4, 3, 4, 1, 5, 3, 4, 5, 5,
	1, 5, 1, 3, 2, 0, 3, 0, 2, 3,
	1, 3, 2, 0, 3, 5, 6, 4, 6, 4,
	3, 2, 1, 0, 5, 1, 0, 2, 2, 2,
	1, 1, 0, 1, 1, 1, 1, 0, 4, 2,
	1, 2, 2, 4, 1, 3, 1, 2, 3, 2,
	4, 1, 0, 1, 0, 2, 1, 0, 2, 5,
	7, 2, 1, 2, 4, 3, 5, 0, 1, 3,
	5, 1, 2, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 6, 6, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 3, 0,
	5, 4, 1, 2, 1, 4, 1, 1, 2, 1,
	1, 1, 1, 1, 0, 1, 2, 5, 1, 4,
	2, 5, 1, 4, 3, 3, 0, 1, 2, 4,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 1, 0, 1, 4, 1, 3, 3,
	3, 5, 2, 2, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 3, 3, 2, 2, 3, 5, 4, 6, 3,
	5, 4, 6, 4, 6, 5, 7, 3, 3, 3,
	3, 3, 4, 3, 2, 4, 2, 3, 3, 4,
	3, 4, 3, 4, 5, 6, 6, 7, 6, 7,
	6, 7, 3, 4, 4, 1, 3, 1, 3, 3,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 5, 6, 6, 7, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 2, 1, 5, 5, 6, 3,
	1, 1, 1, 2, 2, 2, 4, 3, 5, 6,
	8, 6, 5, 4, 3, 2, 2, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 3, 3, 4, 3, 4, 3, 4, 3,
	4, 4, 3, 6, 5, 5, 5, 4, 4, 3,
	4, 3, 5, 0, 5, 0, 2, 0, 1, 3,
	3, 2, 2, 0, 6, 1, 0, 3, 0, 3,
	3, 3, 0, 1, 4, 2, 2, 2, 2, 2,
	3, 2, 2, 3, 0, 4, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	1, 1, 1, 2, 1, 2, 2, 3, 1, 2,
	3, 2, 3, 2, 3, 1, 0, 1, 3, 1,
	3, 3, 3, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 1, 2, 3,
	0, 3, 3, 2, 2, 1, 2, 2, 3, 2,
	1, 1, 1, 5, 1, 2, 4, 2, 0, 1,
	0, 3, 5, 1, 0, 1, 2, 1, 0, 1,
	3, 3, 2, 1, 1, 1, 3, 1, 3, 3,
	1, 1, 1, 1, 5, 3, 1, 1, 3, 1,
	1, 1, 1, 2, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 7,
	1, 7, 5, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 602, -106, -103, -71, -69, -110, -111,
	-92, -112, -105, -134, -139, -120, -121, -122, -135, -141,
	-194, -199, -200, -201, -3, -56, -58, -72, -91, -93,
	-104, -114, -113, -115, -123, -131, -126, -109, -63, -136,
	-140, -151, -195, -196, -197, 32, 31, 100, 80, 155,
	129, 138, 204, 386, 431, 443, 401, 143, 422, 406,
	-145, -146, 461, -57, -70, -138, -137, 73, 130, 416,
	-4, -12, -16, 29, 46, -59, -60, -61, -62, 62,
	-79, -75, -86, -80, -73, -74, -77, -626, 102, -568,
	-94, -97, -130, -630, 162, 222, -116, -117, -118, 368,
	-124, -125, 424, -127, -128, -129, 427, 163, -65, -64,
	157, -222, -224, -143, -142, -144, -198, -152, -153, -154,
	-155, -156, -157, -158, -160, -186, -161, -162, -163, -164,
	-165, -166, -170, -189, -167, -168, -169, -172, -171, -173,
	-178, -174, -175, -176, -177, -179, -180, -182, -183, -184,
	-185, -187, -188, 466, -181, -190, -159, 527, 49, 481,
	82, 147, 435, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -55, -76, -78, -81, -82, -83, -90,
	-84, -85, -567, -95, -96, -99, -101, -102, -98, -100,
	423, -225, -223, 599, 542, -18, -23, -24, -19, -20,
	-22, -25, -21, -26, -27, -28, -40, -45, -46, -42,
	-43, -41, -44, -47, -48, -49, -50, -51, -52, -53,
	-54, -30, -36, -37, -31, -32, -33, -34, -35, -38,
	-39, -17, -29, 563, 572, -228, -226, -227, -235, 453,
	550, 501, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, -320, 2, -299, -305, -306, -307,
	-298, -268, -537, -540, 4, -534, -538, 169, 232, 332,
	21, 23, 22, 24, 25, 26, 27, 29, 30, 41,
	42, 44, 45, 46, 47, 48, 49, 53, 55, 59,
	60, 61, 62, 63, 64, 68, 73, 74, 79, 80,
	81, 82, 83, 84, 85, 91, 88, 89, 90, 92,
	94, 96, 97, 98, 99, 100, 101, 103, 104, 105,
	107, 108, 109, 117, 118, 119, 120, 121, 123, 129,
	124, 130, 133, 128, 132, 134, 136, 137, 138, 141,
	142, 143, 145, 146, 148, 149, 150, 152, 153, 155,
	156, 157, 160, 158, 509, 159, 161, 162, 163, 164,
	167, 175, 176, 177, 182, 184, 185, 186, 190, 191,
	192, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	205, 209, 211, 212, 213, 214, 215, 221, 222, 224,
	225, 226, 227, 228, 233, 234, 235, 239, 236, 245,
	246, 250, 251, 252, 254, 258, 259, 260, 261, 262,
	263, 265, 267, 266, 269, 272, 273, 276, 280, 281,
	285, 286, 282, 287, 288, 290, 291, 294, 292, 295,
	296, 293, 297, 299, 300, 301, 302, 303, 304, 305,
	306, 307, 308, 309, 310, 298, 313, 311, 315, 316,
	317, 330, 326, 327, 321, 322, 318, 323, 319, 320,
	324, 325, 329, 334, 335, 338, 219, 340, 341, 344,
	362, 348, 349, 350, 353, 354, 357, 360, 361, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 373, 374,
	376, 377, 378, 380, 381, 382, 384, 386, 387, 389,
	390, 392, 393, 394, 395, 396, 397, 398, 400, 401,
	403, 402, 404, 406, 408, 409, 410, 416, 422, 418,
	419, 420, 421, 423, 424, 425, 426, 427, 429, 430,
	431, 433, 434, 435, 436, 437, 439, 441, 442, 446,
	447, 463, 464, 483, 443, 444, 445, 448, 449, 450,
	451, 452, 456, 454, 455, 457, 458, 459, 461, 462,
	465, 466, 468, 469, 470, 471, 472, 473, 474, 477,
	479, 480, 481, 500, 482, 484, 488, 489, 490, 491,
	485, 486, 499, 493, 494, 496, 497, 502, 503, 504,
	505, 506, 507, 508, 510, 512, 520, 521, 522, 524,
	527, 528, 529, 530, 518, 532, 533, 536, 537, 538,
	541, 539, 540, 542, 544, 547, 548, 549, 555, 554,
	556, 559, 564, 565, 567, 568, 569, 36, 50, 51,
	54, 56, 58, 69, 70, 71, 75, 125, 126, 154,
	165, 166, 178, 193, 194, 206, 208, 216, 217, 218,
	240, 241, 243, 248, 270, 337, 339, 355, 359, 375,
	379, 383, 385, 399, 438, 475, 487, 492, 513, 514,
	515, 516, 523, 525, 550, 551, 552, 557, 566, -320,
	2, -299, 346, -292, 2, -268, -268, 386, 28, 2,
	28, 374, 455, 504, 506, 2, -594, -365, 2, 28,
	-271, -268, 102, 204, 453, -292, 2, -594, -365, 25,
	2, -268, 2, 360, 22, 27, 66, 77, 98, 141,
	164, 187, 190, -629, 362, 393, 441, 457, 499, 510,
	524, 2, 554, 291, 454, 501, 232, 120, 529, 448,
	-606, 446, 447, 360, 391, 433, 207, 543, -272, 2,
	443, -268, 291, 2, 602, 94, 74, 438, 458, -148,
	2, 281, 521, -149, -150, -147, 513, -522, 448, 433,
	313, -268, 602, 602, 602, 28, -281, -268, 501, 232,
	448, 120, 497, 602, 2, 501, 365, 554, 454, 120,
	396, 232, 529, 190, 141, 27, 448, -606, 577, 578,
	291, 127, -592, 2, -587, 4, -538, -534, -314, -313,
	501, 507, 120, -307, -298, 592, -306, 602, 602, 602,
	602, 2, 251, 252, 395, 394, 458, 459, 28, 602,
	602, 602, 602, 446, 2, 164, 22, 27, 66, 93,
	98, 127, 187, 190, 351, -627, 362, 393, 457, 499,
	503, 510, 524, -605, 482, 68, 421, 448, -604, -606,
	291, 529, 141, -415, 120, 281, 202, 537, 506, 504,
	535, 133, 239, 540, 539, 602, 602, -107, 2, 599,
	32, 31, -106, -110, 143, 461, -217, 501, 244, 2,
	-268, 602, 602, 602, 2, 251, 252, 446, 447, 28,
	602, 602, 188, -587, 2, 602, 602, 602, 2, 28,
	251, 252, 446, 447, 244, 2, 68, 450, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 2, -192, 458, 482, 213, 47,
	46, 74, 28, 392, 79, 366, 121, 127, 149, 530,
	205, 232, 233, 259, 93, 94, -417, 44, 252, 68,
	251, 447, -612, 446, -469, 502, 449, 455, 496, 263,
	443, 521, 102, 544, 434, 569, 396, 397, 494, 410,
	282, 158, 189, 4, 120, 313, 433, 460, 513, 281,
	442, 369, 84, 602, -638, 2, 501, -640, 2, 521,
	521, 2, -640, 2, -640, 2, -640, 2, -641, 521,
	566, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, -223,
	-225, -224, 602, 602, 602, 602, 602, 602, 602, -192,
	458, 2, 74, 28, -358, -360, 534, 242, 151, 352,
	-222, -224, 2, -567, -520, 2, -443, -541, -445, 590,
	591, 583, 498, 67, -324, 331, 570, -457, 127, 535,
	346, -540, -446, -459, 154, 362, 438, -380, 8, 9,
	5, 6, 7, -277, -447, -453, 526, 168, 336, -317,
	603, 10, 599, -564, -224, -458, 37, 208, 65, -524,
	-316, -278, -496, 243, -315, -298, -561, -562, 4, -534,
	-535, -525, -499, -507, -503, -504, -510, -268, -537, 77,
	111, 112, 110, 115, 114, 284, 283, 116, 113, 460,
	543, 66, 36, 216, 217, 248, 337, 218, 75, -563,
	142, -536, 240, 241, 475, 51, 399, 178, 126, 125,
	339, 56, 54, 551, -508, 122, 513, 514, 515, 516,
	193, 194, 58, 165, 166, 359, 383, 492, 523, 525,
	206, 270, 43, 106, 189, 238, 220, 247, 249, 253,
	271, 274, 314, 328, 333, 356, 358, 432, 467, -644,
	552, 487, 69, 70, -569, 402, -570, -292, -569, 602,
	602, 604, 602, -350, -352, -353, 2, 28, 139, 599,
	2, -474, 2, -475, -479, -224, 264, -478, 599, -476,
	597, -299, 347, -565, 439, -561, -562, -277, -298, -316,
	4, -534, -536, 601, -354, 599, 120, 448, 501, 78,
	232, 164, -410, 599, -268, 28, 346, 517, 604, -351,
	390, -455, 599, 346, 188, 349, 60, 295, 2, 2,
	2, 2, 2, 216, -268, 501, 119, 2, 262, 2,
	2, 2, 2, 2, 2, 2, -373, 216, 2, -299,
	554, -373, 216, 2, -373, 216, 2, -416, 2, 87,
	-282, 216, 2, -268, -308, 216, 2, -303, -305, -312,
	216, 2, -310, -268, -532, 216, 2, -531, -527, 10,
	-526, 5, 4, -534, -538, -535, -537, 77, -443, 2,
	-136, 2, 60, -268, 554, 2, 463, 2, 599, -148,
	2, 71, 521, 43, 458, -149, 2, -430, 2, -431,
	-264, -265, -266, -486, -267, 250, 389, 398, 573, 131,
	331, 569, -621, 188, 582, 517, -520, -520, -520, -381,
	601, 2, 2, 2, 2, 2, 2, -479, 216, -299,
	2, -296, -523, 4, -534, -538, -535, -539, 28, 31,
	32, 33, 35, 37, 38, 39, 40, 57, 65, 66,
	72, 76, 78, 87, 93, 102, 110, 111, 113, 112,
	114, 115, 116, 127, 131, 135, 139, 140, 144, 147,
	151, 168, 170, 183, 187, 188, 204, 207, 210, 223,
	237, 242, 244, 264, 268, 275, 283, 284, 331, 336,
	342, 346, 347, 351, 352, 372, 388, 405, 428, 453,
	460, 478, 495, 501, 511, 517, 519, 526, 534, 535,
	543, 545, 553, 558, 560, 561, 562, 563, -540, 2,
	-479, 216, 2, -302, 216, -479, -305, 2, -282, 2,
	-295, -523, 2, -321, 216, -299, -301, -305, -303, 2,
	2, 2, 2, -310, 2, -531, 216, 2, 28, 28,
	554, 390, 244, 517, 604, -371, -313, -314, -519, 8,
	-364, -268, 601, -443, 2, -136, -119, 2, 183, -443,
	216, 2, -136, 216, 2, -443, 216, 2, -136, 216,
	2, -268, 2, -607, 2, -531, 216, 216, -268, 2,
	295, 2, 2, 524, 2, 98, 501, 119, 2, 420,
	-628, 441, 528, 2, 2, 2, 2, 2, 2, 2,
	501, -287, 2, -268, 183, 485, -310, 216, -311, 2,
	454, -639, 402, -531, 216, 2, 554, -303, 216, 2,
	-303, 232, 246, -282, 216, 2, 506, 504, 506, 504,
	188, 2, 244, 2, 244, 2, -480, 2, -481, -475,
	-482, 597, 347, -490, 2, -489, -526, 550, -107, 599,
	-107, 599, 458, 599, -531, -299, -299, -443, 2, -136,
	-119, 2, -443, 2, -136, 2, -268, 2, -133, -531,
	-132, 599, 188, -268, 2, -443, 2, -136, -119, 2,
	-443, 2, -136, 2, -217, 183, 2, 120, 501, -192,
	2, 183, 545, 2, 8, 2, 223, -531, 449, 397,
	175, 2, 463, 2, 464, 74, -417, 569, 74, 188,
	2, 188, 2, -400, 2, 563, 390, 188, 2, 2,
	-591, 2, 346, 188, 2, 188, 2, 188, 2, 188,
	2, 188, 2, -191, 459, 522, 500, 394, 252, 2,
	-136, 560, -119, 252, 251, -443, 560, 2, -613, 183,
	447, -443, 2, 520, 261, 159, 188, -400, 2, 188,
	2, 188, 2, 5, 2, 395, 483, 2, 250, 389,
	483, 2, -299, 501, 554, 454, 120, 28, 2, 446,
	2, 2, 88, 89, 188, 2, 188, 2, 203, 188,
	2, 188, 501, 569, 2, -392, -479, -429, -430, -429,
	517, -358, -360, -192, 463, 2, -229, -390, -231, 183,
	-420, -421, -232, 275, 170, 342, -233, -399, 28, 139,
	-399, -399, 60, 600, 600, 11, 12, 76, 41, 590,
	591, 592, 593, 181, 594, 595, 588, 589, 587, 580,
	581, 585, 256, 257, 95, 584, 582, 86, 289, 440,
	171, 172, 173, 174, 417, 230, 34, 231, 14, 15,
	16, -324, 33, 351, 274, 570, 220, 467, 583, 17,
	18, 19, 247, 249, 333, 50, 223, -276, 362, -323,
	498, 67, -443, -443, -443, -443, -443, -443, -443, -443,
	358, 599, -386, -438, 597, -224, 599, 599, 599, 599,
	-519, -224, -443, -457, 600, -378, 599, -224, -457, -452,
	599, 438, 597, 599, -460, -443, 5, 5, 5, 599,
	601, -572, 564, 183, 599, 599, 599, 599, 599, 599,
	599, 599, 599, 599, 599, 599, 599, 599, 599, 599,
	385, -501, 599, -500, 599, -500, -500, 555, -498, 599,
	572, 565, 599, -498, 599, 599, 599, 599, 599, 599,
	599, 599, 599, 599, 599, 599, 599, 555, 604, -569,
	-354, 599, -382, -484, -443, 592, -382, -382, 346, -375,
	-443, 106, -403, 253, 314, 189, 271, 432, 238, -440,
	603, -440, -468, 572, -224, -476, -298, -224, -478, 599,
	-474, -468, -108, -519, -91, -104, -113, -136, -151, -196,
	-197, 592, -299, 599, 188, 599, 601, -523, 188, -364,
	-282, -309, -268, -299, -315, -316, -321, 2, 138, -375,
	-587, 529, 448, 28, 454, -364, -271, 38, -454, -493,
	-494, -543, 603, -542, -496, -506, -502, -505, 375, 379,
	-525, 54, 551, -508, 243, 4, -534, -536, 240, 241,
	475, 51, 399, 178, 126, 125, 339, 56, 513, 514,
	515, 516, 193, 194, 58, 552, 487, 69, 70, -587,
	529, 448, 28, 454, -364, 183, -364, 2, 2, 154,
	2, 2, 2, -268, -245, 604, 64, 425, 154, -373,
	216, -245, 154, -245, 154, -322, 216, -321, -245, 154,
	-245, 604, 154, -245, 604, 154, 601, 604, 154, -364,
	2, -416, -522, -375, 38, -430, 2, 127, -528, -526,
	5, -642, 604, 273, -327, 288, 330, 212, 347, 567,
	340, 131, -530, 5, 4, -453, -465, 127, 281, 243,
	-513, -515, 8, -514, 9, -516, 590, 591, -521, -520,
	109, 601, -523, -242, 418, 461, 361, -241, 24, 29,
	143, 234, 317, 548, 160, -340, 235, -337, 365, 154,
	479, 538, -601, -602, 445, 508, 509, 90, 340, 461,
	361, 418, 154, -396, -398, 38, 118, 317, 360, 61,
	227, 293, 294, 481, 557, 154, 461, 361, 418, 361,
	-13, -257, 24, 143, -259, -254, 461, -602, 99, 418,
	576, 423, 371, 493, 388, -602, -244, 479, 538, -601,
	-602, 445, 418, -243, -342, -337, 365, 154, 603, 24,
	143, 418, 461, 361, -624, -625, 29, 418, 361, -595,
	-289, -566, 223, 563, 154, -289, -289, -479, 216, -617,
	183, 2, -610, -132, 265, 5, 10, -531, -132, -371,
	604, 604, -523, 592, 447, 446, 154, 154, 154, 154,
	252, 183, 331, 331, 2, 2, 2, 2, 2, 190,
	-604, -629, 2, 2, -299, 216, -356, 346, -590, -372,
	501, -299, 183, 331, 43, -302, 216, 2, -305, 554,
	-595, 331, -304, 216, -299, 38, 599, 331, 2, -416,
	2, 232, -566, 331, -480, -318, -299, -475, -318, 461,
	-292, 38, -440, -299, 600, 604, -490, -490, -531, -205,
	563, 188, 102, 599, 599, -217, 563, 563, 252, -487,
	604, -486, 223, -532, -133, -531, 421, 252, -531, -590,
	-282, 2, -299, 2, 501, 254, -531, -205, 223, -531,
	-531, -531, -522, 28, 464, 2, -191, 459, 522, 89,
	464, 2, -299, 501, 120, 232, 80, -617, 183, 2,
	-268, -593, 183, -588, 433, 448, 529, -587, -299, 120,
	-299, 120, -299, 120, -299, -299, 2, 2, 2, 2,
	2, 85, 2, -136, -443, 2, 85, 2, 46, 480,
	-613, 183, 2, 520, 2, 520, 2, -268, -268, -268,
	482, 273, -299, -299, -299, -300, -305, 502, 447, -443,
	2, -631, 2, 188, 183, 2, 501, 232, 501, 232,
	120, 188, 74, 120, 28, 501, 444, -245, 604, -272,
	-229, -390, -522, -391, -390, -230, -229, -232, 183, 398,
	539, 317, 465, 258, -421, -420, 28, -443, -425, 177,
	316, -443, -423, -445, 590, 591, -514, -516, -374, 340,
	-223, -223, -223, -361, -470, -443, 388, 232, -495, -493,
	-493, -297, -523, 513, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	274, 220, 467, 50, 223, -443, 517, -443, -443, -443,
	-443, 311, 331, 336, 526, 168, 536, 139, 340, -645,
	495, 40, -450, -224, -379, 599, -464, 35, 478, 28,
	-457, 599, 2, -438, -443, -439, -325, -323, -268, 590,
	591, 592, 593, 594, 595, 580, 581, 582, 14, 15,
	16, 585, 589, 587, 588, 181, 95, 584, 289, 440,
	86, 171, 172, 173, 174, 256, 257, 17, 18, 19,
	34, 583, -376, -375, -375, 600, 553, 28, 139, 592,
	2, 600, 604, 38, 600, -443, -376, -456, -452, -375,
	-463, -462, 560, -411, -412, 568, 298, 123, 214, 296,
	-413, 452, -517, 8, -523, 592, -573, 176, 207, 599,
	600, 2, 600, 2, 600, -443, 2, 600, -443, 2,
	600, -443, 2, 600, -443, 2, 600, 2, 600, 2,
	-443, -443, -443, -443, -443, -443, -443, -375, 8, -517,
	-517, 513, 513, -517, -517, -517, -509, 375, 376, 377,
	378, 276, 277, 278, 279, 379, 380, 381, 382, 303,
	304, 305, 306, 299, 300, 301, 302, 307, 308, 309,
	310, 198, 199, 200, 201, 194, 195, 196, 197, -509,
	-405, 2, -511, -375, 4, 568, 298, 123, 214, 296,
	452, 5, -405, 2, -406, 2, -443, -375, -407, -444,
	-445, 590, 591, 583, -324, -457, -408, 2, -443, -376,
	-443, 57, 268, 519, -409, -443, 188, -375, -375, 2,
	-375, 2, -570, 38, -375, -367, 604, 188, 38, 4,
	-367, -367, 599, 600, 604, -404, 211, 292, 287, 246,
	-404, -474, -403, 253, -401, 356, -401, -401, -468, -283,
	597, 605, -523, -468, -467, -466, 38, -292, 353, -468,
	-468, 601, 600, -467, 598, -585, 599, 602, 602, 602,
	602, 602, -299, 599, -375, -523, 601, 484, 2, 600,
	247, 247, 247, 247, 247, 439, 600, 517, -589, -308,
	-312, 502, 2, 563, -106, 348, 600, 604, -366, 37,
	597, 601, -517, 2, 2, -512, 555, 599, 599, -412,
	599, 188, -589, -312, 502, 2, -365, 517, -268, 2,
	-299, -373, -245, 154, -373, -373, -245, 604, 154, -282,
	-303, -308, -310, -312, -268, -531, -532, -245, -304, -621,
	600, 521, -431, -326, 398, 477, 419, 456, 497, 8,
	9, 8, 9, 604, -523, 604, -622, 93, 517, 78,
	448, -261, 282, 517, -434, 216, 78, -544, -285, 93,
	-545, -268, 72, 535, 388, 187, 152, -622, 93, 388,
	-622, 93, 2, 234, 93, 461, 482, 28, 60, -479,
	41, 41, 28, -620, 329, 269, 559, 188, 569, 501,
	232, 448, 517, 517, -479, -398, -493, 118, 293, 294,
	60, -518, -513, 590, 591, -518, 60, -518, -518, -518,
	563, -302, -479, 448, 517, 517, 517, 408, 408, -254,
	-149, 517, 517, 28, -192, 426, 127, -643, 582, 408,
	604, 41, 41, 28, -620, 329, 269, 188, 517, -321,
	-283, 549, 42, 549, 42, 549, 517, 42, 448, 517,
	604, 42, 517, 517, -13, 461, -596, -273, 105, 323,
	286, 324, 97, 320, 96, 319, 103, 321, 104, 322,
	556, 334, 63, 318, 297, 325, -274, -275, 367, 547,
	120, -531, -13, -13, 461, 361, 418, 154, -618, 223,
	28, -606, 223, -487, 223, -487, -313, -268, 601, -136,
	-443, -443, -136, -443, -136, 46, 154, 154, 2, -639,
	262, 599, -330, 331, 188, -364, -488, 244, 604, -372,
	-587, 154, -529, -528, 116, 460, -397, -396, 331, -304,
	216, 2, 154, -354, 331, 148, 599, 396, 2, 154,
	-284, 216, -269, -268, -416, -248, 505, 154, -394, 545,
	-426, -136, 599, 127, 38, -426, -383, -384, -485, -385,
	-285, 599, -292, -440, -107, -489, 600, 600, 600, -204,
	350, -203, -268, 5, -217, 545, -329, -435, -434, -548,
	-549, -544, 274, 232, 535, 246, 169, -355, -286, -285,
	119, 400, 400, -211, 563, -132, -133, 600, -487, 223,
	485, -205, -205, -487, -487, -299, 183, -531, -205, -205,
	-205, 2, 2, 2, 2, -400, -299, -282, -321, -299,
	28, 601, -364, -364, -312, -308, -400, -282, -400, -282,
	-400, -282, -136, -443, 482, 2, 458, 183, 183, 601,
	-400, -357, 428, 2, 396, 120, 501, 365, 232, -299,
	-321, -299, -321, -282, 120, -282, 121, -299, -479, -391,
	-230, 347, 258, 465, -423, -424, -445, 438, 439, -424,
	438, 439, 8, 9, 8, 9, -234, 469, 335, -373,
	604, -239, 39, 135, 258, -299, 569, 150, -443, -443,
	517, -645, 495, -450, 150, -443, 311, 336, 526, 168,
	536, 139, 340, 188, 599, -444, -444, 600, -377, -443,
	-443, 598, 607, 600, 601, 600, -360, 604, -358, -443,
	-375, -375, 600, 601, -375, -364, 598, 598, 604, 600,
	-461, -462, 144, -443, 517, 517, 517, 517, 599, 600,
	601, -578, 357, 599, 599, -443, 600, 600, 600, 600,
	38, 604, 604, 604, 600, 604, 604, 604, 600, 600,
	600, 604, 600, 569, 569, 600, 600, 600, 600, 604,
	600, 604, 600, 188, 600, 600, -414, 372, 600, 11,
	12, 590, 591, 592, 593, 181, 594, 595, 588, 589,
	587, 580, 581, 582, 86, 289, 440, 14, 15, 16,
	-324, 247, 223, -444, -444, -444, -444, 600, -448, -449,
	188, 183, 38, -409, -409, -409, 600, 188, -375, 600,
	600, 599, -571, 291, 331, 600, -437, -436, 561, -484,
	-368, 2, -474, -294, -523, -437, -437, -375, -443, 253,
	253, -402, 545, 346, -404, -474, -467, -519, -442, -441,
	185, 39, 135, 326, 327, 219, 186, -467, -292, -354,
	-467, -467, -523, -468, -468, -466, 600, -586, -519, 600,
	-369, -477, -565, -360, 601, -523, -214, -566, -193, 5,
	336, -193, -193, -193, -193, -364, 517, 517, 223, 25,
	373, -493, 597, 598, 8, -523, 599, -517, -517, -517,
	-364, 188, 188, 223, 188, -529, 2, -245, -373, -245,
	-245, -321, -322, -245, -245, -245, -395, 563, -520, -430,
	533, 83, 398, 513, -520, -241, 418, -285, -285, -299,
	-309, 202, 409, -529, 331, -434, 216, -247, 331, -493,
	-293, -268, 599, -418, 565, 258, 258, 545, -285, -293,
	258, 216, -285, 216, -293, 2, -293, -597, 398, 341,
	-443, 60, -338, 280, 396, 332, -242, 418, 461, 361,
	-136, -136, -136, -136, -136, 599, -621, 545, 138, -299,
	-321, -299, -309, -529, -304, 461, 361, 418, 328, -315,
	-518, -518, -396, 461, 361, 418, -309, -529, -302, -529,
	-253, 216, -268, -253, 216, 448, -282, 408, 569, 45,
	-643, -243, -136, -136, -136, -136, -136, 599, -283, -244,
	418, 5, 216, -285, 5, -285, 216, 5, -268, -285,
	-309, -529, -625, 24, 143, -285, -309, -529, -273, -531,
	336, 541, -282, -595, -289, 448, 517, 517, -479, -614,
	-615, 204, 431, 448, 434, -364, -132, -208, 563, -132,
	-202, 228, 592, -592, -531, -268, 554, -268, -328, -331,
	-329, -285, -220, -221, 565, 563, 154, -319, -299, 597,
	-205, -531, -299, -488, -310, -311, 154, -354, 331, -531,
	38, 154, 599, 2, 2, -303, 346, 331, -284, 216,
	-249, 145, -643, -282, -437, -368, -393, -428, 428, 346,
	-355, 550, -292, -393, -370, 604, 188, 582, 601, -355,
	-483, 592, -107, -107, -205, 604, 599, 582, 582, 599,
	-531, -531, 600, 604, -247, -299, -284, 232, 232, -291,
	-269, 600, 604, 601, 599, 582, 582, -213, 350, -212,
	146, 260, 245, 471, 472, 473, 474, 137, 470, 124,
	-487, -211, -133, 188, 188, -66, 563, 501, -205, 603,
	434, -268, -400, -400, -400, 458, 458, -268, -364, -295,
	-282, -299, -296, -321, 183, 183, -282, 539, -424, 347,
	285, -470, -240, 571, -299, 603, -443, -443, 150, 150,
	-443, -444, -444, -443, 150, 188, 599, -443, -454, 33,
	33, 600, 604, -439, -443, -323, 600, 553, -360, -360,
	600, 592, -523, 603, 600, -452, 147, -443, 511, 298,
	214, 296, -413, 296, -413, -413, -517, 5, -523, 592,
	-579, -288, 599, -268, 561, -359, 352, 600, -495, -493,
	-443, -443, -443, -443, -443, -517, -498, -498, -513, -513,
	-443, -448, -443, -495, -493, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, 139, 331, 340, -444, -449,
	-448, -443, -443, -493, 600, 600, 600, -375, -106, 599,
	291, -387, 207, -443, -487, 604, -387, -387, 600, -474,
	-474, 599, -443, 253, 598, 604, 606, 582, 582, -354,
	601, -466, -467, 598, 600, 604, 600, 604, -427, 38,
	600, -523, -437, -216, -215, 136, 53, 107, 134, 336,
	-364, -364, 448, 349, 5, 8, 597, 598, 601, -517,
	600, 600, 600, -364, -364, 448, -364, -245, -245, 119,
	317, -443, 517, 517, 60, 223, 154, 331, 547, -550,
	-545, 152, -443, 599, 232, 599, 599, 2, -236, -237,
	-238, 143, 461, 24, -623, 2, 545, 154, -245, 154,
	-245, 567, -338, 599, 599, 517, 448, -261, 517, 563,
	-375, -443, -206, 127, -522, -602, 603, -602, 603, 448,
	517, 517, 448, 517, 517, 331, 154, 563, 167, 167,
	569, -253, 563, -375, 517, -497, 48, 26, 331, -303,
	-245, 154, 517, 517, 529, 461, -531, 336, -13, -309,
	-529, -304, 461, 361, 418, -594, -365, -594, 204, -312,
	-618, -487, -210, 350, -209, 146, 430, 137, 260, 225,
	-487, -208, 188, 244, 563, -304, 2, 600, 600, 604,
	-551, 38, 344, 344, 599, -299, -87, 563, -486, -519,
	-598, 563, 43, -302, 38, 154, -595, -136, -304, -491,
	-492, 5, 38, -299, 154, 346, 331, -250, 267, -643,
	-527, -566, -360, -393, -382, 332, 91, 600, -437, -384,
	-368, -443, 2, 600, -203, -204, -531, -531, -531, -205,
	-217, -217, -435, -332, 599, -284, -269, 599, -217, -286,
	2, -532, -531, -531, 604, 599, 582, 582, 582, 582,
	-211, -487, -132, -136, 350, -299, 592, -400, -344, -343,
	365, 340, -344, 438, 438, 347, 177, 263, -239, -283,
	-443, -443, 150, 33, 33, -443, -443, -454, 600, -443,
	-443, -375, 598, 5, -443, 600, 600, 8, -443, 600,
	601, -580, -268, -443, 600, 60, 600, 600, 604, 604,
	600, 600, 600, 600, 600, 600, 600, -449, 188, 139,
	340, 599, 600, 600, -106, -451, 210, 60, -474, -451,
	-451, -402, -364, -474, -441, -283, 597, -283, 597, -523,
	-519, -477, 599, 601, -215, 582, -531, -531, 563, -312,
	598, 2, 597, -523, 600, -312, 119, -285, -285, 501,
	438, -253, 388, -434, 154, -552, 93, -554, 76, 169,
	102, 331, 336, 535, 388, 72, 127, 346, 405, -633,
	-634, -635, 38, 574, 575, 600, -362, -471, -565, 599,
	-268, -362, -364, 331, 490, 127, 346, 331, 127, 346,
	558, 119, 2, 529, 79, -285, -293, -364, -364, -299,
	-309, -529, 161, 600, 604, 582, 2, 592, 592, -309,
	-529, -304, -309, -529, -302, 154, -253, 363, 167, 161,
	600, -283, 5, 5, 154, -280, 76, -285, 5, -285,
	-303, 119, 448, 517, 517, 346, 346, 349, -614, -615,
	-208, 604, 599, 582, 582, -208, -532, -132, 2, -354,
	-345, 234, -285, -549, -546, -547, 388, -553, -555, 169,
	388, -136, 2, -219, -218, -268, 5, 599, -330, 350,
	598, -600, 350, -599, 117, 137, -529, -397, -136, -304,
	-354, 600, 604, 148, -419, 545, -283, -299, 154, -251,
	266, -643, -527, -248, -422, -420, 140, 599, 346, -136,
	-360, 582, 600, 600, 119, 119, 226, 153, -362, 599,
	599, -364, 119, 600, -212, -213, -531, -132, -531, -531,
	-211, -487, -67, -68, 232, 93, 370, -296, 501, 232,
	599, 599, -239, -443, -443, -443, 600, -360, -523, 592,
	-574, 365, 600, -470, -443, -443, -444, 188, 599, -454,
	600, -575, 562, -443, -388, -389, -443, 436, 108, 208,
	-575, -575, 600, -519, -519, 2, -531, 2, 517, 597,
	2, 188, 223, 38, 408, -434, -293, -297, -290, -268,
	169, 216, 336, 558, -418, 258, 599, -444, 539, -299,
	599, 2, 215, 215, 30, 60, -636, 131, 237, 600,
	604, -472, -279, -268, -443, -472, 600, 600, 336, 539,
	336, 558, -443, 539, -493, 599, -245, -245, 600, 600,
	-443, 517, -522, 100, -520, 2, -602, -253, -282, -443,
	517, 5, -245, -297, -245, -245, -280, 529, -309, -529,
	-304, -619, 502, 455, 530, 449, 191, 437, -619, 183,
	-209, -210, -531, -132, -208, 38, -335, 236, 2, -551,
	258, -290, 258, -632, 563, 600, 604, 582, 582, -328,
	-220, -88, -89, 518, -486, 604, 599, 582, -354, 38,
	5, 599, 599, -268, 346, 599, -283, -263, 92, -643,
	-527, -249, -393, 332, -364, 93, -422, -450, -205, 599,
	599, -333, 81, 94, 128, 215, 192, 233, 482, 488,
	28, -333, 600, -362, -362, 600, 599, -205, 600, 604,
	28, 599, 28, 599, -299, -321, -375, -375, 600, -360,
	60, 604, 600, 600, -444, -454, 600, -576, -577, -288,
	604, 599, 599, 462, 598, 598, -364, 2, -364, -253,
	388, -268, -554, -290, 331, 545, -443, -444, -270, 599,
	-443, 599, 599, 38, 127, 237, 132, 221, -433, -637,
	101, 491, 224, -471, -239, 600, -432, 545, 405, -444,
	-280, -362, 599, 599, 599, 582, 188, 599, -497, -245,
	-303, 517, 2, 2, 188, -594, 600, -608, 403, -136,
	-339, -340, 223, 599, -334, 346, 119, 317, -218, -520,
	-520, 600, 38, -89, 9, -599, -600, -443, 38, -136,
	-491, -362, -299, -362, 346, -255, -254, 275, -527, -250,
	600, -293, -393, -532, -532, -432, 600, 600, -532, -68,
	-364, -364, 600, 600, -581, 396, 439, 209, -375, -361,
	600, 604, 38, -389, 2, 2, 2, 408, 154, 211,
	600, -556, 290, -268, 600, -397, -397, 38, 132, 221,
	-335, 599, -240, -472, -335, 211, -299, -603, 545, 600,
	-347, -346, -343, -349, -348, -343, -375, -520, 100, 363,
	-375, -280, -364, -364, 346, -611, 189, -610, 5, 10,
	-220, 363, -363, -473, -285, 82, 119, -345, -136, 600,
	-136, 600, 600, -419, 600, -299, -252, -533, 408, 410,
	-643, -251, -437, 600, 600, -433, -432, -341, -337, 600,
	600, 600, 600, -582, -583, 50, 532, 109, -443, -582,
	-582, -577, -579, 169, 563, -557, -560, -559, 579, 468,
	189, 364, 600, 490, 557, 600, 600, -341, -364, 563,
	-354, -443, -432, 600, 604, 550, 600, 604, 550, 600,
	188, 600, -245, -616, 563, -245, -619, -207, 563, 46,
	-334, -299, 600, 604, 387, 133, 143, -335, -632, -432,
	599, -433, 599, -260, -259, -643, -513, -263, 140, -205,
	-205, -335, -433, -221, 563, -205, -584, 152, -583, 384,
	182, 438, 384, 182, -584, -584, -290, 55, -559, 579,
	-560, 579, 539, 133, -636, 600, 55, -556, -335, -346,
	223, -348, 188, 363, 204, 188, 446, -610, 30, -262,
	-261, 599, -473, 439, 439, 2, -339, -334, -433, -362,
	-335, -362, -256, -257, -258, -364, -255, 332, 539, -341,
	-335, -437, 109, 207, 512, 317, 33, 582, -558, 317,
	425, 64, 461, -558, -437, 582, -557, 599, 599, 349,
	-364, 350, -364, 2, -220, -335, 600, -341, 600, -252,
	461, -221, -341, 438, 354, -583, -443, 23, 336, 127,
	-443, -636, -375, -375, -245, -204, 599, 600, -334, -341,
	-432, -221, -433, -260, -383, -437, -221, 600, 600, -204,
	-246, 64, 425, -262, -221, -433, -437, -335, -256, -437,
	-437, -336, -337, 517, 600, -437, -335, -341, 599, -341,
	-221, -375, -221, -437, 600, -437, -336,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 557, 558, 560, 561, 562, 564,
	565, 567, 569, 571, 572, 573, 575, 576, 578, 579,
	580, 581, 582, 584, 586, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	653, 655, 0, 1420, 1422, 1424, 1426, 0, 808, 0,
	36, 37, 39, 0, -2, 337, 339, 341, 343, 0,
	373, 375, 376, 378, 380, 381, 382, 384, -2, 0,
	490, 491, 493, 495, -2, 0, 1015, 1017, 1019, 0,
	642, 644, 0, 1022, 1024, 1026, 0, 0, 665, 666,
	0, 1531, -2, 657, 659, 661, 663, 733, 735, 737,
	739, 741, 743, 745, 747, 749, 751, 752, 754, 756,
	758, 760, 762, 763, 765, 767, 769, 770, 772, 773,
	775, 777, 779, 781, 783, 785, 787, 789, 791, 793,
	795, 797, 799, -2, 802, 803, 804, -2, -2, 0,
	-2, -2, -2, 1438, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 434, 436, 438, 440, 442, 445,
	447, 449, 1589, 497, 499, 501, 503, 505, 507, 509,
	0, -2, 1603, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 109, 110, 111, 112,
	113, 114, 115, 116, 75, 76, 77, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 107, 73, 0, 0, 1562, 1564, 1566, 1568, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 559, 563, 566, 568, 570, 574,
	577, 583, 585, 587, 542, 543, 546, 2300, 2318, 2319,
	2320, 2323, 2324, 2325, 2326, 2327, 2328, 2779, 2861, 2862,
	2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359,
	2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369,
	2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379,
	2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389,
	2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399,
	2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409,
	2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419,
	2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429,
	2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439,
	2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449,
	2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459,
	2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469,
	2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479,
	2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489,
	2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499,
	2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509,
	2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519,
	2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529,
	2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539,
	2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549,
	2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559,
	2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569,
	2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579,
	2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589,
	2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599,
	2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609,
	2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619,
	2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629,
	2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639,
	2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649,
	2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659,
	2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669,
	2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679,
	2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689,
	2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699,
	2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709,
	2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719,
	2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729,
	2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739,
	2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749,
	2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 544,
	545, 1209, 0, 611, 609, 2285, 612, 2577, 614, 616,
	484, 485, 486, 487, 488, 489, 0, 635, 625, 1601,
	636, 638, 639, 640, 641, 606, 604, 0, 635, 2354,
	633, 1418, 1419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 496, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 413, 1267, 1268, 1269, 1403, 1404,
	2624, 1445, 0, 234, 654, -2, -2, 2744, -2, 688,
	689, -2, -2, 703, 706, 698, 2748, 0, 2627, 2611,
	-2, 709, 1421, 1423, 1425, 806, 807, 2304, 0, 0,
	0, 0, 0, 38, 40, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 244, -2, -2, -2, -2, 0,
	0, 2672, 2406, 2253, 2320, 2256, 2251, 338, 340, 342,
	344, 345, 0, 0, 0, 0, 0, 0, 0, 374,
	377, 379, 383, -2, 385, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 1086, 1078, 1079,
	1325, 0, 0, 0, -2, 492, 494, 547, 548, 0,
	1590, 1590, 555, 556, -2, 0, 0, 0, 0, 308,
	296, 1016, 1018, 1020, 1021, 0, 0, 0, 0, 0,
	643, 645, 0, 0, 276, 1023, 1025, 1027, 1028, 0,
	0, 0, 0, 0, 0, 310, 0, 0, 658, 660,
	662, 664, 734, 736, 738, 740, 742, 744, 746, 748,
	750, 753, 755, 757, 759, 761, 764, 766, 768, 771,
	774, 776, 778, 780, 782, 784, 786, 788, 790, 792,
	794, 796, 798, 800, 801, 814, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, -2, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 911, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, -2,
	996, 0, 0, 817, 819, 820, 821, 822, 0, 884,
	909, 910, 920, 805, 0, 1249, 1591, 1447, 1428, 1442,
	1447, 1430, 1431, 1432, 1433, 1434, 1439, 1441, 1435, 1436,
	1437, 42, 44, 46, 48, 50, 52, 54, 56, 58,
	60, 435, 437, 439, 441, 443, 446, 448, 450, -2,
	1560, 1561, 498, 500, 502, 504, 506, 508, 510, 646,
	0, 648, 0, 818, -2, 0, 1595, 1595, 1595, 0,
	0, 1561, 1559, 0, 651, 652, 713, 714, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 2127, 1955, 0,
	715, -2, 1988, 1990, 2719, 2550, 2744, 2126, 1992, 1993,
	1994, 1995, 1996, 0, 1998, 1999, 2000, 2001, 2002, 2003,
	0, 2005, 0, 2010, 2011, 2012, 0, 2726, 2230, 2314,
	-2, 0, 0, 2732, 2310, 0, 2093, 2028, -2, -2,
	2337, 2316, 1799, 1800, 1801, 1802, 1803, -2, -2, 2762,
	2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041,
	2042, 0, 2707, 2727, 2728, 2733, 2735, 2729, 2716, 2053,
	2420, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1826, 1835, -2, -2, -2, -2,
	-2, -2, -2, 2720, 2721, 2738, 2741, 2747, 2752, 2753,
	2725, 2734, 2761, 2763, 2764, 2765, 2766, 2767, 2768, 2769,
	2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 1827,
	-2, -2, -2, -2, 1578, 2591, 1581, 1209, 1579, 1563,
	1565, 0, 1567, 0, 0, 0, 1572, 1598, 1596, 0,
	1647, 1576, 1577, 1669, 1669, 1693, 0, 1674, 0, 1693,
	1590, 1720, 0, 1680, 2616, 2029, 2030, 0, 2320, 2315,
	-2, -2, 2759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 607, 0, 613, 615, 0, 0, 0, 634,
	1600, 0, 0, 0, 0, 0, 0, 0, 416, 417,
	418, 419, 420, 2727, 0, 0, 0, 425, 0, 427,
	428, 429, 430, 431, 432, 433, 205, 2727, 515, 540,
	0, 205, 2727, 518, 205, 2727, 521, 0, 524, 1323,
	205, 2727, 527, 2281, 205, 2727, 530, 532, 2289, 205,
	2727, 536, 2296, 2294, 537, 2727, 539, 313, 311, 312,
	2333, 2334, 2341, 2342, 2343, 2344, 2760, 2762, 1414, 1415,
	1416, 1417, 0, 1444, 1324, 656, 0, 682, 0, 686,
	687, 2715, -2, 0, 2636, 691, 692, -2, 694, 1448,
	1452, 1453, 1454, 1455, 1456, 0, 0, 0, 0, 1461,
	0, 0, 0, 0, 683, 684, 701, 702, 707, 710,
	0, 809, 810, 811, 812, 813, 72, 0, 2727, 1720,
	74, 0, 2275, 2345, 2346, 2347, 2348, 2349, 2780, 2781,
	2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791,
	2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801,
	2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811,
	2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821,
	2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831,
	2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841,
	2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851,
	2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 78,
	0, 2727, 83, 0, 2727, 0, -2, 96, 0, 108,
	0, 2278, 117, 0, 2727, 0, 2250, -2, 0, 217,
	297, 298, 299, 0, 1053, -2, 2727, 1261, 1263, 1263,
	0, -2, 0, 0, 0, 1006, 2247, 2252, 1007, 2271,
	1008, 2257, 0, 346, 347, 348, 349, 350, 0, 351,
	2727, 353, 354, 0, 356, 357, 2727, 359, 360, 0,
	362, 0, 364, 0, 256, 262, 2727, 2727, 387, 389,
	0, 391, 392, 0, 394, 0, 0, 0, 398, -2,
	414, 0, 411, 401, 402, 404, 405, 406, 407, 408,
	0, 454, 452, 2286, 0, 0, -2, 2727, 0, 1050,
	0, 0, 1303, -2, 2727, 1254, 0, 1310, 2727, 1306,
	0, -2, 0, 1588, 2727, 1465, 1082, 1083, 1084, 1085,
	1732, 481, 0, 1496, 0, 1498, 0, 1517, 1726, 1669,
	0, 0, 1731, 0, -2, 600, 2303, -2, 550, 0,
	551, 0, -2, 0, 325, 0, 0, 1031, 1033, 1034,
	1036, 1037, 1040, 1041, 1042, 1043, 0, 1045, 1706, 277,
	279, 0, 0, 0, 1030, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 0, 0, 667, 0, 0, 815,
	816, 0, 0, 827, 828, 829, 0, 325, 2628, 2586,
	2441, 836, 0, 839, 842, -2, 0, 0, 0, 0,
	846, 0, 851, 852, 853, 0, -2, 0, 860, 862,
	1014, 864, 0, 0, 866, 0, 870, 0, 873, 0,
	875, 0, 877, -2, -2, -2, 885, 886, -2, 891,
	-2, 0, 895, -2, 0, 898, 0, 901, -2, 0,
	911, 907, 908, 0, 0, 0, 0, 928, 929, 0,
	938, 0, 941, 942, 943, 0, 947, 948, 0, 950,
	951, 952, 953, 0, 2699, 2633, 2406, 0, 959, -2,
	965, 967, 0, -2, 0, 983, 0, 987, 0, 0,
	995, 0, 0, 823, 824, 205, 1724, 1427, -2, 1429,
	0, -2, 0, 647, 0, 650, 1620, 1546, 1543, 0,
	1617, 1618, 1547, 0, 0, 0, 1554, 0, 1593, 1594,
	0, 0, 0, 1533, 1534, 0, 0, 0, 0, 2132,
	2133, 2134, 2135, 2148, 2136, 2137, 2147, 2145, 2146, 2138,
	2139, 2144, 2158, 2159, 2149, 2150, 2140, 2153, 2151, 2152,
	2154, 2155, 2156, 2157, 0, 0, 2163, 0, 2141, 2142,
	2143, 2171, 0, 0, 2172, 0, 2174, 0, 2164, 2160,
	2161, 2162, 0, 1934, 1936, 2238, 0, 0, 0, 2170,
	2165, 2166, 1872, 1873, 1874, 1875, 1876, 1909, 1913, 1914,
	0, 0, 1989, 2235, 2234, 1991, 0, 0, 2186, 0,
	2004, -2, 0, 2127, 2181, 0, 0, 2013, 2014, 2015,
	0, 0, 2186, 0, 0, 2229, 2025, 2026, 1864, 0,
	0, 2095, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 1812, 0, 1814, 0, 1815, 1816, 1823, 1836, 0,
	0, 0, 0, 1840, 0, 0, 0, 0, 0, 0,
	0, 2210, -2, 0, 0, 0, 0, 1828, 0, 1580,
	0, 0, 1651, 2239, 2243, 2244, 1651, 1651, 0, 0,
	2187, 1717, 1717, 0, 0, 1712, 1712, 1712, 1710, 1693,
	0, 1693, 1703, 0, 1693, 1693, 0, -2, 1674, 0,
	0, 1703, 0, 1687, 588, 590, 592, 594, 595, 596,
	598, 1721, 1722, 0, 0, 0, 0, 2321, 0, 0,
	0, 0, 2293, 0, 0, 2306, 0, 370, 0, 0,
	0, 2682, 2627, 0, -2, 618, 637, 1590, 0, 2189,
	1747, 1751, 0, 1753, 1754, 1755, 1756, 1757, 0, 0,
	1748, -2, 1824, 1826, 1847, 2338, 2339, 2340, 1807, 1808,
	1809, 1810, 1811, 1819, 1806, 1806, 1806, 1817, 1846, 1838,
	1846, 1842, 1792, 1793, 1794, 1829, 1830, 1831, 1832, 0,
	2682, 2627, 0, -2, 627, 0, 0, 1528, 415, 0,
	422, 423, 424, 0, 511, 0, 203, 204, 0, 205,
	2727, 516, 0, 519, 0, 205, 2727, 2245, 525, 0,
	528, 0, 0, 534, 0, 0, 0, 0, 0, 205,
	1530, 0, 0, 0, 0, -2, 696, 704, 705, 224,
	225, 0, 1450, 0, 1457, 724, 725, 726, 1459, 1460,
	0, 1462, 699, 727, 728, 729, 730, 731, 732, 0,
	2259, 2260, 2261, 2262, 2265, 2266, 0, 0, 697, 717,
	700, 0, 711, 118, 1400, 0, 0, 161, 0, 1400,
	1400, 0, 0, 0, 0, 188, 0, 1121, 0, 0,
	0, 0, 133, 146, 157, 130, 131, 0, 0, 0,
	0, 0, 0, 84, 1231, 0, 1234, 0, 0, 0,
	0, 0, 0, 0, 1247, 0, 0, 0, 0, 0,
	98, 99, 0, 0, 104, 105, 0, 145, 0, 0,
	0, 0, 0, 1493, 0, 140, 120, 0, 0, 133,
	147, 159, 0, 192, 194, 1118, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 226, 0, 0, 0, 1255,
	0, 0, 0, 1587, 0, 0, 0, 0, 2727, 1398,
	0, 1383, 0, 1706, 2491, -2, -2, 277, 1706, 1005,
	0, 0, 2321, 2255, 0, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 390, 393, 395, 396, 397, 0,
	1302, 0, 403, 444, 1180, 2727, 0, 0, 471, 466,
	0, 468, 0, 0, 0, 1230, 2727, 1228, 2290, 0,
	1252, 0, 1209, 2727, 2288, 0, 0, 0, 1311, 2330,
	1320, 1324, 1483, 0, 483, 0, 1499, 1501, 0, 0,
	1727, 0, 1729, 1669, 1590, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 1044, 283,
	0, 1705, 0, 0, 1706, 277, 2602, 1029, 325, 325,
	1706, 669, 1706, 671, 0, 0, 830, 831, 0, 325,
	325, 325, 837, 838, 840, 841, -2, -2, -2, -2,
	843, 844, 935, 0, 0, 0, 934, 854, 0, 856,
	859, 863, 0, 999, 2611, 2627, 2682, 1012, 935, 2406,
	935, 2406, 935, 2406, 874, 876, 879, 923, 931, 890,
	897, 0, 892, 896, 899, 902, 0, 904, 912, 0,
	-2, 0, 915, 0, 917, 0, 919, 935, 936, 939,
	946, 949, 954, 955, 956, 957, 2301, 958, -2, 962,
	963, 0, 974, 979, 980, 976, 0, 0, 0, 0,
	0, 0, 990, 991, 0, 0, 998, 1248, 0, 1440,
	1620, 1546, 649, 1537, 1619, 1538, 1545, 1548, 0, 0,
	1550, 0, 1552, 0, 1615, 1616, 1623, 1624, 0, 1634,
	1635, 1627, 0, -2, 0, 0, 1630, 1631, 1556, 0,
	1573, 1574, 1575, 1604, 1607, 1339, 0, 2861, 1868, 1742,
	1869, 1870, 2274, 0, 1877, 1878, 1879, 1880, 1881, 1882,
	1883, 1884, 1885, 1886, -2, -2, -2, -2, -2, -2,
	-2, -2, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, -2, -2, -2, 1910, 1911, 1912, -2,
	2173, 2175, 0, 2238, 0, -2, 0, -2, -2, -2,
	-2, 1931, 0, 1933, 1938, 1940, 1942, 0, 0, 0,
	0, 2237, 1952, 2221, 2222, 0, 0, 2129, 2130, 2131,
	1937, 0, 1956, 2236, 2233, 0, 0, 2167, 0, 2132,
	2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142,
	2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152,
	2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162,
	2163, 2164, 0, 2185, 1603, 2017, 0, 0, 0, 0,
	2024, 2009, 2183, 0, 2182, 0, 0, 0, 2193, 0,
	2228, 2224, 0, 2272, 1863, 1850, 1851, 1852, 1853, 1854,
	1855, 1865, 0, 2269, 2307, 2313, 2103, 0, 0, 0,
	2054, 2055, 2056, 2057, 2058, 0, 2060, 2061, 0, 2063,
	2064, 0, 2066, 2067, 0, 2069, 2070, 2071, 2072, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1760, 1761, 1762,
	1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772,
	1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782,
	1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 0,
	0, 2075, 0, 2196, -2, -2, -2, -2, -2, -2,
	-2, -2, 0, 2077, 0, 2079, 2187, 2207, 0, 0,
	1957, 0, 0, 0, 0, 2127, 0, 2082, 2187, 2215,
	0, 0, 0, 0, 0, 2187, 0, 2220, 0, 2089,
	0, 2091, 1582, 0, 0, 1737, 0, 0, 0, 2242,
	1737, 1737, 0, 1646, 0, 0, 1713, 1714, 1715, 1716,
	0, 0, 1717, 0, 1707, 1711, 1708, 1709, 1703, 1666,
	0, 0, 2276, 1703, 1672, 1702, 0, 1209, 1692, 1703,
	1703, 0, -2, 1676, 1693, 0, 0, 589, 591, 593,
	597, 599, 0, 0, 1603, -2, 0, -2, 327, 1208,
	0, 0, 0, 0, 0, 608, 610, 0, 0, 531,
	0, 0, 624, 0, 602, 0, 605, 0, 1738, 1741,
	0, 0, 1752, 1758, 1759, 0, -2, 0, 0, 1848,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 426,
	541, 205, 513, 0, 205, 205, 522, 0, 0, 205,
	533, 205, 2297, 205, 2295, 314, 538, 1529, 237, 0,
	685, 0, 1449, 1458, 0, 721, 0, 723, 0, 2263,
	2267, 2264, 2268, 0, 712, 0, 0, 0, 0, 1399,
	0, 1346, 0, 0, 165, 2727, 0, 207, 0, 0,
	1173, 2282, 0, 1163, 0, 0, 2427, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 1232, 1233, 1235, 1242, 1244,
	0, 1238, 2270, 0, 0, 1239, 0, 1241, 1243, 1245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	1264, 0, 0, 1265, 1266, 1471, 1472, 0, 1492, 1493,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	2249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1257, 0, 1298, 1296, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 0, 0,
	0, -2, 1259, 1260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 316, 2248, 2258, 0, 1038,
	1039, 352, 355, 358, 361, 243, 0, 0, 399, 0,
	0, 1088, 1063, 0, 0, 453, 325, 0, 0, 467,
	471, 2299, 1048, 221, 222, 223, 1226, 1229, 0, 1209,
	2727, 1275, 0, 0, 0, 0, 0, 0, 1309, 0,
	0, 2727, 2277, 2329, 2330, 1485, 1493, 0, 1737, 0,
	1515, 1502, 0, 0, 0, 1515, 1519, 1520, 1522, 1523,
	0, 0, 1728, 1734, 549, 601, 1590, 1590, 325, 323,
	2553, 321, 318, 320, 0, 0, 0, 1089, 1091, 1092,
	1093, 207, 0, 2330, 1163, 2480, 2330, 0, 1505, 1507,
	0, 0, 0, 271, 0, 280, 1706, 278, 283, 0,
	0, 0, 465, 668, 673, 825, 0, 325, 833, 834,
	835, 881, 925, 933, 978, 845, 847, 848, 849, 0,
	0, 0, 1013, 1009, 1010, 1011, 865, 935, 868, 935,
	871, 935, 894, 900, 913, 906, 914, 0, 0, 0,
	927, 944, 0, 961, 0, 0, 0, 0, 0, 0,
	0, 984, 985, 986, 988, 993, 992, 997, 1725, 1541,
	1542, 1544, 0, 1553, 0, 0, 1629, -2, -2, 1628,
	1632, 1633, -2, -2, -2, -2, 1549, 0, 1558, 1555,
	0, 1614, 1337, 1338, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 1953, 0, -2, 1932, 1935, 1939, 1941,
	1943, 0, 0, 0, 0, 0, 0, 2176, 0, 2178,
	1954, 2231, 2234, 2169, 0, 2125, 0, 0, 1602, 1603,
	1603, 0, 2023, 0, 2184, 0, 2191, 2192, 0, 2016,
	0, 2225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2027, 0, 0, 0, 0, 2059, 2062, 2065, 2068,
	0, 0, 0, 0, 2048, 0, 0, 0, 2052, 1818,
	1804, 0, 1846, 1844, 1845, 1839, 1846, 1843, 1796, 0,
	1795, 0, 2074, 0, 2076, 2078, 0, 0, 2080, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1960, 1961, 1962, 1982, 2081, 2213, 2214,
	0, 0, 0, 0, 0, 0, 2087, 0, 2219, 2088,
	2090, 1590, 0, 1583, 0, 1648, 1637, 1736, 0, 2240,
	1706, 1650, 1652, 2241, 2279, 1637, 1637, 0, 2188, 0,
	0, 1697, 0, 0, 0, 1699, 1670, 0, 0, 1664,
	0, 1656, 1657, 1658, 1659, 1660, 1661, 1671, 1209, 1701,
	1673, 1677, 2307, 0, 1703, 0, 1688, 0, 1690, 1723,
	0, 1682, 1685, 0, 0, 2322, 1737, 0, 365, 371,
	372, 366, 367, 368, 369, 617, 0, 0, 0, 0,
	0, 2190, 0, 1743, 0, 1749, 0, 0, 0, 0,
	626, 0, 0, 0, 0, 1527, 421, 512, 205, 517,
	520, 2246, 205, 526, 529, 535, 233, 0, 681, -2,
	719, 720, 722, 0, 718, 162, 1400, 0, 0, 1342,
	1344, 1348, 1354, 1357, 0, 167, 2727, 179, 0, 1137,
	0, 2280, 0, 0, 0, 0, 0, 0, 1402, 0,
	0, 2727, 205, 2727, 205, 182, 184, 187, 0, 191,
	189, 0, 1125, 0, 0, 1128, 119, 1400, 0, 0,
	122, 126, 134, 135, 138, 0, 0, 0, 144, 0,
	0, 0, 1359, 1363, 1371, 0, 0, 0, 1236, 1237,
	1240, 1246, 85, 0, 0, 0, 1367, 1369, 1375, 97,
	100, 2727, 2291, 102, 2727, 0, 1341, 0, 0, 0,
	0, 193, 124, 128, 136, 137, 139, 0, 1377, 121,
	0, 220, 0, 0, 210, 205, 2727, 0, 212, 0,
	213, 214, 227, 0, 0, 0, 1051, 1052, 1297, 1250,
	1251, 0, 1262, 1256, 0, 0, 0, 0, 0, 1379,
	1380, 0, 0, 0, 1398, 1395, 1706, 239, 0, 1706,
	247, 0, 2254, 0, 263, 386, 0, 0, 0, 0,
	1087, 1191, 0, 1058, 0, 0, 0, 459, 455, 0,
	464, 470, 469, 475, -2, 0, 0, 0, 0, -2,
	0, 0, 1313, 1307, 1308, 0, 0, 0, 0, 2727,
	1487, 1493, 0, 1588, 1603, 482, 1494, 1515, 0, 0,
	0, 1504, 1500, 1497, 1737, 0, 0, 0, 0, 0,
	1730, 1733, 552, 553, 300, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 1094, 1098, 0, 2330, 2330, 0,
	2284, 0, 0, 0, 0, 0, 0, 281, 0, 284,
	0, 0, 0, 289, 290, 291, 292, 293, 294, 0,
	283, 273, 1706, 0, 0, 670, 0, 0, 832, 0,
	855, 858, 867, 869, 872, 916, 918, 935, 945, 968,
	969, 1115, 0, 1115, 0, 0, 989, 1551, 0, 1626,
	1557, 1608, 1609, 0, 1339, 0, 1871, 1916, 0, 0,
	-2, 0, 0, 1920, 0, 0, 0, -2, 0, 0,
	0, 2177, 2179, 0, 2233, 2168, 2018, 0, 0, 0,
	2022, 2006, 2007, 0, 2128, 2194, 2223, 2227, 0, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 0, 2273, 2308, 2312,
	2101, 2102, 2106, 2287, 0, 0, 0, 2031, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 1841, 0, 0,
	2195, 2206, 2208, 1958, 1959, 1963, 1964, 1965, 1966, 1967,
	1968, 1969, 1970, 1971, 1972, -2, -2, -2, 1976, 1977,
	1978, -2, -2, -2, 1983, 0, 0, 0, 2209, 2211,
	2212, 2216, 2217, 0, 2084, 2085, 2086, 2218, 0, 1590,
	1584, 1645, 0, 1735, 1649, 0, 1645, 1645, 1597, 1695,
	0, 0, 1719, 0, 1667, 0, 1668, 0, 0, 1700,
	0, 1675, 1678, 1679, 1689, 0, 1681, 0, 1684, 0,
	2018, -2, 326, 328, 330, 0, 333, 334, 0, 0,
	620, 621, 0, 619, 603, 0, 0, 1745, 0, 0,
	1821, 1825, 1849, 629, 630, 0, 628, 514, 523, 235,
	0, 1704, 0, 0, 0, 0, 0, 0, 206, 1135,
	1172, 0, 0, 0, 1162, 0, 0, 1178, 169, 170,
	171, 0, 0, 0, 0, 180, 0, 0, 177, 0,
	186, 190, 1122, 0, 0, 0, 0, 1347, 0, 0,
	0, 141, 142, 143, 0, 148, 0, 149, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1477, 1478,
	0, 1468, 0, 0, 0, 208, 0, 0, 0, 1336,
	229, 0, 0, 0, 0, 0, 1300, 1301, 1258, 1360,
	1364, 1372, 0, 0, 0, 0, 635, 0, 640, 1397,
	0, 247, 245, 0, 248, 0, 251, 252, 0, 254,
	247, 241, 0, 0, 0, 1209, 400, 1061, 1179, 0,
	1181, 0, 1059, 0, 0, 1180, 451, 0, 458, 0,
	472, 0, 0, 1230, 0, 0, 1253, 1273, 1209, 0,
	1312, 1314, 0, 1322, 0, 0, 0, 1489, 1493, 0,
	1482, 1483, 1622, 1495, 1513, -2, 0, 0, 1603, 1521,
	1518, 1524, 1525, 0, 322, 0, 317, 319, 0, 303,
	0, 0, 1090, 1095, 0, 0, 0, 0, 0, 1506,
	1508, 0, 1032, 1035, 0, 0, 0, 0, 0, 0,
	272, 283, 1706, 309, 0, 826, 850, 926, 970, 1114,
	0, 0, 972, 0, 0, 1625, 1612, 1613, 1610, 1339,
	1918, 1922, 0, 0, 0, 1924, -2, 0, 1946, -2,
	-2, 2180, 2232, 1997, 1603, 2019, 2021, 2008, 2226, 1866,
	0, 2108, 2105, 0, 2092, 0, 2043, 2044, 0, 0,
	2047, 2049, 2050, 2051, 1805, 1798, 1797, 2205, 0, 0,
	0, 0, 2083, 1585, 0, 2097, 0, 0, 1653, 2097,
	2097, 1696, 0, 1698, 1665, 1654, 0, 1662, 0, 2308,
	1691, 1683, 0, 0, 331, 0, 335, 336, 0, 0,
	1739, 1744, 0, 1750, 1820, 0, 236, 163, 164, 1351,
	1355, 1352, 0, 166, 0, 1136, 0, 1139, 0, 0,
	0, 0, 1146, 1163, 0, 0, 0, 0, 0, 0,
	1165, 0, 1164, 0, 0, 1195, 0, 1327, 1334, 0,
	-2, 0, 0, 0, 173, 196, 0, 0, 0, 0,
	199, 1401, 175, 0, 0, 205, 205, 0, 0, 1343,
	1345, 1358, 0, 0, 0, 0, 151, 0, 0, 1361,
	1365, 1373, 1368, 1370, 1376, 0, 103, 0, 1479, 0,
	0, 1378, 218, 219, 0, 205, 0, 205, 211, 205,
	1336, 0, 0, 0, 0, 0, 0, 0, 1381, 1382,
	238, 0, 0, 0, 0, 240, 315, 247, 388, 0,
	1109, 0, 1191, 1183, 1184, 1185, 0, 1190, 1192, 0,
	0, 1075, 1060, 0, 1071, 0, 0, 1088, 1063, 0,
	456, 473, 0, 476, 0, 479, 1049, 1227, 1270, 1209,
	0, 1304, 0, 0, 0, 0, 0, 0, 0, 1491,
	1493, 0, 1484, 1485, 1515, 1621, 0, 0, 0, 1503,
	1622, 0, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 285, 0, 286, 287, 288, 295,
	274, 275, 672, 674, 0, 0, 680, 1113, 0, 0,
	0, 0, 1611, 1926, -2, -2, 1947, 0, 2309, 2311,
	1603, 0, 2094, 1605, 0, 0, -2, 0, 0, 0,
	1586, 1569, 0, 1644, 1636, 1638, 1640, 2614, 2401, 2726,
	1570, 1571, 1718, 0, 0, 1686, 332, 622, 0, 0,
	1746, 0, 0, 0, 1353, 168, 0, 1140, 1141, 2283,
	1143, 0, 1145, 1147, 1148, 1149, 0, 1152, 0, 2332,
	0, 1157, 1160, 1161, 0, 0, 1174, 1196, 0, 1205,
	0, 1329, 1339, 1333, 0, 1331, 1207, 0, 172, 198,
	174, 200, 195, 0, 1336, 0, 176, 185, 0, 0,
	123, 0, 0, 2395, 154, 152, 150, 101, 1340, 125,
	0, 220, 228, 1335, 230, 215, 205, 0, 1362, 1366,
	1374, 0, 1389, 1390, 1391, 1392, 0, 0, 0, 0,
	249, 0, 250, 253, 0, 0, 1124, 0, 1062, 1182,
	0, 1193, 1194, 1065, 0, 1064, 0, 0, 0, 0,
	0, 457, 460, 0, 463, 0, 0, 0, 0, 0,
	1315, 1313, 0, 1321, 0, 0, 0, 1467, 0, 0,
	1486, 1487, 480, 1509, 0, 0, 1515, 1526, 302, 0,
	0, 1096, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
	1107, 1097, 1207, 0, 0, 1171, 0, 307, 282, 0,
	676, 0, 678, 0, 971, 973, 0, 0, 2020, 2112,
	0, 0, 2045, 2046, -2, 0, 1986, 2096, 2098, 0,
	0, 0, 0, 0, 1655, 1663, 623, 1740, 631, 1349,
	0, 1356, 1138, 1142, 0, 0, 0, 1153, 1213, 0,
	0, 1230, 1230, 1166, 0, 0, 1199, 1200, 1109, 0,
	1201, 1202, 1203, 1328, 1614, 1334, 1109, 0, 0, 197,
	202, 0, 0, 0, 0, 0, 0, 0, 209, 231,
	1336, 0, 1393, 1394, 0, 0, 246, 267, 0, 1271,
	1063, 1123, 0, 0, 1073, 0, 1076, 0, 1072, 1069,
	1070, 1061, 0, 461, 462, 477, 0, 478, 0, 1274,
	0, 0, 1322, 0, 0, 1474, 1466, 1493, 1488, 1489,
	1737, 1512, 1516, 0, 0, 1205, 1207, 1120, 0, 675,
	0, 0, 981, 982, 0, 0, 0, 0, 2107, 1606,
	1987, 0, 0, 1639, 1641, 1642, 1643, 1350, 0, 0,
	1151, 1218, 0, 0, 0, 0, 0, 1167, 1197, 1198,
	1120, 0, 1332, 1330, 1176, 0, 1209, 178, 0, 1207,
	0, 1129, 0, 0, 1132, 0, 0, 155, 2395, 153,
	0, 205, 1386, 205, 0, 270, 0, 261, 259, 260,
	1065, 0, 0, 1187, 1189, 0, 1077, 1109, 1075, 474,
	1272, 1305, 1207, 0, 1205, 0, 1481, 1493, 1475, 1476,
	0, 1491, 0, 325, 325, 1109, 1205, 1063, 1119, 325,
	677, 679, 2104, 2124, 2113, -2, 2685, 2402, 0, 2124,
	2124, 2099, 2100, 0, 0, 1154, 1214, 1215, 0, 1210,
	1211, 1212, 2331, 1155, 1156, 1158, 1159, 1195, 0, 0,
	1213, 201, 1109, 1126, 0, 0, 1127, 0, 0, 158,
	0, 160, 232, 1384, 0, 1387, 0, 255, 0, 0,
	1057, 0, 1186, 0, 0, 0, 0, 1124, 1065, 1205,
	0, 1109, 0, 1470, 1480, 0, 1490, 1467, 0, 304,
	305, 1120, 1109, 1737, 0, 306, 2109, 0, 0, 2115,
	2116, 2117, 2118, 2119, 2110, 2111, 1144, 0, 1216, 0,
	1217, 0, 0, 0, 1737, 1204, 0, 1218, 183, 1130,
	0, 1133, 0, 156, 0, 0, 0, 265, 266, 1054,
	1056, 0, 1188, 1066, 0, 1068, 1063, 1074, 1109, 0,
	1120, 0, 1463, 1469, 1473, 2292, 1474, 1510, 0, 1063,
	1120, 1170, 0, 2121, 2122, 0, 0, 0, 1219, 0,
	1222, 1223, 0, 1220, 1175, 0, 1195, 0, 0, 1385,
	205, 0, 0, 1067, 1065, 1120, 1207, 1063, 1205, 1481,
	0, 1737, 1063, 2120, 2123, 2114, 1150, 1221, 1224, 1225,
	1206, 1177, 0, 0, 1388, 268, 0, 1112, 1057, 1063,
	1205, 1737, 1109, 1470, 1737, 1168, 1737, 1117, 0, 0,
	1108, 1110, 1111, 1055, 1737, 1109, 1318, 1120, 1464, 1511,
	1169, 1131, 1116, 0, 269, 1316, 1120, 1063, 0, 1063,
	1737, 0, 1737, 1319, 1117, 1317, 1134,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 588, 3, 594, 589, 3,
	599, 600, 592, 590, 604, 591, 601, 593, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 607, 3,
	580, 582, 581, 585, 603, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 597, 3, 598, 595, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 605, 587, 606, 583,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 584, 57923, 586, 57924, 596,
	57925, 602, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1476
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1481
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1483
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1486
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1503
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1512
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1514
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1517
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1612
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1626
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1644
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1648
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1652
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1682
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1686
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1693
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1705
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1715
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1722
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1732
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1739
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1749
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1758
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1765
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1789
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1821
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1825
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1829
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1839
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1845
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1854
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1869
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1875
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1883
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1893
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1897
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1906
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1907
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1911
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1920
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1932
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1937
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1944
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1956
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1963
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1971
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1976
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1980
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1985
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1991
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1999
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2010
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2020
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2030
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2039
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2050
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2056
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2064
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2068
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2072
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2076
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2082
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2087
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2098
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2102
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2108
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2112
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2119
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2129
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2134
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2149
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2154
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2159
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2164
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2169
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2174
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2178
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2183
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2192
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2204
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2214
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2221
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2224
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2230
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2237
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2245
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2252
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2261
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2270
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2275
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2282
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2290
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2313
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2317
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2323
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2333
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2337
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2343
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2358
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2362
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2368
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2372
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2408
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2419
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2447
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2465
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2469
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2472
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2476
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2483
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2490
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2497
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2502
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2509
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2517
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2548
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2590
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2602
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2612
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2632
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2636
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2640
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2652
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2667
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2676
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2680
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2684
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2785
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2798
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2802
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2812
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2835
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2839
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2843
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2849
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2857
		{
			sqlVAL.union.val = nil
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2899
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2909
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2935
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2953
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2968
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2975
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2979
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2988
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2992
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2996
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3000
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3004
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3008
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3012
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3016
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3020
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3036
		{
			return unimplemented(sqllex, "alter function")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3040
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3044
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3081
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3086
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3090
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3096
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3101
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3106
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3111
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3116
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3120
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3139
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3143
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3147
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3169
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3179
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3183
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3187
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3197
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3207
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3211
		{
			sqlVAL.union.val = nil
		}
	case 326:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3223
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3237
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3243
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3253
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3257
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3265
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3273
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3277
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3281
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3289
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3290
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3291
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3292
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3293
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3303
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3311
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3320
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3347
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3353
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3356
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3389
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3392
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3400
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3403
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3407
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3411
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3415
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3419
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3432
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3435
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3439
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3444
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3456
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3458
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3459
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3462
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3463
		{
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3464
		{
			return helpWith(sqllex, "CREATE")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3471
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3477
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3478
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3481
		{
			return unimplemented(sqllex, "create access method")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3482
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3483
		{
			return unimplemented(sqllex, "create cast")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3484
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3485
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3486
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3487
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3488
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3489
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3490
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3491
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3492
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3493
		{
			return unimplemented(sqllex, "create publication")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3494
		{
			return unimplemented(sqllex, "create rule")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3495
		{
			return unimplemented(sqllex, "create server")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3496
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3497
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3498
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3499
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3502
		{
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3503
		{
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3506
		{
		}
	case 412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3507
		{
		}
	case 413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3510
		{
		}
	case 414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3511
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3514
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3516
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3517
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3518
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3519
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3520
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3521
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3522
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3523
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3524
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3525
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3526
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3527
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3528
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3529
		{
			return unimplemented(sqllex, "drop server")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3530
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3531
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3532
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3535
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3537
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3538
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3539
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3541
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3542
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3543
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3544
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3554
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3562
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3566
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3570
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3580
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3589
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3596
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3602
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3608
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3612
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3623
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3658
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3689
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3693
		{

			sqlVAL.union.val = nil
		}
	case 472:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3710
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3725
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3729
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3736
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3740
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3749
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3766
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3776
		{
			return helpWith(sqllex, "DELETE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3779
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3780
		{
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3788
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3791
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3792
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3793
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3794
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3795
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3804
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3805
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3806
		{
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3807
		{
			return helpWith(sqllex, "DROP")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3810
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3811
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3812
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3813
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3814
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3815
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3816
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3824
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3828
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3832
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3849
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3861
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3864
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3876
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3879
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3896
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3904
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3927
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3934
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3942
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3949
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3963
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3972
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3987
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3995
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3999
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4002
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4006
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4011
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4029
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4031
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4036
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4040
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4063
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4070
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4072
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4080
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4088
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4096
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4104
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4115
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4123
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "DELETE")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4130
		{
			return helpWith(sqllex, "INSERT")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4138
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			return helpWith(sqllex, "DELETE")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4152
		{
			return helpWith(sqllex, "INSERT")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4154
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4158
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4159
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4167
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4177
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4185
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4193
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4197
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4201
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4218
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4226
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4230
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4234
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4244
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4256
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4259
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4282
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4286
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4308
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4312
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4323
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4326
		{
			return helpWith(sqllex, "GRANT")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4349
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4353
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4357
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4361
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4365
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4375
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4386
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4389
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4394
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4398
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4408
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4412
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4426
		{
			return helpWith(sqllex, "RESET")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4427
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4439
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4442
		{
			return helpWith(sqllex, "RESET")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4450
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4453
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4467
		{
			return helpWith(sqllex, "USE")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4471
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4472
		{
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4473
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4477
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4478
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4479
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4480
		{
			return helpWith(sqllex, "USE")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4496
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4514
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4532
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4540
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4544
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 673:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4548
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4591
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4594
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4604
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4620
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4623
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4625
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4628
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4631
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4645
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4650
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4667
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4670
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4672
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4675
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4679
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4698
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4702
		{
			return unimplemented(sqllex, "set from current")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4706
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4711
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4720
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4725
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4737
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4742
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4763
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4795
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4813
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4817
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = tree.Low
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4827
		{
			sqlVAL.union.val = tree.Normal
		}
	case 726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = tree.High
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4842
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4846
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4855
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4859
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4874
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4875
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4876
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4878
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4882
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4900
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4902
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4905
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4906
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "SHOW")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4918
		{
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4919
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4922
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4926
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4931
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4936
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4941
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4946
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4956
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4958
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.str = "client_encoding"
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.str = "timezone"
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4974
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4992
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4996
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5007
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5015
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5023
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5029
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5037
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5055
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5064
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5072
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5082
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5086
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5089
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5091
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5094
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5096
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5100
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5103
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5114
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5122
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5126
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5134
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5137
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5145
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5148
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5154
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5164
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5171
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5185
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5194
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5201
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5204
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5217
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5225
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5233
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5236
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5238
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5242
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5251
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5255
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5258
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5266
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5269
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5271
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5274
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5285
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5290
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5294
		{
			sqlVAL.union.val = true
		}
	case 883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5296
		{
			sqlVAL.union.val = true
		}
	case 884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5298
		{
			sqlVAL.union.val = false
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5319
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5323
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5326
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5327
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5328
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5330
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5334
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5345
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5347
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5355
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5371
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5372
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5382
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5388
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5390
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5396
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5404
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 911:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5440
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5445
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5447
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5451
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5454
		{
			sqlVAL.union.val = true
		}
	case 921:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = false
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5463
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5466
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5471
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5479
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5489
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5499
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5502
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5509
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5512
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5514
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5517
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = true
		}
	case 935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5521
		{
			sqlVAL.union.val = false
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5528
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5535
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5546
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5549
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5556
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5560
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5564
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5575
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5589
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5597
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5602
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5607
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5611
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5625
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5630
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5635
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5640
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5645
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5648
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5658
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5662
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5664
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5668
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5679
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5690
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5708
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5716
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5731
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5737
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5742
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5747
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5751
		{
		}
	case 981:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5760
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5768
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5774
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5783
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5788
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5792
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5795
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5804
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5808
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5824
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5854
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5864
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5871
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5878
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6011
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6054
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6059
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6063
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6084
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6088
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6095
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6112
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6113
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6114
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6115
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6125
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6126
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6127
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6128
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6136
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6139
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6149
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6158
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6167
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6180
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6204
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6212
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6220
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6231
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6246
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6253
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6267
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6278
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6295
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6334
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6350
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6372
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6379
		{

			sqlVAL.union.val = nil
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6385
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6391
		{
			sqlVAL.str = ""
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6395
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = nil
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6405
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6418
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6422
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6428
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6442
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6448
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6462
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6477
		{
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6478
		{
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6479
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6497
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6499
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6504
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6505
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6506
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6518
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6534
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6547
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6556
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6560
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6571
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6574
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6576
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6577
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6578
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6584
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6600
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6605
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.str = ""
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6630
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6644
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6650
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6672
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6684
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6691
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6698
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6704
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6714
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6748
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6759
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6793
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6811
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6852
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6897
		{

			sqlVAL.union.val = true
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = false
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6907
		{
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6911
		{
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6914
		{
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6931
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6946
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6971
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7014
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7025
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7032
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7042
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7052
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7067
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7074
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7080
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7095
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7111
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7132
		{
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7133
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7134
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7135
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7136
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7137
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7155
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7159
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7165
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7171
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7209
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7213
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7222
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7238
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7250
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7258
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7270
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7293
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7302
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7310
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7314
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7321
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7324
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7326
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7336
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7338
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7340
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7342
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7345
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7348
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7350
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7352
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7363
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7388
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7422
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7426
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.str = ""
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = true
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7456
		{

			sqlVAL.union.val = true
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7461
		{
			sqlVAL.union.val = false
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7471
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7485
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7497
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7509
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7519
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7529
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7557
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7577
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7581
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7597
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7610
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7624
		{
			sqlVAL.union.val = nil
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7630
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7634
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7639
		{
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7640
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7665
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7667
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7669
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7671
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7673
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7675
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7713
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7731
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7750
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7767
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7784
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7788
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = false
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = true
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7813
		{
			sqlVAL.union.val = false
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7819
		{
			sqlVAL.union.val = true
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = false
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7829
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7842
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7848
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7854
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7862
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.str = ""
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7891
		{
			sqlVAL.str = ""
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7915
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7921
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7927
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7957
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7992
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8017
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8124
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8132
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8152
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8158
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8170
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8176
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8190
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8196
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8208
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8220
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8229
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8255
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8270
		{
			sqlVAL.union.val = true
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = false
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8288
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = tree.Types
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8311
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8315
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8319
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8338
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8343
		{
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8344
		{
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8347
		{
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8348
		{
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8359
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8377
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8386
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8407
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8415
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8436
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8444
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8455
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8459
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8460
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8461
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8480
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8482
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8485
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8498
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8503
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8512
		{
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8513
		{
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8514
		{
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8528
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8531
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8534
		{
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8535
		{
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8539
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8553
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8563
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8576
		{
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8578
		{
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8582
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8605
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8631
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8641
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8671
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.str = ""
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8681
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8694
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8699
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8716
		{

		}
	case 1477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8731
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.str = ""
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.str = ""
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.str = ""
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.str = ""
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8786
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8799
		{
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8800
		{
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8822
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8829
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8847
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8851
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8860
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8909
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8920
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8936
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8940
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8978
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9010
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.nameList(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9031
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9040
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.nameList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9046
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9149
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9190
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9225
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9226
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9227
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9288
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9332
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9344
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9348
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = true
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = false
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9401
		{
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9402
		{
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9410
		{
			sqlVAL.union.val = nil
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9415
		{
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9416
		{
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = true
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = false
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = false
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqlVAL.union.val = true
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9440
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9445
		{
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9446
		{
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9449
		{
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9450
		{
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9464
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9491
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9512
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9517
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9529
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9533
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9543
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9576
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9631
		{
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9632
		{
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9635
		{
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9636
		{
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9653
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9663
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9669
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9670
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9671
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9672
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9676
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9702
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9704
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9719
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9741
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9746
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9751
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9767
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9783
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9795
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9814
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9855
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9865
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9883
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9900
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9911
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9941
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9952
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9974
		{
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9976
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.union.val = nil
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = true
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = false
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10062
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.str = tree.AstFull
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10079
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.str = tree.AstRight
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.str = tree.AstInner
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10093
		{
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10094
		{
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10118
		{
			sqlVAL.str = tree.AstHash
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10122
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10130
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.str = ""
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10163
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10168
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10186
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10192
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10198
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10208
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = true
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = false
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = true
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = false
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10257
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10270
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10278
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10279
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10297
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10299
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10307
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10320
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10327
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10336
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10376
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10388
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10389
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = types.Geography
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10438
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10446
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10472
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10480
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = nil
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = types.Int2
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = types.Int
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = types.Float4
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = types.Float
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10523
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10531
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10539
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = types.Bool
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10553
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = types.Float
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10572
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10578
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10600
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = types.String
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = true
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = false
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = types.Date
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10649
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10657
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10671
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10680
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10688
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10705
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10715
		{
			sqlVAL.union.val = true
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.union.val = false
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.union.val = false
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = types.Interval
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10729
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10756
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10780
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10813
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10828
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10844
		{
			sqlVAL.union.val = nil
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10858
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10895
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10899
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10903
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10907
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10918
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10927
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10931
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10935
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10939
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10943
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10959
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11067
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11075
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11097
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11188
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11194
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11254
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11271
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11276
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11288
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11296
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11300
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11304
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11376
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11384
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11392
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11484
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11488
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11493
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11495
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11499
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11507
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11515
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11519
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11528
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11543
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11554
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11566
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11570
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11573
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11577
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11584
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11585
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11587
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11600
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11609
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11662
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11675
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11687
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11697
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11706
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11710
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11758
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11766
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11770
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11774
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11778
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11782
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11790
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11797
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11800
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11805
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11814
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11820
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11823
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11832
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11841
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11843
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11846
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11851
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11853
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11856
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11861
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11866
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11868
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11875
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11876
		{
			return unimplemented(sqllex, "treat")
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11897
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11899
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11902
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11918
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11929
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11943
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11949
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.str = ""
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12032
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12038
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12051
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12079
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12098
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12115
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12119
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12124
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12137
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12148
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12164
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12186
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12187
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12188
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12190
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12191
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12192
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12194
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12195
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12197
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12198
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12202
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12203
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12204
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12206
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12207
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12208
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12211
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12224
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12240
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12247
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12248
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12249
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12273
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12277
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12287
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12291
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12302
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12306
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12312
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12316
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12323
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12329
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12333
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12339
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12343
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12359
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12363
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12373
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12396
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12400
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12404
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12410
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12417
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12421
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12438
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12450
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12472
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12476
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12480
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12498
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12505
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12509
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12515
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12521
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12525
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12532
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12538
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12542
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12549
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12555
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12559
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12564
		{
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12565
		{
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12569
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12573
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12588
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12592
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12596
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12604
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12608
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12614
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12637
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12645
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12668
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12677
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12681
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12685
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12689
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12695
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12699
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12714
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12718
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12730
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12734
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12743
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12754
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12763
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12771
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12788
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12873
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12881
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12885
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12891
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12895
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12903
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12930
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12937
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12941
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12945
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12959
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12963
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12967
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12980
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12989
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13007
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13020
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13027
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13052
		{
			sqlVAL.str = ""
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13058
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13062
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
