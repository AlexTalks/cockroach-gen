// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:76

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:713
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12527

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1431,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	254, 368,
	-2, 0,
	-1, 73,
	236, 221,
	497, 221,
	-2, 0,
	-1, 84,
	224, 1192,
	238, 1192,
	254, 364,
	380, 364,
	390, 972,
	425, 364,
	437, 972,
	481, 972,
	508, 364,
	534, 972,
	-2, 0,
	-1, 90,
	130, 1431,
	231, 1431,
	519, 1431,
	520, 1431,
	-2, 0,
	-1, 106,
	147, 1402,
	166, 1402,
	179, 1402,
	234, 1402,
	267, 1402,
	332, 1402,
	342, 1402,
	514, 1402,
	-2, 1373,
	-1, 145,
	155, 837,
	253, 837,
	383, 806,
	442, 806,
	500, 837,
	502, 806,
	-2, 0,
	-1, 147,
	4, 1433,
	21, 1433,
	22, 1433,
	23, 1433,
	24, 1433,
	25, 1433,
	26, 1433,
	27, 1433,
	28, 1433,
	30, 1433,
	31, 1433,
	37, 1433,
	42, 1433,
	43, 1433,
	45, 1433,
	46, 1433,
	47, 1433,
	48, 1433,
	49, 1433,
	50, 1433,
	51, 1433,
	53, 1433,
	54, 1433,
	55, 1433,
	56, 1433,
	58, 1433,
	59, 1433,
	60, 1433,
	61, 1433,
	62, 1433,
	63, 1433,
	64, 1433,
	68, 1433,
	69, 1433,
	70, 1433,
	71, 1433,
	73, 1433,
	74, 1433,
	75, 1433,
	79, 1433,
	80, 1433,
	81, 1433,
	82, 1433,
	83, 1433,
	84, 1433,
	85, 1433,
	88, 1433,
	89, 1433,
	90, 1433,
	91, 1433,
	92, 1433,
	94, 1433,
	96, 1433,
	97, 1433,
	98, 1433,
	99, 1433,
	100, 1433,
	101, 1433,
	103, 1433,
	104, 1433,
	105, 1433,
	107, 1433,
	108, 1433,
	116, 1433,
	117, 1433,
	118, 1433,
	119, 1433,
	121, 1433,
	122, 1433,
	123, 1433,
	125, 1433,
	126, 1433,
	127, 1433,
	129, 1433,
	130, 1433,
	132, 1433,
	133, 1433,
	134, 1433,
	137, 1433,
	138, 1433,
	139, 1433,
	141, 1433,
	142, 1433,
	144, 1433,
	145, 1433,
	146, 1433,
	148, 1433,
	149, 1433,
	150, 1433,
	151, 1433,
	152, 1433,
	153, 1433,
	154, 1433,
	155, 1433,
	156, 1433,
	157, 1433,
	158, 1433,
	159, 1433,
	160, 1433,
	161, 1433,
	162, 1433,
	163, 1433,
	165, 1433,
	171, 1433,
	172, 1433,
	173, 1433,
	174, 1433,
	178, 1433,
	180, 1433,
	184, 1433,
	185, 1433,
	186, 1433,
	187, 1433,
	188, 1433,
	189, 1433,
	190, 1433,
	191, 1433,
	192, 1433,
	193, 1433,
	194, 1433,
	195, 1433,
	196, 1433,
	198, 1433,
	199, 1433,
	201, 1433,
	202, 1433,
	204, 1433,
	205, 1433,
	206, 1433,
	207, 1433,
	208, 1433,
	209, 1433,
	210, 1433,
	211, 1433,
	212, 1433,
	214, 1433,
	215, 1433,
	217, 1433,
	218, 1433,
	219, 1433,
	220, 1433,
	224, 1433,
	225, 1433,
	226, 1433,
	227, 1433,
	228, 1433,
	231, 1433,
	232, 1433,
	233, 1433,
	235, 1433,
	237, 1433,
	238, 1433,
	240, 1433,
	242, 1433,
	243, 1433,
	244, 1433,
	246, 1433,
	250, 1433,
	251, 1433,
	252, 1433,
	253, 1433,
	254, 1433,
	255, 1433,
	257, 1433,
	258, 1433,
	259, 1433,
	261, 1433,
	262, 1433,
	264, 1433,
	265, 1433,
	268, 1433,
	272, 1433,
	273, 1433,
	274, 1433,
	277, 1433,
	278, 1433,
	279, 1433,
	280, 1433,
	282, 1433,
	283, 1433,
	284, 1433,
	285, 1433,
	286, 1433,
	287, 1433,
	288, 1433,
	289, 1433,
	290, 1433,
	291, 1433,
	292, 1433,
	293, 1433,
	294, 1433,
	295, 1433,
	296, 1433,
	297, 1433,
	298, 1433,
	299, 1433,
	300, 1433,
	301, 1433,
	302, 1433,
	303, 1433,
	305, 1433,
	307, 1433,
	308, 1433,
	309, 1433,
	310, 1433,
	311, 1433,
	312, 1433,
	313, 1433,
	314, 1433,
	315, 1433,
	316, 1433,
	317, 1433,
	318, 1433,
	320, 1433,
	322, 1433,
	324, 1433,
	325, 1433,
	327, 1433,
	328, 1433,
	329, 1433,
	330, 1433,
	331, 1433,
	334, 1433,
	337, 1433,
	338, 1433,
	339, 1433,
	340, 1433,
	343, 1433,
	344, 1433,
	345, 1433,
	347, 1433,
	349, 1433,
	350, 1433,
	351, 1433,
	352, 1433,
	353, 1433,
	354, 1433,
	355, 1433,
	356, 1433,
	357, 1433,
	358, 1433,
	359, 1433,
	360, 1433,
	362, 1433,
	363, 1433,
	364, 1433,
	365, 1433,
	366, 1433,
	367, 1433,
	368, 1433,
	369, 1433,
	370, 1433,
	371, 1433,
	372, 1433,
	373, 1433,
	374, 1433,
	375, 1433,
	376, 1433,
	378, 1433,
	379, 1433,
	381, 1433,
	382, 1433,
	383, 1433,
	384, 1433,
	385, 1433,
	386, 1433,
	387, 1433,
	388, 1433,
	389, 1433,
	390, 1433,
	391, 1433,
	392, 1433,
	394, 1433,
	396, 1433,
	397, 1433,
	398, 1433,
	403, 1433,
	405, 1433,
	406, 1433,
	407, 1433,
	408, 1433,
	409, 1433,
	410, 1433,
	411, 1433,
	412, 1433,
	414, 1433,
	415, 1433,
	416, 1433,
	418, 1433,
	419, 1433,
	420, 1433,
	421, 1433,
	422, 1433,
	423, 1433,
	425, 1433,
	426, 1433,
	427, 1433,
	428, 1433,
	429, 1433,
	430, 1433,
	431, 1433,
	432, 1433,
	433, 1433,
	434, 1433,
	435, 1433,
	437, 1433,
	438, 1433,
	439, 1433,
	440, 1433,
	441, 1433,
	442, 1433,
	444, 1433,
	445, 1433,
	446, 1433,
	447, 1433,
	448, 1433,
	449, 1433,
	451, 1433,
	452, 1433,
	453, 1433,
	454, 1433,
	455, 1433,
	456, 1433,
	457, 1433,
	459, 1433,
	461, 1433,
	462, 1433,
	463, 1433,
	464, 1433,
	465, 1433,
	466, 1433,
	467, 1433,
	468, 1433,
	469, 1433,
	470, 1433,
	471, 1433,
	472, 1433,
	473, 1433,
	474, 1433,
	475, 1433,
	477, 1433,
	478, 1433,
	480, 1433,
	482, 1433,
	483, 1433,
	484, 1433,
	485, 1433,
	486, 1433,
	487, 1433,
	488, 1433,
	489, 1433,
	490, 1433,
	492, 1433,
	493, 1433,
	494, 1433,
	495, 1433,
	496, 1433,
	498, 1433,
	500, 1433,
	501, 1433,
	502, 1433,
	503, 1433,
	504, 1433,
	505, 1433,
	507, 1433,
	508, 1433,
	509, 1433,
	510, 1433,
	512, 1433,
	513, 1433,
	516, 1433,
	517, 1433,
	518, 1433,
	519, 1433,
	520, 1433,
	521, 1433,
	522, 1433,
	524, 1433,
	527, 1433,
	528, 1433,
	529, 1433,
	530, 1433,
	531, 1433,
	532, 1433,
	534, 1433,
	535, 1433,
	536, 1433,
	537, 1433,
	542, 1433,
	543, 1433,
	544, 1433,
	545, 1433,
	546, 1433,
	547, 1433,
	-2, 0,
	-1, 148,
	1, 1289,
	128, 1289,
	242, 1289,
	321, 1289,
	378, 1289,
	387, 1289,
	551, 1289,
	575, 1289,
	-2, 0,
	-1, 150,
	1, 1289,
	575, 1289,
	-2, 0,
	-1, 151,
	1, 1289,
	575, 1289,
	-2, 0,
	-1, 152,
	1, 1289,
	497, 1289,
	575, 1289,
	-2, 0,
	-1, 181,
	147, 1401,
	166, 1401,
	179, 1401,
	234, 1401,
	267, 1401,
	332, 1401,
	342, 1401,
	514, 1401,
	-2, 1376,
	-1, 224,
	4, 1440,
	5, 1440,
	6, 1440,
	7, 1440,
	8, 1440,
	9, 1440,
	10, 1440,
	21, 1440,
	22, 1440,
	23, 1440,
	24, 1440,
	25, 1440,
	26, 1440,
	27, 1440,
	28, 1440,
	30, 1440,
	31, 1440,
	37, 1440,
	38, 1440,
	42, 1440,
	43, 1440,
	44, 1440,
	45, 1440,
	46, 1440,
	47, 1440,
	48, 1440,
	49, 1440,
	50, 1440,
	51, 1440,
	53, 1440,
	54, 1440,
	55, 1440,
	56, 1440,
	58, 1440,
	59, 1440,
	60, 1440,
	61, 1440,
	62, 1440,
	63, 1440,
	64, 1440,
	65, 1440,
	66, 1440,
	67, 1440,
	68, 1440,
	69, 1440,
	70, 1440,
	71, 1440,
	73, 1440,
	74, 1440,
	75, 1440,
	77, 1440,
	79, 1440,
	80, 1440,
	81, 1440,
	82, 1440,
	83, 1440,
	84, 1440,
	85, 1440,
	88, 1440,
	89, 1440,
	90, 1440,
	91, 1440,
	92, 1440,
	94, 1440,
	96, 1440,
	97, 1440,
	98, 1440,
	99, 1440,
	100, 1440,
	101, 1440,
	103, 1440,
	104, 1440,
	105, 1440,
	106, 1440,
	107, 1440,
	108, 1440,
	109, 1440,
	110, 1440,
	111, 1440,
	112, 1440,
	113, 1440,
	114, 1440,
	115, 1440,
	116, 1440,
	117, 1440,
	118, 1440,
	119, 1440,
	120, 1440,
	121, 1440,
	122, 1440,
	123, 1440,
	124, 1440,
	125, 1440,
	126, 1440,
	127, 1440,
	129, 1440,
	130, 1440,
	132, 1440,
	133, 1440,
	134, 1440,
	137, 1440,
	138, 1440,
	139, 1440,
	141, 1440,
	142, 1440,
	144, 1440,
	145, 1440,
	146, 1440,
	148, 1440,
	149, 1440,
	150, 1440,
	151, 1440,
	152, 1440,
	153, 1440,
	154, 1440,
	155, 1440,
	156, 1440,
	157, 1440,
	158, 1440,
	159, 1440,
	160, 1440,
	161, 1440,
	162, 1440,
	163, 1440,
	164, 1440,
	165, 1440,
	171, 1440,
	172, 1440,
	173, 1440,
	174, 1440,
	178, 1440,
	180, 1440,
	183, 1440,
	184, 1440,
	185, 1440,
	186, 1440,
	187, 1440,
	188, 1440,
	189, 1440,
	190, 1440,
	191, 1440,
	192, 1440,
	193, 1440,
	194, 1440,
	195, 1440,
	196, 1440,
	198, 1440,
	199, 1440,
	201, 1440,
	202, 1440,
	204, 1440,
	205, 1440,
	206, 1440,
	207, 1440,
	208, 1440,
	209, 1440,
	210, 1440,
	211, 1440,
	212, 1440,
	213, 1440,
	214, 1440,
	215, 1440,
	217, 1440,
	218, 1440,
	219, 1440,
	220, 1440,
	224, 1440,
	225, 1440,
	226, 1440,
	227, 1440,
	228, 1440,
	230, 1440,
	231, 1440,
	232, 1440,
	233, 1440,
	235, 1440,
	237, 1440,
	238, 1440,
	239, 1440,
	240, 1440,
	241, 1440,
	242, 1440,
	243, 1440,
	244, 1440,
	245, 1440,
	246, 1440,
	250, 1440,
	251, 1440,
	252, 1440,
	253, 1440,
	254, 1440,
	255, 1440,
	257, 1440,
	258, 1440,
	259, 1440,
	261, 1440,
	262, 1440,
	263, 1440,
	264, 1440,
	265, 1440,
	266, 1440,
	268, 1440,
	272, 1440,
	273, 1440,
	274, 1440,
	275, 1440,
	276, 1440,
	277, 1440,
	278, 1440,
	279, 1440,
	280, 1440,
	282, 1440,
	283, 1440,
	284, 1440,
	285, 1440,
	286, 1440,
	287, 1440,
	288, 1440,
	289, 1440,
	290, 1440,
	291, 1440,
	292, 1440,
	293, 1440,
	294, 1440,
	295, 1440,
	296, 1440,
	297, 1440,
	298, 1440,
	299, 1440,
	300, 1440,
	301, 1440,
	302, 1440,
	303, 1440,
	305, 1440,
	306, 1440,
	307, 1440,
	308, 1440,
	309, 1440,
	310, 1440,
	311, 1440,
	312, 1440,
	313, 1440,
	314, 1440,
	315, 1440,
	316, 1440,
	317, 1440,
	318, 1440,
	319, 1440,
	320, 1440,
	321, 1440,
	322, 1440,
	323, 1440,
	324, 1440,
	325, 1440,
	326, 1440,
	327, 1440,
	328, 1440,
	329, 1440,
	330, 1440,
	331, 1440,
	334, 1440,
	338, 1440,
	339, 1440,
	340, 1440,
	343, 1440,
	344, 1440,
	345, 1440,
	346, 1440,
	347, 1440,
	348, 1440,
	349, 1440,
	350, 1440,
	351, 1440,
	352, 1440,
	353, 1440,
	354, 1440,
	355, 1440,
	356, 1440,
	357, 1440,
	358, 1440,
	359, 1440,
	360, 1440,
	362, 1440,
	363, 1440,
	364, 1440,
	365, 1440,
	366, 1440,
	367, 1440,
	368, 1440,
	369, 1440,
	370, 1440,
	371, 1440,
	372, 1440,
	373, 1440,
	374, 1440,
	375, 1440,
	376, 1440,
	378, 1440,
	379, 1440,
	381, 1440,
	382, 1440,
	383, 1440,
	384, 1440,
	385, 1440,
	386, 1440,
	387, 1440,
	388, 1440,
	389, 1440,
	390, 1440,
	391, 1440,
	392, 1440,
	394, 1440,
	396, 1440,
	397, 1440,
	398, 1440,
	403, 1440,
	405, 1440,
	406, 1440,
	407, 1440,
	408, 1440,
	409, 1440,
	410, 1440,
	411, 1440,
	412, 1440,
	414, 1440,
	415, 1440,
	416, 1440,
	417, 1440,
	418, 1440,
	419, 1440,
	420, 1440,
	421, 1440,
	422, 1440,
	423, 1440,
	425, 1440,
	426, 1440,
	427, 1440,
	428, 1440,
	429, 1440,
	430, 1440,
	431, 1440,
	432, 1440,
	433, 1440,
	434, 1440,
	435, 1440,
	437, 1440,
	438, 1440,
	439, 1440,
	440, 1440,
	441, 1440,
	442, 1440,
	443, 1440,
	444, 1440,
	445, 1440,
	446, 1440,
	447, 1440,
	448, 1440,
	449, 1440,
	450, 1440,
	451, 1440,
	452, 1440,
	453, 1440,
	454, 1440,
	455, 1440,
	456, 1440,
	457, 1440,
	459, 1440,
	461, 1440,
	462, 1440,
	463, 1440,
	464, 1440,
	465, 1440,
	466, 1440,
	467, 1440,
	468, 1440,
	469, 1440,
	470, 1440,
	471, 1440,
	472, 1440,
	473, 1440,
	474, 1440,
	475, 1440,
	477, 1440,
	478, 1440,
	479, 1440,
	480, 1440,
	482, 1440,
	483, 1440,
	484, 1440,
	485, 1440,
	486, 1440,
	487, 1440,
	488, 1440,
	489, 1440,
	490, 1440,
	492, 1440,
	493, 1440,
	494, 1440,
	495, 1440,
	496, 1440,
	498, 1440,
	500, 1440,
	501, 1440,
	502, 1440,
	503, 1440,
	504, 1440,
	505, 1440,
	506, 1440,
	507, 1440,
	508, 1440,
	509, 1440,
	510, 1440,
	512, 1440,
	513, 1440,
	515, 1440,
	516, 1440,
	517, 1440,
	518, 1440,
	519, 1440,
	520, 1440,
	521, 1440,
	522, 1440,
	523, 1440,
	524, 1440,
	527, 1440,
	528, 1440,
	529, 1440,
	530, 1440,
	531, 1440,
	532, 1440,
	534, 1440,
	535, 1440,
	536, 1440,
	537, 1440,
	542, 1440,
	543, 1440,
	544, 1440,
	545, 1440,
	546, 1440,
	547, 1440,
	548, 1440,
	556, 1440,
	563, 1440,
	564, 1440,
	565, 1440,
	572, 1440,
	576, 1440,
	-2, 0,
	-1, 711,
	4, 1190,
	21, 1190,
	22, 1190,
	23, 1190,
	24, 1190,
	25, 1190,
	26, 1190,
	27, 1190,
	28, 1190,
	30, 1190,
	31, 1190,
	37, 1190,
	42, 1190,
	43, 1190,
	45, 1190,
	46, 1190,
	47, 1190,
	48, 1190,
	49, 1190,
	50, 1190,
	51, 1190,
	53, 1190,
	54, 1190,
	55, 1190,
	56, 1190,
	58, 1190,
	59, 1190,
	60, 1190,
	61, 1190,
	62, 1190,
	63, 1190,
	64, 1190,
	68, 1190,
	69, 1190,
	70, 1190,
	71, 1190,
	73, 1190,
	74, 1190,
	75, 1190,
	79, 1190,
	80, 1190,
	81, 1190,
	82, 1190,
	83, 1190,
	84, 1190,
	85, 1190,
	88, 1190,
	89, 1190,
	90, 1190,
	91, 1190,
	92, 1190,
	94, 1190,
	96, 1190,
	97, 1190,
	98, 1190,
	99, 1190,
	100, 1190,
	101, 1190,
	103, 1190,
	104, 1190,
	105, 1190,
	107, 1190,
	108, 1190,
	116, 1190,
	117, 1190,
	118, 1190,
	119, 1190,
	121, 1190,
	122, 1190,
	123, 1190,
	125, 1190,
	126, 1190,
	127, 1190,
	129, 1190,
	130, 1190,
	132, 1190,
	133, 1190,
	134, 1190,
	137, 1190,
	138, 1190,
	139, 1190,
	141, 1190,
	142, 1190,
	144, 1190,
	145, 1190,
	146, 1190,
	148, 1190,
	149, 1190,
	150, 1190,
	151, 1190,
	152, 1190,
	153, 1190,
	154, 1190,
	155, 1190,
	156, 1190,
	157, 1190,
	158, 1190,
	159, 1190,
	160, 1190,
	161, 1190,
	162, 1190,
	163, 1190,
	165, 1190,
	171, 1190,
	172, 1190,
	173, 1190,
	174, 1190,
	178, 1190,
	180, 1190,
	184, 1190,
	185, 1190,
	186, 1190,
	187, 1190,
	188, 1190,
	189, 1190,
	190, 1190,
	191, 1190,
	192, 1190,
	193, 1190,
	194, 1190,
	195, 1190,
	196, 1190,
	198, 1190,
	199, 1190,
	201, 1190,
	202, 1190,
	204, 1190,
	205, 1190,
	206, 1190,
	207, 1190,
	208, 1190,
	209, 1190,
	210, 1190,
	211, 1190,
	212, 1190,
	214, 1190,
	215, 1190,
	217, 1190,
	218, 1190,
	219, 1190,
	220, 1190,
	224, 1190,
	225, 1190,
	226, 1190,
	227, 1190,
	228, 1190,
	231, 1190,
	232, 1190,
	233, 1190,
	235, 1190,
	237, 1190,
	238, 1190,
	240, 1190,
	242, 1190,
	243, 1190,
	244, 1190,
	246, 1190,
	250, 1190,
	251, 1190,
	252, 1190,
	253, 1190,
	254, 1190,
	255, 1190,
	257, 1190,
	258, 1190,
	259, 1190,
	261, 1190,
	262, 1190,
	264, 1190,
	265, 1190,
	268, 1190,
	272, 1190,
	273, 1190,
	274, 1190,
	277, 1190,
	278, 1190,
	279, 1190,
	280, 1190,
	282, 1190,
	283, 1190,
	284, 1190,
	285, 1190,
	286, 1190,
	287, 1190,
	288, 1190,
	289, 1190,
	290, 1190,
	291, 1190,
	292, 1190,
	293, 1190,
	294, 1190,
	295, 1190,
	296, 1190,
	297, 1190,
	298, 1190,
	299, 1190,
	300, 1190,
	301, 1190,
	302, 1190,
	303, 1190,
	305, 1190,
	307, 1190,
	308, 1190,
	309, 1190,
	310, 1190,
	311, 1190,
	312, 1190,
	313, 1190,
	314, 1190,
	315, 1190,
	316, 1190,
	317, 1190,
	318, 1190,
	320, 1190,
	322, 1190,
	324, 1190,
	325, 1190,
	327, 1190,
	328, 1190,
	329, 1190,
	330, 1190,
	331, 1190,
	334, 1190,
	338, 1190,
	339, 1190,
	340, 1190,
	343, 1190,
	344, 1190,
	345, 1190,
	347, 1190,
	349, 1190,
	350, 1190,
	351, 1190,
	352, 1190,
	353, 1190,
	354, 1190,
	355, 1190,
	356, 1190,
	357, 1190,
	358, 1190,
	359, 1190,
	360, 1190,
	362, 1190,
	363, 1190,
	364, 1190,
	365, 1190,
	366, 1190,
	367, 1190,
	368, 1190,
	369, 1190,
	370, 1190,
	371, 1190,
	372, 1190,
	373, 1190,
	374, 1190,
	375, 1190,
	376, 1190,
	378, 1190,
	379, 1190,
	381, 1190,
	382, 1190,
	383, 1190,
	384, 1190,
	385, 1190,
	386, 1190,
	387, 1190,
	388, 1190,
	389, 1190,
	390, 1190,
	391, 1190,
	392, 1190,
	394, 1190,
	396, 1190,
	397, 1190,
	398, 1190,
	403, 1190,
	405, 1190,
	406, 1190,
	407, 1190,
	408, 1190,
	409, 1190,
	410, 1190,
	411, 1190,
	412, 1190,
	414, 1190,
	415, 1190,
	416, 1190,
	418, 1190,
	419, 1190,
	420, 1190,
	421, 1190,
	422, 1190,
	423, 1190,
	425, 1190,
	426, 1190,
	427, 1190,
	428, 1190,
	429, 1190,
	430, 1190,
	431, 1190,
	432, 1190,
	433, 1190,
	434, 1190,
	435, 1190,
	437, 1190,
	438, 1190,
	439, 1190,
	440, 1190,
	441, 1190,
	442, 1190,
	444, 1190,
	445, 1190,
	446, 1190,
	447, 1190,
	448, 1190,
	449, 1190,
	451, 1190,
	452, 1190,
	453, 1190,
	454, 1190,
	455, 1190,
	456, 1190,
	457, 1190,
	459, 1190,
	461, 1190,
	462, 1190,
	463, 1190,
	464, 1190,
	465, 1190,
	466, 1190,
	467, 1190,
	468, 1190,
	469, 1190,
	470, 1190,
	471, 1190,
	472, 1190,
	473, 1190,
	474, 1190,
	475, 1190,
	477, 1190,
	478, 1190,
	480, 1190,
	482, 1190,
	483, 1190,
	484, 1190,
	485, 1190,
	486, 1190,
	487, 1190,
	488, 1190,
	489, 1190,
	490, 1190,
	492, 1190,
	493, 1190,
	494, 1190,
	495, 1190,
	496, 1190,
	498, 1190,
	500, 1190,
	501, 1190,
	502, 1190,
	503, 1190,
	504, 1190,
	505, 1190,
	507, 1190,
	508, 1190,
	509, 1190,
	510, 1190,
	512, 1190,
	513, 1190,
	516, 1190,
	517, 1190,
	518, 1190,
	519, 1190,
	520, 1190,
	521, 1190,
	522, 1190,
	524, 1190,
	527, 1190,
	528, 1190,
	529, 1190,
	530, 1190,
	531, 1190,
	532, 1190,
	534, 1190,
	535, 1190,
	536, 1190,
	537, 1190,
	542, 1190,
	543, 1190,
	544, 1190,
	545, 1190,
	546, 1190,
	547, 1190,
	-2, 0,
	-1, 730,
	182, 2197,
	497, 2197,
	555, 2197,
	574, 2197,
	-2, 0,
	-1, 731,
	182, 2298,
	497, 2298,
	555, 2298,
	574, 2298,
	-2, 0,
	-1, 732,
	182, 2184,
	497, 2184,
	555, 2184,
	574, 2184,
	-2, 0,
	-1, 734,
	182, 2427,
	497, 2427,
	555, 2427,
	574, 2427,
	-2, 0,
	-1, 736,
	182, 2465,
	497, 2465,
	555, 2465,
	574, 2465,
	-2, 0,
	-1, 743,
	182, 2325,
	497, 2325,
	555, 2325,
	574, 2325,
	-2, 642,
	-1, 772,
	574, 2133,
	577, 2133,
	-2, 903,
	-1, 773,
	574, 2135,
	577, 2135,
	-2, 904,
	-1, 774,
	574, 2134,
	577, 2134,
	-2, 905,
	-1, 775,
	577, 2060,
	-2, 906,
	-1, 798,
	179, 235,
	-2, 0,
	-1, 821,
	44, 2107,
	-2, 0,
	-1, 822,
	534, 1169,
	-2, 973,
	-1, 838,
	4, 1569,
	21, 1569,
	22, 1569,
	23, 1569,
	24, 1569,
	25, 1569,
	26, 1569,
	27, 1569,
	28, 1569,
	30, 1569,
	31, 1569,
	37, 1569,
	42, 1569,
	43, 1569,
	45, 1569,
	46, 1569,
	47, 1569,
	48, 1569,
	49, 1569,
	50, 1569,
	51, 1569,
	53, 1569,
	54, 1569,
	55, 1569,
	56, 1569,
	58, 1569,
	59, 1569,
	60, 1569,
	61, 1569,
	62, 1569,
	63, 1569,
	64, 1569,
	68, 1569,
	69, 1569,
	70, 1569,
	71, 1569,
	73, 1569,
	74, 1569,
	75, 1569,
	79, 1569,
	80, 1569,
	81, 1569,
	82, 1569,
	83, 1569,
	84, 1569,
	85, 1569,
	88, 1569,
	89, 1569,
	90, 1569,
	91, 1569,
	92, 1569,
	94, 1569,
	96, 1569,
	97, 1569,
	98, 1569,
	99, 1569,
	100, 1569,
	101, 1569,
	103, 1569,
	104, 1569,
	105, 1569,
	107, 1569,
	108, 1569,
	116, 1569,
	117, 1569,
	118, 1569,
	119, 1569,
	121, 1569,
	122, 1569,
	123, 1569,
	125, 1569,
	126, 1569,
	127, 1569,
	129, 1569,
	130, 1569,
	132, 1569,
	133, 1569,
	134, 1569,
	137, 1569,
	138, 1569,
	139, 1569,
	141, 1569,
	142, 1569,
	144, 1569,
	145, 1569,
	146, 1569,
	148, 1569,
	149, 1569,
	150, 1569,
	151, 1569,
	152, 1569,
	153, 1569,
	154, 1569,
	155, 1569,
	156, 1569,
	157, 1569,
	158, 1569,
	159, 1569,
	160, 1569,
	161, 1569,
	162, 1569,
	163, 1569,
	165, 1569,
	171, 1569,
	172, 1569,
	173, 1569,
	174, 1569,
	178, 1569,
	180, 1569,
	184, 1569,
	185, 1569,
	186, 1569,
	187, 1569,
	188, 1569,
	189, 1569,
	190, 1569,
	191, 1569,
	192, 1569,
	193, 1569,
	194, 1569,
	195, 1569,
	196, 1569,
	198, 1569,
	199, 1569,
	201, 1569,
	202, 1569,
	204, 1569,
	205, 1569,
	206, 1569,
	207, 1569,
	208, 1569,
	209, 1569,
	210, 1569,
	211, 1569,
	212, 1569,
	214, 1569,
	215, 1569,
	217, 1569,
	218, 1569,
	219, 1569,
	220, 1569,
	224, 1569,
	225, 1569,
	226, 1569,
	227, 1569,
	228, 1569,
	231, 1569,
	232, 1569,
	233, 1569,
	235, 1569,
	237, 1569,
	238, 1569,
	240, 1569,
	242, 1569,
	243, 1569,
	244, 1569,
	246, 1569,
	250, 1569,
	251, 1569,
	252, 1569,
	253, 1569,
	254, 1569,
	255, 1569,
	257, 1569,
	258, 1569,
	259, 1569,
	261, 1569,
	262, 1569,
	264, 1569,
	265, 1569,
	268, 1569,
	272, 1569,
	273, 1569,
	274, 1569,
	277, 1569,
	278, 1569,
	279, 1569,
	280, 1569,
	282, 1569,
	283, 1569,
	284, 1569,
	285, 1569,
	286, 1569,
	287, 1569,
	288, 1569,
	289, 1569,
	290, 1569,
	291, 1569,
	292, 1569,
	293, 1569,
	294, 1569,
	295, 1569,
	296, 1569,
	297, 1569,
	298, 1569,
	299, 1569,
	300, 1569,
	301, 1569,
	302, 1569,
	303, 1569,
	305, 1569,
	307, 1569,
	308, 1569,
	309, 1569,
	310, 1569,
	311, 1569,
	312, 1569,
	313, 1569,
	314, 1569,
	315, 1569,
	316, 1569,
	317, 1569,
	318, 1569,
	320, 1569,
	322, 1569,
	324, 1569,
	325, 1569,
	327, 1569,
	328, 1569,
	329, 1569,
	330, 1569,
	331, 1569,
	334, 1569,
	338, 1569,
	339, 1569,
	340, 1569,
	343, 1569,
	344, 1569,
	345, 1569,
	347, 1569,
	349, 1569,
	350, 1569,
	351, 1569,
	352, 1569,
	353, 1569,
	354, 1569,
	355, 1569,
	356, 1569,
	357, 1569,
	358, 1569,
	359, 1569,
	360, 1569,
	362, 1569,
	363, 1569,
	364, 1569,
	365, 1569,
	366, 1569,
	367, 1569,
	368, 1569,
	369, 1569,
	370, 1569,
	371, 1569,
	372, 1569,
	373, 1569,
	374, 1569,
	375, 1569,
	376, 1569,
	378, 1569,
	379, 1569,
	381, 1569,
	382, 1569,
	383, 1569,
	384, 1569,
	385, 1569,
	386, 1569,
	387, 1569,
	388, 1569,
	389, 1569,
	390, 1569,
	391, 1569,
	392, 1569,
	394, 1569,
	396, 1569,
	397, 1569,
	398, 1569,
	403, 1569,
	405, 1569,
	406, 1569,
	407, 1569,
	408, 1569,
	409, 1569,
	410, 1569,
	411, 1569,
	412, 1569,
	414, 1569,
	415, 1569,
	416, 1569,
	418, 1569,
	419, 1569,
	420, 1569,
	421, 1569,
	422, 1569,
	423, 1569,
	425, 1569,
	426, 1569,
	427, 1569,
	428, 1569,
	429, 1569,
	430, 1569,
	431, 1569,
	432, 1569,
	433, 1569,
	434, 1569,
	435, 1569,
	437, 1569,
	438, 1569,
	439, 1569,
	440, 1569,
	441, 1569,
	442, 1569,
	444, 1569,
	445, 1569,
	446, 1569,
	447, 1569,
	448, 1569,
	449, 1569,
	451, 1569,
	452, 1569,
	453, 1569,
	454, 1569,
	455, 1569,
	456, 1569,
	457, 1569,
	459, 1569,
	461, 1569,
	462, 1569,
	463, 1569,
	464, 1569,
	465, 1569,
	466, 1569,
	467, 1569,
	468, 1569,
	469, 1569,
	470, 1569,
	471, 1569,
	472, 1569,
	473, 1569,
	474, 1569,
	475, 1569,
	477, 1569,
	478, 1569,
	480, 1569,
	482, 1569,
	483, 1569,
	484, 1569,
	485, 1569,
	486, 1569,
	487, 1569,
	488, 1569,
	489, 1569,
	490, 1569,
	492, 1569,
	493, 1569,
	494, 1569,
	495, 1569,
	496, 1569,
	498, 1569,
	500, 1569,
	501, 1569,
	502, 1569,
	503, 1569,
	504, 1569,
	505, 1569,
	507, 1569,
	508, 1569,
	509, 1569,
	510, 1569,
	512, 1569,
	513, 1569,
	516, 1569,
	517, 1569,
	518, 1569,
	519, 1569,
	520, 1569,
	521, 1569,
	522, 1569,
	524, 1569,
	527, 1569,
	528, 1569,
	529, 1569,
	530, 1569,
	531, 1569,
	532, 1569,
	534, 1569,
	535, 1569,
	536, 1569,
	537, 1569,
	542, 1569,
	543, 1569,
	544, 1569,
	545, 1569,
	546, 1569,
	547, 1569,
	-2, 0,
	-1, 846,
	254, 368,
	-2, 0,
	-1, 916,
	383, 807,
	442, 807,
	502, 807,
	-2, 0,
	-1, 917,
	383, 806,
	442, 806,
	502, 806,
	-2, 746,
	-1, 921,
	1, 851,
	571, 851,
	573, 851,
	575, 851,
	-2, 0,
	-1, 922,
	1, 781,
	571, 781,
	573, 781,
	575, 781,
	-2, 0,
	-1, 923,
	1, 785,
	571, 785,
	573, 785,
	575, 785,
	-2, 0,
	-1, 924,
	1, 902,
	179, 902,
	571, 902,
	573, 902,
	575, 902,
	-2, 0,
	-1, 932,
	1, 810,
	571, 810,
	573, 810,
	575, 810,
	-2, 0,
	-1, 938,
	1, 851,
	571, 851,
	573, 851,
	575, 851,
	-2, 0,
	-1, 939,
	1, 853,
	571, 853,
	573, 853,
	575, 853,
	-2, 0,
	-1, 940,
	1, 856,
	571, 856,
	573, 856,
	575, 856,
	-2, 0,
	-1, 946,
	1, 873,
	571, 873,
	573, 873,
	575, 873,
	-2, 0,
	-1, 947,
	1, 875,
	571, 875,
	573, 875,
	575, 875,
	-2, 0,
	-1, 998,
	166, 1444,
	179, 1444,
	267, 1444,
	332, 1444,
	-2, 1380,
	-1, 1013,
	166, 1443,
	179, 1443,
	267, 1443,
	332, 1443,
	-2, 1377,
	-1, 1039,
	574, 2132,
	-2, 650,
	-1, 1067,
	5, 2124,
	572, 2122,
	-2, 2113,
	-1, 1075,
	5, 2145,
	572, 2142,
	-2, 2133,
	-1, 1076,
	5, 2146,
	572, 2143,
	-2, 2134,
	-1, 1084,
	574, 2130,
	-2, 2112,
	-1, 1085,
	572, 2547,
	-2, 2131,
	-1, 1108,
	572, 2546,
	-2, 2147,
	-1, 1109,
	5, 1644,
	-2, 2517,
	-1, 1110,
	5, 1645,
	-2, 2518,
	-1, 1111,
	5, 1646,
	-2, 2532,
	-1, 1112,
	5, 1647,
	-2, 2496,
	-1, 1113,
	5, 1648,
	-2, 2530,
	-1, 1114,
	5, 1656,
	-2, 2509,
	-1, 1115,
	5, 1643,
	-2, 2505,
	-1, 1116,
	5, 1643,
	-2, 2504,
	-1, 1117,
	5, 1643,
	-2, 2523,
	-1, 1118,
	5, 1654,
	-2, 2498,
	-1, 1119,
	5, 1659,
	-2, 2497,
	-1, 1120,
	5, 1661,
	-2, 2542,
	-1, 1123,
	5, 1683,
	-2, 2535,
	-1, 1124,
	5, 1675,
	-2, 2536,
	-1, 1125,
	5, 1683,
	-2, 2537,
	-1, 1126,
	5, 1679,
	-2, 2538,
	-1, 1127,
	5, 1629,
	-2, 2510,
	-1, 1128,
	5, 1630,
	-2, 2511,
	-1, 1129,
	5, 1631,
	-2, 2499,
	-1, 1157,
	5, 1666,
	-2, 2543,
	-1, 1158,
	5, 1667,
	-2, 2533,
	-1, 1159,
	5, 1668,
	535, 1668,
	-2, 2500,
	-1, 1160,
	5, 1669,
	535, 1669,
	-2, 2501,
	-1, 1197,
	572, 2142,
	-2, 2133,
	-1, 1198,
	572, 2143,
	-2, 2134,
	-1, 1297,
	182, 2465,
	497, 2465,
	555, 2465,
	574, 2465,
	-2, 0,
	-1, 1300,
	1, 628,
	575, 628,
	-2, 1297,
	-1, 1427,
	405, 2108,
	444, 2108,
	565, 2108,
	-2, 2098,
	-1, 1438,
	576, 2108,
	-2, 2109,
	-1, 1443,
	1, 1166,
	571, 1166,
	573, 1166,
	575, 1166,
	-2, 1429,
	-1, 1491,
	390, 972,
	534, 972,
	-2, 363,
	-1, 1507,
	44, 2106,
	-2, 938,
	-1, 1514,
	1, 1166,
	571, 1166,
	573, 1166,
	575, 1166,
	-2, 1429,
	-1, 1521,
	4, 1190,
	21, 1190,
	22, 1190,
	23, 1190,
	24, 1190,
	25, 1190,
	26, 1190,
	27, 1190,
	28, 1190,
	30, 1190,
	31, 1190,
	37, 1190,
	42, 1190,
	43, 1190,
	45, 1190,
	46, 1190,
	47, 1190,
	48, 1190,
	49, 1190,
	50, 1190,
	51, 1190,
	53, 1190,
	54, 1190,
	55, 1190,
	56, 1190,
	58, 1190,
	59, 1190,
	60, 1190,
	61, 1190,
	62, 1190,
	63, 1190,
	64, 1190,
	68, 1190,
	69, 1190,
	70, 1190,
	71, 1190,
	73, 1190,
	74, 1190,
	75, 1190,
	79, 1190,
	80, 1190,
	81, 1190,
	82, 1190,
	83, 1190,
	84, 1190,
	85, 1190,
	88, 1190,
	89, 1190,
	90, 1190,
	91, 1190,
	92, 1190,
	94, 1190,
	96, 1190,
	97, 1190,
	98, 1190,
	99, 1190,
	100, 1190,
	101, 1190,
	103, 1190,
	104, 1190,
	105, 1190,
	107, 1190,
	108, 1190,
	116, 1190,
	117, 1190,
	118, 1190,
	119, 1190,
	121, 1190,
	122, 1190,
	123, 1190,
	125, 1190,
	126, 1190,
	127, 1190,
	129, 1190,
	130, 1190,
	132, 1190,
	133, 1190,
	134, 1190,
	137, 1190,
	138, 1190,
	139, 1190,
	141, 1190,
	142, 1190,
	144, 1190,
	145, 1190,
	146, 1190,
	148, 1190,
	149, 1190,
	150, 1190,
	151, 1190,
	152, 1190,
	153, 1190,
	154, 1190,
	155, 1190,
	156, 1190,
	157, 1190,
	158, 1190,
	159, 1190,
	160, 1190,
	161, 1190,
	162, 1190,
	163, 1190,
	171, 1190,
	172, 1190,
	173, 1190,
	174, 1190,
	178, 1190,
	180, 1190,
	184, 1190,
	185, 1190,
	186, 1190,
	187, 1190,
	188, 1190,
	189, 1190,
	190, 1190,
	191, 1190,
	192, 1190,
	193, 1190,
	194, 1190,
	195, 1190,
	196, 1190,
	198, 1190,
	199, 1190,
	201, 1190,
	202, 1190,
	204, 1190,
	205, 1190,
	206, 1190,
	207, 1190,
	208, 1190,
	209, 1190,
	210, 1190,
	211, 1190,
	212, 1190,
	214, 1190,
	215, 1190,
	217, 1190,
	218, 1190,
	219, 1190,
	220, 1190,
	225, 1190,
	226, 1190,
	227, 1190,
	228, 1190,
	231, 1190,
	232, 1190,
	233, 1190,
	235, 1190,
	237, 1190,
	238, 1190,
	240, 1190,
	242, 1190,
	243, 1190,
	244, 1190,
	246, 1190,
	250, 1190,
	251, 1190,
	252, 1190,
	253, 1190,
	254, 1190,
	255, 1190,
	257, 1190,
	258, 1190,
	259, 1190,
	261, 1190,
	262, 1190,
	264, 1190,
	265, 1190,
	268, 1190,
	272, 1190,
	273, 1190,
	274, 1190,
	277, 1190,
	278, 1190,
	279, 1190,
	280, 1190,
	282, 1190,
	283, 1190,
	284, 1190,
	285, 1190,
	286, 1190,
	287, 1190,
	288, 1190,
	289, 1190,
	290, 1190,
	291, 1190,
	292, 1190,
	293, 1190,
	294, 1190,
	295, 1190,
	296, 1190,
	297, 1190,
	298, 1190,
	299, 1190,
	300, 1190,
	301, 1190,
	302, 1190,
	303, 1190,
	305, 1190,
	307, 1190,
	308, 1190,
	309, 1190,
	310, 1190,
	311, 1190,
	312, 1190,
	313, 1190,
	314, 1190,
	315, 1190,
	316, 1190,
	317, 1190,
	318, 1190,
	320, 1190,
	324, 1190,
	325, 1190,
	327, 1190,
	328, 1190,
	329, 1190,
	330, 1190,
	331, 1190,
	334, 1190,
	336, 1190,
	338, 1190,
	339, 1190,
	340, 1190,
	343, 1190,
	344, 1190,
	345, 1190,
	347, 1190,
	349, 1190,
	350, 1190,
	351, 1190,
	352, 1190,
	353, 1190,
	354, 1190,
	355, 1190,
	356, 1190,
	357, 1190,
	358, 1190,
	359, 1190,
	360, 1190,
	362, 1190,
	363, 1190,
	364, 1190,
	365, 1190,
	366, 1190,
	367, 1190,
	368, 1190,
	369, 1190,
	370, 1190,
	371, 1190,
	372, 1190,
	373, 1190,
	374, 1190,
	375, 1190,
	376, 1190,
	378, 1190,
	379, 1190,
	381, 1190,
	382, 1190,
	383, 1190,
	384, 1190,
	385, 1190,
	386, 1190,
	387, 1190,
	388, 1190,
	389, 1190,
	390, 1190,
	391, 1190,
	392, 1190,
	394, 1190,
	396, 1190,
	397, 1190,
	398, 1190,
	403, 1190,
	405, 1190,
	406, 1190,
	407, 1190,
	408, 1190,
	409, 1190,
	410, 1190,
	411, 1190,
	412, 1190,
	414, 1190,
	415, 1190,
	416, 1190,
	418, 1190,
	419, 1190,
	420, 1190,
	421, 1190,
	422, 1190,
	423, 1190,
	425, 1190,
	426, 1190,
	427, 1190,
	428, 1190,
	429, 1190,
	430, 1190,
	431, 1190,
	432, 1190,
	433, 1190,
	434, 1190,
	435, 1190,
	437, 1190,
	438, 1190,
	439, 1190,
	440, 1190,
	441, 1190,
	442, 1190,
	444, 1190,
	445, 1190,
	446, 1190,
	447, 1190,
	448, 1190,
	449, 1190,
	451, 1190,
	452, 1190,
	453, 1190,
	454, 1190,
	455, 1190,
	456, 1190,
	457, 1190,
	459, 1190,
	461, 1190,
	462, 1190,
	463, 1190,
	464, 1190,
	465, 1190,
	466, 1190,
	467, 1190,
	468, 1190,
	469, 1190,
	470, 1190,
	471, 1190,
	472, 1190,
	473, 1190,
	474, 1190,
	475, 1190,
	477, 1190,
	478, 1190,
	480, 1190,
	482, 1190,
	483, 1190,
	484, 1190,
	485, 1190,
	486, 1190,
	487, 1190,
	488, 1190,
	489, 1190,
	490, 1190,
	492, 1190,
	493, 1190,
	494, 1190,
	495, 1190,
	496, 1190,
	498, 1190,
	500, 1190,
	501, 1190,
	502, 1190,
	503, 1190,
	504, 1190,
	505, 1190,
	507, 1190,
	508, 1190,
	509, 1190,
	510, 1190,
	512, 1190,
	513, 1190,
	516, 1190,
	517, 1190,
	518, 1190,
	519, 1190,
	520, 1190,
	521, 1190,
	522, 1190,
	524, 1190,
	527, 1190,
	528, 1190,
	529, 1190,
	530, 1190,
	531, 1190,
	532, 1190,
	534, 1190,
	535, 1190,
	536, 1190,
	537, 1190,
	542, 1190,
	543, 1190,
	544, 1190,
	545, 1190,
	546, 1190,
	547, 1190,
	-2, 0,
	-1, 1544,
	1, 501,
	571, 501,
	573, 501,
	575, 501,
	-2, 1400,
	-1, 1547,
	4, 2541,
	11, 2541,
	12, 2541,
	14, 2541,
	15, 2541,
	16, 2541,
	17, 2541,
	18, 2541,
	19, 2541,
	21, 2541,
	22, 2541,
	23, 2541,
	24, 2541,
	25, 2541,
	26, 2541,
	27, 2541,
	28, 2541,
	30, 2541,
	31, 2541,
	34, 2541,
	35, 2541,
	37, 2541,
	39, 2541,
	42, 2541,
	43, 2541,
	45, 2541,
	46, 2541,
	47, 2541,
	48, 2541,
	49, 2541,
	50, 2541,
	51, 2541,
	53, 2541,
	54, 2541,
	55, 2541,
	56, 2541,
	58, 2541,
	59, 2541,
	60, 2541,
	61, 2541,
	62, 2541,
	63, 2541,
	64, 2541,
	68, 2541,
	69, 2541,
	70, 2541,
	71, 2541,
	73, 2541,
	74, 2541,
	75, 2541,
	76, 2541,
	79, 2541,
	80, 2541,
	81, 2541,
	82, 2541,
	83, 2541,
	84, 2541,
	85, 2541,
	86, 2541,
	88, 2541,
	89, 2541,
	90, 2541,
	91, 2541,
	92, 2541,
	94, 2541,
	95, 2541,
	96, 2541,
	97, 2541,
	98, 2541,
	99, 2541,
	100, 2541,
	101, 2541,
	103, 2541,
	104, 2541,
	105, 2541,
	106, 2541,
	107, 2541,
	108, 2541,
	116, 2541,
	117, 2541,
	118, 2541,
	119, 2541,
	121, 2541,
	122, 2541,
	123, 2541,
	125, 2541,
	126, 2541,
	127, 2541,
	129, 2541,
	130, 2541,
	132, 2541,
	133, 2541,
	134, 2541,
	137, 2541,
	138, 2541,
	139, 2541,
	141, 2541,
	142, 2541,
	144, 2541,
	145, 2541,
	146, 2541,
	148, 2541,
	149, 2541,
	150, 2541,
	151, 2541,
	152, 2541,
	153, 2541,
	154, 2541,
	155, 2541,
	156, 2541,
	157, 2541,
	158, 2541,
	159, 2541,
	160, 2541,
	161, 2541,
	162, 2541,
	163, 2541,
	167, 2541,
	168, 2541,
	169, 2541,
	170, 2541,
	171, 2541,
	172, 2541,
	173, 2541,
	174, 2541,
	177, 2541,
	178, 2541,
	180, 2541,
	183, 2541,
	184, 2541,
	185, 2541,
	186, 2541,
	187, 2541,
	188, 2541,
	189, 2541,
	190, 2541,
	191, 2541,
	192, 2541,
	193, 2541,
	194, 2541,
	195, 2541,
	196, 2541,
	198, 2541,
	199, 2541,
	201, 2541,
	202, 2541,
	204, 2541,
	205, 2541,
	206, 2541,
	207, 2541,
	208, 2541,
	209, 2541,
	210, 2541,
	211, 2541,
	212, 2541,
	213, 2541,
	214, 2541,
	215, 2541,
	216, 2541,
	217, 2541,
	218, 2541,
	219, 2541,
	220, 2541,
	222, 2541,
	223, 2541,
	225, 2541,
	226, 2541,
	227, 2541,
	228, 2541,
	230, 2541,
	231, 2541,
	232, 2541,
	233, 2541,
	235, 2541,
	237, 2541,
	238, 2541,
	239, 2541,
	240, 2541,
	241, 2541,
	242, 2541,
	243, 2541,
	244, 2541,
	245, 2541,
	246, 2541,
	248, 2541,
	249, 2541,
	250, 2541,
	251, 2541,
	252, 2541,
	253, 2541,
	254, 2541,
	255, 2541,
	257, 2541,
	258, 2541,
	259, 2541,
	261, 2541,
	262, 2541,
	263, 2541,
	264, 2541,
	265, 2541,
	266, 2541,
	268, 2541,
	272, 2541,
	273, 2541,
	274, 2541,
	277, 2541,
	278, 2541,
	279, 2541,
	280, 2541,
	281, 2541,
	282, 2541,
	283, 2541,
	284, 2541,
	285, 2541,
	286, 2541,
	287, 2541,
	288, 2541,
	289, 2541,
	290, 2541,
	291, 2541,
	292, 2541,
	293, 2541,
	294, 2541,
	295, 2541,
	296, 2541,
	297, 2541,
	298, 2541,
	299, 2541,
	300, 2541,
	301, 2541,
	302, 2541,
	303, 2541,
	305, 2541,
	306, 2541,
	307, 2541,
	308, 2541,
	309, 2541,
	310, 2541,
	311, 2541,
	312, 2541,
	313, 2541,
	314, 2541,
	315, 2541,
	316, 2541,
	317, 2541,
	318, 2541,
	320, 2541,
	323, 2541,
	324, 2541,
	325, 2541,
	327, 2541,
	328, 2541,
	329, 2541,
	330, 2541,
	331, 2541,
	334, 2541,
	338, 2541,
	339, 2541,
	340, 2541,
	341, 2541,
	343, 2541,
	344, 2541,
	345, 2541,
	347, 2541,
	349, 2541,
	350, 2541,
	351, 2541,
	352, 2541,
	353, 2541,
	354, 2541,
	355, 2541,
	356, 2541,
	357, 2541,
	358, 2541,
	359, 2541,
	360, 2541,
	362, 2541,
	363, 2541,
	364, 2541,
	365, 2541,
	366, 2541,
	367, 2541,
	368, 2541,
	369, 2541,
	370, 2541,
	371, 2541,
	372, 2541,
	373, 2541,
	374, 2541,
	375, 2541,
	376, 2541,
	378, 2541,
	379, 2541,
	381, 2541,
	382, 2541,
	383, 2541,
	384, 2541,
	385, 2541,
	386, 2541,
	387, 2541,
	388, 2541,
	389, 2541,
	390, 2541,
	391, 2541,
	392, 2541,
	394, 2541,
	396, 2541,
	397, 2541,
	398, 2541,
	403, 2541,
	404, 2541,
	405, 2541,
	406, 2541,
	407, 2541,
	408, 2541,
	409, 2541,
	410, 2541,
	411, 2541,
	412, 2541,
	414, 2541,
	415, 2541,
	416, 2541,
	417, 2541,
	418, 2541,
	419, 2541,
	420, 2541,
	421, 2541,
	422, 2541,
	423, 2541,
	424, 2541,
	425, 2541,
	426, 2541,
	427, 2541,
	428, 2541,
	429, 2541,
	430, 2541,
	431, 2541,
	432, 2541,
	433, 2541,
	434, 2541,
	435, 2541,
	437, 2541,
	438, 2541,
	439, 2541,
	440, 2541,
	441, 2541,
	442, 2541,
	444, 2541,
	445, 2541,
	446, 2541,
	447, 2541,
	448, 2541,
	449, 2541,
	450, 2541,
	451, 2541,
	452, 2541,
	453, 2541,
	454, 2541,
	455, 2541,
	456, 2541,
	457, 2541,
	459, 2541,
	461, 2541,
	462, 2541,
	463, 2541,
	464, 2541,
	465, 2541,
	466, 2541,
	467, 2541,
	468, 2541,
	469, 2541,
	470, 2541,
	471, 2541,
	472, 2541,
	473, 2541,
	474, 2541,
	475, 2541,
	477, 2541,
	478, 2541,
	480, 2541,
	482, 2541,
	483, 2541,
	484, 2541,
	485, 2541,
	486, 2541,
	487, 2541,
	488, 2541,
	489, 2541,
	490, 2541,
	492, 2541,
	493, 2541,
	494, 2541,
	495, 2541,
	496, 2541,
	498, 2541,
	500, 2541,
	501, 2541,
	502, 2541,
	503, 2541,
	504, 2541,
	505, 2541,
	507, 2541,
	508, 2541,
	509, 2541,
	510, 2541,
	512, 2541,
	513, 2541,
	516, 2541,
	517, 2541,
	518, 2541,
	519, 2541,
	520, 2541,
	521, 2541,
	522, 2541,
	524, 2541,
	527, 2541,
	528, 2541,
	529, 2541,
	530, 2541,
	531, 2541,
	532, 2541,
	534, 2541,
	535, 2541,
	536, 2541,
	537, 2541,
	542, 2541,
	543, 2541,
	544, 2541,
	545, 2541,
	546, 2541,
	547, 2541,
	548, 2541,
	550, 2541,
	553, 2541,
	554, 2541,
	555, 2541,
	556, 2541,
	557, 2541,
	558, 2541,
	560, 2541,
	561, 2541,
	562, 2541,
	563, 2541,
	564, 2541,
	565, 2541,
	566, 2541,
	567, 2541,
	568, 2541,
	570, 2541,
	573, 2541,
	574, 2541,
	576, 2541,
	577, 2541,
	-2, 0,
	-1, 1552,
	182, 2427,
	497, 2427,
	555, 2427,
	574, 2427,
	-2, 0,
	-1, 1601,
	383, 807,
	442, 807,
	502, 807,
	-2, 0,
	-1, 1628,
	1, 802,
	571, 802,
	573, 802,
	575, 802,
	-2, 0,
	-1, 1629,
	1, 838,
	571, 838,
	573, 838,
	575, 838,
	-2, 0,
	-1, 1630,
	1, 846,
	571, 846,
	573, 846,
	575, 846,
	-2, 0,
	-1, 1631,
	1, 809,
	571, 809,
	573, 809,
	575, 809,
	-2, 0,
	-1, 1633,
	1, 813,
	571, 813,
	573, 813,
	575, 813,
	-2, 0,
	-1, 1639,
	1, 820,
	571, 820,
	573, 820,
	575, 820,
	-2, 0,
	-1, 1667,
	1, 2487,
	571, 2487,
	573, 2487,
	574, 2487,
	575, 2487,
	-2, 871,
	-1, 1668,
	1, 2424,
	571, 2424,
	573, 2424,
	574, 2424,
	575, 2424,
	-2, 872,
	-1, 1686,
	1, 1292,
	575, 1292,
	-2, 1297,
	-1, 1689,
	166, 1443,
	179, 1443,
	267, 1443,
	332, 1443,
	-2, 1381,
	-1, 1783,
	147, 1402,
	166, 1402,
	179, 1402,
	234, 1402,
	267, 1402,
	332, 1402,
	342, 1402,
	514, 1402,
	-2, 1844,
	-1, 1843,
	573, 1994,
	-2, 0,
	-1, 1878,
	147, 1402,
	166, 1402,
	179, 1402,
	234, 1402,
	267, 1402,
	332, 1402,
	342, 1402,
	514, 1402,
	-2, 1530,
	-1, 1927,
	572, 1671,
	-2, 1659,
	-1, 2005,
	1, 630,
	575, 630,
	-2, 1297,
	-1, 2125,
	216, 236,
	-2, 2141,
	-1, 2126,
	216, 237,
	-2, 279,
	-1, 2225,
	1, 804,
	571, 804,
	573, 804,
	575, 804,
	-2, 0,
	-1, 2226,
	1, 840,
	571, 840,
	573, 840,
	575, 840,
	-2, 0,
	-1, 2227,
	1, 848,
	571, 848,
	573, 848,
	575, 848,
	-2, 0,
	-1, 2261,
	1, 822,
	571, 822,
	573, 822,
	575, 822,
	-2, 0,
	-1, 2311,
	422, 1470,
	423, 1470,
	-2, 1704,
	-1, 2342,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1724,
	-1, 2343,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1725,
	-1, 2344,
	95, 0,
	248, 0,
	249, 0,
	557, 0,
	558, 0,
	-2, 1726,
	-1, 2345,
	95, 0,
	248, 0,
	249, 0,
	557, 0,
	558, 0,
	-2, 1727,
	-1, 2346,
	95, 0,
	248, 0,
	249, 0,
	557, 0,
	558, 0,
	-2, 1728,
	-1, 2347,
	95, 0,
	248, 0,
	249, 0,
	557, 0,
	558, 0,
	-2, 1729,
	-1, 2348,
	95, 0,
	248, 0,
	249, 0,
	557, 0,
	558, 0,
	-2, 1730,
	-1, 2349,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1731,
	-1, 2361,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1743,
	-1, 2362,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1744,
	-1, 2363,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1745,
	-1, 2366,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1750,
	-1, 2372,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1754,
	-1, 2374,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1762,
	-1, 2375,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1763,
	-1, 2376,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1764,
	-1, 2377,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1765,
	-1, 2513,
	5, 2145,
	182, 2005,
	572, 2142,
	-2, 2133,
	-1, 2514,
	182, 2006,
	-2, 2492,
	-1, 2515,
	182, 2007,
	-2, 2324,
	-1, 2516,
	182, 2008,
	-2, 2213,
	-1, 2517,
	182, 2009,
	-2, 2265,
	-1, 2518,
	182, 2010,
	-2, 2309,
	-1, 2519,
	182, 2011,
	-2, 2422,
	-1, 2520,
	182, 2012,
	-2, 1827,
	-1, 2590,
	1, 1531,
	2, 1531,
	106, 1531,
	147, 1531,
	166, 1531,
	179, 1531,
	183, 1531,
	200, 1531,
	203, 1531,
	230, 1531,
	234, 1531,
	245, 1531,
	263, 1531,
	267, 1531,
	306, 1531,
	332, 1531,
	336, 1531,
	342, 1531,
	413, 1531,
	417, 1531,
	514, 1531,
	525, 1531,
	539, 1531,
	540, 1531,
	541, 1531,
	551, 1531,
	571, 1531,
	573, 1531,
	575, 1531,
	577, 1531,
	-2, 1530,
	-1, 2603,
	572, 2114,
	-2, 2128,
	-1, 2605,
	53, 1429,
	132, 1429,
	-2, 295,
	-1, 2630,
	572, 1670,
	-2, 1660,
	-1, 2802,
	1, 1166,
	571, 1166,
	573, 1166,
	575, 1166,
	-2, 1429,
	-1, 2965,
	337, 1473,
	-2, 2531,
	-1, 2966,
	337, 1474,
	-2, 2408,
	-1, 2970,
	422, 2071,
	423, 2071,
	-2, 1825,
	-1, 2971,
	422, 2075,
	423, 2075,
	-2, 1826,
	-1, 2972,
	422, 2072,
	423, 2072,
	-2, 1825,
	-1, 2973,
	422, 2076,
	423, 2076,
	-2, 1826,
	-1, 2986,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1752,
	-1, 2987,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1756,
	-1, 2993,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1758,
	-1, 3233,
	1, 627,
	571, 627,
	573, 627,
	575, 627,
	-2, 1297,
	-1, 3375,
	44, 2106,
	-2, 939,
	-1, 3380,
	1, 1166,
	571, 1166,
	573, 1166,
	575, 1166,
	-2, 1429,
	-1, 3482,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1760,
	-1, 3489,
	239, 0,
	241, 0,
	323, 0,
	-2, 1779,
	-1, 3556,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1808,
	-1, 3557,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1809,
	-1, 3558,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1810,
	-1, 3562,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1814,
	-1, 3563,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1815,
	-1, 3564,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1816,
	-1, 3610,
	572, 2115,
	-2, 2129,
	-1, 3763,
	574, 2648,
	-2, 1355,
	-1, 3819,
	239, 0,
	241, 0,
	323, 0,
	-2, 1780,
	-1, 3822,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1783,
	-1, 3823,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1785,
	-1, 3918,
	574, 2130,
	-2, 1200,
	-1, 4047,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1784,
	-1, 4048,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1786,
	-1, 4059,
	239, 0,
	-2, 1817,
	-1, 4221,
	239, 0,
	-2, 1818,
	-1, 4399,
	50, 0,
	213, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 2495,
}

const sqlPrivate = 57344

const sqlLast = 119439

var sqlAct = [...]int{
	260, 4494, 4257, 2864, 2877, 3144, 4279, 4380, 2694, 3364,
	4275, 4101, 4451, 3365, 4147, 4409, 4520, 4369, 4398, 2122,
	4350, 4296, 1190, 4333, 4249, 4410, 4154, 1067, 1455, 4411,
	4353, 3802, 3521, 4088, 4174, 4225, 4397, 1201, 4004, 3999,
	4463, 3971, 4106, 2545, 3914, 3474, 1023, 4068, 2321, 3953,
	4036, 3258, 4163, 3755, 3396, 2979, 3697, 2735, 3985, 1269,
	1914, 3915, 3899, 2389, 1273, 3310, 2753, 4188, 1987, 1262,
	3390, 741, 2203, 4009, 774, 1698, 3244, 3360, 3715, 2060,
	3731, 2886, 1567, 1884, 3261, 2329, 2322, 3717, 1333, 3435,
	2853, 2765, 2899, 2825, 4064, 2835, 2194, 3350, 774, 3437,
	3613, 2888, 1424, 3187, 3159, 3127, 3858, 3167, 3801, 1609,
	2896, 2885, 2848, 2168, 2879, 2850, 3148, 1014, 2201, 2865,
	1853, 2117, 1078, 2696, 2116, 1962, 2070, 4495, 2326, 2582,
	3581, 2583, 4226, 2402, 1829, 848, 1791, 1431, 3126, 1566,
	2431, 1022, 172, 3255, 105, 2580, 1267, 1275, 2895, 4,
	3150, 769, 2779, 1509, 2111, 2102, 2585, 4276, 2963, 2433,
	1071, 254, 253, 2836, 2095, 1316, 2041, 2044, 1074, 1181,
	2422, 3194, 2563, 1073, 2031, 2734, 1985, 1241, 1686, 1854,
	2386, 2310, 2293, 2615, 1255, 1076, 2291, 3362, 1545, 2858,
	2542, 1264, 2156, 2889, 1512, 1252, 775, 776, 672, 1302,
	2679, 2425, 2614, 1824, 1915, 1184, 658, 2572, 1863, 2553,
	680, 2475, 1873, 2403, 1163, 1870, 1776, 181, 2509, 182,
	1700, 1699, 2292, 2294, 1639, 2155, 723, 1198, 2180, 1536,
	735, 771, 172, 1450, 1543, 780, 783, 2059, 1180, 4452,
	841, 4297, 2315, 1052, 1963, 1960, 675, 1186, 44, 43,
	41, 32, 30, 683, 1196, 1161, 28, 910, 3014, 780,
	783, 822, 1705, 1685, 930, 1461, 3010, 3595, 698, 3596,
	1454, 3146, 4591, 4581, 1018, 1976, 2562, 3415, 1632, 3406,
	842, 1976, 1976, 1976, 1976, 4567, 4566, 4556, 4538, 2562,
	2562, 2130, 4105, 3202, 1976, 4536, 4482, 1575, 4440, 4105,
	2130, 4433, 4441, 4431, 1018, 2562, 2761, 2562, 72, 3405,
	845, 844, 4428, 4425, 4395, 4394, 4429, 4426, 2130, 2130,
	1311, 4393, 3415, 3217, 73, 1997, 1713, 1714, 1019, 863,
	4388, 4387, 4378, 4376, 1997, 1997, 4105, 4105, 4348, 4321,
	77, 4314, 4105, 2621, 4313, 2562, 2202, 4308, 2562, 4307,
	1744, 4105, 4301, 4105, 4271, 4223, 2130, 1716, 3963, 2621,
	4205, 4202, 4199, 4156, 3790, 2130, 4105, 4157, 4121, 3099,
	3100, 1311, 2130, 1994, 4120, 1164, 1164, 1178, 2130, 4112,
	84, 4111, 4104, 2130, 4075, 4105, 4105, 2640, 2130, 4049,
	999, 1715, 998, 2621, 2130, 1193, 2617, 3585, 1713, 1714,
	1192, 1735, 4028, 2978, 2562, 4017, 1997, 3099, 3100, 3415,
	3948, 3936, 3821, 4322, 2562, 2562, 2621, 846, 4227, 3771,
	90, 3765, 1744, 3432, 3729, 3432, 3605, 3216, 3730, 1716,
	3606, 104, 2130, 4218, 3023, 3603, 90, 101, 1008, 3604,
	3024, 1013, 1212, 3588, 3114, 1713, 1714, 2562, 3505, 3501,
	3431, 4206, 2130, 2562, 3432, 1463, 3422, 3143, 3138, 2555,
	3423, 2562, 2562, 1715, 3137, 1997, 3090, 2639, 2562, 1744,
	3091, 1713, 1714, 3064, 1463, 1165, 1716, 3065, 1167, 1050,
	1168, 224, 1738, 1739, 1740, 1741, 3056, 3054, 3585, 224,
	3057, 2562, 1721, 91, 3025, 1744, 1219, 2902, 2562, 3099,
	3100, 1997, 1716, 2875, 2874, 2554, 3998, 2190, 2190, 2562,
	1715, 2663, 2620, 2612, 2606, 2562, 2621, 2562, 2130, 2561,
	2189, 3963, 1213, 2562, 2190, 3937, 226, 3790, 3423, 2756,
	2064, 2678, 2010, 1561, 226, 3105, 1715, 1743, 1745, 3013,
	1975, 1991, 1994, 1713, 1714, 2831, 1746, 1747, 1748, 1756,
	1757, 1758, 2129, 2773, 2428, 2676, 1849, 1449, 3685, 3477,
	3453, 1871, 2105, 2599, 1721, 3407, 1749, 1744, 1611, 2598,
	2597, 2596, 2595, 3105, 1716, 225, 3099, 3100, 1169, 3117,
	3118, 3119, 1762, 225, 3408, 3874, 218, 1166, 1007, 1006,
	1713, 1714, 1005, 1004, 218, 219, 1736, 224, 1003, 3817,
	1002, 2940, 3833, 219, 3099, 3100, 1001, 997, 1715, 1743,
	1745, 1721, 996, 995, 1744, 994, 993, 183, 1735, 992,
	3623, 1716, 1977, 991, 990, 183, 989, 1732, 1977, 1977,
	1977, 1977, 988, 987, 986, 1475, 94, 1721, 985, 3115,
	2429, 1977, 226, 984, 983, 982, 981, 908, 907, 906,
	905, 3114, 904, 903, 902, 1715, 1743, 1745, 2861, 901,
	900, 899, 898, 897, 896, 3105, 895, 894, 1736, 893,
	892, 891, 1713, 1714, 3405, 890, 889, 3115, 888, 887,
	886, 885, 1743, 1745, 884, 883, 882, 180, 97, 881,
	100, 225, 880, 879, 878, 877, 876, 866, 224, 1738,
	1739, 1740, 1741, 1716, 865, 861, 1194, 860, 854, 1721,
	1463, 145, 224, 853, 224, 1736, 1278, 1076, 1213, 1742,
	840, 2430, 847, 2427, 839, 797, 796, 145, 795, 794,
	786, 224, 785, 183, 784, 756, 3599, 1715, 747, 1737,
	1076, 1736, 3105, 226, 1076, 1753, 746, 745, 1763, 729,
	248, 247, 246, 245, 1743, 1745, 1721, 226, 244, 226,
	1336, 243, 242, 241, 1336, 240, 239, 238, 1278, 3115,
	3105, 1759, 237, 1760, 1469, 236, 226, 235, 234, 233,
	1730, 1731, 3116, 232, 231, 147, 1315, 230, 2650, 1076,
	1320, 1076, 225, 1076, 1975, 1994, 1991, 2639, 1751, 1278,
	184, 1743, 1745, 218, 3120, 3433, 225, 2286, 225, 1306,
	229, 1737, 219, 1736, 1634, 228, 227, 218, 4011, 218,
	3116, 3190, 1994, 3141, 1278, 225, 219, 3036, 219, 1454,
	3019, 2923, 2812, 1434, 183, 1439, 218, 1462, 1721, 1579,
	2625, 2844, 1474, 2604, 1278, 219, 3115, 1565, 183, 1278,
	843, 2458, 1800, 2589, 2554, 1761, 2444, 1076, 1737, 1076,
	1736, 3142, 1453, 1278, 1286, 2039, 1874, 183, 2432, 1076,
	2442, 1076, 1021, 1750, 3115, 1726, 1724, 1725, 1717, 1718,
	1719, 1720, 1722, 1723, 1737, 1832, 2197, 1246, 1249, 1712,
	4416, 1213, 1831, 1996, 1897, 1518, 1520, 1259, 1802, 3099,
	3100, 1457, 1322, 1200, 4396, 1334, 4286, 1974, 4215, 1432,
	3099, 3100, 3116, 1441, 1835, 1300, 1278, 4230, 3110, 3108,
	3109, 3101, 3102, 3103, 3104, 3106, 3107, 4209, 1329, 4207,
	1421, 1426, 4063, 4099, 1076, 4018, 1742, 1076, 3997, 780,
	783, 3881, 3856, 3855, 3849, 3099, 3100, 1429, 1724, 1725,
	1717, 1718, 1719, 1720, 1722, 1723, 1737, 3108, 3109, 3101,
	3102, 3103, 3104, 3106, 3107, 1295, 2196, 224, 1507, 3734,
	224, 3848, 3847, 3840, 1452, 1451, 2720, 3839, 1832, 2426,
	3837, 1468, 1754, 3832, 3829, 1831, 172, 172, 1019, 3116,
	1793, 1546, 3828, 3728, 1548, 1550, 1725, 1717, 1718, 1719,
	1720, 1722, 1723, 1737, 3627, 2634, 1177, 1830, 1580, 3626,
	3625, 3609, 226, 1523, 1463, 226, 3683, 3116, 4013, 3576,
	1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 3575, 3574, 3497, 3493,
	1306, 3185, 3134, 1306, 1795, 1793, 3125, 3098, 1648, 3095,
	3109, 3101, 3102, 3103, 3104, 3106, 3107, 3094, 3092, 3063,
	1076, 225, 3062, 3061, 225, 3105, 1076, 3058, 3055, 224,
	3035, 3018, 218, 3011, 2876, 218, 3105, 1539, 2590, 2415,
	1752, 219, 2846, 1712, 219, 1727, 1728, 1734, 1755, 1733,
	1729, 2171, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722,
	1723, 2137, 2135, 183, 3208, 3843, 2860, 4231, 1711, 3842,
	4585, 3105, 3139, 4530, 226, 4529, 1690, 4496, 3111, 3112,
	3113, 3735, 4450, 1560, 4448, 3110, 3108, 3109, 3101, 3102,
	3103, 3104, 3106, 3107, 1684, 1574, 1202, 3991, 1794, 3523,
	1792, 1782, 1717, 1718, 1719, 1720, 1722, 1723, 4340, 4278,
	4267, 224, 4264, 3110, 3108, 3109, 3101, 3102, 3103, 3104,
	3106, 3107, 4263, 225, 4262, 1542, 4243, 4229, 4228, 1585,
	4203, 1076, 1076, 1076, 218, 4187, 4186, 1076, 2392, 4172,
	4169, 4117, 1602, 219, 1198, 4095, 1198, 4061, 4044, 4043,
	4025, 4024, 3988, 3964, 3873, 2398, 226, 3854, 1635, 3791,
	3785, 1336, 1851, 3782, 1019, 183, 3672, 3735, 224, 1076,
	3671, 1196, 774, 1196, 3658, 3115, 3657, 3655, 1932, 774,
	1860, 3591, 1278, 3579, 1717, 1718, 1719, 1720, 1722, 1723,
	3488, 1900, 1780, 1904, 1687, 3434, 3416, 1695, 1694, 3383,
	999, 1911, 998, 3322, 3289, 225, 3260, 3210, 1958, 3040,
	3039, 3034, 1907, 226, 4012, 3002, 218, 1689, 2824, 1838,
	1834, 1837, 1836, 1833, 1825, 219, 1823, 1691, 2632, 2845,
	2631, 224, 2601, 224, 2594, 1905, 1713, 1714, 2560, 1708,
	1709, 224, 2440, 1896, 1852, 1847, 252, 183, 1278, 1846,
	1845, 1844, 1857, 1858, 1843, 1076, 1842, 1841, 224, 1278,
	1840, 1839, 225, 1713, 1714, 1820, 224, 1716, 1819, 1818,
	2022, 2021, 1817, 218, 2030, 2032, 226, 1076, 226, 1164,
	1826, 1827, 219, 1336, 1816, 1815, 226, 1814, 1813, 172,
	1019, 1812, 1811, 1810, 1716, 1809, 1881, 1808, 2003, 1807,
	1926, 1715, 1806, 226, 183, 1795, 1898, 1781, 1779, 1774,
	1294, 226, 1193, 1537, 1193, 1217, 2198, 1192, 3116, 1192,
	1208, 3877, 3825, 2037, 2002, 225, 1903, 225, 1715, 1966,
	1306, 3622, 2028, 780, 783, 225, 218, 3602, 218, 3594,
	780, 783, 3022, 2592, 2623, 219, 218, 219, 1901, 4079,
	3879, 1879, 225, 3621, 3182, 219, 1794, 1872, 1541, 1882,
	225, 3099, 3100, 218, 3206, 2030, 1777, 183, 3411, 183,
	3939, 218, 219, 1892, 3292, 2030, 1319, 183, 1850, 1801,
	219, 2030, 2457, 1979, 4527, 1874, 4519, 2443, 2064, 2754,
	2025, 1876, 1312, 4265, 183, 1966, 1891, 1890, 1889, 1887,
	1886, 2441, 183, 1908, 1885, 4159, 1966, 4158, 1278, 1278,
	1955, 39, 4016, 3103, 3104, 3106, 3107, 1317, 1336, 3966,
	1912, 3965, 3101, 3102, 3103, 3104, 3106, 3107, 2040, 1721,
	4210, 3938, 4208, 2739, 1318, 3876, 2005, 3794, 3793, 3792,
	3597, 3418, 3417, 4164, 3738, 2001, 1311, 2052, 1832, 3475,
	3315, 3060, 2016, 3059, 1311, 1831, 1682, 3101, 3102, 3103,
	3104, 3106, 3107, 4098, 2984, 2722, 1601, 1314, 3670, 2089,
	979, 2094, 3427, 3367, 2099, 3366, 3262, 1804, 4392, 2195,
	4155, 1649, 4436, 1815, 1815, 2217, 1610, 4421, 4408, 3351,
	2123, 2127, 2900, 1999, 1611, 2118, 1311, 3694, 3690, 3676,
	3450, 2027, 3231, 2008, 3028, 4065, 1308, 3146, 2630, 3525,
	1278, 4417, 1278, 980, 1278, 2423, 1848, 2033, 2023, 1828,
	3358, 2165, 1517, 1446, 1289, 1245, 4430, 4427, 3401, 3650,
	1278, 1278, 4258, 4000, 4347, 4240, 1176, 3344, 3265, 2026,
	2767, 1278, 3665, 2883, 2857, 1589, 4480, 4479, 2069, 3469,
	1017, 4510, 2103, 1278, 3235, 1278, 1278, 1278, 2428, 2301,
	4138, 3707, 3927, 2131, 2698, 1485, 1493, 2664, 2770, 4580,
	1646, 780, 783, 1447, 2161, 977, 2120, 4418, 774, 975,
	973, 4131, 971, 2682, 2172, 1313, 968, 4123, 2267, 2204,
	2265, 4084, 3961, 3703, 2682, 3702, 3696, 3689, 2680, 2166,
	3687, 3316, 3637, 3636, 3347, 2177, 1452, 1451, 3201, 2680,
	3033, 3032, 965, 2301, 3237, 3031, 3030, 2988, 2299, 2777,
	2776, 2006, 2772, 1194, 2763, 1194, 3706, 3207, 2752, 2087,
	2221, 2088, 2098, 2751, 2748, 2747, 2726, 1016, 2471, 2713,
	3653, 2613, 1309, 2128, 2429, 2373, 1688, 2470, 1542, 1494,
	2216, 1310, 2200, 2331, 1019, 2185, 1019, 1546, 2854, 1546,
	2017, 1647, 1076, 3451, 1076, 960, 4514, 835, 1645, 4042,
	2205, 1076, 2299, 2701, 1932, 1932, 1336, 2174, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 2147, 1076, 2187, 1076, 1076, 1076, 1076,
	2179, 2148, 1587, 2183, 2290, 2430, 2061, 2427, 2209, 1539,
	2225, 2182, 1319, 2182, 1529, 2303, 1528, 1319, 1076, 780,
	783, 1076, 1076, 1295, 2191, 1018, 2192, 1312, 4511, 1076,
	2297, 2146, 1527, 1076, 1526, 1076, 1076, 2300, 4515, 2057,
	1489, 1231, 2284, 1336, 1301, 3291, 2213, 2208, 836, 1076,
	1076, 1076, 1076, 1502, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 2671, 3886, 2404, 2405, 2062, 2063, 4251, 2226,
	1318, 3262, 2092, 1723, 1628, 1318, 1926, 1926, 2404, 2420,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 2243,
	2195, 2300, 670, 1076, 2388, 1311, 2058, 1719, 1720, 1722,
	1723, 2330, 2388, 2712, 2466, 1198, 2261, 1582, 2298, 2034,
	2035, 2605, 1336, 2271, 1448, 2976, 2724, 1862, 2314, 665,
	2276, 1198, 3885, 2512, 2512, 2526, 2961, 2404, 1658, 2227,
	2546, 2548, 1196, 1629, 1662, 2230, 2552, 1076, 1336, 2279,
	3661, 1308, 3923, 1892, 1693, 2233, 4540, 4517, 1196, 2700,
	2224, 2943, 2432, 2289, 2288, 2287, 2624, 2295, 2327, 2328,
	2302, 1541, 2298, 999, 1019, 2318, 999, 999, 2319, 2320,
	1312, 2419, 2396, 1019, 1205, 2711, 2184, 1019, 2743, 2394,
	2602, 1293, 2423, 3713, 4253, 3911, 1599, 3306, 2435, 3299,
	3459, 3458, 2804, 1630, 1866, 1644, 955, 1015, 3107, 2937,
	2736, 2737, 2432, 2577, 3099, 3100, 4041, 3117, 3118, 3119,
	2736, 2737, 4414, 3940, 1203, 4479, 2736, 2737, 3907, 1603,
	1313, 1012, 3712, 1583, 1121, 2468, 3305, 3816, 3298, 754,
	2469, 2803, 2400, 2472, 2685, 2473, 2474, 3514, 1278, 1278,
	1263, 1869, 2975, 3960, 3688, 2278, 1164, 3686, 2417, 1069,
	874, 2234, 2591, 3346, 1641, 2569, 1864, 2946, 4523, 3313,
	2771, 2746, 2725, 2426, 3234, 1019, 1513, 4499, 4491, 2687,
	3908, 1881, 2083, 1193, 1867, 4498, 2568, 1309, 1192, 3114,
	1336, 1681, 3673, 2603, 1308, 2067, 1310, 2699, 1427, 1193,
	2508, 1438, 1263, 2681, 1192, 172, 2611, 2537, 2659, 2521,
	1611, 2653, 2769, 2618, 2550, 1611, 2766, 2558, 2559, 2999,
	956, 2082, 1932, 1511, 2570, 2574, 2575, 1865, 2626, 4543,
	1206, 1834, 1306, 2576, 2066, 2581, 1879, 4468, 2587, 2588,
	4516, 833, 3890, 832, 2768, 752, 838, 837, 2997, 3921,
	2134, 2133, 2616, 3807, 2106, 3399, 1336, 3161, 1588, 2370,
	2113, 1568, 1263, 1263, 969, 2661, 3806, 2686, 969, 969,
	1278, 970, 2528, 1313, 3398, 969, 2266, 2690, 2264, 4570,
	3105, 966, 2633, 2723, 1659, 1076, 1076, 2275, 1076, 3511,
	1976, 2655, 2689, 4415, 2432, 1826, 1827, 1491, 2945, 2637,
	2055, 2064, 2968, 2969, 1981, 1866, 2644, 1983, 2638, 2636,
	2647, 1278, 2648, 1988, 1488, 1230, 4329, 1990, 2662, 1285,
	867, 2684, 1993, 2764, 2652, 2115, 2654, 1586, 2942, 955,
	1309, 3246, 3398, 2828, 2744, 2677, 4328, 2656, 1868, 1310,
	4082, 1278, 3120, 2868, 1926, 4382, 2728, 4383, 4318, 4252,
	3325, 2688, 1869, 1278, 1012, 3662, 2842, 3647, 2897, 2665,
	1311, 3646, 3249, 666, 3891, 2755, 3720, 2571, 1278, 2112,
	3512, 855, 2750, 2749, 4259, 3718, 2715, 3903, 4273, 2114,
	1513, 3277, 3904, 3236, 3115, 1867, 1656, 2994, 2727, 2693,
	4413, 1460, 2807, 1467, 2045, 1473, 2809, 2703, 2706, 3922,
	2046, 2745, 2738, 2740, 2741, 2742, 2071, 957, 719, 1076,
	2995, 1215, 2277, 4521, 3000, 3980, 2093, 2924, 2232, 2925,
	1660, 1821, 2368, 3204, 2944, 2371, 2729, 2055, 2075, 2838,
	3803, 4443, 4054, 3906, 4467, 2901, 2834, 3276, 667, 2990,
	4444, 780, 783, 956, 2685, 2573, 3160, 2387, 4490, 3909,
	4367, 4358, 753, 2921, 2905, 2906, 4038, 1076, 1966, 1559,
	3946, 1564, 787, 1076, 1076, 2912, 2913, 2914, 688, 2414,
	3038, 1573, 1773, 1578, 2903, 2367, 1452, 2810, 2907, 2687,
	2908, 172, 2882, 2072, 668, 3721, 669, 1204, 1546, 2872,
	2229, 2918, 2822, 2870, 1194, 2948, 1584, 2950, 1692, 755,
	2832, 1657, 751, 1311, 2928, 2223, 2930, 1661, 2932, 2047,
	1194, 4544, 2586, 2395, 1018, 4522, 3527, 2432, 1076, 1076,
	4531, 3720, 2852, 2863, 1076, 875, 2051, 3116, 2941, 2873,
	3718, 4316, 2682, 3247, 1633, 1292, 2884, 1076, 1076, 1868,
	1598, 1600, 3990, 1076, 1076, 958, 2667, 2704, 4524, 1076,
	3797, 3618, 1035, 1220, 2871, 3808, 3471, 2959, 1076, 1076,
	1076, 868, 869, 1616, 1076, 2669, 2055, 2686, 2920, 4317,
	2685, 3905, 4280, 3716, 1076, 2384, 2927, 4412, 4478, 4476,
	2929, 2109, 2931, 2926, 2933, 2991, 2076, 4037, 4295, 4171,
	2996, 1076, 2689, 3021, 3753, 959, 2048, 2053, 2670, 3280,
	2998, 3674, 3016, 3017, 2382, 2687, 2956, 3020, 3912, 3386,
	2154, 1859, 856, 857, 2951, 1218, 2101, 2953, 2668, 2967,
	1211, 1027, 2958, 657, 3733, 2957, 4571, 3981, 3852, 4466,
	957, 2314, 1703, 3804, 3565, 2107, 1702, 1977, 2962, 2100,
	3721, 2317, 2065, 1438, 2085, 2977, 2018, 1862, 3719, 3282,
	4114, 2688, 2077, 2078, 4113, 4549, 3111, 3112, 3113, 2369,
	4092, 3195, 4180, 3110, 3108, 3109, 3101, 3102, 3103, 3104,
	3106, 3107, 2096, 3012, 2108, 4239, 2073, 4442, 2015, 2049,
	3754, 1076, 1076, 1076, 1702, 3700, 3649, 1019, 3510, 1438,
	1076, 1076, 1076, 2686, 3256, 1076, 3387, 1697, 3379, 2062,
	2063, 2989, 3252, 788, 789, 1076, 1198, 1336, 2843, 3926,
	2064, 1076, 3281, 1076, 3153, 3154, 3925, 2074, 2689, 2090,
	2837, 2054, 1198, 4039, 1866, 2055, 2826, 2683, 2178, 2097,
	2167, 3169, 2159, 1196, 2140, 4281, 1482, 1701, 3136, 1222,
	1336, 2285, 3027, 2378, 3633, 3580, 728, 870, 871, 1196,
	4334, 2307, 1198, 2013, 3155, 1336, 3472, 1702, 4298, 2086,
	2564, 2379, 4083, 3911, 3756, 3892, 2380, 3251, 958, 3250,
	2385, 1869, 1932, 3175, 3188, 3240, 1336, 2688, 1773, 1196,
	2730, 2272, 2011, 4005, 3809, 1701, 1864, 2823, 1233, 1888,
	1278, 1278, 3200, 2014, 2567, 4153, 3907, 4151, 858, 859,
	3900, 4094, 1703, 3719, 1867, 3268, 1631, 3264, 3263, 2982,
	2960, 2214, 3165, 1076, 3214, 3593, 3158, 3898, 959, 3157,
	3566, 2610, 3170, 3853, 2609, 2608, 3902, 1076, 3184, 3567,
	2079, 2705, 2607, 1535, 3725, 2566, 2830, 1521, 3241, 3242,
	2565, 1016, 4148, 791, 790, 1932, 1533, 1865, 3908, 873,
	1703, 1522, 3152, 4102, 4246, 3972, 3164, 4548, 1701, 3232,
	2709, 3173, 3266, 1076, 1278, 3270, 3810, 3176, 3177, 3225,
	3189, 3168, 3163, 3238, 1193, 3181, 3656, 3193, 3428, 1192,
	3131, 3132, 3133, 2176, 3147, 3178, 2308, 1306, 3354, 3901,
	1193, 3174, 4022, 3162, 1926, 1192, 4487, 1617, 2050, 1278,
	3191, 792, 793, 3172, 2080, 4277, 3267, 3326, 4081, 3272,
	4197, 1904, 3274, 3924, 1336, 3218, 3219, 2904, 2808, 2806,
	1193, 3209, 1592, 1278, 3253, 1192, 3328, 4282, 1278, 3331,
	3197, 3198, 3199, 3336, 3338, 4337, 3634, 1966, 1966, 4344,
	4090, 3211, 3212, 3294, 3213, 4247, 2381, 3582, 2164, 2731,
	2732, 1278, 3296, 3179, 4103, 3180, 2383, 1278, 1868, 1278,
	4331, 4021, 4189, 1336, 3859, 2439, 3312, 1926, 1677, 4362,
	774, 2084, 3317, 3307, 3222, 4190, 3205, 1272, 3226, 4489,
	4432, 1278, 3196, 3363, 4091, 4266, 2052, 4060, 3129, 3279,
	3297, 1679, 1278, 3233, 3851, 3724, 3239, 2093, 3332, 3128,
	3308, 3487, 1676, 3339, 3448, 3323, 4191, 3215, 1198, 3171,
	3093, 1966, 3394, 3467, 3001, 1674, 1653, 2827, 2762, 2897,
	4338, 2721, 2635, 2052, 3309, 2091, 3378, 727, 2897, 1443,
	4248, 1651, 3283, 1278, 1278, 1196, 1627, 2645, 3290, 3349,
	2280, 3352, 1899, 2649, 3301, 3903, 1966, 1625, 3333, 3257,
	3904, 1895, 1623, 3340, 1621, 1278, 1619, 2660, 3304, 1680,
	1478, 1570, 3318, 1613, 2103, 3302, 4193, 1534, 3403, 3303,
	1966, 3392, 2103, 3466, 1697, 1966, 3372, 3345, 3334, 3324,
	1532, 3341, 2939, 872, 2938, 1514, 2910, 3314, 2296, 4192,
	2274, 1640, 2238, 1336, 2092, 2139, 1336, 1608, 1959, 1805,
	1581, 3906, 1606, 3445, 1506, 1531, 4194, 2438, 3191, 4407,
	1554, 3327, 3438, 2728, 2263, 3388, 3692, 3909, 3691, 3947,
	3935, 3356, 4330, 3414, 3395, 3348, 4003, 3952, 3896, 1076,
	3375, 780, 783, 3752, 3744, 1076, 1076, 3376, 3705, 1076,
	1076, 1076, 3668, 1076, 3666, 3648, 3446, 3382, 3377, 967,
	4464, 3368, 1076, 1932, 3426, 1019, 2855, 2841, 3452, 3400,
	3430, 1076, 2833, 3507, 1076, 3465, 172, 172, 3409, 3402,
	1336, 1678, 2820, 2805, 3412, 3413, 1193, 1593, 2651, 1076,
	2646, 1192, 1675, 3424, 3464, 1194, 2138, 1336, 2136, 3455,
	3393, 3456, 2119, 3457, 3447, 1673, 1652, 1932, 1932, 1076,
	1076, 1194, 1076, 1076, 1076, 2104, 2081, 3440, 2068, 2056,
	1998, 1650, 1995, 3490, 3445, 3473, 1626, 1992, 1010, 1989,
	955, 1984, 3439, 3438, 1982, 1978, 1969, 1624, 3391, 4456,
	3461, 1194, 1622, 1706, 1620, 1906, 1618, 3615, 1432, 3905,
	2980, 1334, 2019, 1612, 1076, 1012, 4480, 2954, 1076, 2952,
	1932, 1932, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 3470, 1076, 3539, 4372, 1926, 3912, 1607, 3462, 1076,
	1076, 1932, 1605, 3499, 3500, 1530, 1076, 3468, 4027, 3335,
	1011, 2262, 4020, 4019, 3495, 2113, 3959, 1076, 3882, 3540,
	972, 974, 976, 1173, 2898, 2038, 1487, 4182, 1198, 1198,
	3436, 3506, 1076, 2682, 2710, 3503, 3614, 4175, 3440, 1926,
	1926, 3522, 3513, 3515, 3516, 3529, 2064, 2682, 2680, 3577,
	1174, 2981, 3519, 3439, 956, 1196, 1196, 3764, 2258, 1707,
	2228, 1336, 2707, 3537, 3517, 4195, 1263, 3538, 3611, 1254,
	4196, 4371, 1929, 2283, 1671, 1672, 2257, 2235, 2175, 1084,
	1253, 3928, 3598, 3954, 715, 1713, 1714, 3536, 1604, 4217,
	3860, 3838, 1926, 1926, 3638, 2733, 2714, 1920, 3544, 1710,
	3616, 3617, 3569, 1287, 4483, 3542, 1221, 4474, 1076, 671,
	4437, 249, 2819, 1263, 3628, 3629, 3630, 2260, 2281, 3741,
	3699, 2327, 3530, 1926, 2112, 256, 256, 256, 2160, 660,
	661, 1076, 676, 660, 676, 686, 3570, 3584, 726, 1713,
	1714, 3698, 744, 3441, 3442, 3443, 3444, 750, 1263, 1263,
	1715, 172, 1298, 256, 3586, 3587, 1175, 767, 654, 3578,
	1076, 1076, 2282, 1254, 682, 1254, 2767, 2775, 2774, 823,
	1716, 852, 2759, 2718, 2327, 3545, 2757, 256, 3589, 3590,
	3601, 3600, 2716, 3894, 3642, 2758, 2717, 4323, 4290, 4287,
	4245, 4167, 4146, 1076, 3743, 3732, 1193, 1193, 3608, 3381,
	2862, 1192, 1192, 3677, 1715, 3573, 3610, 1194, 2551, 2004,
	1913, 4518, 4100, 4364, 3893, 1278, 3645, 3248, 4365, 3203,
	4547, 3099, 3100, 1713, 1714, 4364, 2674, 2675, 4289, 1591,
	4365, 2672, 2673, 3681, 1932, 1590, 3695, 1454, 1427, 4493,
	3624, 957, 3830, 3682, 3684, 2434, 3620, 2674, 2672, 2467,
	4168, 4132, 3652, 3693, 3441, 3442, 3443, 3444, 3955, 1655,
	3951, 1438, 1654, 1278, 3950, 3826, 3750, 3619, 3701, 1076,
	3518, 3329, 1799, 1798, 4533, 4500, 4327, 1198, 1076, 4326,
	3766, 4325, 4232, 3675, 2868, 4149, 4127, 4080, 1278, 1278,
	1278, 3773, 4077, 3710, 3983, 3878, 3788, 3770, 660, 660,
	3727, 2728, 3664, 3659, 1196, 1278, 256, 3385, 3384, 3273,
	3220, 2897, 3739, 3089, 3088, 3087, 3086, 3085, 3084, 3083,
	3082, 3723, 3761, 3081, 1336, 3740, 3080, 3758, 3757, 3079,
	3078, 3711, 1785, 3077, 3076, 3075, 1790, 3074, 3714, 3073,
	3072, 3722, 3726, 3071, 3070, 3069, 3068, 3067, 1336, 3066,
	3742, 1076, 1076, 2936, 2917, 2916, 1926, 1076, 1076, 1932,
	2915, 2847, 1076, 1076, 3789, 1076, 3747, 2821, 2708, 1076,
	2642, 2628, 2627, 2399, 2259, 3745, 2256, 1009, 2255, 958,
	1076, 2719, 3760, 2254, 2253, 3759, 2252, 3777, 2173, 3762,
	2149, 1438, 2145, 3768, 2144, 3767, 1076, 2143, 2142, 1263,
	3772, 2141, 3811, 1972, 1971, 3780, 1970, 1968, 3824, 1670,
	3783, 1669, 1614, 3787, 3784, 1501, 1500, 1499, 1498, 3820,
	2760, 1497, 3221, 1496, 1495, 3223, 3224, 3778, 3779, 959,
	3227, 1490, 3228, 1438, 3229, 1438, 3795, 3786, 3257, 3812,
	3800, 1486, 1484, 1483, 3805, 1193, 1327, 1326, 1325, 1324,
	1192, 1323, 1291, 1290, 1240, 2813, 1198, 1239, 2816, 1238,
	2818, 1237, 1236, 1235, 1198, 1234, 1232, 1227, 1336, 1226,
	1336, 1225, 1224, 1223, 1156, 2009, 978, 1198, 964, 4250,
	3910, 1926, 1664, 1196, 89, 1492, 810, 83, 2110, 3663,
	3865, 1196, 935, 4361, 1336, 1476, 4272, 818, 4346, 3188,
	3275, 2778, 2859, 2237, 1196, 2859, 1615, 1194, 1194, 2239,
	3183, 2593, 4315, 3834, 3037, 3883, 3884, 4224, 3850, 4053,
	2437, 1803, 3140, 85, 1060, 1106, 1198, 3979, 1198, 3978,
	3897, 3651, 2887, 3976, 3975, 2193, 1917, 1919, 1026, 1339,
	4381, 2020, 1066, 2036, 2029, 3929, 2629, 2511, 3916, 1083,
	3916, 1272, 2206, 1196, 1080, 1196, 1336, 3920, 3871, 3868,
	1921, 1923, 2207, 3862, 3863, 3864, 1082, 1336, 1929, 1929,
	3931, 3932, 3919, 3867, 2215, 3888, 2218, 2219, 2220, 2934,
	3872, 1081, 3956, 3875, 3957, 1922, 1822, 1079, 1916, 3749,
	3930, 172, 3748, 1920, 1920, 1278, 1278, 2829, 2866, 3857,
	3895, 3410, 1540, 1538, 937, 2024, 3861, 2393, 2421, 3973,
	3026, 1796, 1278, 1041, 3866, 3870, 1062, 2418, 1216, 1051,
	1040, 3934, 3166, 1336, 1193, 3145, 3397, 3607, 1278, 1192,
	2306, 827, 1193, 3942, 3970, 3944, 3096, 1192, 2424, 3880,
	1207, 2534, 2527, 2523, 3230, 1193, 3958, 2856, 1683, 4067,
	1192, 1775, 2867, 1198, 3968, 3996, 1321, 1044, 3949, 2391,
	1787, 3006, 3945, 1278, 1278, 1278, 2316, 3404, 3186, 2622,
	4368, 3943, 3526, 2153, 1336, 3916, 1172, 1171, 3969, 1214,
	1196, 1170, 3962, 4352, 4026, 4349, 1076, 1076, 1076, 3781,
	3967, 3361, 4007, 4006, 1193, 2012, 1193, 4023, 2666, 1192,
	3989, 1192, 3974, 1765, 1336, 3369, 4010, 1056, 3993, 1076,
	1437, 3151, 1076, 1076, 4001, 3429, 1503, 749, 4107, 1068,
	4008, 1764, 1076, 2799, 2798, 1932, 4242, 1307, 3995, 1305,
	1076, 1076, 1304, 1303, 4507, 4569, 3660, 3992, 4045, 223,
	2974, 1704, 1209, 1696, 220, 1336, 4032, 1278, 222, 221,
	3984, 4030, 3612, 3192, 4015, 4435, 1194, 3679, 4034, 1966,
	4029, 3353, 4040, 23, 22, 21, 109, 42, 20, 125,
	144, 1336, 143, 117, 142, 1229, 141, 140, 139, 1076,
	146, 138, 137, 132, 136, 4062, 135, 256, 1076, 256,
	256, 134, 1258, 256, 1268, 4056, 1076, 133, 1932, 131,
	129, 130, 124, 128, 127, 1288, 1076, 1438, 1438, 1076,
	126, 123, 122, 121, 744, 4050, 120, 119, 1076, 1334,
	4086, 1193, 118, 4076, 116, 1336, 1192, 4073, 4074, 115,
	114, 4110, 113, 112, 111, 110, 1278, 1278, 256, 740,
	256, 256, 1258, 737, 256, 256, 1268, 1926, 4085, 4051,
	61, 60, 108, 107, 19, 4126, 4087, 256, 40, 1456,
	4093, 14, 65, 66, 18, 13, 35, 3363, 88, 4161,
	99, 98, 36, 96, 1336, 95, 34, 1278, 4137, 4124,
	1480, 1438, 17, 16, 4152, 15, 93, 92, 33, 31,
	4051, 4128, 11, 9, 8, 1198, 1198, 37, 1883, 1505,
	12, 1268, 5, 4166, 2164, 256, 256, 4139, 1258, 177,
	4134, 4181, 176, 4142, 1076, 1076, 2330, 3916, 3916, 4144,
	1926, 4141, 1196, 1196, 4150, 179, 1929, 744, 175, 256,
	256, 1076, 1932, 4165, 4179, 1194, 4160, 4145, 178, 4200,
	4201, 4177, 4176, 1194, 87, 4140, 174, 173, 86, 4178,
	4184, 1920, 852, 29, 10, 169, 1194, 4213, 4214, 4183,
	4198, 4010, 4162, 3737, 80, 4173, 1076, 171, 170, 1076,
	2330, 168, 167, 166, 81, 78, 1198, 165, 82, 2658,
	1272, 4212, 164, 79, 163, 4185, 27, 6, 1198, 64,
	7, 4035, 4222, 3449, 4238, 4204, 102, 103, 3916, 38,
	3631, 4129, 4116, 1196, 3632, 1194, 76, 1194, 75, 74,
	3916, 26, 63, 25, 207, 1196, 206, 4233, 205, 4237,
	4235, 204, 203, 202, 197, 256, 196, 201, 199, 1076,
	1076, 198, 4261, 4255, 200, 195, 4260, 4254, 3286, 3287,
	1198, 4216, 3288, 1198, 256, 2311, 2397, 1278, 3667, 210,
	3669, 209, 215, 214, 1926, 213, 212, 1278, 1278, 4268,
	211, 1785, 3916, 1193, 1193, 3916, 208, 1196, 1192, 1192,
	1196, 217, 4306, 194, 1278, 4284, 4285, 193, 4270, 3319,
	3320, 191, 187, 3321, 4292, 4288, 4283, 4294, 1076, 1076,
	186, 190, 192, 189, 188, 185, 216, 161, 1076, 162,
	71, 2802, 4300, 1438, 4302, 4165, 160, 4311, 4303, 4312,
	159, 4299, 158, 157, 3704, 2533, 4304, 4305, 156, 155,
	154, 70, 24, 2, 1, 0, 0, 4310, 0, 0,
	0, 4319, 1194, 4309, 4339, 1076, 1076, 4320, 1076, 0,
	0, 0, 4343, 0, 1193, 4324, 0, 0, 0, 1192,
	0, 0, 0, 0, 0, 4366, 1193, 4370, 0, 0,
	0, 1192, 0, 4363, 4351, 4354, 0, 0, 0, 4342,
	0, 4341, 0, 0, 0, 0, 0, 4386, 4355, 0,
	4390, 4359, 4356, 0, 2529, 0, 0, 1076, 1076, 1076,
	4360, 0, 4391, 0, 0, 0, 0, 0, 4373, 2911,
	0, 4389, 0, 4377, 0, 0, 0, 0, 1193, 4385,
	0, 1193, 0, 1192, 0, 0, 1192, 0, 1076, 0,
	4419, 4424, 0, 0, 4403, 4404, 4406, 0, 4405, 0,
	0, 0, 0, 0, 0, 4384, 0, 0, 0, 4420,
	0, 0, 660, 4438, 0, 0, 0, 0, 0, 4447,
	0, 0, 0, 4422, 0, 0, 0, 0, 4445, 0,
	0, 0, 0, 256, 0, 256, 0, 4461, 0, 256,
	1076, 4446, 0, 4449, 4459, 0, 0, 0, 0, 0,
	0, 0, 1456, 1258, 256, 4460, 256, 0, 4465, 0,
	4455, 256, 1456, 676, 0, 0, 0, 0, 256, 1456,
	0, 4481, 0, 0, 0, 0, 0, 4477, 0, 4485,
	4475, 4473, 4454, 1973, 4471, 4472, 4484, 4486, 4453, 1198,
	4370, 1198, 0, 4502, 0, 256, 4501, 4492, 4351, 4497,
	4488, 4354, 256, 0, 4505, 0, 0, 0, 0, 0,
	4512, 3916, 4503, 3916, 0, 4513, 1196, 4509, 1196, 0,
	0, 0, 4508, 0, 4457, 4458, 2045, 4526, 0, 0,
	4462, 0, 2046, 4504, 0, 4506, 0, 4525, 0, 0,
	4528, 0, 744, 0, 1194, 1194, 0, 0, 0, 3003,
	3004, 4534, 0, 0, 0, 0, 4537, 4539, 4535, 1076,
	1076, 0, 0, 0, 4542, 4532, 4541, 0, 1076, 0,
	1076, 1076, 0, 0, 0, 0, 4554, 4545, 72, 4559,
	4551, 4557, 0, 0, 4563, 0, 4558, 4564, 0, 2868,
	0, 4560, 4562, 0, 73, 0, 4565, 0, 0, 4572,
	4568, 0, 0, 4561, 0, 0, 4575, 0, 0, 4577,
	77, 4578, 4573, 4552, 4553, 0, 4576, 4579, 0, 4582,
	0, 0, 0, 0, 4574, 1194, 1076, 4584, 0, 4583,
	0, 0, 0, 4590, 4586, 4592, 0, 1194, 4587, 0,
	4589, 2047, 4593, 0, 0, 0, 1929, 0, 3099, 3100,
	84, 3117, 3118, 3119, 0, 1263, 0, 1193, 2051, 1193,
	0, 0, 1192, 0, 1192, 0, 0, 0, 0, 4588,
	0, 1920, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 846, 0, 1194,
	0, 0, 1194, 3122, 3123, 3124, 256, 0, 0, 256,
	0, 104, 0, 0, 2164, 0, 90, 101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1929,
	0, 0, 0, 3114, 0, 0, 0, 0, 2048, 2053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1920, 0, 0, 0, 0, 2533,
	0, 0, 256, 0, 0, 0, 256, 0, 0, 0,
	0, 256, 0, 91, 0, 0, 0, 256, 0, 0,
	3099, 3100, 0, 3117, 3118, 3119, 0, 0, 0, 0,
	0, 0, 256, 0, 256, 0, 0, 0, 660, 0,
	256, 0, 0, 3492, 0, 0, 0, 0, 0, 0,
	0, 0, 744, 0, 0, 0, 852, 2045, 0, 0,
	0, 2049, 0, 2046, 3105, 0, 0, 0, 2964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2533,
	2533, 256, 0, 1258, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3114, 0, 0, 744, 0,
	0, 0, 0, 2054, 0, 256, 0, 2055, 0, 0,
	0, 0, 2236, 0, 0, 0, 0, 256, 256, 0,
	256, 0, 256, 3746, 256, 0, 256, 4118, 4119, 0,
	0, 0, 0, 0, 0, 0, 2619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2268, 2529, 2529,
	2269, 4133, 2270, 0, 4135, 4136, 94, 3284, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 3115, 0,
	0, 0, 2047, 0, 1713, 1714, 0, 1746, 1747, 1748,
	1756, 1757, 1758, 0, 0, 0, 3105, 0, 726, 2051,
	3796, 0, 744, 0, 0, 0, 3285, 0, 1744, 0,
	0, 0, 3342, 0, 0, 1716, 0, 180, 97, 0,
	100, 0, 0, 1762, 0, 0, 0, 0, 1194, 0,
	1194, 0, 0, 2533, 2533, 2533, 0, 0, 0, 0,
	0, 0, 3373, 0, 224, 0, 0, 0, 0, 1715,
	0, 0, 847, 3380, 0, 0, 0, 145, 3120, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 1732, 2048,
	2053, 0, 0, 0, 0, 0, 2164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1929, 0, 226,
	2050, 0, 0, 1263, 3420, 3421, 0, 0, 0, 0,
	3115, 0, 2529, 2529, 2529, 0, 0, 0, 0, 0,
	0, 0, 1920, 0, 0, 147, 0, 0, 0, 0,
	0, 3116, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 1929, 1929, 0, 0, 0, 0, 0, 225, 0,
	1738, 1739, 1740, 1741, 0, 4269, 0, 0, 0, 218,
	1721, 0, 2049, 0, 0, 0, 1920, 1920, 219, 660,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	183, 0, 0, 660, 1929, 1929, 1753, 0, 0, 1763,
	256, 0, 660, 0, 2054, 1743, 1745, 0, 2055, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 1920,
	1920, 0, 3483, 3484, 0, 1929, 0, 0, 0, 256,
	1268, 1730, 1731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1751,
	1920, 0, 0, 3116, 0, 0, 0, 0, 2042, 0,
	3111, 3112, 3113, 0, 1736, 0, 0, 3110, 3108, 3109,
	3101, 3102, 3103, 3104, 3106, 3107, 256, 1268, 0, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2641,
	0, 0, 0, 0, 3982, 256, 0, 2043, 256, 0,
	0, 0, 256, 0, 256, 3994, 0, 0, 0, 1258,
	0, 256, 256, 0, 1268, 1268, 2657, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 4014, 0, 0,
	0, 0, 0, 0, 3546, 3547, 3548, 3549, 3550, 3551,
	3552, 3553, 3554, 3555, 3556, 3557, 3558, 3559, 3560, 3561,
	3562, 3563, 3564, 0, 3568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2697, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 4434, 0,
	0, 2050, 3111, 3112, 3113, 0, 0, 1742, 256, 3110,
	3108, 3109, 3101, 3102, 3103, 3104, 3106, 3107, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 1737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 1754, 0, 0, 0, 0, 0, 1438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	2811, 0, 0, 1861, 0, 0, 0, 0, 1929, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1456, 0, 0, 256, 0, 0,
	0, 0, 0, 1920, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 2851, 0, 0, 0, 0, 0,
	0, 0, 2533, 2533, 2697, 0, 660, 0, 0, 0,
	0, 0, 0, 0, 0, 2880, 852, 0, 2697, 2697,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1752, 0, 256, 0, 1263, 1727, 1728, 1734, 1755,
	1733, 1729, 0, 1726, 1724, 1725, 1717, 1718, 1719, 1720,
	1722, 1723, 256, 1258, 256, 0, 0, 0, 1456, 0,
	1456, 1268, 256, 0, 0, 1258, 3708, 1258, 0, 1258,
	0, 2529, 2529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1929, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 256, 256, 256, 1258,
	0, 0, 1258, 0, 256, 0, 256, 0, 1920, 0,
	0, 0, 0, 0, 2533, 2533, 2533, 2533, 2533, 2533,
	2533, 2533, 2533, 2533, 2533, 2533, 2533, 2533, 2533, 2533,
	2533, 2533, 2533, 0, 2533, 0, 0, 256, 1025, 3774,
	3775, 3776, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3099, 3100, 0, 3117, 3118,
	3119, 0, 0, 2529, 2529, 2529, 2529, 2529, 2529, 2529,
	2529, 2529, 2529, 2529, 2529, 2529, 2529, 2529, 2529, 2529,
	2529, 2529, 0, 2529, 0, 0, 0, 0, 4274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1713, 1714, 757, 0, 0, 4291,
	1756, 1757, 1758, 0, 1456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1744, 0,
	3114, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 0, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1713, 1714, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1735,
	0, 0, 0, 0, 0, 1744, 0, 0, 1732, 0,
	0, 0, 1716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3105, 762, 0, 0, 0, 1715, 0, 0, 4374,
	0, 0, 4375, 0, 0, 0, 1735, 0, 0, 0,
	0, 0, 0, 0, 0, 1732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	1738, 1739, 1740, 1741, 0, 0, 0, 0, 0, 0,
	1721, 256, 0, 0, 0, 0, 660, 0, 0, 0,
	0, 660, 0, 3120, 660, 0, 0, 660, 660, 0,
	0, 0, 0, 660, 0, 0, 3815, 0, 0, 0,
	0, 256, 0, 0, 721, 0, 1753, 0, 0, 1763,
	0, 0, 0, 1456, 0, 1743, 1745, 1738, 1739, 1740,
	1741, 0, 0, 0, 0, 3115, 1272, 1721, 764, 1929,
	0, 0, 0, 0, 0, 1456, 0, 0, 0, 0,
	0, 1730, 1731, 0, 0, 0, 256, 0, 0, 0,
	256, 256, 0, 0, 1920, 0, 0, 0, 0, 1751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1743, 1745, 1736, 0, 0, 0, 0, 2697,
	2697, 256, 0, 3245, 0, 0, 0, 768, 0, 0,
	0, 0, 2697, 0, 4031, 3259, 4033, 0, 1730, 1731,
	0, 0, 1929, 2697, 3259, 0, 2697, 3259, 0, 0,
	3259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 256, 3245, 256, 1920, 0, 0,
	0, 1736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3245, 256, 0, 3311,
	3311, 0, 1258, 0, 0, 0, 0, 0, 0, 759,
	0, 0, 0, 0, 4059, 0, 0, 2697, 3116, 3330,
	2697, 3245, 0, 0, 2697, 2697, 3245, 0, 4078, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 763,
	0, 0, 0, 0, 0, 0, 0, 1742, 0, 0,
	1108, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1737, 0, 256,
	3357, 4096, 720, 3359, 2697, 0, 0, 256, 0, 0,
	0, 256, 0, 1268, 0, 766, 1929, 0, 0, 0,
	0, 761, 0, 1754, 0, 0, 0, 0, 0, 0,
	1283, 0, 2851, 0, 1742, 1258, 0, 256, 0, 0,
	2697, 1920, 660, 0, 0, 0, 0, 4143, 0, 2697,
	0, 0, 0, 1025, 1737, 0, 0, 1025, 0, 0,
	0, 0, 0, 0, 0, 758, 0, 0, 0, 0,
	256, 2851, 0, 0, 2851, 0, 0, 3111, 3112, 3113,
	0, 0, 0, 0, 3110, 3108, 3109, 3101, 3102, 3103,
	3104, 3106, 3107, 765, 0, 0, 3099, 3100, 0, 3117,
	3118, 3119, 1458, 3454, 1464, 0, 1470, 722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 760, 3491,
	3460, 1752, 0, 1258, 256, 0, 256, 0, 0, 1755,
	1733, 1729, 1258, 1726, 1724, 1725, 1717, 1718, 1719, 1720,
	1722, 1723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4221, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 3099, 3100, 0, 3117, 3118, 3119,
	1557, 3114, 1562, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1571, 0, 1576, 0, 0, 1733, 1729, 0,
	1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 0,
	0, 0, 0, 0, 0, 1713, 1714, 1199, 0, 0,
	0, 0, 2794, 0, 0, 0, 0, 0, 3524, 0,
	0, 0, 0, 0, 2533, 0, 0, 0, 0, 1744,
	0, 0, 0, 0, 0, 0, 1716, 0, 0, 3114,
	0, 0, 1713, 1714, 0, 2786, 2784, 1636, 0, 0,
	1642, 0, 2788, 2790, 2780, 0, 0, 0, 0, 0,
	0, 0, 3105, 0, 0, 0, 1744, 0, 1272, 1272,
	1715, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	1735, 2533, 0, 0, 0, 1272, 0, 0, 0, 1732,
	0, 0, 0, 2529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1735, 0, 0,
	0, 0, 0, 0, 3120, 0, 1732, 0, 0, 0,
	3105, 0, 0, 0, 0, 0, 0, 256, 256, 0,
	3486, 0, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 0,
	2529, 0, 0, 0, 0, 0, 0, 0, 0, 660,
	660, 1738, 1739, 1740, 1741, 0, 3115, 0, 0, 3121,
	0, 1721, 0, 1784, 0, 0, 0, 3481, 0, 1797,
	0, 1456, 1456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3120, 0, 0, 1456, 1456, 1456, 1738, 1739,
	1740, 1741, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 0, 0, 0, 1743, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2782, 3311, 0,
	0, 0, 0, 2533, 3115, 0, 0, 0, 2796, 0,
	0, 0, 1730, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 1745, 0, 0, 1713, 1714, 2795,
	2787, 2785, 2789, 2791, 2781, 2783, 2797, 0, 0, 0,
	0, 744, 0, 2793, 0, 1736, 0, 0, 0, 1730,
	1731, 1744, 0, 0, 1855, 1855, 1855, 0, 1716, 0,
	0, 0, 0, 0, 0, 0, 0, 3311, 0, 0,
	0, 0, 2529, 0, 0, 0, 2800, 0, 256, 3116,
	0, 0, 1736, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1715, 0, 0, 0, 3245, 256, 0, 0,
	0, 0, 1735, 0, 0, 0, 0, 0, 256, 0,
	0, 1732, 1188, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 256, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3116, 0, 0,
	0, 0, 0, 0, 0, 2697, 256, 0, 251, 251,
	656, 0, 3480, 0, 0, 2880, 2880, 0, 1742, 0,
	0, 852, 852, 2697, 0, 0, 0, 2851, 2851, 0,
	0, 852, 2697, 1738, 1739, 1740, 1741, 0, 1737, 0,
	0, 0, 0, 1721, 0, 0, 0, 0, 0, 0,
	1025, 256, 0, 0, 0, 1742, 0, 0, 3111, 3112,
	3113, 0, 0, 0, 0, 3110, 3108, 3109, 3101, 3102,
	3103, 3104, 3106, 3107, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1743, 1745,
	0, 0, 0, 0, 0, 0, 2801, 0, 0, 0,
	0, 0, 0, 0, 0, 2792, 0, 0, 0, 0,
	0, 0, 0, 0, 1730, 1731, 1199, 0, 0, 0,
	0, 0, 0, 3835, 0, 0, 3111, 3112, 3113, 0,
	0, 0, 0, 3110, 3108, 3109, 3101, 3102, 3103, 3104,
	3106, 3107, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1199, 0, 0, 0, 1199, 0, 0, 0, 1199, 0,
	0, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718, 1719,
	1720, 1722, 1723, 0, 0, 256, 0, 0, 0, 0,
	0, 1456, 0, 256, 0, 0, 0, 0, 0, 1199,
	0, 0, 0, 0, 0, 0, 256, 0, 1733, 1729,
	0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723,
	0, 0, 0, 0, 1199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2697, 2697, 0, 3311,
	0, 0, 0, 0, 1199, 0, 0, 0, 2697, 1199,
	0, 0, 0, 0, 0, 3918, 0, 3918, 1456, 0,
	0, 0, 0, 1199, 0, 0, 2697, 0, 3259, 0,
	1742, 1456, 1456, 256, 3245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3245, 256, 3245, 256,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2697, 0, 2697, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2697, 0, 0, 0, 0, 3986, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3918, 0, 0, 1456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1733, 1729, 0, 1726, 1724, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 2305, 0, 2309, 0, 0,
	0, 0, 0, 0, 2323, 0, 0, 0, 0, 0,
	0, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340,
	2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350,
	2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360,
	2361, 2362, 2363, 2364, 2365, 2366, 0, 2372, 0, 2374,
	2375, 2376, 2377, 0, 0, 0, 2697, 0, 3259, 0,
	0, 4089, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 2401, 0, 0, 0, 0, 4108, 0, 4108, 0,
	0, 0, 1784, 72, 0, 0, 2416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 744, 0, 73,
	0, 0, 2446, 2449, 2452, 2455, 1258, 2459, 2460, 2461,
	2462, 2463, 2464, 2465, 0, 77, 0, 0, 0, 0,
	3245, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2525, 0, 2536, 2538, 2543,
	4089, 0, 0, 0, 1199, 0, 1199, 0, 2697, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	4170, 1199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1456, 0, 0, 0, 0, 0, 1933, 0,
	0, 0, 1199, 0, 3918, 3918, 0, 0, 0, 1713,
	1714, 0, 846, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 256, 0, 0, 0, 104, 0, 0, 0,
	0, 90, 101, 1744, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 3524, 0, 0, 0, 0,
	1244, 0, 1244, 1244, 0, 0, 0, 0, 0, 0,
	0, 3311, 0, 0, 3311, 0, 0, 0, 1199, 0,
	4089, 0, 0, 0, 1715, 0, 0, 0, 0, 1199,
	0, 0, 0, 0, 1735, 3918, 0, 0, 91, 0,
	0, 0, 0, 1732, 0, 0, 0, 3918, 0, 0,
	0, 1331, 0, 1199, 0, 0, 0, 1436, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3986, 0, 0,
	0, 0, 0, 0, 2992, 0, 0, 0, 0, 3918,
	0, 256, 3918, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3259, 0, 0, 1738, 1739, 1740, 1741, 0,
	0, 0, 0, 0, 0, 1721, 0, 0, 0, 1713,
	1714, 0, 1746, 1747, 1748, 1756, 1757, 1758, 1456, 0,
	1456, 0, 1555, 1556, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 1744, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 1762, 0,
	1743, 1745, 0, 4335, 0, 0, 0, 0, 1199, 1199,
	0, 94, 0, 0, 0, 0, 4108, 0, 1199, 256,
	0, 0, 0, 0, 1715, 0, 1730, 1731, 2814, 2815,
	258, 2817, 0, 0, 1735, 0, 0, 0, 2697, 0,
	0, 0, 0, 1732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 1736,
	0, 0, 180, 97, 0, 100, 0, 0, 1663, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3524, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 847, 0, 0,
	1456, 0, 145, 0, 0, 0, 0, 0, 0, 0,
	1199, 0, 1199, 0, 1199, 1738, 1739, 1740, 1741, 0,
	0, 0, 0, 0, 0, 1721, 0, 256, 0, 0,
	1199, 1199, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 1199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2935, 1199, 0, 1199, 1199, 1199, 0, 0,
	147, 1753, 0, 0, 1763, 0, 0, 4089, 0, 0,
	1743, 1745, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 1742, 225, 0, 0, 0, 1759, 0, 1760,
	0, 0, 0, 0, 218, 0, 1730, 1731, 0, 0,
	0, 2697, 1737, 219, 0, 0, 1766, 1767, 3918, 0,
	3918, 0, 0, 1456, 1751, 1039, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 1736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1456, 0, 0, 0,
	0, 2986, 2987, 0, 0, 0, 0, 2993, 0, 0,
	0, 1761, 0, 0, 1933, 1933, 1199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3007, 3008, 0, 1750,
	0, 2880, 2416, 0, 0, 0, 0, 0, 0, 0,
	2697, 3015, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1893, 0, 0, 2880, 0, 3029, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1902, 0, 1436,
	0, 0, 0, 0, 3041, 1733, 1729, 0, 1726, 1724,
	1725, 1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 0,
	0, 0, 1742, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1199, 0, 0, 0, 0, 1244, 0,
	0, 0, 1737, 0, 0, 1436, 0, 0, 0, 0,
	0, 0, 1713, 1714, 0, 1746, 1747, 1748, 1756, 1757,
	1758, 0, 0, 0, 0, 0, 0, 0, 1754, 0,
	0, 0, 0, 0, 0, 1749, 1744, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 1762, 0, 0, 0, 1199, 0, 0, 0, 0,
	0, 0, 1199, 2543, 2543, 2543, 0, 0, 0, 0,
	0, 1199, 0, 0, 0, 0, 0, 1715, 1855, 0,
	0, 0, 0, 0, 0, 0, 3156, 1735, 1199, 0,
	0, 0, 0, 0, 0, 0, 1732, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1752, 0, 0, 0,
	0, 1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724,
	1725, 1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 0,
	0, 3050, 0, 0, 0, 3051, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1738, 1739,
	1740, 1741, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 0, 0, 0, 1025, 0, 1199, 1199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1025, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1753, 0, 0, 1763, 0, 0,
	0, 0, 0, 1743, 1745, 0, 0, 0, 0, 0,
	1199, 0, 0, 0, 0, 0, 3278, 0, 0, 0,
	1759, 0, 1760, 0, 0, 0, 0, 0, 0, 1730,
	1731, 0, 0, 0, 0, 2151, 0, 0, 0, 2158,
	0, 0, 1933, 0, 0, 0, 0, 1751, 0, 0,
	2170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 2181, 0, 2181, 0, 0,
	0, 0, 0, 2188, 0, 0, 1199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2158, 0, 0, 2211, 0, 0,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 1199, 0, 0, 0, 0, 0, 0, 2231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2244, 0, 2246, 0, 2248, 0, 2250, 0, 2251,
	0, 1199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1199, 0, 0, 0, 0, 0, 0,
	1039, 0, 0, 0, 1039, 1742, 0, 0, 1199, 0,
	0, 0, 0, 0, 0, 0, 0, 2273, 0, 0,
	1419, 0, 0, 0, 1419, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2323, 0, 0, 0, 0, 0, 3478, 3479,
	0, 0, 3482, 0, 0, 0, 3485, 0, 0, 0,
	0, 0, 0, 0, 0, 3489, 0, 0, 0, 0,
	0, 0, 0, 0, 3496, 0, 0, 3156, 0, 0,
	0, 1072, 0, 0, 0, 0, 0, 0, 0, 1752,
	0, 0, 3508, 0, 1727, 1728, 1734, 1755, 1733, 1729,
	0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723,
	0, 0, 3531, 3532, 2412, 3533, 3534, 3535, 2413, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 255, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1713, 1714, 781, 0, 3541, 0, 0,
	0, 3543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1744, 0, 781,
	0, 0, 0, 0, 1716, 0, 0, 2600, 0, 0,
	0, 0, 3571, 3572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3583, 0, 0, 0, 0, 0, 0, 0, 1715, 0,
	0, 0, 0, 0, 0, 3592, 0, 0, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 1732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 72, 0, 46, 45, 2643, 0,
	0, 1244, 0, 0, 0, 1244, 0, 1244, 0, 0,
	73, 0, 0, 148, 0, 0, 1199, 1199, 2985, 0,
	0, 0, 0, 0, 2170, 0, 77, 0, 0, 0,
	0, 3635, 1199, 0, 0, 0, 0, 67, 1195, 1738,
	1739, 1740, 1741, 0, 48, 0, 150, 0, 0, 1721,
	1199, 0, 0, 0, 3654, 0, 0, 0, 0, 0,
	0, 0, 1199, 0, 47, 1199, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1933, 0, 3678, 0, 1199, 0, 0, 0,
	50, 68, 0, 0, 1743, 1745, 0, 0, 51, 0,
	1199, 1199, 0, 57, 0, 0, 0, 151, 0, 0,
	0, 0, 0, 0, 0, 49, 0, 104, 0, 0,
	1730, 1731, 90, 101, 0, 0, 0, 1436, 0, 0,
	0, 1419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 0, 1933, 0, 0, 0, 0,
	0, 52, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1199, 0, 0, 0, 0, 91,
	2158, 0, 0, 0, 0, 0, 0, 0, 2170, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 3769, 0, 0, 0, 0, 0, 0, 0, 1199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1199, 0, 0, 0, 0, 0,
	0, 0, 0, 1199, 0, 0, 2909, 0, 1199, 0,
	0, 0, 0, 0, 0, 0, 0, 1039, 0, 0,
	0, 0, 0, 1419, 0, 2919, 0, 2922, 0, 0,
	0, 1199, 0, 0, 0, 0, 0, 1199, 0, 1199,
	0, 0, 0, 1199, 3813, 3814, 1742, 0, 0, 0,
	3818, 3819, 0, 0, 0, 3822, 3823, 0, 72, 0,
	0, 1199, 3827, 0, 0, 0, 1737, 0, 2947, 1436,
	2949, 1436, 1199, 3831, 73, 0, 0, 2955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1199, 3836,
	77, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 53,
	1244, 0, 0, 1199, 1199, 0, 0, 0, 2983, 0,
	0, 0, 0, 56, 0, 0, 0, 0, 59, 0,
	84, 0, 0, 0, 0, 1199, 0, 69, 0, 0,
	0, 0, 58, 180, 97, 0, 100, 0, 0, 0,
	54, 0, 0, 0, 152, 0, 0, 0, 1419, 0,
	0, 55, 0, 0, 0, 0, 0, 846, 0, 0,
	224, 0, 0, 1199, 0, 0, 1199, 0, 62, 0,
	0, 104, 0, 145, 0, 0, 90, 101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 1733,
	1729, 0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722,
	1723, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1933, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 91, 0, 0, 0, 0, 0, 0,
	1199, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 1199, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 1933, 1933, 0,
	0, 72, 0, 0, 219, 0, 0, 0, 0, 255,
	0, 255, 255, 1713, 1714, 255, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 3,
	0, 0, 0, 77, 0, 0, 0, 1744, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 0, 0,
	1933, 1933, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 255, 255, 0, 0, 255, 255, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 0, 1715, 781,
	0, 1933, 0, 0, 0, 0, 0, 0, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 1732, 0, 4046,
	4047, 4048, 0, 0, 0, 0, 94, 0, 1199, 1199,
	846, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2323, 0, 104, 4057, 4058, 255, 255, 90,
	101, 0, 0, 0, 0, 0, 1419, 0, 0, 0,
	0, 1199, 0, 4066, 4069, 0, 0, 0, 0, 0,
	0, 255, 255, 0, 0, 0, 0, 180, 97, 1244,
	100, 0, 0, 1436, 1436, 0, 0, 0, 0, 1738,
	1739, 1740, 1741, 0, 0, 0, 0, 0, 0, 1721,
	0, 0, 0, 0, 224, 0, 91, 0, 0, 0,
	0, 0, 847, 0, 3243, 0, 0, 145, 0, 0,
	0, 4109, 0, 0, 0, 0, 0, 0, 0, 4115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4122,
	0, 0, 1025, 1419, 1743, 1745, 0, 0, 0, 226,
	0, 4130, 0, 0, 0, 0, 3293, 3295, 0, 2170,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	1730, 1731, 0, 0, 0, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 0, 218,
	0, 0, 1419, 0, 0, 1199, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1933, 0, 0, 0, 1419, 0,
	1551, 0, 0, 0, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3370, 0, 0, 1199, 3374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1199, 1199,
	1199, 0, 0, 0, 0, 0, 0, 0, 0, 4241,
	180, 97, 4244, 100, 0, 1199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3425, 1199, 0, 1742, 224, 0, 0,
	0, 0, 0, 0, 0, 847, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 0, 1737, 0, 1199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1933,
	0, 0, 1025, 1025, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 0, 0, 3463, 0, 1436,
	1419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 0,
	0, 0, 0, 0, 0, 1877, 0, 1195, 0, 0,
	0, 255, 0, 184, 0, 3476, 0, 0, 0, 0,
	0, 225, 2323, 0, 0, 0, 255, 1877, 255, 706,
	0, 4069, 218, 781, 0, 0, 0, 0, 0, 0,
	781, 219, 0, 0, 0, 0, 1419, 0, 0, 689,
	0, 0, 0, 0, 0, 690, 1199, 0, 0, 0,
	0, 0, 0, 1549, 1199, 1085, 0, 255, 1199, 1025,
	1199, 0, 0, 0, 255, 0, 0, 1199, 0, 1733,
	1729, 0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722,
	1723, 0, 0, 691, 1199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 692, 0, 0, 0, 0, 0,
	0, 257, 257, 257, 0, 0, 0, 0, 0, 0,
	4402, 4402, 4402, 0, 0, 693, 1199, 0, 1199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 712, 0, 0, 0, 0,
	0, 4423, 0, 0, 0, 0, 1199, 0, 0, 0,
	0, 0, 0, 257, 694, 0, 0, 1199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 695, 0, 0,
	0, 0, 0, 0, 0, 1199, 1199, 0, 0, 0,
	0, 0, 0, 4402, 0, 0, 0, 0, 696, 0,
	0, 697, 1199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1199, 0, 0, 0, 721, 1199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 711, 0, 1199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1199, 1199, 1199, 0, 0, 255, 0,
	0, 781, 0, 0, 1199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1061, 106, 0,
	0, 0, 0, 0, 1199, 0, 0, 0, 0, 0,
	708, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4402, 4546, 255, 1933, 0, 0, 255, 0,
	0, 4550, 0, 255, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 1199, 0, 1199, 0, 0,
	0, 0, 0, 0, 255, 0, 255, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 1199, 0, 0, 0, 0, 0, 718, 0, 699,
	2170, 0, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 2170, 0, 0, 0, 0, 0, 0, 1933, 0,
	0, 3736, 0, 255, 0, 0, 255, 719, 0, 700,
	0, 0, 0, 0, 0, 2170, 0, 0, 0, 3751,
	0, 0, 0, 0, 0, 1199, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 1199, 1199, 0, 781,
	255, 0, 255, 0, 255, 720, 255, 0, 255, 0,
	0, 0, 701, 0, 0, 0, 716, 717, 714, 0,
	0, 0, 0, 0, 709, 0, 0, 702, 0, 0,
	1000, 0, 0, 0, 1199, 0, 0, 1199, 0, 0,
	0, 1020, 0, 0, 3798, 0, 255, 2504, 2505, 2506,
	2507, 2500, 2501, 2502, 2503, 1199, 1199, 1419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 703, 710, 0,
	0, 0, 0, 0, 0, 0, 0, 704, 0, 0,
	0, 0, 0, 0, 1182, 0, 0, 0, 0, 0,
	1419, 705, 1933, 0, 0, 0, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 1419, 0, 0, 0, 0,
	722, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 1419, 0, 2480, 2481,
	2482, 2483, 0, 0, 0, 0, 1199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1199, 0,
	0, 2492, 2493, 2494, 2495, 2488, 2489, 2490, 2491, 2496,
	2497, 2498, 2499, 1039, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1039, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1199, 0, 0, 1199, 0, 0, 0, 1199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1199, 1199, 0,
	0, 0, 0, 0, 2476, 2477, 2478, 2479, 2484, 2485,
	2486, 2487, 0, 0, 1199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1195, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 1195, 0, 1419, 0, 3933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	2170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 773,
	0, 0, 0, 257, 0, 257, 257, 2170, 255, 257,
	0, 1281, 0, 0, 0, 0, 4002, 0, 0, 0,
	0, 0, 0, 773, 0, 0, 0, 255, 0, 0,
	255, 0, 0, 0, 255, 0, 255, 0, 0, 0,
	0, 0, 0, 255, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 1281, 257, 257, 0, 1281,
	257, 257, 0, 1281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 1419, 0, 0, 1419, 0, 0, 1281,
	255, 257, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 1281,
	0, 0, 0, 0, 1281, 257, 257, 0, 0, 1199,
	0, 1199, 0, 0, 0, 0, 255, 0, 1281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4097, 0, 0, 0, 706, 0, 0, 0,
	0, 781, 0, 0, 0, 0, 0, 0, 0, 0,
	1419, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	0, 0, 690, 0, 0, 0, 0, 1419, 0, 255,
	0, 1281, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 2170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	691, 257, 0, 0, 0, 106, 0, 0, 0, 0,
	0, 692, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 255, 0, 0, 0,
	0, 0, 712, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4211, 1436, 0, 0, 0, 0,
	0, 694, 0, 0, 0, 0, 0, 106, 0, 106,
	0, 106, 0, 0, 0, 0, 0, 255, 255, 255,
	255, 0, 0, 0, 695, 0, 255, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 696, 0, 0, 697, 0,
	0, 1419, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 1020, 106, 106, 721, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 106, 0, 106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 106, 711, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 708, 0, 0,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1281, 0, 0, 0,
	257, 257, 257, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 1281, 0, 0,
	0, 0, 4345, 0, 0, 0, 699, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 257, 0,
	1000, 0, 0, 0, 719, 0, 700, 0, 4379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1778, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1281, 0, 0, 0, 1783, 0, 0,
	0, 1789, 720, 0, 1281, 0, 0, 0, 0, 701,
	0, 0, 0, 716, 717, 714, 0, 1195, 0, 0,
	0, 709, 0, 0, 702, 0, 0, 0, 1281, 0,
	0, 0, 0, 1195, 1419, 0, 0, 0, 0, 0,
	4439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1279, 0, 0, 0, 0, 0, 0, 1419, 0,
	0, 0, 0, 1877, 703, 710, 0, 0, 0, 0,
	0, 0, 0, 0, 704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 705, 0,
	0, 0, 0, 713, 0, 1337, 0, 0, 0, 1337,
	0, 0, 0, 1279, 0, 0, 0, 722, 255, 0,
	0, 0, 255, 255, 0, 0, 0, 0, 707, 0,
	0, 1875, 0, 1878, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 1279, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 1281, 1281, 257, 0, 0, 0, 1279,
	0, 0, 0, 1281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1419, 1279,
	1419, 0, 0, 0, 1279, 255, 255, 0, 255, 0,
	0, 0, 0, 0, 0, 1877, 0, 0, 1279, 0,
	0, 0, 0, 0, 1419, 0, 0, 0, 257, 255,
	0, 0, 257, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	257, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 1279, 0, 0, 0, 1281, 0, 1281, 0, 1281,
	0, 0, 0, 0, 0, 0, 1419, 255, 0, 0,
	0, 0, 0, 0, 0, 1281, 1281, 1419, 0, 0,
	0, 781, 0, 0, 0, 0, 1281, 257, 0, 255,
	257, 0, 0, 255, 0, 0, 0, 0, 1281, 0,
	1281, 1281, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 1195,
	0, 0, 0, 257, 257, 0, 257, 0, 257, 0,
	257, 0, 257, 1419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 255, 0,
	0, 0, 0, 0, 1419, 0, 0, 0, 0, 0,
	0, 1281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1419, 0, 0, 0, 0, 0, 1020, 0, 1020,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1419, 1337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 773, 0, 0,
	0, 0, 0, 0, 773, 0, 0, 1279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1077, 0,
	0, 0, 0, 0, 0, 0, 0, 1281, 0, 0,
	0, 0, 0, 0, 1419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 1281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 1195,
	1195, 0, 0, 1279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1279, 0, 0, 0, 0, 0,
	0, 0, 0, 1000, 0, 0, 1000, 1000, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1337, 0,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 257, 0, 0, 0, 257, 0,
	257, 0, 0, 0, 0, 0, 0, 257, 257, 0,
	0, 2390, 0, 1281, 1281, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1020, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 1039,
	1039, 0, 0, 0, 0, 1281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 1279, 1279, 0, 0, 257, 0, 0,
	255, 0, 0, 1337, 0, 0, 0, 0, 0, 0,
	0, 0, 1182, 0, 0, 0, 0, 0, 0, 255,
	257, 1281, 0, 0, 0, 0, 0, 0, 1878, 0,
	255, 0, 0, 0, 0, 1281, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 257, 0, 0, 0, 255,
	0, 0, 0, 0, 255, 0, 1039, 0, 255, 0,
	0, 106, 1713, 1714, 0, 1746, 1747, 1748, 1756, 1757,
	1758, 0, 0, 257, 0, 0, 1281, 0, 1195, 0,
	0, 257, 0, 0, 0, 1749, 1744, 0, 0, 0,
	0, 0, 0, 1716, 0, 1279, 0, 1279, 0, 1279,
	0, 1762, 0, 0, 0, 0, 1281, 0, 0, 0,
	0, 0, 0, 0, 0, 1279, 1279, 0, 1281, 0,
	0, 0, 0, 255, 0, 0, 1279, 1715, 0, 257,
	0, 0, 0, 1281, 0, 0, 0, 1735, 1279, 0,
	1279, 1279, 1279, 0, 0, 0, 1732, 0, 257, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 257, 257, 257, 0, 0, 0, 0, 0,
	257, 0, 257, 0, 0, 0, 0, 106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1738, 1739,
	1740, 1741, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1195, 0, 0,
	0, 1337, 0, 0, 1753, 1195, 0, 1763, 0, 0,
	0, 0, 0, 1743, 1745, 0, 0, 0, 1877, 0,
	0, 106, 0, 0, 106, 0, 106, 0, 0, 0,
	1759, 0, 1760, 0, 0, 0, 0, 0, 0, 1730,
	1731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1877, 106, 1877,
	0, 106, 1736, 0, 0, 0, 0, 106, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 1337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 1337, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1877, 1742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1281, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1280, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 1281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2390,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1338, 0,
	1783, 1281, 1338, 1279, 1279, 0, 1280, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 1281, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 257, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1280, 0, 0,
	0, 255, 0, 0, 0, 1337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 1752,
	0, 0, 1280, 0, 1727, 1728, 1734, 1755, 1733, 1729,
	0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723,
	0, 0, 1280, 0, 0, 0, 0, 1280, 3841, 1281,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 257,
	257, 1280, 257, 0, 0, 0, 0, 0, 0, 257,
	0, 1337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 1281, 1279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1281,
	0, 0, 0, 0, 0, 0, 0, 0, 1281, 0,
	0, 0, 0, 1281, 1280, 0, 1877, 1877, 0, 0,
	0, 0, 0, 1182, 0, 0, 1279, 0, 0, 0,
	0, 0, 0, 255, 255, 0, 1281, 0, 0, 1182,
	0, 257, 1281, 0, 1281, 0, 0, 0, 1281, 0,
	0, 0, 0, 0, 0, 257, 1279, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 1281, 257, 1279, 0,
	0, 0, 0, 0, 0, 0, 0, 1281, 0, 0,
	0, 0, 0, 1279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1877,
	0, 0, 0, 0, 0, 0, 0, 0, 1281, 1281,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1877, 0, 255, 1877, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1281, 0,
	257, 1281, 257, 0, 106, 106, 0, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1713, 1714,
	0, 1746, 1747, 1748, 1756, 1757, 1758, 0, 257, 0,
	0, 0, 0, 0, 0, 106, 106, 0, 0, 106,
	0, 1749, 1744, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 1762, 0, 0,
	0, 255, 0, 0, 0, 1281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1281, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1735, 0, 0, 0, 255, 0, 0,
	0, 0, 1732, 0, 0, 0, 0, 0, 0, 1338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1280, 0, 0, 0, 0, 1182, 0, 0, 1020, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 1738, 1739, 1740, 1741, 0, 0,
	0, 0, 0, 0, 1721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 0, 0, 1763, 0, 0, 0, 0, 0, 1743,
	1745, 1338, 1337, 0, 0, 0, 1281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 1760, 0,
	1877, 0, 1877, 0, 0, 1730, 1731, 0, 0, 0,
	0, 0, 0, 0, 0, 1337, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	1337, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1279, 1279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 1280, 1280, 0, 0,
	0, 0, 0, 0, 0, 0, 1338, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1279,
	1281, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 1742, 0, 0, 257, 0, 0, 106, 0, 0,
	0, 0, 0, 257, 1279, 0, 0, 0, 257, 0,
	0, 1737, 257, 0, 0, 1182, 1182, 0, 1281, 1337,
	0, 0, 0, 0, 0, 0, 0, 0, 1279, 0,
	0, 0, 0, 1279, 0, 0, 0, 1754, 1280, 0,
	1280, 0, 1280, 1281, 1281, 1281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1279, 0, 1280, 1280,
	1281, 0, 1279, 0, 1279, 0, 0, 0, 1337, 1280,
	0, 0, 0, 0, 0, 773, 0, 257, 0, 1281,
	0, 1280, 0, 1280, 1280, 1280, 1279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1279, 0, 0,
	0, 0, 0, 1281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1752, 0, 0, 1279, 1279,
	1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725,
	1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 0, 0,
	1279, 0, 0, 0, 3494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 799, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1337, 0,
	0, 1337, 801, 0, 1338, 0, 0, 0, 802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1281, 0, 1281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1713, 1714, 106,
	1746, 1747, 1748, 1756, 1757, 1758, 803, 0, 820, 1281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 1744, 0, 0, 1182, 0, 0, 0, 1716, 0,
	0, 0, 0, 804, 0, 1337, 1762, 0, 805, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1338, 1337, 0, 0, 0, 0, 0, 828, 257,
	0, 0, 1715, 0, 806, 0, 106, 0, 0, 0,
	0, 1281, 1735, 257, 0, 257, 0, 826, 0, 0,
	0, 1732, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1281, 1281, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 807, 0, 0, 808, 0, 0, 1281, 0, 0,
	257, 0, 0, 0, 0, 830, 0, 0, 1281, 257,
	721, 0, 0, 1281, 0, 0, 1338, 0, 0, 0,
	0, 0, 0, 1738, 1739, 1740, 1741, 0, 0, 0,
	0, 0, 0, 1721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1281, 1281,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 1281,
	0, 0, 0, 0, 0, 0, 0, 106, 0, 1753,
	0, 0, 1763, 1182, 0, 0, 1337, 0, 1743, 1745,
	0, 1182, 0, 829, 0, 0, 0, 0, 0, 1281,
	0, 0, 0, 824, 0, 1759, 0, 1760, 0, 0,
	0, 0, 0, 0, 1730, 1731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1280, 1280, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	1281, 0, 1281, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 809, 0, 0, 0, 0, 1281, 0, 1338, 0,
	0, 0, 811, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 812, 0, 0, 0, 0, 1750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1281, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	106, 1281, 1281, 0, 1338, 0, 0, 0, 720, 0,
	1279, 106, 0, 0, 0, 0, 0, 0, 1280, 798,
	0, 821, 0, 0, 0, 0, 0, 0, 0, 0,
	813, 0, 0, 106, 0, 0, 0, 0, 0, 1281,
	1742, 0, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 819, 0, 0, 0, 1279, 1280,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	814, 0, 0, 815, 833, 0, 832, 257, 257, 0,
	816, 0, 0, 1279, 1279, 1279, 1754, 0, 0, 1280,
	0, 0, 0, 0, 817, 0, 0, 0, 0, 825,
	1279, 1280, 0, 0, 0, 834, 0, 831, 0, 0,
	0, 0, 0, 722, 0, 0, 1280, 0, 0, 1337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1752, 0, 0, 0, 0, 1727,
	1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 0, 0, 257, 0, 0,
	0, 0, 1281, 3053, 0, 0, 0, 0, 0, 0,
	0, 0, 1281, 1281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1337, 0, 1337, 0, 0, 0, 0,
	0, 0, 0, 0, 1713, 1714, 0, 1746, 1747, 1748,
	1756, 1757, 1758, 0, 2390, 0, 0, 0, 0, 1337,
	0, 0, 0, 0, 0, 257, 0, 1749, 1744, 0,
	0, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 0, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1735,
	0, 1337, 0, 0, 0, 0, 0, 0, 1732, 0,
	0, 0, 1337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1279, 1279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 1279, 0, 0,
	0, 0, 0, 0, 106, 0, 0, 0, 1337, 0,
	0, 0, 0, 1279, 0, 0, 0, 0, 0, 0,
	1738, 1739, 1740, 1741, 0, 106, 0, 0, 0, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1338, 0, 0, 1279, 1279,
	1279, 0, 0, 0, 0, 0, 0, 0, 0, 1337,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 1763,
	0, 0, 0, 0, 0, 1743, 1745, 0, 1338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1337,
	0, 0, 1759, 1338, 1760, 0, 0, 0, 0, 0,
	0, 1730, 1731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1338, 0, 0, 0, 0, 1751,
	0, 0, 0, 0, 0, 0, 0, 0, 1280, 1280,
	1337, 0, 1279, 0, 1736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 106, 0, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 1337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1750, 0, 0, 0, 0, 0,
	0, 0, 1280, 0, 0, 0, 0, 0, 0, 0,
	1337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1279, 1279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1338, 0, 0, 0, 0, 1742, 0, 1337,
	0, 1280, 1279, 0, 0, 0, 1280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1280,
	0, 0, 0, 0, 0, 1280, 0, 1280, 0, 0,
	0, 1338, 0, 1754, 1713, 1714, 0, 1746, 1747, 1748,
	1756, 1757, 1758, 0, 0, 0, 0, 0, 0, 1280,
	0, 0, 0, 0, 0, 0, 0, 1749, 1744, 0,
	1280, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 0, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1715,
	0, 1280, 1280, 0, 0, 0, 0, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 1732, 0,
	0, 0, 0, 1280, 0, 0, 0, 0, 0, 0,
	0, 1752, 0, 0, 0, 0, 1727, 1728, 1734, 1755,
	1733, 1729, 0, 1726, 1724, 1725, 1717, 1718, 1719, 1720,
	1722, 1723, 0, 0, 0, 0, 0, 0, 0, 0,
	3052, 1338, 1279, 0, 1338, 0, 0, 0, 0, 0,
	0, 0, 1279, 1279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1279,
	1738, 1739, 1740, 1741, 0, 0, 0, 0, 0, 0,
	1721, 1713, 1714, 0, 1746, 1747, 1748, 1756, 1757, 1758,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1749, 1744, 0, 0, 0, 0,
	0, 0, 1716, 0, 0, 0, 1753, 0, 1338, 1763,
	1762, 0, 0, 0, 0, 1743, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 1338, 0, 0, 0, 0,
	0, 0, 1759, 0, 1760, 0, 1715, 0, 0, 0,
	0, 1730, 1731, 0, 0, 0, 1735, 0, 0, 0,
	0, 0, 0, 0, 0, 1732, 0, 0, 0, 1751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1738, 1739, 1740,
	1741, 0, 0, 0, 1750, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1753, 0, 0, 1763, 0, 0, 1338,
	0, 0, 1743, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1742, 0, 1759,
	0, 1760, 0, 0, 0, 0, 0, 0, 1730, 1731,
	0, 0, 0, 0, 0, 0, 0, 1737, 0, 0,
	0, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1736, 0, 1754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1280, 0, 0, 0, 0, 0, 0,
	0, 1752, 0, 0, 0, 0, 1727, 1728, 1734, 1755,
	1733, 1729, 0, 1726, 1724, 1725, 1717, 1718, 1719, 1720,
	1722, 1723, 0, 0, 1742, 0, 0, 0, 0, 0,
	3049, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1280, 0, 0, 1737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1713, 1714, 0, 1746, 1747,
	1748, 1756, 1757, 1758, 0, 0, 1280, 1280, 1280, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 1749, 1744,
	0, 0, 0, 1280, 0, 0, 1716, 0, 0, 0,
	0, 0, 0, 0, 1762, 0, 0, 0, 0, 0,
	0, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1715, 0, 0, 0, 0, 0, 1338, 0, 0, 0,
	1735, 0, 0, 0, 0, 0, 0, 0, 0, 1732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1752, 0,
	0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729, 0,
	1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 0,
	0, 0, 0, 0, 0, 0, 0, 3048, 0, 0,
	1713, 1714, 0, 1746, 1747, 1748, 1756, 1757, 1758, 0,
	0, 1738, 1739, 1740, 1741, 0, 0, 0, 0, 0,
	0, 1721, 0, 1749, 1744, 0, 0, 0, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 1762,
	0, 0, 0, 0, 0, 0, 1338, 0, 1338, 0,
	0, 0, 0, 0, 0, 0, 0, 1753, 0, 0,
	1763, 0, 0, 0, 0, 1715, 1743, 1745, 0, 0,
	0, 0, 1338, 0, 0, 1735, 0, 0, 0, 0,
	0, 0, 0, 1759, 1732, 1760, 0, 0, 0, 0,
	0, 0, 1730, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 0,
	0, 0, 0, 0, 1338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 1739, 1740, 1741,
	0, 0, 0, 0, 0, 0, 1721, 1761, 0, 0,
	0, 0, 0, 1280, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1750, 0, 0, 0, 0,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1338, 1753, 0, 0, 1763, 1280, 0, 0, 0,
	0, 1743, 1745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	1760, 0, 0, 0, 0, 0, 0, 1730, 1731, 0,
	0, 1280, 1280, 1280, 0, 0, 0, 0, 1742, 0,
	0, 0, 1338, 0, 0, 1751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1737, 0,
	1736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1338, 0, 1280, 0, 0, 0, 0,
	1750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1752, 1742, 0, 0, 0, 1727, 1728, 1734,
	1755, 1733, 1729, 1338, 1726, 1724, 1725, 1717, 1718, 1719,
	1720, 1722, 1723, 1737, 1280, 1280, 0, 0, 0, 0,
	0, 3047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1338, 0, 0, 1280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1752, 0, 0,
	0, 0, 1727, 1728, 1734, 1755, 1733, 1729, 0, 1726,
	1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 0, 0,
	0, 0, 0, 0, 0, 0, 2413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1335, 0, 0, 0, 1280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1280, 1280, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 1340, 273, 274, 1341,
	1342, 1343, 1280, 1344, 602, 1345, 1346, 1347, 1348, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 1349, 607, 284, 285, 286, 287,
	288, 289, 1350, 1351, 0, 290, 608, 609, 610, 1352,
	291, 292, 611, 1353, 1282, 1354, 293, 294, 295, 296,
	297, 298, 299, 0, 1355, 301, 302, 303, 300, 304,
	1356, 305, 0, 306, 307, 308, 309, 310, 311, 1357,
	312, 313, 314, 1140, 315, 316, 1358, 1359, 1361, 1360,
	1362, 1363, 1364, 317, 318, 319, 320, 0, 321, 612,
	613, 1365, 325, 322, 323, 1366, 326, 324, 1367, 327,
	328, 329, 1368, 1369, 330, 331, 332, 1370, 333, 334,
	1371, 335, 336, 337, 1372, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 1373, 262, 1374, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 1375, 356, 1376, 1377,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 1378, 368, 620, 1379, 621, 369,
	1380, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	1143, 375, 376, 1381, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 1382, 1142, 384, 625,
	626, 1383, 627, 1384, 386, 387, 1144, 628, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 1385, 398, 400, 399, 1386, 401, 629,
	1147, 402, 403, 1148, 1387, 404, 0, 0, 0, 405,
	406, 409, 1388, 1389, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1390, 264,
	1151, 448, 449, 1391, 630, 450, 631, 452, 453, 1392,
	0, 454, 0, 1393, 1394, 456, 457, 458, 1395, 1396,
	459, 460, 632, 1152, 461, 1153, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 1397, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 1398, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	1399, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	1400, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 1401, 532, 533, 531, 534, 535, 536,
	1402, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 1403, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 1404, 561, 562, 0, 558, 1405, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 1406, 571,
	643, 644, 645, 646, 1407, 580, 1408, 572, 573, 574,
	647, 575, 648, 1409, 576, 577, 578, 579, 0, 581,
	582, 1410, 1411, 583, 584, 585, 587, 588, 586, 589,
	1412, 590, 1413, 0, 591, 592, 593, 649, 650, 651,
	1414, 595, 594, 596, 652, 1415, 1416, 1417, 1418, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1335,
	0, 0, 0, 0, 0, 0, 0, 2578, 0, 0,
	0, 0, 0, 0, 0, 2579, 265, 267, 266, 268,
	269, 270, 271, 272, 1340, 273, 274, 1341, 1342, 1343,
	0, 1344, 602, 1345, 1346, 1347, 1348, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 1349, 607, 284, 285, 286, 287, 288, 289,
	1350, 1351, 0, 290, 608, 609, 610, 1352, 291, 292,
	611, 1353, 1282, 1354, 293, 294, 295, 296, 297, 298,
	299, 0, 1355, 301, 302, 303, 300, 304, 1356, 305,
	0, 306, 307, 308, 309, 310, 311, 1357, 312, 313,
	314, 1140, 315, 316, 1358, 1359, 1361, 1360, 1362, 1363,
	1364, 317, 318, 319, 320, 0, 321, 612, 613, 1365,
	325, 322, 323, 1366, 326, 324, 1367, 327, 328, 329,
	1368, 1369, 330, 331, 332, 1370, 333, 334, 1371, 335,
	336, 337, 1372, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 1373,
	262, 1374, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 1375, 356, 1376, 1377, 1141, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 1378, 368, 620, 1379, 621, 369, 1380, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 1143, 375,
	376, 1381, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 1382, 1142, 384, 625, 626, 1383,
	627, 1384, 386, 387, 1144, 628, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 1385, 398, 400, 399, 1386, 401, 629, 1147, 402,
	403, 1148, 1387, 404, 0, 0, 0, 405, 406, 409,
	1388, 1389, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1390, 264, 1151, 448,
	449, 1391, 630, 450, 631, 452, 453, 1392, 0, 454,
	0, 1393, 1394, 456, 457, 458, 1395, 1396, 459, 460,
	632, 1152, 461, 1153, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 1397, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 1398, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 1399, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 1400, 509,
	510, 511, 1154, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 1401, 532, 533, 531, 534, 535, 536, 1402, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 1403, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 1404, 561, 562, 0, 558, 1405, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 1406, 571, 643, 644,
	645, 646, 1407, 580, 1408, 572, 573, 574, 647, 575,
	648, 1409, 576, 577, 578, 579, 0, 581, 582, 1410,
	1411, 583, 584, 585, 587, 588, 586, 589, 1412, 590,
	1413, 0, 591, 592, 593, 649, 650, 651, 1414, 595,
	594, 596, 652, 1415, 1416, 1417, 1418, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1335, 0, 0, 0, 0,
	3502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3504, 265, 267, 266, 268, 269, 270, 271, 272,
	1340, 273, 274, 1341, 1342, 1343, 0, 1344, 602, 1345,
	1346, 1347, 1348, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 1349, 607,
	284, 285, 286, 287, 288, 289, 1350, 1351, 0, 290,
	608, 609, 610, 1352, 291, 292, 611, 1353, 1282, 1354,
	293, 294, 295, 296, 297, 298, 299, 0, 1355, 301,
	302, 303, 300, 304, 1356, 305, 0, 306, 307, 308,
	309, 310, 311, 1357, 312, 313, 314, 1140, 315, 316,
	1358, 1359, 1361, 1360, 1362, 1363, 1364, 317, 318, 319,
	320, 0, 321, 612, 613, 1365, 325, 322, 323, 1366,
	326, 324, 1367, 327, 328, 329, 1368, 1369, 330, 331,
	332, 1370, 333, 334, 1371, 335, 336, 337, 1372, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 1373, 262, 1374, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	1375, 356, 1376, 1377, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 1378, 368,
	620, 1379, 621, 369, 1380, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 1143, 375, 376, 1381, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	1382, 1142, 384, 625, 626, 1383, 627, 1384, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 1385, 398, 400,
	399, 1386, 401, 629, 1147, 402, 403, 1148, 1387, 404,
	0, 0, 0, 405, 406, 409, 1388, 1389, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1390, 264, 1151, 448, 449, 1391, 630, 450,
	631, 452, 453, 1392, 0, 454, 0, 1393, 1394, 456,
	457, 458, 1395, 1396, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 1397, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 1398, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 1399, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 1400, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 1401, 532, 533,
	531, 534, 535, 536, 1402, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 1403, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 1404, 561, 562,
	0, 558, 1405, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 1406, 571, 643, 644, 645, 646, 1407, 580,
	1408, 572, 573, 574, 647, 575, 648, 1409, 576, 577,
	578, 579, 0, 581, 582, 1410, 1411, 583, 584, 585,
	587, 588, 586, 589, 1412, 590, 1413, 0, 591, 592,
	593, 649, 650, 651, 1414, 595, 594, 596, 652, 1415,
	1416, 1417, 1418, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3869, 265, 267, 266, 268, 269, 270, 271, 272,
	1340, 273, 274, 1341, 1342, 1343, 0, 1344, 602, 1345,
	1346, 1347, 1348, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 1349, 607,
	284, 285, 286, 287, 288, 289, 1350, 1351, 0, 290,
	608, 609, 610, 1352, 291, 292, 611, 1353, 1282, 1354,
	293, 294, 295, 296, 297, 298, 299, 0, 1355, 301,
	302, 303, 300, 304, 1356, 305, 0, 306, 307, 308,
	309, 310, 311, 1357, 312, 313, 314, 1140, 315, 316,
	1358, 1359, 1361, 1360, 1362, 1363, 1364, 317, 318, 319,
	320, 0, 321, 612, 613, 1365, 325, 322, 323, 1366,
	326, 324, 1367, 327, 328, 329, 1368, 1369, 330, 331,
	332, 1370, 333, 334, 1371, 335, 336, 337, 1372, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 1373, 262, 1374, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	1375, 356, 1376, 1377, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 1378, 368,
	620, 1379, 621, 369, 1380, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 1143, 375, 376, 1381, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	1382, 1142, 384, 625, 626, 1383, 627, 1384, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 1385, 398, 400,
	399, 1386, 401, 629, 1147, 402, 403, 1148, 1387, 404,
	0, 0, 0, 405, 406, 409, 1388, 1389, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1390, 264, 1151, 448, 449, 1391, 630, 450,
	631, 452, 453, 1392, 0, 454, 0, 1393, 1394, 456,
	457, 458, 1395, 1396, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 1397, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 1398, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 1399, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 1400, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 1401, 532, 533,
	531, 534, 535, 536, 1402, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 1403, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 1404, 561, 562,
	0, 558, 1405, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 1406, 571, 643, 644, 645, 646, 1407, 580,
	1408, 572, 573, 574, 647, 575, 648, 1409, 576, 577,
	578, 579, 0, 581, 582, 1410, 1411, 583, 584, 585,
	587, 588, 586, 589, 1412, 590, 1413, 0, 591, 592,
	593, 649, 650, 651, 1414, 595, 594, 596, 652, 1415,
	1416, 1417, 1418, 597, 598, 653, 599, 600, 601, 0,
	1335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4052, 265, 267, 266,
	268, 269, 270, 271, 272, 1340, 273, 274, 1341, 1342,
	1343, 0, 1344, 602, 1345, 1346, 1347, 1348, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 1349, 607, 284, 285, 286, 287, 288,
	289, 1350, 1351, 0, 290, 608, 609, 610, 1352, 291,
	292, 611, 1353, 1282, 1354, 293, 294, 295, 296, 297,
	298, 299, 0, 1355, 301, 302, 303, 300, 304, 1356,
	305, 0, 306, 307, 308, 309, 310, 311, 1357, 312,
	313, 314, 1140, 315, 316, 1358, 1359, 1361, 1360, 1362,
	1363, 1364, 317, 318, 319, 320, 0, 321, 612, 613,
	1365, 325, 322, 323, 1366, 326, 324, 1367, 327, 328,
	329, 1368, 1369, 330, 331, 332, 1370, 333, 334, 1371,
	335, 336, 337, 1372, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	1373, 262, 1374, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 1375, 356, 1376, 1377, 1141,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 1378, 368, 620, 1379, 621, 369, 1380,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 1143,
	375, 376, 1381, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 1382, 1142, 384, 625, 626,
	1383, 627, 1384, 386, 387, 1144, 628, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 1385, 398, 400, 399, 1386, 401, 629, 1147,
	402, 403, 1148, 1387, 404, 0, 0, 0, 405, 406,
	409, 1388, 1389, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1390, 264, 1151,
	448, 449, 1391, 630, 450, 631, 452, 453, 1392, 0,
	454, 0, 1393, 1394, 456, 457, 458, 1395, 1396, 459,
	460, 632, 1152, 461, 1153, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 1397, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 1398, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 1399,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 1400,
	509, 510, 511, 1154, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 1401, 532, 533, 531, 534, 535, 536, 1402,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 1403, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 1404, 561, 562, 0, 558, 1405, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 1406, 571, 643,
	644, 645, 646, 1407, 580, 1408, 572, 573, 574, 647,
	575, 648, 1409, 576, 577, 578, 579, 0, 581, 582,
	1410, 1411, 583, 584, 585, 587, 588, 586, 589, 1412,
	590, 1413, 0, 591, 592, 593, 649, 650, 651, 1414,
	595, 594, 596, 652, 1415, 1416, 1417, 1418, 597, 598,
	653, 599, 600, 601, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3941, 265, 267, 266, 268, 269, 270, 271, 272,
	1340, 273, 274, 1341, 1342, 1343, 0, 1344, 602, 1345,
	1346, 1347, 1348, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 1349, 607,
	284, 285, 286, 287, 288, 289, 1350, 1351, 0, 290,
	608, 609, 610, 1352, 291, 292, 611, 1353, 1282, 1354,
	293, 294, 295, 296, 297, 298, 299, 0, 1355, 301,
	302, 303, 300, 304, 1356, 305, 0, 306, 307, 308,
	309, 310, 311, 1357, 312, 313, 314, 1140, 315, 316,
	1358, 1359, 1361, 1360, 1362, 1363, 1364, 317, 318, 319,
	320, 0, 321, 612, 613, 1365, 325, 322, 323, 1366,
	326, 324, 1367, 327, 328, 329, 1368, 1369, 330, 331,
	332, 1370, 333, 334, 1371, 335, 336, 337, 1372, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 1373, 262, 1374, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	1375, 356, 1376, 1377, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 1378, 368,
	620, 1379, 621, 369, 1380, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 1143, 375, 376, 1381, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	1382, 1142, 384, 625, 626, 1383, 627, 1384, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 1385, 398, 400,
	399, 1386, 401, 629, 1147, 402, 403, 1148, 1387, 404,
	0, 0, 0, 405, 406, 409, 1388, 1389, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1390, 264, 1151, 448, 449, 1391, 630, 450,
	631, 452, 453, 1392, 0, 454, 0, 1393, 1394, 456,
	457, 458, 1395, 1396, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 1397, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 1398, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 1399, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 1400, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 1401, 532, 533,
	531, 534, 535, 536, 1402, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 1403, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 1404, 561, 562,
	0, 558, 1405, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 1406, 571, 643, 644, 645, 646, 1407, 580,
	1408, 572, 573, 574, 647, 575, 648, 1409, 576, 577,
	578, 579, 0, 581, 582, 1410, 1411, 583, 584, 585,
	587, 588, 586, 589, 1412, 590, 1413, 0, 591, 592,
	593, 649, 650, 651, 1414, 595, 594, 596, 652, 1415,
	1416, 1417, 1418, 597, 598, 653, 599, 600, 601, 0,
	1335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3799, 265, 267, 266,
	268, 269, 270, 271, 272, 1340, 273, 274, 1341, 1342,
	1343, 0, 1344, 602, 1345, 1346, 1347, 1348, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 1349, 607, 284, 285, 286, 287, 288,
	289, 1350, 1351, 0, 290, 608, 609, 610, 1352, 291,
	292, 611, 1353, 1282, 1354, 293, 294, 295, 296, 297,
	298, 299, 0, 1355, 301, 302, 303, 300, 304, 1356,
	305, 0, 306, 307, 308, 309, 310, 311, 1357, 312,
	313, 314, 1140, 315, 316, 1358, 1359, 1361, 1360, 1362,
	1363, 1364, 317, 318, 319, 320, 0, 321, 612, 613,
	1365, 325, 322, 323, 1366, 326, 324, 1367, 327, 328,
	329, 1368, 1369, 330, 331, 332, 1370, 333, 334, 1371,
	335, 336, 337, 1372, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	1373, 262, 1374, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 1375, 356, 1376, 1377, 1141,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 1378, 368, 620, 1379, 621, 369, 1380,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 1143,
	375, 376, 1381, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 1382, 1142, 384, 625, 626,
	1383, 627, 1384, 386, 387, 1144, 628, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 1385, 398, 400, 399, 1386, 401, 629, 1147,
	402, 403, 1148, 1387, 404, 0, 0, 0, 405, 406,
	409, 1388, 1389, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1390, 264, 1151,
	448, 449, 1391, 630, 450, 631, 452, 453, 1392, 0,
	454, 0, 1393, 1394, 456, 457, 458, 1395, 1396, 459,
	460, 632, 1152, 461, 1153, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 1397, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 1398, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 1399,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 1400,
	509, 510, 511, 1154, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 1401, 532, 533, 531, 534, 535, 536, 1402,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 1403, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 1404, 561, 562, 0, 558, 1405, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 1406, 571, 643,
	644, 645, 646, 1407, 580, 1408, 572, 573, 574, 647,
	575, 648, 1409, 576, 577, 578, 579, 0, 581, 582,
	1410, 1411, 583, 584, 585, 587, 588, 586, 589, 1412,
	590, 1413, 0, 591, 592, 593, 649, 650, 651, 1414,
	595, 594, 596, 652, 1415, 1416, 1417, 1418, 597, 598,
	653, 599, 600, 601, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3520, 265, 267, 266, 268, 269, 270, 271, 272,
	1340, 273, 274, 1341, 1342, 1343, 0, 1344, 602, 1345,
	1346, 1347, 1348, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 1349, 607,
	284, 285, 286, 287, 288, 289, 1350, 1351, 0, 290,
	608, 609, 610, 1352, 291, 292, 611, 1353, 1282, 1354,
	293, 294, 295, 296, 297, 298, 299, 0, 1355, 301,
	302, 303, 300, 304, 1356, 305, 0, 306, 307, 308,
	309, 310, 311, 1357, 312, 313, 314, 1140, 315, 316,
	1358, 1359, 1361, 1360, 1362, 1363, 1364, 317, 318, 319,
	320, 0, 321, 612, 613, 1365, 325, 322, 323, 1366,
	326, 324, 1367, 327, 328, 329, 1368, 1369, 330, 331,
	332, 1370, 333, 334, 1371, 335, 336, 337, 1372, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 1373, 262, 1374, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	1375, 356, 1376, 1377, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 1378, 368,
	620, 1379, 621, 369, 1380, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 1143, 375, 376, 1381, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	1382, 1142, 384, 625, 626, 1383, 627, 1384, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 1385, 398, 400,
	399, 1386, 401, 629, 1147, 402, 403, 1148, 1387, 404,
	0, 0, 0, 405, 406, 409, 1388, 1389, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1390, 264, 1151, 448, 449, 1391, 630, 450,
	631, 452, 453, 1392, 0, 454, 0, 1393, 1394, 456,
	457, 458, 1395, 1396, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 1397, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 1398, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 1399, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 1400, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 1401, 532, 533,
	531, 534, 535, 536, 1402, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 1403, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 1404, 561, 562,
	0, 558, 1405, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 1406, 571, 643, 644, 645, 646, 1407, 580,
	1408, 572, 573, 574, 647, 575, 648, 1409, 576, 577,
	578, 579, 0, 581, 582, 1410, 1411, 583, 584, 585,
	587, 588, 586, 589, 1412, 590, 1413, 0, 591, 592,
	593, 649, 650, 651, 1414, 595, 594, 596, 652, 1415,
	1416, 1417, 1418, 597, 598, 653, 599, 600, 601, 0,
	1335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3355, 265, 267, 266,
	268, 269, 270, 271, 272, 1340, 273, 274, 1341, 1342,
	1343, 0, 1344, 602, 1345, 1346, 1347, 1348, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 1349, 607, 284, 285, 286, 287, 288,
	289, 1350, 1351, 0, 290, 608, 609, 610, 1352, 291,
	292, 611, 1353, 1282, 1354, 293, 294, 295, 296, 297,
	298, 299, 0, 1355, 301, 302, 303, 300, 304, 1356,
	305, 0, 306, 307, 308, 309, 310, 311, 1357, 312,
	313, 314, 1140, 315, 316, 1358, 1359, 1361, 1360, 1362,
	1363, 1364, 317, 318, 319, 320, 0, 321, 612, 613,
	1365, 325, 322, 323, 1366, 326, 324, 1367, 327, 328,
	329, 1368, 1369, 330, 331, 332, 1370, 333, 334, 1371,
	335, 336, 337, 1372, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	1373, 262, 1374, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 1375, 356, 1376, 1377, 1141,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 1378, 368, 620, 1379, 621, 369, 1380,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 1143,
	375, 376, 1381, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 1382, 1142, 384, 625, 626,
	1383, 627, 1384, 386, 387, 1144, 628, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 1385, 398, 400, 399, 1386, 401, 629, 1147,
	402, 403, 1148, 1387, 404, 0, 0, 0, 405, 406,
	409, 1388, 1389, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1390, 264, 1151,
	448, 449, 1391, 630, 450, 631, 452, 453, 1392, 0,
	454, 0, 1393, 1394, 456, 457, 458, 1395, 1396, 459,
	460, 632, 1152, 461, 1153, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 1397, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 1398, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 1399,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 1400,
	509, 510, 511, 1154, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 1401, 532, 533, 531, 534, 535, 536, 1402,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 1403, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 1404, 561, 562, 0, 558, 1405, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 1406, 571, 643,
	644, 645, 646, 1407, 580, 1408, 572, 573, 574, 647,
	575, 648, 1409, 576, 577, 578, 579, 0, 581, 582,
	1410, 1411, 583, 584, 585, 587, 588, 586, 589, 1412,
	590, 1413, 0, 591, 592, 593, 649, 650, 651, 1414,
	595, 594, 596, 652, 1415, 1416, 1417, 1418, 597, 598,
	653, 599, 600, 601, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2436, 265, 267, 266, 268, 269, 270, 271, 272,
	1340, 273, 274, 1341, 1342, 1343, 0, 1344, 602, 1345,
	1346, 1347, 1348, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 1349, 607,
	284, 285, 286, 287, 288, 289, 1350, 1351, 0, 290,
	608, 609, 610, 1352, 291, 292, 611, 1353, 1282, 1354,
	293, 294, 295, 296, 297, 298, 299, 0, 1355, 301,
	302, 303, 300, 304, 1356, 305, 0, 306, 307, 308,
	309, 310, 311, 1357, 312, 313, 314, 1140, 315, 316,
	1358, 1359, 1361, 1360, 1362, 1363, 1364, 317, 318, 319,
	320, 0, 321, 612, 613, 1365, 325, 322, 323, 1366,
	326, 324, 1367, 327, 328, 329, 1368, 1369, 330, 331,
	332, 1370, 333, 334, 1371, 335, 336, 337, 1372, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 1373, 262, 1374, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	1375, 356, 1376, 1377, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 1378, 368,
	620, 1379, 621, 369, 1380, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 1143, 375, 376, 1381, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	1382, 1142, 384, 625, 626, 1383, 627, 1384, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 1385, 398, 400,
	399, 1386, 401, 629, 1147, 402, 403, 1148, 1387, 404,
	0, 0, 0, 405, 406, 409, 1388, 1389, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1390, 264, 1151, 448, 449, 1391, 630, 450,
	631, 452, 453, 1392, 0, 454, 0, 1393, 1394, 456,
	457, 458, 1395, 1396, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 1397, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 1398, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 1399, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 1400, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 1401, 532, 533,
	531, 534, 535, 536, 1402, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 1403, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 1404, 561, 562,
	0, 558, 1405, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 1406, 571, 643, 644, 645, 646, 1407, 580,
	1408, 572, 573, 574, 647, 575, 648, 1409, 576, 577,
	578, 579, 0, 581, 582, 1410, 1411, 583, 584, 585,
	587, 588, 586, 589, 1412, 590, 1413, 0, 591, 592,
	593, 649, 650, 651, 1414, 595, 594, 596, 652, 1415,
	1416, 1417, 1418, 597, 598, 653, 599, 600, 601, 1430,
	0, 1335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2132, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 1340, 273, 274, 1341,
	1342, 1343, 0, 1344, 602, 1345, 1346, 1347, 1348, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 1349, 607, 284, 285, 286, 287,
	288, 289, 1350, 1351, 0, 290, 608, 609, 610, 1352,
	291, 292, 611, 1353, 1282, 1354, 293, 294, 295, 296,
	297, 298, 299, 0, 1355, 301, 302, 303, 300, 304,
	1356, 305, 0, 306, 307, 308, 309, 310, 311, 1357,
	312, 313, 314, 1140, 315, 316, 1358, 1359, 1361, 1360,
	1362, 1363, 1364, 317, 318, 319, 320, 0, 321, 612,
	613, 1365, 325, 322, 323, 1366, 326, 324, 1367, 327,
	328, 329, 1368, 1369, 330, 331, 332, 1370, 333, 334,
	1371, 335, 336, 337, 1372, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 1373, 262, 1374, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 1375, 356, 1376, 1377,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 1378, 368, 620, 1379, 621, 369,
	1380, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	1143, 375, 376, 1381, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 1382, 1142, 384, 625,
	626, 1383, 627, 1384, 386, 387, 1144, 628, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 1385, 398, 400, 399, 1386, 401, 629,
	1147, 402, 403, 1148, 1387, 404, 0, 0, 0, 405,
	406, 409, 1388, 1389, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1390, 264,
	1151, 448, 449, 1391, 630, 450, 631, 452, 453, 1392,
	0, 454, 0, 1393, 1394, 456, 457, 458, 1395, 1396,
	459, 460, 632, 1152, 461, 1153, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 1397, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 1398, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	1399, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	1400, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 1401, 532, 533, 531, 534, 535, 536,
	1402, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 1403, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 1404, 561, 562, 0, 558, 1405, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 1406, 571,
	643, 644, 645, 646, 1407, 580, 1408, 572, 573, 574,
	647, 575, 648, 1409, 576, 577, 578, 579, 0, 581,
	582, 1410, 1411, 583, 584, 585, 587, 588, 586, 589,
	1412, 590, 1413, 0, 591, 592, 593, 649, 650, 651,
	1414, 595, 594, 596, 652, 1415, 1416, 1417, 1418, 597,
	598, 653, 599, 600, 601, 1332, 0, 1335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 1340, 273, 274, 1341, 1342, 1343, 0, 1344,
	602, 1345, 1346, 1347, 1348, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	1349, 607, 284, 285, 286, 287, 288, 289, 1350, 1351,
	0, 290, 608, 609, 610, 1352, 291, 292, 611, 1353,
	1282, 1354, 293, 294, 295, 296, 297, 298, 299, 0,
	1355, 301, 302, 303, 300, 304, 1356, 305, 0, 306,
	307, 308, 309, 310, 311, 1357, 312, 313, 314, 1140,
	315, 316, 1358, 1359, 1361, 1360, 1362, 1363, 1364, 317,
	318, 319, 320, 0, 321, 612, 613, 1365, 325, 322,
	323, 1366, 326, 324, 1367, 327, 328, 329, 1368, 1369,
	330, 331, 332, 1370, 333, 334, 1371, 335, 336, 337,
	1372, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 1373, 262, 1374,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 1375, 356, 1376, 1377, 1141, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	1378, 368, 620, 1379, 621, 369, 1380, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 1143, 375, 376, 1381,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 1382, 1142, 384, 625, 626, 1383, 627, 1384,
	386, 387, 1144, 628, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 1385,
	398, 400, 399, 1386, 401, 629, 1147, 402, 403, 1148,
	1387, 404, 0, 0, 0, 405, 406, 409, 1388, 1389,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 1390, 264, 1151, 448, 449, 1391,
	630, 450, 631, 452, 453, 1392, 0, 454, 0, 1393,
	1394, 456, 457, 458, 1395, 1396, 459, 460, 632, 1152,
	461, 1153, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 1397, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	1398, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 1399, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 1400, 509, 510, 511,
	1154, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 1401,
	532, 533, 531, 534, 535, 536, 1402, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 1403, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 1404,
	561, 562, 0, 558, 1405, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 1406, 571, 643, 644, 645, 646,
	1407, 580, 1408, 572, 573, 574, 647, 575, 648, 1409,
	576, 577, 578, 579, 0, 581, 582, 1410, 1411, 583,
	584, 585, 587, 588, 586, 589, 1412, 590, 1413, 0,
	591, 592, 593, 649, 650, 651, 1414, 595, 594, 596,
	652, 1415, 1416, 1417, 1418, 597, 598, 653, 599, 600,
	601, 1335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 1340, 273, 274, 1341,
	1342, 1343, 0, 1344, 602, 1345, 1346, 1347, 1348, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 1349, 607, 284, 285, 286, 287,
	288, 289, 1350, 1351, 0, 290, 608, 609, 610, 1352,
	291, 292, 611, 1353, 1282, 1354, 293, 294, 295, 296,
	297, 298, 299, 0, 1355, 301, 302, 303, 300, 304,
	1356, 305, 0, 306, 307, 308, 309, 310, 311, 1357,
	312, 313, 314, 1140, 315, 316, 1358, 1359, 1361, 1360,
	1362, 1363, 1364, 317, 318, 319, 320, 0, 321, 612,
	613, 1365, 325, 322, 323, 1366, 326, 324, 1367, 327,
	328, 329, 1368, 1369, 330, 331, 332, 1370, 333, 334,
	1371, 335, 336, 337, 1372, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 1373, 262, 1374, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 1375, 356, 1376, 1377,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 1378, 368, 620, 1379, 621, 369,
	1380, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	1143, 375, 376, 1381, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 1382, 1142, 384, 625,
	626, 1383, 627, 1384, 386, 387, 1144, 628, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 1385, 398, 400, 399, 1386, 401, 629,
	1147, 402, 403, 1148, 1387, 404, 0, 0, 0, 405,
	406, 409, 1388, 1389, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1390, 264,
	1151, 448, 449, 1391, 630, 450, 631, 452, 453, 1392,
	0, 454, 0, 1393, 1394, 456, 457, 458, 1395, 1396,
	459, 460, 632, 1152, 461, 1153, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 1397, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 1398, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	1399, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	1400, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 1401, 532, 533, 531, 534, 535, 536,
	1402, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 1403, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 1404, 561, 562, 0, 558, 1405, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 1406, 571,
	643, 644, 645, 646, 1407, 580, 1408, 572, 573, 574,
	647, 575, 648, 1409, 576, 577, 578, 579, 0, 581,
	582, 1410, 1411, 583, 584, 585, 587, 588, 586, 589,
	1412, 590, 1413, 0, 591, 592, 593, 649, 650, 651,
	1414, 595, 594, 596, 652, 1415, 1416, 1417, 1418, 597,
	598, 653, 599, 600, 601, 2411, 0, 1075, 1047, 1048,
	1049, 1045, 1046, 1058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 2408, 273, 274, 0, 0, 0, 0, 0,
	1099, 1063, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 1112, 0, 282, 1119, 283, 1118,
	0, 1129, 284, 285, 286, 287, 288, 289, 1065, 1098,
	1032, 290, 1159, 1160, 610, 0, 291, 292, 1105, 0,
	1086, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317,
	318, 319, 320, 1122, 321, 1116, 1115, 1036, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 2409, 0,
	330, 1107, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1042, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1130, 1131, 351, 1054, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1114, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 1127,
	1128, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1137, 0, 1064, 369, 0, 370, 371, 372,
	373, 374, 1100, 1101, 1104, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1142, 384, 1109, 1110, 0, 1070, 0,
	386, 387, 1144, 1102, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1138, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 1093, 1092,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 1033, 264, 1151, 448, 449, 1055,
	1103, 450, 1117, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 1132, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 1133, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1113, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 1043, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1096, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	1111, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 1158, 553, 554, 555, 556, 1134, 559, 560, 0,
	561, 562, 1031, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 1123, 1124, 1125, 1126,
	0, 580, 0, 572, 573, 574, 1135, 575, 1136, 1053,
	576, 577, 578, 579, 0, 581, 582, 0, 1037, 583,
	584, 585, 587, 588, 586, 589, 1097, 590, 0, 0,
	591, 592, 593, 649, 1120, 1157, 2407, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 1034, 0, 0, 0, 0, 0, 0, 0, 1030,
	0, 0, 0, 0, 0, 0, 1028, 1029, 2410, 0,
	0, 0, 0, 0, 0, 1059, 2406, 0, 1021, 1057,
	1075, 1047, 1048, 1049, 1045, 1046, 1058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1099, 1063, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 1112, 0, 282,
	1119, 283, 1118, 0, 1129, 284, 285, 286, 287, 288,
	289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291,
	292, 1105, 0, 1086, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091,
	1090, 1094, 317, 318, 319, 320, 1122, 321, 1116, 1115,
	1036, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1107, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1042, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1130, 1131, 351,
	1054, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1114, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 1127, 1128, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1137, 0, 1064, 369, 0,
	370, 371, 372, 373, 374, 1100, 1101, 1104, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1142, 384, 1109, 1110,
	0, 1070, 0, 386, 387, 1144, 1102, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1138, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 1093, 1092, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1033, 264, 1151,
	448, 449, 1055, 1103, 450, 1117, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 1132, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 1133, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1113, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 1043, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 224, 532, 533, 531, 534, 535, 536, 1096,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 1111, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 1158, 553, 554, 555, 556, 1134,
	559, 560, 0, 561, 562, 1031, 558, 226, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 1123,
	1124, 1125, 1126, 0, 580, 0, 572, 573, 574, 1135,
	575, 1136, 1053, 576, 577, 578, 579, 0, 581, 582,
	0, 1037, 583, 584, 585, 587, 588, 586, 589, 1097,
	590, 0, 0, 591, 592, 593, 1547, 1120, 1157, 0,
	595, 594, 596, 652, 0, 0, 0, 218, 597, 598,
	653, 599, 600, 601, 1034, 0, 219, 0, 0, 0,
	0, 0, 1030, 0, 0, 0, 0, 0, 0, 1028,
	1029, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 1788, 1786,
	0, 0, 1057, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1099, 1063, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 1112, 0,
	282, 1119, 283, 1118, 0, 1129, 284, 285, 286, 287,
	288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0,
	291, 292, 1105, 0, 1086, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095,
	1091, 1090, 1094, 317, 318, 319, 320, 1122, 321, 1116,
	1115, 1036, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1107, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1042, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1130, 1131,
	351, 1054, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1114, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 1127, 1128, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1137, 0, 1064, 369,
	0, 370, 371, 372, 373, 374, 1100, 1101, 1104, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1142, 384, 1109,
	1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1138,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 1093, 1092, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1033, 264,
	1151, 448, 449, 1055, 1103, 450, 1117, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 1132, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 1133,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1113, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 1043,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 224, 532, 533, 531, 534, 535, 536,
	1096, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 1111, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 1158, 553, 554, 555, 556,
	1134, 559, 560, 0, 561, 562, 1031, 558, 226, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	1123, 1124, 1125, 1126, 0, 580, 0, 572, 573, 574,
	1135, 575, 1136, 1053, 576, 577, 578, 579, 0, 581,
	582, 0, 1037, 583, 584, 585, 587, 588, 586, 589,
	1097, 590, 0, 0, 591, 592, 593, 1547, 1120, 1157,
	0, 595, 594, 596, 652, 0, 0, 0, 218, 597,
	598, 653, 599, 600, 601, 1034, 0, 219, 0, 0,
	0, 0, 0, 1030, 0, 0, 0, 0, 0, 0,
	1028, 1029, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 1788,
	3005, 0, 0, 1057, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1099, 1063, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 1112,
	0, 282, 1119, 283, 1118, 0, 1129, 284, 285, 286,
	287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610,
	0, 291, 292, 1105, 0, 1086, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 1089, 1087, 1088,
	1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122, 321,
	1116, 1115, 1036, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1107, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1042, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1130,
	1131, 351, 1054, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1114, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 1127, 1128, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1137, 0, 1064,
	369, 0, 370, 371, 372, 373, 374, 1100, 1101, 1104,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1142, 384,
	1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1138, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 1093, 1092, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 1033,
	264, 1151, 448, 449, 1055, 1103, 450, 1117, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 1132, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	1133, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1113, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	1043, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 224, 532, 533, 531, 534, 535,
	536, 1096, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 1111, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 1158, 553, 554, 555,
	556, 1134, 559, 560, 0, 561, 562, 1031, 558, 226,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 1123, 1124, 1125, 1126, 0, 580, 0, 572, 573,
	574, 1135, 575, 1136, 1053, 576, 577, 578, 579, 0,
	581, 582, 0, 1037, 583, 584, 585, 587, 588, 586,
	589, 1097, 590, 0, 0, 591, 592, 593, 1547, 1120,
	1157, 0, 595, 594, 596, 652, 0, 0, 0, 218,
	597, 598, 653, 599, 600, 601, 1034, 0, 219, 0,
	0, 0, 0, 0, 1030, 0, 0, 0, 0, 0,
	0, 1028, 1029, 1075, 1047, 1048, 1049, 1045, 1046, 1058,
	1788, 1786, 0, 0, 1057, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1099, 1063, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	1112, 0, 282, 1119, 283, 1118, 2539, 1129, 284, 285,
	286, 287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122,
	321, 1116, 1115, 1036, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1107, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1042,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 1054, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1114, 0, 0, 0, 355, 0, 356,
	0, 2544, 1141, 357, 358, 1127, 1128, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	1064, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 2540,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1113, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 1043, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 1111, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 1158, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 1031, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 1123, 1124, 1125, 1126, 0, 580, 2541, 572,
	573, 574, 1135, 575, 1136, 1053, 576, 577, 578, 579,
	0, 581, 582, 0, 1037, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	1120, 1157, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1034, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 1028, 1029, 0, 0, 0, 0, 0, 0,
	0, 1059, 0, 0, 2456, 1057, 1075, 1047, 1048, 1049,
	1045, 1046, 1058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1099,
	1063, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 1112, 0, 282, 1119, 283, 1118, 0,
	1129, 284, 285, 286, 287, 288, 289, 1065, 1098, 1032,
	290, 1159, 1160, 610, 0, 291, 292, 1105, 0, 1086,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318,
	319, 320, 1122, 321, 1116, 1115, 1036, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1107, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1042, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1130, 1131, 351, 1054, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1114, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 1127, 1128,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1137, 0, 1064, 369, 0, 370, 371, 372, 373,
	374, 1100, 1101, 1104, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1142, 384, 1109, 1110, 0, 1070, 0, 386,
	387, 1144, 1102, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1138, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 1093, 1092, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103,
	450, 1117, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 1132, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 1133, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1113, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 1043, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1096, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 1111,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	1158, 553, 554, 555, 556, 1134, 559, 560, 0, 561,
	562, 1031, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 1123, 1124, 1125, 1126, 0,
	580, 0, 572, 573, 574, 1135, 575, 1136, 1053, 576,
	577, 578, 579, 0, 581, 582, 0, 1037, 583, 584,
	585, 587, 588, 586, 589, 1097, 590, 0, 0, 591,
	592, 593, 649, 1120, 1157, 0, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	1034, 0, 0, 0, 0, 0, 0, 0, 1030, 0,
	0, 0, 0, 0, 0, 1028, 1029, 0, 0, 0,
	0, 0, 0, 0, 1059, 2454, 0, 2453, 1057, 1075,
	1047, 1048, 1049, 1045, 1046, 1058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 1063, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 1112, 0, 282, 1119,
	283, 1118, 0, 1129, 284, 285, 286, 287, 288, 289,
	1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 1122, 321, 1116, 1115, 1036,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1107, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1042, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 1054,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1114,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 1127, 1128, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 1064, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 1109, 1110, 0,
	1070, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1033, 264, 1151, 448,
	449, 1055, 1103, 450, 1117, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1113, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 1043, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 1111, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 1158, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 1031, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 1123, 1124,
	1125, 1126, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 1053, 576, 577, 578, 579, 0, 581, 582, 0,
	1037, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 1120, 1157, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 1034, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 0, 0, 0, 0, 1028, 1029,
	0, 0, 0, 0, 0, 0, 0, 1059, 2451, 0,
	2450, 1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1099, 1063, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 1112,
	0, 282, 1119, 283, 1118, 0, 1129, 284, 285, 286,
	287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610,
	0, 291, 292, 1105, 0, 1086, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 1089, 1087, 1088,
	1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122, 321,
	1116, 1115, 1036, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1107, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1042, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1130,
	1131, 351, 1054, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1114, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 1127, 1128, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1137, 0, 1064,
	369, 0, 370, 371, 372, 373, 374, 1100, 1101, 1104,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1142, 384,
	1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1138, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 1093, 1092, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 1033,
	264, 1151, 448, 449, 1055, 1103, 450, 1117, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 1132, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	1133, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1113, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	1043, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1096, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 1111, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 1158, 553, 554, 555,
	556, 1134, 559, 560, 0, 561, 562, 1031, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 1123, 1124, 1125, 1126, 0, 580, 0, 572, 573,
	574, 1135, 575, 1136, 1053, 576, 577, 578, 579, 0,
	581, 582, 0, 1037, 583, 584, 585, 587, 588, 586,
	589, 1097, 590, 0, 0, 591, 592, 593, 649, 1120,
	1157, 0, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 1034, 0, 0, 0,
	0, 0, 0, 0, 1030, 0, 0, 0, 0, 0,
	0, 1028, 1029, 0, 0, 0, 0, 0, 0, 0,
	1059, 2448, 0, 2447, 1057, 1075, 1047, 1048, 1049, 1045,
	1046, 1058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1099, 1063,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 1112, 0, 282, 1119, 283, 1118, 0, 1129,
	284, 285, 286, 287, 288, 289, 1065, 1098, 1032, 290,
	1159, 1160, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 1122, 321, 1116, 1115, 1036, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1107,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1042, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 1054, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1114, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 1127, 1128, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 1064, 369, 0, 370, 371, 372, 373, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 1109, 1110, 0, 1070, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103, 450,
	1117, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1113,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 1043, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 1111, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 1158,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	1031, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 1123, 1124, 1125, 1126, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 1053, 576, 577,
	578, 579, 0, 581, 582, 0, 1037, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 649, 1120, 1157, 0, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 1034,
	0, 0, 0, 0, 0, 0, 0, 1030, 0, 0,
	0, 0, 0, 0, 1028, 1029, 0, 0, 0, 0,
	0, 0, 0, 1059, 2445, 0, 1638, 1057, 1075, 1047,
	1048, 1049, 1045, 1046, 1058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1099, 1063, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 1112, 0, 282, 1119, 283,
	1118, 0, 1129, 284, 285, 286, 287, 288, 289, 1065,
	1098, 1032, 290, 1159, 1160, 610, 0, 291, 292, 1105,
	0, 1086, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094,
	317, 318, 319, 320, 1122, 321, 1116, 1115, 1036, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1107, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1042, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1130, 1131, 351, 1054, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1114, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	1127, 1128, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1137, 0, 1064, 369, 0, 370, 371,
	372, 373, 374, 1100, 1101, 1104, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1142, 384, 1109, 1110, 0, 1070,
	0, 386, 387, 1144, 1102, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1138, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 1093,
	1092, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 1033, 264, 1151, 448, 449,
	1055, 1103, 450, 1117, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 1132, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 1133, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1113, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 1043, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1096, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 1111, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 1158, 553, 554, 555, 556, 1134, 559, 560,
	0, 561, 562, 1031, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 1123, 1124, 1125,
	1126, 0, 580, 0, 572, 573, 574, 1135, 575, 1136,
	1053, 576, 577, 578, 579, 0, 581, 582, 0, 1037,
	583, 584, 585, 587, 588, 586, 589, 1097, 590, 0,
	0, 591, 592, 593, 649, 1120, 1157, 0, 595, 594,
	596, 652, 1637, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 1034, 0, 0, 0, 0, 0, 0, 0,
	1030, 0, 0, 0, 0, 0, 0, 1028, 1029, 0,
	0, 0, 0, 0, 0, 0, 1059, 0, 0, 1024,
	1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1099, 1063, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 1112, 0,
	282, 1119, 283, 1118, 0, 1129, 284, 285, 286, 287,
	288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0,
	291, 292, 1105, 0, 1086, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095,
	1091, 1090, 1094, 317, 318, 319, 320, 1122, 321, 1116,
	1115, 1036, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1107, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1042, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1130, 1131,
	351, 1054, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1114, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 1127, 1128, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1137, 0, 1064, 369,
	0, 370, 371, 372, 373, 374, 1100, 1101, 1104, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1142, 384, 1109,
	1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1138,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 1093, 1092, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1033, 264,
	1151, 448, 449, 1055, 1103, 450, 1117, 452, 453, 0,
	0, 454, 0, 1038, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 1132, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 1133,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1113, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 1043,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1096, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 1111, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 1158, 553, 554, 555, 556,
	1134, 559, 560, 0, 561, 562, 1031, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	1123, 1124, 1125, 1126, 0, 580, 0, 572, 573, 574,
	1135, 575, 1136, 1053, 576, 577, 578, 579, 0, 581,
	582, 0, 1037, 583, 584, 585, 587, 588, 586, 589,
	1097, 590, 0, 0, 591, 592, 593, 649, 1120, 1157,
	0, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 1034, 0, 0, 0, 0,
	0, 0, 0, 1030, 0, 0, 0, 0, 0, 0,
	1028, 1029, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 1059,
	0, 0, 0, 1057, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1099, 1063, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 1112,
	0, 282, 1119, 283, 1118, 0, 1129, 284, 285, 286,
	287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610,
	0, 291, 292, 1105, 0, 1086, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 4357, 311,
	0, 312, 313, 314, 1140, 315, 316, 1089, 1087, 1088,
	1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122, 321,
	1116, 1115, 1036, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1107, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1042, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1130,
	1131, 351, 1054, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1114, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 1127, 1128, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1137, 0, 1064,
	369, 0, 370, 371, 372, 373, 374, 1100, 1101, 1104,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1142, 384,
	1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1138, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 1093, 1092, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 1033,
	264, 1151, 448, 449, 1055, 1103, 450, 1117, 452, 453,
	0, 0, 454, 0, 1038, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 1132, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	1133, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1113, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	1043, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1096, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 1111, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 1158, 553, 554, 555,
	556, 1134, 559, 560, 0, 561, 562, 1031, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 1123, 1124, 1125, 1126, 0, 580, 0, 572, 573,
	574, 1135, 575, 1136, 1053, 576, 577, 578, 579, 0,
	581, 582, 0, 1037, 583, 584, 585, 587, 588, 586,
	589, 1097, 590, 0, 0, 591, 592, 593, 649, 1120,
	1157, 0, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 1034, 0, 0, 0,
	0, 0, 0, 0, 1030, 0, 0, 0, 0, 0,
	0, 1028, 1029, 1075, 1047, 1048, 1049, 1045, 1046, 1058,
	1059, 0, 0, 0, 1057, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1099, 1063, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	1112, 0, 282, 1119, 283, 1118, 0, 1129, 284, 285,
	286, 287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122,
	321, 1116, 1115, 1036, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1107, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1042,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 1054, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1114, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 1127, 1128, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	1064, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 2325, 381, 382, 383, 385, 0, 1142,
	384, 1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 2324, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1113, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 1043, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 1111, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 1158, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 1031, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 1123, 1124, 1125, 1126, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 1053, 576, 577, 578, 579,
	0, 581, 582, 0, 1037, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	1120, 1157, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1034, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 1028, 1029, 1075, 1047, 1048, 1049, 1045, 1046,
	1058, 1059, 0, 0, 0, 1057, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1099, 1063, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 1112, 0, 282, 1119, 283, 1118, 0, 1129, 284,
	285, 286, 287, 288, 289, 1065, 1098, 1032, 290, 1159,
	1160, 610, 0, 291, 292, 1105, 0, 1086, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 1089,
	1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320,
	1122, 321, 1116, 1115, 1036, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1107, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1042, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1130, 1131, 351, 1054, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1114, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 1127, 1128, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1137,
	0, 1064, 369, 0, 370, 371, 372, 373, 374, 1100,
	1101, 1104, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1142, 384, 1109, 1110, 0, 1070, 0, 386, 387, 1144,
	1102, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1138, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 1093, 1092, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117,
	452, 453, 0, 0, 454, 0, 1038, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 1132,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 1133, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1113, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 1043, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1096, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 1111, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 1158, 553,
	554, 555, 556, 1134, 559, 560, 0, 561, 562, 1031,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 1123, 1124, 1125, 1126, 0, 580, 0,
	572, 573, 574, 1135, 575, 1136, 1053, 576, 577, 578,
	579, 0, 581, 582, 0, 1037, 583, 584, 585, 587,
	588, 586, 589, 1097, 590, 0, 0, 591, 592, 593,
	649, 1120, 1157, 0, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 1034, 0,
	0, 0, 0, 0, 0, 0, 1030, 0, 0, 0,
	0, 0, 0, 1028, 1029, 1075, 1047, 1048, 1049, 1045,
	1046, 1058, 1059, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1099, 1063,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 1112, 0, 282, 1119, 283, 1118, 0, 1129,
	284, 285, 286, 287, 288, 289, 1065, 1098, 1032, 290,
	1159, 1160, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 4125, 311, 0, 312, 313, 314, 1140, 315, 316,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 1122, 321, 1116, 1115, 1036, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1107,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1042, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 1054, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1114, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 1127, 1128, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 1064, 369, 0, 370, 371, 372, 373, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 1109, 1110, 0, 1070, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103, 450,
	1117, 452, 453, 0, 0, 454, 0, 1038, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1113,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 1043, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 1111, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 1158,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	1031, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 1123, 1124, 1125, 1126, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 1053, 576, 577,
	578, 579, 0, 581, 582, 0, 1037, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 649, 1120, 1157, 0, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 1034,
	0, 0, 0, 0, 0, 0, 0, 1030, 0, 0,
	0, 0, 0, 0, 1028, 1029, 1075, 1047, 1048, 1049,
	1045, 1046, 1058, 1059, 0, 0, 0, 1057, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1099,
	1063, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 1112, 0, 282, 1119, 283, 1118, 0,
	1129, 284, 285, 286, 287, 288, 289, 1065, 1098, 1032,
	290, 1159, 1160, 610, 0, 291, 292, 1105, 0, 1086,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318,
	319, 320, 1122, 321, 1116, 1115, 1036, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1107, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1042, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1130, 1131, 351, 1054, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1114, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 1127, 1128,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1137, 0, 1064, 369, 0, 370, 371, 372, 373,
	374, 1100, 1101, 1104, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1142, 384, 1109, 1110, 0, 1070, 0, 386,
	387, 1144, 1102, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1138, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 1093, 1092, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1033, 3763, 1151, 448, 449, 1055, 1103,
	450, 1117, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 1132, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 1133, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1113, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 1043, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1096, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 1111,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	1158, 553, 554, 555, 556, 1134, 559, 560, 0, 561,
	562, 1031, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 1123, 1124, 1125, 1126, 0,
	580, 0, 572, 573, 574, 1135, 575, 1136, 1053, 576,
	577, 578, 579, 0, 581, 582, 0, 1037, 583, 584,
	585, 587, 588, 586, 589, 1097, 590, 0, 0, 591,
	592, 593, 649, 1120, 1157, 0, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	1034, 0, 0, 0, 0, 0, 0, 0, 1030, 0,
	0, 0, 0, 0, 0, 1028, 1029, 1856, 0, 0,
	0, 0, 0, 0, 1059, 0, 0, 0, 1057, 1075,
	1047, 1048, 1049, 1045, 1046, 1058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 1063, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 1112, 0, 282, 1119,
	283, 1118, 0, 1129, 284, 285, 286, 287, 288, 289,
	1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 1122, 321, 1116, 1115, 1036,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1107, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1042, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 1054,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1114,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 1127, 1128, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 1064, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 1109, 1110, 0,
	1070, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1033, 264, 1151, 448,
	449, 1055, 1103, 450, 1117, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1113, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 1043, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 1111, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 1158, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 1031, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 1123, 1124,
	1125, 1126, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 1053, 576, 577, 578, 579, 0, 581, 582, 0,
	1037, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 1120, 1157, 3498, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 1034, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 0, 0, 0, 0, 1028, 1029,
	1075, 1047, 1048, 1049, 1045, 1046, 1058, 1059, 0, 0,
	0, 1057, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1099, 1063, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 1112, 0, 282,
	1119, 283, 1118, 0, 1129, 284, 285, 286, 287, 288,
	289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291,
	292, 1105, 0, 1086, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091,
	1090, 1094, 317, 318, 319, 320, 1122, 321, 1116, 1115,
	1036, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1107, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1042, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1130, 1131, 351,
	1054, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1114, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 1127, 1128, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1137, 0, 1064, 369, 0,
	370, 371, 372, 373, 374, 1100, 1101, 1104, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1142, 384, 1109, 1110,
	0, 1070, 0, 386, 387, 1144, 1102, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1138, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 1093, 1092, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1033, 264, 1151,
	448, 449, 1055, 1103, 450, 1117, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 1132, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 1133, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1113, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 1043, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1096,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 1111, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 1158, 553, 554, 555, 556, 1134,
	559, 560, 0, 561, 562, 1031, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 1123,
	1124, 1125, 1126, 0, 580, 0, 572, 573, 574, 1135,
	575, 1136, 1053, 576, 577, 578, 579, 0, 581, 582,
	0, 1037, 583, 584, 585, 587, 588, 586, 589, 1097,
	590, 0, 0, 591, 592, 593, 649, 1120, 1157, 0,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 1034, 0, 0, 0, 0, 0,
	0, 0, 1030, 0, 0, 0, 0, 0, 0, 1028,
	1029, 1856, 0, 0, 0, 0, 0, 0, 1059, 0,
	0, 0, 1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1099, 1063, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	1112, 0, 282, 1119, 283, 1118, 0, 1129, 284, 285,
	286, 287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122,
	321, 1116, 1115, 1036, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1107, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1042,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 1054, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1114, 0, 0, 0, 355, 0, 356,
	0, 2544, 1141, 357, 358, 1127, 1128, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	1064, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1113, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 1043, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 1111, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 1158, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 1031, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 1123, 1124, 1125, 1126, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 1053, 576, 577, 578, 579,
	0, 581, 582, 0, 1037, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	1120, 1157, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1034, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 1028, 1029, 1075, 1047, 1048, 1049, 1045, 1046,
	1058, 1059, 0, 0, 0, 1057, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1099, 1063, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 1112, 0, 282, 1119, 283, 1118, 0, 1129, 284,
	285, 286, 287, 288, 289, 1065, 1098, 1032, 290, 1159,
	1160, 610, 0, 291, 292, 1105, 0, 1086, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 1089,
	1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320,
	1122, 321, 1116, 1115, 1036, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1107, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1042, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1130, 1131, 351, 1054, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1114, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 1127, 1128, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1137,
	0, 1064, 369, 0, 370, 371, 372, 373, 374, 1100,
	1101, 1104, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1142, 384, 1109, 1110, 0, 1070, 0, 386, 387, 1144,
	1102, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1138, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 1093, 1092, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 1132,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 1133, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1113, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 1043, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1096, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 1111, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 1158, 553,
	554, 555, 556, 1134, 559, 560, 0, 561, 562, 1031,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 1123, 1124, 1125, 1126, 0, 580, 0,
	572, 573, 574, 1135, 575, 1136, 1053, 576, 577, 578,
	579, 0, 581, 582, 0, 1037, 583, 584, 585, 587,
	588, 586, 589, 1097, 590, 0, 0, 591, 592, 593,
	649, 1120, 1157, 0, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 1034, 0,
	0, 0, 0, 0, 0, 0, 1030, 0, 0, 0,
	0, 0, 0, 1028, 1029, 0, 0, 0, 0, 0,
	0, 0, 1059, 1786, 0, 2549, 1057, 1075, 1047, 1048,
	1049, 1045, 1046, 1058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1099, 1063, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 1112, 0, 282, 1119, 283, 1118,
	0, 1129, 284, 285, 286, 287, 288, 289, 1065, 1098,
	1032, 290, 1159, 1160, 610, 0, 291, 292, 1105, 0,
	1086, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317,
	318, 319, 320, 1122, 321, 1116, 1115, 1036, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1107, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1042, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1130, 1131, 351, 1054, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1114, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 1127,
	1128, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1137, 0, 1064, 369, 0, 370, 371, 372,
	373, 374, 1100, 1101, 1104, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1142, 384, 1109, 1110, 0, 1070, 0,
	386, 387, 1144, 1102, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1138, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 1093, 1092,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 1033, 264, 1151, 448, 449, 1055,
	1103, 450, 1117, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 1132, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 1133, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1113, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 1043, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1096, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	1111, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 1158, 553, 554, 555, 556, 1134, 559, 560, 0,
	561, 562, 1031, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 1123, 1124, 1125, 1126,
	0, 580, 0, 572, 573, 574, 1135, 575, 1136, 1053,
	576, 577, 578, 579, 0, 581, 582, 0, 1037, 583,
	584, 585, 587, 588, 586, 589, 1097, 590, 0, 0,
	591, 592, 593, 649, 1120, 1157, 0, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 1034, 0, 0, 0, 0, 0, 0, 0, 1030,
	0, 0, 0, 0, 0, 0, 1028, 1029, 0, 0,
	0, 0, 0, 0, 0, 1059, 0, 0, 2547, 1057,
	1075, 1047, 1048, 1049, 1045, 1046, 1058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1099, 1063, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 1112, 0, 282,
	1119, 283, 1118, 0, 1129, 284, 285, 286, 287, 288,
	289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291,
	292, 1105, 0, 1086, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091,
	1090, 1094, 317, 318, 319, 320, 1122, 321, 1116, 1115,
	1036, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1107, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1042, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1130, 1131, 351,
	1054, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1114, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 1127, 1128, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1137, 0, 1064, 369, 0,
	370, 371, 372, 373, 374, 1100, 1101, 1104, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1142, 384, 1109, 1110,
	0, 1070, 0, 386, 387, 1144, 1102, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1138, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 1093, 1092, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1033, 264, 1151,
	448, 449, 1055, 1103, 450, 1117, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 1132, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 1133, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1113, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 1043, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1096,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 1111, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 1158, 553, 554, 555, 556, 1134,
	559, 560, 0, 561, 562, 1031, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 1123,
	1124, 1125, 1126, 0, 580, 0, 572, 573, 574, 1135,
	575, 1136, 1053, 576, 577, 578, 579, 0, 581, 582,
	0, 1037, 583, 584, 585, 587, 588, 586, 589, 1097,
	590, 0, 0, 591, 592, 593, 649, 1120, 1157, 0,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 1034, 0, 0, 0, 0, 0,
	0, 0, 1030, 0, 0, 0, 0, 0, 0, 1028,
	1029, 0, 0, 0, 0, 0, 0, 0, 1059, 0,
	0, 2535, 1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1099, 1063, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	1112, 0, 282, 1119, 283, 1118, 0, 1129, 284, 285,
	286, 287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122,
	321, 1116, 1115, 1036, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1107, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1042,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 1054, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1114, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 1127, 1128, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	1064, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1113, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 1043, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 1111, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 1158, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 1031, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 1123, 1124, 1125, 1126, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 1053, 576, 577, 578, 579,
	0, 581, 582, 0, 1037, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	1120, 1157, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1034, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 1028, 1029, 0, 0, 0, 0, 0, 0,
	0, 1059, 0, 0, 2524, 1057, 1075, 1047, 1048, 1049,
	1045, 1046, 1058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1099,
	1063, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 1112, 0, 282, 1119, 283, 1118, 0,
	1129, 284, 285, 286, 287, 288, 289, 1065, 1098, 1032,
	290, 1159, 1160, 610, 0, 291, 292, 1105, 0, 1086,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318,
	319, 320, 1122, 321, 1116, 1115, 1036, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1107, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1042, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1130, 1131, 351, 1054, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1114, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 1127, 1128,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1137, 0, 1064, 369, 0, 370, 371, 372, 373,
	374, 1100, 1101, 1104, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1142, 384, 1109, 1110, 0, 1070, 0, 386,
	387, 1144, 1102, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1138, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 1093, 1092, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103,
	450, 1117, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 1132, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 1133, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1113, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 1043, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1096, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 1111,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	1158, 553, 554, 555, 556, 1134, 559, 560, 0, 561,
	562, 1031, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 1123, 1124, 1125, 1126, 0,
	580, 0, 572, 573, 574, 1135, 575, 1136, 1053, 576,
	577, 578, 579, 0, 581, 582, 0, 1037, 583, 584,
	585, 587, 588, 586, 589, 1097, 590, 0, 0, 591,
	592, 593, 649, 1120, 1157, 0, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	1034, 0, 0, 0, 0, 0, 0, 0, 1030, 0,
	0, 0, 0, 0, 0, 1028, 1029, 0, 0, 0,
	0, 0, 0, 0, 1059, 0, 0, 2522, 1057, 2513,
	2520, 1048, 1049, 1045, 1046, 1058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 1063, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 1112, 0, 282, 1119,
	283, 1118, 0, 1129, 284, 285, 286, 287, 288, 289,
	1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 1122, 2516, 1116, 1115, 1036,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1107, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1042, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 1054,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1114,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 1127, 1128, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 1064, 369, 0, 370,
	371, 372, 2517, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 1109, 1110, 0,
	1070, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 2518, 419, 2515, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1033, 264, 1151, 448,
	449, 1055, 1103, 450, 1117, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1113, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 1043, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	2519, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 1111, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 1158, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 1031, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 1123, 1124,
	1125, 1126, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 1053, 576, 577, 578, 579, 0, 581, 582, 0,
	1037, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 1120, 1157, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 2514, 601, 1034, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 0, 0, 0, 0, 1028, 1029,
	0, 0, 0, 0, 0, 0, 0, 1059, 0, 0,
	2510, 1057, 2513, 2520, 1048, 1049, 1045, 1046, 1058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1099, 1063, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 1112,
	0, 282, 1119, 283, 1118, 0, 1129, 284, 285, 286,
	287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610,
	0, 291, 292, 1105, 0, 1086, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 1089, 1087, 1088,
	1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122, 2516,
	1116, 1115, 1036, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1107, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1042, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1130,
	1131, 351, 1054, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1114, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 1127, 1128, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1137, 0, 1064,
	369, 0, 370, 371, 372, 2517, 374, 1100, 1101, 1104,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1142, 384,
	1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1138, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 1093, 1092, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 2518, 419, 2515, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 1033,
	264, 1151, 448, 449, 1055, 1103, 450, 1117, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 1132, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	1133, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1113, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	1043, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 2519, 0, 532, 533, 531, 534, 535,
	536, 1096, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 1111, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 1158, 553, 554, 555,
	556, 1134, 559, 560, 0, 561, 562, 1031, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 1123, 1124, 1125, 1126, 0, 580, 0, 572, 573,
	574, 1135, 575, 1136, 1053, 576, 577, 578, 579, 0,
	581, 582, 0, 1037, 583, 584, 585, 587, 588, 586,
	589, 1097, 590, 0, 0, 591, 592, 593, 649, 1120,
	1157, 0, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 2514, 601, 1034, 0, 0, 0,
	0, 0, 0, 0, 1030, 0, 0, 0, 0, 0,
	0, 1028, 1029, 1075, 1047, 1048, 1049, 1045, 1046, 1058,
	1059, 0, 0, 0, 1057, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1099, 1063, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	1112, 0, 282, 1119, 283, 1118, 0, 1129, 284, 285,
	286, 287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122,
	321, 1116, 1115, 1036, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1107, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1042,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 1054, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1114, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 1127, 1128, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	1064, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1113, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 1043, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 1111, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 1158, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 1031, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 1123, 1124, 1125, 1126, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 1053, 576, 577, 578, 579,
	0, 581, 582, 0, 1037, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	1120, 1157, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1034, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 1028, 1029, 0, 0, 0, 0, 0, 1794,
	0, 1059, 0, 0, 0, 1057, 1075, 1047, 1048, 1049,
	1045, 1046, 1058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 2304, 273, 274, 0, 0, 0, 0, 0, 1099,
	1063, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 1112, 0, 282, 1119, 283, 1118, 0,
	1129, 284, 285, 286, 287, 288, 289, 1065, 1098, 1032,
	290, 1159, 1160, 610, 0, 291, 292, 1105, 0, 1086,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318,
	319, 320, 1122, 321, 1116, 1115, 1036, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1107, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1042, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1130, 1131, 351, 1054, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1114, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 1127, 1128,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1137, 0, 1064, 369, 0, 370, 371, 372, 373,
	374, 1100, 1101, 1104, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1142, 384, 1109, 1110, 0, 1070, 0, 386,
	387, 1144, 1102, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1138, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 1093, 1092, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103,
	450, 1117, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 1132, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 1133, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1113, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 1043, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1096, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 1111,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	1158, 553, 554, 555, 556, 1134, 559, 560, 0, 561,
	562, 1031, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 1123, 1124, 1125, 1126, 0,
	580, 0, 572, 573, 574, 1135, 575, 1136, 1053, 576,
	577, 578, 579, 0, 581, 582, 0, 1037, 583, 584,
	585, 587, 588, 586, 589, 1097, 590, 0, 0, 591,
	592, 593, 649, 1120, 1157, 0, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	1034, 0, 0, 0, 0, 0, 0, 0, 1030, 0,
	0, 0, 0, 0, 0, 1028, 1029, 0, 0, 0,
	0, 0, 0, 0, 1059, 0, 0, 1643, 1057, 1075,
	1047, 1048, 1049, 1045, 1046, 1058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 1063, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 1112, 0, 282, 1119,
	283, 1118, 0, 1129, 284, 285, 286, 287, 288, 289,
	1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 1122, 321, 1116, 1115, 1036,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1107, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1042, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 1054,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1114,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 1127, 1128, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 1064, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 1109, 1110, 0,
	1070, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1033, 264, 1151, 448,
	449, 1055, 1103, 450, 1117, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1113, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 1043, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 1111, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 1158, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 1031, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 1123, 1124,
	1125, 1126, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 1053, 576, 577, 578, 579, 0, 581, 582, 0,
	1037, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 1120, 1157, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 1034, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 0, 0, 0, 0, 1028, 1029,
	0, 0, 0, 0, 0, 0, 0, 1059, 0, 0,
	1577, 1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1099, 1063, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 1112,
	0, 282, 1119, 283, 1118, 0, 1129, 284, 285, 286,
	287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610,
	0, 291, 292, 1105, 0, 1086, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 1089, 1087, 1088,
	1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122, 321,
	1116, 1115, 1036, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1107, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1042, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1130,
	1131, 351, 1054, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1114, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 1127, 1128, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1137, 0, 1064,
	369, 0, 370, 371, 372, 373, 374, 1100, 1101, 1104,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1142, 384,
	1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1138, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 1093, 1092, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 1033,
	264, 1151, 448, 449, 1055, 1103, 450, 1117, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 1132, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	1133, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1113, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	1043, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1096, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 1111, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 1158, 553, 554, 555,
	556, 1134, 559, 560, 0, 561, 562, 1031, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 1123, 1124, 1125, 1126, 0, 580, 0, 572, 573,
	574, 1135, 575, 1136, 1053, 576, 577, 578, 579, 0,
	581, 582, 0, 1037, 583, 584, 585, 587, 588, 586,
	589, 1097, 590, 0, 0, 591, 592, 593, 649, 1120,
	1157, 0, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 1034, 0, 0, 0,
	0, 0, 0, 0, 1030, 0, 0, 0, 0, 0,
	0, 1028, 1029, 0, 0, 0, 0, 0, 0, 0,
	1059, 0, 0, 1572, 1057, 1075, 1047, 1048, 1049, 1045,
	1046, 1058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1099, 1063,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 1112, 0, 282, 1119, 283, 1118, 0, 1129,
	284, 285, 286, 287, 288, 289, 1065, 1098, 1032, 290,
	1159, 1160, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 1122, 321, 1116, 1115, 1036, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1107,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1042, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 1054, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1114, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 1127, 1128, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 1064, 369, 0, 370, 371, 372, 373, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 1109, 1110, 0, 1070, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103, 450,
	1117, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1113,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 1043, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 1111, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 1158,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	1031, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 1123, 1124, 1125, 1126, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 1053, 576, 577,
	578, 579, 0, 581, 582, 0, 1037, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 649, 1120, 1157, 0, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 1034,
	0, 0, 0, 0, 0, 0, 0, 1030, 0, 0,
	0, 0, 0, 0, 1028, 1029, 0, 0, 0, 0,
	0, 0, 0, 1059, 0, 0, 1563, 1057, 1075, 1047,
	1048, 1049, 1045, 1046, 1058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1099, 1063, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 1112, 0, 282, 1119, 283,
	1118, 0, 1129, 284, 285, 286, 287, 288, 289, 1065,
	1098, 1032, 290, 1159, 1160, 610, 0, 291, 292, 1105,
	0, 1086, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094,
	317, 318, 319, 320, 1122, 321, 1116, 1115, 1036, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1107, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1042, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1130, 1131, 351, 1054, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1114, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	1127, 1128, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1137, 0, 1064, 369, 0, 370, 371,
	372, 373, 374, 1100, 1101, 1104, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1142, 384, 1109, 1110, 0, 1070,
	0, 386, 387, 1144, 1102, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1138, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 1093,
	1092, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 1033, 264, 1151, 448, 449,
	1055, 1103, 450, 1117, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 1132, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 1133, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1113, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 1043, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1096, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 1111, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 1158, 553, 554, 555, 556, 1134, 559, 560,
	0, 561, 562, 1031, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 1123, 1124, 1125,
	1126, 0, 580, 0, 572, 573, 574, 1135, 575, 1136,
	1053, 576, 577, 578, 579, 0, 581, 582, 0, 1037,
	583, 584, 585, 587, 588, 586, 589, 1097, 590, 0,
	0, 591, 592, 593, 649, 1120, 1157, 0, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 1034, 0, 0, 0, 0, 0, 0, 0,
	1030, 0, 0, 0, 0, 0, 0, 1028, 1029, 0,
	0, 0, 0, 0, 0, 0, 1059, 0, 0, 1558,
	1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1099, 1063, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 1112, 0,
	282, 1119, 283, 1118, 0, 1129, 284, 285, 286, 287,
	288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0,
	291, 292, 1105, 0, 1086, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095,
	1091, 1090, 1094, 317, 318, 319, 320, 1122, 321, 1116,
	1115, 1036, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1107, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1042, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1130, 1131,
	351, 1054, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1114, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 1127, 1128, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1137, 0, 1064, 369,
	0, 370, 371, 372, 373, 374, 1100, 1101, 1104, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1142, 384, 1109,
	1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1138,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 1093, 1092, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1033, 264,
	1151, 448, 449, 1055, 1103, 450, 1117, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 1132, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 1133,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1113, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 1043,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1096, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 1111, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 1158, 553, 554, 555, 556,
	1134, 559, 560, 0, 561, 562, 1031, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	1123, 1124, 1125, 1126, 0, 580, 0, 572, 573, 574,
	1135, 575, 1136, 1053, 576, 577, 578, 579, 0, 581,
	582, 0, 1037, 583, 584, 585, 587, 588, 586, 589,
	1097, 590, 0, 0, 591, 592, 593, 649, 1120, 1157,
	0, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 1034, 0, 0, 0, 0,
	0, 0, 0, 1030, 0, 0, 0, 0, 0, 0,
	1028, 1029, 0, 0, 0, 0, 0, 0, 0, 1059,
	0, 0, 1472, 1057, 1075, 1047, 1048, 1049, 1045, 1046,
	1058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1099, 1063, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 1112, 0, 282, 1119, 283, 1118, 0, 1129, 284,
	285, 286, 287, 288, 289, 1065, 1098, 1032, 290, 1159,
	1160, 610, 0, 291, 292, 1105, 0, 1086, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 1089,
	1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320,
	1122, 321, 1116, 1115, 1036, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1107, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1042, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1130, 1131, 351, 1054, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1114, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 1127, 1128, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1137,
	0, 1064, 369, 0, 370, 371, 372, 373, 374, 1471,
	1101, 1104, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1142, 384, 1109, 1110, 0, 1070, 0, 386, 387, 1144,
	1102, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1138, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 1093, 1092, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 1132,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 1133, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1113, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 1043, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1096, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 1111, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 1158, 553,
	554, 555, 556, 1134, 559, 560, 0, 561, 562, 1031,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 1123, 1124, 1125, 1126, 0, 580, 0,
	572, 573, 574, 1135, 575, 1136, 1053, 576, 577, 578,
	579, 0, 581, 582, 0, 1037, 583, 584, 585, 587,
	588, 586, 589, 1097, 590, 0, 0, 591, 592, 593,
	649, 1120, 1157, 0, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 1034, 0,
	0, 0, 0, 0, 0, 0, 1030, 0, 0, 0,
	0, 0, 0, 1028, 1029, 0, 0, 0, 0, 0,
	0, 0, 1059, 0, 0, 1466, 1057, 1075, 1047, 1048,
	1049, 1045, 1046, 1058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1099, 1063, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 1112, 0, 282, 1119, 283, 1118,
	0, 1129, 284, 285, 286, 287, 288, 289, 1065, 1098,
	1032, 290, 1159, 1160, 610, 0, 291, 292, 1105, 0,
	1086, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317,
	318, 319, 320, 1122, 321, 1116, 1115, 1036, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1107, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1042, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1130, 1131, 351, 1054, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1114, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 1127,
	1128, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1137, 0, 1064, 369, 0, 370, 371, 372,
	373, 374, 1465, 1101, 1104, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1142, 384, 1109, 1110, 0, 1070, 0,
	386, 387, 1144, 1102, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1138, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 1093, 1092,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 1033, 264, 1151, 448, 449, 1055,
	1103, 450, 1117, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 1132, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 1133, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1113, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 1043, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1096, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	1111, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 1158, 553, 554, 555, 556, 1134, 559, 560, 0,
	561, 562, 1031, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 1123, 1124, 1125, 1126,
	0, 580, 0, 572, 573, 574, 1135, 575, 1136, 1053,
	576, 577, 578, 579, 0, 581, 582, 0, 1037, 583,
	584, 585, 587, 588, 586, 589, 1097, 590, 0, 0,
	591, 592, 593, 649, 1120, 1157, 0, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 1034, 0, 0, 0, 0, 0, 0, 0, 1030,
	0, 0, 0, 0, 0, 0, 1028, 1029, 0, 0,
	0, 0, 0, 0, 0, 1059, 0, 0, 1459, 1057,
	1075, 1047, 1048, 1049, 1045, 1046, 1058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1099, 1063, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 1112, 0, 282,
	1119, 283, 1118, 0, 1129, 284, 285, 286, 287, 288,
	289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291,
	292, 1105, 0, 1086, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091,
	1090, 1094, 317, 318, 319, 320, 1122, 321, 1116, 1115,
	1036, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1107, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1042, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1130, 1131, 351,
	1054, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1114, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 1127, 1128, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1137, 0, 1064, 369, 0,
	370, 371, 372, 373, 374, 1100, 1101, 1104, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1142, 384, 1109, 1110,
	0, 1070, 0, 386, 387, 1144, 1102, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1138, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 1093, 1092, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1033, 264, 1151,
	448, 449, 1055, 1103, 450, 1117, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 1132, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 1133, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1113, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 1043, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1096,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 1111, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 1158, 553, 554, 555, 556, 1134,
	559, 560, 0, 561, 562, 1031, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 1123,
	1124, 1125, 1126, 0, 580, 0, 572, 573, 574, 1135,
	575, 1136, 1053, 576, 577, 578, 579, 0, 581, 582,
	0, 1037, 583, 584, 585, 587, 588, 586, 589, 1097,
	590, 0, 0, 591, 592, 593, 649, 1120, 1157, 0,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 1034, 0, 0, 0, 0, 0,
	0, 0, 1030, 0, 0, 0, 0, 0, 0, 1028,
	1029, 0, 0, 0, 0, 0, 0, 0, 1059, 0,
	0, 1284, 1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1099, 1063, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	1112, 0, 282, 1119, 283, 1118, 0, 1129, 284, 285,
	286, 287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122,
	321, 1116, 1115, 1036, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1107, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1042,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 1054, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1114, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 1127, 1128, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	1064, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1113, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 1043, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 1111, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 1158, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 1031, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 1123, 1124, 1125, 1126, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 1053, 576, 577, 578, 579,
	0, 581, 582, 0, 1037, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	1120, 1157, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1034, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 1028, 1029, 1075, 1047, 1048, 1049, 1045, 1046,
	1058, 1059, 0, 0, 0, 1057, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1099, 1063, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 1112, 0, 282, 1119, 283, 1118, 0, 1129, 284,
	285, 286, 287, 288, 289, 1065, 1098, 1032, 290, 1159,
	1160, 610, 0, 291, 292, 1105, 0, 1086, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 1089,
	1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320,
	1122, 321, 1116, 1115, 1036, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1107, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1042, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1130, 1131, 351, 1054, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1114, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 1127, 1128, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1137,
	0, 1064, 369, 0, 370, 371, 372, 373, 374, 1100,
	1101, 1104, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1142, 384, 1109, 1110, 0, 1070, 0, 386, 387, 1144,
	1102, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1138, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 1093, 1092, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 1132,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 1133, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1113, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 1043, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1096, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 1111, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 1158, 553,
	554, 555, 556, 1134, 559, 560, 0, 561, 562, 1031,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 1123, 1124, 1125, 1126, 0, 580, 0,
	572, 573, 574, 1135, 575, 1136, 1053, 576, 577, 578,
	579, 0, 581, 582, 0, 1037, 583, 584, 585, 587,
	588, 586, 589, 1097, 590, 0, 0, 591, 592, 593,
	649, 1120, 1157, 0, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 1034, 0,
	0, 0, 0, 0, 0, 0, 1030, 0, 0, 0,
	0, 0, 0, 1028, 1029, 1075, 1047, 1048, 1049, 1045,
	1046, 1058, 1059, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1099, 1063,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 1112, 0, 282, 1119, 283, 1118, 0, 1129,
	284, 285, 286, 287, 288, 289, 1065, 1098, 1032, 290,
	1159, 1160, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 4401,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 1122, 321, 1116, 1115, 1036, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1107,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1042, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 1054, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1114, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 1127, 1128, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 1064, 369, 0, 370, 371, 372, 373, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 1109, 1110, 0, 1070, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103, 450,
	1117, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1113,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 1043, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 1111, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 1158,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	1031, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 1123, 1124, 1125, 1126, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 1053, 576, 577,
	578, 579, 0, 4400, 582, 0, 1037, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 649, 1120, 1157, 0, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 1034,
	0, 0, 0, 0, 0, 0, 0, 1030, 0, 0,
	0, 0, 0, 0, 1028, 1029, 1075, 1047, 1048, 1049,
	1045, 1046, 1058, 1059, 0, 0, 0, 1057, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1099,
	1063, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 4399, 1112, 0, 282, 1119, 283, 1118, 0,
	1129, 284, 285, 286, 287, 288, 289, 1065, 1098, 1032,
	290, 1159, 1160, 610, 0, 291, 292, 1105, 0, 1086,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	4401, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318,
	319, 320, 1122, 321, 1116, 1115, 1036, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1107, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1042, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1130, 1131, 351, 1054, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1114, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 1127, 1128,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1137, 0, 1064, 369, 0, 370, 371, 372, 373,
	374, 1100, 1101, 1104, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1142, 384, 1109, 1110, 0, 1070, 0, 386,
	387, 1144, 1102, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1138, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 1093, 1092, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103,
	450, 1117, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 1132, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 1133, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1113, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 1043, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1096, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 1111,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	1158, 553, 554, 555, 556, 1134, 559, 560, 0, 561,
	562, 1031, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 1123, 1124, 1125, 1126, 0,
	580, 0, 572, 573, 574, 1135, 575, 1136, 1053, 576,
	577, 578, 579, 0, 4400, 582, 0, 1037, 583, 584,
	585, 587, 588, 586, 589, 1097, 590, 0, 0, 591,
	592, 593, 649, 1120, 1157, 0, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	1034, 0, 0, 0, 0, 0, 0, 0, 1030, 0,
	0, 0, 0, 0, 0, 1028, 1029, 1075, 1047, 1048,
	1049, 1045, 1046, 1058, 1059, 0, 0, 0, 1057, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1099, 1063, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 1112, 0, 282, 1119, 283, 1118,
	0, 1129, 284, 285, 286, 287, 288, 289, 1065, 1098,
	1032, 290, 1159, 1160, 610, 0, 291, 292, 1105, 0,
	1086, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	4071, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317,
	318, 319, 320, 1122, 321, 1116, 1115, 1036, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1107, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1042, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1130, 1131, 351, 1054, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1114, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 1127,
	1128, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1137, 0, 4072, 369, 0, 370, 371, 372,
	373, 374, 1100, 1101, 1104, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1142, 384, 1109, 1110, 0, 1070, 0,
	386, 387, 1144, 1102, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1138, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 1093, 1092,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 1033, 264, 1151, 448, 449, 1055,
	1103, 450, 1117, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 1132, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 1133, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1113, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 4070, 1043, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1096, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	1111, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 1158, 553, 554, 555, 556, 1134, 559, 560, 0,
	561, 562, 1031, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 1123, 1124, 1125, 1126,
	0, 580, 0, 572, 573, 574, 1135, 575, 1136, 1053,
	576, 577, 578, 579, 0, 581, 582, 0, 1037, 583,
	584, 585, 587, 588, 586, 589, 1097, 590, 0, 0,
	591, 592, 593, 649, 1120, 1157, 0, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 1034, 0, 0, 0, 0, 0, 0, 0, 1030,
	0, 0, 0, 0, 0, 0, 1028, 1029, 1075, 1047,
	1048, 1049, 2972, 2973, 1058, 1059, 0, 0, 0, 1057,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1099, 1063, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 1112, 0, 282, 1119, 283,
	1118, 0, 1129, 284, 285, 286, 287, 288, 289, 1065,
	1098, 1032, 290, 1159, 1160, 610, 0, 291, 292, 1105,
	0, 1086, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094,
	317, 318, 319, 320, 1122, 321, 1116, 1115, 1036, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1107, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1042, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1130, 1131, 351, 1054, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1114, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	1127, 1128, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1137, 0, 1064, 369, 0, 370, 371,
	372, 373, 374, 1100, 1101, 1104, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1142, 384, 1109, 1110, 0, 1070,
	0, 386, 387, 1144, 1102, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1138, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 1093,
	1092, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 1033, 264, 1151, 448, 449,
	1055, 1103, 450, 1117, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 1132, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 1133, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1113, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 1043, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1096, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 1111, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 1158, 553, 554, 555, 556, 1134, 559, 560,
	0, 561, 562, 1031, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 1123, 1124, 1125,
	1126, 0, 580, 0, 572, 573, 574, 1135, 575, 1136,
	1053, 576, 577, 578, 579, 0, 581, 582, 0, 1037,
	583, 584, 585, 587, 588, 586, 589, 1097, 590, 0,
	0, 591, 592, 593, 649, 1120, 1157, 0, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 1034, 0, 0, 0, 0, 0, 0, 0,
	1030, 0, 0, 0, 0, 0, 0, 1028, 1029, 1075,
	1047, 1048, 1049, 2970, 2971, 1058, 1059, 0, 0, 0,
	1057, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 1063, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 1112, 0, 282, 1119,
	283, 1118, 0, 1129, 284, 285, 286, 287, 288, 289,
	1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 1122, 321, 1116, 1115, 1036,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1107, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1042, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 1054,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1114,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 1127, 1128, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 1064, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 1109, 1110, 0,
	1070, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1033, 264, 1151, 448,
	449, 1055, 1103, 450, 1117, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1113, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 1043, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 1111, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 1158, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 1031, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 1123, 1124,
	1125, 1126, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 1053, 576, 577, 578, 579, 0, 581, 582, 0,
	1037, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 1120, 1157, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 1034, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 0, 0, 0, 0, 1028, 1029,
	1075, 1047, 1048, 1049, 1045, 1046, 1058, 1059, 0, 0,
	0, 1057, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1099, 1063, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 1112, 0, 282,
	1119, 283, 1118, 0, 1129, 284, 285, 286, 287, 288,
	289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291,
	292, 1105, 0, 1086, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091,
	1090, 1094, 317, 318, 319, 320, 1122, 321, 1116, 1115,
	1036, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1107, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1042, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1130, 1131, 351,
	1054, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1114, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 1127, 1128, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1137, 0, 1064, 369, 0,
	370, 371, 372, 373, 374, 1100, 1101, 1104, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1142, 384, 1109, 1110,
	0, 1070, 0, 386, 387, 1144, 1102, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1138, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 1093, 1092, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1033, 264, 1151,
	448, 449, 1055, 1103, 450, 1117, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 1132, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 1133, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1113, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 1043, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1096,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 1111, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 1158, 553, 554, 555, 556, 1134,
	559, 560, 0, 561, 562, 1031, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 1123,
	1124, 1125, 1126, 0, 580, 0, 572, 573, 574, 1135,
	575, 1136, 1053, 576, 577, 578, 579, 0, 581, 582,
	0, 1037, 583, 584, 585, 587, 588, 586, 589, 1097,
	590, 0, 0, 591, 592, 593, 649, 1120, 1157, 0,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 1034, 0, 0, 0, 0, 0,
	0, 0, 1030, 0, 0, 0, 0, 0, 0, 2312,
	2313, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 1059, 0,
	0, 0, 1057, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1099, 1063, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 1112, 0,
	282, 1119, 283, 1118, 0, 1129, 284, 285, 286, 287,
	288, 289, 1065, 1098, 0, 290, 1159, 1160, 610, 0,
	291, 292, 1105, 0, 1086, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095,
	1091, 1090, 1094, 317, 318, 319, 320, 1122, 321, 1116,
	1115, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1107, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1042, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1130, 1131,
	351, 1054, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1114, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 1127, 1128, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1137, 0, 1064, 369,
	0, 370, 371, 372, 373, 374, 1100, 1101, 1104, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1142, 384, 1109,
	1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1138,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 1093, 1092, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 0, 264,
	1151, 448, 449, 1055, 1103, 450, 1117, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 1132, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 1133,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1113, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 1043,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1096, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 1111, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 1158, 553, 554, 555, 556,
	1134, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	1123, 1124, 1125, 1126, 0, 580, 0, 572, 573, 574,
	1135, 575, 1136, 1053, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	1097, 590, 0, 0, 591, 592, 593, 649, 1120, 1157,
	0, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 2532, 0, 0, 0, 0, 0, 0,
	2530, 2531, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 1059,
	0, 0, 0, 1057, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1099, 1063, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 1112,
	0, 282, 1119, 283, 1118, 0, 1129, 284, 285, 286,
	287, 288, 289, 1065, 1098, 0, 290, 1159, 1160, 610,
	0, 291, 292, 1105, 0, 1086, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 1089, 1087, 1088,
	1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122, 321,
	1116, 1115, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1107, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1042, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1130,
	1131, 351, 1054, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1114, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 1127, 1128, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1137, 0, 1064,
	369, 0, 370, 371, 372, 373, 374, 1100, 1101, 1104,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1142, 384,
	1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1138, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 1093, 1092, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 0,
	264, 1151, 448, 449, 1055, 1103, 450, 1117, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 1132, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	1133, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1113, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	2965, 2966, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1096, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 1111, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 1158, 553, 554, 555,
	556, 1134, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 1123, 1124, 1125, 1126, 0, 580, 0, 572, 573,
	574, 1135, 575, 1136, 1053, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 1097, 590, 0, 0, 591, 592, 593, 649, 1120,
	1157, 0, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2034, 2035, 1075, 1047, 1048, 1049, 1045, 1046, 1058,
	1059, 0, 0, 0, 1057, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1099, 1063, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 0,
	1112, 0, 282, 1119, 283, 1118, 0, 1129, 284, 285,
	286, 287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 4401, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122,
	321, 1116, 1115, 1036, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1107, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1042,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 1054, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1114, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 1127, 1128, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	1064, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 1109, 1110, 0, 1070, 0, 386, 387, 0, 1102,
	0, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	1033, 264, 0, 448, 449, 1055, 1103, 450, 1117, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1113, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 1043, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 1111, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 1158, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 1031, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 1123, 1124, 1125, 1126, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 1053, 576, 577, 578, 579,
	0, 4400, 582, 0, 1037, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	1120, 1157, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1021, 0, 1197,
	0, 0, 1028, 1029, 0, 0, 0, 0, 0, 0,
	0, 1059, 0, 0, 0, 1057, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 0, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 1098, 0, 290, 608, 609, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 625, 626, 0,
	627, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 1183, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 0, 264, 1151, 448,
	449, 0, 1103, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 1189, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 639, 1191, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 224, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 0, 558, 226, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 1547, 650, 651, 0, 595,
	594, 596, 652, 1197, 0, 0, 218, 597, 598, 653,
	599, 600, 601, 0, 0, 219, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 1187, 1099, 1880, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 1098, 0, 290, 608, 609,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 625, 626, 0, 627, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 1183, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	0, 264, 1151, 448, 449, 0, 1103, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 1189, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 639, 1191, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 224, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 0, 558,
	226, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 1547,
	650, 651, 0, 595, 594, 596, 652, 3149, 0, 1197,
	218, 597, 598, 653, 599, 600, 601, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 1187,
	0, 1880, 1099, 0, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 1098, 0, 290, 608, 609, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 625, 626, 0,
	627, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 1183, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 0, 264, 1151, 448,
	449, 0, 1103, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 1189, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 639, 1191, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 1179, 0, 1197, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 1187, 0, 1185, 1099, 0,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 1098, 0, 290,
	608, 609, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 625, 626, 0, 627, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 1183, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 0, 264, 1151, 448, 449, 0, 1103, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 1189, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 1191, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 1197,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 1187, 1099, 1185, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 1098, 0, 290, 608, 609, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 625, 626, 0,
	627, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 1183, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 0, 264, 1151, 448,
	449, 0, 1103, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 1189, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 639, 1191, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 1197, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 1187, 1099, 1185, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 1098, 0, 290, 608, 609,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 625, 626, 0, 627, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	0, 264, 1151, 448, 449, 0, 1103, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 1197, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1099, 3917, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 1098,
	0, 290, 608, 609, 610, 0, 291, 292, 1105, 0,
	1086, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1130, 1131, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1137, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 1100, 1101, 1104, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1142, 384, 625, 626, 0, 627, 0,
	386, 387, 1144, 1102, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1138, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 1093, 1092,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 0, 264, 1151, 448, 449, 0,
	1103, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 1132, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 1133, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 639, 1191, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1096, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 1134, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 1135, 575, 1136, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 1097, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 1021, 0, 1277, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 1779, 602, 0, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 1282, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 1142,
	384, 625, 626, 0, 627, 0, 386, 387, 1144, 628,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	0, 0, 1151, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 224, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	226, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 1547,
	650, 651, 0, 595, 594, 596, 652, 1544, 0, 1277,
	218, 597, 598, 653, 599, 600, 601, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 183, 602, 0, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 1282, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 1142, 384, 625, 626, 0,
	627, 0, 386, 387, 1144, 628, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 0, 0, 1151, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 224, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 226, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 1547, 650, 651, 0, 595,
	594, 596, 652, 0, 0, 0, 218, 597, 598, 653,
	599, 600, 601, 0, 0, 219, 0, 0, 0, 0,
	0, 1277, 1276, 0, 0, 0, 0, 1274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 1282, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 1142, 384, 625,
	626, 0, 627, 0, 386, 387, 1144, 628, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 0, 0,
	1151, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 1277, 1276, 0, 0, 0, 0, 1274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1569,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 1282, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 1142,
	384, 625, 626, 0, 627, 0, 386, 387, 1144, 628,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	0, 0, 1151, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 1277, 2125, 0, 0, 0,
	0, 2126, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3419, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 1282, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 1142, 384, 625, 626, 0, 627, 0, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 2124, 400,
	399, 0, 401, 629, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 0, 0, 1151, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 0, 1277, 1276, 0,
	0, 0, 0, 1274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1569, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	1282, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 1142, 384, 625, 626, 0, 627, 0,
	386, 387, 1144, 628, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 0, 0, 1151, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 1197, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1099, 1553, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 1098, 0, 290, 608, 609, 610, 0,
	291, 292, 1105, 0, 1086, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095,
	1091, 1090, 1094, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1130, 1131,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1137, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 1100, 1101, 1104, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1142, 384, 625,
	626, 0, 627, 0, 386, 387, 1144, 1102, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1138,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 1093, 1092, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 0, 264,
	1151, 448, 449, 0, 1103, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 1132, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 1133,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1096, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	1134, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	1135, 575, 1136, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	1097, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 1021, 0, 259, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 224,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 226, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 1547, 650, 651, 0, 595, 594, 596,
	652, 259, 0, 0, 218, 597, 598, 653, 599, 600,
	601, 0, 0, 219, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 183, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 259, 2881, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 1894,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 259,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 4555, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 264, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 259, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 3371, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 259, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 1541, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 259, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 2869, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 259, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 3523,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 864,
	0, 772, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 2199, 602, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 779, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 862,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 777, 563,
	564, 565, 566, 567, 778, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 770, 0, 772, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 782, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 779, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 777, 563, 564, 565, 566, 567,
	778, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 1931, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 782, 0,
	0, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 0, 1937, 0, 282, 1927, 283, 1943, 0,
	1950, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 1953, 1954, 0, 0, 291, 292, 0, 0, 1282,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 1122, 321, 1941, 1940, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1107, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 0, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 1939, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 1948, 1949,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 0, 0, 0, 369, 0, 370, 371, 372, 373,
	374, 0, 0, 0, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 1142, 384, 1934, 1935, 0, 1930, 0, 386,
	387, 1144, 0, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 0, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 0, 0, 1151, 448, 449, 0, 0,
	450, 1942, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 0, 1152, 461,
	1153, 0, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 1924, 474, 475, 476,
	1925, 477, 478, 479, 0, 480, 0, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1938, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 0, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 1936,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	1952, 553, 554, 555, 556, 0, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 1944, 1945, 1946, 1947, 0,
	580, 0, 572, 573, 574, 0, 575, 0, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 0, 1928, 1951, 0, 595, 594, 596, 0,
	0, 772, 0, 0, 597, 598, 0, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 1918, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 779, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 777, 563,
	564, 565, 566, 567, 778, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	772, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 782, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 779, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 2240, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 2241, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 777, 563, 564,
	565, 566, 567, 778, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 2242, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 2000, 0, 1277, 1967, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 782, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 1282,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 0, 0, 0, 0, 0, 0, 1964, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 1142, 384, 625, 626, 0, 627, 0, 386,
	387, 1144, 628, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 0, 0, 1151, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1965, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	1961, 0, 1277, 1967, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 1282, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 0, 0, 0,
	0, 0, 0, 1964, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 1142, 384,
	625, 626, 0, 627, 0, 386, 387, 1144, 628, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 0,
	0, 1151, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1965, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 772, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 779, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 1957, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 777, 563,
	564, 565, 566, 567, 778, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 1956, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	772, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 782, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 779, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 1910, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 777, 563, 564,
	565, 566, 567, 778, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 1909, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 0, 0, 1277, 1967, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 782, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 1282,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 0, 0, 0, 0, 0, 0, 1964, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 1142, 384, 625, 626, 0, 627, 0, 386,
	387, 1144, 628, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 0, 0, 1151, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1965, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	1277, 1276, 0, 0, 0, 0, 1274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 1282, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 1142, 384, 625, 626,
	0, 627, 0, 386, 387, 1144, 628, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 0, 0, 1151,
	448, 449, 3709, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 1277, 1276, 0, 0, 0, 0,
	1274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 1282, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	1142, 384, 625, 626, 0, 627, 0, 386, 387, 1144,
	628, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 0, 0, 1151, 448, 449, 3343, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 259, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1597, 0, 1277,
	1276, 0, 0, 0, 0, 1274, 0, 0, 0, 0,
	0, 0, 0, 0, 782, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 1282, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	262, 0, 0, 0, 0, 0, 1596, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 1142, 384, 625, 626, 0,
	627, 0, 386, 387, 1144, 628, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 0, 0, 1151, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 1595, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 1594, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 1516, 0, 1277, 1276, 0, 0, 0,
	0, 1274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 1282, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	1515, 623, 624, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 1142, 384, 625, 626, 0, 627, 0, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 0, 0, 1151, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 1477,
	0, 1277, 1276, 0, 0, 0, 0, 1274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 1282, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 1142, 384, 625,
	626, 0, 627, 0, 386, 387, 1144, 628, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 0, 0,
	1151, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 1445, 0, 1277, 1276, 0,
	0, 0, 0, 1274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	1282, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 1444, 623, 624, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 1142, 384, 625, 626, 0, 627, 0,
	386, 387, 1144, 628, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 0, 0, 1151, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 1271, 0, 1277, 1276, 0, 0, 0, 0, 1274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 1282, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 1270, 623,
	624, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 1142,
	384, 625, 626, 0, 627, 0, 386, 387, 1144, 628,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	0, 0, 1151, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1277, 1276, 0,
	0, 0, 0, 1274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	1282, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 1142, 384, 625, 626, 0, 627, 0,
	386, 387, 1144, 628, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 0, 0, 1151, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 1277, 1967, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 1282, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 2007, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 1142, 384, 625,
	626, 0, 627, 0, 386, 387, 1144, 628, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 0, 0,
	1151, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 1277, 1276, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 1282, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 1142, 384, 625, 626, 0, 627, 0, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 0, 0, 1151, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 1277, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 1282, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	1142, 384, 625, 626, 0, 627, 0, 386, 387, 1144,
	628, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 0, 0, 1151, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 259, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 2698, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 2695, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 2702, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 2894, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	2701, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 2891, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 2893, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 2890, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 2700, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 2892, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 259, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	2698, 291, 292, 611, 0, 0, 2692, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 2695, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 2702, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 2701,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 2691, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 2700, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 2699, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 1665, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 1668, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 1666, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 1667, 594,
	596, 652, 1423, 0, 259, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 1425,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 1189, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 1420, 0,
	259, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 1422, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 1189, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 1328, 0, 259, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 1330, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 1189,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	685, 0, 259, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 684, 270, 271, 272, 674, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	677, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 678, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 679, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 673, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 674, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 677, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 678, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	679, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 259, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	1189, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 259, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 3300, 438, 0, 264, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	2840, 0, 259, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 2839, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	264, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 2212, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 259, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 2157, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 2163, 0, 259, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 2162, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 2150, 0, 259,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 2152, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 264, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 259, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 2121, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 1189, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 1519, 0, 259, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 1440, 0,
	259, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 1433, 0, 259, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 1435, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	1261, 0, 259, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 1260, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	264, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 1251, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 1250, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 1248, 0, 259, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 1247,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 1243, 0,
	259, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 1242, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 655, 0, 259, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	250, 0, 259, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	264, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 259, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	259, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 3640, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 3641, 438, 0, 0, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 3643, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 3644, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 3639, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 259,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 677, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 678, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 679, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 259, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 2249, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 259, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 2247, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 259, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	2245, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 259, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	2169, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 264, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 259, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 1986,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 259, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 1980, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 851, 0, 259,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 850, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 849, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 259, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 2894,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 3977, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 259, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 3887, 438, 0, 0, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	3889, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 742, 0, 259, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 1298, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	1296, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 743, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	739, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	1299, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 738, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 742, 0, 259,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 1298,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 1296, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	743, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 739, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 1299, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 738, 644,
	645, 646, 0, 580, 0, 572, 1297, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 664, 0, 259, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	663, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 662, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 259,
	2881, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 259, 3987, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 259, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 4236, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 259, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 4234, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	259, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	3680, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 259,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 2584, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 259, 2881, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 2878,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 259, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 2222, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 2210, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 742, 0, 259, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 732, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 743, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 739, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 1552, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 738, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 1525, 0,
	259, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 1524, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 1510, 0, 259, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 1508, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	1504, 0, 259, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 1481, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 1479, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 1442, 0, 259, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 1428, 0,
	259, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 1266, 0, 259, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 1265, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	1257, 0, 259, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 1256, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 259, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 1210, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	259, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 748, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 742, 0, 259, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 732, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 730, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 731, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 743, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 733, 516, 0, 517, 518, 524,
	525, 519, 520, 739, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 734, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 738, 644, 645, 646, 0,
	580, 0, 572, 736, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	724, 0, 259, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 725, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 687, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 681, 0, 259, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 659, 0,
	259, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 259,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 259, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 3389, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 259, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 3337, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 259, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 3271, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 259, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	3269, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 259, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 3254,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 259, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 2849, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 259, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 725, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 259, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 2186, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 0, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	259, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 1228, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 259,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 1162, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 259, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 0, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 0,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 0,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 0, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 1713, 1714, 0, 1746, 1747, 1748, 1756, 1757,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 1744, 0, 0, 0,
	0, 1713, 1714, 1716, 1746, 1747, 1748, 1756, 1757, 1758,
	0, 1762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1749, 1744, 0, 0, 0, 0,
	0, 0, 1716, 0, 0, 0, 0, 1715, 1713, 1714,
	1762, 1746, 1747, 1748, 1756, 1757, 1758, 1735, 0, 0,
	0, 0, 0, 0, 0, 0, 1732, 0, 0, 0,
	0, 1749, 1744, 0, 0, 0, 1715, 1713, 1714, 1716,
	1746, 1747, 1748, 1756, 1757, 1758, 1735, 1762, 0, 0,
	0, 0, 0, 0, 0, 1732, 0, 0, 0, 0,
	1749, 1744, 0, 0, 0, 0, 0, 0, 1716, 0,
	0, 0, 0, 1715, 0, 0, 1762, 0, 0, 0,
	0, 0, 0, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 1732, 0, 0, 0, 0, 0, 1738, 1739,
	1740, 1741, 1715, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 1735, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 0, 0, 1738, 1739, 1740,
	1741, 0, 0, 0, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 1753, 0, 0, 1763, 0, 0,
	0, 0, 0, 1743, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 1739, 1740, 1741, 0, 0,
	1759, 0, 1760, 1753, 1721, 0, 1763, 0, 0, 1730,
	1731, 0, 1743, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1738, 1739, 1740, 1741, 1751, 0, 1759,
	0, 1760, 0, 1721, 0, 0, 0, 0, 1730, 1731,
	1753, 0, 1736, 1763, 0, 0, 0, 0, 0, 1743,
	1745, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 1760, 1753,
	0, 1736, 1763, 0, 0, 1730, 1731, 0, 1743, 1745,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 1759, 0, 1760, 0, 0,
	0, 0, 1750, 0, 1730, 1731, 0, 0, 1736, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 0, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 1742, 0, 0, 1750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 1737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1742, 0, 0, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 1752,
	0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729,
	0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723,
	0, 0, 0, 0, 4336, 0, 0, 0, 1752, 0,
	0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729, 0,
	1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 0,
	0, 0, 0, 4332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1752, 0, 0, 0, 0,
	1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725,
	1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 0, 0,
	4256, 0, 0, 0, 1752, 0, 0, 0, 0, 1727,
	1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 0, 0, 1713, 1714, 4220,
	1746, 1747, 1748, 1756, 1757, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 1744, 0, 0, 0, 0, 1713, 1714, 1716, 1746,
	1747, 1748, 1756, 1757, 1758, 0, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1749,
	1744, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 1715, 1713, 1714, 1762, 1746, 1747, 1748, 1756,
	1757, 1758, 1735, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 0, 1749, 1744, 0, 0,
	0, 1715, 1713, 1714, 1716, 1746, 1747, 1748, 1756, 1757,
	1758, 1735, 1762, 0, 0, 0, 0, 0, 0, 0,
	1732, 0, 0, 0, 0, 1749, 1744, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 1715, 0,
	0, 1762, 0, 0, 0, 0, 0, 0, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 1732, 0, 0,
	0, 0, 0, 1738, 1739, 1740, 1741, 1715, 0, 0,
	0, 0, 0, 1721, 0, 0, 0, 1735, 0, 0,
	0, 0, 0, 0, 0, 0, 1732, 0, 0, 0,
	0, 0, 1738, 1739, 1740, 1741, 0, 0, 0, 0,
	0, 0, 1721, 0, 0, 0, 0, 0, 0, 1753,
	0, 0, 1763, 0, 0, 0, 0, 0, 1743, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1738,
	1739, 1740, 1741, 0, 0, 1759, 0, 1760, 1753, 1721,
	0, 1763, 0, 0, 1730, 1731, 0, 1743, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1738, 1739,
	1740, 1741, 1751, 0, 1759, 0, 1760, 0, 1721, 0,
	0, 0, 0, 1730, 1731, 1753, 0, 1736, 1763, 0,
	0, 0, 0, 0, 1743, 1745, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1759, 0, 1760, 1753, 0, 1736, 1763, 0, 0,
	1730, 1731, 0, 1743, 1745, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 1751, 0,
	1759, 0, 1760, 0, 0, 0, 0, 1750, 0, 1730,
	1731, 0, 0, 1736, 0, 0, 0, 0, 1761, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 1750, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 0, 0, 1750, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 1742,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 1737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1742, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 1752, 0, 0, 0, 0, 1727,
	1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 0, 0, 0, 0, 4219,
	0, 0, 0, 1752, 0, 0, 0, 0, 1727, 1728,
	1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718,
	1719, 1720, 1722, 1723, 0, 0, 0, 0, 4055, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1752, 0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733,
	1729, 0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722,
	1723, 0, 0, 0, 0, 3913, 0, 0, 0, 1752,
	0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729,
	0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723,
	0, 0, 1713, 1714, 3846, 1746, 1747, 1748, 1756, 1757,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 1744, 0, 0, 0,
	0, 1713, 1714, 1716, 1746, 1747, 1748, 1756, 1757, 1758,
	0, 1762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1749, 1744, 0, 0, 0, 0,
	0, 0, 1716, 0, 0, 0, 0, 1715, 1713, 1714,
	1762, 1746, 1747, 1748, 1756, 1757, 1758, 1735, 0, 0,
	0, 0, 0, 0, 0, 0, 1732, 0, 0, 0,
	0, 1749, 1744, 0, 0, 0, 1715, 1713, 1714, 1716,
	1746, 1747, 1748, 1756, 1757, 1758, 1735, 1762, 0, 0,
	0, 0, 0, 0, 0, 1732, 0, 0, 0, 0,
	1749, 1744, 0, 0, 0, 0, 0, 0, 1716, 0,
	0, 0, 0, 1715, 0, 0, 1762, 0, 0, 0,
	0, 0, 0, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 1732, 0, 0, 0, 0, 0, 1738, 1739,
	1740, 1741, 1715, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 1735, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 0, 0, 1738, 1739, 1740,
	1741, 0, 0, 0, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 1753, 0, 0, 1763, 0, 0,
	0, 0, 0, 1743, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 1739, 1740, 1741, 0, 0,
	1759, 0, 1760, 1753, 1721, 0, 1763, 0, 0, 1730,
	1731, 0, 1743, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1738, 1739, 1740, 1741, 1751, 0, 1759,
	0, 1760, 0, 1721, 0, 0, 0, 0, 1730, 1731,
	1753, 0, 1736, 1763, 0, 0, 0, 0, 0, 1743,
	1745, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 1760, 1753,
	0, 1736, 1763, 0, 0, 1730, 1731, 0, 1743, 1745,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 1759, 0, 1760, 0, 0,
	0, 0, 1750, 0, 1730, 1731, 0, 0, 1736, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 0, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 1742, 0, 0, 1750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 1737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1742, 0, 0, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 1752,
	0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729,
	0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723,
	0, 0, 0, 0, 3845, 0, 0, 0, 1752, 0,
	0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729, 0,
	1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 0,
	0, 0, 0, 3844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1752, 0, 0, 0, 0,
	1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725,
	1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 0, 0,
	3528, 0, 0, 0, 1752, 0, 0, 0, 0, 1727,
	1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 0, 0, 1713, 1714, 3045,
	1746, 1747, 1748, 1756, 1757, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 1744, 0, 0, 0, 0, 1713, 1714, 1716, 1746,
	1747, 1748, 1756, 1757, 1758, 0, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1749,
	1744, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 1715, 1713, 1714, 1762, 1746, 1747, 1748, 1756,
	1757, 1758, 1735, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 0, 1749, 1744, 0, 0,
	0, 1715, 1713, 1714, 1716, 1746, 1747, 1748, 1756, 1757,
	1758, 1735, 1762, 0, 0, 0, 0, 0, 0, 0,
	1732, 0, 0, 0, 0, 1749, 1744, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 1715, 0,
	0, 1762, 0, 0, 0, 0, 0, 0, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 1732, 0, 0,
	0, 0, 0, 1738, 1739, 1740, 1741, 1715, 0, 0,
	0, 0, 0, 1721, 0, 0, 0, 1735, 0, 0,
	0, 0, 0, 0, 0, 0, 1732, 0, 0, 0,
	0, 0, 1738, 1739, 1740, 1741, 0, 0, 0, 0,
	0, 0, 1721, 0, 0, 0, 0, 0, 0, 1753,
	0, 0, 1763, 0, 0, 0, 0, 0, 1743, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1738,
	1739, 1740, 1741, 0, 0, 1759, 0, 1760, 1753, 1721,
	0, 1763, 0, 0, 1730, 1731, 0, 1743, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1738, 1739,
	1740, 1741, 1751, 0, 1759, 0, 1760, 0, 1721, 0,
	0, 0, 0, 1730, 1731, 1753, 0, 1736, 1763, 0,
	0, 0, 0, 0, 1743, 1745, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1759, 0, 1760, 1753, 0, 1736, 1763, 0, 0,
	1730, 1731, 0, 1743, 1745, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 1751, 0,
	1759, 0, 1760, 0, 0, 0, 0, 1750, 0, 1730,
	1731, 0, 0, 1736, 0, 0, 0, 0, 1761, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 1750, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 0, 0, 1750, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 1742,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 1737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1742, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 1752, 0, 0, 0, 0, 1727,
	1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 0, 0, 0, 0, 3044,
	0, 0, 0, 1752, 0, 0, 0, 0, 1727, 1728,
	1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718,
	1719, 1720, 1722, 1723, 0, 0, 0, 0, 3043, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1752, 0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733,
	1729, 0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722,
	1723, 0, 0, 0, 0, 3042, 0, 0, 0, 1752,
	0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729,
	0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723,
	1713, 1714, 3009, 1746, 1747, 1748, 1756, 1757, 1758, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1749, 1744, 0, 0, 0, 0, 1713,
	1714, 1716, 1746, 1747, 1748, 1756, 1757, 1758, 0, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 1744, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 1715, 0, 0, 1762, 0,
	0, 0, 0, 0, 0, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 1732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1715, 1713, 1714, 0, 1746, 1747,
	1748, 1756, 1757, 1758, 1735, 0, 0, 0, 0, 0,
	0, 0, 0, 1732, 0, 0, 0, 0, 1749, 1744,
	0, 0, 0, 0, 2980, 0, 1716, 0, 0, 0,
	0, 0, 0, 0, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 1739, 1740, 1741,
	1715, 0, 0, 0, 0, 0, 1721, 4470, 0, 0,
	1735, 0, 0, 0, 0, 0, 0, 0, 0, 1732,
	0, 0, 0, 0, 0, 1738, 1739, 1740, 1741, 0,
	0, 0, 0, 0, 0, 1721, 0, 3129, 0, 0,
	3128, 0, 1753, 0, 0, 1763, 0, 0, 0, 0,
	0, 1743, 1745, 0, 0, 2981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	1760, 1753, 0, 0, 1763, 0, 0, 1730, 1731, 0,
	1743, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 1739, 1740, 1741, 1751, 0, 1759, 0, 1760,
	0, 1721, 0, 0, 0, 0, 1730, 1731, 0, 0,
	1736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1753, 0, 1736,
	1763, 0, 0, 0, 0, 0, 1743, 1745, 0, 0,
	0, 0, 1761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1759, 0, 1760, 0, 0, 0, 0,
	1750, 0, 1730, 1731, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 1750,
	0, 0, 4469, 0, 0, 1736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1761, 0, 0,
	0, 0, 0, 1737, 0, 0, 0, 0, 0, 0,
	0, 0, 1742, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1754,
	0, 0, 1737, 0, 2557, 0, 0, 0, 0, 0,
	0, 1713, 1714, 0, 1746, 1747, 1748, 1756, 1757, 1758,
	0, 0, 0, 0, 0, 0, 0, 0, 1754, 0,
	0, 0, 0, 0, 1749, 1744, 0, 0, 0, 2556,
	0, 0, 1716, 0, 0, 0, 0, 0, 1742, 0,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1737, 0,
	0, 0, 0, 0, 0, 0, 1715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1735, 0, 0, 0,
	0, 0, 0, 0, 1754, 1732, 0, 1752, 0, 0,
	0, 0, 1727, 1728, 1734, 1755, 1733, 1729, 0, 1726,
	1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 0, 0,
	0, 0, 0, 0, 0, 0, 1752, 0, 0, 0,
	0, 1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724,
	1725, 1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1713, 1714, 0, 1746,
	1747, 1748, 1756, 1757, 1758, 0, 0, 1738, 1739, 1740,
	1741, 0, 0, 0, 0, 0, 0, 1721, 0, 1749,
	1744, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 1752, 0, 0, 1762, 0, 1727, 1728, 1734,
	1755, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718, 1719,
	1720, 1722, 1723, 1753, 0, 0, 1763, 0, 0, 0,
	0, 1715, 1743, 1745, 0, 0, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 1759,
	1732, 1760, 0, 0, 0, 0, 0, 0, 1730, 1731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1738, 1739, 1740, 1741, 0, 0, 0, 0,
	0, 0, 1721, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 1763, 0, 0, 0, 0, 0, 1743, 1745, 0,
	0, 0, 0, 0, 1713, 1714, 0, 1746, 1747, 1748,
	1756, 1757, 1758, 0, 1759, 0, 1760, 0, 0, 0,
	0, 0, 0, 1730, 1731, 0, 0, 1749, 1744, 0,
	0, 0, 0, 0, 1742, 1716, 0, 0, 0, 0,
	0, 1751, 0, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1737, 0, 1736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1735,
	1754, 0, 0, 0, 0, 0, 0, 0, 1732, 1713,
	1714, 0, 1746, 1747, 1748, 1756, 1757, 1758, 1761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 1744, 0, 0, 1750, 1018, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1715, 0, 0, 0, 0, 0,
	1738, 1739, 1740, 1741, 1735, 0, 0, 0, 0, 0,
	1721, 0, 0, 1732, 0, 0, 0, 0, 1752, 1742,
	0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729, 0,
	1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 1737,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 1763,
	0, 0, 0, 0, 0, 1743, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 1759, 0, 1760, 0, 0, 0, 0, 0,
	0, 1730, 1731, 0, 0, 1738, 1739, 1740, 1741, 0,
	0, 0, 0, 0, 0, 1721, 0, 0, 0, 1751,
	3135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1753, 0, 0, 1763, 0, 0, 0, 0, 0,
	1743, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 1759, 0, 1760,
	0, 0, 0, 1752, 0, 0, 1730, 1731, 1727, 1728,
	1734, 1755, 1733, 1729, 1750, 1726, 1724, 1725, 1717, 1718,
	1719, 1720, 1722, 1723, 1751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	1713, 1714, 0, 1746, 1747, 1748, 1756, 1757, 1758, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1749, 1744, 0, 0, 0, 3130, 0,
	0, 1716, 0, 0, 0, 0, 0, 1742, 0, 1762,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1737, 0, 1750,
	0, 0, 0, 0, 0, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1735, 0, 0, 0, 0,
	0, 0, 0, 1754, 1732, 0, 1713, 1714, 0, 1746,
	1747, 1748, 1756, 1757, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1749,
	1744, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 1742, 0, 3509, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1737, 0, 0, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 1738, 1739, 1740, 1741,
	0, 1735, 0, 0, 0, 0, 1721, 0, 1754, 0,
	1732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1752, 0, 0, 0, 0, 1727, 1728, 1734, 1755,
	1733, 1729, 0, 1726, 1724, 1725, 1717, 1718, 1719, 1720,
	1722, 1723, 1753, 0, 0, 1763, 0, 0, 0, 0,
	0, 1743, 1745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	1760, 0, 0, 0, 0, 0, 0, 1730, 1731, 0,
	0, 0, 1738, 1739, 1740, 1741, 0, 0, 0, 0,
	0, 0, 1721, 0, 0, 1751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1752, 0, 0, 0,
	1736, 1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724,
	1725, 1717, 1718, 1719, 1720, 1722, 1723, 0, 1753, 0,
	0, 1763, 0, 0, 0, 0, 0, 1743, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 0, 1759, 0, 1760, 0, 0, 0,
	0, 0, 0, 1730, 1731, 0, 0, 0, 0, 0,
	1750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1736, 1713, 1714, 0,
	1746, 1747, 1748, 1756, 1757, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 1744, 0, 0, 0, 3046, 0, 0, 1716, 0,
	0, 0, 0, 1742, 0, 0, 1762, 0, 1761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1737, 0, 0, 1750, 0, 0, 0,
	0, 0, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1735, 0, 0, 0, 3097, 0, 0, 1754,
	0, 1732, 1713, 1714, 0, 1746, 1747, 1748, 1756, 1757,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 1744, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 1742,
	0, 1762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1737,
	0, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 1738, 1739, 1740, 1741, 1735, 0, 0,
	0, 0, 0, 1721, 0, 1754, 1732, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1752, 0, 0,
	0, 0, 1727, 1728, 1734, 1755, 1733, 1729, 0, 1726,
	1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 0, 1753,
	0, 0, 1763, 0, 0, 0, 0, 0, 1743, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1759, 0, 1760, 0, 0,
	0, 0, 0, 0, 1730, 1731, 0, 0, 1738, 1739,
	1740, 1741, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1752, 0, 0, 0, 1736, 1727, 1728,
	1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718,
	1719, 1720, 1722, 1723, 1753, 0, 0, 1763, 0, 0,
	0, 0, 0, 1743, 1745, 0, 0, 0, 0, 0,
	1713, 1714, 0, 1746, 1747, 1748, 1756, 1757, 1758, 1761,
	1759, 0, 1760, 0, 0, 0, 0, 0, 0, 1730,
	1731, 0, 0, 1749, 1744, 0, 0, 1750, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 1751, 0, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 1732, 0, 0, 0, 0, 0,
	1742, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1737, 0, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 1713, 1714, 0, 1746, 1747,
	1748, 1756, 1757, 1758, 0, 0, 1738, 1739, 1740, 1741,
	0, 0, 0, 0, 0, 0, 1721, 0, 0, 1744,
	0, 0, 0, 0, 0, 1742, 1716, 0, 0, 0,
	0, 0, 0, 0, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 1763, 0, 0, 0, 0,
	1715, 1743, 1745, 0, 0, 0, 0, 0, 0, 0,
	1735, 1754, 0, 0, 0, 0, 0, 0, 1759, 1732,
	1760, 0, 0, 0, 1752, 0, 0, 1730, 1731, 1727,
	1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 1751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 1739, 1740, 1741, 0, 0, 0, 0, 0,
	0, 1721, 1761, 0, 0, 0, 0, 0, 0, 1752,
	0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729,
	0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723,
	0, 0, 0, 0, 0, 0, 0, 1753, 0, 0,
	1763, 0, 0, 0, 0, 0, 1743, 1745, 0, 0,
	0, 0, 0, 909, 0, 955, 0, 0, 0, 0,
	0, 0, 0, 1759, 0, 1760, 0, 0, 0, 0,
	0, 0, 1730, 1731, 0, 0, 0, 0, 0, 0,
	917, 0, 0, 1742, 0, 0, 0, 0, 0, 0,
	1751, 0, 0, 0, 0, 0, 931, 915, 914, 0,
	0, 0, 0, 1737, 0, 1736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 916, 0, 0, 0, 1754,
	919, 0, 0, 0, 0, 963, 0, 0, 0, 0,
	0, 0, 0, 0, 928, 929, 0, 1761, 0, 0,
	0, 0, 0, 945, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 956,
	921, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 922, 0, 0, 0,
	0, 0, 0, 0, 0, 954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1752, 1742, 0,
	0, 0, 1727, 1728, 1734, 1755, 1733, 1729, 0, 1726,
	1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 1737, 924,
	0, 0, 0, 0, 0, 0, 0, 913, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 925, 926, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 933, 932, 0, 0, 0, 0,
	0, 0, 927, 0, 0, 0, 942, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 960, 953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 957, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1752, 0, 0, 0, 0, 1727, 1728, 1734,
	1755, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718, 1719,
	1720, 1722, 1723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 920, 0, 0,
	962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 918, 0, 0, 0, 949, 950, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	947, 0, 0, 0, 0, 0, 0, 961, 943, 0,
	936, 934, 0, 939, 0, 0, 0, 0, 0, 940,
	0, 0, 911, 0, 958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 912, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 951, 0, 941, 0,
	0, 0, 0, 938, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 959, 0, 0, 0, 0, 0,
	0, 0, 944, 0, 0, 0, 0, 0, 0, 0,
	0, 923, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 946, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 948,
}

var sqlPact = [...]int{
	8514, -1000, -1000, -1000, -1000, 241, -1000, -1000, 240, 235,
	212, 209, 208, 204, 203, 202, 200, 197, 192, -1000,
	-1000, -1000, -1000, -1000, -1000, 191, -1000, -1000, 190, -1000,
	188, 187, 186, -1000, -1000, 183, -1000, 178, -1000, -1000,
	-1000, -1000, 177, 176, 175, 85878, 85342, 86407, 2137, 107186,
	93841, 1850, 76794, 106650, 76258, 106114, 1968, 9567, 105578, 2594,
	174, -1000, 105042, 172, 171, 163, -1000, 104506, -1000, 1871,
	-1000, 160, 5614, 61773, 159, 157, 155, 2310, 154, -1000,
	153, 151, 150, -1000, 13160, 1577, -1000, 149, 145, -1000,
	278, 91175, 138, 133, 2219, 132, 130, 61237, 129, 122,
	2168, 2697, -1000, -1000, 1942, -1000, -1000, 121, 120, 119,
	118, 117, 114, 111, 110, 109, 106, 105, -1000, 104,
	103, 101, 100, 96, -1000, 95, 94, 92, -1000, 91,
	-1000, 89, 88, 87, 86, 85, 84, 79, 78, 77,
	75, 74, 73, 72, -1000, 118891, -1000, 1650, 1624, 1620,
	1618, 1617, 1613, 1009, 71, 70, 69, 68, 63, 59,
	58, 57, 51, -1000, 49, 48, 44, 41, 40, 38,
	37, 32, 161, 31, 25, 23, 18, 17, 14, 13,
	3066, -1000, 1443, 870, 28447, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 113005, 107715,
	12, -97, 3, -1000, 3151, 1004, 51021, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 329, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 564, 1856, 788, -1000,
	-1000, -1000, 103977, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2134, -55, -1000, 1882, -1000, -1000, -1000, -1000, -1000,
	783, -1000, 2129, 314, 2064, -1000, -1000, -1000, 3176, 2302,
	3601, 3600, 3599, 3597, 3595, 112476, 1684, 3594, 2384, 3593,
	3591, 3590, 3589, 3587, 3585, 3582, -1000, 84806, 1031, 84270,
	83734, 3208, 103448, 83198, 102912, 70379, 43249, 862, 3173, -1000,
	-1000, -1000, -1000, -1000, -1000, 107715, -1000, 1030, -1000, -1000,
	3581, 3580, 1939, 778, 93305, -1000, 1802, -1000, 960, 30130,
	-1000, 1275, -1000, 30130, 328, -1000, -1000, -1000, -1000, -1000,
	-1000, 3579, 3577, 3576, 3575, 3574, -1000, -1000, 75722, 21663,
	75186, 74650, 102376, 21117, 82662, 82126, 101840, 69833, 1029, 1377,
	-1000, -1000, -1000, -1000, -1000, -1000, -20, 67649, 3359, 107715,
	-1000, 327, -1000, -1000, -1000, -1000, -1000, -1000, 42676, 835,
	42103, 772, 41530, 633, -1000, -1000, -1000, -1000, 69287, -1000,
	101304, 2299, 3571, 3570, 1101, 3569, 3058, 1683, 3559, 1740,
	1181, 3552, 3551, 3549, 3546, 3545, 3544, 3543, 1332, 100768,
	2775, 100232, 1636, 68741, 1028, 81590, 86407, 2463, 99696, 1308,
	1290, -1000, -1000, -1000, -1000, 2953, 2694, 2681, 1351, -1000,
	-1000, -1000, -1000, 53695, 9031, 8808, 10484, 99160, 55903, 86407,
	86407, -1000, -1000, -1000, -1000, -1000, 40957, 531, 40384, 845,
	-1000, -1000, 54247, 2729, -1000, -1000, -1000, -1000, 39811, 295,
	39238, 837, 107715, -1000, 2771, 1865, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2175, 1583, 3357, 2556, 68195, 1944, 1432, 3144, 2950,
	2945, 1524, 2911, 3540, 2411, 2904, 2902, 2900, 2895, 2884,
	1451, 2412, 276, 27874, 2762, 1584, 38665, 1455, 1519, 2879,
	2864, 3387, 1852, 1886, 1892, 74114, 3539, 3537, 3116, 2863,
	2850, 2622, 2839, -1000, 2727, -1000, -1000, -1000, -1000, 1494,
	-1000, -1000, -1000, -1000, 77323, -1000, -1000, 1304, -1000, -1000,
	1304, -1000, -1000, -1000, -1000, -1000, 1189, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1443, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1952,
	-1000, 1902, -1000, -1000, 2368, 3054, 3054, 3054, 3169, 535,
	510, -1000, 161, -1000, -1000, 118301, -1000, -1000, 43810, 43810,
	43810, 43810, 43810, 43810, 43810, 1974, -1000, 777, -1000, -1000,
	836, -1000, 776, 660, -1000, -1000, -1000, -1000, -1000, -1000,
	775, -1000, -1000, -1000, -1000, -1000, -1000, 3359, -1000, 24448,
	-1000, -1000, -1000, 568, 773, 43810, -1000, -1000, 3398, 3397,
	847, -1000, 324, 975, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2770, 770, 767, -1000,
	765, 763, 761, 760, 759, -1000, -1000, -1000, 756, 755,
	753, 752, 740, 737, 736, 733, -1000, 1897, -1000, -1000,
	-1000, -1000, -1000, -1000, 694, 692, 692, 692, -1000, 1024,
	-1000, -1000, -1000, 435, 691, 342, 690, 689, 687, -1000,
	729, 728, 725, 724, 722, 719, 718, 717, 713, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1021, -1000, -1000, -1000,
	-1000, -21, 107715, -1000, 564, -21, -1000, -1000, 712, -1000,
	32386, 32386, 32386, -1000, -1000, 2125, 43810, -1000, 2391, -1000,
	-15, -15, 875, 52623, -1000, 49949, 875, 262, 848, 57507,
	-1000, 2719, -1000, -1000, 711, 320, -1000, -1000, -1000, -1000,
	22207, 2710, 107715, 107715, 86407, 86407, 86407, 2951, 43810, -1000,
	-1000, 65496, 107715, 87465, -1000, -1000, 3301, 62302, 64967, 107715,
	2769, 64438, 3535, -1000, -1000, -1000, -1000, -1000, 2926, 3534,
	3532, 3531, -1000, 107715, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 217, 2925, -1000, -1000, 90639, 217, 2924, -1000, 217,
	2921, -1000, 90110, -1000, -1000, 2076, 2919, -1000, -1000, 219,
	2917, -1000, -1000, -1000, 218, 2912, -1000, -1000, 319, -112,
	2910, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 118301, -1000, -1000, -1000, 63902, -1000, 3112,
	-1000, -1000, 107715, -1000, 43810, -1000, 3300, 1659, 71457, 3238,
	-45, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2367, 2323,
	1155, 2166, -1000, 2964, 1306, -1000, 30130, 3047, -1000, -1000,
	-1000, 291, 22207, -1000, -1000, -1000, -1000, -1000, -1000, 4743,
	2909, 1338, -1000, 2162, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1640, 2908, -1000, 2217, 2906, 1627, -1000, -1000, 2470,
	-1000, 3086, -1000, -1000, 2061, 2905, -14, -1000, -1000, 2080,
	-1000, 1824, -1000, 994, 2892, -1000, 81054, 55351, 54247, 67649,
	-25, -1000, -1000, -1000, -1000, -183, -1000, 20571, 118301, -1000,
	-1000, -1000, -1000, 1671, 118301, 952, -1000, -1000, 2888, -1000,
	118301, 951, -1000, -1000, 2886, -1000, 2766, -1000, -1000, 2263,
	-1000, -1000, 3529, -1000, -1000, 3526, -1000, 3525, 3522, 3520,
	-1000, 1607, 1878, 3518, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 80525, 2124, -1000, -1000, 79453, -1000, 2261, 3214,
	-1000, 79989, 1027, -1000, 994, 2259, -1000, 89581, 1052, -1000,
	3516, 3206, 2509, 994, 2257, -1000, -1000, -1000, -1000, -1000,
	828, -1000, 59104, -1000, 59104, -1000, 1492, -1000, 111947, -15,
	86407, 3359, -1000, -53, -1000, -1000, -1000, 1004, -1000, 53159,
	-1000, 53159, 92769, 70923, 978, 784, 60701, 118301, -1000, -1000,
	-1000, -1000, 118301, -1000, -1000, -1000, -231, -1000, -1000, 70923,
	54247, 118301, -1000, -1000, -1000, -1000, 118301, -1000, -1000, -1000,
	70923, 79453, -1000, 98624, 78924, -1000, -1000, 1325, 2415, -1000,
	-1000, -1000, 70923, 1309, 70923, 70923, 70923, -1000, 98088, -1000,
	-1000, 1908, 1387, 3101, 1893, 86407, -1000, 1787, -1000, -1000,
	-1000, 3127, 107715, -1000, -1000, 2763, -1000, 63366, 89052, -1000,
	88523, -1000, 87994, -1000, 86407, -1000, 86407, -1000, 3514, 3512,
	3511, 3506, -1000, 3504, 3121, -1000, 118301, 3103, -1000, 3502,
	3201, 2762, 118301, -1000, 2962, 1628, 1626, 107715, -1000, -1000,
	107715, -1000, 107715, -1000, -1000, -1000, 1409, -1000, -1000, 2366,
	-1000, -1000, -1000, -1000, 86407, -1000, -1000, -1000, -1000, -1000,
	-1000, 2761, -1000, 1656, -1000, 1781, -1000, 2708, 3174, -1000,
	1321, -1000, -1000, 230, -1000, -1000, -45, -1000, 111418, -1000,
	2368, -1000, 107715, -1000, 2320, 2745, 2759, 1403, 2150, 2441,
	-1000, 38092, 2428, 47176, 2161, 161, -1000, -1000, 161, 161,
	29569, -1000, -1000, 62302, 62302, 22207, 1200, 43810, 43810, 43810,
	43810, 43810, 43810, 43810, 43810, 43810, 43810, 43810, 43810, 43810,
	43810, 43810, 43810, 43810, 43810, 43810, 43810, 43810, 43810, 43810,
	43810, 43810, 43810, 43810, 43810, 43810, 43810, 43810, 43810, 43810,
	43810, 43810, 2059, 43810, 1188, 43810, 43810, 43810, 43810, 2290,
	-1000, -1000, 1821, 606, 1903, -1000, 3342, 3342, 3342, 661,
	661, 118664, 118664, 623, 3501, 836, -1000, 43810, -1000, 53,
	43810, 22753, -1000, 510, 7821, 2280, -1000, 506, 23326, -1000,
	-1000, -1000, 24448, 660, 37519, 43810, 1017, 118301, -1000, -1000,
	1477, 3367, 20026, 2785, 2615, 710, 868, 854, 27301, 26728,
	26155, 25582, 849, 43810, 43810, 43810, 43810, 43810, 43810, 43810,
	43810, -1000, -1000, 3371, -1000, 3367, -1000, -1000, -1000, -1000,
	3367, 1194, 1185, 3367, -1000, 3367, 3367, 9840, 9840, 36958,
	36385, 35812, 47737, 35239, 43810, 25009, 34666, 34093, -1000, 107715,
	-21, 3299, 43810, 277, -1000, 117140, -1000, 277, 277, 706,
	-54, 118301, 2406, 2406, 51555, 1972, 1949, 1949, 1949, -1000,
	875, 15637, 875, 97025, 2019, 875, 875, 279, 316, 505,
	49415, 2391, 97025, 812, 702, -3, -4, -5, -1000, -1000,
	-6, -12, -1000, -1000, 86407, 700, 22753, 22207, 269, 1405,
	-59, 2443, 2436, 2435, -1000, 2432, 1633, -60, 1184, 86407,
	107715, -145, -1000, 4508, -61, -1000, 1346, 266, 3367, -1000,
	-1000, -1000, -1000, -1000, 3500, 3499, -1000, 1013, 698, 696,
	433, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 694,
	692, 692, 692, -1000, 435, 691, 342, 690, 689, 687,
	-1000, -1000, -1000, -1000, -1000, 2690, 86407, 107715, -183, 87465,
	-110, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 107715,
	-1000, -1000, -1000, 3498, -1000, 86407, -1000, -1000, 86407, 217,
	2880, -1000, 86407, -1000, 86407, 211, 2878, -1000, -1000, 107715,
	-1000, 86407, 86407, -1000, 107715, 107715, 107715, 70923, 70923, 220,
	-1000, 86407, 919, -62, 1106, -45, -1000, -1000, -1000, 1304,
	-1000, 2009, -1000, -1000, -1000, -1000, -1000, -1000, 1344, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 847, -1000, -1000,
	-1000, -1000, -1000, -1000, 3353, 3348, -22, -1000, -1000, 22207,
	-1000, -46, 1556, 2146, -1000, 73578, 2304, 3099, 3496, 2484,
	3071, 1491, -1000, 1399, 1182, 3166, 77323, 3270, 3274, 715,
	-1000, 2689, -1000, -1000, 958, 1652, 1591, 1179, 77323, 2217,
	-1000, 62302, -1000, 2514, 3165, 1407, 1413, 1407, 1407, 1397,
	-1000, 77323, 1590, 1178, 1177, 1827, 1826, -1000, -1000, -1000,
	1176, 1171, 874, 1819, -1000, -48, 3264, 3273, 45, -1000,
	2686, 1167, -1000, -1000, 86407, 22207, 1537, 1565, 1589, 1165,
	-24, -1000, 3255, 3254, 1163, 1162, -1000, 6179, -1000, 70923,
	1547, 2873, 2553, 935, 2552, -1000, -1000, 935, -25, 67649,
	107715, 258, -1000, 53, 43810, 43810, 53, 43810, 53, 3196,
	2872, -1000, -1000, -1000, -1000, -1000, 3495, 1840, 2383, -1000,
	-1000, 686, 2255, 2685, 107715, 2450, -32, 86407, -1000, 2862,
	66032, 2217, 2249, -1000, -1000, 78388, -1000, 2857, 564, 2237,
	-1000, 697, 3489, -1000, 110889, -1000, 3112, 1213, 2856, 1059,
	534, 3291, -1000, 534, 59633, -1000, 107715, -1000, -15, 7103,
	72520, -69, -70, 501, -1000, 97559, 107715, 1058, 73049, 107715,
	3037, 991, 54247, -1000, -76, -231, 2551, 978, 978, 935,
	-1000, 935, -1000, 86407, 2757, -1000, -1000, 70923, 978, 978,
	978, -1000, -1000, -1000, -1000, 3488, 3483, 3482, -1000, -1000,
	-1000, 993, 86407, 107715, 86407, -1000, 257, -1000, 107715, -1000,
	107715, 107715, 86407, -1000, 993, 107715, 993, 107715, 993, 107715,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 53, 43810, -1000,
	-1000, 3481, 1518, -1000, 2755, -1000, 2753, -1000, 27, -1000,
	-1000, -1000, -1000, -1000, 1793, 86407, 86407, 86407, 86407, 107715,
	2981, -1000, 107715, 2978, 86407, -1000, 77323, -1000, 2320, 2745,
	-1000, -1000, -1000, -1000, -1000, -1000, 1349, 2070, -1000, 2410,
	-1000, 1438, -1000, -1000, -1000, 118301, 48298, -1000, -1000, 118301,
	1730, -1000, 46615, 46054, -1000, -1000, 1550, 86407, 2457, -1000,
	2457, -174, -1000, 116784, 2409, 86407, -1000, -1000, -1000, -1000,
	-1000, 957, 1292, 1292, 1265, 1265, 1265, 1265, 3258, 434,
	579, 387, 5603, 5603, 315, 315, 315, 315, 315, 5603,
	460, 661, 661, 460, 460, 460, 460, 460, 661, 661,
	661, 5603, 5603, 5603, 118664, 118519, 8422, 43810, 43810, 1160,
	1813, 606, 7228, 43810, 9062, 9062, 9062, 9062, -1000, 1934,
	-1000, -1000, -1000, -1000, 2682, 683, 47737, 47737, -1000, -1000,
	-1000, -1000, 23887, 43810, -1000, -1000, -1000, -1000, 33520, -1000,
	-1000, 116131, -314, 500, -173, -38, -1000, 43810, 43810, 43810,
	498, -1000, 256, 43810, 107715, -1000, 15009, 811, -137, -1000,
	-79, 1404, -1000, 43810, -1000, -1000, 1159, -1000, 1158, 1154,
	1153, -1000, 679, 497, -1000, 253, -1000, 1973, 678, 677,
	43810, -1000, -1000, -1000, -1000, -1000, 116102, -1000, -1000, 116065,
	-1000, -1000, 116036, -1000, -1000, 115476, -1000, -1000, -1000, 118216,
	14864, 14440, 14273, 7398, 13833, 13206, -86, 495, -87, 494,
	946, 944, 490, 489, 486, -100, -1000, 3477, 3475, 3474,
	-1000, 3473, 3472, 3471, -1000, 3468, 3467, 3465, -1000, 3463,
	3462, 3461, -1000, 3458, 3457, 3454, -1000, 3451, 3448, 3447,
	-1000, 3446, 3445, 3444, -1000, 3443, 3442, 3441, -107, 485,
	-1000, 2678, -173, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 484, -1000, 476, -1000, 117945, -173, 474, 6183, -1000,
	47737, 47737, 47737, -1000, 473, -1000, 116718, -1000, 117859, 32959,
	32959, 32959, 469, 117588, 43810, -173, -109, -1000, -115, -1000,
	-1000, 540, -116, 1008, 32386, 50485, 22207, -1000, 1008, 1008,
	43810, -1000, 43810, 2424, -1000, -1000, -1000, -1000, 2421, 1771,
	2406, 51555, -1000, -1000, -1000, -1000, 97025, -1000, 3359, 2541,
	-1000, 97025, -1000, -1000, 107715, 564, -1000, 97025, 97025, 22207,
	875, -1000, 875, 97025, 821, -1000, -1000, -1000, -1000, -1000,
	468, 56437, -38, 247, 22207, 994, -1000, 2506, 2506, 2506,
	2506, -1000, -1000, 107715, 1151, -36, -204, 3324, -1000, 1911,
	-1000, 62302, -1000, 834, 1096, 22207, -1000, -1000, -1000, 675,
	-1000, 3367, 3367, -1000, 3367, 107715, 2675, 245, 141, 66032,
	66032, 3438, -1000, -1000, 217, -1000, 86407, 217, 217, -1000,
	86407, 86407, 2076, -1000, 219, -1000, 218, -1000, -1000, -112,
	-1000, 1001, 30130, -1000, 1304, -1000, -1000, 1511, -1000, 1846,
	-1000, 1161, -1000, -1000, -1000, -1000, 30130, -1000, 2220, 107715,
	107715, 86407, -1000, 107715, -1000, 1986, 3321, 1815, 2354, 2352,
	-1000, 2231, 110360, 2223, 62302, 107715, -1000, -1000, 674, 973,
	2408, 2407, 1053, 107715, 107715, 2405, 109831, 109302, -1000, 3437,
	107715, 1900, 43810, 66032, 2177, 4462, 53, 53, -1000, -1000,
	53, 672, 1280, 86407, 86407, 107715, 86407, 1544, -1000, -1000,
	-1000, -1000, -1000, 77852, -1000, -1000, 3370, 3369, -1000, 1407,
	-1000, -1000, -1000, 1407, 2217, 1542, 107715, 86407, 66032, 107715,
	107715, 1588, 107715, 1094, -1000, 874, 1922, 53, 53, -1000,
	-1000, 53, 671, 22207, 1795, -1000, 2752, 107715, 3396, 107715,
	107715, 107715, 66032, 3115, 108773, 107715, 107715, 66032, 6179, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	67120, 1056, 994, 1582, 1147, 77323, 54247, 988, 54247, 2518,
	-1000, -1000, 19481, -1000, 118301, 118301, -1000, 118301, -1000, 62837,
	107715, -1000, 1026, 107715, 73049, 972, 2851, 58575, -183, 978,
	70923, 86407, -32, 107715, -1000, -1000, 2217, 2848, 564, 2227,
	-1000, 70923, 3290, 2847, 667, 3436, 3435, -1000, 2123, 2225,
	-1000, -1000, 108244, 2937, 874, 107715, 1008, 51555, 1769, -1000,
	56973, 1038, 107715, 1711, 97, -1000, -1000, -1000, 10, 107715,
	-1000, 843, -1000, -1000, 7103, 7103, 978, -255, 664, -1000,
	927, 926, 54799, 70923, -117, -1000, -1000, -1000, -1000, 2223,
	86407, 107715, 1288, 2504, 107715, -123, -1000, 231, 663, -1000,
	2820, -1000, -1000, 991, 54247, 2672, -1000, -1000, 999, -1000,
	1222, 978, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -16, 107715, -183, -183, -35, -36, -1000, 993,
	-1000, 993, -1000, 993, -1000, 118301, -1000, -1000, 1510, 1509,
	107715, -1000, 22207, 107715, 86407, 22207, 86407, 2744, 2684, -1000,
	-1000, -1000, 107715, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1070, -1000, 1730, 2069, -1000, 660, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2329, -1000, -37, 29569, 940,
	-1000, -1000, 86407, -17, 43810, 43810, 6476, 6261, 43810, 47737,
	47737, -1000, 43810, 6224, -1000, -1000, -1000, -1000, -1000, 2669,
	658, 43810, 62302, 6115, 4719, -1000, 466, 12567, 460, -1000,
	43810, -1000, 465, 31825, -1000, 117285, -68, -124, -1000, 16195,
	-173, -125, -1000, -1000, 826, -1000, 2870, -1000, 43810, 117503,
	2248, 1932, 1709, 1527, 3367, 3395, 18936, -1000, 60167, 1010,
	2024, 115447, -1000, -1000, -1000, -1000, 62302, 62302, 43810, 43810,
	-1000, 43810, 43810, 43810, -1000, -1000, -1000, 3367, 945, -1000,
	-1000, -1000, 945, -1000, -1000, 1407, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1407, -1000, 43810, -1000, -1000, 2667, 43810, -1000, 62302,
	62302, 47737, 47737, 47737, 47737, 47737, 47737, 47737, 47737, 47737,
	47737, 47737, 47737, 47737, 47737, 47737, 47737, 47737, 47737, 47737,
	2349, 47737, 3340, 3340, 3340, -1000, 2659, 2667, 43810, 43810,
	62302, 464, 463, 446, -1000, 43810, -173, -1000, -1000, 7103,
	651, -1000, 2312, -1000, 2597, -1000, 43810, -1000, -180, -1000,
	2391, -1000, -1000, 2597, 2597, -130, 118301, 51555, 51555, -1000,
	649, 43810, 2420, -1000, -1000, 808, -310, -1000, 925, -1000,
	-1000, -1000, -1000, -1000, 564, -1000, -1000, -1000, 162, 97025,
	97025, 806, -1000, -138, -1000, -1000, -147, -1000, 3289, 438,
	22207, -1000, 1008, 3034, -1000, -1000, -1000, -1000, -1000, -1000,
	-183, 107715, 107715, 2062, 3392, -1000, 3368, 823, 800, 46,
	3367, 437, 436, 431, -183, 107715, 107715, 107715, -1000, -1000,
	-1000, -1000, 217, -1000, -1000, -1000, 211, -1000, -1000, -1000,
	-1000, 2477, -1000, -45, -1000, -1000, -1000, 43810, -1000, -1000,
	3085, 1146, 1145, -1000, -1000, -1000, -1000, 3164, 86936, 3320,
	1814, 1810, 2845, -1000, 2215, -1000, 1042, -1000, 1532, -1000,
	43810, 645, 2502, 644, 642, 3431, 1761, 3430, 1057, 2844,
	2076, 2842, 2076, -1000, -1000, -1000, 963, -1000, 118301, -1000,
	638, 634, -1000, -46, 1545, 2020, 998, -1000, -1000, 43810,
	43810, 96496, -1000, 440, 3086, -18, -1000, -1000, 1576, 1143,
	-1000, -1000, -1000, -1000, 2217, 1573, 1140, -1000, -1000, -1000,
	-1000, -1000, -1000, 997, -1000, 2805, 2803, 107715, -1000, 996,
	-1000, -1000, 43810, -1000, -48, 1139, 3223, 2214, 86407, 1138,
	-1000, 1136, -1000, -1000, -1000, 3253, 2076, 2838, 1157, -1000,
	-1000, -1000, -1000, -1000, 66576, -1000, 107715, 86407, 1538, 935,
	-1000, 2083, 935, 988, 2663, -1000, 2448, -1000, 86407, 3428,
	420, -149, -49, 62302, 3286, -1000, 2140, 635, 86407, 943,
	-1000, 3359, -1000, -1000, -1000, -1000, 3205, 86407, 3285, 2834,
	994, 53, 86407, 3391, -1000, -1000, 86407, 2833, 2108, 2209,
	2355, 874, 71991, 994, 2022, -89, -1000, 1711, 31252, 3096,
	-152, -1000, -1000, -1000, 1008, 59633, 51555, 43810, 3425, -154,
	-1000, -1000, -1000, -1000, -1000, 94375, 94375, 70923, 70923, 70923,
	978, 107715, 107715, 73049, -1000, -1000, 631, 107715, 107715, 628,
	-1000, 107715, 107715, 3424, 70923, -50, 627, -1000, 924, 923,
	922, -1000, -1000, -1000, -1000, -1000, -1000, -231, 53, -1000,
	2060, 86407, -1000, 18391, -1000, -1000, -1000, -1000, -1000, -1000,
	993, -1000, -1000, 1925, 2153, 1925, 1694, 1681, -1000, -1000,
	2068, -1000, -1000, -1000, -1000, 2461, 3050, 22207, 3204, 9062,
	43810, 43810, 5660, 1953, 565, 9062, 43810, 43810, 62302, 4873,
	-161, 43810, 43810, -1000, 43810, 791, 118301, 3390, 43810, 419,
	411, -1000, -1000, -1000, 3364, -1000, -1000, -1000, 118301, 43810,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 410, -1000, 28,
	-1000, -1000, -1000, 113534, -1000, 43810, 407, 3161, -1000, 404,
	400, 11741, 532, 115410, 115381, 114821, 399, -1000, -1000, 398,
	371, 118301, 2659, 118301, -1000, -1000, 888, 888, 1390, 1390,
	1390, 1390, 3340, 488, 934, 396, 358, 358, 358, 593,
	899, 899, 358, 358, 358, 2662, 2343, 625, 5554, -1000,
	-1000, 118301, 118301, 370, -1000, -1000, -1000, -173, 369, 7103,
	-1000, 2611, 3160, 118301, -1000, 51555, 2611, 2611, -1000, -1000,
	1771, 107715, 118301, 51555, -1000, 2541, -1000, 16751, -1000, 22207,
	-1000, -1000, -1000, -1000, 3359, -1000, 56437, -1000, 622, -1000,
	11, -1000, 3034, -1000, 920, -1000, -183, -183, -1000, -1000,
	790, 3423, 820, 22207, 368, -1000, -1000, -1000, -183, -183,
	-183, -1000, -1000, -1000, 3031, 118301, 107715, 107715, 1401, 92233,
	1670, -1000, -1000, 1818, 2350, -1000, 3318, 3287, 107715, 2828,
	-1000, 2574, -1000, 1053, 114792, 52089, -1000, 52089, 107715, -1000,
	-1000, 1778, 2442, 1093, -1000, 3132, 107715, -1000, 107715, -1000,
	-1000, 107715, 107715, 86407, 107715, -1000, 2813, -162, 118301, -52,
	-1000, 916, -1000, 1408, -1000, 17846, 107715, 86407, 107715, 86407,
	1957, -1000, -1000, -1000, 2812, -163, 22207, -1000, 3389, 3385,
	2827, 3137, 3383, 107715, -1000, 107715, 86407, 3029, -1000, -1000,
	-1000, -1000, 1572, 1135, 988, -56, 621, -1000, 906, -1000,
	-1000, 904, 988, -1000, 70923, 54247, 564, -1000, 2479, -1000,
	91704, 2100, 53, -1000, 3422, 94909, 620, -1000, 2052, -1000,
	566, 66032, 2217, 53, 86407, -1000, -1000, 564, 365, -71,
	-1000, 1048, 22207, 86407, 2826, 2375, 874, 71991, -1000, 1213,
	2441, -1000, -72, -1000, 682, 53, 2022, -1000, -89, 118301,
	-1000, 897, -1000, -168, -1000, -1000, 362, -1000, 3026, 3025,
	-1000, 2593, 52089, 619, 618, 107715, 3021, -1000, -1000, -171,
	2931, 2931, 70923, 54247, 70923, 991, -1000, 2213, -1000, -1000,
	-1000, -1000, -1000, 22207, 1485, -1000, 617, 616, -1000, -1000,
	-1000, -1000, 3050, 9062, 9062, 43810, 43810, 43810, 9062, 4873,
	-184, -1000, 9062, 9062, -173, -1000, -1000, 117285, -1000, -1000,
	-1000, 118301, -1000, 17301, 1927, -1000, 114755, -1000, 29569, -1000,
	-1000, 43810, 43810, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 47737, 2655, 615, 62302, -1000, -1000, 359, 1005, 43810,
	45493, 2391, 1005, 1005, -1000, -189, -1000, -1000, -1000, 3359,
	11, -1000, -1000, 3420, 22207, -1000, 70923, 819, -1000, 3415,
	-1000, -1000, -1000, -1000, -1000, 2542, -1000, -1000, -1000, 1794,
	2347, -1000, -1000, 1134, -1000, -1000, 107715, -1000, 107715, -1000,
	22207, 107715, 2625, 2184, -1000, 973, 2401, 613, 47737, 86407,
	931, -1000, 3311, 2575, -191, -1000, 107715, 43810, 107715, -192,
	-194, 2178, -1000, -1000, 2174, 43810, -1000, 62302, 609, 2076,
	2076, -199, -205, -1000, -1000, 43810, 1130, 107715, 30691, -1000,
	3414, 3086, -1000, -1000, -1000, -1000, 107715, 43810, 1124, -1000,
	-1000, -1000, 3376, 2076, 22207, -1000, 2076, 2076, 3137, 1091,
	107715, 86407, -1000, 2238, 2238, 70923, 54247, -1000, -112, 988,
	3283, 2464, 3413, -1000, -1000, -1000, -1000, 2397, -1000, -1000,
	107715, 2395, 979, -1000, -210, -1000, 892, 890, 73049, 972,
	985, -1000, -1000, -1000, -1000, 564, 3282, -1000, 3375, 608,
	107715, 2103, 607, 22207, 3075, 874, 71991, -1000, 2937, 1711,
	-1000, 2190, 107715, 3064, -1000, 2441, 606, -1000, 978, 604,
	603, 2731, 2731, -211, 52089, 52089, -212, 598, 978, -1000,
	-213, -1000, -1000, -1000, -1000, -126, -1000, 900, 898, -1000,
	-1000, 86407, 86407, 43810, 43810, -1000, 9062, 9062, 9062, -1000,
	335, -1000, -1000, 2022, 3159, -1000, -144, 114726, 114166, 4597,
	47737, 62302, -218, -1000, -1000, 107715, 118301, -159, -1000, 118301,
	596, 595, 472, -1000, -1000, -1000, 536, -1000, -1000, 3410,
	-1000, 95967, -1000, -1000, 95438, -1000, 1906, -1000, -1000, -1000,
	107715, 2204, -1000, -1000, 1050, 43810, 5554, 594, 43810, -1000,
	3281, -1000, 2475, 2666, 1727, 52089, -1000, 3050, -1000, 114137,
	-1000, 1047, 1831, -1000, -1000, 118301, 3137, 52089, -1000, -1000,
	592, 590, 118301, 580, 878, 2653, -1000, -1000, -1000, -1000,
	118301, 578, 3223, -1000, -1000, -1000, -1000, 2076, 86407, -1000,
	-1000, -1000, -219, -1000, -1000, 1837, 53, 1922, 2539, -1000,
	2100, 577, -1000, -1000, 2086, 2468, -1000, 94909, 30130, 30130,
	333, 3280, 985, -1000, 3349, -1000, 3279, 53, -1000, 52089,
	-1000, 86407, 52089, 2102, 1889, 2341, 71991, -1000, 2355, -1000,
	-1000, -221, 107715, 1711, -1000, -1000, 70923, 70923, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1047,
	-224, -226, -1000, 70923, -1000, -1000, 2213, -1000, 107715, -1000,
	107715, -1000, -1000, -229, -232, -1000, 1996, 43810, 29569, -1000,
	-1000, 4597, -234, -1000, -164, -1000, 3278, 45493, 3409, 3407,
	3404, -1000, -1000, -1000, 1790, -1000, 1770, -1000, -1000, 2822,
	2606, 114100, 2318, 107715, 114071, -1000, 2656, -1000, -1000, 2464,
	576, -1000, -1000, -1000, -1000, 940, 107715, 2464, 2585, 86407,
	1049, -235, 1925, 1925, 43810, 29008, 1948, 43810, -1000, -1000,
	3137, -1000, 2636, 3350, -1000, 972, -1000, 1947, 107715, -1000,
	3119, -1000, 3007, -1000, -1000, -1000, 2479, 53, -1000, -1000,
	53, -1000, -240, 1048, -241, 86407, 1799, -1000, 874, -1000,
	2375, 1008, -1000, -1000, -242, -243, 1727, 1047, 977, -252,
	-1000, -258, -259, -1000, -1000, 331, 44932, 44932, 44932, -173,
	-174, -1000, 107715, 567, -1000, -1000, -1000, -1000, -1000, -1000,
	2794, 987, -1000, 2091, 1789, 317, 1080, -1000, -1000, 1922,
	107715, -1000, -1000, -1000, 986, 564, -1000, 43810, 1047, -260,
	-1000, 1037, -261, -1000, 1036, -270, -1000, 2648, -1000, -272,
	2076, 981, 3194, -1000, -1000, -1000, 2086, 86407, -275, -1000,
	-1000, 2151, -1000, 2464, 979, -1000, 1047, 552, 1727, 550,
	1358, 874, -1000, -1000, 1407, 3075, 2943, 978, 978, 2464,
	1727, 1008, 549, 978, -1000, -1000, -1000, 2852, -1000, 48859,
	2106, 1665, 116689, 2852, 2852, -1000, -1000, 107715, 3182, -1000,
	2093, 2092, 1456, -1000, -1000, -1000, -1000, -1000, -1000, 2575,
	-277, 3179, 2318, 118301, 2464, -1000, 1925, 2530, -1000, 1925,
	2647, -1000, 1945, -1000, -1000, -1000, 1599, 3338, 1720, 545,
	-1000, 107715, 1612, 1604, 3403, 1922, 2086, 1727, 52089, 2464,
	52089, -1000, -1000, 107715, -1000, 1889, 1269, -1000, -1000, 1922,
	2464, -1000, -1000, -1000, 1598, 3307, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 871, -1000, 2966, -1000, 1068, 1954,
	1954, 1008, -1000, 869, 2091, -1000, -1000, 543, -1000, 541,
	-1000, 2030, -1000, -1000, -1000, -1000, 107715, -1000, -1000, 3402,
	-1000, 972, -1000, 2464, -278, 1922, -285, -1000, -183, 1799,
	-1000, 1462, 977, 1922, 1657, -1000, -1000, 2017, 44371, 43810,
	-1000, 3327, -1000, -1000, 2381, -1000, -1000, 43810, 2575, 43810,
	43810, 58041, -286, -1000, 2086, 1922, 1047, 977, 1727, 1358,
	59633, 1008, 977, -1000, -1000, -1000, 118301, -1000, -1000, -1000,
	118301, -1000, -287, -288, -255, 94375, 2065, 1720, 977, 1727,
	1008, 2464, -1000, -268, -1000, 1008, 1922, 1112, -300, -1000,
	-1000, -1000, -1000, 1008, 2464, -1000, 1922, -1000, -1000, -1000,
	538, -1000, -1000, 1922, 977, 43810, 977, 1008, -301, 1008,
	-1000, 1922, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4254, 4253, 4252, 4251, 4250, 4249, 4248, 4243, 4242,
	4240, 4236, 4230, 4229, 4227, 4226, 4225, 4224, 4223, 4222,
	4221, 4220, 4212, 4211, 4207, 4203, 4201, 4196, 4190, 4186,
	4185, 4183, 4182, 4181, 4179, 4165, 4164, 4161, 4158, 4157,
	4156, 4154, 4153, 4152, 4151, 4148, 4146, 4144, 4143, 4142,
	4141, 4139, 4138, 4136, 4129, 4127, 4126, 4123, 4121, 50,
	4120, 4119, 4117, 4116, 4114, 4113, 4112, 4108, 4107, 4105,
	4104, 4103, 4102, 4101, 4098, 4097, 4094, 4093, 4092, 52,
	4085, 256, 4084, 4083, 4078, 4077, 4076, 4074, 4068, 4058,
	4055, 4042, 4039, 4032, 252, 4030, 149, 4028, 4027, 4024,
	4023, 4022, 251, 4019, 4018, 4017, 4016, 265, 4015, 4013,
	4012, 4006, 4005, 4003, 4002, 4001, 4000, 3998, 3996, 82,
	139, 3995, 3994, 1451, 3993, 3992, 3991, 3988, 3984, 3983,
	3982, 3981, 3980, 3973, 230, 3969, 250, 3965, 3964, 3963,
	3962, 3960, 3959, 3954, 3952, 3947, 3946, 3943, 3942, 3941,
	3940, 3934, 3933, 3932, 3931, 3930, 3929, 3927, 3921, 3916,
	3914, 3913, 3912, 3911, 3910, 3908, 3907, 3906, 3904, 3903,
	3902, 3900, 3899, 257, 171, 3898, 3897, 249, 248, 3896,
	3895, 3894, 3893, 3891, 114, 4, 96, 3887, 3885, 97,
	87, 78, 92, 99, 89, 3883, 100, 3882, 135, 58,
	3880, 9, 13, 144, 219, 9837, 217, 3879, 3878, 3874,
	223, 182, 3873, 220, 3871, 3870, 3869, 3866, 55, 45,
	167, 166, 155, 164, 907, 3865, 143, 90, 70, 53,
	38, 7, 65, 241, 21, 3864, 239, 12, 127, 1,
	34, 3863, 3862, 3859, 3857, 3209, 115, 3856, 246, 226,
	152, 3854, 3853, 3851, 479, 3849, 3848, 49, 3847, 184,
	91, 112, 8, 110, 3846, 132, 33, 3845, 156, 51,
	3841, 137, 88, 85, 8361, 6572, 3840, 102, 69, 113,
	1286, 162, 161, 183, 76, 146, 153, 191, 197, 196,
	160, 27, 3837, 228, 3835, 3241, 68, 176, 3833, 3828,
	3825, 77, 187, 93, 3821, 3819, 67, 6, 14, 10,
	157, 31, 108, 41, 20, 3815, 30, 3813, 3811, 3809,
	3807, 3806, 37, 148, 3803, 258, 3802, 117, 48, 44,
	3800, 28, 198, 3799, 209, 116, 3798, 3797, 233, 192,
	177, 3796, 43, 213, 3791, 3790, 3789, 3787, 3786, 120,
	3, 119, 3782, 3781, 130, 3779, 47, 222, 186, 3778,
	54, 3777, 3774, 163, 95, 126, 262, 109, 207, 104,
	208, 172, 218, 3773, 3772, 3771, 190, 3770, 3768, 201,
	140, 3766, 3761, 195, 264, 84, 39, 75, 221, 73,
	181, 158, 3760, 189, 3757, 3756, 263, 178, 199, 2,
	24, 81, 111, 3755, 5, 216, 133, 215, 107, 3752,
	5343, 2122, 2471, 3750, 3749, 138, 105, 63, 106, 136,
	243, 60, 3748, 3747, 2402, 3746, 3743, 3741, 3740, 170,
	3738, 3737, 3735, 131, 129, 212, 3734, 86, 61, 42,
	17, 150, 238, 247, 103, 205, 169, 229, 3733, 3732,
	3731, 179, 3728, 72, 118, 3727, 188, 234, 3722, 3719,
	204, 3718, 128, 2009, 56, 134, 3717, 203, 3716, 3715,
	3711, 3696, 3691, 3690, 3684, 1984, 211, 3679, 3677, 3676,
	57, 174, 3674, 242, 159, 175, 83, 46, 3673, 71,
	145, 3672, 122, 147, 64, 244, 125, 245, 3671, 2111,
	59, 3670, 0, 11468, 6010, 9605, 10235, 3669, 7480, 3668,
	3667, 3666, 193, 123, 3664, 3663, 3662, 101, 3661, 80,
	3660, 3659, 62, 3657, 23, 15, 16, 29, 25, 173,
	168, 3655, 3654, 22, 121, 141, 3653, 255, 214, 3652,
	3651, 3650, 3649, 94, 3647, 35, 3644, 32, 3643, 3642,
	36, 18, 40, 3641, 3640, 231, 3639, 202, 225, 3636,
	151, 3633, 3239, 124, 3631, 3630, 237, 79, 3628, 261,
	3627, 3214, 3626, 3625, 19, 3623, 3622, 224, 165, 200,
	3619, 3618, 154, 3617, 3616, 3615, 268, 3614, 3612, 26,
	3610, 11, 3609, 3608, 194, 2999, 3606, 3605, 66, 3604,
	180,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 11,
	11, 7, 7, 7, 8, 8, 8, 8, 46, 46,
	9, 9, 9, 9, 9, 9, 9, 9, 9, 34,
	29, 30, 31, 32, 10, 10, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 16, 16, 35, 35, 17,
	17, 37, 37, 18, 18, 38, 38, 566, 566, 21,
	40, 22, 41, 15, 567, 567, 567, 567, 33, 23,
	42, 26, 26, 26, 26, 26, 187, 187, 187, 187,
	20, 20, 36, 36, 221, 221, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 565, 565, 223, 223, 222, 217, 217, 568, 568,
	224, 224, 224, 226, 226, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 464, 464, 464, 497, 497, 496,
	496, 496, 495, 495, 581, 581, 582, 582, 582, 582,
	582, 122, 122, 362, 362, 362, 48, 48, 48, 48,
	48, 560, 560, 189, 189, 189, 191, 191, 190, 190,
	190, 190, 70, 70, 573, 573, 574, 574, 572, 575,
	575, 575, 188, 188, 188, 118, 118, 118, 118, 119,
	119, 120, 120, 192, 192, 192, 194, 194, 193, 193,
	193, 193, 193, 193, 193, 193, 198, 103, 103, 103,
	103, 103, 103, 103, 103, 103, 98, 98, 499, 499,
	500, 500, 183, 183, 184, 184, 184, 184, 185, 185,
	186, 186, 186, 62, 195, 195, 197, 197, 196, 196,
	50, 50, 50, 50, 50, 50, 50, 51, 51, 51,
	51, 51, 52, 52, 52, 52, 52, 52, 53, 53,
	53, 53, 53, 53, 60, 60, 60, 60, 174, 174,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 67, 67, 67, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 584, 584, 585, 585, 586, 586, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 76, 76, 324, 324,
	294, 294, 77, 77, 77, 78, 78, 79, 79, 64,
	64, 558, 558, 339, 339, 455, 455, 81, 81, 361,
	361, 82, 82, 82, 82, 82, 82, 83, 83, 83,
	83, 83, 83, 83, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 91, 91,
	91, 91, 91, 92, 92, 92, 89, 89, 89, 86,
	86, 86, 85, 85, 85, 90, 90, 90, 557, 283,
	283, 88, 88, 88, 87, 87, 87, 340, 340, 93,
	93, 93, 93, 295, 94, 94, 94, 94, 94, 94,
	94, 94, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 97, 97, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 97, 457, 457, 95, 95, 95,
	422, 422, 99, 99, 99, 377, 377, 100, 100, 100,
	100, 100, 101, 101, 101, 101, 101, 101, 121, 121,
	121, 121, 121, 121, 562, 562, 332, 332, 248, 248,
	248, 248, 111, 111, 111, 111, 112, 112, 112, 113,
	113, 179, 179, 128, 128, 128, 128, 128, 127, 127,
	127, 127, 127, 127, 54, 54, 54, 55, 55, 56,
	56, 57, 57, 58, 58, 59, 59, 59, 59, 59,
	130, 130, 578, 578, 132, 129, 129, 129, 131, 131,
	131, 131, 133, 134, 134, 134, 134, 134, 134, 134,
	134, 135, 135, 489, 489, 348, 348, 487, 487, 509,
	509, 488, 488, 299, 299, 299, 299, 299, 300, 300,
	300, 498, 498, 498, 498, 498, 498, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 180, 180, 181, 182, 182, 182,
	182, 182, 159, 159, 159, 173, 173, 173, 173, 173,
	173, 173, 162, 162, 162, 146, 146, 137, 137, 137,
	137, 137, 137, 137, 141, 141, 141, 141, 141, 141,
	141, 141, 138, 138, 148, 148, 148, 148, 148, 142,
	142, 143, 143, 143, 143, 169, 169, 145, 145, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 139, 139,
	139, 139, 150, 150, 150, 150, 384, 384, 384, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	172, 172, 172, 172, 172, 172, 576, 576, 577, 577,
	166, 166, 166, 166, 166, 166, 436, 436, 160, 160,
	160, 160, 165, 165, 165, 165, 168, 168, 168, 168,
	367, 367, 157, 157, 157, 158, 158, 158, 163, 163,
	164, 161, 161, 167, 167, 167, 167, 140, 140, 140,
	588, 588, 588, 170, 170, 156, 156, 171, 171, 171,
	171, 171, 171, 171, 171, 152, 152, 152, 151, 151,
	151, 151, 154, 154, 155, 155, 155, 155, 155, 153,
	144, 559, 559, 555, 555, 555, 555, 555, 555, 555,
	555, 556, 556, 556, 556, 561, 561, 104, 104, 104,
	104, 104, 114, 114, 114, 114, 114, 105, 105, 105,
	105, 105, 107, 107, 106, 106, 106, 106, 71, 71,
	71, 71, 71, 14, 14, 14, 72, 72, 239, 239,
	201, 201, 201, 313, 313, 202, 202, 307, 307, 307,
	307, 199, 199, 200, 200, 73, 73, 589, 589, 589,
	569, 569, 569, 570, 570, 570, 570, 570, 570, 301,
	301, 302, 302, 402, 402, 402, 402, 402, 305, 305,
	305, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	308, 308, 225, 225, 225, 311, 312, 312, 309, 309,
	310, 310, 310, 315, 315, 314, 317, 317, 316, 401,
	518, 518, 520, 520, 520, 520, 520, 520, 520, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	385, 385, 590, 590, 516, 516, 516, 517, 512, 512,
	513, 513, 513, 513, 513, 303, 303, 304, 304, 304,
	304, 514, 515, 330, 330, 440, 519, 519, 521, 521,
	523, 591, 591, 591, 591, 591, 591, 592, 592, 592,
	400, 400, 399, 399, 322, 322, 524, 524, 524, 524,
	525, 525, 525, 525, 525, 528, 527, 526, 526, 526,
	526, 526, 75, 75, 75, 364, 364, 363, 363, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 176, 176, 251, 251, 69, 69,
	69, 12, 12, 12, 571, 571, 571, 74, 74, 74,
	74, 74, 74, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 564, 564, 563, 563, 252, 252, 594,
	594, 80, 80, 80, 80, 80, 80, 80, 458, 458,
	459, 459, 68, 68, 68, 68, 68, 386, 386, 383,
	383, 382, 382, 329, 329, 438, 438, 438, 439, 256,
	256, 257, 257, 218, 218, 218, 28, 27, 19, 19,
	24, 24, 25, 25, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 44, 44, 44, 44, 47, 47, 43, 43, 43,
	43, 45, 45, 39, 39, 579, 579, 580, 580, 110,
	110, 115, 115, 115, 115, 115, 116, 116, 116, 116,
	117, 117, 117, 117, 126, 126, 175, 175, 175, 175,
	175, 175, 175, 49, 49, 49, 49, 61, 61, 61,
	61, 124, 596, 596, 596, 125, 125, 125, 595, 595,
	249, 249, 396, 396, 397, 397, 597, 597, 398, 398,
	398, 398, 398, 242, 241, 243, 243, 244, 244, 66,
	66, 66, 234, 234, 233, 231, 231, 501, 501, 236,
	236, 237, 237, 227, 227, 228, 228, 229, 229, 230,
	230, 240, 240, 598, 598, 102, 102, 102, 178, 178,
	293, 293, 293, 393, 393, 393, 323, 323, 263, 263,
	395, 395, 395, 395, 360, 360, 360, 177, 177, 337,
	337, 350, 350, 351, 351, 452, 452, 352, 108, 108,
	109, 109, 123, 123, 205, 205, 203, 203, 203, 203,
	203, 203, 203, 203, 210, 210, 211, 211, 212, 212,
	213, 214, 214, 214, 214, 341, 341, 215, 215, 215,
	204, 204, 204, 206, 206, 206, 206, 206, 206, 206,
	209, 209, 209, 209, 216, 216, 216, 208, 208, 535,
	535, 535, 537, 537, 539, 539, 538, 538, 534, 534,
	536, 536, 593, 593, 366, 366, 366, 320, 321, 318,
	318, 319, 319, 327, 327, 325, 326, 326, 328, 328,
	437, 437, 437, 219, 219, 219, 357, 357, 357, 357,
	358, 358, 389, 389, 387, 387, 387, 387, 388, 388,
	390, 390, 390, 391, 391, 392, 392, 354, 354, 355,
	355, 356, 356, 356, 356, 418, 418, 207, 207, 207,
	334, 334, 334, 335, 335, 408, 408, 408, 408, 408,
	408, 409, 409, 407, 407, 407, 407, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 442, 443, 443, 336,
	336, 444, 394, 394, 553, 553, 553, 554, 554, 435,
	435, 445, 445, 445, 445, 445, 445, 433, 433, 434,
	434, 453, 454, 454, 370, 370, 370, 370, 368, 368,
	371, 371, 371, 371, 371, 369, 369, 446, 446, 446,
	446, 359, 359, 447, 447, 447, 447, 448, 449, 449,
	450, 450, 403, 404, 404, 460, 460, 460, 460, 462,
	333, 333, 333, 333, 333, 511, 510, 510, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 477,
	477, 477, 477, 477, 477, 477, 463, 463, 463, 463,
	463, 467, 467, 467, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 468, 468, 473, 473, 474,
	474, 474, 469, 470, 475, 475, 475, 475, 599, 599,
	479, 479, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 465, 465, 465, 472, 472, 472, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	378, 378, 380, 380, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 412, 412, 412, 412, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	529, 529, 529, 529, 529, 529, 529, 529, 414, 414,
	532, 532, 533, 533, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 540, 540, 541, 541, 543, 543, 544,
	544, 545, 546, 546, 546, 547, 548, 548, 542, 542,
	549, 549, 549, 549, 550, 550, 551, 551, 551, 551,
	551, 552, 552, 552, 552, 552, 424, 424, 425, 425,
	431, 431, 431, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 253,
	253, 253, 253, 253, 346, 346, 344, 344, 344, 347,
	347, 345, 345, 343, 343, 342, 342, 421, 421, 419,
	419, 423, 423, 372, 372, 478, 478, 478, 478, 478,
	478, 478, 478, 373, 373, 373, 381, 374, 374, 375,
	375, 375, 375, 375, 415, 416, 376, 376, 376, 417,
	417, 426, 430, 430, 429, 428, 428, 427, 427, 405,
	405, 406, 406, 353, 353, 600, 600, 349, 349, 451,
	451, 451, 451, 297, 297, 338, 338, 296, 296, 288,
	288, 289, 289, 289, 289, 331, 331, 432, 432, 480,
	480, 481, 481, 482, 482, 483, 483, 484, 485, 486,
	420, 420, 273, 272, 260, 261, 271, 270, 269, 259,
	262, 266, 267, 268, 264, 265, 279, 278, 277, 232,
	235, 284, 285, 285, 287, 287, 286, 286, 275, 276,
	456, 258, 290, 290, 291, 291, 291, 292, 292, 292,
	292, 254, 254, 255, 255, 280, 280, 281, 282, 282,
	274, 274, 274, 245, 245, 245, 246, 246, 247, 247,
	494, 494, 491, 491, 491, 492, 492, 492, 493, 493,
	493, 493, 490, 490, 490, 490, 490, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 503, 503, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 505, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 508, 508,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 1, 3, 1, 1, 1, 3, 4, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 6,
	6, 6, 4, 4, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 5,
	5, 6, 6, 4, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 6, 5, 6, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	3, 2, 1, 1, 3, 1, 3, 2, 2, 0,
	1, 1, 0, 2, 0, 7, 10, 8, 6, 6,
	6, 9, 4, 3, 2, 2, 0, 1, 3, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 6, 7,
	9, 6, 2, 2, 3, 0, 8, 6, 8, 7,
	2, 0, 1, 2, 5, 0, 1, 3, 3, 1,
	1, 3, 12, 3, 1, 0, 1, 1, 2, 3,
	3, 0, 4, 6, 0, 5, 6, 8, 2, 1,
	3, 1, 3, 2, 5, 0, 1, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 6, 4, 9,
	7, 12, 12, 12, 9, 2, 7, 2, 1, 1,
	1, 3, 3, 0, 3, 1, 3, 1, 1, 3,
	2, 5, 0, 7, 2, 0, 1, 2, 3, 1,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 6, 6, 6, 6, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 6, 3, 3, 4, 3, 3, 4, 3, 4,
	4, 4, 3, 5, 7, 3, 3, 4, 3, 3,
	3, 3, 3, 2, 0, 1, 0, 1, 0, 4,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 3,
	5, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 3, 1, 0, 1, 2, 2, 1, 6,
	5, 1, 2, 1, 3, 2, 0, 9, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 6,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 1, 1,
	3, 4, 6, 3, 3, 5, 3, 1, 3, 2,
	2, 2, 2, 1, 2, 2, 5, 3, 3, 6,
	6, 3, 1, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 3, 5, 7, 2,
	3, 0, 3, 5, 2, 3, 0, 2, 3, 2,
	3, 2, 6, 4, 7, 7, 7, 2, 6, 4,
	7, 7, 7, 2, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 3, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 1, 1, 5, 3, 2, 6, 3, 3,
	4, 4, 3, 1, 3, 2, 3, 3, 1, 3,
	1, 2, 1, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 2, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 2, 1, 3, 3, 3,
	3, 3, 2, 3, 3, 1, 1, 1, 1, 1,
	2, 2, 5, 7, 3, 3, 3, 4, 4, 6,
	5, 5, 5, 3, 4, 4, 3, 4, 4, 3,
	4, 4, 5, 3, 5, 5, 5, 7, 3, 3,
	3, 2, 6, 4, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 4, 3,
	4, 3, 3, 4, 4, 5, 0, 1, 1, 3,
	2, 4, 3, 3, 5, 3, 4, 3, 5, 3,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 3, 4, 4, 5,
	2, 0, 4, 2, 3, 4, 2, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 3, 4, 3,
	1, 1, 1, 2, 3, 2, 3, 6, 6, 7,
	9, 7, 9, 3, 4, 10, 10, 3, 5, 5,
	5, 3, 5, 6, 4, 4, 5, 5, 3, 2,
	5, 2, 0, 1, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 1, 2, 0, 1, 2, 1,
	2, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 6,
	5, 8, 3, 6, 6, 3, 13, 16, 1, 0,
	1, 2, 3, 0, 2, 0, 4, 0, 4, 5,
	4, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 2, 3, 3, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	8, 0, 1, 1, 0, 2, 1, 0, 1, 0,
	9, 9, 3, 1, 3, 7, 1, 3, 11, 3,
	2, 0, 3, 1, 2, 2, 3, 2, 6, 2,
	1, 2, 2, 8, 4, 2, 5, 5, 5, 2,
	2, 0, 1, 3, 11, 12, 8, 5, 3, 1,
	5, 10, 7, 11, 3, 3, 0, 2, 4, 3,
	3, 1, 5, 1, 3, 1, 2, 0, 1, 2,
	2, 0, 1, 3, 3, 2, 2, 1, 1, 1,
	4, 0, 6, 0, 3, 0, 2, 2, 2, 0,
	1, 1, 2, 2, 0, 3, 3, 2, 1, 1,
	2, 2, 5, 8, 4, 1, 0, 1, 2, 2,
	1, 2, 3, 3, 2, 2, 3, 2, 2, 2,
	2, 2, 3, 1, 4, 2, 2, 2, 4, 7,
	3, 4, 6, 3, 1, 1, 1, 8, 10, 11,
	7, 10, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 3, 0,
	1, 8, 3, 6, 6, 5, 3, 4, 1, 0,
	1, 3, 17, 20, 16, 19, 4, 2, 0, 1,
	0, 1, 0, 1, 3, 2, 4, 2, 3, 1,
	0, 2, 0, 1, 1, 0, 9, 6, 6, 8,
	6, 8, 5, 7, 2, 6, 7, 4, 4, 4,
	4, 5, 5, 3, 3, 4, 4, 3, 6, 7,
	4, 6, 7, 8, 9, 6, 8, 6, 7, 8,
	9, 6, 8, 6, 8, 1, 0, 2, 0, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 3, 2, 3, 2, 2, 2, 2,
	2, 2, 1, 1, 0, 2, 4, 2, 1, 0,
	2, 1, 1, 0, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 2, 3, 2, 2, 1, 2, 12,
	15, 3, 1, 0, 4, 3, 0, 1, 1, 4,
	4, 1, 0, 3, 0, 3, 0, 3, 0, 3,
	0, 4, 0, 1, 0, 6, 7, 3, 6, 3,
	1, 3, 1, 1, 4, 2, 1, 3, 1, 3,
	4, 8, 11, 5, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 6, 4,
	5, 4, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	3, 1, 3, 3, 3, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 4, 1, 0,
	1, 0, 2, 1, 0, 2, 5, 7, 2, 1,
	2, 4, 3, 5, 0, 1, 3, 5, 1, 2,
	1, 1, 1, 1, 1, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	1, 1, 4, 4, 6, 6, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 5, 4, 6, 3, 5, 4, 6, 4, 6,
	5, 7, 3, 3, 3, 3, 3, 4, 3, 2,
	4, 2, 3, 3, 4, 3, 4, 3, 4, 5,
	6, 6, 7, 6, 7, 6, 7, 3, 4, 4,
	1, 3, 1, 3, 3, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 5, 6, 6,
	7, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 2, 1, 5,
	5, 6, 3, 1, 1, 1, 2, 2, 2, 4,
	3, 5, 6, 8, 6, 5, 4, 3, 2, 2,
	4, 1, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 6, 6, 8, 8,
	6, 4, 6, 6, 6, 4, 1, 3, 3, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 4, 3, 4, 3, 4,
	3, 4, 4, 3, 6, 5, 5, 5, 4, 4,
	3, 4, 3, 5, 0, 5, 0, 2, 0, 1,
	3, 3, 2, 2, 0, 6, 1, 0, 3, 0,
	3, 3, 3, 0, 1, 4, 2, 2, 2, 2,
	2, 3, 2, 2, 3, 0, 4, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 3, 1, 3, 3, 1, 1,
	1, 1, 5, 3, 1, 1, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 575, -96, -93, -62, -60, -99, -100,
	-82, -101, -95, -121, -126, -108, -109, -110, -122, -128,
	-175, -180, -181, -182, -3, -48, -50, -63, -81, -83,
	-94, -103, -102, -104, -111, -118, -114, -98, -54, -123,
	-127, -136, -176, -177, -178, 33, 32, 100, 80, 151,
	126, 134, 197, 375, 416, 427, 389, 139, 408, 394,
	-131, -132, 444, -49, -61, -125, -124, 73, 127, 403,
	-4, -12, 30, 46, -51, -52, -53, 62, -69, -65,
	-76, -70, -67, -583, 102, -536, -84, -87, -117, -587,
	158, 215, -105, -106, 358, -112, -113, 410, -115, -116,
	412, 159, -56, -55, 153, -203, -205, -129, -130, -179,
	-137, -138, -139, -140, -141, -142, -143, -169, -144, -145,
	-146, -147, -148, -149, -153, -172, -150, -151, -152, -155,
	-154, -156, -161, -157, -158, -159, -160, -162, -163, -165,
	-166, -167, -168, -170, -171, 449, -164, 507, 49, 463,
	82, 143, 420, 21, -5, -6, -7, -8, -9, -10,
	-11, -14, -13, -64, -66, -68, -71, -72, -73, -80,
	-74, -75, -535, -85, -86, -89, -91, -92, -88, -90,
	409, -206, -204, 572, 522, -16, -21, -22, -17, -18,
	-20, -23, -19, -24, -25, -35, -40, -41, -37, -38,
	-36, -39, -42, -43, -44, -45, -46, -47, -27, -33,
	-34, -28, -29, -30, -31, -32, -15, -26, 541, 550,
	-209, -207, -208, -216, 436, 530, 481, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, -295,
	2, -275, -280, -281, -282, -274, -245, -505, -508, 4,
	-502, -506, 165, 224, 322, 21, 23, 22, 24, 25,
	26, 27, 28, 30, 31, 42, 43, 45, 46, 47,
	48, 49, 53, 55, 59, 60, 61, 62, 63, 64,
	68, 73, 74, 79, 80, 81, 82, 83, 84, 85,
	91, 88, 89, 90, 92, 94, 96, 97, 98, 99,
	100, 101, 103, 104, 105, 107, 108, 116, 117, 118,
	119, 121, 126, 127, 130, 125, 129, 132, 133, 134,
	137, 138, 139, 141, 142, 144, 145, 146, 148, 149,
	151, 152, 153, 156, 154, 489, 155, 157, 158, 159,
	160, 163, 171, 172, 173, 178, 180, 184, 185, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 198, 202,
	204, 205, 206, 207, 208, 214, 215, 217, 218, 219,
	220, 225, 226, 227, 231, 228, 237, 238, 242, 243,
	244, 246, 250, 251, 252, 253, 254, 255, 257, 259,
	258, 261, 264, 265, 268, 272, 273, 277, 278, 274,
	279, 280, 282, 283, 286, 284, 287, 288, 285, 289,
	291, 292, 293, 294, 295, 296, 297, 298, 299, 300,
	301, 302, 290, 305, 303, 307, 308, 309, 320, 318,
	313, 314, 310, 315, 311, 312, 316, 317, 324, 325,
	328, 212, 330, 331, 334, 352, 338, 339, 340, 343,
	344, 347, 350, 351, 353, 354, 355, 356, 357, 358,
	359, 360, 362, 363, 365, 366, 367, 369, 370, 371,
	373, 375, 376, 378, 379, 381, 382, 383, 384, 385,
	386, 387, 389, 391, 390, 392, 394, 396, 397, 398,
	403, 408, 405, 406, 407, 409, 410, 411, 412, 414,
	415, 416, 418, 419, 420, 421, 423, 425, 426, 429,
	430, 446, 447, 465, 427, 428, 431, 432, 433, 434,
	435, 439, 437, 438, 440, 441, 442, 444, 445, 448,
	449, 451, 452, 453, 454, 455, 456, 459, 461, 462,
	463, 464, 466, 469, 470, 471, 472, 467, 480, 474,
	475, 477, 478, 482, 483, 484, 485, 486, 487, 488,
	490, 492, 500, 501, 502, 504, 507, 508, 509, 510,
	498, 512, 513, 516, 517, 518, 521, 519, 520, 522,
	524, 527, 528, 529, 535, 534, 536, 542, 543, 545,
	546, 547, 37, 50, 51, 54, 56, 58, 69, 70,
	71, 75, 122, 123, 150, 161, 162, 174, 186, 187,
	199, 201, 209, 210, 211, 232, 233, 235, 240, 262,
	327, 329, 345, 349, 364, 368, 372, 374, 388, 422,
	457, 468, 473, 493, 494, 495, 496, 503, 505, 530,
	531, 532, 537, 544, -295, 2, -275, 336, -268, 2,
	-245, -245, 375, 29, 2, 29, 363, 438, 484, 486,
	2, -562, -332, 2, 29, -248, -245, 102, 197, 436,
	-268, 2, -562, -332, 25, 2, -245, 2, 350, 22,
	28, 66, 77, 98, 137, 160, 181, 184, -586, 352,
	382, 425, 440, 480, 490, 504, 2, 534, 283, 437,
	481, 224, 118, 509, 431, -571, 429, 430, 350, 380,
	418, 200, 523, -249, 2, 427, -245, 283, 2, 575,
	94, 273, 74, 422, 441, -134, 501, -133, 493, 431,
	-135, -489, 2, 305, -245, 575, 575, 575, 29, -258,
	-245, 481, 224, 431, 118, 478, 575, 2, 481, 355,
	534, 437, 118, 385, 224, 509, 431, -571, 283, -560,
	2, -555, 4, -506, -502, -289, -288, 481, 487, 118,
	-282, -274, 565, -281, 575, 575, 575, 2, 243, 244,
	384, 383, 441, 442, 575, 575, 575, 575, 429, 2,
	160, 22, 28, 66, 93, 98, 124, 181, 184, 341,
	-584, 352, 382, 440, 480, 483, 490, 504, -570, 464,
	68, 431, -569, -571, 283, 509, 137, -382, 118, 273,
	195, 517, 486, 484, 515, 130, 231, 520, 519, 575,
	575, -96, 2, 572, 33, 32, 139, 444, -198, 481,
	236, 2, -245, 575, 575, 2, 243, 244, 429, 430,
	575, 575, 182, -555, 2, 575, 575, 2, 243, 244,
	429, 430, 236, 2, 68, 433, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 2,
	-173, 441, 464, 206, 47, 46, 74, 29, 381, 79,
	356, 119, 145, 510, 198, 224, 225, 251, 93, 94,
	-384, 45, 244, 243, 430, -576, 429, -436, 482, 432,
	438, 477, 255, 427, 501, 102, 524, 419, 547, 385,
	386, 475, 398, 274, 154, 4, 118, 305, 443, 493,
	273, 426, 359, 84, -593, 2, 481, -595, 2, 501,
	501, 2, -595, 2, -595, 2, -595, 2, -596, 501,
	544, 575, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, -204, -206,
	-205, 575, 575, 575, 575, 575, 575, 575, -173, 441,
	2, 74, 29, -325, -327, 514, 234, 147, 342, -203,
	-205, 2, -535, -487, 2, -410, -509, -412, 563, 564,
	556, 479, 67, 321, 548, -424, 124, 515, 336, -508,
	-413, -426, 150, 422, -347, 8, 9, 5, 6, 7,
	-254, -414, -420, 506, 164, 326, -292, 576, 10, 572,
	-532, -205, -425, 38, 201, 65, -491, -291, -255, -463,
	235, -290, -274, -529, -530, 4, -502, -503, -492, -466,
	-474, -470, -471, -477, -245, -505, 77, 110, 111, 109,
	114, 113, 276, 275, 115, 112, 443, 523, 66, 37,
	209, 210, 240, 327, 211, 75, -531, 138, -504, 232,
	233, 457, 51, 388, 174, 123, 122, 329, 56, 54,
	531, -475, 120, 493, 494, 495, 496, 186, 187, 58,
	161, 162, 349, 372, 473, 503, 505, 199, 262, 44,
	106, 183, 230, 213, 239, 241, 245, 263, 266, 306,
	319, 323, 346, 348, 417, 450, -599, 532, 468, 69,
	70, -537, 390, -538, -268, -537, 575, 575, 577, 575,
	-318, -320, -321, 2, 29, 135, 572, 2, -441, 2,
	-442, -446, -205, 256, -445, 572, -443, 570, -275, 337,
	-533, 423, -529, -530, -254, -274, -291, 4, -502, -504,
	574, -322, 572, 118, 481, 78, 224, -377, 572, -245,
	29, 336, 497, 577, -319, 379, -422, 572, 336, 182,
	339, 60, 287, 2, 2, 2, 2, 2, 209, -245,
	481, 117, 2, 254, 2, 2, 2, 2, 2, 2,
	2, -340, 209, 2, -275, 534, -340, 209, 2, -340,
	209, 2, -383, 2, 87, -259, 209, 2, -245, -283,
	209, 2, -278, -280, -287, 209, 2, -285, -245, -500,
	209, 2, -499, -494, 10, -493, 5, 4, -502, -506,
	-503, -505, 77, -410, 2, -123, 2, 60, -245, 534,
	2, 2, 446, 2, 572, -134, 71, 501, 44, 441,
	-397, 2, -398, -241, -242, -243, -453, -244, 242, 378,
	387, 551, 128, 321, 547, -487, -578, 182, 555, 497,
	-487, -348, 574, 2, 2, 2, 2, 2, 2, -446,
	209, -275, 2, -272, -490, 4, -502, -506, -503, -507,
	29, 32, 33, 34, 36, 38, 39, 40, 41, 57,
	65, 66, 72, 76, 78, 87, 93, 102, 109, 110,
	112, 111, 113, 114, 115, 124, 128, 131, 135, 136,
	140, 143, 147, 164, 166, 179, 181, 182, 197, 200,
	203, 216, 229, 234, 236, 256, 260, 267, 275, 276,
	321, 326, 332, 336, 337, 341, 342, 361, 377, 393,
	413, 436, 443, 460, 476, 481, 491, 497, 499, 506,
	514, 515, 523, 525, 533, 538, 539, 540, 541, -508,
	2, -446, 209, 2, -277, 209, -446, -280, 2, -259,
	2, -271, -490, 2, -296, 209, -275, -276, -280, -278,
	2, -285, 2, -499, 209, 2, 534, 236, 497, 577,
	-338, -288, -289, -486, 8, -331, -245, 574, -410, 2,
	-123, -107, 2, 179, -410, 209, 2, -123, 209, 2,
	-410, 209, 2, -123, 209, 2, -573, 2, -499, 209,
	-245, 2, 287, 2, 2, 504, 2, 98, 481, 117,
	2, 407, -585, 425, 508, 2, 2, 2, 2, 2,
	2, 2, 481, -264, 2, -245, 179, -285, 209, -286,
	2, 437, -594, 390, -499, 209, 2, 534, -278, 2,
	-278, 224, 238, -259, 209, 2, 486, 484, 486, 484,
	182, 2, 236, 2, 236, 2, -447, 2, -448, -442,
	-449, 570, 337, -457, 2, -456, -493, 530, -96, 572,
	-96, 572, 441, 572, -499, -275, -275, -410, 2, -123,
	-107, 2, -410, 2, -123, 2, -120, -119, -499, 572,
	182, -410, 2, -123, -107, 2, -410, 2, -123, 2,
	-198, 179, 2, 118, 481, -173, 2, 179, 525, 2,
	8, 2, 216, -499, 432, 386, 171, 2, 446, 2,
	447, 74, -384, 547, 74, 182, 2, 182, 2, -367,
	2, 541, 182, 2, 2, -559, 2, 336, 182, 2,
	182, 2, 182, 2, 182, 2, 182, 2, 383, 442,
	502, 244, 2, -123, 538, -107, -410, 538, 2, -577,
	179, 430, -410, 2, 500, 253, 155, 182, -367, 2,
	182, 2, 182, 2, 5, 2, 384, 465, 2, 242,
	378, 465, 2, -275, -588, 2, 481, 534, 437, 2,
	2, 88, 89, 182, 2, 182, 2, 196, 182, 2,
	182, 547, 2, -359, -446, -396, -397, -396, 497, -325,
	-327, -173, 446, 2, -210, -357, -212, 179, -387, -388,
	-213, 267, 166, 332, -214, -366, 29, 135, -366, -366,
	60, 573, 573, 11, 12, 76, 42, 563, 564, 565,
	566, 177, 567, 568, 561, 562, 560, 553, 554, 558,
	248, 249, 95, 557, 555, 86, 281, 424, 167, 168,
	169, 170, 404, 222, 35, 223, 14, 15, 16, 34,
	341, 266, 548, 213, 450, 556, 17, 18, 19, 239,
	241, 323, 50, 216, -253, -298, -410, -410, -410, -410,
	-410, -410, -410, 348, 572, -353, -405, 570, -205, 572,
	572, 572, -486, -205, -410, -424, 573, -345, 572, -205,
	-424, -419, 572, 422, 570, 572, -427, -410, 5, 5,
	5, 572, 574, -540, 542, 179, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 374, -468, 572, -467, 572, -467, -467, 535, -465,
	572, 550, 543, 572, -465, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 535, 577,
	-537, -322, 572, -349, -451, -410, 565, -349, -349, 336,
	-342, -410, 106, -370, 245, 306, 183, 263, 417, 230,
	-407, 576, -407, -435, 550, -205, -443, -274, -205, -445,
	572, -441, -435, -97, -486, -81, -94, -102, -123, -136,
	-177, -178, 565, -275, 572, 182, 572, 574, -490, 182,
	-331, -259, -275, -290, -291, -296, 134, -342, -555, 509,
	431, -331, -248, 39, -421, -460, -461, -511, 576, -510,
	-463, -473, -469, -472, 364, 368, -492, 54, 531, -475,
	235, 4, -502, -504, 232, 233, 457, 51, 388, 174,
	123, 122, 329, 56, 493, 494, 495, 496, 186, 187,
	58, 532, 468, 69, 70, -555, 509, 431, -331, 179,
	-497, 2, -496, -495, 115, 443, -493, 5, 2, 150,
	2, 2, 2, -245, -224, 577, 64, 411, 150, -340,
	209, -224, 150, -224, 150, -297, 209, -296, -224, 150,
	-224, 577, 150, -224, 577, 150, 574, 577, 150, -497,
	2, -383, -489, -342, 39, -397, 2, 124, -495, -597,
	577, 265, -300, 280, 320, 205, 337, 545, 330, 128,
	-498, 5, 4, -420, -432, 124, 273, 235, -480, -482,
	8, -481, 9, -483, 563, 564, -488, -487, 108, 574,
	-490, -221, 405, 444, -220, 24, 30, 139, 226, 309,
	528, 156, -310, 227, 351, 355, 150, 461, 518, -566,
	-567, 428, 488, 489, 90, 330, 444, 405, 150, -363,
	-365, 39, 116, 309, 350, 61, 219, 285, 286, 463,
	537, 150, 444, 405, 351, 24, 139, -236, -233, -567,
	99, 405, 474, 377, -567, -223, 461, 518, -566, -567,
	428, 405, -222, -310, 150, 576, 24, 405, 444, 351,
	-581, -582, 139, 30, 405, 351, -563, -534, 541, 150,
	-446, 209, -574, -119, 257, 5, 10, -119, -338, 577,
	577, -490, 565, 430, 429, 150, 150, 150, 150, 179,
	321, 2, 2, 2, 2, 2, 184, -569, -586, 2,
	2, -275, 209, -324, 336, -558, -339, 481, -275, 321,
	44, -277, 209, 2, -280, 534, -563, 321, -279, 209,
	-275, 39, 572, 2, -383, 2, 224, -534, 321, -447,
	-293, -275, -442, -293, 444, -268, 39, -407, -275, 573,
	577, -457, -457, -499, -186, 541, 182, 102, 572, 572,
	-198, -454, 577, -453, -500, -120, -499, -499, -558, -259,
	2, -275, 2, 481, 246, -499, -186, 216, -499, -499,
	-499, -489, 29, 447, 2, 383, 442, 502, 89, 447,
	2, -275, 481, 118, 224, 80, -245, -561, 179, -556,
	418, 431, 509, -555, -275, 118, -275, 118, -275, 118,
	-275, -275, 2, 2, 2, 2, 2, 85, 85, 2,
	46, -577, 179, 2, 500, 2, 500, 2, -245, -245,
	-245, 464, 265, -275, 179, 481, 224, 481, 224, 118,
	182, 74, 118, 29, 481, -224, 577, -249, -210, -357,
	-489, -358, -357, -211, -210, -213, 179, 387, 519, 309,
	448, 250, -388, -387, 29, -410, -392, 173, 308, -410,
	-390, -412, 563, 564, -481, -483, -341, 330, -204, -204,
	-204, -328, -437, -410, 377, 224, -462, -460, -460, -273,
	-490, 493, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -410, 266, 213, 450,
	50, 216, -410, 497, -410, -410, -410, -410, 303, 321,
	326, 506, 164, 516, 135, 330, -600, 476, 41, -417,
	-205, -346, 572, -431, 36, 460, 29, -424, 572, 2,
	-405, -410, -406, -343, -342, -342, 573, 533, 29, 135,
	565, 2, 573, 577, 39, 573, -410, -343, -423, -419,
	-342, -430, -429, 538, -378, -379, 546, 290, 121, 207,
	288, -380, 435, -484, 8, -490, 565, -541, 172, 200,
	572, 573, 2, 573, 2, 573, -410, 2, 573, -410,
	2, 573, -410, 2, 573, -410, 2, 573, 2, -410,
	-410, -410, -410, -410, -410, -410, -342, 8, -484, -484,
	493, 493, -484, -484, -484, -476, 364, 365, 366, 367,
	268, 269, 270, 271, 368, 369, 370, 371, 295, 296,
	297, 298, 291, 292, 293, 294, 299, 300, 301, 302,
	191, 192, 193, 194, 187, 188, 189, 190, -476, -372,
	2, -478, -342, 4, 546, 290, 121, 207, 288, 435,
	5, -372, 2, -373, 2, -410, -342, -374, -411, -412,
	563, 564, 556, -424, -375, 2, -410, -343, -410, 57,
	260, 499, -376, -410, 182, -342, -342, 2, -342, 2,
	-538, 39, -342, -334, 577, 182, 39, 4, -334, -334,
	572, 573, 577, -371, 204, 284, 279, 238, -371, -441,
	-370, 245, -368, 346, -368, -368, -435, -260, 570, 578,
	-490, -435, -434, -433, 39, -268, 343, -435, -435, 574,
	573, -434, 571, -553, 572, 575, 575, 575, 575, 575,
	-275, 572, -342, -490, 574, 466, 573, 239, 239, 239,
	239, 423, 573, 497, -557, -283, -287, 541, -96, 338,
	573, 577, -333, 38, 570, 574, -484, 2, 2, -479,
	535, 572, 572, -379, 572, 182, -557, -287, -332, 577,
	497, -245, 2, -275, -340, -224, 150, -340, -340, -224,
	577, 150, -259, -278, -283, -285, -287, -245, -499, -500,
	-224, -279, -578, 573, 501, -398, -299, 387, 459, 406,
	439, 478, 8, 9, 8, 9, 577, -490, 577, -579,
	93, 497, 78, 431, -238, 274, 397, 309, 481, 422,
	-401, 209, 78, -512, -262, 93, -513, -245, 72, 515,
	377, 181, 148, -579, 93, 377, -579, 93, 2, 226,
	93, 444, 464, 497, 60, -446, 42, 42, 29, -123,
	261, 182, 547, 481, 224, 431, 497, -446, -365, -460,
	116, 285, 286, 60, -485, -480, 563, 564, -485, 60,
	-485, -485, -485, 541, -277, -446, 431, 497, 497, 396,
	396, 497, 497, -598, 555, 396, 577, 42, 42, 29,
	-123, 261, 182, 497, -296, -260, 529, 43, 529, 497,
	43, 431, 497, 577, 43, 43, 497, 497, -564, -250,
	105, 315, 278, 316, 97, 312, 96, 311, 103, 313,
	104, 314, 536, 324, 63, 310, 289, 317, -251, -252,
	357, 527, -499, 444, 405, 150, 216, -454, 216, -454,
	-288, -245, 574, -123, -410, -410, -123, -410, -123, 46,
	150, 2, -594, 254, 572, -303, 321, 182, -331, -455,
	236, 577, -339, 150, -496, -364, -363, 321, -279, 209,
	2, 150, -322, 321, 144, 572, 385, 2, -261, 209,
	-246, -245, -383, -227, 485, 150, -361, 525, -393, -123,
	572, 124, 39, -393, -350, -351, -452, -352, -262, 572,
	-268, -407, -96, -456, 573, 573, 573, -185, 340, -184,
	-245, 5, -198, 525, -302, -402, -401, -516, -517, -512,
	266, 224, 515, 238, 165, -323, -263, -262, 117, -192,
	541, -119, 573, -454, 216, -186, -186, -454, -454, -275,
	179, -499, -186, -186, -186, 2, 2, 2, -367, -275,
	-259, -296, -275, 574, -331, -331, -287, -283, -367, -259,
	-367, -259, -367, -259, -123, -410, 2, 441, 179, 179,
	574, -367, 385, 118, 481, 355, 224, -275, -296, -275,
	-296, -259, 118, -259, 119, -275, -446, -358, -211, 337,
	250, 448, -390, -391, -412, 422, 423, -391, 422, 423,
	8, 9, 8, 9, -215, 452, 325, -340, 577, -218,
	40, 131, 250, -275, 547, 146, -410, -410, 497, -600,
	476, -417, 146, -410, 303, 326, 506, 164, 516, 135,
	330, 182, 572, -411, -411, 573, -344, -410, -410, 571,
	580, 573, -327, 577, -325, -410, -342, -342, 573, 574,
	-342, -331, 571, 571, 577, 573, -428, -429, 140, -410,
	497, 497, 497, 497, 572, 573, 574, -546, 347, 572,
	572, -410, 573, 573, 573, 573, 39, 577, 577, 577,
	573, 577, 577, 577, 573, 573, 573, 577, 573, 547,
	547, 573, 573, 573, 573, 577, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	573, 577, 573, 182, 573, 573, -381, 361, 573, 11,
	12, 563, 564, 565, 566, 177, 567, 568, 561, 562,
	560, 553, 554, 555, 86, 281, 424, 14, 15, 16,
	239, 216, -411, -411, -411, 573, -415, -416, 182, 179,
	39, -376, -376, -376, 573, 182, -342, 573, 573, 572,
	-539, 283, 321, 573, -404, -403, 539, -451, -335, 2,
	-441, -270, -490, -404, -404, -342, -410, 245, 245, -369,
	525, 336, -371, -441, -434, -486, -409, -408, 180, 40,
	131, 318, 212, -434, -268, -322, -434, -434, -490, -435,
	-435, -433, 573, -554, -486, 573, -336, -444, -533, -327,
	574, -490, -195, -534, -174, 5, 326, -174, -174, -174,
	-331, 497, 497, 25, 362, -460, 570, 571, 8, -490,
	572, -484, -484, -484, -331, 182, 182, 182, -496, -496,
	2, -224, -340, -224, -224, -296, -297, -224, -224, -224,
	-362, 541, -487, -397, 513, 83, 387, 493, -487, -220,
	405, -262, -262, -275, -284, -245, 195, 397, 26, 397,
	265, 265, 321, -401, 209, -226, 321, -460, -269, -245,
	572, -385, 543, 250, 250, 525, -262, -269, 250, 209,
	-262, 209, -269, 2, -269, -565, 387, 331, -410, -496,
	272, 385, 322, -221, 405, 444, -123, -123, -123, 572,
	-578, 525, 134, -275, -296, -275, -284, -279, 444, 405,
	319, -290, -485, -485, -363, 444, 405, -284, -277, -496,
	-232, -245, -232, 431, -259, 396, 547, -598, -222, -123,
	-123, -123, 572, -260, -223, 405, 5, 209, -262, 5,
	-245, -262, -284, -496, -582, 24, -262, 209, -262, -284,
	-496, -250, -499, 326, 521, -563, 431, 497, -446, -119,
	-189, 541, -119, -183, 220, 565, -560, -245, 534, -245,
	-301, -304, -302, -262, -201, -202, 543, 541, 150, -294,
	-275, 570, -186, -499, -275, -285, -286, 150, -322, 321,
	-499, 39, 150, 572, 2, 2, 336, 321, -261, 209,
	-228, 141, -598, -259, -404, -335, -360, -395, 413, 336,
	-323, 530, -268, -360, -337, 577, 182, 555, 574, -323,
	-450, 565, -96, -96, -186, 577, 572, 555, 555, 572,
	-499, -499, 573, 577, -226, -275, -261, 224, 224, -267,
	-246, 573, 577, 574, 572, -194, 340, -193, 142, 252,
	237, 453, 454, 455, 456, 133, -192, -120, 182, -57,
	541, 481, -186, 576, -245, -367, -367, -367, 441, 441,
	-245, -271, -259, -275, -272, -296, 179, 179, -259, 519,
	-391, 337, 277, -437, -219, 549, -275, 576, -410, -410,
	146, 146, -410, -411, -411, -410, 146, 182, 572, -410,
	-421, 34, 34, 573, 577, -406, -410, 573, 533, -327,
	-327, 573, 565, -490, 576, 573, -419, 143, -410, 491,
	290, 207, 288, -380, 288, -380, -380, -484, 5, -490,
	565, -547, -265, 572, -245, 539, -326, 342, 573, -462,
	-460, -410, -410, -410, -410, -410, -484, -465, -465, -480,
	-480, -410, -415, -410, -462, -460, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, 135, 321, 330, -411, -416,
	-415, -410, -410, -460, 573, 573, 573, -342, -96, 572,
	283, -354, 200, -410, -454, 577, -354, -354, 573, -441,
	-441, 572, -410, 245, 571, 577, 579, 555, -322, 574,
	-433, -434, 571, 573, 577, 573, 577, -394, 39, 573,
	-490, -404, -197, -196, 132, 53, -331, -331, 339, 5,
	8, 570, 571, 574, -484, 573, 573, 573, -331, -331,
	-331, -224, -224, 117, 309, -410, 497, 497, 60, 497,
	42, 319, -232, 377, 422, 26, 397, 397, 150, 321,
	527, -518, -513, 148, -410, 572, 224, 572, 572, 2,
	-217, 139, 444, -580, 2, 525, 150, -224, 150, -224,
	545, 572, 572, 497, 431, -238, 541, -342, -410, -187,
	124, -489, -567, 576, -567, 576, 431, 497, 431, 497,
	541, 163, 163, -232, 541, -342, 497, -464, 48, 27,
	321, -278, 497, 497, -224, 150, 509, 444, -499, 326,
	-284, -279, 444, 405, -454, -191, 340, -190, 142, 415,
	133, 252, -454, -189, 182, 236, -279, 2, 573, 573,
	577, -519, 39, 334, 334, 572, -275, -77, 541, -453,
	-486, 44, -277, 39, 150, -563, -123, -279, -458, -459,
	5, -275, 150, 336, 321, -229, 259, -598, -494, -534,
	-327, -360, -349, 322, 91, 573, -404, -351, -335, -410,
	2, 573, -184, -185, -499, -499, -499, -186, -198, -198,
	-402, -305, 572, -261, -246, 572, -198, -263, 2, -500,
	577, 572, 555, 555, 555, -454, -123, 340, -275, 565,
	-367, -312, -311, 355, 330, -312, 422, 422, 337, 173,
	255, -218, -260, -410, -410, 146, 34, 34, -410, -410,
	-421, 573, -410, -410, -342, 571, 5, -410, 573, 573,
	8, -410, 573, 574, -548, -245, -410, 573, 60, 573,
	573, 577, 577, 573, 573, 573, 573, 573, 573, 573,
	-416, 182, 135, 330, 572, 573, 573, -96, -418, 203,
	60, -441, -418, -418, -369, -331, -441, -408, -260, 570,
	-490, -486, -444, 572, 574, -196, 555, 571, 2, 570,
	-490, 573, 117, -262, -262, 481, 422, 319, -232, 377,
	422, 396, 265, 26, 26, -401, 150, -520, 93, -522,
	76, 165, 102, 321, 326, 515, 377, 72, 124, 393,
	-590, 39, 552, 573, -329, -438, -533, 572, -245, -329,
	-331, 321, 471, 124, 321, 124, 117, 509, 79, -262,
	-269, -331, -331, -275, -284, 157, 573, 577, 555, 2,
	565, 565, -284, -279, -284, -277, 353, 157, 573, -260,
	5, 5, 150, -257, 76, 5, -262, -262, -278, 117,
	431, 497, -189, 577, 572, 555, 555, -189, -500, -119,
	-322, -313, 226, -262, -517, -514, -515, 377, -521, -523,
	165, 377, -123, 2, -200, -199, -245, 5, 572, -303,
	340, 571, -496, -364, -123, -279, -322, 573, 577, -386,
	525, -260, -275, 150, -230, 258, -598, -494, -227, -389,
	-387, 136, 572, 336, -123, -327, 555, 573, 573, 117,
	117, 218, 149, -329, 572, 572, -331, 117, 573, -193,
	-194, -499, -119, -499, -192, -58, -59, 224, 93, 360,
	-272, 481, 224, 572, 572, -218, -410, -410, -410, 573,
	-327, -490, 565, -542, 355, 573, -437, -410, -410, -411,
	182, 572, -421, 573, -543, 540, -410, -355, -356, -410,
	421, 107, 201, -543, -543, 573, -486, 2, -499, 570,
	2, 216, 396, 265, 497, -401, -269, -273, -266, -245,
	165, 209, 326, -385, 250, 572, -411, -275, 572, 2,
	31, -591, 128, 229, 573, 577, -439, -256, -245, -410,
	-439, 573, 573, 326, 326, -410, -460, 572, -224, -224,
	573, 573, -410, 497, -489, 100, -487, 2, -567, -259,
	-410, 497, 5, -224, -273, -224, -224, -257, 509, -284,
	-279, -190, -191, -499, -119, -189, 39, -308, 228, 2,
	-519, 250, -266, 250, -589, 541, 573, 577, 555, 555,
	-301, -201, -78, -79, 498, -453, -322, 39, 5, 572,
	-245, 336, 572, -260, -240, 92, -598, -494, -228, -360,
	322, -331, 93, -389, -417, -186, 572, 572, -306, 81,
	94, 125, 208, 185, 225, 464, 469, 29, -306, 573,
	-329, -329, 573, 572, -186, 573, 577, 29, 572, 29,
	572, -275, -296, -342, -342, 573, -327, 60, 577, 573,
	573, -411, -421, 573, -544, -545, -265, 577, 572, 572,
	445, 571, 2, -232, 377, -232, 377, -522, -266, 321,
	525, -410, -247, 572, -410, 39, 229, 129, 214, -400,
	-592, 101, 472, 217, -438, -218, 573, -399, 525, 393,
	-257, -329, 572, 572, 572, 555, 182, 572, -464, -224,
	-278, 573, -572, 391, -123, -309, -310, 216, 572, -307,
	336, 117, 309, -199, -487, -487, 573, 39, -79, 9,
	39, -123, -329, -275, -329, 336, -234, -233, 267, -494,
	-229, 573, -269, -360, -500, -500, -399, 573, 573, -500,
	-59, -331, -331, 573, 573, -549, 385, 423, 202, -342,
	-328, 573, 577, 39, -356, 2, 2, 2, 396, 396,
	150, 204, 573, -524, 282, -245, 573, 129, 214, -308,
	572, -219, -439, -308, 204, -275, -568, 525, 573, -315,
	-314, -311, -317, -316, -311, -342, -487, 100, 353, -342,
	-257, -575, 183, -574, 5, 10, -201, 353, -330, -440,
	-262, 82, 117, -313, -123, -123, 573, -386, 573, -275,
	-231, -501, 396, 398, -598, -230, -404, 573, 573, -400,
	-399, -202, 541, 573, 573, 573, 573, -550, -551, 50,
	512, 108, -410, -550, -550, -545, -547, 165, 541, -525,
	-528, -527, 336, 451, 183, 354, 573, 471, 537, -309,
	-331, 541, -322, -410, -399, 573, 577, 530, 573, 577,
	530, 573, 182, 573, -224, -188, 541, 46, -307, -275,
	573, 577, 376, 130, 139, -308, -589, -399, 572, -400,
	572, -237, -236, -598, -480, -240, 136, -186, -186, -308,
	-400, -404, -186, -552, 148, -551, 373, 178, 422, 373,
	178, -552, -552, -266, 55, -527, 336, -528, 336, 519,
	130, -591, 573, 55, -524, -308, -314, 216, -316, 182,
	353, 429, -574, 31, -239, -238, 572, -440, 423, 423,
	2, -309, -307, -400, -329, -308, -329, -235, -331, -234,
	322, 519, -309, -308, 108, 200, 492, 309, 34, 555,
	-526, 309, 411, 64, 444, -526, -404, 555, -525, 572,
	572, 340, -331, 2, -201, -308, 573, -309, 573, -231,
	444, -202, -309, 422, 344, -551, -410, 23, 326, 124,
	-410, -591, -342, -342, -185, 572, 573, -307, -309, -399,
	-202, -400, -237, -350, -404, -202, 573, 573, -185, -225,
	64, 411, -239, -202, -400, -404, -308, -404, -404, -309,
	497, 573, -404, -308, -309, 572, -309, -202, -342, -202,
	-404, 573, -404, -309,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 502, 503, 505, 506, 507, 509,
	510, 512, 514, 516, 517, 518, 520, 521, 523, 524,
	525, 526, 527, 529, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	593, 595, 0, 1266, 1268, 1270, 1272, 0, 736, 0,
	36, 37, 0, -2, 300, 302, 304, 0, 330, 332,
	333, 335, 337, 339, -2, 0, 437, 438, 440, 442,
	-2, 0, 917, 919, 0, 582, 584, 0, 922, 924,
	0, 0, 604, 605, 0, 1372, -2, 598, 600, 602,
	667, 669, 671, 673, 675, 677, 679, 681, 683, 684,
	686, 688, 690, 692, 694, 695, 697, 699, 701, 702,
	704, 705, 707, 709, 711, 713, 715, 717, 719, 721,
	723, 725, 727, 729, 731, -2, 733, -2, -2, 0,
	-2, -2, -2, 1284, 40, 42, 44, 46, 48, 50,
	52, 54, 56, 388, 389, 391, 393, 395, 397, 400,
	402, 404, 1430, 444, 446, 448, 450, 452, 454, 456,
	0, -2, 1444, 0, 0, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 96, 97, 98, 99, 100,
	101, 102, 103, 71, 72, 74, 75, 76, 80, 81,
	82, 83, 84, 85, 86, 87, 94, 69, 0, 0,
	1403, 1405, 1407, 1409, -2, 0, 0, 5, 9, 11,
	13, 15, 17, 19, 21, 23, 25, 27, 29, 504,
	508, 511, 513, 515, 519, 522, 528, 530, 532, 489,
	490, 493, 2108, 2125, 2126, 2127, 2130, 2131, 2132, 2133,
	2134, 2135, 2566, 2647, 2648, 2157, 2158, 2159, 2160, 2161,
	2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171,
	2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181,
	2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191,
	2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201,
	2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211,
	2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221,
	2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231,
	2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241,
	2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251,
	2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261,
	2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271,
	2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281,
	2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291,
	2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301,
	2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311,
	2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321,
	2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331,
	2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341,
	2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351,
	2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361,
	2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381,
	2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391,
	2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411,
	2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
	2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451,
	2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
	2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471,
	2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481,
	2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541,
	2542, 2543, 2544, 2545, 491, 492, 1085, 0, 556, 554,
	2093, 557, 2373, 559, 561, 431, 432, 433, 434, 435,
	436, 0, 575, 567, 1442, 576, 578, 579, 580, 581,
	551, 549, 0, 575, 2161, 573, 1264, 1265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 443, 0, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 367,
	1134, 1135, 1136, 1249, 1250, 2416, 1291, 0, 212, 594,
	-2, -2, -2, 2531, -2, 626, -2, 633, 2535, 2418,
	638, 0, 640, -2, 643, 1267, 1269, 1271, 734, 735,
	2111, 0, 0, 0, 0, 0, 38, 39, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 222, -2, -2, -2, -2, 0, 0, 2460, 2211,
	2061, 2127, 2064, 2059, 301, 303, 305, 306, 0, 0,
	0, 0, 0, 0, 331, 334, 336, 338, -2, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 978, 970, 971, 1191, 0, 0, 0, -2, 439,
	441, 494, 495, 0, 1431, 1431, -2, 0, 0, 0,
	0, 275, 266, 918, 920, 921, 0, 0, 0, 0,
	583, 585, 0, 0, 248, 923, 925, 926, 0, 0,
	0, 0, 0, 277, 0, 0, 599, 601, 603, 668,
	670, 672, 674, 676, 678, 680, 682, 685, 687, 689,
	691, 693, 696, 698, 700, 703, 706, 708, 710, 712,
	714, 716, 718, 720, 722, 724, 726, 728, 730, 732,
	742, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, -2, -2, -2, -2, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 828, 0, 0, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 0, 899, 0, 745, 747, 748, 749, 0,
	808, 826, 827, 836, 0, 1125, 1432, 1293, 1274, 1288,
	1293, 1276, 1277, 1278, 1279, 1280, 1285, 1287, 1281, 1282,
	1283, 41, 43, 45, 47, 49, 51, 53, 55, 57,
	390, 392, 394, 396, 398, 401, 403, 405, -2, 1401,
	1402, 445, 447, 449, 451, 453, 455, 457, 586, 0,
	588, 0, 746, -2, 0, 1436, 1436, 1436, 0, 0,
	1402, 1400, 0, 591, 592, 647, 648, 1704, 0, 0,
	0, 0, 0, 0, 0, 1958, 1790, 0, 649, -2,
	1821, 1823, 2506, 2531, 1957, 1825, 1826, 1827, 1828, 1829,
	0, 1831, 1832, 1833, 1834, 1835, 1836, 0, 1838, 0,
	1843, 1844, 1845, 0, 2513, 2038, 2121, -2, 0, 0,
	2519, 2117, 0, 1924, 1861, -2, -2, 2144, 2123, 1636,
	1637, 1638, 1639, 1640, -2, -2, 2549, 1865, 1866, 1867,
	1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 0, 2494,
	2514, 2515, 2520, 2522, 2516, 2503, 1886, 2223, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1663, 1672, -2, -2, -2, -2, -2, -2, -2,
	2507, 2508, 2525, 2528, 2534, 2539, 2540, 2512, 2521, 2548,
	2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559,
	2560, 2561, 2562, 2563, 2564, 2565, 1664, -2, -2, -2,
	-2, 1419, 2386, 1422, 1085, 1420, 1404, 1406, 0, 1408,
	0, 0, 0, 1413, 1439, 1437, 0, 1488, 1417, 1418,
	1506, 1506, 1530, 0, 1511, 0, 1530, 1431, 1557, 0,
	1517, 2408, 1862, 1863, 0, 2127, 2122, -2, -2, 2546,
	0, 0, 0, 0, 0, 0, 0, 552, 0, 558,
	560, 0, 0, 0, 574, 1441, 0, 0, 0, 0,
	0, 0, 0, 370, 371, 372, 373, 374, 2514, 0,
	0, 0, 379, 0, 381, 382, 383, 384, 385, 386,
	387, 182, 2514, 462, 487, 0, 182, 2514, 465, 182,
	2514, 468, 0, 471, 1189, 182, 2514, 474, 2089, 182,
	2514, 477, 479, 2097, 182, 2514, 483, 2104, 2102, 484,
	2514, 486, 280, 278, 279, 2140, 2141, 2148, 2149, 2150,
	2151, 2547, 2549, 1260, 1261, 1262, 1263, 0, 1290, 1190,
	596, 597, 0, 621, 0, 625, 2502, -2, 0, 2427,
	-2, 629, 1294, 1298, 1299, 1300, 1301, 1302, 0, 0,
	0, 0, 1307, 0, 0, 635, 0, 0, 622, 623,
	641, 644, 0, 737, 738, 739, 740, 741, 68, 0,
	2514, 1557, 70, 0, 2083, 2152, 2153, 2154, 2155, 2156,
	2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576,
	2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586,
	2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596,
	2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606,
	2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616,
	2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626,
	2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636,
	2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646,
	73, 0, 2514, 77, 0, 2514, 0, -2, 88, 0,
	95, 0, 2086, 104, 0, 2514, 0, 2058, -2, 0,
	193, 0, 945, -2, 2514, 1133, 0, 0, 0, 0,
	908, 2055, 2060, 909, 2079, 910, 2065, 0, 307, 308,
	309, 310, 311, 0, 312, 2514, 314, 315, 0, 317,
	318, 2514, 320, 321, 0, 323, 0, 233, 234, 2514,
	342, 343, 0, 345, 346, 0, 348, 0, 0, 0,
	352, -2, 368, 0, 365, 355, 356, 358, 359, 360,
	361, 362, 0, 409, 407, 2094, 0, -2, 2514, 0,
	942, 0, 0, 1170, -2, 2514, 1130, 0, 1176, 1172,
	0, -2, 0, 1429, 2514, 1311, 974, 975, 976, 977,
	1569, 428, 0, 1337, 0, 1339, 0, 1358, 1563, 1506,
	0, 0, 1568, 0, -2, 545, 2110, -2, 497, 0,
	498, 0, -2, 0, 292, 0, 0, 927, 928, 929,
	930, 931, 934, 935, 936, 937, 1543, 251, 249, 0,
	0, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	0, 0, 606, 0, 0, 743, 744, 0, 0, 754,
	755, 756, 0, 292, 2419, 2382, 2244, 763, 0, 766,
	769, -2, 0, 0, 0, 0, 773, 0, 778, 779,
	780, 0, 0, 784, 786, 916, 788, 0, 0, 790,
	0, 794, 0, 797, 0, 799, 0, 801, -2, -2,
	-2, -2, 812, -2, 0, 815, 817, 0, 819, -2,
	0, 828, 824, 825, 0, 0, 0, 0, 844, 845,
	0, 854, 0, 857, 858, 859, 0, 861, 862, 0,
	864, 865, 866, 867, 0, 869, 870, -2, -2, 874,
	876, 0, 883, 0, 887, 0, 891, 0, 0, 898,
	0, 750, 751, 182, 1561, 1273, -2, 1275, 0, -2,
	0, 587, 0, 590, 1461, 1387, 1384, 0, 1458, 1459,
	1388, 0, 0, 0, 1395, 0, 1434, 1435, 0, 0,
	0, 1374, 1375, 0, 0, 0, 0, 1963, 1964, 1965,
	1966, 1967, 1968, 1971, 1972, 1969, 1970, 1973, 1974, 0,
	0, 0, 0, 0, 1975, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1976, 1977, 1978, 0,
	0, 1980, 0, 1982, 0, 0, 0, 0, 0, 0,
	1769, 1771, 2046, 0, 0, 1979, 1709, 1710, 1711, 1712,
	1713, 1748, 1749, 0, 0, 1822, 2043, 2042, 1824, 0,
	1994, 0, 1837, -2, 0, 1958, 1989, 0, 0, 1846,
	1847, 1848, 0, 0, 1994, 0, 0, 2037, 1858, 1859,
	1701, 0, 0, 1926, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1650, 1649, 0, 1651, 0, 1652, 1653, 1660, 1673,
	0, 0, 0, 0, 1677, 0, 0, 0, 0, 0,
	0, 0, 2018, -2, 0, 0, 0, 0, 1665, 0,
	1421, 0, 0, 1492, 2047, 2051, 2052, 1492, 1492, 0,
	0, 1995, 1554, 1554, 0, 0, 1549, 1549, 1549, 1547,
	1530, 0, 1530, 1540, 0, 1530, 1530, 0, -2, 1511,
	0, 0, 1540, 0, 1524, 533, 535, 537, 539, 540,
	541, 543, 1558, 1559, 0, 0, 0, 0, 2128, 0,
	0, 0, 0, 0, 2113, 0, 0, 0, 0, 2470,
	2418, 563, 577, 1431, 0, 1997, 1584, 1588, 0, 1590,
	1591, 1592, 1593, 1594, 0, 0, 1585, -2, 1661, 1663,
	1684, 2145, 2146, 2147, 1644, 1645, 1646, 1647, 1648, 1656,
	1643, 1643, 1643, 1654, 1683, 1675, 1683, 1679, 1629, 1630,
	1631, 1666, 1667, 1668, 1669, 0, 2470, 2418, 569, 0,
	0, 1369, 197, 199, 200, 201, 202, 203, 369, 0,
	376, 377, 378, 0, 458, 0, 180, 181, 0, 182,
	2514, 463, 0, 466, 0, 182, 2514, 2053, 472, 0,
	475, 0, 0, 481, 0, 0, 0, 0, 0, 182,
	1371, 0, 0, 0, 0, -2, 631, 636, 637, 0,
	1296, 0, 1303, 658, 659, 660, 1305, 1306, 0, 1308,
	634, 661, 662, 663, 664, 665, 666, 0, 2067, 2068,
	2069, 2070, 2073, 2074, 0, 0, 632, 651, 639, 0,
	645, 105, 1246, 0, 144, 0, 1246, 1246, 0, 0,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	129, 140, 117, 118, 0, 0, 0, 0, 0, 78,
	1107, 0, 1110, 0, 0, 0, 0, 0, 0, 0,
	1123, 0, 0, 0, 0, 0, 0, 92, 93, 128,
	0, 0, 1334, 0, 123, 107, 0, 0, 0, 130,
	142, 0, 173, 175, 0, 0, 0, 0, 0, 0,
	192, 204, 0, 0, 0, 0, 1131, 0, 1428, 0,
	0, 2514, 0, 1543, 2290, -2, -2, 1543, 907, 0,
	0, 2128, 2063, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 347, 349, 350, 351, 0, 1169, 0, 357,
	399, 1056, 2514, 0, 0, 426, 421, 0, 423, 0,
	0, 1106, 2514, 1104, 2098, 0, 1128, 0, 1085, 2514,
	2096, 0, 0, 1177, 2137, 1186, 1190, 1324, 0, 430,
	0, 1340, 1342, 0, 0, 1564, 0, 1566, 1506, 1431,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 255, 0, 1542, 0, 1543, 249, 292, 292, 1543,
	608, 1543, 610, 0, 0, 757, 758, 0, 292, 292,
	292, 764, 765, 767, 768, -2, -2, -2, 884, 770,
	771, 851, 0, 0, 0, 850, 783, 787, 0, 901,
	2404, 2418, 2470, 914, 851, 2211, 851, 2211, 851, 2211,
	798, 800, 803, 839, 847, 811, 816, 0, 0, 821,
	829, -2, 0, 831, 0, 833, 0, 835, 851, 852,
	855, 860, 863, 868, 0, 0, 0, 0, 0, 0,
	0, 894, 895, 0, 0, 1124, 0, 1286, 1461, 1387,
	589, 1378, 1460, 1379, 1386, 1389, 0, 0, 1391, 0,
	1393, 0, 1456, 1457, 1464, 1465, 0, 1475, 1476, 1468,
	0, -2, 0, 0, 1471, 1472, 1397, 0, 1414, 1415,
	1416, 1445, 1448, 1205, 0, 2647, 1705, 1579, 1706, 1707,
	2082, 0, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, 1723, -2, -2, -2, -2, -2, -2, -2, -2,
	1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741,
	1742, -2, -2, -2, 1746, 1747, -2, 1981, 1983, 0,
	2046, 0, -2, 0, -2, -2, -2, -2, 1766, 0,
	1768, 1773, 1775, 1777, 0, 0, 0, 0, 2045, 1787,
	2029, 2030, 0, 0, 1960, 1961, 1962, 1772, 0, 1791,
	2044, 2041, 0, 0, 1993, 1444, 1850, 0, 0, 0,
	0, 1857, 1842, 1991, 0, 1990, 0, 0, 0, 2001,
	0, 2036, 2032, 0, 2080, 1700, 1687, 1688, 1689, 1690,
	1691, 1692, 1702, 0, 2077, 2114, 2120, 1934, 0, 0,
	0, 1887, 1888, 1889, 1890, 1891, 0, 1893, 1894, 0,
	1896, 1897, 0, 1899, 1900, 0, 1902, 1903, 1904, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1597, 0, 0, 0,
	1601, 0, 0, 0, 1605, 0, 0, 0, 1609, 0,
	0, 0, 1613, 0, 0, 0, 1617, 0, 0, 0,
	1621, 0, 0, 0, 1625, 0, 0, 0, 0, 0,
	1906, 0, 2004, -2, -2, -2, -2, -2, -2, -2,
	-2, 0, 1908, 0, 1910, 1995, 2015, 0, 0, 1792,
	0, 0, 0, 1958, 0, 1913, 1995, 2023, 0, 0,
	0, 0, 0, 1995, 0, 2028, 0, 1920, 0, 1922,
	1423, 0, 0, 1574, 0, 0, 0, 2050, 1574, 1574,
	0, 1487, 0, 0, 1550, 1551, 1552, 1553, 0, 0,
	1554, 0, 1544, 1548, 1545, 1546, 1540, 1503, 0, 0,
	2084, 1540, 1509, 1539, 0, 1085, 1529, 1540, 1540, 0,
	-2, 1513, 1530, 0, 0, 534, 536, 538, 542, 544,
	0, 0, 1444, -2, 0, -2, 1084, 0, 0, 0,
	0, 553, 555, 0, 0, 478, 0, 0, 547, 0,
	550, 0, 1575, 1578, 0, 0, 1589, 1595, 1596, 0,
	-2, 0, 0, 1685, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 488, 182, 460, 0, 182, 182, 469,
	0, 0, 182, 480, 182, 2105, 182, 2103, 281, 485,
	1370, 215, 0, 624, 0, 1295, 1304, 0, 655, 0,
	657, 0, 2071, 2075, 2072, 2076, 0, 646, 0, 0,
	0, 0, 1245, 0, 1212, 0, 0, 0, 0, 0,
	148, 2514, 0, 184, 0, 0, 1049, 2090, 0, 1041,
	0, 0, 2230, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 119,
	0, 0, 0, 0, 0, 0, 0, 0, 1108, 1109,
	1111, 1118, 1120, 0, 1114, 2078, 0, 0, 1115, 0,
	1117, 1119, 1121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1333, 1334, 0, 0, 0, 116,
	120, 0, 0, 0, 0, 2057, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1165, 1163,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	0, 0, -2, 0, 0, 0, 0, 225, 0, 283,
	2056, 2066, 0, 932, 933, 313, 316, 319, 322, 221,
	0, 353, 0, 0, 980, 955, 0, 0, 408, 292,
	0, 0, 422, 2107, 940, 1102, 1105, 0, 1085, 2514,
	1142, 0, 0, 0, 0, 0, 0, 1175, 0, 2514,
	2085, 2136, 2137, 1326, 1334, 0, 1574, 0, 1356, 1343,
	0, 0, 0, 1356, 1360, 1361, 1363, 1364, 0, 0,
	1565, 1571, 496, 546, 1431, 1431, 292, 290, 2350, 288,
	285, 287, 0, 0, 0, 981, 983, 984, 985, 184,
	0, 2137, 1041, 2279, 2137, 0, 1346, 1348, 0, 245,
	0, 252, 250, 255, 0, 0, 420, 607, 612, 752,
	0, 292, 760, 761, 762, 805, 841, 849, 772, 774,
	775, 776, 0, 0, 915, 911, 912, 913, 789, 851,
	792, 851, 795, 851, 814, 818, 823, 830, 0, 0,
	0, 843, 0, 0, 0, 0, 0, 0, 0, 888,
	889, 890, 892, 897, 896, 900, 1562, 1382, 1383, 1385,
	0, 1394, 0, 0, 1470, -2, -2, 1469, 1473, 1474,
	-2, -2, -2, -2, 1390, 0, 1399, 1396, 0, 1455,
	1203, 1204, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 1788, 0, -2, 1767, 1770, 1774, 1776, 1778, 0,
	0, 0, 0, 0, 0, 1984, 0, 1986, 1789, 2039,
	2042, 1956, 0, 0, 1443, 1444, 1444, 0, 1856, 0,
	1992, 0, 1999, 2000, 0, 1849, 0, 2033, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1860, 0, 0,
	0, 0, 1892, 1895, 1898, 1901, 0, 0, 0, 0,
	1881, 0, 0, 0, 1885, 1655, 1641, 0, 1683, 1681,
	1682, 1676, 1683, 1680, 1633, 0, 1598, 1599, 1600, 1602,
	1603, 1604, 1606, 1607, 1608, 1610, 1611, 1612, 1614, 1615,
	1616, 1618, 1619, 1620, 1622, 1623, 1624, 1626, 1627, 1628,
	1632, 0, 1905, 0, 1907, 1909, 0, 0, 1911, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 1796, 1797, 1912, 2021, 2022, 0, 0,
	0, 0, 0, 0, 1918, 0, 2027, 1919, 1921, 1431,
	0, 1424, 0, 1489, 1478, 1573, 0, 2048, 1543, 1491,
	1493, 2049, 2087, 1478, 1478, 0, 1996, 0, 0, 1534,
	0, 0, 0, 1536, 1507, 0, 0, 1501, 0, 1497,
	1498, 1499, 1500, 1508, 1085, 1538, 1510, 1514, 2114, 0,
	1540, 0, 1525, 0, 1527, 1560, 0, 1519, 1522, 0,
	0, 2129, 1574, 0, 324, 328, 329, 325, 326, 327,
	562, 0, 0, 0, 0, 1998, 0, 1580, 0, 1586,
	0, 0, 0, 0, 568, 0, 0, 0, 198, 1368,
	375, 459, 182, 464, 467, 2054, 182, 473, 476, 482,
	211, 0, 620, -2, 653, 654, 656, 0, 652, 145,
	1246, 0, 0, 1208, 1210, 2101, 1214, 0, 0, 0,
	0, 0, 0, 150, 2514, 159, 0, 1021, 0, 2088,
	0, 0, 0, 0, 0, 0, 1248, 0, 0, 2514,
	182, 2514, 182, 162, 164, 167, 0, 172, 169, 170,
	0, 0, 1012, 106, 1246, 0, 109, 113, 121, 0,
	0, 0, 127, 0, 0, 0, 1231, 1237, 0, 0,
	1112, 1113, 1116, 1122, 79, 0, 0, 1235, 1241, 89,
	90, 2099, 91, 0, 1207, 0, 0, 0, 174, 111,
	115, 122, 0, 1243, 108, 0, 196, 0, 0, 0,
	188, 0, 189, 190, 205, 0, 182, 2514, 0, 943,
	944, 1164, 1126, 1127, 0, 1132, 0, 0, 0, 1543,
	217, 0, 1543, 225, 0, 2062, 0, 341, 0, 0,
	0, 0, 979, 1067, 0, 950, 0, 0, 0, 414,
	410, 0, 419, 425, 424, -2, 0, 0, 0, 0,
	-2, 0, 0, 1179, 1173, 1174, 0, 0, 0, 2514,
	1328, 1334, 0, 1429, 1444, 429, 1335, 1356, 0, 0,
	0, 1345, 1341, 1338, 1574, 0, 0, 0, 0, 0,
	1567, 1570, 499, 500, 267, 0, 0, 0, 0, 0,
	292, 0, 0, 0, 986, 990, 0, 2137, 2137, 0,
	2092, 0, 0, 0, 0, 253, 0, 256, 0, 0,
	0, 261, 262, 263, 264, 265, 246, 1543, 0, 609,
	0, 0, 759, 0, 782, 791, 793, 796, 832, 834,
	851, 877, 878, 1007, 0, 1007, 0, 0, 893, 1392,
	0, 1467, 1398, 1449, 1450, 0, 1205, 0, 1708, 1751,
	0, 0, -2, 0, 0, 1755, 0, 0, 0, -2,
	0, 0, 0, 1985, 1987, 0, 2041, 1851, 0, 0,
	0, 1855, 1839, 1840, 0, 1959, 2002, 2031, 2035, 0,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 0, 2081, 2115,
	2119, 1932, 1933, 1937, 2095, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 1674, 1678, 0,
	0, 2003, 2014, 2016, 1793, 1794, 1798, 1799, 1800, 1801,
	1802, 1803, 1804, 1805, 1806, 1807, -2, -2, -2, 1811,
	1812, 1813, -2, -2, -2, 0, 0, 0, 2017, 2019,
	2020, 2024, 2025, 0, 1915, 1916, 1917, 2026, 0, 1431,
	1425, 1486, 0, 1572, 1490, 0, 1486, 1486, 1438, 1532,
	0, 0, 1556, 0, 1504, 0, 1505, 0, 1537, 0,
	1512, 1515, 1516, 1526, 0, 1518, 0, 1521, 0, 1851,
	-2, 293, 294, 296, 0, 299, 565, 566, 564, 548,
	0, 0, 1582, 0, 0, 1658, 1662, 1686, 571, 572,
	570, 461, 470, 213, 0, 1541, 0, 0, 0, 0,
	2167, 1223, 1224, 0, 2531, 1227, 0, 0, 0, 0,
	183, 1019, 1048, 0, 0, 0, 1040, 0, 0, 1054,
	152, 0, 0, 0, 160, 0, 0, 157, 0, 166,
	171, 0, 0, 0, 0, 1213, 0, 0, 124, 125,
	126, 0, 131, 0, 132, 0, 0, 0, 0, 0,
	0, 1319, 1320, 1314, 0, 0, 0, 185, 0, 0,
	0, 1202, 0, 0, 207, 0, 0, 0, 1167, 1168,
	1232, 1238, 0, 0, 225, 223, 0, 226, 0, 229,
	230, 0, 225, 219, 0, 0, 1085, 354, 953, 1055,
	0, 1057, 0, 951, 0, 0, 1056, 406, 0, 413,
	0, 0, 1106, 0, 0, 1129, 1140, 1085, 0, 1178,
	1180, 1188, 0, 0, 0, 1330, 1334, 0, 1323, 1324,
	1463, 1336, 1354, -2, 0, 0, 1444, 1362, 1359, 1365,
	1366, 0, 289, 0, 284, 286, 0, 270, 0, 0,
	982, 987, 0, 0, 0, 0, 0, 1347, 1349, 0,
	0, 0, 0, 0, 0, 255, 276, 0, 753, 777,
	842, 879, 1006, 0, 0, 881, 0, 0, 1466, 1453,
	1454, 1451, 1205, 1753, 1757, 0, 0, 0, 1759, -2,
	0, 1781, -2, -2, 1988, 2040, 1830, 1444, 1852, 1854,
	1841, 2034, 1703, 0, 1939, 1936, 0, 1923, 0, 1876,
	1877, 0, 0, 1880, 1882, 1883, 1884, 1642, 1635, 1634,
	2013, 0, 0, 0, 0, 1914, 1426, 0, 1928, 0,
	0, 1494, 1928, 1928, 1533, 0, 1535, 1502, 1495, 0,
	2115, 1528, 1520, 0, 0, 297, 0, 1576, 1581, 0,
	1587, 1657, 214, 146, 147, 1217, 1218, 1219, 1220, 0,
	0, 1225, 1226, 0, 1230, 149, 0, 1020, 0, 1023,
	0, 0, 0, 0, 1030, 1041, 0, 0, 0, 0,
	0, 1042, 0, 1071, 0, 1193, 1200, 0, -2, 0,
	0, 0, 154, 177, 0, 0, 1247, 0, 0, 182,
	182, 0, 0, 1209, 1211, 0, 0, 0, 0, 134,
	0, 0, 1233, 1239, 1236, 1242, 0, 0, 0, 1244,
	194, 195, 0, 182, 0, 187, 182, 182, 1202, 0,
	0, 0, 216, 0, 0, 0, 0, 218, 282, 225,
	0, 1001, 0, 1067, 1059, 1060, 1061, 0, 1066, 1068,
	0, 0, 967, 952, 0, 963, 0, 0, 980, 955,
	0, 411, 941, 1103, 1137, 1085, 0, 1171, 0, 0,
	0, 0, 0, 0, 1332, 1334, 0, 1325, 1326, 1356,
	1462, 0, 0, 0, 1344, 1463, 0, 291, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 257,
	0, 258, 259, 260, 247, 611, 613, 0, 0, 619,
	1005, 0, 0, 0, 0, 1452, 1761, -2, -2, 1782,
	0, 2116, 2118, 1444, 0, 1925, 1446, 0, 0, -2,
	0, 0, 0, 1427, 1410, 0, 1485, 1477, 1479, 1481,
	2407, 2207, 2513, 1411, 1412, 1555, 0, 1523, 298, 0,
	1583, 0, 1221, 1222, 0, 151, 0, 1024, 1025, 2091,
	1027, 0, 1029, 1031, 1032, 0, 1035, 2139, 0, 1039,
	0, 1050, 1072, 0, 1081, 0, 1195, 1205, 1199, 0,
	1197, 1083, 0, 153, 155, 176, 1202, 0, 156, 165,
	0, 0, 110, 0, 0, 2202, 137, 135, 133, 1206,
	112, 0, 196, 206, 1201, 191, 208, 182, 0, 1234,
	1240, 227, 0, 228, 231, 0, 0, 1009, 0, 954,
	1058, 0, 1069, 1070, 957, 0, 956, 0, 0, 0,
	0, 0, 412, 415, 0, 418, 0, 0, 1181, 0,
	1187, 0, 0, 0, 1313, 0, 0, 1327, 1328, 427,
	1350, 0, 0, 1356, 1367, 269, 0, 0, 988, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 989, 1083,
	0, 0, 1047, 0, 274, 254, 0, 615, 0, 617,
	0, 880, 882, 0, 0, 1853, 1943, 0, 0, 1878,
	1879, -2, 0, 1819, 1927, 1929, 0, 0, 0, 0,
	0, 1496, 1577, 1215, 0, 1228, 0, 1022, 1026, 0,
	0, 0, 1089, 0, 0, 1043, 0, 1075, 1076, 1001,
	0, 1077, 1078, 1079, 1194, 1455, 1200, 1001, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 186, 209,
	1202, 224, 241, 0, 1138, 955, 1008, 0, 0, 965,
	0, 968, 0, 964, 961, 962, 953, 0, 416, 417,
	0, 1141, 0, 1188, 0, 0, 1316, 1312, 1334, 1329,
	1330, 1574, 1353, 1357, 0, 0, 1081, 1083, 955, 0,
	614, 0, 0, 885, 886, 0, 0, 0, 0, 1938,
	1447, 1820, 0, 0, 1480, 1482, 1483, 1484, 1216, 1229,
	0, 0, 1034, 1094, 0, 0, 0, 1073, 1074, 1009,
	0, 1198, 1196, 1052, 0, 1085, 158, 0, 1083, 0,
	1013, 0, 0, 1016, 0, 0, 138, 2202, 136, 0,
	182, 244, 0, 238, 236, 237, 957, 0, 0, 1063,
	1065, 0, 969, 1001, 967, 1139, 1083, 0, 1081, 0,
	1322, 1334, 1317, 1318, 0, 1332, 0, 292, 292, 1001,
	1081, 1574, 0, 292, 616, 618, 1935, 1955, 1944, -2,
	2473, 2208, 0, 1955, 1955, 1930, 1931, 0, 0, 1036,
	1090, 1091, 0, 1086, 1087, 1088, 2138, 1037, 1038, 1071,
	0, 0, 1089, 178, 1001, 1010, 0, 0, 1011, 0,
	0, 141, 0, 143, 210, 232, 0, 0, 949, 0,
	1062, 0, 0, 0, 0, 1009, 957, 1081, 0, 1001,
	0, 1309, 1321, 0, 1331, 1313, 0, 271, 272, 1009,
	1001, 1046, 273, 1940, 0, 0, 1946, 1947, 1948, 1949,
	1950, 1941, 1942, 1028, 0, 1092, 0, 1093, 0, 0,
	0, 1574, 1080, 0, 1094, 163, 1014, 0, 1017, 0,
	139, 0, 239, 240, 946, 948, 0, 1064, 958, 0,
	960, 955, 966, 1001, 0, 1009, 0, 1315, 2100, 1316,
	1351, 0, 955, 1009, 0, 1952, 1953, 0, 0, 0,
	1095, 0, 1098, 1099, 0, 1096, 1051, 0, 1071, 0,
	0, 0, 0, 959, 957, 1009, 1083, 955, 1081, 1322,
	0, 1574, 955, 1951, 1954, 1945, 1033, 1097, 1100, 1101,
	1082, 1053, 0, 0, 242, 0, 1004, 949, 955, 1081,
	1574, 1001, 1310, 1574, 1044, 1574, 1009, 0, 0, 1000,
	1002, 1003, 947, 1574, 1001, 1184, 1009, 1352, 1045, 1015,
	0, 243, 1182, 1009, 955, 0, 955, 1574, 0, 1574,
	1185, 1009, 1183, 1018,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 561, 3, 567, 562, 3,
	572, 573, 565, 563, 577, 564, 574, 566, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 580, 3,
	553, 555, 554, 558, 576, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 570, 3, 571, 568, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 578, 560, 579, 556,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 557, 57896, 559, 57897, 569, 57898, 575, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1281
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1286
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1288
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1291
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1292
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1293
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1294
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1295
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1296
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1297
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1298
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1299
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1300
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1301
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1308
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "ALTER")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1323
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1324
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1325
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1326
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1327
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1328
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1329
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1387
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1413
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1426
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1443
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1447
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1451
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1477
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1481
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1487
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1496
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1505
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1514
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1538
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1570
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1574
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1578
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1584
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1588
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1594
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1603
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1614
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1618
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1624
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1632
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1642
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1646
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1656
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1667
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1674
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1686
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1693
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1701
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1706
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1710
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1715
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1721
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1729
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1740
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 131:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1750
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 132:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1760
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1769
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1780
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 135:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1786
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1794
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1798
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1802
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 139:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1806
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1812
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1817
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1828
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1832
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1838
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1842
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1849
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1859
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1864
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1869
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1874
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1879
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1889
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1899
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1920
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1937
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1940
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1946
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 163:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1961
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1968
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1991
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1998
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2006
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].union.user(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2013
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2014
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2018
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2036
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = nil
		}
	case 178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2050
		{
			sqlVAL.union.val = nil
		}
	case 180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2057
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2061
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2075
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 185:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2122
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2132
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2159
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2163
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2166
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2177
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2201
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2206
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2213
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2221
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 211:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2245
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2252
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2256
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2264
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 216:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2326
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2335
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2343
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2351
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2370
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2383
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2387
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2391
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2481
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2486
		{
			sqlVAL.union.val = nil
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2494
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2498
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2516
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2524
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = nil
		}
	case 245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2569
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2596
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2604
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2610
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2621
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2625
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2629
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2636
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2640
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2657
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2720
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2725
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2729
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2735
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2740
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2745
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2750
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2755
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2759
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2778
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2786
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2794
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2798
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2804
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2808
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2814
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2846
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = nil
		}
	case 293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2862
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2878
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2892
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2904
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2912
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2913
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2914
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2915
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2933
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2942
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2969
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2975
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2978
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2988
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2997
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3005
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3007
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3011
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3014
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3026
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3039
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3045
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3050
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3062
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3064
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3065
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3066
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3067
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3068
		{
			return helpWith(sqllex, "CREATE")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3078
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3081
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3084
		{
			return unimplemented(sqllex, "create access method")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3085
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3086
		{
			return unimplemented(sqllex, "create cast")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3087
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3088
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3089
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3090
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3091
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3092
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3093
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3094
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3095
		{
			return unimplemented(sqllex, "create operator")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3096
		{
			return unimplemented(sqllex, "create publication")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3097
		{
			return unimplemented(sqllex, "create rule")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3098
		{
			return unimplemented(sqllex, "create server")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3099
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3100
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3101
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3102
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3105
		{
		}
	case 364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3106
		{
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3109
		{
		}
	case 366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3110
		{
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3113
		{
		}
	case 368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3114
		{
		}
	case 369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3117
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3118
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3119
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3120
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3121
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3122
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3123
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3124
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3125
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3126
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3127
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3128
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3129
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3130
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3131
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3132
		{
			return unimplemented(sqllex, "drop server")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3133
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3134
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3135
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3139
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3140
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3141
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3142
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3143
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3145
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3146
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3147
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3148
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3158
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3166
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3180
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3184
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3193
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3200
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3206
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3212
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3216
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3227
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3255
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3265
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3290
		{

			sqlVAL.union.val = nil
		}
	case 427:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3304
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3314
		{
			return helpWith(sqllex, "DELETE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3317
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3318
		{
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3326
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3329
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3330
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3331
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3332
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3333
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3342
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3343
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3344
		{
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3345
		{
			return helpWith(sqllex, "DROP")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3348
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3349
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3350
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3351
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3352
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3353
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3354
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3379
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3387
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3399
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3410
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3417
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3425
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3434
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3442
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3450
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3458
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3465
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3472
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3480
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3487
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3491
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3497
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3501
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3510
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3518
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3525
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3540
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3544
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3549
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3562
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3567
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3574
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3601
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3608
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3610
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3618
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3626
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3634
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3642
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3653
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3657
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3660
		{
			return helpWith(sqllex, "DELETE")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3662
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3663
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3664
		{
			return helpWith(sqllex, "INSERT")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3667
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3669
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3677
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3678
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3679
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3684
		{
			return helpWith(sqllex, "DELETE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3685
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3686
		{
			return helpWith(sqllex, "INSERT")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3693
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3701
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3719
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3727
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3731
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3735
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3745
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3752
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3760
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3768
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3778
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3790
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3793
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3827
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3831
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3840
		{
			return helpWith(sqllex, "GRANT")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3862
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3866
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3874
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3887
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3896
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3906
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3910
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3924
		{
			return helpWith(sqllex, "RESET")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3925
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3933
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3940
		{
			return helpWith(sqllex, "RESET")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3951
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3962
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3965
		{
			return helpWith(sqllex, "USE")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3969
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3970
		{
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3971
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3972
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3976
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3977
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3978
		{
			return helpWith(sqllex, "USE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3994
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4012
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4030
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4038
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4042
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4052
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4056
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4062
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4066
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4070
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4092
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4102
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4118
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4146
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4149
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4151
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4154
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4158
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4177
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4184
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4189
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4194
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4199
		{
			return unimplemented(sqllex, "set from current")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4200
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4213
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4230
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4234
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4266
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4276
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4280
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4284
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = tree.Low
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = tree.Normal
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4302
		{
			sqlVAL.union.val = tree.High
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4313
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4317
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4321
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4326
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4330
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4345
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4346
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4347
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4348
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4349
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4350
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4351
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4352
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4354
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4355
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4356
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4358
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4360
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4361
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4362
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4364
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4366
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4367
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4368
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4369
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4370
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4371
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4372
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4373
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4375
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4376
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4378
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4380
		{
			return helpWith(sqllex, "SHOW")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4386
		{
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4387
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4390
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4394
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4399
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4404
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4409
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4414
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4425
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4426
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4437
		{
			sqlVAL.str = "client_encoding"
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.str = "timezone"
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4441
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4455
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4459
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4463
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4474
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4482
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4504
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4513
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4522
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4531
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4539
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4556
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4561
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4563
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4570
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4578
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4581
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4589
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4593
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4597
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4604
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4612
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4615
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4626
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4636
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4645
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4652
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4655
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4668
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4676
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4684
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4687
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4689
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4693
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4700
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4709
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4717
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4720
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4722
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4725
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4733
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4736
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4741
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = true
		}
	case 807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = true
		}
	case 808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = false
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4767
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4768
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4774
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4778
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4781
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4783
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4817
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4823
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4825
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4831
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4839
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 828:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4845
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4849
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4860
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4863
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4868
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4870
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4874
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4877
		{
			sqlVAL.union.val = true
		}
	case 837:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = false
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4886
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4891
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4902
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4922
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4925
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4932
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4935
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4937
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4940
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4943
		{
			sqlVAL.union.val = true
		}
	case 851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = false
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4951
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4958
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4972
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4979
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4983
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4987
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4997
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5000
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5008
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5013
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5018
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5022
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5034
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5038
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5051
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5054
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5062
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5065
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5069
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5073
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5077
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5085
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5100
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5122
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5136
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5145
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5150
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5154
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5157
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5185
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5191
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5209
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5219
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5226
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 902:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5231
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5355
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5359
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5402
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5411
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 916:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5460
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5461
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5462
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5472
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5473
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5474
		{
			return helpWith(sqllex, "RESUME")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5492
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5501
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5525
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5533
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5535
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5541
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5549
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5555
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5569
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5576
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5596
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5604
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5643
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[9].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[10].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[11].union.storageParams(),
				OnCommit:      sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:      sqlDollar[13].union.locality(),
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5659
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[12].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[13].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[14].union.storageParams(),
				OnCommit:      sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:      sqlDollar[16].union.locality(),
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5677
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5681
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5688
		{

			sqlVAL.union.val = nil
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5694
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.str = ""
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5704
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5710
		{
			sqlVAL.union.val = nil
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5714
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 957:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5719
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5723
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5727
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5731
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 965:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5757
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5771
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5786
		{
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5787
		{
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5788
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5806
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5808
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5812
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5813
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5814
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 980:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5837
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5843
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5856
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5865
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5869
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5875
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5880
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5881
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5883
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5884
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5886
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5887
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5888
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5893
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5902
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5909
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5914
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5919
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5925
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5932
		{
			sqlVAL.str = ""
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5959
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5965
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5969
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5975
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6009
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6024
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6042
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6072
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6097
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6105
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6119
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6130
		{
			sqlVAL.union.val = true
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = false
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6140
		{
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6141
		{
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6146
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6174
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6186
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6203
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[4].union.idxElems(),
					Storing:     sqlDollar[6].union.nameList(),
					Interleave:  sqlDollar[7].union.interleave(),
					PartitionBy: sqlDollar[8].union.partitionBy(),
					Predicate:   sqlDollar[10].union.expr(),
				},
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6229
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6241
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6252
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6263
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6269
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6279
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6290
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6294
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6307
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6318
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6322
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6359
		{
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6360
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6361
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6362
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6363
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6364
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6382
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6386
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6428
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6436
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6440
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6453
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6485
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6493
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6497
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6520
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6529
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6537
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6548
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6553
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6563
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6566
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6568
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6570
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6573
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6576
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6578
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6580
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6591
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6599
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6613
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6616
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6624
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6631
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = true
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6641
		{

			sqlVAL.union.val = true
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = false
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6656
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6670
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6682
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6694
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6704
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6714
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6722
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6746
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6762
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6766
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6770
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6774
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6778
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6782
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6786
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6799
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6805
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = nil
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6824
		{
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6825
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6841
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6843
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6845
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6847
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6849
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6851
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6859
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6889
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6907
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6926
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6943
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6960
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6964
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6979
		{
			sqlVAL.union.val = false
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = true
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = false
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = true
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = false
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7018
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7024
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7030
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7038
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7062
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.str = ""
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7066
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7067
		{
			sqlVAL.str = ""
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7071
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7097
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7103
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7111
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7149
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7162
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7180
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7199
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7237
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7299
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7305
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7317
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7323
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7337
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7343
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7360
		{
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7361
		{
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7364
		{
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7365
		{
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7376
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7394
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7403
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7416
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7424
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7426
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7432
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7445
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7453
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7455
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7461
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7469
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7472
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7476
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7477
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7478
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7497
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7499
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7502
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7515
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7520
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7529
		{
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7530
		{
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7531
		{
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7548
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7551
		{
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7552
		{
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7566
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7580
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7593
		{
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7595
		{
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7599
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7634
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7638
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7644
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7648
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7658
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7672
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7686
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.str = ""
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7706
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7712
		{

		}
	case 1319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7719
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7723
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7730
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.str = ""
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7746
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7750
		{
			sqlVAL.str = ""
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.str = ""
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.str = ""
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7776
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7789
		{
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7790
		{
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7805
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7819
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7830
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7837
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7841
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7850
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7869
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7899
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7926
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7930
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7968
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7997
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8000
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8021
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8036
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8077
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8102
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8139
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8140
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8144
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8148
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8165
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8174
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8180
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8215
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8216
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8217
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8239
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8278
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8291
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8315
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8322
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8338
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = true
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = false
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8391
		{
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8392
		{
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = nil
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8405
		{
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8406
		{
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = true
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = false
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = false
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.union.val = true
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8435
		{
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8436
		{
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8439
		{
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8440
		{
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8481
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8502
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8507
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8536
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8545
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8561
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8569
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8624
		{
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8625
		{
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8628
		{
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8629
		{
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8663
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8664
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8665
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8695
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8697
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8712
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8720
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8724
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8730
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8734
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8739
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8744
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8755
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8767
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8786
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8825
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8835
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8853
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8870
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8881
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8911
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8938
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8944
		{
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8946
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = nil
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.union.val = true
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = false
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8989
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9005
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9009
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9032
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9045
		{
			sqlVAL.str = tree.AstFull
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.str = tree.AstRight
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9057
		{
			sqlVAL.str = tree.AstInner
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9063
		{
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9064
		{
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.str = tree.AstHash
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.str = ""
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9117
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9129
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9133
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9138
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9156
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9162
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9168
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9178
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = true
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = false
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = true
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = false
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9227
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9240
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9248
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9249
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9267
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9269
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9277
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9290
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9297
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9306
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9346
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9358
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9359
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9363
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9364
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9365
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9367
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9368
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9369
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9371
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9372
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9373
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9375
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9376
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9377
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9379
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9380
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9381
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9383
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9384
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9385
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9387
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9388
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9389
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9391
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9392
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9393
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = types.Geography
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9404
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9408
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9416
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9442
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9450
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = nil
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = types.Int2
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = types.Int
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = types.Float4
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9489
		{
			sqlVAL.union.val = types.Float
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9493
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9501
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9509
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9517
		{
			sqlVAL.union.val = types.Bool
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9523
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = types.Float
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9542
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9548
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9570
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = types.String
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = true
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = false
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = types.Date
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9619
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9627
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9639
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9641
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9650
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9658
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9675
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9685
		{
			sqlVAL.union.val = true
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = false
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.union.val = false
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = types.Interval
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9699
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9783
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9798
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = nil
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9828
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9873
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9888
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9905
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9953
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9957
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9969
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9977
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9993
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10005
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10009
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10025
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10033
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10129
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10140
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10206
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10228
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10348
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10422
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10427
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10453
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10462
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10477
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10507
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10518
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10519
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10534
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10543
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10609
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10680
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10684
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10688
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10696
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10700
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10704
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10720
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10724
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10731
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10734
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10739
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10748
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10757
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10766
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10775
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10777
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10780
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10785
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10790
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10795
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10797
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10804
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10805
		{
			return unimplemented(sqllex, "treat")
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10826
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10831
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10837
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10841
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10862
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10878
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10886
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10901
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.str = ""
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10927
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10931
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10953
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10967
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10980
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11012
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11048
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11077
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = tree.Any
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = tree.Some
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11097
		{
			sqlVAL.union.val = tree.All
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = tree.Div
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = tree.LT
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = tree.GT
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = tree.LE
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = tree.GE
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = tree.NE
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = tree.Like
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11180
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11223
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11227
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11389
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11399
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11412
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11423
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11429
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11438
		{
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11439
		{
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11443
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11447
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11470
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11478
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11482
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11488
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11511
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11519
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11542
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11551
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11555
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11563
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11569
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11573
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11588
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11592
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11604
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11608
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11617
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11628
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11637
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11645
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11657
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11738
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11793
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11800
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11826
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11830
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11843
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11852
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11870
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11883
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11890
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.str = ""
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11921
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11925
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
