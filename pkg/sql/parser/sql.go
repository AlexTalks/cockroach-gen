// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:72

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}

//line sql-gen.y:661
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11087

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 29,
	-2, 1227,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 67,
	427, 183,
	-2, 0,
	-1, 77,
	202, 1042,
	214, 1042,
	229, 301,
	324, 301,
	333, 840,
	364, 301,
	375, 840,
	412, 840,
	437, 301,
	462, 840,
	-2, 0,
	-1, 83,
	229, 305,
	-2, 0,
	-1, 84,
	118, 1227,
	208, 1227,
	447, 1227,
	448, 1227,
	-2, 0,
	-1, 100,
	133, 1198,
	151, 1198,
	164, 1198,
	211, 1198,
	241, 1198,
	284, 1198,
	294, 1198,
	442, 1198,
	-2, 1169,
	-1, 132,
	141, 731,
	228, 731,
	327, 711,
	380, 711,
	430, 731,
	-2, 0,
	-1, 134,
	4, 1229,
	21, 1229,
	22, 1229,
	23, 1229,
	24, 1229,
	25, 1229,
	26, 1229,
	28, 1229,
	29, 1229,
	35, 1229,
	40, 1229,
	41, 1229,
	42, 1229,
	43, 1229,
	44, 1229,
	45, 1229,
	46, 1229,
	47, 1229,
	48, 1229,
	50, 1229,
	51, 1229,
	52, 1229,
	54, 1229,
	55, 1229,
	56, 1229,
	57, 1229,
	58, 1229,
	62, 1229,
	63, 1229,
	64, 1229,
	65, 1229,
	67, 1229,
	68, 1229,
	69, 1229,
	73, 1229,
	74, 1229,
	75, 1229,
	76, 1229,
	77, 1229,
	78, 1229,
	79, 1229,
	82, 1229,
	83, 1229,
	84, 1229,
	85, 1229,
	87, 1229,
	89, 1229,
	90, 1229,
	91, 1229,
	93, 1229,
	95, 1229,
	96, 1229,
	104, 1229,
	105, 1229,
	106, 1229,
	107, 1229,
	109, 1229,
	110, 1229,
	111, 1229,
	113, 1229,
	114, 1229,
	115, 1229,
	117, 1229,
	118, 1229,
	120, 1229,
	121, 1229,
	124, 1229,
	125, 1229,
	126, 1229,
	128, 1229,
	129, 1229,
	131, 1229,
	132, 1229,
	134, 1229,
	135, 1229,
	136, 1229,
	137, 1229,
	138, 1229,
	139, 1229,
	140, 1229,
	141, 1229,
	142, 1229,
	143, 1229,
	144, 1229,
	145, 1229,
	146, 1229,
	147, 1229,
	148, 1229,
	150, 1229,
	156, 1229,
	157, 1229,
	158, 1229,
	159, 1229,
	163, 1229,
	165, 1229,
	169, 1229,
	170, 1229,
	171, 1229,
	172, 1229,
	173, 1229,
	174, 1229,
	176, 1229,
	177, 1229,
	179, 1229,
	180, 1229,
	182, 1229,
	183, 1229,
	184, 1229,
	185, 1229,
	186, 1229,
	187, 1229,
	188, 1229,
	189, 1229,
	190, 1229,
	192, 1229,
	193, 1229,
	195, 1229,
	196, 1229,
	197, 1229,
	198, 1229,
	202, 1229,
	203, 1229,
	204, 1229,
	205, 1229,
	208, 1229,
	209, 1229,
	210, 1229,
	212, 1229,
	214, 1229,
	216, 1229,
	218, 1229,
	219, 1229,
	220, 1229,
	222, 1229,
	226, 1229,
	227, 1229,
	228, 1229,
	229, 1229,
	230, 1229,
	232, 1229,
	233, 1229,
	235, 1229,
	236, 1229,
	238, 1229,
	239, 1229,
	242, 1229,
	243, 1229,
	244, 1229,
	247, 1229,
	248, 1229,
	249, 1229,
	250, 1229,
	252, 1229,
	253, 1229,
	254, 1229,
	255, 1229,
	256, 1229,
	257, 1229,
	258, 1229,
	259, 1229,
	260, 1229,
	261, 1229,
	262, 1229,
	264, 1229,
	266, 1229,
	267, 1229,
	268, 1229,
	269, 1229,
	270, 1229,
	271, 1229,
	273, 1229,
	275, 1229,
	277, 1229,
	279, 1229,
	280, 1229,
	281, 1229,
	282, 1229,
	283, 1229,
	286, 1229,
	289, 1229,
	290, 1229,
	291, 1229,
	292, 1229,
	295, 1229,
	296, 1229,
	297, 1229,
	299, 1229,
	301, 1229,
	302, 1229,
	303, 1229,
	304, 1229,
	305, 1229,
	306, 1229,
	307, 1229,
	308, 1229,
	309, 1229,
	310, 1229,
	311, 1229,
	313, 1229,
	314, 1229,
	315, 1229,
	316, 1229,
	317, 1229,
	318, 1229,
	319, 1229,
	320, 1229,
	321, 1229,
	323, 1229,
	325, 1229,
	326, 1229,
	327, 1229,
	328, 1229,
	329, 1229,
	330, 1229,
	331, 1229,
	332, 1229,
	333, 1229,
	334, 1229,
	335, 1229,
	342, 1229,
	344, 1229,
	345, 1229,
	346, 1229,
	347, 1229,
	348, 1229,
	349, 1229,
	350, 1229,
	351, 1229,
	353, 1229,
	354, 1229,
	355, 1229,
	357, 1229,
	358, 1229,
	359, 1229,
	360, 1229,
	361, 1229,
	362, 1229,
	364, 1229,
	365, 1229,
	366, 1229,
	367, 1229,
	368, 1229,
	369, 1229,
	370, 1229,
	371, 1229,
	372, 1229,
	373, 1229,
	375, 1229,
	376, 1229,
	377, 1229,
	378, 1229,
	379, 1229,
	380, 1229,
	382, 1229,
	383, 1229,
	384, 1229,
	385, 1229,
	386, 1229,
	388, 1229,
	389, 1229,
	390, 1229,
	392, 1229,
	394, 1229,
	395, 1229,
	396, 1229,
	397, 1229,
	398, 1229,
	399, 1229,
	400, 1229,
	401, 1229,
	402, 1229,
	403, 1229,
	404, 1229,
	405, 1229,
	406, 1229,
	408, 1229,
	409, 1229,
	411, 1229,
	413, 1229,
	414, 1229,
	415, 1229,
	416, 1229,
	417, 1229,
	418, 1229,
	419, 1229,
	420, 1229,
	422, 1229,
	423, 1229,
	424, 1229,
	425, 1229,
	426, 1229,
	428, 1229,
	430, 1229,
	431, 1229,
	432, 1229,
	433, 1229,
	434, 1229,
	436, 1229,
	437, 1229,
	438, 1229,
	440, 1229,
	441, 1229,
	444, 1229,
	445, 1229,
	446, 1229,
	447, 1229,
	448, 1229,
	449, 1229,
	450, 1229,
	452, 1229,
	455, 1229,
	456, 1229,
	457, 1229,
	458, 1229,
	459, 1229,
	460, 1229,
	462, 1229,
	463, 1229,
	464, 1229,
	469, 1229,
	470, 1229,
	471, 1229,
	472, 1229,
	473, 1229,
	474, 1229,
	-2, 0,
	-1, 135,
	1, 1103,
	218, 1103,
	323, 1103,
	331, 1103,
	477, 1103,
	501, 1103,
	-2, 0,
	-1, 137,
	1, 1103,
	501, 1103,
	-2, 0,
	-1, 138,
	1, 1103,
	501, 1103,
	-2, 0,
	-1, 139,
	1, 1103,
	427, 1103,
	501, 1103,
	-2, 0,
	-1, 166,
	133, 1197,
	151, 1197,
	164, 1197,
	211, 1197,
	241, 1197,
	284, 1197,
	294, 1197,
	442, 1197,
	-2, 1172,
	-1, 199,
	4, 1236,
	5, 1236,
	6, 1236,
	7, 1236,
	8, 1236,
	9, 1236,
	10, 1236,
	21, 1236,
	22, 1236,
	23, 1236,
	24, 1236,
	25, 1236,
	26, 1236,
	28, 1236,
	29, 1236,
	35, 1236,
	36, 1236,
	40, 1236,
	41, 1236,
	42, 1236,
	43, 1236,
	44, 1236,
	45, 1236,
	46, 1236,
	47, 1236,
	48, 1236,
	50, 1236,
	51, 1236,
	52, 1236,
	54, 1236,
	55, 1236,
	56, 1236,
	57, 1236,
	58, 1236,
	59, 1236,
	60, 1236,
	61, 1236,
	62, 1236,
	63, 1236,
	64, 1236,
	65, 1236,
	67, 1236,
	68, 1236,
	69, 1236,
	71, 1236,
	73, 1236,
	74, 1236,
	75, 1236,
	76, 1236,
	77, 1236,
	78, 1236,
	79, 1236,
	82, 1236,
	83, 1236,
	84, 1236,
	85, 1236,
	87, 1236,
	89, 1236,
	90, 1236,
	91, 1236,
	93, 1236,
	94, 1236,
	95, 1236,
	96, 1236,
	97, 1236,
	98, 1236,
	99, 1236,
	100, 1236,
	101, 1236,
	102, 1236,
	103, 1236,
	104, 1236,
	105, 1236,
	106, 1236,
	107, 1236,
	108, 1236,
	109, 1236,
	110, 1236,
	111, 1236,
	112, 1236,
	113, 1236,
	114, 1236,
	115, 1236,
	117, 1236,
	118, 1236,
	120, 1236,
	121, 1236,
	124, 1236,
	125, 1236,
	126, 1236,
	128, 1236,
	129, 1236,
	131, 1236,
	132, 1236,
	134, 1236,
	135, 1236,
	136, 1236,
	137, 1236,
	138, 1236,
	139, 1236,
	140, 1236,
	141, 1236,
	142, 1236,
	143, 1236,
	144, 1236,
	145, 1236,
	146, 1236,
	147, 1236,
	148, 1236,
	149, 1236,
	150, 1236,
	156, 1236,
	157, 1236,
	158, 1236,
	159, 1236,
	163, 1236,
	165, 1236,
	168, 1236,
	169, 1236,
	170, 1236,
	171, 1236,
	172, 1236,
	173, 1236,
	174, 1236,
	176, 1236,
	177, 1236,
	179, 1236,
	180, 1236,
	182, 1236,
	183, 1236,
	184, 1236,
	185, 1236,
	186, 1236,
	187, 1236,
	188, 1236,
	189, 1236,
	190, 1236,
	191, 1236,
	192, 1236,
	193, 1236,
	195, 1236,
	196, 1236,
	197, 1236,
	198, 1236,
	202, 1236,
	203, 1236,
	204, 1236,
	205, 1236,
	207, 1236,
	208, 1236,
	209, 1236,
	210, 1236,
	212, 1236,
	214, 1236,
	215, 1236,
	216, 1236,
	217, 1236,
	218, 1236,
	219, 1236,
	220, 1236,
	221, 1236,
	222, 1236,
	226, 1236,
	227, 1236,
	228, 1236,
	229, 1236,
	230, 1236,
	232, 1236,
	233, 1236,
	235, 1236,
	236, 1236,
	237, 1236,
	238, 1236,
	239, 1236,
	240, 1236,
	242, 1236,
	243, 1236,
	244, 1236,
	245, 1236,
	246, 1236,
	247, 1236,
	248, 1236,
	249, 1236,
	250, 1236,
	252, 1236,
	253, 1236,
	254, 1236,
	255, 1236,
	256, 1236,
	257, 1236,
	258, 1236,
	259, 1236,
	260, 1236,
	261, 1236,
	262, 1236,
	264, 1236,
	265, 1236,
	266, 1236,
	267, 1236,
	268, 1236,
	269, 1236,
	270, 1236,
	271, 1236,
	272, 1236,
	273, 1236,
	274, 1236,
	275, 1236,
	276, 1236,
	277, 1236,
	278, 1236,
	279, 1236,
	280, 1236,
	281, 1236,
	282, 1236,
	283, 1236,
	286, 1236,
	290, 1236,
	291, 1236,
	292, 1236,
	295, 1236,
	296, 1236,
	297, 1236,
	298, 1236,
	299, 1236,
	300, 1236,
	301, 1236,
	302, 1236,
	303, 1236,
	304, 1236,
	305, 1236,
	306, 1236,
	307, 1236,
	308, 1236,
	309, 1236,
	310, 1236,
	311, 1236,
	313, 1236,
	314, 1236,
	315, 1236,
	316, 1236,
	317, 1236,
	318, 1236,
	319, 1236,
	320, 1236,
	321, 1236,
	323, 1236,
	325, 1236,
	326, 1236,
	327, 1236,
	328, 1236,
	329, 1236,
	330, 1236,
	331, 1236,
	332, 1236,
	333, 1236,
	334, 1236,
	335, 1236,
	342, 1236,
	344, 1236,
	345, 1236,
	346, 1236,
	347, 1236,
	348, 1236,
	349, 1236,
	350, 1236,
	351, 1236,
	353, 1236,
	354, 1236,
	355, 1236,
	356, 1236,
	357, 1236,
	358, 1236,
	359, 1236,
	360, 1236,
	361, 1236,
	362, 1236,
	364, 1236,
	365, 1236,
	366, 1236,
	367, 1236,
	368, 1236,
	369, 1236,
	370, 1236,
	371, 1236,
	372, 1236,
	373, 1236,
	375, 1236,
	376, 1236,
	377, 1236,
	378, 1236,
	379, 1236,
	380, 1236,
	381, 1236,
	382, 1236,
	383, 1236,
	384, 1236,
	385, 1236,
	386, 1236,
	387, 1236,
	388, 1236,
	389, 1236,
	390, 1236,
	392, 1236,
	394, 1236,
	395, 1236,
	396, 1236,
	397, 1236,
	398, 1236,
	399, 1236,
	400, 1236,
	401, 1236,
	402, 1236,
	403, 1236,
	404, 1236,
	405, 1236,
	406, 1236,
	408, 1236,
	409, 1236,
	410, 1236,
	411, 1236,
	413, 1236,
	414, 1236,
	415, 1236,
	416, 1236,
	417, 1236,
	418, 1236,
	419, 1236,
	420, 1236,
	422, 1236,
	423, 1236,
	424, 1236,
	425, 1236,
	426, 1236,
	428, 1236,
	430, 1236,
	431, 1236,
	432, 1236,
	433, 1236,
	434, 1236,
	435, 1236,
	436, 1236,
	437, 1236,
	438, 1236,
	440, 1236,
	441, 1236,
	443, 1236,
	444, 1236,
	445, 1236,
	446, 1236,
	447, 1236,
	448, 1236,
	449, 1236,
	450, 1236,
	451, 1236,
	452, 1236,
	455, 1236,
	456, 1236,
	457, 1236,
	458, 1236,
	459, 1236,
	460, 1236,
	462, 1236,
	463, 1236,
	464, 1236,
	469, 1236,
	470, 1236,
	471, 1236,
	472, 1236,
	473, 1236,
	474, 1236,
	475, 1236,
	482, 1236,
	489, 1236,
	490, 1236,
	491, 1236,
	498, 1236,
	502, 1236,
	-2, 0,
	-1, 596,
	167, 1942,
	427, 1942,
	481, 1942,
	500, 1942,
	-2, 0,
	-1, 597,
	167, 2024,
	427, 2024,
	481, 2024,
	500, 2024,
	-2, 0,
	-1, 598,
	167, 1930,
	427, 1930,
	481, 1930,
	500, 1930,
	-2, 0,
	-1, 600,
	167, 2120,
	427, 2120,
	481, 2120,
	500, 2120,
	-2, 0,
	-1, 602,
	167, 2150,
	427, 2150,
	481, 2150,
	500, 2150,
	-2, 0,
	-1, 609,
	167, 2039,
	427, 2039,
	481, 2039,
	500, 2039,
	-2, 567,
	-1, 638,
	500, 1883,
	503, 1883,
	-2, 785,
	-1, 639,
	500, 1885,
	503, 1885,
	-2, 786,
	-1, 640,
	500, 1884,
	503, 1884,
	-2, 787,
	-1, 641,
	503, 1818,
	-2, 788,
	-1, 663,
	164, 196,
	-2, 0,
	-1, 686,
	462, 1019,
	-2, 841,
	-1, 725,
	4, 1040,
	21, 1040,
	22, 1040,
	23, 1040,
	24, 1040,
	25, 1040,
	26, 1040,
	28, 1040,
	29, 1040,
	35, 1040,
	40, 1040,
	41, 1040,
	42, 1040,
	43, 1040,
	44, 1040,
	45, 1040,
	46, 1040,
	47, 1040,
	48, 1040,
	50, 1040,
	51, 1040,
	52, 1040,
	54, 1040,
	55, 1040,
	56, 1040,
	57, 1040,
	58, 1040,
	62, 1040,
	63, 1040,
	64, 1040,
	65, 1040,
	67, 1040,
	68, 1040,
	69, 1040,
	73, 1040,
	74, 1040,
	75, 1040,
	76, 1040,
	77, 1040,
	78, 1040,
	79, 1040,
	82, 1040,
	83, 1040,
	84, 1040,
	85, 1040,
	87, 1040,
	89, 1040,
	90, 1040,
	91, 1040,
	93, 1040,
	95, 1040,
	96, 1040,
	104, 1040,
	105, 1040,
	106, 1040,
	107, 1040,
	109, 1040,
	110, 1040,
	111, 1040,
	113, 1040,
	114, 1040,
	115, 1040,
	117, 1040,
	118, 1040,
	120, 1040,
	121, 1040,
	124, 1040,
	125, 1040,
	126, 1040,
	128, 1040,
	129, 1040,
	131, 1040,
	132, 1040,
	134, 1040,
	135, 1040,
	136, 1040,
	137, 1040,
	138, 1040,
	139, 1040,
	140, 1040,
	141, 1040,
	142, 1040,
	143, 1040,
	144, 1040,
	145, 1040,
	146, 1040,
	147, 1040,
	148, 1040,
	150, 1040,
	156, 1040,
	157, 1040,
	158, 1040,
	159, 1040,
	163, 1040,
	165, 1040,
	169, 1040,
	170, 1040,
	171, 1040,
	172, 1040,
	173, 1040,
	174, 1040,
	176, 1040,
	177, 1040,
	179, 1040,
	180, 1040,
	182, 1040,
	183, 1040,
	184, 1040,
	185, 1040,
	186, 1040,
	187, 1040,
	188, 1040,
	189, 1040,
	190, 1040,
	192, 1040,
	193, 1040,
	195, 1040,
	196, 1040,
	197, 1040,
	198, 1040,
	202, 1040,
	203, 1040,
	204, 1040,
	205, 1040,
	208, 1040,
	209, 1040,
	210, 1040,
	212, 1040,
	214, 1040,
	216, 1040,
	218, 1040,
	219, 1040,
	220, 1040,
	222, 1040,
	226, 1040,
	227, 1040,
	228, 1040,
	229, 1040,
	230, 1040,
	232, 1040,
	233, 1040,
	235, 1040,
	236, 1040,
	238, 1040,
	239, 1040,
	242, 1040,
	243, 1040,
	244, 1040,
	247, 1040,
	248, 1040,
	249, 1040,
	250, 1040,
	252, 1040,
	253, 1040,
	254, 1040,
	255, 1040,
	256, 1040,
	257, 1040,
	258, 1040,
	259, 1040,
	260, 1040,
	261, 1040,
	262, 1040,
	264, 1040,
	266, 1040,
	267, 1040,
	268, 1040,
	269, 1040,
	270, 1040,
	271, 1040,
	273, 1040,
	275, 1040,
	277, 1040,
	279, 1040,
	280, 1040,
	281, 1040,
	282, 1040,
	283, 1040,
	286, 1040,
	290, 1040,
	291, 1040,
	292, 1040,
	295, 1040,
	296, 1040,
	297, 1040,
	299, 1040,
	301, 1040,
	302, 1040,
	303, 1040,
	304, 1040,
	305, 1040,
	306, 1040,
	307, 1040,
	308, 1040,
	309, 1040,
	310, 1040,
	311, 1040,
	313, 1040,
	314, 1040,
	315, 1040,
	316, 1040,
	317, 1040,
	318, 1040,
	319, 1040,
	320, 1040,
	321, 1040,
	323, 1040,
	325, 1040,
	326, 1040,
	327, 1040,
	328, 1040,
	329, 1040,
	330, 1040,
	331, 1040,
	332, 1040,
	333, 1040,
	334, 1040,
	335, 1040,
	342, 1040,
	344, 1040,
	345, 1040,
	346, 1040,
	347, 1040,
	348, 1040,
	349, 1040,
	350, 1040,
	351, 1040,
	353, 1040,
	354, 1040,
	355, 1040,
	357, 1040,
	358, 1040,
	359, 1040,
	360, 1040,
	361, 1040,
	362, 1040,
	364, 1040,
	365, 1040,
	366, 1040,
	367, 1040,
	368, 1040,
	369, 1040,
	370, 1040,
	371, 1040,
	372, 1040,
	373, 1040,
	375, 1040,
	376, 1040,
	377, 1040,
	378, 1040,
	379, 1040,
	380, 1040,
	382, 1040,
	383, 1040,
	384, 1040,
	385, 1040,
	386, 1040,
	388, 1040,
	389, 1040,
	390, 1040,
	392, 1040,
	394, 1040,
	395, 1040,
	396, 1040,
	397, 1040,
	398, 1040,
	399, 1040,
	400, 1040,
	401, 1040,
	402, 1040,
	403, 1040,
	404, 1040,
	405, 1040,
	406, 1040,
	408, 1040,
	409, 1040,
	411, 1040,
	413, 1040,
	414, 1040,
	415, 1040,
	416, 1040,
	417, 1040,
	418, 1040,
	419, 1040,
	420, 1040,
	422, 1040,
	423, 1040,
	424, 1040,
	425, 1040,
	426, 1040,
	428, 1040,
	430, 1040,
	431, 1040,
	432, 1040,
	433, 1040,
	434, 1040,
	436, 1040,
	437, 1040,
	438, 1040,
	440, 1040,
	441, 1040,
	444, 1040,
	445, 1040,
	446, 1040,
	447, 1040,
	448, 1040,
	449, 1040,
	450, 1040,
	452, 1040,
	455, 1040,
	456, 1040,
	457, 1040,
	458, 1040,
	459, 1040,
	460, 1040,
	462, 1040,
	463, 1040,
	464, 1040,
	469, 1040,
	470, 1040,
	471, 1040,
	472, 1040,
	473, 1040,
	474, 1040,
	-2, 0,
	-1, 800,
	327, 712,
	380, 712,
	-2, 0,
	-1, 801,
	327, 711,
	380, 711,
	-2, 659,
	-1, 805,
	1, 741,
	497, 741,
	499, 741,
	501, 741,
	-2, 0,
	-1, 806,
	1, 784,
	164, 784,
	497, 784,
	499, 784,
	501, 784,
	-2, 0,
	-1, 814,
	1, 715,
	497, 715,
	499, 715,
	501, 715,
	-2, 0,
	-1, 817,
	1, 741,
	497, 741,
	499, 741,
	501, 741,
	-2, 0,
	-1, 818,
	1, 743,
	497, 743,
	499, 743,
	501, 743,
	-2, 0,
	-1, 819,
	1, 746,
	497, 746,
	499, 746,
	501, 746,
	-2, 0,
	-1, 825,
	1, 763,
	497, 763,
	499, 763,
	501, 763,
	-2, 0,
	-1, 826,
	1, 765,
	497, 765,
	499, 765,
	501, 765,
	-2, 0,
	-1, 873,
	151, 1238,
	164, 1238,
	241, 1238,
	284, 1238,
	-2, 1176,
	-1, 887,
	151, 1237,
	164, 1237,
	241, 1237,
	284, 1237,
	-2, 1173,
	-1, 913,
	500, 1882,
	-2, 575,
	-1, 941,
	5, 1874,
	498, 1872,
	-2, 1863,
	-1, 949,
	5, 1895,
	498, 1892,
	-2, 1883,
	-1, 950,
	5, 1896,
	498, 1893,
	-2, 1884,
	-1, 958,
	500, 1880,
	-2, 1862,
	-1, 959,
	498, 2228,
	-2, 1881,
	-1, 982,
	498, 2227,
	-2, 1897,
	-1, 983,
	5, 1402,
	-2, 2198,
	-1, 984,
	5, 1403,
	-2, 2199,
	-1, 985,
	5, 1404,
	-2, 2213,
	-1, 986,
	5, 1405,
	-2, 2178,
	-1, 987,
	5, 1406,
	-2, 2211,
	-1, 988,
	5, 1414,
	-2, 2190,
	-1, 989,
	5, 1401,
	-2, 2186,
	-1, 990,
	5, 1401,
	-2, 2185,
	-1, 991,
	5, 1401,
	-2, 2204,
	-1, 992,
	5, 1412,
	-2, 2180,
	-1, 993,
	5, 1417,
	-2, 2179,
	-1, 994,
	5, 1419,
	-2, 2223,
	-1, 997,
	5, 1441,
	-2, 2216,
	-1, 998,
	5, 1433,
	-2, 2217,
	-1, 999,
	5, 1441,
	-2, 2218,
	-1, 1000,
	5, 1437,
	-2, 2219,
	-1, 1001,
	5, 1388,
	-2, 2191,
	-1, 1002,
	5, 1389,
	-2, 2192,
	-1, 1029,
	5, 1424,
	-2, 2224,
	-1, 1030,
	5, 1425,
	-2, 2214,
	-1, 1031,
	5, 1426,
	463, 1426,
	-2, 2181,
	-1, 1032,
	5, 1427,
	463, 1427,
	-2, 2182,
	-1, 1069,
	498, 1892,
	-2, 1883,
	-1, 1070,
	498, 1893,
	-2, 1884,
	-1, 1099,
	167, 2150,
	427, 2150,
	481, 2150,
	500, 2150,
	-2, 0,
	-1, 1102,
	1, 553,
	501, 553,
	-2, 1111,
	-1, 1227,
	344, 1858,
	491, 1858,
	-2, 1856,
	-1, 1239,
	502, 1858,
	-2, 1859,
	-1, 1243,
	1, 1016,
	497, 1016,
	499, 1016,
	501, 1016,
	-2, 1225,
	-1, 1293,
	333, 840,
	462, 840,
	-2, 300,
	-1, 1316,
	1, 1016,
	497, 1016,
	499, 1016,
	501, 1016,
	-2, 1225,
	-1, 1322,
	4, 1040,
	21, 1040,
	22, 1040,
	23, 1040,
	24, 1040,
	25, 1040,
	26, 1040,
	28, 1040,
	29, 1040,
	35, 1040,
	40, 1040,
	41, 1040,
	42, 1040,
	43, 1040,
	44, 1040,
	45, 1040,
	46, 1040,
	47, 1040,
	48, 1040,
	50, 1040,
	51, 1040,
	52, 1040,
	54, 1040,
	55, 1040,
	56, 1040,
	57, 1040,
	58, 1040,
	62, 1040,
	63, 1040,
	64, 1040,
	65, 1040,
	67, 1040,
	68, 1040,
	69, 1040,
	73, 1040,
	74, 1040,
	75, 1040,
	76, 1040,
	77, 1040,
	78, 1040,
	79, 1040,
	82, 1040,
	83, 1040,
	84, 1040,
	85, 1040,
	87, 1040,
	89, 1040,
	90, 1040,
	91, 1040,
	93, 1040,
	95, 1040,
	96, 1040,
	104, 1040,
	105, 1040,
	106, 1040,
	107, 1040,
	109, 1040,
	110, 1040,
	111, 1040,
	113, 1040,
	114, 1040,
	115, 1040,
	117, 1040,
	118, 1040,
	120, 1040,
	121, 1040,
	124, 1040,
	125, 1040,
	126, 1040,
	128, 1040,
	129, 1040,
	131, 1040,
	132, 1040,
	134, 1040,
	135, 1040,
	136, 1040,
	137, 1040,
	138, 1040,
	139, 1040,
	140, 1040,
	141, 1040,
	142, 1040,
	143, 1040,
	144, 1040,
	145, 1040,
	146, 1040,
	147, 1040,
	148, 1040,
	156, 1040,
	157, 1040,
	158, 1040,
	159, 1040,
	163, 1040,
	165, 1040,
	169, 1040,
	170, 1040,
	171, 1040,
	172, 1040,
	173, 1040,
	174, 1040,
	176, 1040,
	177, 1040,
	179, 1040,
	180, 1040,
	182, 1040,
	183, 1040,
	184, 1040,
	185, 1040,
	186, 1040,
	187, 1040,
	188, 1040,
	189, 1040,
	190, 1040,
	192, 1040,
	193, 1040,
	195, 1040,
	196, 1040,
	197, 1040,
	198, 1040,
	203, 1040,
	204, 1040,
	205, 1040,
	208, 1040,
	209, 1040,
	210, 1040,
	212, 1040,
	214, 1040,
	216, 1040,
	218, 1040,
	219, 1040,
	220, 1040,
	222, 1040,
	226, 1040,
	227, 1040,
	228, 1040,
	229, 1040,
	230, 1040,
	232, 1040,
	233, 1040,
	235, 1040,
	236, 1040,
	238, 1040,
	239, 1040,
	242, 1040,
	243, 1040,
	244, 1040,
	247, 1040,
	248, 1040,
	249, 1040,
	250, 1040,
	252, 1040,
	253, 1040,
	254, 1040,
	255, 1040,
	256, 1040,
	257, 1040,
	258, 1040,
	259, 1040,
	260, 1040,
	261, 1040,
	262, 1040,
	264, 1040,
	266, 1040,
	267, 1040,
	268, 1040,
	269, 1040,
	270, 1040,
	271, 1040,
	273, 1040,
	277, 1040,
	279, 1040,
	280, 1040,
	281, 1040,
	282, 1040,
	283, 1040,
	286, 1040,
	288, 1040,
	290, 1040,
	291, 1040,
	292, 1040,
	295, 1040,
	296, 1040,
	297, 1040,
	299, 1040,
	301, 1040,
	302, 1040,
	303, 1040,
	304, 1040,
	305, 1040,
	306, 1040,
	307, 1040,
	308, 1040,
	309, 1040,
	310, 1040,
	311, 1040,
	313, 1040,
	314, 1040,
	315, 1040,
	316, 1040,
	317, 1040,
	318, 1040,
	319, 1040,
	320, 1040,
	321, 1040,
	323, 1040,
	325, 1040,
	326, 1040,
	327, 1040,
	328, 1040,
	329, 1040,
	330, 1040,
	331, 1040,
	332, 1040,
	333, 1040,
	334, 1040,
	335, 1040,
	342, 1040,
	344, 1040,
	345, 1040,
	346, 1040,
	347, 1040,
	348, 1040,
	349, 1040,
	350, 1040,
	351, 1040,
	353, 1040,
	354, 1040,
	355, 1040,
	357, 1040,
	358, 1040,
	359, 1040,
	360, 1040,
	361, 1040,
	362, 1040,
	364, 1040,
	365, 1040,
	366, 1040,
	367, 1040,
	368, 1040,
	369, 1040,
	370, 1040,
	371, 1040,
	372, 1040,
	373, 1040,
	375, 1040,
	376, 1040,
	377, 1040,
	378, 1040,
	379, 1040,
	380, 1040,
	382, 1040,
	383, 1040,
	384, 1040,
	385, 1040,
	386, 1040,
	388, 1040,
	389, 1040,
	390, 1040,
	392, 1040,
	394, 1040,
	395, 1040,
	396, 1040,
	397, 1040,
	398, 1040,
	399, 1040,
	400, 1040,
	401, 1040,
	402, 1040,
	403, 1040,
	404, 1040,
	405, 1040,
	406, 1040,
	408, 1040,
	409, 1040,
	411, 1040,
	413, 1040,
	414, 1040,
	415, 1040,
	416, 1040,
	417, 1040,
	418, 1040,
	419, 1040,
	420, 1040,
	422, 1040,
	423, 1040,
	424, 1040,
	425, 1040,
	426, 1040,
	428, 1040,
	430, 1040,
	431, 1040,
	432, 1040,
	433, 1040,
	434, 1040,
	436, 1040,
	437, 1040,
	438, 1040,
	440, 1040,
	441, 1040,
	444, 1040,
	445, 1040,
	446, 1040,
	447, 1040,
	448, 1040,
	449, 1040,
	450, 1040,
	452, 1040,
	455, 1040,
	456, 1040,
	457, 1040,
	458, 1040,
	459, 1040,
	460, 1040,
	462, 1040,
	463, 1040,
	464, 1040,
	469, 1040,
	470, 1040,
	471, 1040,
	472, 1040,
	473, 1040,
	474, 1040,
	-2, 0,
	-1, 1391,
	1, 430,
	497, 430,
	499, 430,
	501, 430,
	-2, 1196,
	-1, 1394,
	4, 2222,
	11, 2222,
	12, 2222,
	14, 2222,
	15, 2222,
	16, 2222,
	17, 2222,
	18, 2222,
	19, 2222,
	21, 2222,
	22, 2222,
	23, 2222,
	24, 2222,
	25, 2222,
	26, 2222,
	28, 2222,
	29, 2222,
	32, 2222,
	33, 2222,
	35, 2222,
	37, 2222,
	40, 2222,
	41, 2222,
	42, 2222,
	43, 2222,
	44, 2222,
	45, 2222,
	46, 2222,
	47, 2222,
	48, 2222,
	50, 2222,
	51, 2222,
	52, 2222,
	54, 2222,
	55, 2222,
	56, 2222,
	57, 2222,
	58, 2222,
	62, 2222,
	63, 2222,
	64, 2222,
	65, 2222,
	67, 2222,
	68, 2222,
	69, 2222,
	70, 2222,
	73, 2222,
	74, 2222,
	75, 2222,
	76, 2222,
	77, 2222,
	78, 2222,
	79, 2222,
	80, 2222,
	82, 2222,
	83, 2222,
	84, 2222,
	85, 2222,
	87, 2222,
	88, 2222,
	89, 2222,
	90, 2222,
	91, 2222,
	93, 2222,
	94, 2222,
	95, 2222,
	96, 2222,
	104, 2222,
	105, 2222,
	106, 2222,
	107, 2222,
	109, 2222,
	110, 2222,
	111, 2222,
	113, 2222,
	114, 2222,
	115, 2222,
	117, 2222,
	118, 2222,
	120, 2222,
	121, 2222,
	124, 2222,
	125, 2222,
	126, 2222,
	128, 2222,
	129, 2222,
	131, 2222,
	132, 2222,
	134, 2222,
	135, 2222,
	136, 2222,
	137, 2222,
	138, 2222,
	139, 2222,
	140, 2222,
	141, 2222,
	142, 2222,
	143, 2222,
	144, 2222,
	145, 2222,
	146, 2222,
	147, 2222,
	148, 2222,
	152, 2222,
	153, 2222,
	154, 2222,
	155, 2222,
	156, 2222,
	157, 2222,
	158, 2222,
	159, 2222,
	162, 2222,
	163, 2222,
	165, 2222,
	168, 2222,
	169, 2222,
	170, 2222,
	171, 2222,
	172, 2222,
	173, 2222,
	174, 2222,
	176, 2222,
	177, 2222,
	179, 2222,
	180, 2222,
	182, 2222,
	183, 2222,
	184, 2222,
	185, 2222,
	186, 2222,
	187, 2222,
	188, 2222,
	189, 2222,
	190, 2222,
	191, 2222,
	192, 2222,
	193, 2222,
	194, 2222,
	195, 2222,
	196, 2222,
	197, 2222,
	198, 2222,
	200, 2222,
	201, 2222,
	203, 2222,
	204, 2222,
	205, 2222,
	207, 2222,
	208, 2222,
	209, 2222,
	210, 2222,
	212, 2222,
	214, 2222,
	215, 2222,
	216, 2222,
	217, 2222,
	218, 2222,
	219, 2222,
	220, 2222,
	221, 2222,
	222, 2222,
	224, 2222,
	225, 2222,
	226, 2222,
	227, 2222,
	228, 2222,
	229, 2222,
	230, 2222,
	232, 2222,
	233, 2222,
	235, 2222,
	236, 2222,
	237, 2222,
	238, 2222,
	239, 2222,
	240, 2222,
	242, 2222,
	243, 2222,
	244, 2222,
	247, 2222,
	248, 2222,
	249, 2222,
	250, 2222,
	251, 2222,
	252, 2222,
	253, 2222,
	254, 2222,
	255, 2222,
	256, 2222,
	257, 2222,
	258, 2222,
	259, 2222,
	260, 2222,
	261, 2222,
	262, 2222,
	264, 2222,
	265, 2222,
	266, 2222,
	267, 2222,
	268, 2222,
	269, 2222,
	270, 2222,
	271, 2222,
	273, 2222,
	276, 2222,
	277, 2222,
	279, 2222,
	280, 2222,
	281, 2222,
	282, 2222,
	283, 2222,
	286, 2222,
	290, 2222,
	291, 2222,
	292, 2222,
	293, 2222,
	295, 2222,
	296, 2222,
	297, 2222,
	299, 2222,
	301, 2222,
	302, 2222,
	303, 2222,
	304, 2222,
	305, 2222,
	306, 2222,
	307, 2222,
	308, 2222,
	309, 2222,
	310, 2222,
	311, 2222,
	313, 2222,
	314, 2222,
	315, 2222,
	316, 2222,
	317, 2222,
	318, 2222,
	319, 2222,
	320, 2222,
	321, 2222,
	323, 2222,
	325, 2222,
	326, 2222,
	327, 2222,
	328, 2222,
	329, 2222,
	330, 2222,
	331, 2222,
	332, 2222,
	333, 2222,
	334, 2222,
	335, 2222,
	342, 2222,
	343, 2222,
	344, 2222,
	345, 2222,
	346, 2222,
	347, 2222,
	348, 2222,
	349, 2222,
	350, 2222,
	351, 2222,
	353, 2222,
	354, 2222,
	355, 2222,
	356, 2222,
	357, 2222,
	358, 2222,
	359, 2222,
	360, 2222,
	361, 2222,
	362, 2222,
	363, 2222,
	364, 2222,
	365, 2222,
	366, 2222,
	367, 2222,
	368, 2222,
	369, 2222,
	370, 2222,
	371, 2222,
	372, 2222,
	373, 2222,
	375, 2222,
	376, 2222,
	377, 2222,
	378, 2222,
	379, 2222,
	380, 2222,
	382, 2222,
	383, 2222,
	384, 2222,
	385, 2222,
	386, 2222,
	387, 2222,
	388, 2222,
	389, 2222,
	390, 2222,
	392, 2222,
	394, 2222,
	395, 2222,
	396, 2222,
	397, 2222,
	398, 2222,
	399, 2222,
	400, 2222,
	401, 2222,
	402, 2222,
	403, 2222,
	404, 2222,
	405, 2222,
	406, 2222,
	408, 2222,
	409, 2222,
	411, 2222,
	413, 2222,
	414, 2222,
	415, 2222,
	416, 2222,
	417, 2222,
	418, 2222,
	419, 2222,
	420, 2222,
	422, 2222,
	423, 2222,
	424, 2222,
	425, 2222,
	426, 2222,
	428, 2222,
	430, 2222,
	431, 2222,
	432, 2222,
	433, 2222,
	434, 2222,
	436, 2222,
	437, 2222,
	438, 2222,
	440, 2222,
	441, 2222,
	444, 2222,
	445, 2222,
	446, 2222,
	447, 2222,
	448, 2222,
	449, 2222,
	450, 2222,
	452, 2222,
	455, 2222,
	456, 2222,
	457, 2222,
	458, 2222,
	459, 2222,
	460, 2222,
	462, 2222,
	463, 2222,
	464, 2222,
	469, 2222,
	470, 2222,
	471, 2222,
	472, 2222,
	473, 2222,
	474, 2222,
	475, 2222,
	476, 2222,
	479, 2222,
	480, 2222,
	481, 2222,
	482, 2222,
	483, 2222,
	484, 2222,
	486, 2222,
	487, 2222,
	488, 2222,
	489, 2222,
	490, 2222,
	491, 2222,
	492, 2222,
	493, 2222,
	494, 2222,
	496, 2222,
	499, 2222,
	500, 2222,
	502, 2222,
	503, 2222,
	-2, 0,
	-1, 1399,
	167, 2120,
	427, 2120,
	481, 2120,
	500, 2120,
	-2, 0,
	-1, 1445,
	327, 712,
	380, 712,
	-2, 0,
	-1, 1469,
	1, 707,
	497, 707,
	499, 707,
	501, 707,
	-2, 0,
	-1, 1470,
	1, 732,
	497, 732,
	499, 732,
	501, 732,
	-2, 0,
	-1, 1471,
	1, 714,
	497, 714,
	499, 714,
	501, 714,
	-2, 0,
	-1, 1473,
	1, 718,
	497, 718,
	499, 718,
	501, 718,
	-2, 0,
	-1, 1501,
	1, 2170,
	497, 2170,
	499, 2170,
	500, 2170,
	501, 2170,
	-2, 761,
	-1, 1502,
	1, 2117,
	497, 2117,
	499, 2117,
	500, 2117,
	501, 2117,
	-2, 762,
	-1, 1517,
	1, 1106,
	501, 1106,
	-2, 1111,
	-1, 1521,
	151, 1237,
	164, 1237,
	241, 1237,
	284, 1237,
	-2, 1177,
	-1, 1615,
	133, 1198,
	151, 1198,
	164, 1198,
	211, 1198,
	241, 1198,
	284, 1198,
	294, 1198,
	442, 1198,
	-2, 1602,
	-1, 1675,
	499, 1752,
	-2, 0,
	-1, 1710,
	133, 1198,
	151, 1198,
	164, 1198,
	211, 1198,
	241, 1198,
	284, 1198,
	294, 1198,
	442, 1198,
	-2, 1318,
	-1, 1758,
	498, 1429,
	-2, 1417,
	-1, 1791,
	1, 555,
	501, 555,
	-2, 1111,
	-1, 2004,
	1, 709,
	497, 709,
	499, 709,
	501, 709,
	-2, 0,
	-1, 2005,
	1, 734,
	497, 734,
	499, 734,
	501, 734,
	-2, 0,
	-1, 2078,
	361, 1264,
	362, 1264,
	-2, 1462,
	-1, 2109,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1482,
	-1, 2110,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1483,
	-1, 2111,
	88, 0,
	224, 0,
	225, 0,
	483, 0,
	484, 0,
	-2, 1484,
	-1, 2112,
	88, 0,
	224, 0,
	225, 0,
	483, 0,
	484, 0,
	-2, 1485,
	-1, 2113,
	88, 0,
	224, 0,
	225, 0,
	483, 0,
	484, 0,
	-2, 1486,
	-1, 2114,
	88, 0,
	224, 0,
	225, 0,
	483, 0,
	484, 0,
	-2, 1487,
	-1, 2115,
	88, 0,
	224, 0,
	225, 0,
	483, 0,
	484, 0,
	-2, 1488,
	-1, 2116,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1489,
	-1, 2128,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1501,
	-1, 2129,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1502,
	-1, 2130,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1503,
	-1, 2133,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1508,
	-1, 2139,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1512,
	-1, 2141,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1520,
	-1, 2142,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1521,
	-1, 2143,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1522,
	-1, 2144,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1523,
	-1, 2256,
	5, 1895,
	167, 1763,
	498, 1892,
	-2, 1883,
	-1, 2257,
	167, 1764,
	-2, 2174,
	-1, 2258,
	167, 1765,
	-2, 2038,
	-1, 2259,
	167, 1766,
	-2, 1953,
	-1, 2260,
	167, 1767,
	-2, 1995,
	-1, 2261,
	167, 1768,
	-2, 2033,
	-1, 2262,
	167, 1769,
	-2, 2115,
	-1, 2263,
	167, 1770,
	-2, 1585,
	-1, 2332,
	1, 1319,
	2, 1319,
	94, 1319,
	133, 1319,
	151, 1319,
	164, 1319,
	168, 1319,
	178, 1319,
	181, 1319,
	207, 1319,
	211, 1319,
	221, 1319,
	237, 1319,
	241, 1319,
	265, 1319,
	284, 1319,
	288, 1319,
	294, 1319,
	352, 1319,
	356, 1319,
	442, 1319,
	453, 1319,
	466, 1319,
	467, 1319,
	468, 1319,
	477, 1319,
	497, 1319,
	499, 1319,
	501, 1319,
	503, 1319,
	-2, 1318,
	-1, 2345,
	498, 1864,
	-2, 1878,
	-1, 2369,
	498, 1428,
	-2, 1418,
	-1, 2481,
	1, 1016,
	497, 1016,
	499, 1016,
	501, 1016,
	-2, 1225,
	-1, 2636,
	289, 1267,
	-2, 2212,
	-1, 2637,
	289, 1268,
	-2, 2102,
	-1, 2641,
	361, 1829,
	362, 1829,
	-2, 1583,
	-1, 2642,
	361, 1833,
	362, 1833,
	-2, 1584,
	-1, 2643,
	361, 1830,
	362, 1830,
	-2, 1583,
	-1, 2644,
	361, 1834,
	362, 1834,
	-2, 1584,
	-1, 2657,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1510,
	-1, 2658,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1514,
	-1, 2664,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1516,
	-1, 2861,
	218, 1111,
	323, 1111,
	331, 1111,
	477, 1111,
	-2, 552,
	-1, 2976,
	1, 1016,
	497, 1016,
	499, 1016,
	501, 1016,
	-2, 1225,
	-1, 3067,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1518,
	-1, 3074,
	215, 0,
	217, 0,
	276, 0,
	-2, 1537,
	-1, 3141,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1566,
	-1, 3142,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1567,
	-1, 3143,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1568,
	-1, 3147,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1572,
	-1, 3148,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1573,
	-1, 3149,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1574,
	-1, 3195,
	498, 1865,
	-2, 1879,
	-1, 3304,
	500, 2328,
	-2, 1155,
	-1, 3355,
	215, 0,
	217, 0,
	276, 0,
	-2, 1538,
	-1, 3358,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1541,
	-1, 3359,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1543,
	-1, 3554,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1542,
	-1, 3555,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1544,
	-1, 3566,
	215, 0,
	-2, 1575,
	-1, 3709,
	215, 0,
	-2, 1576,
	-1, 3861,
	47, 0,
	191, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 2177,
}

const sqlPrivate = 57344

const sqlLast = 97516

var sqlAct = [...]int{

	232, 3754, 3860, 3597, 3486, 3871, 3968, 2962, 3639, 3600,
	3217, 3830, 2559, 3836, 3338, 3731, 3818, 3800, 3815, 3872,
	3585, 3918, 2791, 2533, 1073, 3646, 3873, 3106, 1261, 3713,
	2792, 3859, 3470, 3512, 3517, 897, 2088, 3543, 2878, 2991,
	3296, 1108, 3655, 914, 1382, 3477, 3677, 3479, 3499, 2401,
	3252, 3422, 3522, 2156, 1745, 1381, 2958, 2984, 1246, 2096,
	1530, 2986, 3059, 1963, 3218, 901, 3275, 2568, 640, 3571,
	2460, 3265, 607, 1842, 1131, 2522, 2650, 2505, 36, 2288,
	2089, 2814, 2834, 1062, 1224, 2496, 1716, 2774, 2519, 2806,
	2578, 3337, 640, 888, 1976, 2508, 2570, 1453, 738, 3394,
	1413, 2567, 2561, 2534, 2517, 2795, 1851, 1887, 1685, 1983,
	2797, 2403, 2325, 2438, 1886, 2324, 1623, 1661, 2093, 3166,
	2773, 2169, 1232, 896, 158, 1952, 1309, 1961, 226, 3714,
	2472, 635, 4, 1874, 2200, 1883, 1746, 2634, 2198, 1867,
	945, 2506, 99, 2437, 1115, 1517, 1829, 225, 1827, 2306,
	1817, 1686, 2285, 2577, 2327, 1705, 3640, 2153, 2840, 2189,
	2077, 1362, 2058, 2960, 2060, 1392, 2527, 641, 1372, 1918,
	950, 642, 1053, 1378, 1229, 2393, 575, 1314, 2571, 1656,
	1104, 2192, 2314, 166, 2296, 1035, 2170, 1695, 1056, 1532,
	2242, 1608, 2252, 2059, 2061, 1531, 646, 1248, 1412, 952,
	601, 561, 1070, 1917, 637, 583, 1938, 591, 158, 686,
	1390, 712, 1337, 1256, 1841, 649, 2082, 732, 926, 995,
	646, 41, 578, 40, 1058, 38, 943, 1033, 586, 29,
	27, 25, 1537, 1516, 2685, 795, 812, 167, 2681, 649,
	1545, 1546, 2793, 1578, 1579, 1580, 1588, 1589, 1590, 3180,
	1954, 3181, 1954, 1954, 4026, 1954, 4021, 1702, 2305, 941,
	3016, 1581, 1576, 4009, 4008, 892, 3985, 2305, 2305, 1548,
	3438, 3983, 3001, 2859, 3979, 3438, 1594, 1472, 1893, 3000,
	3016, 3901, 3895, 948, 1052, 3902, 2305, 2746, 2747, 3893,
	2764, 2765, 2766, 2305, 1385, 1112, 753, 892, 3890, 1547,
	1545, 1546, 3891, 3887, 2298, 2530, 3882, 3888, 3353, 1567,
	1893, 893, 1050, 2649, 3857, 3856, 3855, 1564, 1893, 1893,
	1969, 3170, 1576, 3851, 3850, 2746, 2747, 1969, 1969, 1548,
	3845, 3843, 3826, 3813, 3438, 3438, 3634, 3438, 1089, 3794,
	1084, 3787, 874, 2360, 947, 2305, 3786, 3781, 1036, 1036,
	2305, 3438, 2356, 2746, 2747, 2305, 2761, 3780, 3774, 1547,
	3711, 3438, 1893, 3691, 2360, 3688, 3648, 1893, 3617, 3438,
	3649, 3616, 1893, 2746, 2747, 1893, 2764, 2765, 2766, 3795,
	3706, 1570, 1571, 1572, 1573, 3608, 3607, 1893, 3577, 1893,
	3438, 1553, 1893, 3556, 3352, 3541, 873, 2360, 3694, 1969,
	3530, 882, 887, 3465, 3016, 3456, 3437, 2305, 3357, 2305,
	3438, 1969, 2360, 2694, 3312, 1279, 1085, 1273, 3032, 2695,
	1585, 3306, 1037, 1595, 3273, 3032, 3634, 3190, 3274, 1575,
	1577, 3191, 3188, 3173, 3170, 3090, 3189, 2305, 2752, 1893,
	2746, 2747, 2761, 3086, 1591, 3031, 1592, 2305, 3023, 3032,
	2195, 1553, 3024, 1562, 1563, 2790, 2785, 2297, 2784, 2305,
	2305, 1068, 2305, 1039, 199, 1040, 3511, 2746, 2747, 1583,
	2764, 2765, 2766, 2737, 2305, 2735, 2752, 2738, 2727, 2736,
	1568, 1112, 2728, 2725, 3457, 1065, 1893, 2305, 3077, 1575,
	1577, 2767, 2696, 2583, 2557, 2556, 2305, 1969, 1972, 1972,
	3024, 2451, 201, 2392, 2752, 1593, 2684, 1984, 1797, 1846,
	1260, 2377, 1545, 1546, 2359, 2305, 2354, 2348, 2360, 2304,
	2305, 1893, 1582, 2305, 2752, 1971, 2196, 2762, 1953, 1972,
	2502, 1892, 2468, 2390, 1576, 1681, 2761, 1255, 3246, 3062,
	1568, 1548, 1955, 3040, 1955, 1955, 1064, 1955, 200, 1703,
	1877, 3002, 1455, 2341, 2340, 2339, 2338, 2337, 193, 199,
	1041, 1038, 881, 880, 879, 2762, 194, 199, 878, 877,
	3003, 1547, 1574, 876, 871, 870, 869, 2767, 868, 867,
	866, 865, 864, 863, 2614, 1632, 862, 861, 168, 860,
	859, 2752, 1569, 2762, 858, 857, 856, 201, 2197, 2194,
	1278, 838, 1272, 793, 792, 201, 950, 3410, 3000, 1085,
	950, 791, 790, 2762, 789, 788, 1586, 787, 2752, 786,
	785, 784, 783, 782, 781, 1134, 780, 779, 778, 1134,
	777, 776, 1251, 775, 774, 773, 772, 771, 3369, 2763,
	2297, 1114, 770, 200, 769, 1119, 84, 768, 767, 199,
	766, 200, 1569, 756, 755, 950, 751, 950, 750, 950,
	744, 193, 743, 1553, 1251, 1424, 703, 702, 662, 194,
	661, 2767, 1260, 660, 1085, 652, 651, 2763, 650, 621,
	2762, 613, 612, 168, 611, 595, 1240, 201, 1251, 220,
	1420, 2529, 219, 1235, 2225, 2547, 3201, 1967, 1953, 218,
	2053, 1575, 1577, 217, 1584, 2763, 216, 2762, 1559, 1560,
	1566, 1587, 1565, 1561, 2199, 1558, 1556, 1557, 1549, 1550,
	1551, 1552, 1554, 1555, 215, 2763, 214, 213, 3379, 1251,
	950, 1259, 3378, 200, 1266, 1251, 1271, 212, 1277, 1251,
	1474, 211, 210, 193, 1319, 1321, 209, 950, 1102, 950,
	208, 194, 1568, 1251, 207, 2758, 2759, 2760, 206, 950,
	205, 950, 2757, 2755, 2756, 2748, 2749, 2750, 2751, 2753,
	2754, 204, 646, 168, 203, 1558, 1556, 1557, 1549, 1550,
	1551, 1552, 1554, 1555, 202, 3184, 3033, 199, 2837, 199,
	2707, 649, 2763, 2690, 2456, 2485, 1127, 2788, 1221, 1226,
	1251, 1097, 2756, 2748, 2749, 2750, 2751, 2753, 2754, 1388,
	2364, 1258, 2346, 2513, 2193, 1257, 950, 1664, 2789, 2763,
	1411, 2331, 2211, 1663, 1706, 201, 1406, 201, 1410, 2755,
	2756, 2748, 2749, 2750, 2751, 2753, 2754, 1825, 1419, 2373,
	1423, 2758, 2759, 2760, 1407, 1667, 2209, 1544, 2757, 2755,
	2756, 2748, 2749, 2750, 2751, 2753, 2754, 1389, 1730, 158,
	158, 1425, 3878, 1979, 1569, 1634, 1324, 872, 1395, 1397,
	1263, 200, 1267, 200, 1664, 1121, 199, 893, 1072, 3858,
	1663, 193, 3761, 193, 3703, 1366, 1369, 1625, 132, 194,
	3697, 194, 2424, 1473, 3695, 3595, 3570, 2746, 2747, 3531,
	3526, 1375, 1662, 950, 950, 950, 950, 950, 950, 950,
	3510, 168, 66, 168, 201, 1482, 3415, 3392, 2748, 2749,
	2750, 2751, 2753, 2754, 3279, 3391, 1243, 3244, 67, 3385,
	3384, 199, 1393, 199, 950, 2758, 2759, 2760, 1978, 3383,
	950, 71, 2757, 2755, 2756, 2748, 2749, 2750, 2751, 2753,
	2754, 3376, 3375, 3373, 3368, 1545, 1546, 3365, 1282, 3364,
	200, 3272, 3205, 2746, 2747, 3204, 2761, 1522, 3203, 201,
	193, 201, 3194, 3161, 3160, 3159, 77, 3082, 194, 3078,
	2832, 3027, 1316, 2781, 1548, 2772, 1340, 2745, 1556, 1557,
	1549, 1550, 1551, 1552, 1554, 1555, 2742, 895, 2746, 2747,
	168, 2764, 2765, 2766, 2741, 2739, 2734, 2746, 2747, 2733,
	83, 2515, 1515, 2732, 1547, 200, 2729, 200, 1614, 3076,
	2726, 2706, 1626, 98, 1624, 1898, 2689, 193, 84, 95,
	2682, 199, 1430, 1401, 2558, 194, 2332, 199, 1446, 2746,
	2747, 2182, 2786, 950, 950, 950, 1544, 1414, 2752, 950,
	1625, 1929, 1896, 1543, 4020, 168, 1070, 168, 1070, 3977,
	3976, 1683, 199, 3911, 3909, 3900, 1074, 2761, 3108, 201,
	3753, 3741, 3738, 1134, 3737, 201, 893, 85, 1633, 1518,
	874, 950, 1527, 1526, 640, 3736, 3730, 3723, 1763, 640,
	3692, 3676, 224, 3675, 1437, 2159, 3663, 950, 3660, 1049,
	201, 1251, 3635, 1733, 3613, 3591, 1553, 3568, 1521, 3551,
	3525, 3550, 3538, 1742, 2752, 200, 950, 1666, 1786, 1523,
	3537, 200, 1134, 1540, 1541, 193, 3503, 3409, 1692, 3390,
	3327, 193, 3324, 194, 873, 3235, 3278, 2762, 1720, 194,
	3234, 3221, 1738, 3220, 3176, 3164, 200, 3073, 1612, 2752,
	3034, 1823, 1689, 1690, 3017, 168, 193, 2977, 2752, 1794,
	1740, 168, 3715, 2829, 194, 2926, 2905, 1788, 1713, 2881,
	1658, 1659, 2880, 2854, 2358, 2711, 1789, 2710, 2705, 2852,
	2514, 2673, 2495, 1724, 1545, 1546, 168, 2165, 1670, 1036,
	2752, 2224, 199, 1669, 88, 1668, 1665, 1657, 1655, 2371,
	893, 2370, 2767, 2343, 2336, 2303, 2207, 1729, 1684, 1679,
	1678, 1677, 646, 1548, 1714, 1676, 199, 646, 1736, 1545,
	1546, 1675, 1674, 1673, 1672, 1671, 1652, 1814, 1651, 199,
	201, 649, 165, 91, 1650, 94, 649, 1649, 2762, 1648,
	1647, 1646, 1645, 1547, 199, 1791, 1711, 2762, 1548, 2763,
	1734, 1644, 1643, 1642, 201, 1251, 1808, 1807, 199, 1641,
	1816, 1818, 1682, 1640, 1134, 1639, 737, 201, 1638, 1980,
	132, 1627, 1613, 1611, 1606, 1096, 200, 2881, 1547, 1087,
	1708, 1723, 201, 1722, 1835, 1721, 193, 1757, 1741, 1719,
	1718, 1717, 1080, 1785, 194, 3506, 201, 3411, 3361, 3200,
	200, 3187, 3179, 1864, 2693, 2334, 1866, 1760, 1743, 1871,
	193, 1704, 3580, 200, 1751, 1068, 168, 1068, 194, 2210,
	134, 3413, 1846, 193, 2362, 2746, 2747, 2271, 200, 924,
	1819, 194, 1809, 3199, 169, 1553, 1626, 1737, 193, 1065,
	168, 1065, 200, 2208, 2850, 1609, 194, 1816, 3459, 1725,
	2763, 1816, 193, 168, 1118, 1890, 3974, 1816, 3967, 2763,
	194, 3698, 3739, 2987, 1811, 3696, 1850, 1706, 168, 199,
	3656, 3651, 2757, 2755, 2756, 2748, 2749, 2750, 2751, 2753,
	2754, 3650, 168, 3636, 646, 1116, 3529, 1647, 3458, 3182,
	3019, 3594, 1875, 3018, 2442, 1109, 3282, 1251, 1922, 1251,
	1064, 1251, 1064, 649, 1664, 1112, 1112, 201, 1117, 1445,
	1663, 2731, 909, 2730, 1647, 1513, 1251, 1251, 1792, 1112,
	2655, 2426, 1113, 1258, 1636, 1803, 1251, 1257, 3233, 1977,
	2908, 1927, 1935, 1549, 1550, 1551, 1552, 1554, 1555, 1251,
	1251, 1251, 3647, 2750, 2751, 2753, 2754, 2964, 1454, 2963,
	1870, 3898, 1483, 200, 1985, 2793, 3883, 854, 3870, 640,
	1986, 3266, 1455, 193, 1813, 1888, 2758, 2759, 2760, 1891,
	3249, 194, 3237, 2757, 2755, 2756, 2748, 2749, 2750, 2751,
	2753, 2754, 2757, 2755, 2756, 2748, 2749, 2750, 2751, 2753,
	2754, 1932, 1957, 168, 1943, 1959, 1812, 855, 3038, 3572,
	1110, 1964, 1982, 1908, 1966, 3110, 1909, 2190, 1111, 2699,
	2369, 1680, 1930, 1660, 2956, 2000, 1926, 2748, 2749, 2750,
	2751, 2753, 2754, 1297, 3892, 2465, 3889, 2996, 3212, 3732,
	2462, 1066, 1996, 3879, 950, 3513, 950, 3812, 3720, 893,
	2884, 893, 1941, 950, 1937, 3228, 1763, 1763, 1134, 1414,
	950, 950, 950, 950, 950, 950, 950, 950, 950, 950,
	950, 950, 950, 950, 950, 950, 950, 950, 950, 950,
	950, 950, 950, 950, 950, 950, 950, 950, 950, 950,
	950, 950, 950, 950, 950, 836, 950, 646, 950, 950,
	950, 950, 2070, 3880, 1393, 1048, 1393, 2057, 1945, 1946,
	1097, 2078, 2565, 1990, 1843, 2526, 649, 1973, 1804, 1974,
	950, 2949, 3934, 950, 950, 1987, 1340, 1481, 1940, 3935,
	1940, 950, 3773, 3054, 1434, 950, 3633, 950, 950, 2068,
	1989, 2863, 1839, 3262, 1109, 1134, 3448, 1295, 1285, 852,
	2052, 950, 950, 950, 950, 1118, 950, 950, 950, 950,
	950, 950, 950, 950, 1112, 2378, 1844, 1845, 4016, 3626,
	891, 1480, 3619, 2018, 1551, 1552, 1554, 1555, 2851, 850,
	1103, 2066, 950, 950, 950, 950, 950, 950, 950, 950,
	950, 2038, 2094, 2095, 1840, 950, 2081, 848, 3268, 3261,
	3258, 3257, 2171, 2172, 2195, 1975, 2036, 1070, 1830, 1117,
	2865, 846, 1555, 1831, 1134, 3251, 2171, 2187, 3248, 3247,
	1296, 1414, 3209, 1070, 2068, 2238, 2056, 2055, 2062, 1227,
	1988, 874, 1239, 1242, 874, 874, 2069, 2054, 1846, 1725,
	950, 1134, 2233, 1997, 1998, 1999, 1118, 698, 890, 1110,
	2272, 1820, 1821, 2186, 3208, 1757, 1757, 1111, 1479, 2704,
	2473, 2255, 2255, 2269, 893, 2171, 2066, 2405, 2289, 2291,
	843, 2703, 2907, 893, 2295, 1760, 1760, 893, 2237, 2702,
	2196, 2701, 1751, 1751, 2319, 2085, 2523, 2396, 2086, 2087,
	2659, 1242, 1242, 2467, 2363, 2458, 1432, 2450, 2067, 2449,
	1117, 2394, 2235, 2429, 3772, 2355, 1251, 2236, 2140, 2167,
	2239, 1832, 2240, 2241, 2396, 1519, 1254, 2311, 2754, 2344,
	2098, 2446, 1330, 2184, 1329, 1447, 573, 1834, 2394, 2064,
	1242, 892, 3962, 1713, 3039, 3215, 1134, 699, 2439, 2440,
	2333, 840, 2439, 2440, 1427, 2051, 1036, 3460, 2439, 2440,
	1994, 568, 2197, 2194, 1328, 2310, 1327, 2190, 1304, 2385,
	2065, 3549, 2347, 1763, 1794, 893, 1351, 2408, 2318, 619,
	2323, 2251, 2280, 2329, 2330, 2264, 1492, 2293, 158, 2417,
	2155, 3602, 2428, 2067, 2301, 2302, 1077, 2357, 1134, 1836,
	1291, 2155, 2316, 2317, 2365, 2312, 1109, 1512, 2042, 2632,
	1251, 2047, 3848, 1112, 2416, 1666, 1443, 950, 2397, 950,
	2008, 1711, 1907, 1942, 3963, 2475, 2163, 2003, 874, 1525,
	1075, 2464, 2647, 2161, 1455, 3434, 1095, 3045, 1455, 3044,
	2423, 2004, 2381, 3224, 2611, 1315, 2474, 2476, 2199, 2466,
	2050, 2011, 1985, 2376, 1469, 2065, 2383, 1520, 1428, 764,
	2459, 2463, 3978, 2372, 3430, 2499, 2461, 2447, 3934, 2455,
	1478, 1837, 1658, 1659, 3988, 618, 1068, 2431, 2199, 2639,
	2640, 3951, 873, 3950, 2375, 2353, 2479, 1313, 2384, 889,
	1251, 1251, 1068, 1251, 2005, 3604, 2487, 2379, 2489, 2137,
	1065, 3444, 1837, 2382, 3923, 1251, 1852, 1470, 1873, 2432,
	3431, 1110, 2537, 3343, 3965, 2862, 1065, 1496, 3099, 1111,
	2482, 2441, 2443, 2444, 2445, 1856, 1078, 2410, 2413, 2400,
	1872, 2419, 3876, 2407, 3342, 2553, 3434, 2528, 2993, 2901,
	2528, 646, 2430, 2550, 2646, 3791, 2049, 2012, 4001, 1985,
	1293, 2579, 1985, 950, 1985, 2448, 1954, 2919, 1868, 2913,
	649, 1064, 2670, 1846, 2601, 3430, 2602, 1863, 1848, 3423,
	1830, 1694, 1757, 1853, 1830, 1831, 3733, 1064, 2193, 1831,
	1258, 3548, 1844, 1845, 2483, 3421, 701, 700, 844, 2668,
	3971, 3425, 1760, 3749, 950, 1433, 2599, 2564, 2581, 1751,
	950, 950, 2427, 2585, 2586, 2582, 2493, 2546, 1315, 2503,
	1869, 3431, 2591, 2592, 2593, 158, 1837, 2584, 844, 2539,
	2587, 2046, 2588, 2521, 2554, 757, 1490, 2596, 2532, 2037,
	2609, 2622, 2480, 2624, 2199, 2864, 844, 2603, 2543, 2605,
	2544, 2607, 2545, 2135, 2035, 1698, 2138, 731, 569, 3424,
	845, 1833, 3236, 2929, 2406, 950, 950, 2615, 2555, 2635,
	2549, 950, 2551, 3442, 2566, 1112, 1857, 696, 3964, 695,
	3877, 745, 3426, 1832, 950, 950, 3427, 1832, 2617, 2395,
	950, 950, 620, 1350, 1701, 617, 950, 1653, 2848, 1834,
	1393, 1239, 2134, 1834, 3789, 950, 950, 950, 1696, 3225,
	1837, 950, 2665, 3339, 2481, 3603, 2598, 1290, 3495, 844,
	570, 950, 2662, 3561, 1699, 2604, 3922, 2606, 2666, 2608,
	3429, 2994, 2671, 2181, 1858, 1859, 3944, 3790, 950, 3096,
	2692, 3823, 1605, 1493, 3432, 2638, 1076, 1854, 2628, 2272,
	2272, 2629, 1697, 2895, 2081, 2625, 2627, 1431, 571, 831,
	572, 1836, 3875, 3752, 2633, 1836, 2048, 2010, 2661, 2315,
	2151, 841, 2709, 3989, 1429, 2808, 2648, 831, 765, 2154,
	2328, 1855, 886, 3426, 2620, 2687, 2688, 3427, 653, 3482,
	2691, 892, 1491, 3112, 2552, 2993, 2683, 2149, 3480, 3999,
	886, 2894, 2162, 3443, 950, 950, 950, 1442, 1444, 1414,
	3969, 3097, 2007, 950, 950, 950, 3505, 3482, 950, 2002,
	1524, 2396, 3333, 3545, 3196, 2660, 3480, 1094, 950, 1070,
	1134, 3429, 893, 1865, 950, 2411, 950, 1090, 3344, 3056,
	2630, 3755, 3277, 1700, 1070, 3432, 3874, 3933, 1494, 2136,
	4002, 3428, 758, 759, 2800, 2801, 1457, 3904, 1955, 3931,
	3769, 832, 1134, 3662, 1837, 3905, 3294, 2980, 1837, 2272,
	2272, 2272, 1916, 1691, 1070, 1860, 1617, 1134, 2698, 832,
	1622, 3921, 2822, 1088, 2897, 2667, 3435, 1083, 560, 2619,
	3496, 1763, 3970, 1535, 2669, 1134, 3340, 2783, 746, 747,
	2084, 2868, 1847, 1805, 1878, 1828, 3150, 950, 3060, 1885,
	2145, 2616, 2841, 2802, 2846, 1066, 2899, 1066, 3994, 1802,
	3388, 950, 2146, 1495, 3972, 3610, 2147, 2199, 3609, 3589,
	2152, 3447, 1763, 2858, 1534, 3719, 1925, 2812, 3446, 3544,
	2807, 1534, 2860, 1861, 3295, 3255, 3211, 1529, 950, 2981,
	2975, 2876, 3428, 2831, 2810, 2872, 2866, 2835, 230, 2507,
	2497, 3478, 1936, 1928, 2811, 2778, 2779, 2780, 2836, 2820,
	2898, 3095, 2839, 2869, 2870, 2823, 2824, 1921, 2828, 2794,
	2886, 1903, 3756, 2891, 2892, 2074, 1800, 3435, 3165, 1134,
	2885, 3057, 2809, 2889, 2618, 1239, 1605, 2873, 1251, 3801,
	760, 761, 2043, 1534, 1798, 654, 655, 1884, 2816, 1801,
	1251, 2821, 2433, 1833, 2307, 2322, 1134, 1833, 2826, 833,
	2827, 640, 2910, 3481, 1533, 3297, 3518, 2849, 2494, 2902,
	2903, 1533, 1251, 2904, 1353, 2855, 2856, 833, 2857, 2843,
	2844, 2845, 2932, 1251, 3645, 2935, 748, 749, 3546, 2943,
	2945, 3481, 1698, 1995, 2861, 2912, 2938, 1070, 3151, 2927,
	3903, 2923, 2924, 2974, 2920, 2925, 3152, 1535, 2877, 2867,
	3643, 2412, 3345, 3590, 1535, 2961, 2887, 3831, 2989, 1835,
	3389, 2309, 3832, 2148, 3993, 2883, 2308, 2882, 1068, 2817,
	1757, 1701, 2150, 1533, 2075, 1251, 1251, 2653, 2900, 2631,
	3445, 2906, 2998, 1068, 3178, 2313, 1835, 2915, 2805, 2579,
	1760, 2804, 1065, 657, 656, 2922, 2916, 1751, 2579, 2918,
	2917, 1699, 1471, 2936, 2352, 2969, 2950, 1065, 913, 2928,
	2351, 1757, 2946, 1068, 2941, 2815, 834, 2350, 1875, 2349,
	2501, 3009, 1458, 2431, 3346, 3757, 1875, 1134, 890, 646,
	1134, 1760, 2954, 3598, 834, 2921, 2982, 1065, 1751, 1322,
	2819, 2972, 2990, 2434, 2435, 658, 659, 1336, 649, 3726,
	3487, 1323, 1334, 1064, 3028, 763, 1934, 2952, 835, 3941,
	950, 3535, 3641, 3015, 1881, 2842, 950, 950, 1064, 3809,
	950, 950, 950, 3804, 950, 3030, 835, 3727, 3587, 3006,
	3007, 3008, 893, 950, 1763, 3011, 3010, 3012, 3026, 3035,
	158, 158, 950, 2995, 3051, 950, 2997, 2930, 1064, 3013,
	3014, 1134, 3004, 3798, 3050, 1879, 1737, 3167, 3395, 2988,
	950, 2206, 3041, 3828, 3042, 3588, 3043, 1510, 1134, 2776,
	1700, 2818, 3534, 3599, 1508, 1487, 3943, 3053, 1763, 1763,
	950, 950, 1485, 950, 950, 950, 2272, 2272, 3075, 1468,
	3058, 1466, 1464, 1880, 1462, 3894, 1460, 1452, 3805, 3047,
	3740, 950, 3728, 1450, 1332, 950, 3567, 1763, 1763, 950,
	950, 950, 950, 950, 950, 950, 950, 950, 950, 950,
	950, 950, 950, 950, 950, 950, 950, 950, 3387, 950,
	3267, 3055, 2775, 3072, 2947, 3036, 950, 950, 1763, 2740,
	3084, 3085, 2205, 950, 2672, 2498, 1068, 2250, 2246, 2457,
	2425, 2374, 3048, 1732, 950, 1728, 2970, 1511, 1416, 2034,
	3052, 1529, 2613, 3080, 3869, 1070, 1070, 2976, 3829, 950,
	1065, 2612, 3091, 2590, 2272, 2272, 2272, 2272, 2272, 2272,
	2272, 2272, 2272, 2272, 2272, 2272, 2272, 2272, 2272, 2272,
	2272, 2272, 2272, 2063, 2272, 2045, 3114, 1985, 1134, 3107,
	3102, 3098, 3100, 3101, 2015, 1900, 3183, 3122, 1335, 1787,
	3124, 3123, 3125, 1333, 2094, 3115, 762, 2244, 1637, 3021,
	3022, 3154, 3162, 3121, 3127, 3129, 950, 1426, 1308, 2931,
	3945, 1064, 1509, 1757, 2248, 2249, 2247, 3092, 3919, 1507,
	1486, 950, 950, 2094, 3130, 1694, 3464, 1484, 3206, 3455,
	3797, 3516, 3469, 1760, 1467, 3155, 1465, 1463, 3419, 1461,
	1751, 1459, 1451, 3293, 3287, 3169, 950, 950, 1449, 1331,
	158, 3260, 3231, 3229, 3158, 3174, 3175, 1757, 1757, 3163,
	3171, 3172, 3210, 2973, 2965, 2548, 2524, 950, 2512, 2504,
	2243, 2245, 2491, 3669, 1970, 1968, 1965, 1760, 1760, 3185,
	1960, 1958, 1956, 3186, 1751, 1751, 1757, 1757, 1947, 1899,
	1251, 1897, 1889, 1876, 842, 1227, 1862, 1849, 1838, 1698,
	2985, 2033, 1763, 1739, 3935, 2942, 1760, 1760, 2651, 1239,
	1885, 3839, 3540, 1751, 1751, 1538, 3533, 1757, 3532, 3476,
	3242, 2580, 1824, 3243, 3245, 3238, 1287, 1251, 3256, 3202,
	3214, 2396, 3671, 2396, 950, 2415, 3305, 1760, 1701, 1846,
	1505, 1506, 1070, 950, 1751, 2394, 3250, 2414, 3283, 2006,
	1374, 3686, 1696, 2032, 1045, 3230, 2031, 3232, 2164, 1251,
	1251, 1251, 3307, 3838, 1933, 2431, 1066, 1373, 1699, 2013,
	3315, 3449, 3302, 1617, 913, 1251, 3471, 1448, 913, 1046,
	631, 1134, 1066, 3705, 3396, 3299, 3374, 3298, 2436, 2652,
	2537, 2418, 3270, 1218, 1542, 3284, 1697, 1218, 3285, 3678,
	1242, 1242, 3937, 1134, 1068, 1068, 950, 950, 1884, 3259,
	1539, 3679, 950, 950, 1763, 574, 3899, 950, 950, 3331,
	950, 3929, 2579, 3301, 950, 2490, 1795, 2276, 1065, 1065,
	2462, 3288, 847, 849, 851, 950, 3300, 3680, 2877, 1545,
	1546, 2470, 3303, 1374, 3308, 1239, 1374, 3309, 1545, 1546,
	1132, 950, 2469, 221, 1233, 3332, 3319, 3326, 687, 3314,
	2452, 3320, 3321, 3329, 728, 3254, 3322, 585, 3356, 2420,
	3328, 3796, 3325, 3348, 1047, 2454, 3313, 1548, 3347, 2422,
	1239, 3765, 1239, 3341, 3336, 3253, 3762, 1700, 2453, 1064,
	1064, 3725, 2421, 3638, 3682, 3286, 958, 557, 1547, 3360,
	3276, 1757, 3193, 2531, 2294, 1790, 1744, 1547, 3966, 3831,
	3681, 1070, 3596, 2847, 3832, 3992, 2746, 2747, 3764, 1070,
	1260, 1760, 3366, 1134, 2201, 1134, 3659, 3683, 1751, 1545,
	1546, 3198, 1070, 3947, 2388, 2389, 2386, 2387, 2388, 228,
	228, 228, 1134, 563, 564, 3401, 579, 563, 579, 589,
	594, 1436, 2386, 610, 2234, 3386, 1489, 1435, 616, 1488,
	3627, 950, 3472, 3468, 228, 3467, 3362, 3291, 3197, 3103,
	2933, 3440, 1631, 1630, 3980, 3952, 3716, 3623, 3581, 3579,
	3502, 3412, 742, 3330, 3263, 3311, 3271, 1134, 228, 3269,
	3441, 3227, 1134, 3404, 3222, 3005, 2979, 2978, 3416, 3417,
	2595, 1068, 3403, 3452, 3453, 3400, 2594, 2541, 1251, 1251,
	3451, 3398, 3399, 1757, 3408, 2835, 3407, 2516, 3418, 3450,
	2492, 3397, 2367, 2366, 2166, 1065, 2030, 2029, 158, 3402,
	2028, 2027, 1950, 1760, 1134, 3485, 3439, 3393, 1949, 1251,
	1751, 1948, 1931, 1911, 1910, 1906, 1905, 1904, 3473, 1902,
	3474, 1901, 3483, 3316, 3317, 3318, 1504, 3475, 1503, 1361,
	1360, 1359, 3466, 1358, 3488, 950, 1357, 1356, 1355, 1354,
	1352, 1347, 1346, 3463, 1345, 3536, 1344, 1343, 1303, 1302,
	1134, 1301, 1300, 3462, 1299, 1298, 1064, 1292, 1286, 1284,
	563, 563, 950, 950, 950, 3497, 3539, 3520, 228, 3519,
	1283, 1125, 3523, 3507, 3514, 3508, 3504, 1124, 1123, 3484,
	1134, 3489, 1122, 1093, 1092, 950, 3521, 1028, 950, 950,
	1796, 3684, 853, 3509, 839, 3527, 3685, 3601, 950, 3433,
	1498, 1763, 82, 1294, 674, 76, 950, 950, 1882, 2937,
	3226, 3528, 3827, 1280, 3748, 682, 3811, 2893, 2471, 2014,
	1456, 1134, 2016, 2830, 3547, 2335, 3788, 3370, 2708, 3712,
	3560, 2204, 1635, 2787, 1134, 3552, 78, 934, 980, 3494,
	1068, 3493, 950, 3420, 3213, 2569, 3491, 3490, 1068, 950,
	1748, 1750, 900, 1137, 1806, 3569, 940, 950, 1822, 1763,
	1815, 1068, 2368, 2272, 1065, 3563, 950, 3557, 2254, 950,
	3583, 957, 1065, 954, 1752, 950, 1754, 956, 3575, 3576,
	955, 1753, 1134, 1654, 953, 1065, 3574, 1747, 3290, 3289,
	2500, 2674, 2675, 3584, 2535, 1339, 2276, 3582, 816, 1810,
	2160, 2188, 3578, 2697, 3622, 1628, 915, 2272, 936, 2185,
	1086, 1218, 3606, 3605, 925, 2813, 2992, 3192, 3632, 3524,
	2073, 690, 3653, 2743, 2191, 1064, 3644, 1134, 1079, 2277,
	1251, 1239, 2270, 1064, 2266, 2525, 1514, 1607, 2536, 1120,
	3620, 3629, 918, 2158, 3658, 3624, 1064, 1619, 950, 950,
	2677, 2083, 1925, 2999, 913, 2833, 2361, 3657, 3689, 3690,
	1218, 950, 950, 2961, 3670, 3642, 3637, 3835, 1731, 3111,
	3652, 1915, 3668, 1414, 1044, 1043, 2276, 2276, 950, 1763,
	1042, 3817, 3814, 3323, 2959, 1799, 3614, 3615, 3666, 3667,
	3665, 3672, 3687, 3673, 2380, 3612, 1597, 3664, 2966, 3523,
	1757, 930, 950, 1238, 2798, 950, 3628, 3029, 1305, 3630,
	3631, 2769, 2770, 2771, 615, 3729, 942, 1826, 3718, 1596,
	1760, 2478, 2477, 3700, 950, 3722, 1107, 1751, 1106, 1105,
	2875, 4000, 3223, 3710, 3735, 198, 3674, 2645, 1066, 1536,
	3701, 3702, 1528, 2272, 195, 3717, 3693, 1251, 197, 196,
	1239, 1239, 3498, 1066, 3897, 3734, 3240, 3751, 1757, 2951,
	20, 950, 950, 19, 3704, 18, 103, 39, 17, 131,
	130, 950, 129, 128, 950, 127, 1251, 133, 1760, 126,
	125, 3766, 120, 1066, 3768, 1751, 1251, 1251, 3742, 124,
	123, 3746, 3745, 122, 121, 119, 2276, 2276, 2276, 3744,
	118, 117, 1218, 1251, 3759, 3760, 3657, 3763, 3758, 116,
	115, 114, 113, 112, 3779, 111, 950, 950, 3771, 110,
	3775, 109, 3776, 1239, 108, 107, 106, 3750, 105, 104,
	3777, 3778, 1081, 606, 3770, 3784, 603, 3785, 55, 54,
	102, 101, 3783, 16, 37, 14, 3808, 3782, 3806, 950,
	950, 59, 950, 3793, 60, 13, 32, 81, 93, 1894,
	1091, 3816, 3819, 3833, 92, 33, 90, 610, 3743, 3807,
	89, 31, 15, 87, 86, 30, 3840, 28, 1757, 11,
	9, 8, 34, 1715, 12, 3821, 5, 3825, 163, 162,
	228, 164, 228, 228, 1230, 3792, 228, 228, 1760, 3852,
	950, 950, 950, 161, 80, 1751, 3853, 160, 159, 79,
	228, 3844, 1262, 3837, 3854, 3849, 3847, 26, 10, 884,
	3881, 831, 155, 950, 3654, 3281, 74, 157, 3820, 156,
	154, 3824, 3865, 3866, 3868, 3867, 153, 1289, 152, 3886,
	75, 72, 151, 150, 886, 3884, 73, 149, 24, 6,
	1307, 3841, 1312, 58, 3842, 228, 228, 7, 1230, 3906,
	3542, 3037, 96, 97, 35, 3910, 1066, 3915, 228, 3908,
	70, 69, 950, 3916, 3920, 68, 1349, 3907, 23, 57,
	22, 188, 3912, 187, 186, 885, 185, 180, 179, 228,
	228, 228, 184, 1230, 228, 182, 181, 3926, 3927, 183,
	3928, 3939, 178, 3932, 610, 190, 228, 228, 2537, 3930,
	189, 192, 3938, 3816, 3936, 176, 3819, 3940, 3942, 3954,
	950, 3946, 950, 832, 3953, 3957, 3949, 172, 3955, 742,
	3956, 3961, 3958, 171, 3960, 175, 177, 174, 173, 3948,
	170, 3747, 191, 148, 65, 3959, 147, 146, 145, 144,
	143, 142, 3973, 141, 3975, 3913, 3914, 64, 21, 2,
	3917, 3896, 3837, 2746, 2747, 3981, 2764, 2765, 2766, 1,
	3982, 0, 0, 0, 0, 0, 3984, 950, 950, 3990,
	3987, 0, 0, 0, 0, 950, 1218, 950, 950, 3996,
	0, 228, 0, 3986, 0, 0, 0, 0, 3068, 3069,
	0, 4003, 0, 0, 0, 4006, 228, 0, 0, 4004,
	0, 0, 0, 0, 0, 0, 0, 4005, 622, 0,
	4007, 4014, 4010, 0, 4013, 0, 0, 4015, 4018, 0,
	0, 950, 2761, 4019, 4017, 1242, 4012, 4022, 0, 0,
	0, 0, 0, 2097, 0, 4027, 0, 0, 0, 0,
	0, 0, 4023, 0, 0, 4025, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3997, 3998, 0, 0,
	0, 0, 0, 1218, 0, 0, 1925, 0, 0, 0,
	0, 833, 0, 2276, 2276, 0, 3131, 3132, 3133, 3134,
	3135, 3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144,
	3145, 3146, 3147, 3148, 3149, 0, 3153, 0, 0, 0,
	4024, 0, 0, 0, 2752, 0, 0, 0, 0, 0,
	0, 0, 627, 0, 0, 0, 0, 0, 0, 0,
	2202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1218, 0, 1066, 1066, 2768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2767, 0, 1218,
	0, 2276, 2276, 2276, 2276, 2276, 2276, 2276, 2276, 2276,
	2276, 2276, 2276, 2276, 2276, 2276, 2276, 2276, 2276, 2276,
	0, 2276, 0, 0, 633, 0, 883, 0, 834, 0,
	0, 563, 0, 2762, 0, 0, 0, 733, 0, 0,
	0, 0, 0, 0, 0, 1545, 1546, 0, 629, 0,
	0, 0, 228, 0, 228, 0, 2345, 0, 228, 0,
	0, 0, 0, 66, 0, 736, 735, 1576, 0, 0,
	835, 1262, 1230, 228, 1548, 228, 0, 0, 0, 67,
	228, 1262, 579, 0, 0, 228, 1262, 0, 0, 0,
	0, 610, 71, 0, 1218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1547, 0, 0, 0, 0, 0,
	0, 0, 0, 1545, 1546, 0, 1578, 1579, 1580, 1588,
	1589, 1590, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 1581, 1576, 0, 0, 0, 0,
	0, 0, 1548, 0, 0, 2763, 1218, 0, 0, 1594,
	0, 2391, 0, 624, 0, 0, 0, 0, 0, 0,
	0, 83, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1066, 1547, 0, 98, 628, 0, 0, 0, 84,
	95, 1925, 1567, 0, 1545, 1546, 0, 0, 0, 0,
	1564, 0, 0, 0, 1242, 0, 1553, 0, 0, 0,
	0, 0, 0, 632, 0, 0, 1576, 0, 0, 0,
	0, 0, 0, 1548, 0, 0, 0, 0, 0, 0,
	0, 626, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 0, 0, 1575, 1577, 0, 0, 0, 0,
	0, 0, 0, 1547, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 1570, 1571, 1572, 1573, 623, 0,
	0, 2758, 2759, 2760, 1553, 0, 0, 0, 2757, 2755,
	2756, 2748, 2749, 2750, 2751, 2753, 2754, 0, 0, 0,
	0, 0, 0, 0, 630, 1568, 0, 0, 0, 0,
	0, 0, 0, 1585, 0, 0, 1595, 634, 0, 0,
	0, 228, 1575, 1577, 0, 228, 0, 0, 625, 0,
	228, 0, 0, 0, 0, 0, 0, 1591, 0, 1592,
	0, 0, 0, 0, 0, 0, 1562, 1563, 228, 0,
	228, 0, 228, 0, 0, 1553, 563, 0, 0, 0,
	1066, 0, 1583, 0, 0, 88, 0, 0, 1066, 0,
	1951, 0, 0, 1568, 0, 0, 0, 0, 0, 0,
	0, 1066, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 1575, 1577, 0, 0, 0, 1593, 0,
	0, 0, 0, 165, 91, 0, 94, 0, 0, 0,
	0, 0, 0, 0, 0, 1582, 610, 1569, 0, 0,
	742, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 737, 0, 0,
	0, 132, 0, 228, 1568, 1230, 228, 0, 0, 0,
	0, 0, 66, 0, 0, 0, 0, 0, 0, 610,
	0, 0, 0, 0, 0, 1574, 228, 201, 67, 0,
	0, 0, 0, 0, 0, 228, 228, 0, 228, 0,
	228, 71, 228, 0, 228, 1569, 0, 0, 0, 0,
	0, 134, 0, 0, 0, 0, 0, 0, 2039, 0,
	0, 2040, 1239, 2041, 0, 169, 0, 0, 0, 1586,
	0, 0, 0, 200, 0, 228, 77, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 594, 0, 0, 0,
	0, 610, 1557, 1549, 1550, 1551, 1552, 1554, 1555, 0,
	83, 0, 0, 734, 0, 0, 1569, 0, 0, 0,
	0, 0, 0, 98, 0, 0, 0, 0, 84, 95,
	0, 0, 0, 0, 0, 3566, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1242, 0, 1218, 0,
	0, 0, 0, 0, 0, 0, 0, 1584, 0, 0,
	0, 1559, 1560, 1566, 1587, 1565, 1561, 0, 1558, 1556,
	1557, 1549, 1550, 1551, 1552, 1554, 1555, 85, 0, 3592,
	1218, 2721, 0, 0, 0, 2722, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1218, 0, 0, 0, 0,
	1545, 1546, 0, 0, 0, 2799, 1588, 1589, 1590, 0,
	0, 0, 0, 1218, 0, 0, 0, 0, 0, 0,
	2276, 0, 1576, 0, 0, 913, 0, 0, 0, 1548,
	0, 0, 0, 0, 0, 0, 1594, 2825, 0, 913,
	0, 0, 1549, 1550, 1551, 1552, 1554, 1555, 0, 0,
	0, 0, 2838, 0, 0, 0, 0, 0, 563, 1547,
	0, 0, 0, 0, 2276, 0, 0, 0, 0, 1567,
	2853, 0, 0, 228, 0, 0, 0, 1564, 0, 0,
	0, 0, 563, 0, 0, 0, 0, 0, 0, 228,
	0, 563, 0, 0, 88, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 1218, 0, 0,
	0, 0, 0, 0, 0, 3709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 91, 1218, 94, 0, 0, 0, 66,
	0, 1570, 1571, 1572, 1573, 0, 0, 0, 0, 0,
	0, 1553, 0, 0, 0, 67, 0, 0, 199, 0,
	0, 0, 0, 0, 579, 0, 737, 0, 71, 0,
	132, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1585, 0, 0, 1595, 0, 0, 0, 0, 0, 1575,
	1577, 2838, 0, 0, 0, 0, 201, 0, 0, 0,
	2276, 0, 0, 77, 0, 0, 0, 2404, 0, 0,
	0, 0, 0, 1562, 1563, 228, 0, 0, 0, 0,
	134, 0, 0, 0, 0, 0, 228, 0, 0, 1583,
	0, 0, 0, 0, 169, 0, 0, 83, 0, 228,
	1568, 0, 200, 0, 0, 0, 0, 0, 0, 0,
	98, 0, 193, 228, 0, 84, 95, 0, 0, 0,
	194, 0, 0, 0, 0, 1218, 0, 0, 1218, 228,
	2484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 2276, 2276, 0, 0, 0, 0, 0,
	0, 0, 0, 1262, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 228, 85, 0, 0, 0, 0, 2520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2404,
	0, 563, 1233, 0, 2540, 1132, 0, 0, 0, 0,
	228, 0, 1574, 228, 0, 228, 0, 228, 0, 1218,
	0, 0, 1230, 0, 228, 228, 0, 0, 0, 0,
	0, 0, 1569, 0, 2562, 742, 1218, 2404, 2404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 1586, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 1230, 228,
	0, 0, 1262, 0, 1262, 0, 3088, 1230, 0, 1230,
	0, 1230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3104, 0, 0, 0, 0, 0, 0,
	0, 88, 0, 228, 228, 228, 228, 1230, 228, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2746, 2747, 0, 2764, 2765, 2766, 0, 0, 165,
	91, 228, 94, 0, 1584, 0, 0, 0, 0, 228,
	0, 1587, 1565, 1561, 0, 1558, 1556, 1557, 1549, 1550,
	1551, 1552, 1554, 1555, 0, 199, 1218, 0, 0, 0,
	0, 0, 0, 737, 0, 0, 0, 132, 0, 0,
	0, 0, 0, 0, 1545, 1546, 0, 1578, 1579, 1580,
	1588, 1589, 1590, 0, 0, 0, 0, 0, 0, 0,
	2761, 0, 0, 201, 0, 1581, 1576, 0, 0, 0,
	0, 0, 0, 1548, 0, 0, 0, 0, 0, 0,
	1594, 0, 0, 3195, 0, 0, 0, 134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1262, 0,
	0, 169, 0, 1547, 0, 0, 0, 0, 0, 200,
	0, 0, 0, 1567, 0, 0, 0, 0, 0, 193,
	0, 1564, 0, 0, 0, 1545, 1546, 194, 1578, 1579,
	1580, 1588, 1589, 1590, 0, 0, 0, 0, 0, 0,
	0, 0, 2752, 0, 0, 0, 0, 1576, 0, 1398,
	0, 0, 1545, 1546, 1548, 0, 0, 0, 0, 0,
	0, 1594, 0, 1693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1576, 0, 0, 0, 0, 0,
	0, 1548, 0, 0, 1547, 1570, 1571, 1572, 1573, 0,
	0, 0, 0, 0, 1567, 1553, 2746, 2747, 0, 2764,
	2765, 2766, 1564, 0, 0, 0, 0, 0, 0, 0,
	0, 1547, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 1567, 0, 0, 1585, 0, 0, 1595, 0, 1218,
	228, 2762, 0, 1575, 1577, 563, 0, 0, 0, 0,
	563, 0, 0, 563, 0, 0, 563, 563, 1591, 0,
	1592, 1218, 563, 0, 0, 0, 0, 1562, 1563, 0,
	228, 0, 0, 0, 0, 2761, 1570, 1571, 1572, 1573,
	0, 0, 1262, 1583, 0, 0, 1553, 0, 0, 0,
	0, 0, 0, 0, 1568, 0, 0, 0, 0, 0,
	0, 1262, 0, 1570, 1571, 1572, 1573, 0, 0, 0,
	0, 0, 0, 1553, 0, 1585, 0, 0, 1595, 1593,
	2404, 2404, 228, 0, 1575, 1577, 2404, 0, 0, 2879,
	0, 0, 0, 0, 0, 0, 1582, 2404, 2879, 0,
	2404, 2879, 2879, 899, 66, 0, 0, 0, 1562, 1563,
	0, 1575, 1577, 2763, 228, 228, 228, 2752, 0, 0,
	67, 0, 0, 0, 1583, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 1568, 228, 1230, 0, 0,
	0, 1218, 0, 1218, 0, 0, 1574, 0, 0, 2404,
	0, 2934, 2404, 1312, 0, 0, 2404, 2404, 0, 0,
	1218, 0, 1568, 0, 0, 0, 1569, 0, 77, 0,
	2767, 0, 0, 0, 0, 0, 0, 228, 2955, 0,
	0, 2957, 2404, 0, 0, 228, 0, 0, 0, 228,
	1586, 1312, 0, 0, 0, 0, 0, 0, 0, 0,
	3406, 0, 83, 0, 0, 1218, 2762, 0, 2520, 0,
	1218, 1230, 0, 228, 0, 98, 2404, 3414, 563, 0,
	84, 95, 0, 0, 0, 2404, 0, 1574, 0, 2758,
	2759, 2760, 0, 0, 228, 228, 2757, 2755, 2756, 2748,
	2749, 2750, 2751, 2753, 2754, 0, 0, 1569, 0, 0,
	0, 0, 1218, 0, 1574, 0, 0, 0, 0, 228,
	2520, 0, 0, 2520, 0, 0, 0, 0, 0, 85,
	0, 1586, 0, 0, 1569, 0, 0, 0, 1584, 0,
	0, 0, 1559, 1560, 1566, 1587, 1565, 1561, 0, 1558,
	1556, 1557, 1549, 1550, 1551, 1552, 1554, 1555, 1218, 0,
	0, 3046, 2179, 0, 1230, 228, 2180, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1132, 0, 0, 0, 1584,
	0, 0, 0, 1559, 1560, 1566, 1587, 1565, 1561, 1218,
	1558, 1556, 1557, 1549, 1550, 1551, 1552, 1554, 1555, 0,
	0, 0, 1218, 0, 0, 3558, 88, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3109, 1558, 1556, 1557,
	1549, 1550, 1551, 1552, 1554, 1555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 913, 0, 0,
	0, 0, 0, 0, 165, 91, 3558, 94, 0, 0,
	1218, 0, 0, 0, 2758, 2759, 2760, 0, 0, 2097,
	0, 2757, 2755, 2756, 2748, 2749, 2750, 2751, 2753, 2754,
	199, 0, 0, 0, 0, 0, 0, 0, 737, 0,
	0, 0, 132, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2097, 201, 0,
	0, 228, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 563, 563, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 0, 0, 0, 899,
	0, 0, 0, 899, 193, 0, 1262, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1264, 0,
	1268, 0, 1274, 0, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	1545, 1546, 0, 1578, 1579, 1580, 1588, 1589, 1590, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1581, 1576, 228, 0, 0, 0, 0, 0, 1548,
	0, 0, 228, 0, 0, 0, 1594, 0, 0, 0,
	228, 0, 0, 1386, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1547,
	1404, 0, 1408, 0, 0, 0, 0, 2404, 228, 1567,
	0, 0, 1417, 0, 1421, 0, 0, 1564, 913, 0,
	0, 0, 0, 2562, 2562, 0, 0, 0, 0, 742,
	742, 2404, 0, 0, 2520, 2520, 0, 0, 742, 2404,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1475,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1570, 1571, 1572, 1573, 0, 0, 0, 0, 0,
	0, 1553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3371, 0, 0, 0, 0,
	1585, 0, 0, 1595, 0, 0, 0, 0, 0, 1575,
	1577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1591, 0, 1592, 0, 0, 0,
	0, 0, 0, 1562, 1563, 0, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 0, 0, 0, 0, 0, 0, 1583,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	1568, 0, 0, 1262, 0, 228, 0, 1616, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 1593, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2404, 2404, 2404, 0, 0,
	0, 0, 1582, 0, 140, 0, 0, 0, 1262, 0,
	0, 66, 0, 43, 42, 0, 2404, 0, 2879, 0,
	0, 1262, 1262, 228, 0, 0, 0, 67, 0, 135,
	0, 0, 0, 0, 228, 228, 0, 0, 0, 0,
	71, 0, 0, 0, 0, 2404, 0, 2404, 228, 0,
	61, 0, 1574, 0, 0, 0, 0, 45, 0, 137,
	0, 2404, 0, 0, 0, 3500, 0, 0, 0, 0,
	0, 0, 1569, 44, 228, 77, 1687, 1687, 1687, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1586, 47, 62, 0,
	0, 0, 0, 0, 48, 0, 0, 0, 0, 83,
	0, 0, 0, 138, 1262, 0, 0, 0, 0, 0,
	46, 0, 98, 0, 0, 0, 0, 84, 95, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 899,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 959, 0, 1584, 0, 0, 0, 1559, 1560,
	1566, 1587, 1565, 1561, 0, 1558, 1556, 1557, 1549, 1550,
	1551, 1552, 1554, 1555, 0, 0, 2404, 0, 2879, 0,
	0, 3586, 3377, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 229, 229, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 3586, 0, 0, 0, 1545, 1546, 0, 0,
	2404, 0, 0, 88, 0, 0, 0, 0, 0, 0,
	3661, 0, 0, 50, 0, 0, 0, 0, 1576, 0,
	0, 0, 1262, 0, 0, 1548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 63, 0, 0, 0, 0,
	53, 165, 91, 0, 94, 228, 228, 0, 51, 0,
	0, 0, 139, 0, 0, 1547, 0, 0, 52, 0,
	0, 0, 0, 0, 0, 1567, 0, 199, 0, 3109,
	0, 0, 0, 1564, 0, 56, 0, 0, 0, 132,
	0, 0, 0, 0, 3586, 0, 0, 0, 0, 136,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	228, 0, 0, 0, 0, 0, 0, 1570, 1571, 1572,
	1573, 0, 0, 169, 0, 0, 3500, 1553, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 193, 0, 0, 0, 0, 0, 0, 2879, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1575, 1577, 0, 0, 0,
	0, 168, 0, 1262, 3, 1262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1562,
	1563, 0, 0, 0, 0, 0, 0, 1060, 0, 0,
	3802, 0, 0, 0, 0, 0, 0, 1262, 0, 0,
	228, 0, 0, 0, 0, 0, 1568, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	2404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 223, 559, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2072, 0, 2076,
	0, 0, 0, 0, 0, 0, 2090, 0, 0, 0,
	0, 0, 3109, 2099, 2100, 2101, 2102, 2103, 2104, 2105,
	2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115,
	2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125,
	2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 1574, 2139,
	0, 2141, 2142, 2143, 2144, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2404, 0, 0, 1569, 0,
	0, 0, 0, 2168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1616, 0, 3586, 0, 2183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2213, 2216, 2219, 2222, 0, 2226,
	2227, 2228, 2229, 2230, 2231, 2232, 0, 1262, 0, 2404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2268, 0, 2279,
	2281, 2286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1565, 1561,
	0, 1558, 1556, 1557, 1549, 1550, 1551, 1552, 1554, 1555,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2562, 0,
	0, 0, 0, 0, 0, 0, 229, 1138, 229, 229,
	0, 1138, 229, 229, 1138, 0, 0, 0, 0, 1545,
	1546, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1576, 0, 0, 0, 0, 1138, 0, 1548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1138, 229, 229, 0, 0, 0, 0, 0, 1547, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 1567, 0,
	0, 0, 0, 0, 0, 0, 1564, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 229, 229, 0, 0,
	229, 1138, 0, 0, 0, 0, 0, 1138, 0, 0,
	0, 1138, 229, 229, 0, 0, 0, 0, 0, 0,
	2486, 0, 2488, 0, 0, 1138, 1545, 1546, 0, 1578,
	1579, 1580, 1588, 1589, 1590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1581, 1576, 0,
	1570, 1571, 1572, 1573, 0, 1548, 0, 0, 0, 0,
	1553, 0, 1594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1567, 0, 229, 1575, 1577,
	0, 0, 0, 1564, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1562, 1563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1568,
	0, 0, 0, 0, 0, 0, 2610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1570, 1571, 1572,
	1573, 0, 0, 0, 0, 0, 0, 1553, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1598, 1599, 0, 1585, 0, 0, 1595,
	0, 0, 0, 0, 0, 1575, 1577, 0, 0, 0,
	0, 1129, 0, 0, 0, 0, 0, 1237, 0, 0,
	1591, 0, 1592, 0, 0, 0, 0, 0, 0, 1562,
	1563, 1574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1583, 0, 0, 2657, 2658,
	0, 1569, 0, 0, 2664, 0, 1568, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2678, 2679, 0, 0, 0, 0, 2183,
	0, 1593, 0, 0, 0, 0, 0, 0, 2686, 1341,
	0, 0, 0, 0, 0, 0, 0, 0, 1582, 0,
	0, 0, 0, 0, 2700, 0, 0, 0, 0, 0,
	1365, 1365, 1365, 0, 0, 0, 0, 0, 0, 0,
	0, 2712, 0, 0, 229, 0, 0, 1402, 1403, 0,
	0, 0, 0, 0, 0, 1138, 0, 0, 0, 229,
	229, 229, 0, 0, 0, 0, 229, 0, 1574, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1138, 0, 0, 0, 0, 1569, 0,
	0, 1565, 1561, 0, 1558, 1556, 1557, 1549, 1550, 1551,
	1552, 1554, 1555, 0, 1138, 0, 0, 0, 0, 0,
	0, 0, 1586, 0, 0, 0, 2286, 2286, 2286, 0,
	0, 0, 1545, 1546, 0, 1578, 1579, 1580, 1588, 1589,
	1590, 1687, 1497, 0, 0, 0, 0, 0, 0, 2803,
	0, 0, 0, 1581, 1576, 0, 0, 0, 0, 0,
	0, 1548, 0, 0, 0, 0, 0, 0, 1594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1567, 0, 0, 0, 0, 0, 0, 0, 1564,
	1584, 0, 0, 0, 1559, 1560, 1566, 1587, 1565, 1561,
	899, 1558, 1556, 1557, 1549, 1550, 1551, 1552, 1554, 1555,
	0, 0, 0, 0, 899, 0, 0, 0, 3079, 0,
	0, 0, 0, 0, 0, 0, 0, 1138, 229, 0,
	0, 0, 0, 0, 0, 0, 1138, 0, 0, 0,
	0, 2896, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1570, 1571, 1572, 1573, 0, 0, 0,
	0, 0, 0, 1553, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 229, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 1585, 0, 0, 1595, 0, 0, 0, 0,
	0, 1575, 1577, 0, 229, 0, 229, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 1591, 0, 1592, 0,
	0, 0, 0, 0, 0, 1562, 1563, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1583, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 1568, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 0, 0, 0, 946, 0, 0, 0, 1138,
	0, 1138, 0, 1138, 1735, 0, 1237, 1593, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1138, 1138,
	0, 0, 0, 0, 1582, 0, 0, 0, 1138, 229,
	0, 0, 229, 0, 0, 0, 0, 0, 227, 227,
	227, 1138, 1138, 1138, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 229, 647, 229, 0, 229, 0, 229, 0,
	229, 0, 0, 0, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 0, 0, 1569, 0, 0, 0, 0, 0,
	0, 229, 0, 2090, 0, 0, 0, 0, 0, 3063,
	3064, 0, 0, 3067, 0, 0, 0, 3070, 1586, 0,
	0, 0, 0, 1545, 1546, 0, 3074, 0, 0, 0,
	0, 0, 0, 0, 0, 3081, 0, 0, 2803, 0,
	0, 0, 0, 0, 0, 1576, 0, 0, 0, 0,
	1138, 0, 1548, 3093, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3116, 3117, 0, 3118, 3119, 3120, 0,
	0, 0, 1547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1567, 0, 3126, 0, 0, 1067, 3128, 0,
	1564, 0, 0, 0, 0, 0, 1584, 0, 0, 0,
	1559, 1560, 1566, 1587, 1565, 1561, 0, 1558, 1556, 1557,
	1549, 1550, 1551, 1552, 1554, 1555, 0, 0, 0, 3156,
	3157, 0, 1913, 0, 2724, 0, 1920, 1138, 0, 0,
	0, 0, 0, 0, 3071, 0, 0, 3168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1341,
	0, 1939, 3177, 1939, 1570, 1571, 1572, 1573, 0, 0,
	0, 0, 0, 0, 1553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1545, 1546, 0, 0, 0, 0, 0, 0,
	1237, 0, 0, 0, 0, 0, 1138, 0, 0, 0,
	0, 0, 1575, 1577, 1576, 0, 0, 0, 0, 3207,
	0, 1548, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 1138, 3216, 3219, 1562, 1563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1547, 0, 0, 1920, 0, 0, 1992, 0, 0,
	3239, 1567, 0, 1568, 0, 0, 0, 0, 0, 1564,
	0, 0, 0, 0, 0, 0, 0, 2009, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2019, 0, 2021,
	721, 2023, 0, 2025, 0, 2026, 0, 0, 1138, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3066, 704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2044, 0, 1138, 0,
	0, 0, 0, 1570, 1571, 1572, 1573, 0, 0, 0,
	0, 229, 0, 1553, 0, 0, 0, 1687, 705, 0,
	0, 0, 229, 0, 0, 1574, 3310, 0, 0, 706,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1569, 0, 707, 0, 229,
	1138, 1575, 1577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1138, 0, 726, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1562, 1563, 0, 0, 0,
	0, 0, 708, 0, 0, 0, 0, 0, 0, 3349,
	3350, 0, 229, 0, 0, 3354, 3355, 0, 0, 229,
	3358, 3359, 1568, 0, 709, 0, 0, 3363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3367, 0,
	0, 0, 0, 0, 710, 0, 229, 711, 0, 229,
	0, 229, 0, 229, 3372, 0, 633, 0, 0, 0,
	229, 229, 1138, 1138, 0, 1138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1138, 0, 0,
	725, 0, 0, 0, 0, 1565, 1561, 229, 1558, 1556,
	1557, 1549, 1550, 1551, 1552, 1554, 1555, 0, 0, 0,
	0, 0, 0, 229, 0, 229, 0, 0, 0, 227,
	0, 227, 227, 0, 1574, 227, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 1569, 0, 0, 0, 0, 229,
	229, 229, 229, 0, 229, 2342, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 227, 0, 229, 0, 0,
	0, 0, 713, 0, 0, 229, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 731, 0, 714, 0, 0, 0, 227, 227,
	227, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 227, 0, 0, 0,
	0, 0, 935, 100, 0, 632, 0, 0, 0, 0,
	0, 0, 715, 0, 0, 729, 730, 716, 0, 0,
	0, 0, 0, 723, 1565, 1561, 717, 1558, 1556, 1557,
	1549, 1550, 1551, 1552, 1554, 1555, 0, 0, 3219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	724, 0, 0, 0, 1237, 3553, 3554, 3555, 719, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 720, 0, 0, 0, 0, 727, 100, 2090, 0,
	0, 3564, 3565, 0, 0, 227, 0, 0, 0, 634,
	0, 0, 0, 0, 0, 0, 0, 1920, 0, 3573,
	722, 0, 0, 0, 2511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2542, 0, 0, 1365, 0, 1365, 0, 1365, 0,
	0, 0, 3219, 0, 0, 0, 0, 0, 0, 0,
	3611, 875, 1138, 0, 0, 0, 0, 0, 0, 3618,
	0, 894, 899, 0, 0, 0, 0, 0, 3625, 0,
	0, 0, 2589, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1138, 0, 0, 0, 2597, 0,
	2600, 0, 0, 0, 1054, 0, 0, 0, 0, 1138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1138, 0, 0,
	0, 0, 0, 0, 2621, 1237, 2623, 1237, 0, 2626,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3219, 3219, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1365, 0, 0, 0, 0, 0, 0, 0,
	2654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 229, 229, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 3721, 0, 0, 3724, 0,
	0, 1709, 229, 1067, 0, 0, 0, 227, 0, 0,
	0, 1138, 0, 0, 0, 0, 0, 3219, 0, 0,
	1138, 0, 227, 1709, 227, 0, 0, 0, 0, 647,
	0, 0, 1138, 0, 647, 0, 0, 0, 1138, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 1138, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 3219, 1138, 0, 3219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	982, 0, 1545, 1546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 229, 0, 0, 1576, 0, 0, 0, 0, 0,
	2090, 1548, 0, 0, 0, 0, 0, 1138, 1138, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1547, 0, 899, 0, 0, 0, 0, 0, 0,
	0, 1567, 0, 0, 0, 0, 0, 0, 0, 1564,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1138,
	0, 229, 1138, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3864, 3864, 3864, 0, 0, 0, 0,
	0, 647, 0, 3065, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3885, 0, 0, 0,
	0, 0, 0, 1570, 1571, 1572, 1573, 0, 0, 0,
	0, 0, 0, 1553, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1138, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 227, 0, 0, 0, 0, 227,
	1138, 0, 0, 0, 0, 3864, 0, 0, 0, 0,
	0, 1575, 1577, 2871, 0, 0, 0, 227, 0, 227,
	0, 227, 1071, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1562, 1563, 0, 0, 0,
	0, 0, 0, 0, 0, 2909, 2911, 2511, 0, 0,
	0, 0, 0, 3219, 0, 3219, 0, 0, 227, 0,
	0, 0, 1568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 100, 0,
	100, 0, 100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3864, 3991, 227, 0, 0, 227, 2967, 0, 3995, 0,
	2971, 0, 0, 0, 0, 0, 0, 0, 951, 0,
	1138, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 647, 227, 0, 227, 0, 227,
	0, 227, 0, 227, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 100, 0, 1237, 1237, 894, 100, 100,
	0, 0, 0, 0, 1569, 0, 0, 0, 0, 0,
	100, 0, 100, 0, 227, 0, 0, 0, 0, 0,
	3025, 0, 100, 0, 100, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3049, 0, 1237, 0,
	0, 0, 1138, 0, 0, 0, 0, 100, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 664, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 3061, 0, 229, 0, 0, 0, 0, 0, 1138,
	0, 0, 0, 0, 0, 665, 0, 0, 0, 0,
	0, 0, 0, 0, 1565, 1561, 0, 1558, 1556, 1557,
	1549, 1550, 1551, 1552, 1554, 1555, 0, 0, 0, 0,
	0, 1138, 1138, 1138, 0, 0, 0, 0, 0, 666,
	0, 684, 0, 0, 0, 0, 0, 1138, 0, 875,
	0, 0, 229, 1138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 667, 0, 0, 668, 1610,
	0, 0, 0, 0, 0, 1138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 691, 1615, 0, 0, 0,
	1621, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1067, 689, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1067, 0,
	0, 0, 0, 0, 0, 670, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 671, 0, 0, 672, 0,
	0, 0, 0, 693, 0, 0, 0, 633, 0, 0,
	0, 0, 0, 0, 0, 1071, 0, 0, 0, 1071,
	0, 0, 1071, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1138, 0, 1138, 0, 0,
	0, 0, 0, 0, 1071, 0, 0, 0, 1707, 0,
	1710, 0, 100, 0, 1138, 0, 0, 0, 0, 0,
	0, 0, 0, 692, 0, 0, 0, 0, 1071, 0,
	0, 0, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 1138,
	229, 229, 0, 0, 1138, 0, 0, 0, 227, 1071,
	0, 0, 673, 0, 229, 1071, 0, 0, 0, 1071,
	1138, 1138, 227, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1071, 2511, 0, 0, 0, 647, 0,
	229, 0, 0, 3280, 0, 677, 1138, 229, 0, 0,
	0, 1138, 0, 0, 0, 0, 0, 0, 3292, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 632, 0, 0, 0,
	1071, 0, 0, 0, 0, 0, 663, 0, 685, 0,
	0, 0, 1138, 0, 0, 0, 0, 678, 0, 227,
	0, 0, 227, 0, 227, 0, 227, 0, 0, 0,
	0, 0, 0, 227, 227, 0, 683, 3334, 0, 0,
	0, 0, 1138, 0, 0, 0, 0, 0, 0, 0,
	679, 0, 0, 696, 0, 695, 233, 0, 0, 680,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 681, 0, 0, 0, 227, 688, 227, 0,
	0, 0, 697, 1138, 694, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 0, 1138, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 227, 227, 227, 227, 0, 227, 0, 227,
	0, 0, 0, 0, 639, 0, 0, 0, 0, 0,
	0, 0, 0, 1136, 0, 0, 0, 1136, 0, 0,
	1253, 0, 0, 0, 1138, 0, 0, 0, 639, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1138,
	0, 0, 1138, 0, 0, 0, 1253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 894,
	0, 894, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3454, 0, 0, 1253, 0, 0,
	0, 0, 0, 1253, 0, 2511, 0, 1253, 0, 0,
	0, 0, 0, 0, 0, 0, 1071, 0, 1071, 0,
	0, 1253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1071, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2511, 0, 0, 1764, 0,
	0, 0, 3515, 0, 0, 0, 0, 0, 0, 0,
	0, 1071, 0, 0, 0, 0, 229, 0, 1253, 1138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1071, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 1138, 0,
	0, 0, 0, 0, 0, 1545, 1546, 0, 1138, 1138,
	875, 0, 0, 875, 875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1067, 1138, 0, 1576, 0, 0,
	0, 0, 0, 0, 1548, 0, 0, 0, 0, 1067,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1547, 0, 229, 0, 2157, 1709,
	0, 0, 0, 0, 1567, 0, 0, 0, 0, 0,
	0, 0, 1564, 0, 894, 229, 0, 0, 0, 0,
	3593, 0, 0, 1615, 0, 0, 0, 1615, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1071, 0, 0, 0, 0,
	0, 227, 0, 0, 1071, 0, 2663, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1570, 1571, 1572, 1573,
	0, 0, 0, 227, 227, 227, 1553, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 1054,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1710, 0, 0, 0, 0,
	0, 0, 0, 0, 1575, 1577, 0, 875, 0, 0,
	0, 0, 0, 0, 0, 0, 3699, 1237, 0, 0,
	0, 0, 0, 0, 0, 0, 647, 100, 1562, 1563,
	0, 0, 0, 0, 227, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1136, 0, 0, 0, 1568, 0, 0, 0, 0,
	0, 0, 1067, 0, 0, 0, 0, 1071, 0, 1071,
	0, 1071, 0, 0, 0, 0, 0, 0, 0, 1253,
	0, 0, 0, 227, 227, 0, 1071, 1071, 0, 0,
	0, 0, 0, 0, 0, 0, 1071, 0, 0, 0,
	1136, 0, 0, 0, 0, 0, 0, 0, 227, 1071,
	1071, 1071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 100, 0, 0, 0, 0, 0,
	3767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1574, 0, 0,
	0, 1135, 0, 100, 227, 1135, 227, 0, 1252, 0,
	0, 0, 0, 0, 0, 0, 0, 1569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	100, 0, 100, 0, 0, 0, 0, 0, 0, 227,
	1252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1252, 0, 1764, 1764, 1071, 0,
	3834, 100, 0, 0, 100, 0, 0, 0, 0, 0,
	0, 0, 0, 1253, 0, 0, 0, 3846, 0, 0,
	0, 0, 1136, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 100, 1252, 0, 0, 0, 0,
	0, 1252, 0, 0, 0, 1252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1252,
	0, 0, 0, 0, 0, 0, 0, 1565, 1561, 0,
	1558, 1556, 1557, 1549, 1550, 1551, 1552, 1554, 1555, 0,
	0, 0, 0, 0, 0, 1071, 0, 0, 0, 0,
	0, 0, 0, 0, 100, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1067, 1067, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1071, 0, 1545,
	1546, 0, 0, 0, 1071, 1253, 0, 1253, 0, 1253,
	0, 0, 0, 1071, 0, 0, 0, 0, 0, 0,
	0, 1576, 0, 0, 1253, 1253, 0, 0, 1548, 0,
	0, 1071, 0, 0, 1253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1253, 1253, 1253,
	0, 2157, 0, 0, 0, 0, 0, 0, 1547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1567, 0,
	0, 0, 1615, 0, 0, 0, 1564, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1071, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2656, 0, 227, 0, 0, 0, 1071, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 227,
	1570, 1571, 1572, 1573, 0, 0, 227, 0, 0, 0,
	1553, 0, 0, 1764, 0, 0, 1136, 0, 1545, 1546,
	0, 1578, 1579, 1580, 1588, 1589, 1590, 1067, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1071, 1581,
	1576, 0, 0, 0, 0, 0, 0, 1548, 1575, 1577,
	1071, 0, 0, 0, 1594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 1054, 1562, 1563, 0, 0, 0, 1547, 0, 0,
	0, 0, 0, 0, 0, 0, 1054, 1567, 0, 1135,
	0, 0, 0, 0, 0, 1564, 0, 0, 0, 1568,
	639, 0, 0, 1136, 0, 639, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1071, 1071, 0, 1071, 0, 0, 0, 0, 1135, 0,
	0, 0, 0, 0, 0, 1071, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1570,
	1571, 1572, 1573, 0, 0, 0, 0, 0, 0, 1553,
	0, 0, 1136, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1574, 0, 100, 100, 0, 1067, 100, 1585, 1136,
	0, 1595, 0, 0, 1067, 0, 0, 1575, 1577, 0,
	0, 1569, 0, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 1591, 0, 1592, 100, 100, 0, 0, 100,
	0, 1562, 1563, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1583, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1568, 0,
	0, 0, 227, 0, 1253, 0, 0, 0, 0, 0,
	0, 1252, 0, 227, 227, 0, 0, 0, 0, 0,
	1135, 0, 0, 1593, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 1136, 0, 0, 0, 0, 1054,
	1582, 0, 894, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	100, 1565, 1561, 0, 1558, 1556, 1557, 1549, 1550, 1551,
	1552, 1554, 1555, 0, 0, 0, 1136, 0, 0, 0,
	1574, 0, 0, 0, 0, 0, 0, 0, 1253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1586, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1252, 0, 1252, 0, 1252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1252, 1252, 0, 0, 0, 0, 1253, 1253,
	0, 1253, 1252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1253, 0, 1252, 1252, 1252, 227, 1071,
	1071, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1071, 639, 0, 0, 0, 0,
	0, 0, 1584, 0, 0, 0, 1559, 1560, 1566, 1587,
	1565, 1561, 1071, 1558, 1556, 1557, 1549, 1550, 1551, 1552,
	1554, 1555, 0, 0, 1071, 0, 0, 1071, 0, 0,
	2723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 1071, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	0, 0, 1764, 0, 1135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 227, 0, 1054, 1054, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1071,
	0, 0, 0, 0, 0, 0, 0, 0, 1071, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1071, 0, 0, 0, 0, 0, 1071, 0, 0, 0,
	0, 1135, 0, 0, 0, 0, 0, 0, 0, 227,
	1545, 1546, 1071, 1578, 1579, 1580, 1588, 1589, 1590, 0,
	0, 0, 0, 1071, 0, 0, 0, 0, 0, 0,
	0, 1581, 1576, 0, 0, 0, 0, 1071, 227, 1548,
	0, 0, 0, 0, 0, 0, 1594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1547,
	1135, 0, 0, 0, 0, 1071, 1071, 0, 0, 1567,
	0, 0, 0, 0, 0, 0, 0, 1564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 1136, 0,
	0, 0, 0, 0, 1054, 0, 0, 1071, 227, 0,
	1071, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	1136, 1570, 1571, 1572, 1573, 0, 0, 0, 0, 100,
	0, 1553, 1252, 0, 0, 1136, 1545, 1546, 0, 1578,
	1579, 1580, 1588, 1589, 1590, 0, 0, 0, 0, 0,
	0, 0, 0, 1136, 1764, 0, 0, 1581, 1576, 0,
	1585, 0, 1135, 1595, 0, 1548, 0, 0, 0, 1575,
	1577, 1071, 1594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1591, 0, 1592, 0, 1071, 0,
	0, 0, 0, 1562, 1563, 1547, 0, 0, 1764, 1764,
	0, 0, 0, 0, 0, 1567, 0, 0, 0, 1583,
	0, 0, 0, 1564, 1135, 0, 0, 0, 0, 0,
	1568, 0, 0, 0, 0, 0, 1252, 1764, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1593, 0, 1136, 0, 0,
	0, 0, 0, 0, 0, 0, 1253, 100, 1764, 0,
	0, 0, 1582, 1054, 0, 0, 0, 0, 1253, 0,
	0, 1054, 0, 0, 1136, 0, 0, 1570, 1571, 1572,
	1573, 0, 0, 0, 0, 1071, 1071, 1553, 0, 0,
	1253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1253, 0, 0, 0, 0, 1252, 1252, 0, 1252,
	0, 0, 1574, 0, 0, 0, 1585, 0, 1071, 1595,
	0, 1252, 0, 0, 0, 1575, 1577, 0, 0, 0,
	0, 0, 1569, 0, 0, 0, 0, 0, 0, 0,
	1591, 0, 1592, 0, 0, 0, 0, 0, 0, 1562,
	1563, 0, 0, 1253, 1253, 0, 1586, 0, 0, 0,
	0, 0, 0, 0, 0, 1583, 0, 0, 0, 100,
	0, 0, 0, 0, 0, 0, 1568, 0, 0, 100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	0, 1593, 0, 0, 0, 1136, 0, 0, 1136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1071, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1764, 0, 1584, 0, 0, 0, 1559, 1560,
	1566, 1587, 1565, 1561, 0, 1558, 1556, 1557, 1549, 1550,
	1551, 1552, 1554, 1555, 0, 0, 0, 1071, 1574, 0,
	0, 0, 2720, 0, 0, 0, 0, 0, 0, 1136,
	0, 0, 1071, 0, 0, 0, 0, 0, 1569, 0,
	0, 0, 0, 0, 0, 0, 1136, 0, 0, 1071,
	1071, 1071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1586, 0, 0, 1071, 0, 0, 0, 0,
	0, 1071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1071, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1764, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1584, 0, 0, 0, 1559, 1560, 1566, 1587, 1565, 1561,
	0, 1558, 1556, 1557, 1549, 1550, 1551, 1552, 1554, 1555,
	0, 0, 2157, 0, 0, 0, 1136, 0, 2719, 0,
	0, 0, 0, 0, 0, 0, 1135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1071, 0, 0, 0, 0, 0, 0, 0, 1071,
	0, 0, 0, 1071, 0, 1071, 0, 0, 1135, 0,
	0, 0, 1071, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1071, 1135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1071, 0, 0,
	0, 100, 1071, 0, 0, 0, 0, 0, 1253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1071, 1071,
	0, 0, 0, 0, 0, 0, 1545, 1546, 0, 1578,
	1579, 1580, 1588, 1589, 1590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1071, 1253, 0, 1581, 1576, 1071,
	0, 0, 0, 0, 0, 1548, 0, 0, 0, 0,
	0, 0, 1594, 0, 0, 1135, 0, 0, 0, 0,
	0, 0, 0, 0, 1252, 0, 0, 1253, 1253, 1253,
	0, 0, 0, 0, 0, 1547, 1252, 0, 0, 0,
	1071, 0, 1135, 1253, 0, 1567, 0, 639, 0, 1136,
	0, 0, 0, 1564, 0, 0, 0, 0, 1252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1252,
	1071, 1136, 0, 0, 0, 100, 0, 0, 100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1071, 0, 0, 0, 0, 0, 1570, 1571, 1572,
	1573, 1252, 1252, 0, 1071, 0, 0, 1553, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1764,
	0, 0, 0, 0, 0, 0, 1585, 0, 0, 1595,
	0, 0, 0, 0, 0, 1575, 1577, 0, 0, 0,
	0, 0, 1071, 1135, 0, 0, 1135, 0, 0, 0,
	1591, 0, 1592, 0, 0, 0, 0, 0, 0, 1562,
	1563, 1136, 0, 1136, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1583, 0, 0, 0, 0,
	1136, 0, 0, 0, 0, 0, 1568, 1071, 0, 0,
	1071, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 0, 0, 1135, 0, 0,
	0, 0, 0, 0, 0, 1136, 0, 0, 1582, 0,
	1136, 0, 0, 0, 1135, 0, 0, 0, 0, 1764,
	0, 0, 0, 0, 0, 0, 1253, 1253, 0, 0,
	0, 0, 0, 0, 1545, 1546, 0, 1578, 1579, 1580,
	1588, 1589, 1590, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1136, 0, 0, 1581, 1576, 1253, 1574, 0,
	0, 0, 0, 1548, 0, 0, 0, 0, 0, 0,
	1594, 0, 0, 0, 0, 0, 0, 0, 1569, 0,
	0, 0, 0, 0, 0, 0, 0, 1071, 0, 0,
	0, 0, 0, 1547, 0, 0, 0, 0, 1136, 0,
	0, 0, 1586, 1567, 0, 0, 0, 0, 0, 0,
	0, 1564, 0, 0, 0, 0, 1071, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1071, 1071, 1136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1071, 1135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1136,
	0, 0, 0, 0, 0, 1570, 1571, 1572, 1573, 0,
	0, 0, 1136, 0, 0, 1553, 0, 0, 0, 0,
	1584, 0, 0, 0, 1559, 1560, 1566, 1587, 1565, 1561,
	0, 1558, 1556, 1557, 1549, 1550, 1551, 1552, 1554, 1555,
	0, 0, 0, 0, 1585, 0, 0, 1595, 2718, 0,
	0, 0, 0, 1575, 1577, 0, 0, 0, 0, 0,
	1136, 0, 0, 0, 0, 0, 0, 0, 1591, 0,
	1592, 0, 0, 0, 0, 0, 0, 1562, 1563, 0,
	0, 0, 0, 0, 0, 0, 1252, 0, 0, 0,
	0, 0, 0, 1583, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1568, 1136, 0, 0, 1253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1252, 0, 0, 0, 0, 0, 1593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1582, 0, 0, 0,
	0, 0, 0, 0, 0, 1252, 1252, 1252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1252, 0, 0, 0, 0, 0, 1135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1574, 0, 0, 1135,
	0, 0, 0, 0, 0, 0, 0, 1545, 1546, 0,
	1578, 1579, 1580, 1588, 1589, 1590, 1569, 0, 0, 0,
	0, 0, 0, 0, 0, 1253, 0, 0, 1581, 1576,
	0, 0, 0, 0, 0, 0, 1548, 0, 0, 0,
	1586, 0, 0, 1594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1253, 1253, 1547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1567, 0, 0, 0,
	0, 1253, 0, 0, 1564, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1135,
	0, 1135, 0, 0, 0, 0, 0, 0, 1584, 0,
	0, 0, 1559, 1560, 1566, 1587, 1565, 1561, 1135, 1558,
	1556, 1557, 1549, 1550, 1551, 1552, 1554, 1555, 1570, 1571,
	1572, 1573, 0, 0, 0, 0, 2180, 0, 1553, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1135, 0, 0, 0, 1585, 1135, 0,
	1595, 0, 0, 0, 0, 0, 1575, 1577, 0, 0,
	0, 0, 0, 0, 1252, 1252, 0, 0, 0, 0,
	0, 1591, 0, 1592, 0, 0, 0, 0, 0, 0,
	1562, 1563, 0, 0, 0, 0, 0, 0, 0, 0,
	1135, 0, 0, 0, 0, 1252, 1583, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1593, 0, 0, 0, 1135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1574,
	0, 0, 0, 0, 0, 0, 0, 1135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1569,
	1135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1586, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1135, 0, 0, 1252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1584, 0, 0, 0, 1559, 1560, 1566, 1587, 1565,
	1561, 0, 1558, 1556, 1557, 1549, 1550, 1551, 1552, 1554,
	1555, 0, 0, 0, 0, 3803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1133, 0, 1252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1252, 1252, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 1139, 243, 244, 1140, 1141, 1142, 1252,
	1143, 506, 1144, 1145, 1146, 1147, 245, 246, 248, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 1148,
	253, 254, 255, 256, 257, 1149, 1150, 0, 258, 511,
	512, 513, 1151, 259, 260, 514, 1152, 1219, 1153, 261,
	262, 263, 264, 265, 266, 267, 0, 1154, 269, 270,
	271, 268, 1155, 272, 0, 273, 274, 275, 1156, 276,
	1012, 277, 278, 1157, 1158, 1160, 1159, 1161, 1162, 1163,
	279, 280, 281, 282, 0, 283, 515, 516, 1164, 287,
	284, 285, 1165, 288, 286, 1166, 289, 290, 1167, 1168,
	291, 292, 293, 1169, 294, 295, 1170, 296, 297, 1171,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 518, 519, 1172, 234, 1173, 0, 0,
	0, 0, 311, 312, 313, 520, 0, 0, 0, 314,
	1174, 315, 1175, 1176, 1013, 316, 317, 521, 522, 318,
	319, 1177, 320, 523, 1178, 524, 321, 1179, 322, 323,
	324, 325, 326, 525, 526, 527, 380, 1015, 327, 328,
	1180, 329, 330, 331, 332, 0, 0, 0, 235, 333,
	334, 336, 1181, 1014, 335, 528, 529, 1182, 530, 1183,
	337, 1016, 531, 1017, 338, 339, 340, 1018, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 1184, 348, 347,
	1185, 349, 532, 1019, 350, 351, 1020, 1186, 352, 353,
	354, 1187, 1188, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 1021, 371, 372, 373, 376, 377, 375, 1022, 374,
	1189, 236, 1023, 378, 1190, 533, 379, 534, 381, 382,
	1191, 0, 383, 0, 1192, 1193, 385, 386, 387, 1194,
	1195, 388, 389, 535, 1024, 390, 1025, 536, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 1196, 400,
	401, 537, 538, 539, 402, 540, 403, 404, 1197, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 541, 414,
	413, 415, 1198, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 1199, 425,
	426, 427, 1026, 428, 429, 430, 431, 542, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	1200, 447, 448, 446, 449, 450, 451, 1201, 452, 436,
	437, 453, 454, 1027, 455, 456, 543, 0, 457, 1202,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 545, 1203, 469, 470, 0, 468, 1204, 471,
	472, 473, 474, 475, 476, 305, 477, 1205, 478, 546,
	547, 548, 549, 1206, 485, 1207, 479, 480, 550, 481,
	551, 1208, 482, 483, 484, 0, 486, 487, 1209, 1210,
	488, 489, 490, 492, 493, 491, 494, 1211, 495, 1212,
	0, 496, 497, 498, 552, 553, 554, 1213, 500, 499,
	555, 1214, 1215, 1216, 1217, 501, 502, 556, 503, 504,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1133, 0, 0, 0, 0, 0,
	0, 0, 2320, 0, 0, 0, 0, 0, 0, 0,
	2321, 237, 238, 239, 240, 241, 242, 1139, 243, 244,
	1140, 1141, 1142, 0, 1143, 506, 1144, 1145, 1146, 1147,
	245, 246, 248, 247, 249, 250, 251, 507, 508, 0,
	509, 252, 510, 1148, 253, 254, 255, 256, 257, 1149,
	1150, 0, 258, 511, 512, 513, 1151, 259, 260, 514,
	1152, 1219, 1153, 261, 262, 263, 264, 265, 266, 267,
	0, 1154, 269, 270, 271, 268, 1155, 272, 0, 273,
	274, 275, 1156, 276, 1012, 277, 278, 1157, 1158, 1160,
	1159, 1161, 1162, 1163, 279, 280, 281, 282, 0, 283,
	515, 516, 1164, 287, 284, 285, 1165, 288, 286, 1166,
	289, 290, 1167, 1168, 291, 292, 293, 1169, 294, 295,
	1170, 296, 297, 1171, 298, 299, 517, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 518, 519, 1172,
	234, 1173, 0, 0, 0, 0, 311, 312, 313, 520,
	0, 0, 0, 314, 1174, 315, 1175, 1176, 1013, 316,
	317, 521, 522, 318, 319, 1177, 320, 523, 1178, 524,
	321, 1179, 322, 323, 324, 325, 326, 525, 526, 527,
	380, 1015, 327, 328, 1180, 329, 330, 331, 332, 0,
	0, 0, 235, 333, 334, 336, 1181, 1014, 335, 528,
	529, 1182, 530, 1183, 337, 1016, 531, 1017, 338, 339,
	340, 1018, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 1184, 348, 347, 1185, 349, 532, 1019, 350, 351,
	1020, 1186, 352, 353, 354, 1187, 1188, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 1021, 371, 372, 373, 376,
	377, 375, 1022, 374, 1189, 236, 1023, 378, 1190, 533,
	379, 534, 381, 382, 1191, 0, 383, 0, 1192, 1193,
	385, 386, 387, 1194, 1195, 388, 389, 535, 1024, 390,
	1025, 536, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 1196, 400, 401, 537, 538, 539, 402, 540,
	403, 404, 1197, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 541, 414, 413, 415, 1198, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 1199, 425, 426, 427, 1026, 428, 429, 430,
	431, 542, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 1200, 447, 448, 446, 449, 450,
	451, 1201, 452, 436, 437, 453, 454, 1027, 455, 456,
	543, 0, 457, 1202, 458, 459, 460, 461, 438, 462,
	467, 544, 463, 464, 465, 466, 545, 1203, 469, 470,
	0, 468, 1204, 471, 472, 473, 474, 475, 476, 305,
	477, 1205, 478, 546, 547, 548, 549, 1206, 485, 1207,
	479, 480, 550, 481, 551, 1208, 482, 483, 484, 0,
	486, 487, 1209, 1210, 488, 489, 490, 492, 493, 491,
	494, 1211, 495, 1212, 0, 496, 497, 498, 552, 553,
	554, 1213, 500, 499, 555, 1214, 1215, 1216, 1217, 501,
	502, 556, 503, 504, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1133, 0, 0, 0,
	0, 3087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3089, 237, 238, 239, 240, 241, 242, 1139,
	243, 244, 1140, 1141, 1142, 0, 1143, 506, 1144, 1145,
	1146, 1147, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 1148, 253, 254, 255, 256,
	257, 1149, 1150, 0, 258, 511, 512, 513, 1151, 259,
	260, 514, 1152, 1219, 1153, 261, 262, 263, 264, 265,
	266, 267, 0, 1154, 269, 270, 271, 268, 1155, 272,
	0, 273, 274, 275, 1156, 276, 1012, 277, 278, 1157,
	1158, 1160, 1159, 1161, 1162, 1163, 279, 280, 281, 282,
	0, 283, 515, 516, 1164, 287, 284, 285, 1165, 288,
	286, 1166, 289, 290, 1167, 1168, 291, 292, 293, 1169,
	294, 295, 1170, 296, 297, 1171, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 1172, 234, 1173, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 1174, 315, 1175, 1176,
	1013, 316, 317, 521, 522, 318, 319, 1177, 320, 523,
	1178, 524, 321, 1179, 322, 323, 324, 325, 326, 525,
	526, 527, 380, 1015, 327, 328, 1180, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 1181, 1014,
	335, 528, 529, 1182, 530, 1183, 337, 1016, 531, 1017,
	338, 339, 340, 1018, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 1184, 348, 347, 1185, 349, 532, 1019,
	350, 351, 1020, 1186, 352, 353, 354, 1187, 1188, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 1021, 371, 372,
	373, 376, 377, 375, 1022, 374, 1189, 236, 1023, 378,
	1190, 533, 379, 534, 381, 382, 1191, 0, 383, 0,
	1192, 1193, 385, 386, 387, 1194, 1195, 388, 389, 535,
	1024, 390, 1025, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 1196, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 1197, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 1198, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 1199, 425, 426, 427, 1026, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 1200, 447, 448, 446,
	449, 450, 451, 1201, 452, 436, 437, 453, 454, 1027,
	455, 456, 543, 0, 457, 1202, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 1203,
	469, 470, 0, 468, 1204, 471, 472, 473, 474, 475,
	476, 305, 477, 1205, 478, 546, 547, 548, 549, 1206,
	485, 1207, 479, 480, 550, 481, 551, 1208, 482, 483,
	484, 0, 486, 487, 1209, 1210, 488, 489, 490, 492,
	493, 491, 494, 1211, 495, 1212, 0, 496, 497, 498,
	552, 553, 554, 1213, 500, 499, 555, 1214, 1215, 1216,
	1217, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	0, 0, 1133, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3405, 237,
	238, 239, 240, 241, 242, 1139, 243, 244, 1140, 1141,
	1142, 0, 1143, 506, 1144, 1145, 1146, 1147, 245, 246,
	248, 247, 249, 250, 251, 507, 508, 0, 509, 252,
	510, 1148, 253, 254, 255, 256, 257, 1149, 1150, 0,
	258, 511, 512, 513, 1151, 259, 260, 514, 1152, 1219,
	1153, 261, 262, 263, 264, 265, 266, 267, 0, 1154,
	269, 270, 271, 268, 1155, 272, 0, 273, 274, 275,
	1156, 276, 1012, 277, 278, 1157, 1158, 1160, 1159, 1161,
	1162, 1163, 279, 280, 281, 282, 0, 283, 515, 516,
	1164, 287, 284, 285, 1165, 288, 286, 1166, 289, 290,
	1167, 1168, 291, 292, 293, 1169, 294, 295, 1170, 296,
	297, 1171, 298, 299, 517, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 518, 519, 1172, 234, 1173,
	0, 0, 0, 0, 311, 312, 313, 520, 0, 0,
	0, 314, 1174, 315, 1175, 1176, 1013, 316, 317, 521,
	522, 318, 319, 1177, 320, 523, 1178, 524, 321, 1179,
	322, 323, 324, 325, 326, 525, 526, 527, 380, 1015,
	327, 328, 1180, 329, 330, 331, 332, 0, 0, 0,
	235, 333, 334, 336, 1181, 1014, 335, 528, 529, 1182,
	530, 1183, 337, 1016, 531, 1017, 338, 339, 340, 1018,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 1184,
	348, 347, 1185, 349, 532, 1019, 350, 351, 1020, 1186,
	352, 353, 354, 1187, 1188, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 1021, 371, 372, 373, 376, 377, 375,
	1022, 374, 1189, 236, 1023, 378, 1190, 533, 379, 534,
	381, 382, 1191, 0, 383, 0, 1192, 1193, 385, 386,
	387, 1194, 1195, 388, 389, 535, 1024, 390, 1025, 536,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	1196, 400, 401, 537, 538, 539, 402, 540, 403, 404,
	1197, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	541, 414, 413, 415, 1198, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	1199, 425, 426, 427, 1026, 428, 429, 430, 431, 542,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 1200, 447, 448, 446, 449, 450, 451, 1201,
	452, 436, 437, 453, 454, 1027, 455, 456, 543, 0,
	457, 1202, 458, 459, 460, 461, 438, 462, 467, 544,
	463, 464, 465, 466, 545, 1203, 469, 470, 0, 468,
	1204, 471, 472, 473, 474, 475, 476, 305, 477, 1205,
	478, 546, 547, 548, 549, 1206, 485, 1207, 479, 480,
	550, 481, 551, 1208, 482, 483, 484, 0, 486, 487,
	1209, 1210, 488, 489, 490, 492, 493, 491, 494, 1211,
	495, 1212, 0, 496, 497, 498, 552, 553, 554, 1213,
	500, 499, 555, 1214, 1215, 1216, 1217, 501, 502, 556,
	503, 504, 505, 1133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3559,
	237, 238, 239, 240, 241, 242, 1139, 243, 244, 1140,
	1141, 1142, 0, 1143, 506, 1144, 1145, 1146, 1147, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 1148, 253, 254, 255, 256, 257, 1149, 1150,
	0, 258, 511, 512, 513, 1151, 259, 260, 514, 1152,
	1219, 1153, 261, 262, 263, 264, 265, 266, 267, 0,
	1154, 269, 270, 271, 268, 1155, 272, 0, 273, 274,
	275, 1156, 276, 1012, 277, 278, 1157, 1158, 1160, 1159,
	1161, 1162, 1163, 279, 280, 281, 282, 0, 283, 515,
	516, 1164, 287, 284, 285, 1165, 288, 286, 1166, 289,
	290, 1167, 1168, 291, 292, 293, 1169, 294, 295, 1170,
	296, 297, 1171, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 518, 519, 1172, 234,
	1173, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 1174, 315, 1175, 1176, 1013, 316, 317,
	521, 522, 318, 319, 1177, 320, 523, 1178, 524, 321,
	1179, 322, 323, 324, 325, 326, 525, 526, 527, 380,
	1015, 327, 328, 1180, 329, 330, 331, 332, 0, 0,
	0, 235, 333, 334, 336, 1181, 1014, 335, 528, 529,
	1182, 530, 1183, 337, 1016, 531, 1017, 338, 339, 340,
	1018, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	1184, 348, 347, 1185, 349, 532, 1019, 350, 351, 1020,
	1186, 352, 353, 354, 1187, 1188, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 1021, 371, 372, 373, 376, 377,
	375, 1022, 374, 1189, 236, 1023, 378, 1190, 533, 379,
	534, 381, 382, 1191, 0, 383, 0, 1192, 1193, 385,
	386, 387, 1194, 1195, 388, 389, 535, 1024, 390, 1025,
	536, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 1196, 400, 401, 537, 538, 539, 402, 540, 403,
	404, 1197, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 414, 413, 415, 1198, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 1199, 425, 426, 427, 1026, 428, 429, 430, 431,
	542, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 1200, 447, 448, 446, 449, 450, 451,
	1201, 452, 436, 437, 453, 454, 1027, 455, 456, 543,
	0, 457, 1202, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 545, 1203, 469, 470, 0,
	468, 1204, 471, 472, 473, 474, 475, 476, 305, 477,
	1205, 478, 546, 547, 548, 549, 1206, 485, 1207, 479,
	480, 550, 481, 551, 1208, 482, 483, 484, 0, 486,
	487, 1209, 1210, 488, 489, 490, 492, 493, 491, 494,
	1211, 495, 1212, 0, 496, 497, 498, 552, 553, 554,
	1213, 500, 499, 555, 1214, 1215, 1216, 1217, 501, 502,
	556, 503, 504, 505, 1133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3461, 237, 238, 239, 240, 241, 242, 1139, 243, 244,
	1140, 1141, 1142, 0, 1143, 506, 1144, 1145, 1146, 1147,
	245, 246, 248, 247, 249, 250, 251, 507, 508, 0,
	509, 252, 510, 1148, 253, 254, 255, 256, 257, 1149,
	1150, 0, 258, 511, 512, 513, 1151, 259, 260, 514,
	1152, 1219, 1153, 261, 262, 263, 264, 265, 266, 267,
	0, 1154, 269, 270, 271, 268, 1155, 272, 0, 273,
	274, 275, 1156, 276, 1012, 277, 278, 1157, 1158, 1160,
	1159, 1161, 1162, 1163, 279, 280, 281, 282, 0, 283,
	515, 516, 1164, 287, 284, 285, 1165, 288, 286, 1166,
	289, 290, 1167, 1168, 291, 292, 293, 1169, 294, 295,
	1170, 296, 297, 1171, 298, 299, 517, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 518, 519, 1172,
	234, 1173, 0, 0, 0, 0, 311, 312, 313, 520,
	0, 0, 0, 314, 1174, 315, 1175, 1176, 1013, 316,
	317, 521, 522, 318, 319, 1177, 320, 523, 1178, 524,
	321, 1179, 322, 323, 324, 325, 326, 525, 526, 527,
	380, 1015, 327, 328, 1180, 329, 330, 331, 332, 0,
	0, 0, 235, 333, 334, 336, 1181, 1014, 335, 528,
	529, 1182, 530, 1183, 337, 1016, 531, 1017, 338, 339,
	340, 1018, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 1184, 348, 347, 1185, 349, 532, 1019, 350, 351,
	1020, 1186, 352, 353, 354, 1187, 1188, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 1021, 371, 372, 373, 376,
	377, 375, 1022, 374, 1189, 236, 1023, 378, 1190, 533,
	379, 534, 381, 382, 1191, 0, 383, 0, 1192, 1193,
	385, 386, 387, 1194, 1195, 388, 389, 535, 1024, 390,
	1025, 536, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 1196, 400, 401, 537, 538, 539, 402, 540,
	403, 404, 1197, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 541, 414, 413, 415, 1198, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 1199, 425, 426, 427, 1026, 428, 429, 430,
	431, 542, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 1200, 447, 448, 446, 449, 450,
	451, 1201, 452, 436, 437, 453, 454, 1027, 455, 456,
	543, 0, 457, 1202, 458, 459, 460, 461, 438, 462,
	467, 544, 463, 464, 465, 466, 545, 1203, 469, 470,
	0, 468, 1204, 471, 472, 473, 474, 475, 476, 305,
	477, 1205, 478, 546, 547, 548, 549, 1206, 485, 1207,
	479, 480, 550, 481, 551, 1208, 482, 483, 484, 0,
	486, 487, 1209, 1210, 488, 489, 490, 492, 493, 491,
	494, 1211, 495, 1212, 0, 496, 497, 498, 552, 553,
	554, 1213, 500, 499, 555, 1214, 1215, 1216, 1217, 501,
	502, 556, 503, 504, 505, 1133, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3335, 237, 238, 239, 240, 241, 242, 1139, 243,
	244, 1140, 1141, 1142, 0, 1143, 506, 1144, 1145, 1146,
	1147, 245, 246, 248, 247, 249, 250, 251, 507, 508,
	0, 509, 252, 510, 1148, 253, 254, 255, 256, 257,
	1149, 1150, 0, 258, 511, 512, 513, 1151, 259, 260,
	514, 1152, 1219, 1153, 261, 262, 263, 264, 265, 266,
	267, 0, 1154, 269, 270, 271, 268, 1155, 272, 0,
	273, 274, 275, 1156, 276, 1012, 277, 278, 1157, 1158,
	1160, 1159, 1161, 1162, 1163, 279, 280, 281, 282, 0,
	283, 515, 516, 1164, 287, 284, 285, 1165, 288, 286,
	1166, 289, 290, 1167, 1168, 291, 292, 293, 1169, 294,
	295, 1170, 296, 297, 1171, 298, 299, 517, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 518, 519,
	1172, 234, 1173, 0, 0, 0, 0, 311, 312, 313,
	520, 0, 0, 0, 314, 1174, 315, 1175, 1176, 1013,
	316, 317, 521, 522, 318, 319, 1177, 320, 523, 1178,
	524, 321, 1179, 322, 323, 324, 325, 326, 525, 526,
	527, 380, 1015, 327, 328, 1180, 329, 330, 331, 332,
	0, 0, 0, 235, 333, 334, 336, 1181, 1014, 335,
	528, 529, 1182, 530, 1183, 337, 1016, 531, 1017, 338,
	339, 340, 1018, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 1184, 348, 347, 1185, 349, 532, 1019, 350,
	351, 1020, 1186, 352, 353, 354, 1187, 1188, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 1021, 371, 372, 373,
	376, 377, 375, 1022, 374, 1189, 236, 1023, 378, 1190,
	533, 379, 534, 381, 382, 1191, 0, 383, 0, 1192,
	1193, 385, 386, 387, 1194, 1195, 388, 389, 535, 1024,
	390, 1025, 536, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 1196, 400, 401, 537, 538, 539, 402,
	540, 403, 404, 1197, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 541, 414, 413, 415, 1198, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 1199, 425, 426, 427, 1026, 428, 429,
	430, 431, 542, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 1200, 447, 448, 446, 449,
	450, 451, 1201, 452, 436, 437, 453, 454, 1027, 455,
	456, 543, 0, 457, 1202, 458, 459, 460, 461, 438,
	462, 467, 544, 463, 464, 465, 466, 545, 1203, 469,
	470, 0, 468, 1204, 471, 472, 473, 474, 475, 476,
	305, 477, 1205, 478, 546, 547, 548, 549, 1206, 485,
	1207, 479, 480, 550, 481, 551, 1208, 482, 483, 484,
	0, 486, 487, 1209, 1210, 488, 489, 490, 492, 493,
	491, 494, 1211, 495, 1212, 0, 496, 497, 498, 552,
	553, 554, 1213, 500, 499, 555, 1214, 1215, 1216, 1217,
	501, 502, 556, 503, 504, 505, 1133, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3105, 237, 238, 239, 240, 241, 242, 1139,
	243, 244, 1140, 1141, 1142, 0, 1143, 506, 1144, 1145,
	1146, 1147, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 1148, 253, 254, 255, 256,
	257, 1149, 1150, 0, 258, 511, 512, 513, 1151, 259,
	260, 514, 1152, 1219, 1153, 261, 262, 263, 264, 265,
	266, 267, 0, 1154, 269, 270, 271, 268, 1155, 272,
	0, 273, 274, 275, 1156, 276, 1012, 277, 278, 1157,
	1158, 1160, 1159, 1161, 1162, 1163, 279, 280, 281, 282,
	0, 283, 515, 516, 1164, 287, 284, 285, 1165, 288,
	286, 1166, 289, 290, 1167, 1168, 291, 292, 293, 1169,
	294, 295, 1170, 296, 297, 1171, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 1172, 234, 1173, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 1174, 315, 1175, 1176,
	1013, 316, 317, 521, 522, 318, 319, 1177, 320, 523,
	1178, 524, 321, 1179, 322, 323, 324, 325, 326, 525,
	526, 527, 380, 1015, 327, 328, 1180, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 1181, 1014,
	335, 528, 529, 1182, 530, 1183, 337, 1016, 531, 1017,
	338, 339, 340, 1018, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 1184, 348, 347, 1185, 349, 532, 1019,
	350, 351, 1020, 1186, 352, 353, 354, 1187, 1188, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 1021, 371, 372,
	373, 376, 377, 375, 1022, 374, 1189, 236, 1023, 378,
	1190, 533, 379, 534, 381, 382, 1191, 0, 383, 0,
	1192, 1193, 385, 386, 387, 1194, 1195, 388, 389, 535,
	1024, 390, 1025, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 1196, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 1197, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 1198, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 1199, 425, 426, 427, 1026, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 1200, 447, 448, 446,
	449, 450, 451, 1201, 452, 436, 437, 453, 454, 1027,
	455, 456, 543, 0, 457, 1202, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 1203,
	469, 470, 0, 468, 1204, 471, 472, 473, 474, 475,
	476, 305, 477, 1205, 478, 546, 547, 548, 549, 1206,
	485, 1207, 479, 480, 550, 481, 551, 1208, 482, 483,
	484, 0, 486, 487, 1209, 1210, 488, 489, 490, 492,
	493, 491, 494, 1211, 495, 1212, 0, 496, 497, 498,
	552, 553, 554, 1213, 500, 499, 555, 1214, 1215, 1216,
	1217, 501, 502, 556, 503, 504, 505, 1133, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2953, 237, 238, 239, 240, 241, 242,
	1139, 243, 244, 1140, 1141, 1142, 0, 1143, 506, 1144,
	1145, 1146, 1147, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 1148, 253, 254, 255,
	256, 257, 1149, 1150, 0, 258, 511, 512, 513, 1151,
	259, 260, 514, 1152, 1219, 1153, 261, 262, 263, 264,
	265, 266, 267, 0, 1154, 269, 270, 271, 268, 1155,
	272, 0, 273, 274, 275, 1156, 276, 1012, 277, 278,
	1157, 1158, 1160, 1159, 1161, 1162, 1163, 279, 280, 281,
	282, 0, 283, 515, 516, 1164, 287, 284, 285, 1165,
	288, 286, 1166, 289, 290, 1167, 1168, 291, 292, 293,
	1169, 294, 295, 1170, 296, 297, 1171, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	518, 519, 1172, 234, 1173, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 1174, 315, 1175,
	1176, 1013, 316, 317, 521, 522, 318, 319, 1177, 320,
	523, 1178, 524, 321, 1179, 322, 323, 324, 325, 326,
	525, 526, 527, 380, 1015, 327, 328, 1180, 329, 330,
	331, 332, 0, 0, 0, 235, 333, 334, 336, 1181,
	1014, 335, 528, 529, 1182, 530, 1183, 337, 1016, 531,
	1017, 338, 339, 340, 1018, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 1184, 348, 347, 1185, 349, 532,
	1019, 350, 351, 1020, 1186, 352, 353, 354, 1187, 1188,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 1021, 371,
	372, 373, 376, 377, 375, 1022, 374, 1189, 236, 1023,
	378, 1190, 533, 379, 534, 381, 382, 1191, 0, 383,
	0, 1192, 1193, 385, 386, 387, 1194, 1195, 388, 389,
	535, 1024, 390, 1025, 536, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 1196, 400, 401, 537, 538,
	539, 402, 540, 403, 404, 1197, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 541, 414, 413, 415, 1198,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 1199, 425, 426, 427, 1026,
	428, 429, 430, 431, 542, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 1200, 447, 448,
	446, 449, 450, 451, 1201, 452, 436, 437, 453, 454,
	1027, 455, 456, 543, 0, 457, 1202, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 545,
	1203, 469, 470, 0, 468, 1204, 471, 472, 473, 474,
	475, 476, 305, 477, 1205, 478, 546, 547, 548, 549,
	1206, 485, 1207, 479, 480, 550, 481, 551, 1208, 482,
	483, 484, 0, 486, 487, 1209, 1210, 488, 489, 490,
	492, 493, 491, 494, 1211, 495, 1212, 0, 496, 497,
	498, 552, 553, 554, 1213, 500, 499, 555, 1214, 1215,
	1216, 1217, 501, 502, 556, 503, 504, 505, 1133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2203, 237, 238, 239, 240, 241,
	242, 1139, 243, 244, 1140, 1141, 1142, 0, 1143, 506,
	1144, 1145, 1146, 1147, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 1148, 253, 254,
	255, 256, 257, 1149, 1150, 0, 258, 511, 512, 513,
	1151, 259, 260, 514, 1152, 1219, 1153, 261, 262, 263,
	264, 265, 266, 267, 0, 1154, 269, 270, 271, 268,
	1155, 272, 0, 273, 274, 275, 1156, 276, 1012, 277,
	278, 1157, 1158, 1160, 1159, 1161, 1162, 1163, 279, 280,
	281, 282, 0, 283, 515, 516, 1164, 287, 284, 285,
	1165, 288, 286, 1166, 289, 290, 1167, 1168, 291, 292,
	293, 1169, 294, 295, 1170, 296, 297, 1171, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 1172, 234, 1173, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 1174, 315,
	1175, 1176, 1013, 316, 317, 521, 522, 318, 319, 1177,
	320, 523, 1178, 524, 321, 1179, 322, 323, 324, 325,
	326, 525, 526, 527, 380, 1015, 327, 328, 1180, 329,
	330, 331, 332, 0, 0, 0, 235, 333, 334, 336,
	1181, 1014, 335, 528, 529, 1182, 530, 1183, 337, 1016,
	531, 1017, 338, 339, 340, 1018, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 1184, 348, 347, 1185, 349,
	532, 1019, 350, 351, 1020, 1186, 352, 353, 354, 1187,
	1188, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 1021,
	371, 372, 373, 376, 377, 375, 1022, 374, 1189, 236,
	1023, 378, 1190, 533, 379, 534, 381, 382, 1191, 0,
	383, 0, 1192, 1193, 385, 386, 387, 1194, 1195, 388,
	389, 535, 1024, 390, 1025, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 1196, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 1197, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	1198, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 1199, 425, 426, 427,
	1026, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 1200, 447,
	448, 446, 449, 450, 451, 1201, 452, 436, 437, 453,
	454, 1027, 455, 456, 543, 0, 457, 1202, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 1203, 469, 470, 0, 468, 1204, 471, 472, 473,
	474, 475, 476, 305, 477, 1205, 478, 546, 547, 548,
	549, 1206, 485, 1207, 479, 480, 550, 481, 551, 1208,
	482, 483, 484, 0, 486, 487, 1209, 1210, 488, 489,
	490, 492, 493, 491, 494, 1211, 495, 1212, 0, 496,
	497, 498, 552, 553, 554, 1213, 500, 499, 555, 1214,
	1215, 1216, 1217, 501, 502, 556, 503, 504, 505, 1231,
	0, 1133, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1895, 0, 0, 237, 238,
	239, 240, 241, 242, 1139, 243, 244, 1140, 1141, 1142,
	0, 1143, 506, 1144, 1145, 1146, 1147, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	1148, 253, 254, 255, 256, 257, 1149, 1150, 0, 258,
	511, 512, 513, 1151, 259, 260, 514, 1152, 1219, 1153,
	261, 262, 263, 264, 265, 266, 267, 0, 1154, 269,
	270, 271, 268, 1155, 272, 0, 273, 274, 275, 1156,
	276, 1012, 277, 278, 1157, 1158, 1160, 1159, 1161, 1162,
	1163, 279, 280, 281, 282, 0, 283, 515, 516, 1164,
	287, 284, 285, 1165, 288, 286, 1166, 289, 290, 1167,
	1168, 291, 292, 293, 1169, 294, 295, 1170, 296, 297,
	1171, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 518, 519, 1172, 234, 1173, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 1174, 315, 1175, 1176, 1013, 316, 317, 521, 522,
	318, 319, 1177, 320, 523, 1178, 524, 321, 1179, 322,
	323, 324, 325, 326, 525, 526, 527, 380, 1015, 327,
	328, 1180, 329, 330, 331, 332, 0, 0, 0, 235,
	333, 334, 336, 1181, 1014, 335, 528, 529, 1182, 530,
	1183, 337, 1016, 531, 1017, 338, 339, 340, 1018, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 1184, 348,
	347, 1185, 349, 532, 1019, 350, 351, 1020, 1186, 352,
	353, 354, 1187, 1188, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 1021, 371, 372, 373, 376, 377, 375, 1022,
	374, 1189, 236, 1023, 378, 1190, 533, 379, 534, 381,
	382, 1191, 0, 383, 0, 1192, 1193, 385, 386, 387,
	1194, 1195, 388, 389, 535, 1024, 390, 1025, 536, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 1196,
	400, 401, 537, 538, 539, 402, 540, 403, 404, 1197,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 1198, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 1199,
	425, 426, 427, 1026, 428, 429, 430, 431, 542, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 1200, 447, 448, 446, 449, 450, 451, 1201, 452,
	436, 437, 453, 454, 1027, 455, 456, 543, 0, 457,
	1202, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 545, 1203, 469, 470, 0, 468, 1204,
	471, 472, 473, 474, 475, 476, 305, 477, 1205, 478,
	546, 547, 548, 549, 1206, 485, 1207, 479, 480, 550,
	481, 551, 1208, 482, 483, 484, 0, 486, 487, 1209,
	1210, 488, 489, 490, 492, 493, 491, 494, 1211, 495,
	1212, 0, 496, 497, 498, 552, 553, 554, 1213, 500,
	499, 555, 1214, 1215, 1216, 1217, 501, 502, 556, 503,
	504, 505, 1130, 0, 1133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 1139, 243, 244,
	1140, 1141, 1142, 0, 1143, 506, 1144, 1145, 1146, 1147,
	245, 246, 248, 247, 249, 250, 251, 507, 508, 0,
	509, 252, 510, 1148, 253, 254, 255, 256, 257, 1149,
	1150, 0, 258, 511, 512, 513, 1151, 259, 260, 514,
	1152, 1219, 1153, 261, 262, 263, 264, 265, 266, 267,
	0, 1154, 269, 270, 271, 268, 1155, 272, 0, 273,
	274, 275, 1156, 276, 1012, 277, 278, 1157, 1158, 1160,
	1159, 1161, 1162, 1163, 279, 280, 281, 282, 0, 283,
	515, 516, 1164, 287, 284, 285, 1165, 288, 286, 1166,
	289, 290, 1167, 1168, 291, 292, 293, 1169, 294, 295,
	1170, 296, 297, 1171, 298, 299, 517, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 518, 519, 1172,
	234, 1173, 0, 0, 0, 0, 311, 312, 313, 520,
	0, 0, 0, 314, 1174, 315, 1175, 1176, 1013, 316,
	317, 521, 522, 318, 319, 1177, 320, 523, 1178, 524,
	321, 1179, 322, 323, 324, 325, 326, 525, 526, 527,
	380, 1015, 327, 328, 1180, 329, 330, 331, 332, 0,
	0, 0, 235, 333, 334, 336, 1181, 1014, 335, 528,
	529, 1182, 530, 1183, 337, 1016, 531, 1017, 338, 339,
	340, 1018, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 1184, 348, 347, 1185, 349, 532, 1019, 350, 351,
	1020, 1186, 352, 353, 354, 1187, 1188, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 1021, 371, 372, 373, 376,
	377, 375, 1022, 374, 1189, 236, 1023, 378, 1190, 533,
	379, 534, 381, 382, 1191, 0, 383, 0, 1192, 1193,
	385, 386, 387, 1194, 1195, 388, 389, 535, 1024, 390,
	1025, 536, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 1196, 400, 401, 537, 538, 539, 402, 540,
	403, 404, 1197, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 541, 414, 413, 415, 1198, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 1199, 425, 426, 427, 1026, 428, 429, 430,
	431, 542, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 1200, 447, 448, 446, 449, 450,
	451, 1201, 452, 436, 437, 453, 454, 1027, 455, 456,
	543, 0, 457, 1202, 458, 459, 460, 461, 438, 462,
	467, 544, 463, 464, 465, 466, 545, 1203, 469, 470,
	0, 468, 1204, 471, 472, 473, 474, 475, 476, 305,
	477, 1205, 478, 546, 547, 548, 549, 1206, 485, 1207,
	479, 480, 550, 481, 551, 1208, 482, 483, 484, 0,
	486, 487, 1209, 1210, 488, 489, 490, 492, 493, 491,
	494, 1211, 495, 1212, 0, 496, 497, 498, 552, 553,
	554, 1213, 500, 499, 555, 1214, 1215, 1216, 1217, 501,
	502, 556, 503, 504, 505, 1133, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 1139, 243,
	244, 1140, 1141, 1142, 0, 1143, 506, 1144, 1145, 1146,
	1147, 245, 246, 248, 247, 249, 250, 251, 507, 508,
	0, 509, 252, 510, 1148, 253, 254, 255, 256, 257,
	1149, 1150, 0, 258, 511, 512, 513, 1151, 259, 260,
	514, 1152, 1219, 1153, 261, 262, 263, 264, 265, 266,
	267, 0, 1154, 269, 270, 271, 268, 1155, 272, 0,
	273, 274, 275, 1156, 276, 1012, 277, 278, 1157, 1158,
	1160, 1159, 1161, 1162, 1163, 279, 280, 281, 282, 0,
	283, 515, 516, 1164, 287, 284, 285, 1165, 288, 286,
	1166, 289, 290, 1167, 1168, 291, 292, 293, 1169, 294,
	295, 1170, 296, 297, 1171, 298, 299, 517, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 518, 519,
	1172, 234, 1173, 0, 0, 0, 0, 311, 312, 313,
	520, 0, 0, 0, 314, 1174, 315, 1175, 1176, 1013,
	316, 317, 521, 522, 318, 319, 1177, 320, 523, 1178,
	524, 321, 1179, 322, 323, 324, 325, 326, 525, 526,
	527, 380, 1015, 327, 328, 1180, 329, 330, 331, 332,
	0, 0, 0, 235, 333, 334, 336, 1181, 1014, 335,
	528, 529, 1182, 530, 1183, 337, 1016, 531, 1017, 338,
	339, 340, 1018, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 1184, 348, 347, 1185, 349, 532, 1019, 350,
	351, 1020, 1186, 352, 353, 354, 1187, 1188, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 1021, 371, 372, 373,
	376, 377, 375, 1022, 374, 1189, 236, 1023, 378, 1190,
	533, 379, 534, 381, 382, 1191, 0, 383, 0, 1192,
	1193, 385, 386, 387, 1194, 1195, 388, 389, 535, 1024,
	390, 1025, 536, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 1196, 400, 401, 537, 538, 539, 402,
	540, 403, 404, 1197, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 541, 414, 413, 415, 1198, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 1199, 425, 426, 427, 1026, 428, 429,
	430, 431, 542, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 1200, 447, 448, 446, 449,
	450, 451, 1201, 452, 436, 437, 453, 454, 1027, 455,
	456, 543, 0, 457, 1202, 458, 459, 460, 461, 438,
	462, 467, 544, 463, 464, 465, 466, 545, 1203, 469,
	470, 0, 468, 1204, 471, 472, 473, 474, 475, 476,
	305, 477, 1205, 478, 546, 547, 548, 549, 1206, 485,
	1207, 479, 480, 550, 481, 551, 1208, 482, 483, 484,
	0, 486, 487, 1209, 1210, 488, 489, 490, 492, 493,
	491, 494, 1211, 495, 1212, 0, 496, 497, 498, 552,
	553, 554, 1213, 500, 499, 555, 1214, 1215, 1216, 1217,
	501, 502, 556, 503, 504, 505, 2178, 0, 949, 921,
	922, 923, 919, 920, 932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 2175, 243, 244, 0, 0, 0, 0, 0, 973,
	937, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 986, 0, 993, 252, 992, 0, 253, 254,
	255, 256, 257, 939, 972, 906, 258, 1031, 1032, 513,
	0, 259, 260, 979, 0, 960, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 1012, 277,
	278, 963, 961, 962, 969, 965, 964, 968, 279, 280,
	281, 282, 996, 283, 990, 989, 910, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 2176, 0, 291, 981,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	916, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 1003, 1004, 928, 234, 0, 0, 0, 0, 0,
	311, 312, 313, 988, 0, 0, 0, 314, 0, 315,
	0, 0, 1013, 316, 317, 1001, 1002, 318, 319, 0,
	320, 1010, 0, 938, 321, 0, 322, 323, 324, 325,
	326, 974, 975, 978, 380, 1015, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 235, 333, 334, 336,
	0, 1014, 335, 983, 984, 0, 944, 0, 337, 1016,
	976, 1017, 338, 339, 340, 1018, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	1011, 1019, 350, 351, 1020, 0, 352, 353, 354, 967,
	966, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 1021,
	371, 372, 373, 376, 377, 375, 1022, 374, 907, 236,
	1023, 378, 929, 977, 379, 991, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 1024, 390, 1025, 1005, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 1006, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 987, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	1026, 428, 429, 430, 431, 917, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 970, 452, 436, 437, 453,
	454, 1027, 455, 456, 985, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 1030, 463, 464, 465, 466,
	1007, 0, 469, 470, 905, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 997, 998, 999,
	1000, 0, 485, 0, 479, 480, 1008, 481, 1009, 927,
	482, 483, 484, 0, 486, 487, 0, 911, 488, 489,
	490, 492, 493, 491, 494, 971, 495, 0, 0, 496,
	497, 498, 552, 994, 1029, 2174, 500, 499, 555, 0,
	0, 0, 0, 501, 502, 556, 503, 504, 505, 908,
	0, 0, 0, 0, 0, 0, 904, 0, 0, 0,
	0, 0, 0, 902, 903, 2177, 0, 0, 0, 0,
	0, 0, 933, 2173, 0, 895, 931, 949, 921, 922,
	923, 919, 920, 932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 973, 937,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 986, 0, 993, 252, 992, 0, 253, 254, 255,
	256, 257, 939, 972, 906, 258, 1031, 1032, 513, 0,
	259, 260, 979, 0, 960, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 1012, 277, 278,
	963, 961, 962, 969, 965, 964, 968, 279, 280, 281,
	282, 996, 283, 990, 989, 910, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 981, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 916,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	1003, 1004, 928, 234, 0, 0, 0, 0, 0, 311,
	312, 313, 988, 0, 0, 0, 314, 0, 315, 0,
	0, 1013, 316, 317, 1001, 1002, 318, 319, 0, 320,
	1010, 0, 938, 321, 0, 322, 323, 324, 325, 326,
	974, 975, 978, 380, 1015, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 235, 333, 334, 336, 0,
	1014, 335, 983, 984, 0, 944, 0, 337, 1016, 976,
	1017, 338, 339, 340, 1018, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 1011,
	1019, 350, 351, 1020, 0, 352, 353, 354, 967, 966,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 1021, 371,
	372, 373, 376, 377, 375, 1022, 374, 907, 236, 1023,
	378, 929, 977, 379, 991, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 1024, 390, 1025, 1005, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	1006, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 987, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 1026,
	428, 429, 430, 431, 917, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 199, 447, 448,
	446, 449, 450, 451, 970, 452, 436, 437, 453, 454,
	1027, 455, 456, 985, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 1030, 463, 464, 465, 466, 1007,
	0, 469, 470, 905, 468, 201, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 997, 998, 999, 1000,
	0, 485, 0, 479, 480, 1008, 481, 1009, 927, 482,
	483, 484, 0, 486, 487, 0, 911, 488, 489, 490,
	492, 493, 491, 494, 971, 495, 0, 0, 496, 497,
	498, 1394, 994, 1029, 0, 500, 499, 555, 0, 0,
	0, 193, 501, 502, 556, 503, 504, 505, 908, 194,
	0, 0, 0, 0, 0, 904, 0, 0, 0, 0,
	0, 0, 902, 903, 949, 921, 922, 923, 919, 920,
	932, 1620, 1618, 0, 0, 931, 0, 0, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	0, 0, 0, 0, 0, 973, 937, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 986, 0,
	993, 252, 992, 0, 253, 254, 255, 256, 257, 939,
	972, 906, 258, 1031, 1032, 513, 0, 259, 260, 979,
	0, 960, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 1012, 277, 278, 963, 961, 962,
	969, 965, 964, 968, 279, 280, 281, 282, 996, 283,
	990, 989, 910, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 981, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 916, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 1003, 1004, 928,
	234, 0, 0, 0, 0, 0, 311, 312, 313, 988,
	0, 0, 0, 314, 0, 315, 0, 0, 1013, 316,
	317, 1001, 1002, 318, 319, 0, 320, 1010, 0, 938,
	321, 0, 322, 323, 324, 325, 326, 974, 975, 978,
	380, 1015, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 235, 333, 334, 336, 0, 1014, 335, 983,
	984, 0, 944, 0, 337, 1016, 976, 1017, 338, 339,
	340, 1018, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 1011, 1019, 350, 351,
	1020, 0, 352, 353, 354, 967, 966, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 1021, 371, 372, 373, 376,
	377, 375, 1022, 374, 907, 236, 1023, 378, 929, 977,
	379, 991, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 1024, 390,
	1025, 1005, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 1006, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 987, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 1026, 428, 429, 430,
	431, 917, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 199, 447, 448, 446, 449, 450,
	451, 970, 452, 436, 437, 453, 454, 1027, 455, 456,
	985, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 1030, 463, 464, 465, 466, 1007, 0, 469, 470,
	905, 468, 201, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 997, 998, 999, 1000, 0, 485, 0,
	479, 480, 1008, 481, 1009, 927, 482, 483, 484, 0,
	486, 487, 0, 911, 488, 489, 490, 492, 493, 491,
	494, 971, 495, 0, 0, 496, 497, 498, 1394, 994,
	1029, 0, 500, 499, 555, 0, 0, 0, 193, 501,
	502, 556, 503, 504, 505, 908, 194, 0, 0, 0,
	0, 0, 904, 0, 0, 0, 0, 0, 0, 902,
	903, 949, 921, 922, 923, 919, 920, 932, 1620, 2676,
	0, 0, 931, 0, 0, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 0, 973, 937, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 986, 0, 993, 252, 992,
	0, 253, 254, 255, 256, 257, 939, 972, 906, 258,
	1031, 1032, 513, 0, 259, 260, 979, 0, 960, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 1012, 277, 278, 963, 961, 962, 969, 965, 964,
	968, 279, 280, 281, 282, 996, 283, 990, 989, 910,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 981, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 916, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 1003, 1004, 928, 234, 0, 0,
	0, 0, 0, 311, 312, 313, 988, 0, 0, 0,
	314, 0, 315, 0, 0, 1013, 316, 317, 1001, 1002,
	318, 319, 0, 320, 1010, 0, 938, 321, 0, 322,
	323, 324, 325, 326, 974, 975, 978, 380, 1015, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 235,
	333, 334, 336, 0, 1014, 335, 983, 984, 0, 944,
	0, 337, 1016, 976, 1017, 338, 339, 340, 1018, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 1011, 1019, 350, 351, 1020, 0, 352,
	353, 354, 967, 966, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 1021, 371, 372, 373, 376, 377, 375, 1022,
	374, 907, 236, 1023, 378, 929, 977, 379, 991, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 1024, 390, 1025, 1005, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 1006, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 987,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 1026, 428, 429, 430, 431, 917, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 199, 447, 448, 446, 449, 450, 451, 970, 452,
	436, 437, 453, 454, 1027, 455, 456, 985, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 1030, 463,
	464, 465, 466, 1007, 0, 469, 470, 905, 468, 201,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	997, 998, 999, 1000, 0, 485, 0, 479, 480, 1008,
	481, 1009, 927, 482, 483, 484, 0, 486, 487, 0,
	911, 488, 489, 490, 492, 493, 491, 494, 971, 495,
	0, 0, 496, 497, 498, 1394, 994, 1029, 0, 500,
	499, 555, 0, 0, 0, 193, 501, 502, 556, 503,
	504, 505, 908, 194, 0, 0, 0, 0, 0, 904,
	0, 0, 0, 0, 0, 0, 902, 903, 949, 921,
	922, 923, 919, 920, 932, 1620, 1618, 0, 0, 931,
	0, 0, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 973,
	937, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 986, 0, 993, 252, 992, 2282, 253, 254,
	255, 256, 257, 939, 972, 906, 258, 1031, 1032, 513,
	0, 259, 260, 979, 0, 960, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 1012, 277,
	278, 963, 961, 962, 969, 965, 964, 968, 279, 280,
	281, 282, 996, 283, 990, 989, 910, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 981,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	916, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 1003, 1004, 928, 234, 0, 0, 0, 0, 0,
	311, 312, 313, 988, 0, 0, 0, 314, 0, 315,
	0, 2287, 1013, 316, 317, 1001, 1002, 318, 319, 0,
	320, 1010, 0, 938, 321, 0, 322, 323, 324, 325,
	326, 974, 975, 978, 380, 1015, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 235, 333, 334, 336,
	0, 1014, 335, 983, 984, 0, 944, 0, 337, 1016,
	976, 1017, 338, 339, 340, 1018, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 2283, 349,
	1011, 1019, 350, 351, 1020, 0, 352, 353, 354, 967,
	966, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 1021,
	371, 372, 373, 376, 377, 375, 1022, 374, 907, 236,
	1023, 378, 929, 977, 379, 991, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 1024, 390, 1025, 1005, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 1006, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 987, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	1026, 428, 429, 430, 431, 917, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 970, 452, 436, 437, 453,
	454, 1027, 455, 456, 985, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 1030, 463, 464, 465, 466,
	1007, 0, 469, 470, 905, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 997, 998, 999,
	1000, 0, 485, 2284, 479, 480, 1008, 481, 1009, 927,
	482, 483, 484, 0, 486, 487, 0, 911, 488, 489,
	490, 492, 493, 491, 494, 971, 495, 0, 0, 496,
	497, 498, 552, 994, 1029, 0, 500, 499, 555, 0,
	0, 0, 0, 501, 502, 556, 503, 504, 505, 908,
	0, 0, 0, 0, 0, 0, 904, 0, 0, 0,
	0, 0, 0, 902, 903, 0, 0, 0, 0, 0,
	0, 0, 933, 0, 0, 2223, 931, 949, 921, 922,
	923, 919, 920, 932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 973, 937,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 986, 0, 993, 252, 992, 0, 253, 254, 255,
	256, 257, 939, 972, 906, 258, 1031, 1032, 513, 0,
	259, 260, 979, 0, 960, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 1012, 277, 278,
	963, 961, 962, 969, 965, 964, 968, 279, 280, 281,
	282, 996, 283, 990, 989, 910, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 981, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 916,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	1003, 1004, 928, 234, 0, 0, 0, 0, 0, 311,
	312, 313, 988, 0, 0, 0, 314, 0, 315, 0,
	0, 1013, 316, 317, 1001, 1002, 318, 319, 0, 320,
	1010, 0, 938, 321, 0, 322, 323, 324, 325, 326,
	974, 975, 978, 380, 1015, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 235, 333, 334, 336, 0,
	1014, 335, 983, 984, 0, 944, 0, 337, 1016, 976,
	1017, 338, 339, 340, 1018, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 1011,
	1019, 350, 351, 1020, 0, 352, 353, 354, 967, 966,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 1021, 371,
	372, 373, 376, 377, 375, 1022, 374, 907, 236, 1023,
	378, 929, 977, 379, 991, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 1024, 390, 1025, 1005, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	1006, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 987, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 1026,
	428, 429, 430, 431, 917, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 450, 451, 970, 452, 436, 437, 453, 454,
	1027, 455, 456, 985, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 1030, 463, 464, 465, 466, 1007,
	0, 469, 470, 905, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 997, 998, 999, 1000,
	0, 485, 0, 479, 480, 1008, 481, 1009, 927, 482,
	483, 484, 0, 486, 487, 0, 911, 488, 489, 490,
	492, 493, 491, 494, 971, 495, 0, 0, 496, 497,
	498, 552, 994, 1029, 0, 500, 499, 555, 0, 0,
	0, 0, 501, 502, 556, 503, 504, 505, 908, 0,
	0, 0, 0, 0, 0, 904, 0, 0, 0, 0,
	0, 0, 902, 903, 0, 0, 0, 0, 0, 0,
	0, 933, 2221, 0, 2220, 931, 949, 921, 922, 923,
	919, 920, 932, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 973, 937, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	986, 0, 993, 252, 992, 0, 253, 254, 255, 256,
	257, 939, 972, 906, 258, 1031, 1032, 513, 0, 259,
	260, 979, 0, 960, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 1012, 277, 278, 963,
	961, 962, 969, 965, 964, 968, 279, 280, 281, 282,
	996, 283, 990, 989, 910, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 981, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 916, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 1003,
	1004, 928, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 988, 0, 0, 0, 314, 0, 315, 0, 0,
	1013, 316, 317, 1001, 1002, 318, 319, 0, 320, 1010,
	0, 938, 321, 0, 322, 323, 324, 325, 326, 974,
	975, 978, 380, 1015, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 0, 1014,
	335, 983, 984, 0, 944, 0, 337, 1016, 976, 1017,
	338, 339, 340, 1018, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 1011, 1019,
	350, 351, 1020, 0, 352, 353, 354, 967, 966, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 1021, 371, 372,
	373, 376, 377, 375, 1022, 374, 907, 236, 1023, 378,
	929, 977, 379, 991, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	1024, 390, 1025, 1005, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 1006,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 987, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 1026, 428,
	429, 430, 431, 917, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 970, 452, 436, 437, 453, 454, 1027,
	455, 456, 985, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 1030, 463, 464, 465, 466, 1007, 0,
	469, 470, 905, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 997, 998, 999, 1000, 0,
	485, 0, 479, 480, 1008, 481, 1009, 927, 482, 483,
	484, 0, 486, 487, 0, 911, 488, 489, 490, 492,
	493, 491, 494, 971, 495, 0, 0, 496, 497, 498,
	552, 994, 1029, 0, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 908, 0, 0,
	0, 0, 0, 0, 904, 0, 0, 0, 0, 0,
	0, 902, 903, 0, 0, 0, 0, 0, 0, 0,
	933, 2218, 0, 2217, 931, 949, 921, 922, 923, 919,
	920, 932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 973, 937, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 986,
	0, 993, 252, 992, 0, 253, 254, 255, 256, 257,
	939, 972, 906, 258, 1031, 1032, 513, 0, 259, 260,
	979, 0, 960, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 1012, 277, 278, 963, 961,
	962, 969, 965, 964, 968, 279, 280, 281, 282, 996,
	283, 990, 989, 910, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 981, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 916, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 1003, 1004,
	928, 234, 0, 0, 0, 0, 0, 311, 312, 313,
	988, 0, 0, 0, 314, 0, 315, 0, 0, 1013,
	316, 317, 1001, 1002, 318, 319, 0, 320, 1010, 0,
	938, 321, 0, 322, 323, 324, 325, 326, 974, 975,
	978, 380, 1015, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 235, 333, 334, 336, 0, 1014, 335,
	983, 984, 0, 944, 0, 337, 1016, 976, 1017, 338,
	339, 340, 1018, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 1011, 1019, 350,
	351, 1020, 0, 352, 353, 354, 967, 966, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 1021, 371, 372, 373,
	376, 377, 375, 1022, 374, 907, 236, 1023, 378, 929,
	977, 379, 991, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 1024,
	390, 1025, 1005, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 1006, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 987, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 1026, 428, 429,
	430, 431, 917, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 970, 452, 436, 437, 453, 454, 1027, 455,
	456, 985, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 1030, 463, 464, 465, 466, 1007, 0, 469,
	470, 905, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 997, 998, 999, 1000, 0, 485,
	0, 479, 480, 1008, 481, 1009, 927, 482, 483, 484,
	0, 486, 487, 0, 911, 488, 489, 490, 492, 493,
	491, 494, 971, 495, 0, 0, 496, 497, 498, 552,
	994, 1029, 0, 500, 499, 555, 0, 0, 0, 0,
	501, 502, 556, 503, 504, 505, 908, 0, 0, 0,
	0, 0, 0, 904, 0, 0, 0, 0, 0, 0,
	902, 903, 0, 0, 0, 0, 0, 0, 0, 933,
	2215, 0, 2214, 931, 949, 921, 922, 923, 919, 920,
	932, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	0, 0, 0, 0, 0, 973, 937, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 986, 0,
	993, 252, 992, 0, 253, 254, 255, 256, 257, 939,
	972, 906, 258, 1031, 1032, 513, 0, 259, 260, 979,
	0, 960, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 1012, 277, 278, 963, 961, 962,
	969, 965, 964, 968, 279, 280, 281, 282, 996, 283,
	990, 989, 910, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 981, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 916, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 1003, 1004, 928,
	234, 0, 0, 0, 0, 0, 311, 312, 313, 988,
	0, 0, 0, 314, 0, 315, 0, 0, 1013, 316,
	317, 1001, 1002, 318, 319, 0, 320, 1010, 0, 938,
	321, 0, 322, 323, 324, 325, 326, 974, 975, 978,
	380, 1015, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 235, 333, 334, 336, 0, 1014, 335, 983,
	984, 0, 944, 0, 337, 1016, 976, 1017, 338, 339,
	340, 1018, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 1011, 1019, 350, 351,
	1020, 0, 352, 353, 354, 967, 966, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 1021, 371, 372, 373, 376,
	377, 375, 1022, 374, 907, 236, 1023, 378, 929, 977,
	379, 991, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 1024, 390,
	1025, 1005, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 1006, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 987, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 1026, 428, 429, 430,
	431, 917, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 0, 447, 448, 446, 449, 450,
	451, 970, 452, 436, 437, 453, 454, 1027, 455, 456,
	985, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 1030, 463, 464, 465, 466, 1007, 0, 469, 470,
	905, 468, 0, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 997, 998, 999, 1000, 0, 485, 0,
	479, 480, 1008, 481, 1009, 927, 482, 483, 484, 0,
	486, 487, 0, 911, 488, 489, 490, 492, 493, 491,
	494, 971, 495, 0, 0, 496, 497, 498, 552, 994,
	1029, 0, 500, 499, 555, 0, 0, 0, 0, 501,
	502, 556, 503, 504, 505, 908, 0, 0, 0, 0,
	0, 0, 904, 0, 0, 0, 0, 0, 0, 902,
	903, 0, 0, 0, 0, 0, 0, 0, 933, 2212,
	0, 1477, 931, 949, 921, 922, 923, 919, 920, 932,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 973, 937, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 986, 0, 993,
	252, 992, 0, 253, 254, 255, 256, 257, 939, 972,
	906, 258, 1031, 1032, 513, 0, 259, 260, 979, 0,
	960, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 1012, 277, 278, 963, 961, 962, 969,
	965, 964, 968, 279, 280, 281, 282, 996, 283, 990,
	989, 910, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 981, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 916, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 1003, 1004, 928, 234,
	0, 0, 0, 0, 0, 311, 312, 313, 988, 0,
	0, 0, 314, 0, 315, 0, 0, 1013, 316, 317,
	1001, 1002, 318, 319, 0, 320, 1010, 0, 938, 321,
	0, 322, 323, 324, 325, 326, 974, 975, 978, 380,
	1015, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 235, 333, 334, 336, 0, 1014, 335, 983, 984,
	0, 944, 0, 337, 1016, 976, 1017, 338, 339, 340,
	1018, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 1011, 1019, 350, 351, 1020,
	0, 352, 353, 354, 967, 966, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 1021, 371, 372, 373, 376, 377,
	375, 1022, 374, 907, 236, 1023, 378, 929, 977, 379,
	991, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 1024, 390, 1025,
	1005, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 1006, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 987, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 1026, 428, 429, 430, 431,
	917, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	970, 452, 436, 437, 453, 454, 1027, 455, 456, 985,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	1030, 463, 464, 465, 466, 1007, 0, 469, 470, 905,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 997, 998, 999, 1000, 0, 485, 0, 479,
	480, 1008, 481, 1009, 927, 482, 483, 484, 0, 486,
	487, 0, 911, 488, 489, 490, 492, 493, 491, 494,
	971, 495, 0, 0, 496, 497, 498, 552, 994, 1029,
	0, 500, 499, 555, 1476, 0, 0, 0, 501, 502,
	556, 503, 504, 505, 908, 0, 0, 0, 0, 0,
	0, 904, 0, 0, 0, 0, 0, 0, 902, 903,
	0, 0, 0, 0, 0, 0, 0, 933, 0, 0,
	898, 931, 949, 921, 922, 923, 919, 920, 932, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 973, 937, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 986, 0, 993, 252,
	992, 0, 253, 254, 255, 256, 257, 939, 972, 906,
	258, 1031, 1032, 513, 0, 259, 260, 979, 0, 960,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 1012, 277, 278, 963, 961, 962, 969, 965,
	964, 968, 279, 280, 281, 282, 996, 283, 990, 989,
	910, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 981, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 916, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 1003, 1004, 928, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 988, 0, 0,
	0, 314, 0, 315, 0, 0, 1013, 316, 317, 1001,
	1002, 318, 319, 0, 320, 1010, 0, 938, 321, 0,
	322, 323, 324, 325, 326, 974, 975, 978, 380, 1015,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	235, 333, 334, 336, 0, 1014, 335, 983, 984, 0,
	944, 0, 337, 1016, 976, 1017, 338, 339, 340, 1018,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 1011, 1019, 350, 351, 1020, 0,
	352, 353, 354, 967, 966, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 1021, 371, 372, 373, 376, 377, 375,
	1022, 374, 907, 236, 1023, 378, 929, 977, 379, 991,
	381, 382, 0, 0, 383, 0, 912, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 1024, 390, 1025, 1005,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 1006, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	987, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 1026, 428, 429, 430, 431, 917,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 970,
	452, 436, 437, 453, 454, 1027, 455, 456, 985, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 1030,
	463, 464, 465, 466, 1007, 0, 469, 470, 905, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 997, 998, 999, 1000, 0, 485, 0, 479, 480,
	1008, 481, 1009, 927, 482, 483, 484, 0, 486, 487,
	0, 911, 488, 489, 490, 492, 493, 491, 494, 971,
	495, 0, 0, 496, 497, 498, 552, 994, 1029, 0,
	500, 499, 555, 0, 0, 0, 0, 501, 502, 556,
	503, 504, 505, 908, 0, 0, 0, 0, 0, 0,
	904, 0, 0, 0, 0, 0, 0, 902, 903, 949,
	921, 922, 923, 919, 920, 932, 933, 0, 0, 0,
	931, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	973, 937, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 986, 0, 993, 252, 992, 0, 253,
	254, 255, 256, 257, 939, 972, 906, 258, 1031, 1032,
	513, 0, 259, 260, 979, 0, 960, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 3822, 275, 0, 276, 1012,
	277, 278, 963, 961, 962, 969, 965, 964, 968, 279,
	280, 281, 282, 996, 283, 990, 989, 910, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	981, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 916, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 1003, 1004, 928, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 988, 0, 0, 0, 314, 0,
	315, 0, 0, 1013, 316, 317, 1001, 1002, 318, 319,
	0, 320, 1010, 0, 938, 321, 0, 322, 323, 324,
	325, 326, 974, 975, 978, 380, 1015, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 0, 1014, 335, 983, 984, 0, 944, 0, 337,
	1016, 976, 1017, 338, 339, 340, 1018, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 1011, 1019, 350, 351, 1020, 0, 352, 353, 354,
	967, 966, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	1021, 371, 372, 373, 376, 377, 375, 1022, 374, 907,
	236, 1023, 378, 929, 977, 379, 991, 381, 382, 0,
	0, 383, 0, 912, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 1024, 390, 1025, 1005, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 1006, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 987, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 1026, 428, 429, 430, 431, 917, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 970, 452, 436, 437,
	453, 454, 1027, 455, 456, 985, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 1030, 463, 464, 465,
	466, 1007, 0, 469, 470, 905, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 997, 998,
	999, 1000, 0, 485, 0, 479, 480, 1008, 481, 1009,
	927, 482, 483, 484, 0, 486, 487, 0, 911, 488,
	489, 490, 492, 493, 491, 494, 971, 495, 0, 0,
	496, 497, 498, 552, 994, 1029, 0, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	908, 0, 0, 0, 0, 0, 0, 904, 0, 0,
	0, 0, 0, 0, 902, 903, 949, 921, 922, 923,
	919, 920, 932, 933, 0, 0, 0, 931, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 973, 937, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	986, 0, 993, 252, 992, 0, 253, 254, 255, 256,
	257, 939, 972, 906, 258, 1031, 1032, 513, 0, 259,
	260, 979, 0, 960, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 1012, 277, 278, 963,
	961, 962, 969, 965, 964, 968, 279, 280, 281, 282,
	996, 283, 990, 989, 910, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 981, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 916, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 1003,
	1004, 928, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 988, 0, 0, 0, 314, 0, 315, 0, 0,
	1013, 316, 317, 1001, 1002, 318, 319, 0, 320, 1010,
	0, 938, 321, 0, 322, 323, 324, 325, 326, 974,
	975, 978, 380, 1015, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 2092, 333, 334, 336, 0, 1014,
	335, 983, 984, 0, 944, 0, 337, 1016, 976, 1017,
	338, 339, 340, 1018, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 1011, 1019,
	350, 351, 1020, 0, 352, 353, 354, 967, 966, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 1021, 371, 372,
	373, 376, 377, 375, 1022, 374, 907, 236, 1023, 378,
	929, 977, 379, 991, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	1024, 390, 1025, 1005, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 1006,
	402, 540, 403, 404, 2091, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 987, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 1026, 428,
	429, 430, 431, 917, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 970, 452, 436, 437, 453, 454, 1027,
	455, 456, 985, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 1030, 463, 464, 465, 466, 1007, 0,
	469, 470, 905, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 997, 998, 999, 1000, 0,
	485, 0, 479, 480, 1008, 481, 1009, 927, 482, 483,
	484, 0, 486, 487, 0, 911, 488, 489, 490, 492,
	493, 491, 494, 971, 495, 0, 0, 496, 497, 498,
	552, 994, 1029, 0, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 908, 0, 0,
	0, 0, 0, 0, 904, 0, 0, 0, 0, 0,
	0, 902, 903, 949, 921, 922, 923, 919, 920, 932,
	933, 0, 0, 0, 931, 0, 0, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 973, 937, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 986, 0, 993,
	252, 992, 0, 253, 254, 255, 256, 257, 939, 972,
	906, 258, 1031, 1032, 513, 0, 259, 260, 979, 0,
	960, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 3621,
	275, 0, 276, 1012, 277, 278, 963, 961, 962, 969,
	965, 964, 968, 279, 280, 281, 282, 996, 283, 990,
	989, 910, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 981, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 916, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 1003, 1004, 928, 234,
	0, 0, 0, 0, 0, 311, 312, 313, 988, 0,
	0, 0, 314, 0, 315, 0, 0, 1013, 316, 317,
	1001, 1002, 318, 319, 0, 320, 1010, 0, 938, 321,
	0, 322, 323, 324, 325, 326, 974, 975, 978, 380,
	1015, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 235, 333, 334, 336, 0, 1014, 335, 983, 984,
	0, 944, 0, 337, 1016, 976, 1017, 338, 339, 340,
	1018, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 1011, 1019, 350, 351, 1020,
	0, 352, 353, 354, 967, 966, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 1021, 371, 372, 373, 376, 377,
	375, 1022, 374, 907, 236, 1023, 378, 929, 977, 379,
	991, 381, 382, 0, 0, 383, 0, 912, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 1024, 390, 1025,
	1005, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 1006, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 987, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 1026, 428, 429, 430, 431,
	917, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	970, 452, 436, 437, 453, 454, 1027, 455, 456, 985,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	1030, 463, 464, 465, 466, 1007, 0, 469, 470, 905,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 997, 998, 999, 1000, 0, 485, 0, 479,
	480, 1008, 481, 1009, 927, 482, 483, 484, 0, 486,
	487, 0, 911, 488, 489, 490, 492, 493, 491, 494,
	971, 495, 0, 0, 496, 497, 498, 552, 994, 1029,
	0, 500, 499, 555, 0, 0, 0, 0, 501, 502,
	556, 503, 504, 505, 908, 0, 0, 0, 0, 0,
	0, 904, 0, 0, 0, 0, 0, 0, 902, 903,
	949, 921, 922, 923, 919, 920, 932, 933, 0, 0,
	0, 931, 0, 0, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 973, 937, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 986, 0, 993, 252, 992, 0,
	253, 254, 255, 256, 257, 939, 972, 906, 258, 1031,
	1032, 513, 0, 259, 260, 979, 0, 960, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	1012, 277, 278, 963, 961, 962, 969, 965, 964, 968,
	279, 280, 281, 282, 996, 283, 990, 989, 910, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 981, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 916, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 1003, 1004, 928, 234, 0, 0, 0,
	0, 0, 311, 312, 313, 988, 0, 0, 0, 314,
	0, 315, 0, 0, 1013, 316, 317, 1001, 1002, 318,
	319, 0, 320, 1010, 0, 938, 321, 0, 322, 323,
	324, 325, 326, 974, 975, 978, 380, 1015, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 235, 333,
	334, 336, 0, 1014, 335, 983, 984, 0, 944, 0,
	337, 1016, 976, 1017, 338, 339, 340, 1018, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 1011, 1019, 350, 351, 1020, 0, 352, 353,
	354, 967, 966, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 1021, 371, 372, 373, 376, 377, 375, 1022, 374,
	907, 3304, 1023, 378, 929, 977, 379, 991, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 1024, 390, 1025, 1005, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 1006, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 987, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 1026, 428, 429, 430, 431, 917, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 970, 452, 436,
	437, 453, 454, 1027, 455, 456, 985, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 1030, 463, 464,
	465, 466, 1007, 0, 469, 470, 905, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 997,
	998, 999, 1000, 0, 485, 0, 479, 480, 1008, 481,
	1009, 927, 482, 483, 484, 0, 486, 487, 0, 911,
	488, 489, 490, 492, 493, 491, 494, 971, 495, 0,
	0, 496, 497, 498, 552, 994, 1029, 0, 500, 499,
	555, 0, 0, 0, 0, 501, 502, 556, 503, 504,
	505, 908, 0, 0, 0, 0, 0, 0, 904, 0,
	0, 0, 0, 0, 0, 902, 903, 1688, 0, 0,
	0, 0, 0, 0, 933, 0, 0, 0, 931, 949,
	921, 922, 923, 919, 920, 932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	973, 937, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 986, 0, 993, 252, 992, 0, 253,
	254, 255, 256, 257, 939, 972, 906, 258, 1031, 1032,
	513, 0, 259, 260, 979, 0, 960, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 1012,
	277, 278, 963, 961, 962, 969, 965, 964, 968, 279,
	280, 281, 282, 996, 283, 990, 989, 910, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	981, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 916, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 1003, 1004, 928, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 988, 0, 0, 0, 314, 0,
	315, 0, 0, 1013, 316, 317, 1001, 1002, 318, 319,
	0, 320, 1010, 0, 938, 321, 0, 322, 323, 324,
	325, 326, 974, 975, 978, 380, 1015, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 0, 1014, 335, 983, 984, 0, 944, 0, 337,
	1016, 976, 1017, 338, 339, 340, 1018, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 1011, 1019, 350, 351, 1020, 0, 352, 353, 354,
	967, 966, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	1021, 371, 372, 373, 376, 377, 375, 1022, 374, 907,
	236, 1023, 378, 929, 977, 379, 991, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 1024, 390, 1025, 1005, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 1006, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 987, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 1026, 428, 429, 430, 431, 917, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 970, 452, 436, 437,
	453, 454, 1027, 455, 456, 985, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 1030, 463, 464, 465,
	466, 1007, 0, 469, 470, 905, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 997, 998,
	999, 1000, 0, 485, 0, 479, 480, 1008, 481, 1009,
	927, 482, 483, 484, 0, 486, 487, 0, 911, 488,
	489, 490, 492, 493, 491, 494, 971, 495, 0, 0,
	496, 497, 498, 552, 994, 1029, 3083, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	908, 0, 0, 0, 0, 0, 0, 904, 0, 0,
	0, 0, 0, 0, 902, 903, 949, 921, 922, 923,
	919, 920, 932, 933, 0, 0, 0, 931, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 973, 937, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	986, 0, 993, 252, 992, 0, 253, 254, 255, 256,
	257, 939, 972, 906, 258, 1031, 1032, 513, 0, 259,
	260, 979, 0, 960, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 1012, 277, 278, 963,
	961, 962, 969, 965, 964, 968, 279, 280, 281, 282,
	996, 283, 990, 989, 910, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 981, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 916, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 1003,
	1004, 928, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 988, 0, 0, 0, 314, 0, 315, 0, 0,
	1013, 316, 317, 1001, 1002, 318, 319, 0, 320, 1010,
	0, 938, 321, 0, 322, 323, 324, 325, 326, 974,
	975, 978, 380, 1015, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 0, 1014,
	335, 983, 984, 0, 944, 0, 337, 1016, 976, 1017,
	338, 339, 340, 1018, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 1011, 1019,
	350, 351, 1020, 0, 352, 353, 354, 967, 966, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 1021, 371, 372,
	373, 376, 377, 375, 1022, 374, 907, 236, 1023, 378,
	929, 977, 379, 991, 381, 382, 0, 0, 383, 0,
	912, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	1024, 390, 1025, 1005, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 1006,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 987, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 1026, 428,
	429, 430, 431, 917, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 970, 452, 436, 437, 453, 454, 1027,
	455, 456, 985, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 1030, 463, 464, 465, 466, 1007, 0,
	469, 470, 905, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 997, 998, 999, 1000, 0,
	485, 0, 479, 480, 1008, 481, 1009, 927, 482, 483,
	484, 0, 486, 487, 0, 911, 488, 489, 490, 492,
	493, 491, 494, 971, 495, 0, 0, 496, 497, 498,
	552, 994, 1029, 0, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 908, 0, 0,
	0, 0, 0, 0, 904, 0, 0, 0, 0, 0,
	0, 902, 903, 949, 921, 922, 923, 919, 920, 932,
	933, 0, 0, 0, 931, 0, 0, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 973, 937, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 986, 0, 993,
	252, 992, 0, 253, 254, 255, 256, 257, 939, 972,
	906, 258, 1031, 1032, 513, 0, 259, 260, 979, 0,
	960, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 1012, 277, 278, 963, 961, 962, 969,
	965, 964, 968, 279, 280, 281, 282, 996, 283, 990,
	989, 910, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 981, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 916, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 1003, 1004, 928, 234,
	0, 0, 0, 0, 0, 311, 312, 313, 988, 0,
	0, 0, 314, 0, 315, 0, 0, 1013, 316, 317,
	1001, 1002, 318, 319, 0, 320, 1010, 0, 938, 321,
	0, 322, 323, 324, 325, 326, 974, 975, 978, 380,
	1015, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 235, 333, 334, 336, 0, 1014, 335, 983, 984,
	0, 944, 0, 337, 1016, 976, 1017, 338, 339, 340,
	1018, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 1011, 1019, 350, 351, 1020,
	0, 352, 353, 354, 967, 966, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 1021, 371, 372, 373, 376, 377,
	375, 1022, 374, 907, 236, 1023, 378, 929, 977, 379,
	991, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 1024, 390, 1025,
	1005, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 1006, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 987, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 1026, 428, 429, 430, 431,
	917, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	970, 452, 436, 437, 453, 454, 1027, 455, 456, 985,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	1030, 463, 464, 465, 466, 1007, 0, 469, 470, 905,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 997, 998, 999, 1000, 0, 485, 0, 479,
	480, 1008, 481, 1009, 927, 482, 483, 484, 0, 486,
	487, 0, 911, 488, 489, 490, 492, 493, 491, 494,
	971, 495, 0, 0, 496, 497, 498, 552, 994, 1029,
	0, 500, 499, 555, 0, 0, 0, 0, 501, 502,
	556, 503, 504, 505, 908, 0, 0, 0, 0, 0,
	0, 904, 0, 0, 0, 0, 0, 0, 902, 903,
	1688, 0, 0, 0, 0, 0, 0, 933, 0, 0,
	0, 931, 949, 921, 922, 923, 919, 920, 932, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 973, 937, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 986, 0, 993, 252,
	992, 0, 253, 254, 255, 256, 257, 939, 972, 906,
	258, 1031, 1032, 513, 0, 259, 260, 979, 0, 960,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 1012, 277, 278, 963, 961, 962, 969, 965,
	964, 968, 279, 280, 281, 282, 996, 283, 990, 989,
	910, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 981, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 916, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 1003, 1004, 928, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 988, 0, 0,
	0, 314, 0, 315, 0, 2287, 1013, 316, 317, 1001,
	1002, 318, 319, 0, 320, 1010, 0, 938, 321, 0,
	322, 323, 324, 325, 326, 974, 975, 978, 380, 1015,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	235, 333, 334, 336, 0, 1014, 335, 983, 984, 0,
	944, 0, 337, 1016, 976, 1017, 338, 339, 340, 1018,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 1011, 1019, 350, 351, 1020, 0,
	352, 353, 354, 967, 966, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 1021, 371, 372, 373, 376, 377, 375,
	1022, 374, 907, 236, 1023, 378, 929, 977, 379, 991,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 1024, 390, 1025, 1005,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 1006, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	987, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 1026, 428, 429, 430, 431, 917,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 970,
	452, 436, 437, 453, 454, 1027, 455, 456, 985, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 1030,
	463, 464, 465, 466, 1007, 0, 469, 470, 905, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 997, 998, 999, 1000, 0, 485, 0, 479, 480,
	1008, 481, 1009, 927, 482, 483, 484, 0, 486, 487,
	0, 911, 488, 489, 490, 492, 493, 491, 494, 971,
	495, 0, 0, 496, 497, 498, 552, 994, 1029, 0,
	500, 499, 555, 0, 0, 0, 0, 501, 502, 556,
	503, 504, 505, 908, 0, 0, 0, 0, 0, 0,
	904, 0, 0, 0, 0, 0, 0, 902, 903, 949,
	921, 922, 923, 919, 920, 932, 933, 0, 0, 0,
	931, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	973, 937, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 986, 0, 993, 252, 992, 0, 253,
	254, 255, 256, 257, 939, 972, 906, 258, 1031, 1032,
	513, 0, 259, 260, 979, 0, 960, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 1012,
	277, 278, 963, 961, 962, 969, 965, 964, 968, 279,
	280, 281, 282, 996, 283, 990, 989, 910, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	981, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 916, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 1003, 1004, 928, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 988, 0, 0, 0, 314, 0,
	315, 0, 0, 1013, 316, 317, 1001, 1002, 318, 319,
	0, 320, 1010, 0, 938, 321, 0, 322, 323, 324,
	325, 326, 974, 975, 978, 380, 1015, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 0, 1014, 335, 983, 984, 0, 944, 0, 337,
	1016, 976, 1017, 338, 339, 340, 1018, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 1011, 1019, 350, 351, 1020, 0, 352, 353, 354,
	967, 966, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	1021, 371, 372, 373, 376, 377, 375, 1022, 374, 907,
	236, 1023, 378, 929, 977, 379, 991, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 1024, 390, 1025, 1005, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 1006, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 987, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 1026, 428, 429, 430, 431, 917, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 970, 452, 436, 437,
	453, 454, 1027, 455, 456, 985, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 1030, 463, 464, 465,
	466, 1007, 0, 469, 470, 905, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 997, 998,
	999, 1000, 0, 485, 0, 479, 480, 1008, 481, 1009,
	927, 482, 483, 484, 0, 486, 487, 0, 911, 488,
	489, 490, 492, 493, 491, 494, 971, 495, 0, 0,
	496, 497, 498, 552, 994, 1029, 0, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	908, 0, 0, 0, 0, 0, 0, 904, 0, 0,
	0, 0, 0, 0, 902, 903, 0, 0, 0, 0,
	0, 0, 0, 933, 1618, 0, 2292, 931, 949, 921,
	922, 923, 919, 920, 932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 973,
	937, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 986, 0, 993, 252, 992, 0, 253, 254,
	255, 256, 257, 939, 972, 906, 258, 1031, 1032, 513,
	0, 259, 260, 979, 0, 960, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 1012, 277,
	278, 963, 961, 962, 969, 965, 964, 968, 279, 280,
	281, 282, 996, 283, 990, 989, 910, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 981,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	916, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 1003, 1004, 928, 234, 0, 0, 0, 0, 0,
	311, 312, 313, 988, 0, 0, 0, 314, 0, 315,
	0, 0, 1013, 316, 317, 1001, 1002, 318, 319, 0,
	320, 1010, 0, 938, 321, 0, 322, 323, 324, 325,
	326, 974, 975, 978, 380, 1015, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 235, 333, 334, 336,
	0, 1014, 335, 983, 984, 0, 944, 0, 337, 1016,
	976, 1017, 338, 339, 340, 1018, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	1011, 1019, 350, 351, 1020, 0, 352, 353, 354, 967,
	966, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 1021,
	371, 372, 373, 376, 377, 375, 1022, 374, 907, 236,
	1023, 378, 929, 977, 379, 991, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 1024, 390, 1025, 1005, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 1006, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 987, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	1026, 428, 429, 430, 431, 917, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 970, 452, 436, 437, 453,
	454, 1027, 455, 456, 985, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 1030, 463, 464, 465, 466,
	1007, 0, 469, 470, 905, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 997, 998, 999,
	1000, 0, 485, 0, 479, 480, 1008, 481, 1009, 927,
	482, 483, 484, 0, 486, 487, 0, 911, 488, 489,
	490, 492, 493, 491, 494, 971, 495, 0, 0, 496,
	497, 498, 552, 994, 1029, 0, 500, 499, 555, 0,
	0, 0, 0, 501, 502, 556, 503, 504, 505, 908,
	0, 0, 0, 0, 0, 0, 904, 0, 0, 0,
	0, 0, 0, 902, 903, 0, 0, 0, 0, 0,
	0, 0, 933, 0, 0, 2290, 931, 949, 921, 922,
	923, 919, 920, 932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 973, 937,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 986, 0, 993, 252, 992, 0, 253, 254, 255,
	256, 257, 939, 972, 906, 258, 1031, 1032, 513, 0,
	259, 260, 979, 0, 960, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 1012, 277, 278,
	963, 961, 962, 969, 965, 964, 968, 279, 280, 281,
	282, 996, 283, 990, 989, 910, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 981, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 916,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	1003, 1004, 928, 234, 0, 0, 0, 0, 0, 311,
	312, 313, 988, 0, 0, 0, 314, 0, 315, 0,
	0, 1013, 316, 317, 1001, 1002, 318, 319, 0, 320,
	1010, 0, 938, 321, 0, 322, 323, 324, 325, 326,
	974, 975, 978, 380, 1015, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 235, 333, 334, 336, 0,
	1014, 335, 983, 984, 0, 944, 0, 337, 1016, 976,
	1017, 338, 339, 340, 1018, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 1011,
	1019, 350, 351, 1020, 0, 352, 353, 354, 967, 966,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 1021, 371,
	372, 373, 376, 377, 375, 1022, 374, 907, 236, 1023,
	378, 929, 977, 379, 991, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 1024, 390, 1025, 1005, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	1006, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 987, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 1026,
	428, 429, 430, 431, 917, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 450, 451, 970, 452, 436, 437, 453, 454,
	1027, 455, 456, 985, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 1030, 463, 464, 465, 466, 1007,
	0, 469, 470, 905, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 997, 998, 999, 1000,
	0, 485, 0, 479, 480, 1008, 481, 1009, 927, 482,
	483, 484, 0, 486, 487, 0, 911, 488, 489, 490,
	492, 493, 491, 494, 971, 495, 0, 0, 496, 497,
	498, 552, 994, 1029, 0, 500, 499, 555, 0, 0,
	0, 0, 501, 502, 556, 503, 504, 505, 908, 0,
	0, 0, 0, 0, 0, 904, 0, 0, 0, 0,
	0, 0, 902, 903, 0, 0, 0, 0, 0, 0,
	0, 933, 0, 0, 2278, 931, 949, 921, 922, 923,
	919, 920, 932, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 973, 937, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	986, 0, 993, 252, 992, 0, 253, 254, 255, 256,
	257, 939, 972, 906, 258, 1031, 1032, 513, 0, 259,
	260, 979, 0, 960, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 1012, 277, 278, 963,
	961, 962, 969, 965, 964, 968, 279, 280, 281, 282,
	996, 283, 990, 989, 910, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 981, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 916, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 1003,
	1004, 928, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 988, 0, 0, 0, 314, 0, 315, 0, 0,
	1013, 316, 317, 1001, 1002, 318, 319, 0, 320, 1010,
	0, 938, 321, 0, 322, 323, 324, 325, 326, 974,
	975, 978, 380, 1015, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 0, 1014,
	335, 983, 984, 0, 944, 0, 337, 1016, 976, 1017,
	338, 339, 340, 1018, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 1011, 1019,
	350, 351, 1020, 0, 352, 353, 354, 967, 966, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 1021, 371, 372,
	373, 376, 377, 375, 1022, 374, 907, 236, 1023, 378,
	929, 977, 379, 991, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	1024, 390, 1025, 1005, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 1006,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 987, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 1026, 428,
	429, 430, 431, 917, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 970, 452, 436, 437, 453, 454, 1027,
	455, 456, 985, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 1030, 463, 464, 465, 466, 1007, 0,
	469, 470, 905, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 997, 998, 999, 1000, 0,
	485, 0, 479, 480, 1008, 481, 1009, 927, 482, 483,
	484, 0, 486, 487, 0, 911, 488, 489, 490, 492,
	493, 491, 494, 971, 495, 0, 0, 496, 497, 498,
	552, 994, 1029, 0, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 908, 0, 0,
	0, 0, 0, 0, 904, 0, 0, 0, 0, 0,
	0, 902, 903, 0, 0, 0, 0, 0, 0, 0,
	933, 0, 0, 2267, 931, 949, 921, 922, 923, 919,
	920, 932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 973, 937, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 986,
	0, 993, 252, 992, 0, 253, 254, 255, 256, 257,
	939, 972, 906, 258, 1031, 1032, 513, 0, 259, 260,
	979, 0, 960, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 1012, 277, 278, 963, 961,
	962, 969, 965, 964, 968, 279, 280, 281, 282, 996,
	283, 990, 989, 910, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 981, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 916, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 1003, 1004,
	928, 234, 0, 0, 0, 0, 0, 311, 312, 313,
	988, 0, 0, 0, 314, 0, 315, 0, 0, 1013,
	316, 317, 1001, 1002, 318, 319, 0, 320, 1010, 0,
	938, 321, 0, 322, 323, 324, 325, 326, 974, 975,
	978, 380, 1015, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 235, 333, 334, 336, 0, 1014, 335,
	983, 984, 0, 944, 0, 337, 1016, 976, 1017, 338,
	339, 340, 1018, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 1011, 1019, 350,
	351, 1020, 0, 352, 353, 354, 967, 966, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 1021, 371, 372, 373,
	376, 377, 375, 1022, 374, 907, 236, 1023, 378, 929,
	977, 379, 991, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 1024,
	390, 1025, 1005, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 1006, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 987, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 1026, 428, 429,
	430, 431, 917, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 970, 452, 436, 437, 453, 454, 1027, 455,
	456, 985, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 1030, 463, 464, 465, 466, 1007, 0, 469,
	470, 905, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 997, 998, 999, 1000, 0, 485,
	0, 479, 480, 1008, 481, 1009, 927, 482, 483, 484,
	0, 486, 487, 0, 911, 488, 489, 490, 492, 493,
	491, 494, 971, 495, 0, 0, 496, 497, 498, 552,
	994, 1029, 0, 500, 499, 555, 0, 0, 0, 0,
	501, 502, 556, 503, 504, 505, 908, 0, 0, 0,
	0, 0, 0, 904, 0, 0, 0, 0, 0, 0,
	902, 903, 0, 0, 0, 0, 0, 0, 0, 933,
	0, 0, 2265, 931, 2256, 2263, 922, 923, 919, 920,
	932, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	0, 0, 0, 0, 0, 973, 937, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 986, 0,
	993, 252, 992, 0, 253, 254, 255, 256, 257, 939,
	972, 906, 258, 1031, 1032, 513, 0, 259, 260, 979,
	0, 960, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 1012, 277, 278, 963, 961, 962,
	969, 965, 964, 968, 279, 280, 281, 282, 996, 2259,
	990, 989, 910, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 981, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 916, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 1003, 1004, 928,
	234, 0, 0, 0, 0, 0, 311, 312, 313, 988,
	0, 0, 0, 314, 0, 315, 0, 0, 1013, 316,
	317, 1001, 1002, 318, 319, 0, 320, 1010, 0, 938,
	321, 0, 322, 323, 324, 2260, 326, 974, 975, 978,
	380, 1015, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 235, 333, 334, 336, 0, 1014, 335, 983,
	984, 0, 944, 0, 337, 1016, 976, 1017, 338, 339,
	340, 1018, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 1011, 1019, 350, 351,
	1020, 0, 352, 353, 354, 967, 966, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 2261, 2258, 365,
	366, 367, 370, 0, 369, 1021, 371, 372, 373, 376,
	377, 375, 1022, 374, 907, 236, 1023, 378, 929, 977,
	379, 991, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 1024, 390,
	1025, 1005, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 1006, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 987, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 1026, 428, 429, 430,
	431, 917, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 2262, 0, 447, 448, 446, 449, 450,
	451, 970, 452, 436, 437, 453, 454, 1027, 455, 456,
	985, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 1030, 463, 464, 465, 466, 1007, 0, 469, 470,
	905, 468, 0, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 997, 998, 999, 1000, 0, 485, 0,
	479, 480, 1008, 481, 1009, 927, 482, 483, 484, 0,
	486, 487, 0, 911, 488, 489, 490, 492, 493, 491,
	494, 971, 495, 0, 0, 496, 497, 498, 552, 994,
	1029, 0, 500, 499, 555, 0, 0, 0, 0, 501,
	502, 556, 503, 2257, 505, 908, 0, 0, 0, 0,
	0, 0, 904, 0, 0, 0, 0, 0, 0, 902,
	903, 0, 0, 0, 0, 0, 0, 0, 933, 0,
	0, 2253, 931, 2256, 2263, 922, 923, 919, 920, 932,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 973, 937, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 986, 0, 993,
	252, 992, 0, 253, 254, 255, 256, 257, 939, 972,
	906, 258, 1031, 1032, 513, 0, 259, 260, 979, 0,
	960, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 1012, 277, 278, 963, 961, 962, 969,
	965, 964, 968, 279, 280, 281, 282, 996, 2259, 990,
	989, 910, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 981, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 916, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 1003, 1004, 928, 234,
	0, 0, 0, 0, 0, 311, 312, 313, 988, 0,
	0, 0, 314, 0, 315, 0, 0, 1013, 316, 317,
	1001, 1002, 318, 319, 0, 320, 1010, 0, 938, 321,
	0, 322, 323, 324, 2260, 326, 974, 975, 978, 380,
	1015, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 235, 333, 334, 336, 0, 1014, 335, 983, 984,
	0, 944, 0, 337, 1016, 976, 1017, 338, 339, 340,
	1018, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 1011, 1019, 350, 351, 1020,
	0, 352, 353, 354, 967, 966, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 2261, 2258, 365, 366,
	367, 370, 0, 369, 1021, 371, 372, 373, 376, 377,
	375, 1022, 374, 907, 236, 1023, 378, 929, 977, 379,
	991, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 1024, 390, 1025,
	1005, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 1006, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 987, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 1026, 428, 429, 430, 431,
	917, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 2262, 0, 447, 448, 446, 449, 450, 451,
	970, 452, 436, 437, 453, 454, 1027, 455, 456, 985,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	1030, 463, 464, 465, 466, 1007, 0, 469, 470, 905,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 997, 998, 999, 1000, 0, 485, 0, 479,
	480, 1008, 481, 1009, 927, 482, 483, 484, 0, 486,
	487, 0, 911, 488, 489, 490, 492, 493, 491, 494,
	971, 495, 0, 0, 496, 497, 498, 552, 994, 1029,
	0, 500, 499, 555, 0, 0, 0, 0, 501, 502,
	556, 503, 2257, 505, 908, 0, 0, 0, 0, 0,
	0, 904, 0, 0, 0, 0, 0, 0, 902, 903,
	949, 921, 922, 923, 919, 920, 932, 933, 0, 0,
	0, 931, 0, 0, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 973, 937, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 986, 0, 993, 252, 992, 0,
	253, 254, 255, 256, 257, 939, 972, 906, 258, 1031,
	1032, 513, 0, 259, 260, 979, 0, 960, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	1012, 277, 278, 963, 961, 962, 969, 965, 964, 968,
	279, 280, 281, 282, 996, 283, 990, 989, 910, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 981, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 916, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 1003, 1004, 928, 234, 0, 0, 0,
	0, 0, 311, 312, 313, 988, 0, 0, 0, 314,
	0, 315, 0, 0, 1013, 316, 317, 1001, 1002, 318,
	319, 0, 320, 1010, 0, 938, 321, 0, 322, 323,
	324, 325, 326, 974, 975, 978, 380, 1015, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 235, 333,
	334, 336, 0, 1014, 335, 983, 984, 0, 944, 0,
	337, 1016, 976, 1017, 338, 339, 340, 1018, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 1011, 1019, 350, 351, 1020, 0, 352, 353,
	354, 967, 966, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 1021, 371, 372, 373, 376, 377, 375, 1022, 374,
	907, 236, 1023, 378, 929, 977, 379, 991, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 1024, 390, 1025, 1005, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 1006, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 987, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 1026, 428, 429, 430, 431, 917, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 970, 452, 436,
	437, 453, 454, 1027, 455, 456, 985, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 1030, 463, 464,
	465, 466, 1007, 0, 469, 470, 905, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 997,
	998, 999, 1000, 0, 485, 0, 479, 480, 1008, 481,
	1009, 927, 482, 483, 484, 0, 486, 487, 0, 911,
	488, 489, 490, 492, 493, 491, 494, 971, 495, 0,
	0, 496, 497, 498, 552, 994, 1029, 0, 500, 499,
	555, 0, 0, 0, 0, 501, 502, 556, 503, 504,
	505, 908, 0, 0, 0, 0, 0, 0, 904, 0,
	0, 0, 0, 0, 0, 902, 903, 0, 0, 0,
	0, 0, 1626, 0, 933, 0, 0, 0, 931, 949,
	921, 922, 923, 919, 920, 932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 2071, 243, 244, 0, 0, 0, 0, 0,
	973, 937, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 986, 0, 993, 252, 992, 0, 253,
	254, 255, 256, 257, 939, 972, 906, 258, 1031, 1032,
	513, 0, 259, 260, 979, 0, 960, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 1012,
	277, 278, 963, 961, 962, 969, 965, 964, 968, 279,
	280, 281, 282, 996, 283, 990, 989, 910, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	981, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 916, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 1003, 1004, 928, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 988, 0, 0, 0, 314, 0,
	315, 0, 0, 1013, 316, 317, 1001, 1002, 318, 319,
	0, 320, 1010, 0, 938, 321, 0, 322, 323, 324,
	325, 326, 974, 975, 978, 380, 1015, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 0, 1014, 335, 983, 984, 0, 944, 0, 337,
	1016, 976, 1017, 338, 339, 340, 1018, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 1011, 1019, 350, 351, 1020, 0, 352, 353, 354,
	967, 966, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	1021, 371, 372, 373, 376, 377, 375, 1022, 374, 907,
	236, 1023, 378, 929, 977, 379, 991, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 1024, 390, 1025, 1005, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 1006, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 987, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 1026, 428, 429, 430, 431, 917, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 970, 452, 436, 437,
	453, 454, 1027, 455, 456, 985, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 1030, 463, 464, 465,
	466, 1007, 0, 469, 470, 905, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 997, 998,
	999, 1000, 0, 485, 0, 479, 480, 1008, 481, 1009,
	927, 482, 483, 484, 0, 486, 487, 0, 911, 488,
	489, 490, 492, 493, 491, 494, 971, 495, 0, 0,
	496, 497, 498, 552, 994, 1029, 0, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	908, 0, 0, 0, 0, 0, 0, 904, 0, 0,
	0, 0, 0, 0, 902, 903, 0, 0, 0, 0,
	0, 0, 0, 933, 0, 0, 1422, 931, 949, 921,
	922, 923, 919, 920, 932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 973,
	937, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 986, 0, 993, 252, 992, 0, 253, 254,
	255, 256, 257, 939, 972, 906, 258, 1031, 1032, 513,
	0, 259, 260, 979, 0, 960, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 1012, 277,
	278, 963, 961, 962, 969, 965, 964, 968, 279, 280,
	281, 282, 996, 283, 990, 989, 910, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 981,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	916, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 1003, 1004, 928, 234, 0, 0, 0, 0, 0,
	311, 312, 313, 988, 0, 0, 0, 314, 0, 315,
	0, 0, 1013, 316, 317, 1001, 1002, 318, 319, 0,
	320, 1010, 0, 938, 321, 0, 322, 323, 324, 325,
	326, 974, 975, 978, 380, 1015, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 235, 333, 334, 336,
	0, 1014, 335, 983, 984, 0, 944, 0, 337, 1016,
	976, 1017, 338, 339, 340, 1018, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	1011, 1019, 350, 351, 1020, 0, 352, 353, 354, 967,
	966, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 1021,
	371, 372, 373, 376, 377, 375, 1022, 374, 907, 236,
	1023, 378, 929, 977, 379, 991, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 1024, 390, 1025, 1005, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 1006, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 987, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	1026, 428, 429, 430, 431, 917, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 970, 452, 436, 437, 453,
	454, 1027, 455, 456, 985, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 1030, 463, 464, 465, 466,
	1007, 0, 469, 470, 905, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 997, 998, 999,
	1000, 0, 485, 0, 479, 480, 1008, 481, 1009, 927,
	482, 483, 484, 0, 486, 487, 0, 911, 488, 489,
	490, 492, 493, 491, 494, 971, 495, 0, 0, 496,
	497, 498, 552, 994, 1029, 0, 500, 499, 555, 0,
	0, 0, 0, 501, 502, 556, 503, 504, 505, 908,
	0, 0, 0, 0, 0, 0, 904, 0, 0, 0,
	0, 0, 0, 902, 903, 0, 0, 0, 0, 0,
	0, 0, 933, 0, 0, 1418, 931, 949, 921, 922,
	923, 919, 920, 932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 973, 937,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 986, 0, 993, 252, 992, 0, 253, 254, 255,
	256, 257, 939, 972, 906, 258, 1031, 1032, 513, 0,
	259, 260, 979, 0, 960, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 1012, 277, 278,
	963, 961, 962, 969, 965, 964, 968, 279, 280, 281,
	282, 996, 283, 990, 989, 910, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 981, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 916,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	1003, 1004, 928, 234, 0, 0, 0, 0, 0, 311,
	312, 313, 988, 0, 0, 0, 314, 0, 315, 0,
	0, 1013, 316, 317, 1001, 1002, 318, 319, 0, 320,
	1010, 0, 938, 321, 0, 322, 323, 324, 325, 326,
	974, 975, 978, 380, 1015, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 235, 333, 334, 336, 0,
	1014, 335, 983, 984, 0, 944, 0, 337, 1016, 976,
	1017, 338, 339, 340, 1018, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 1011,
	1019, 350, 351, 1020, 0, 352, 353, 354, 967, 966,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 1021, 371,
	372, 373, 376, 377, 375, 1022, 374, 907, 236, 1023,
	378, 929, 977, 379, 991, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 1024, 390, 1025, 1005, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	1006, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 987, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 1026,
	428, 429, 430, 431, 917, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 450, 451, 970, 452, 436, 437, 453, 454,
	1027, 455, 456, 985, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 1030, 463, 464, 465, 466, 1007,
	0, 469, 470, 905, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 997, 998, 999, 1000,
	0, 485, 0, 479, 480, 1008, 481, 1009, 927, 482,
	483, 484, 0, 486, 487, 0, 911, 488, 489, 490,
	492, 493, 491, 494, 971, 495, 0, 0, 496, 497,
	498, 552, 994, 1029, 0, 500, 499, 555, 0, 0,
	0, 0, 501, 502, 556, 503, 504, 505, 908, 0,
	0, 0, 0, 0, 0, 904, 0, 0, 0, 0,
	0, 0, 902, 903, 0, 0, 0, 0, 0, 0,
	0, 933, 0, 0, 1409, 931, 949, 921, 922, 923,
	919, 920, 932, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 973, 937, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	986, 0, 993, 252, 992, 0, 253, 254, 255, 256,
	257, 939, 972, 906, 258, 1031, 1032, 513, 0, 259,
	260, 979, 0, 960, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 1012, 277, 278, 963,
	961, 962, 969, 965, 964, 968, 279, 280, 281, 282,
	996, 283, 990, 989, 910, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 981, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 916, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 1003,
	1004, 928, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 988, 0, 0, 0, 314, 0, 315, 0, 0,
	1013, 316, 317, 1001, 1002, 318, 319, 0, 320, 1010,
	0, 938, 321, 0, 322, 323, 324, 325, 326, 974,
	975, 978, 380, 1015, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 0, 1014,
	335, 983, 984, 0, 944, 0, 337, 1016, 976, 1017,
	338, 339, 340, 1018, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 1011, 1019,
	350, 351, 1020, 0, 352, 353, 354, 967, 966, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 1021, 371, 372,
	373, 376, 377, 375, 1022, 374, 907, 236, 1023, 378,
	929, 977, 379, 991, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	1024, 390, 1025, 1005, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 1006,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 987, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 1026, 428,
	429, 430, 431, 917, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 970, 452, 436, 437, 453, 454, 1027,
	455, 456, 985, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 1030, 463, 464, 465, 466, 1007, 0,
	469, 470, 905, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 997, 998, 999, 1000, 0,
	485, 0, 479, 480, 1008, 481, 1009, 927, 482, 483,
	484, 0, 486, 487, 0, 911, 488, 489, 490, 492,
	493, 491, 494, 971, 495, 0, 0, 496, 497, 498,
	552, 994, 1029, 0, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 908, 0, 0,
	0, 0, 0, 0, 904, 0, 0, 0, 0, 0,
	0, 902, 903, 0, 0, 0, 0, 0, 0, 0,
	933, 0, 0, 1405, 931, 949, 921, 922, 923, 919,
	920, 932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 973, 937, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 986,
	0, 993, 252, 992, 0, 253, 254, 255, 256, 257,
	939, 972, 906, 258, 1031, 1032, 513, 0, 259, 260,
	979, 0, 960, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 1012, 277, 278, 963, 961,
	962, 969, 965, 964, 968, 279, 280, 281, 282, 996,
	283, 990, 989, 910, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 981, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 916, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 1003, 1004,
	928, 234, 0, 0, 0, 0, 0, 311, 312, 313,
	988, 0, 0, 0, 314, 0, 315, 0, 0, 1013,
	316, 317, 1001, 1002, 318, 319, 0, 320, 1010, 0,
	938, 321, 0, 322, 323, 324, 325, 326, 974, 975,
	978, 380, 1015, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 235, 333, 334, 336, 0, 1014, 335,
	983, 984, 0, 944, 0, 337, 1016, 976, 1017, 338,
	339, 340, 1018, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 1011, 1019, 350,
	351, 1020, 0, 352, 353, 354, 967, 966, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 1021, 371, 372, 373,
	376, 377, 375, 1022, 374, 907, 236, 1023, 378, 929,
	977, 379, 991, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 1024,
	390, 1025, 1005, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 1006, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 987, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 1026, 428, 429,
	430, 431, 917, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 970, 452, 436, 437, 453, 454, 1027, 455,
	456, 985, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 1030, 463, 464, 465, 466, 1007, 0, 469,
	470, 905, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 997, 998, 999, 1000, 0, 485,
	0, 479, 480, 1008, 481, 1009, 927, 482, 483, 484,
	0, 486, 487, 0, 911, 488, 489, 490, 492, 493,
	491, 494, 971, 495, 0, 0, 496, 497, 498, 552,
	994, 1029, 0, 500, 499, 555, 0, 0, 0, 0,
	501, 502, 556, 503, 504, 505, 908, 0, 0, 0,
	0, 0, 0, 904, 0, 0, 0, 0, 0, 0,
	902, 903, 0, 0, 0, 0, 0, 0, 0, 933,
	0, 0, 1387, 931, 949, 921, 922, 923, 919, 920,
	932, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	0, 0, 0, 0, 0, 973, 937, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 986, 0,
	993, 252, 992, 0, 253, 254, 255, 256, 257, 939,
	972, 906, 258, 1031, 1032, 513, 0, 259, 260, 979,
	0, 960, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 1012, 277, 278, 963, 961, 962,
	969, 965, 964, 968, 279, 280, 281, 282, 996, 283,
	990, 989, 910, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 981, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 916, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 1003, 1004, 928,
	234, 0, 0, 0, 0, 0, 311, 312, 313, 988,
	0, 0, 0, 314, 0, 315, 0, 0, 1013, 316,
	317, 1001, 1002, 318, 319, 0, 320, 1010, 0, 938,
	321, 0, 322, 323, 324, 325, 326, 974, 975, 978,
	380, 1015, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 235, 333, 334, 336, 0, 1014, 335, 983,
	984, 0, 944, 0, 337, 1016, 976, 1017, 338, 339,
	340, 1018, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 1011, 1019, 350, 351,
	1020, 0, 352, 353, 354, 967, 966, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 1021, 371, 372, 373, 376,
	377, 375, 1022, 374, 907, 236, 1023, 378, 929, 977,
	379, 991, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 1024, 390,
	1025, 1005, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 1006, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 987, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 1026, 428, 429, 430,
	431, 917, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 0, 447, 448, 446, 449, 450,
	451, 970, 452, 436, 437, 453, 454, 1027, 455, 456,
	985, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 1030, 463, 464, 465, 466, 1007, 0, 469, 470,
	905, 468, 0, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 997, 998, 999, 1000, 0, 485, 0,
	479, 480, 1008, 481, 1009, 927, 482, 483, 484, 0,
	486, 487, 0, 911, 488, 489, 490, 492, 493, 491,
	494, 971, 495, 0, 0, 496, 497, 498, 552, 994,
	1029, 0, 500, 499, 555, 0, 0, 0, 0, 501,
	502, 556, 503, 504, 505, 908, 0, 0, 0, 0,
	0, 0, 904, 0, 0, 0, 0, 0, 0, 902,
	903, 0, 0, 0, 0, 0, 0, 0, 933, 0,
	0, 1276, 931, 949, 921, 922, 923, 919, 920, 932,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 973, 937, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 986, 0, 993,
	252, 992, 0, 253, 254, 255, 256, 257, 939, 972,
	906, 258, 1031, 1032, 513, 0, 259, 260, 979, 0,
	960, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 1012, 277, 278, 963, 961, 962, 969,
	965, 964, 968, 279, 280, 281, 282, 996, 283, 990,
	989, 910, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 981, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 916, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 1003, 1004, 928, 234,
	0, 0, 0, 0, 0, 311, 312, 313, 988, 0,
	0, 0, 314, 0, 315, 0, 0, 1013, 316, 317,
	1001, 1002, 318, 319, 0, 320, 1010, 0, 938, 321,
	0, 322, 323, 324, 325, 326, 1275, 975, 978, 380,
	1015, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 235, 333, 334, 336, 0, 1014, 335, 983, 984,
	0, 944, 0, 337, 1016, 976, 1017, 338, 339, 340,
	1018, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 1011, 1019, 350, 351, 1020,
	0, 352, 353, 354, 967, 966, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 1021, 371, 372, 373, 376, 377,
	375, 1022, 374, 907, 236, 1023, 378, 929, 977, 379,
	991, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 1024, 390, 1025,
	1005, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 1006, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 987, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 1026, 428, 429, 430, 431,
	917, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	970, 452, 436, 437, 453, 454, 1027, 455, 456, 985,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	1030, 463, 464, 465, 466, 1007, 0, 469, 470, 905,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 997, 998, 999, 1000, 0, 485, 0, 479,
	480, 1008, 481, 1009, 927, 482, 483, 484, 0, 486,
	487, 0, 911, 488, 489, 490, 492, 493, 491, 494,
	971, 495, 0, 0, 496, 497, 498, 552, 994, 1029,
	0, 500, 499, 555, 0, 0, 0, 0, 501, 502,
	556, 503, 504, 505, 908, 0, 0, 0, 0, 0,
	0, 904, 0, 0, 0, 0, 0, 0, 902, 903,
	0, 0, 0, 0, 0, 0, 0, 933, 0, 0,
	1270, 931, 949, 921, 922, 923, 919, 920, 932, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 973, 937, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 986, 0, 993, 252,
	992, 0, 253, 254, 255, 256, 257, 939, 972, 906,
	258, 1031, 1032, 513, 0, 259, 260, 979, 0, 960,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 1012, 277, 278, 963, 961, 962, 969, 965,
	964, 968, 279, 280, 281, 282, 996, 283, 990, 989,
	910, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 981, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 916, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 1003, 1004, 928, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 988, 0, 0,
	0, 314, 0, 315, 0, 0, 1013, 316, 317, 1001,
	1002, 318, 319, 0, 320, 1010, 0, 938, 321, 0,
	322, 323, 324, 325, 326, 1269, 975, 978, 380, 1015,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	235, 333, 334, 336, 0, 1014, 335, 983, 984, 0,
	944, 0, 337, 1016, 976, 1017, 338, 339, 340, 1018,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 1011, 1019, 350, 351, 1020, 0,
	352, 353, 354, 967, 966, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 1021, 371, 372, 373, 376, 377, 375,
	1022, 374, 907, 236, 1023, 378, 929, 977, 379, 991,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 1024, 390, 1025, 1005,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 1006, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	987, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 1026, 428, 429, 430, 431, 917,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 970,
	452, 436, 437, 453, 454, 1027, 455, 456, 985, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 1030,
	463, 464, 465, 466, 1007, 0, 469, 470, 905, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 997, 998, 999, 1000, 0, 485, 0, 479, 480,
	1008, 481, 1009, 927, 482, 483, 484, 0, 486, 487,
	0, 911, 488, 489, 490, 492, 493, 491, 494, 971,
	495, 0, 0, 496, 497, 498, 552, 994, 1029, 0,
	500, 499, 555, 0, 0, 0, 0, 501, 502, 556,
	503, 504, 505, 908, 0, 0, 0, 0, 0, 0,
	904, 0, 0, 0, 0, 0, 0, 902, 903, 0,
	0, 0, 0, 0, 0, 0, 933, 0, 0, 1265,
	931, 949, 921, 922, 923, 919, 920, 932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 0, 973, 937, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 986, 0, 993, 252, 992,
	0, 253, 254, 255, 256, 257, 939, 972, 906, 258,
	1031, 1032, 513, 0, 259, 260, 979, 0, 960, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 1012, 277, 278, 963, 961, 962, 969, 965, 964,
	968, 279, 280, 281, 282, 996, 283, 990, 989, 910,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 981, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 916, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 1003, 1004, 928, 234, 0, 0,
	0, 0, 0, 311, 312, 313, 988, 0, 0, 0,
	314, 0, 315, 0, 0, 1013, 316, 317, 1001, 1002,
	318, 319, 0, 320, 1010, 0, 938, 321, 0, 322,
	323, 324, 325, 326, 974, 975, 978, 380, 1015, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 235,
	333, 334, 336, 0, 1014, 335, 983, 984, 0, 944,
	0, 337, 1016, 976, 1017, 338, 339, 340, 1018, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 1011, 1019, 350, 351, 1020, 0, 352,
	353, 354, 967, 966, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 1021, 371, 372, 373, 376, 377, 375, 1022,
	374, 907, 236, 1023, 378, 929, 977, 379, 991, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 1024, 390, 1025, 1005, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 1006, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 987,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 1026, 428, 429, 430, 431, 917, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 970, 452,
	436, 437, 453, 454, 1027, 455, 456, 985, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 1030, 463,
	464, 465, 466, 1007, 0, 469, 470, 905, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	997, 998, 999, 1000, 0, 485, 0, 479, 480, 1008,
	481, 1009, 927, 482, 483, 484, 0, 486, 487, 0,
	911, 488, 489, 490, 492, 493, 491, 494, 971, 495,
	0, 0, 496, 497, 498, 552, 994, 1029, 0, 500,
	499, 555, 0, 0, 0, 0, 501, 502, 556, 503,
	504, 505, 908, 0, 0, 0, 0, 0, 0, 904,
	0, 0, 0, 0, 0, 0, 902, 903, 949, 921,
	922, 923, 919, 920, 932, 933, 0, 0, 0, 931,
	0, 0, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 973,
	937, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 986, 0, 993, 252, 992, 0, 253, 254,
	255, 256, 257, 939, 972, 906, 258, 1031, 1032, 513,
	0, 259, 260, 979, 0, 960, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 1012, 277,
	278, 963, 961, 962, 969, 965, 964, 968, 279, 280,
	281, 282, 996, 283, 990, 989, 910, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 981,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	916, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 1003, 1004, 928, 234, 0, 0, 0, 0, 0,
	311, 312, 313, 988, 0, 0, 0, 314, 0, 315,
	0, 0, 1013, 316, 317, 1001, 1002, 318, 319, 0,
	320, 1010, 0, 938, 321, 0, 322, 323, 324, 325,
	326, 974, 975, 978, 380, 1015, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 235, 333, 334, 336,
	0, 1014, 335, 983, 984, 0, 944, 0, 337, 1016,
	976, 1017, 338, 339, 340, 1018, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	1011, 1019, 350, 351, 1020, 0, 352, 353, 354, 967,
	966, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 1021,
	371, 372, 373, 376, 377, 375, 1022, 374, 907, 236,
	1023, 378, 929, 977, 379, 991, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 1024, 390, 1025, 1005, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 1006, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 987, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	1026, 428, 429, 430, 431, 917, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 970, 452, 436, 437, 453,
	454, 1027, 455, 456, 985, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 1030, 463, 464, 465, 466,
	1007, 0, 469, 470, 905, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 997, 998, 999,
	1000, 0, 485, 0, 479, 480, 1008, 481, 1009, 927,
	482, 483, 484, 0, 486, 487, 0, 911, 488, 489,
	490, 492, 493, 491, 494, 971, 495, 0, 0, 496,
	497, 498, 552, 994, 1029, 0, 500, 499, 555, 0,
	0, 0, 0, 501, 502, 556, 503, 504, 505, 908,
	0, 0, 0, 0, 0, 0, 904, 0, 0, 0,
	0, 0, 0, 902, 903, 949, 921, 922, 923, 919,
	920, 932, 933, 0, 0, 0, 931, 0, 0, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 973, 937, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 986,
	0, 993, 252, 992, 0, 253, 254, 255, 256, 257,
	939, 972, 906, 258, 1031, 1032, 513, 0, 259, 260,
	979, 0, 960, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 1012, 277, 3863, 963, 961,
	962, 969, 965, 964, 968, 279, 280, 281, 282, 996,
	283, 990, 989, 910, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 981, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 916, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 1003, 1004,
	928, 234, 0, 0, 0, 0, 0, 311, 312, 313,
	988, 0, 0, 0, 314, 0, 315, 0, 0, 1013,
	316, 317, 1001, 1002, 318, 319, 0, 320, 1010, 0,
	938, 321, 0, 322, 323, 324, 325, 326, 974, 975,
	978, 380, 1015, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 235, 333, 334, 336, 0, 1014, 335,
	983, 984, 0, 944, 0, 337, 1016, 976, 1017, 338,
	339, 340, 1018, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 1011, 1019, 350,
	351, 1020, 0, 352, 353, 354, 967, 966, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 1021, 371, 372, 373,
	376, 377, 375, 1022, 374, 907, 236, 1023, 378, 929,
	977, 379, 991, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 1024,
	390, 1025, 1005, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 1006, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 987, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 1026, 428, 429,
	430, 431, 917, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 970, 452, 436, 437, 453, 454, 1027, 455,
	456, 985, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 1030, 463, 464, 465, 466, 1007, 0, 469,
	470, 905, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 997, 998, 999, 1000, 0, 485,
	0, 479, 480, 1008, 481, 1009, 927, 482, 483, 484,
	0, 3862, 487, 0, 911, 488, 489, 490, 492, 493,
	491, 494, 971, 495, 0, 0, 496, 497, 498, 552,
	994, 1029, 0, 500, 499, 555, 0, 0, 0, 0,
	501, 502, 556, 503, 504, 505, 908, 0, 0, 0,
	0, 0, 0, 904, 0, 0, 0, 0, 0, 0,
	902, 903, 949, 921, 922, 923, 919, 920, 932, 933,
	0, 0, 0, 931, 0, 0, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 973, 937, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 3861, 986, 0, 993, 252,
	992, 0, 253, 254, 255, 256, 257, 939, 972, 906,
	258, 1031, 1032, 513, 0, 259, 260, 979, 0, 960,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 1012, 277, 3863, 963, 961, 962, 969, 965,
	964, 968, 279, 280, 281, 282, 996, 283, 990, 989,
	910, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 981, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 916, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 1003, 1004, 928, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 988, 0, 0,
	0, 314, 0, 315, 0, 0, 1013, 316, 317, 1001,
	1002, 318, 319, 0, 320, 1010, 0, 938, 321, 0,
	322, 323, 324, 325, 326, 974, 975, 978, 380, 1015,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	235, 333, 334, 336, 0, 1014, 335, 983, 984, 0,
	944, 0, 337, 1016, 976, 1017, 338, 339, 340, 1018,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 1011, 1019, 350, 351, 1020, 0,
	352, 353, 354, 967, 966, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 1021, 371, 372, 373, 376, 377, 375,
	1022, 374, 907, 236, 1023, 378, 929, 977, 379, 991,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 1024, 390, 1025, 1005,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 1006, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	987, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 1026, 428, 429, 430, 431, 917,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 970,
	452, 436, 437, 453, 454, 1027, 455, 456, 985, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 1030,
	463, 464, 465, 466, 1007, 0, 469, 470, 905, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 997, 998, 999, 1000, 0, 485, 0, 479, 480,
	1008, 481, 1009, 927, 482, 483, 484, 0, 3862, 487,
	0, 911, 488, 489, 490, 492, 493, 491, 494, 971,
	495, 0, 0, 496, 497, 498, 552, 994, 1029, 0,
	500, 499, 555, 0, 0, 0, 0, 501, 502, 556,
	503, 504, 505, 908, 0, 0, 0, 0, 0, 0,
	904, 0, 0, 0, 0, 0, 0, 902, 903, 949,
	921, 922, 923, 2643, 2644, 932, 933, 0, 0, 0,
	931, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	973, 937, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 986, 0, 993, 252, 992, 0, 253,
	254, 255, 256, 257, 939, 972, 906, 258, 1031, 1032,
	513, 0, 259, 260, 979, 0, 960, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 1012,
	277, 278, 963, 961, 962, 969, 965, 964, 968, 279,
	280, 281, 282, 996, 283, 990, 989, 910, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	981, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 916, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 1003, 1004, 928, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 988, 0, 0, 0, 314, 0,
	315, 0, 0, 1013, 316, 317, 1001, 1002, 318, 319,
	0, 320, 1010, 0, 938, 321, 0, 322, 323, 324,
	325, 326, 974, 975, 978, 380, 1015, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 0, 1014, 335, 983, 984, 0, 944, 0, 337,
	1016, 976, 1017, 338, 339, 340, 1018, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 1011, 1019, 350, 351, 1020, 0, 352, 353, 354,
	967, 966, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	1021, 371, 372, 373, 376, 377, 375, 1022, 374, 907,
	236, 1023, 378, 929, 977, 379, 991, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 1024, 390, 1025, 1005, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 1006, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 987, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 1026, 428, 429, 430, 431, 917, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 970, 452, 436, 437,
	453, 454, 1027, 455, 456, 985, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 1030, 463, 464, 465,
	466, 1007, 0, 469, 470, 905, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 997, 998,
	999, 1000, 0, 485, 0, 479, 480, 1008, 481, 1009,
	927, 482, 483, 484, 0, 486, 487, 0, 911, 488,
	489, 490, 492, 493, 491, 494, 971, 495, 0, 0,
	496, 497, 498, 552, 994, 1029, 0, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	908, 0, 0, 0, 0, 0, 0, 904, 0, 0,
	0, 0, 0, 0, 902, 903, 949, 921, 922, 923,
	2641, 2642, 932, 933, 0, 0, 0, 931, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 973, 937, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	986, 0, 993, 252, 992, 0, 253, 254, 255, 256,
	257, 939, 972, 906, 258, 1031, 1032, 513, 0, 259,
	260, 979, 0, 960, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 1012, 277, 278, 963,
	961, 962, 969, 965, 964, 968, 279, 280, 281, 282,
	996, 283, 990, 989, 910, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 981, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 916, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 1003,
	1004, 928, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 988, 0, 0, 0, 314, 0, 315, 0, 0,
	1013, 316, 317, 1001, 1002, 318, 319, 0, 320, 1010,
	0, 938, 321, 0, 322, 323, 324, 325, 326, 974,
	975, 978, 380, 1015, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 0, 1014,
	335, 983, 984, 0, 944, 0, 337, 1016, 976, 1017,
	338, 339, 340, 1018, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 1011, 1019,
	350, 351, 1020, 0, 352, 353, 354, 967, 966, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 1021, 371, 372,
	373, 376, 377, 375, 1022, 374, 907, 236, 1023, 378,
	929, 977, 379, 991, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	1024, 390, 1025, 1005, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 1006,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 987, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 1026, 428,
	429, 430, 431, 917, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 970, 452, 436, 437, 453, 454, 1027,
	455, 456, 985, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 1030, 463, 464, 465, 466, 1007, 0,
	469, 470, 905, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 997, 998, 999, 1000, 0,
	485, 0, 479, 480, 1008, 481, 1009, 927, 482, 483,
	484, 0, 486, 487, 0, 911, 488, 489, 490, 492,
	493, 491, 494, 971, 495, 0, 0, 496, 497, 498,
	552, 994, 1029, 0, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 908, 0, 0,
	0, 0, 0, 0, 904, 0, 0, 0, 0, 0,
	0, 902, 903, 949, 921, 922, 923, 919, 920, 932,
	933, 0, 0, 0, 931, 0, 0, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 973, 937, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 986, 0, 993,
	252, 992, 0, 253, 254, 255, 256, 257, 939, 972,
	906, 258, 1031, 1032, 513, 0, 259, 260, 979, 0,
	960, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 1012, 277, 278, 963, 961, 962, 969,
	965, 964, 968, 279, 280, 281, 282, 996, 283, 990,
	989, 910, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 981, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 916, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 1003, 1004, 928, 234,
	0, 0, 0, 0, 0, 311, 312, 313, 988, 0,
	0, 0, 314, 0, 315, 0, 0, 1013, 316, 317,
	1001, 1002, 318, 319, 0, 320, 1010, 0, 938, 321,
	0, 322, 323, 324, 325, 326, 974, 975, 978, 380,
	1015, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 235, 333, 334, 336, 0, 1014, 335, 983, 984,
	0, 944, 0, 337, 1016, 976, 1017, 338, 339, 340,
	1018, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 1011, 1019, 350, 351, 1020,
	0, 352, 353, 354, 967, 966, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 1021, 371, 372, 373, 376, 377,
	375, 1022, 374, 907, 236, 1023, 378, 929, 977, 379,
	991, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 1024, 390, 1025,
	1005, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 1006, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 987, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 1026, 428, 429, 430, 431,
	917, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	970, 452, 436, 437, 453, 454, 1027, 455, 456, 985,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	1030, 463, 464, 465, 466, 1007, 0, 469, 470, 905,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 997, 998, 999, 1000, 0, 485, 0, 479,
	480, 1008, 481, 1009, 927, 482, 483, 484, 0, 486,
	487, 0, 911, 488, 489, 490, 492, 493, 491, 494,
	971, 495, 0, 0, 496, 497, 498, 552, 994, 1029,
	0, 500, 499, 555, 0, 0, 0, 0, 501, 502,
	556, 503, 504, 505, 908, 0, 0, 0, 0, 0,
	0, 904, 0, 0, 0, 0, 0, 0, 2079, 2080,
	949, 921, 922, 923, 919, 920, 932, 933, 0, 0,
	0, 931, 0, 0, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 973, 937, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 986, 0, 993, 252, 992, 0,
	253, 254, 255, 256, 257, 939, 972, 0, 258, 1031,
	1032, 513, 0, 259, 260, 979, 0, 960, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	1012, 277, 278, 963, 961, 962, 969, 965, 964, 968,
	279, 280, 281, 282, 996, 283, 990, 989, 0, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 981, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 916, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 1003, 1004, 928, 234, 0, 0, 0,
	0, 0, 311, 312, 313, 988, 0, 0, 0, 314,
	0, 315, 0, 0, 1013, 316, 317, 1001, 1002, 318,
	319, 0, 320, 1010, 0, 938, 321, 0, 322, 323,
	324, 325, 326, 974, 975, 978, 380, 1015, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 235, 333,
	334, 336, 0, 1014, 335, 983, 984, 0, 944, 0,
	337, 1016, 976, 1017, 338, 339, 340, 1018, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 1011, 1019, 350, 351, 1020, 0, 352, 353,
	354, 967, 966, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 1021, 371, 372, 373, 376, 377, 375, 1022, 374,
	0, 236, 1023, 378, 929, 977, 379, 991, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 1024, 390, 1025, 1005, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 1006, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 987, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 1026, 428, 429, 430, 431, 917, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 970, 452, 436,
	437, 453, 454, 1027, 455, 456, 985, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 1030, 463, 464,
	465, 466, 1007, 0, 469, 470, 0, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 997,
	998, 999, 1000, 0, 485, 0, 479, 480, 1008, 481,
	1009, 927, 482, 483, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 492, 493, 491, 494, 971, 495, 0,
	0, 496, 497, 498, 552, 994, 1029, 0, 500, 499,
	555, 0, 0, 0, 0, 501, 502, 556, 503, 504,
	505, 949, 921, 922, 923, 919, 920, 932, 2275, 0,
	0, 0, 0, 0, 0, 2273, 2274, 0, 237, 238,
	239, 240, 241, 242, 933, 243, 244, 0, 931, 0,
	0, 0, 973, 937, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 986, 0, 993, 252, 992,
	0, 253, 254, 255, 256, 257, 939, 972, 0, 258,
	1031, 1032, 513, 0, 259, 260, 979, 0, 960, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 1012, 277, 278, 963, 961, 962, 969, 965, 964,
	968, 279, 280, 281, 282, 996, 283, 990, 989, 0,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 981, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 916, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 1003, 1004, 928, 234, 0, 0,
	0, 0, 0, 311, 312, 313, 988, 0, 0, 0,
	314, 0, 315, 0, 0, 1013, 316, 317, 1001, 1002,
	318, 319, 0, 320, 1010, 0, 938, 321, 0, 322,
	323, 324, 325, 326, 974, 975, 978, 380, 1015, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 235,
	333, 334, 336, 0, 1014, 335, 983, 984, 0, 944,
	0, 337, 1016, 976, 1017, 338, 339, 340, 1018, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 1011, 1019, 350, 351, 1020, 0, 352,
	353, 354, 967, 966, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 1021, 371, 372, 373, 376, 377, 375, 1022,
	374, 0, 236, 1023, 378, 929, 977, 379, 991, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 1024, 390, 1025, 1005, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 1006, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 987,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 1026, 428, 429, 430, 431, 2636, 2637,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 970, 452,
	436, 437, 453, 454, 1027, 455, 456, 985, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 1030, 463,
	464, 465, 466, 1007, 0, 469, 470, 0, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	997, 998, 999, 1000, 0, 485, 0, 479, 480, 1008,
	481, 1009, 927, 482, 483, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 492, 493, 491, 494, 971, 495,
	0, 0, 496, 497, 498, 552, 994, 1029, 0, 500,
	499, 555, 0, 0, 0, 0, 501, 502, 556, 503,
	504, 505, 949, 921, 922, 923, 919, 920, 932, 0,
	0, 0, 0, 0, 0, 0, 1820, 1821, 0, 237,
	238, 239, 240, 241, 242, 933, 243, 244, 0, 931,
	0, 0, 0, 973, 937, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 0, 986, 0, 993, 252,
	992, 0, 253, 254, 255, 256, 257, 939, 972, 906,
	258, 1031, 1032, 513, 0, 259, 260, 979, 0, 960,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 1012, 277, 3863, 963, 961, 962, 969, 965,
	964, 968, 279, 280, 281, 282, 996, 283, 990, 989,
	910, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 981, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 916, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 1003, 1004, 928, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 988, 0, 0,
	0, 314, 0, 315, 0, 0, 1013, 316, 317, 1001,
	1002, 318, 319, 0, 320, 1010, 0, 938, 321, 0,
	322, 323, 324, 325, 326, 974, 975, 978, 380, 0,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	235, 333, 334, 336, 0, 1014, 335, 983, 984, 0,
	944, 0, 337, 0, 976, 0, 338, 339, 340, 1018,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 1011, 1019, 350, 351, 0, 0,
	352, 353, 354, 967, 966, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 1021, 371, 372, 373, 376, 377, 375,
	1022, 374, 907, 236, 0, 378, 929, 977, 379, 991,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 1024, 390, 1025, 1005,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 1006, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	987, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 1026, 428, 429, 430, 431, 917,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 970,
	452, 436, 437, 453, 454, 0, 455, 456, 985, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 1030,
	463, 464, 465, 466, 1007, 0, 469, 470, 905, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 997, 998, 999, 1000, 0, 485, 0, 479, 480,
	1008, 481, 1009, 927, 482, 483, 484, 0, 3862, 487,
	0, 911, 488, 489, 490, 492, 493, 491, 494, 971,
	495, 0, 0, 496, 497, 498, 552, 994, 1029, 0,
	500, 499, 555, 0, 0, 0, 0, 501, 502, 556,
	503, 504, 505, 949, 921, 922, 923, 919, 920, 932,
	0, 0, 0, 0, 0, 0, 0, 902, 903, 0,
	237, 238, 239, 240, 241, 242, 933, 243, 244, 0,
	931, 0, 0, 0, 973, 937, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 986, 0, 993,
	252, 992, 0, 253, 254, 255, 256, 257, 0, 972,
	0, 258, 1031, 1032, 513, 0, 259, 260, 979, 0,
	960, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 1012, 277, 278, 963, 961, 962, 969,
	965, 964, 968, 279, 280, 281, 282, 996, 283, 990,
	989, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 981, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 1003, 1004, 928, 234,
	0, 0, 0, 0, 0, 311, 312, 313, 988, 0,
	0, 0, 314, 0, 315, 0, 0, 1013, 316, 317,
	1001, 1002, 318, 319, 0, 320, 1010, 0, 938, 321,
	0, 322, 323, 324, 325, 326, 974, 975, 978, 380,
	1015, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 235, 333, 334, 336, 0, 1014, 335, 983, 984,
	0, 944, 0, 337, 1016, 976, 1017, 338, 339, 340,
	1018, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 1011, 1019, 350, 351, 1020,
	0, 352, 353, 354, 967, 966, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 1021, 371, 372, 373, 376, 377,
	375, 1022, 374, 0, 236, 1023, 378, 929, 977, 379,
	991, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 1024, 390, 1025,
	1005, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 1006, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 987, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 1026, 428, 429, 430, 431,
	917, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	970, 452, 436, 437, 453, 454, 1027, 455, 456, 985,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	1030, 463, 464, 465, 466, 1007, 0, 469, 470, 0,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 997, 998, 999, 1000, 0, 485, 0, 479,
	480, 1008, 481, 1009, 927, 482, 483, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 492, 493, 491, 494,
	971, 495, 0, 0, 496, 497, 498, 552, 994, 1029,
	0, 500, 499, 555, 0, 895, 0, 1069, 501, 502,
	556, 503, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 933, 973, 0,
	0, 931, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 0, 253, 254, 255,
	256, 257, 0, 972, 0, 258, 511, 512, 513, 0,
	259, 260, 979, 0, 960, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 1012, 277, 278,
	963, 961, 962, 969, 965, 964, 968, 279, 280, 281,
	282, 0, 283, 515, 516, 0, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 292, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	1003, 1004, 0, 234, 0, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 0, 315, 0,
	0, 1013, 316, 317, 521, 522, 318, 319, 0, 320,
	1010, 0, 524, 321, 0, 322, 323, 324, 325, 326,
	974, 975, 978, 380, 1015, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 235, 333, 334, 336, 0,
	1014, 335, 528, 529, 0, 530, 0, 337, 1016, 976,
	1017, 338, 339, 340, 1018, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 1055, 348, 347, 0, 349, 1011,
	1019, 350, 351, 1020, 0, 352, 353, 354, 967, 966,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 1021, 371,
	372, 373, 376, 377, 375, 1022, 374, 0, 236, 1023,
	378, 0, 977, 379, 534, 381, 382, 0, 0, 383,
	0, 0, 1061, 385, 386, 387, 0, 0, 388, 389,
	535, 1024, 390, 1025, 1005, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	1006, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 541, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 1026,
	428, 429, 430, 431, 542, 1063, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 199, 447, 448,
	446, 449, 450, 451, 970, 452, 436, 437, 453, 454,
	1027, 455, 456, 543, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 1007,
	0, 469, 470, 0, 468, 201, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 546, 547, 548, 549,
	0, 485, 0, 479, 480, 1008, 481, 1009, 0, 482,
	483, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	492, 493, 491, 494, 971, 495, 0, 0, 496, 497,
	498, 1394, 553, 554, 0, 500, 499, 555, 0, 1069,
	0, 193, 501, 502, 556, 503, 504, 505, 0, 194,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 1059,
	973, 1712, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 972, 0, 258, 511, 512,
	513, 0, 259, 260, 979, 0, 960, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 1012,
	277, 278, 963, 961, 962, 969, 965, 964, 968, 279,
	280, 281, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 1003, 1004, 0, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 1013, 316, 317, 521, 522, 318, 319,
	0, 320, 1010, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 974, 975, 978, 380, 1015, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 0, 1014, 335, 528, 529, 0, 530, 0, 337,
	1016, 976, 1017, 338, 339, 340, 1018, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 1055, 348, 347, 0,
	349, 1011, 1019, 350, 351, 1020, 0, 352, 353, 354,
	967, 966, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	1021, 371, 372, 373, 376, 377, 375, 1022, 374, 0,
	236, 1023, 378, 0, 977, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 1061, 385, 386, 387, 0, 0,
	388, 389, 535, 1024, 390, 1025, 1005, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 1006, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 1026, 428, 429, 430, 431, 542, 1063, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 199,
	447, 448, 446, 449, 450, 451, 970, 452, 436, 437,
	453, 454, 1027, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 1007, 0, 469, 470, 0, 468, 201, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 1008, 481, 1009,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 971, 495, 0, 0,
	496, 497, 498, 1394, 553, 554, 0, 500, 499, 555,
	0, 0, 0, 193, 501, 502, 556, 503, 504, 505,
	0, 194, 0, 0, 0, 2796, 0, 1069, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1059, 0, 1712, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 973, 0,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 0, 253, 254, 255,
	256, 257, 0, 972, 0, 258, 511, 512, 513, 0,
	259, 260, 979, 0, 960, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 1012, 277, 278,
	963, 961, 962, 969, 965, 964, 968, 279, 280, 281,
	282, 0, 283, 515, 516, 0, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 292, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	1003, 1004, 0, 234, 0, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 0, 315, 0,
	0, 1013, 316, 317, 521, 522, 318, 319, 0, 320,
	1010, 0, 524, 321, 0, 322, 323, 324, 325, 326,
	974, 975, 978, 380, 1015, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 235, 333, 334, 336, 0,
	1014, 335, 528, 529, 0, 530, 0, 337, 1016, 976,
	1017, 338, 339, 340, 1018, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 1055, 348, 347, 0, 349, 1011,
	1019, 350, 351, 1020, 0, 352, 353, 354, 967, 966,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 1021, 371,
	372, 373, 376, 377, 375, 1022, 374, 0, 236, 1023,
	378, 0, 977, 379, 534, 381, 382, 0, 0, 383,
	0, 0, 1061, 385, 386, 387, 0, 0, 388, 389,
	535, 1024, 390, 1025, 1005, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	1006, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 541, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 1026,
	428, 429, 430, 431, 542, 1063, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 450, 451, 970, 452, 436, 437, 453, 454,
	1027, 455, 456, 543, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 1007,
	0, 469, 470, 0, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 546, 547, 548, 549,
	0, 485, 0, 479, 480, 1008, 481, 1009, 0, 482,
	483, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	492, 493, 491, 494, 971, 495, 0, 0, 496, 497,
	498, 552, 553, 554, 0, 500, 499, 555, 0, 1051,
	0, 1069, 501, 502, 556, 503, 504, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 1059,
	0, 1057, 973, 0, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	0, 253, 254, 255, 256, 257, 0, 972, 0, 258,
	511, 512, 513, 0, 259, 260, 979, 0, 960, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 1012, 277, 278, 963, 961, 962, 969, 965, 964,
	968, 279, 280, 281, 282, 0, 283, 515, 516, 0,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 292, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 1003, 1004, 0, 234, 0, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 0, 315, 0, 0, 1013, 316, 317, 521, 522,
	318, 319, 0, 320, 1010, 0, 524, 321, 0, 322,
	323, 324, 325, 326, 974, 975, 978, 380, 1015, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 235,
	333, 334, 336, 0, 1014, 335, 528, 529, 0, 530,
	0, 337, 1016, 976, 1017, 338, 339, 340, 1018, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 1055, 348,
	347, 0, 349, 1011, 1019, 350, 351, 1020, 0, 352,
	353, 354, 967, 966, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 1021, 371, 372, 373, 376, 377, 375, 1022,
	374, 0, 236, 1023, 378, 0, 977, 379, 534, 381,
	382, 0, 0, 383, 0, 0, 1061, 385, 386, 387,
	0, 0, 388, 389, 535, 1024, 390, 1025, 1005, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 1006, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 1026, 428, 429, 430, 431, 542, 1063,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 970, 452,
	436, 437, 453, 454, 1027, 455, 456, 543, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 1007, 0, 469, 470, 0, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	546, 547, 548, 549, 0, 485, 0, 479, 480, 1008,
	481, 1009, 0, 482, 483, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 492, 493, 491, 494, 971, 495,
	0, 0, 496, 497, 498, 552, 553, 554, 0, 500,
	499, 555, 0, 1069, 0, 0, 501, 502, 556, 503,
	504, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 1059, 973, 1057, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 0, 253, 254, 255, 256, 257, 0, 972,
	0, 258, 511, 512, 513, 0, 259, 260, 979, 0,
	960, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 1012, 277, 278, 963, 961, 962, 969,
	965, 964, 968, 279, 280, 281, 282, 0, 283, 515,
	516, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 292, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 1003, 1004, 0, 234,
	0, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 0, 315, 0, 0, 1013, 316, 317,
	521, 522, 318, 319, 0, 320, 1010, 0, 524, 321,
	0, 322, 323, 324, 325, 326, 974, 975, 978, 380,
	1015, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 235, 333, 334, 336, 0, 1014, 335, 528, 529,
	0, 530, 0, 337, 1016, 976, 1017, 338, 339, 340,
	1018, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	1055, 348, 347, 0, 349, 1011, 1019, 350, 351, 1020,
	0, 352, 353, 354, 967, 966, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 1021, 371, 372, 373, 376, 377,
	375, 1022, 374, 0, 236, 1023, 378, 0, 977, 379,
	534, 381, 382, 0, 0, 383, 0, 0, 1061, 385,
	386, 387, 0, 0, 388, 389, 535, 1024, 390, 1025,
	1005, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 1006, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 1026, 428, 429, 430, 431,
	542, 1063, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	970, 452, 436, 437, 453, 454, 1027, 455, 456, 543,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 1007, 0, 469, 470, 0,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 546, 547, 548, 549, 0, 485, 0, 479,
	480, 1008, 481, 1009, 0, 482, 483, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 492, 493, 491, 494,
	971, 495, 0, 0, 496, 497, 498, 552, 553, 554,
	0, 500, 499, 555, 0, 1069, 0, 0, 501, 502,
	556, 503, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 1059, 973, 1057, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 508,
	0, 509, 252, 510, 0, 253, 254, 255, 256, 257,
	0, 972, 0, 258, 511, 512, 513, 0, 259, 260,
	979, 0, 960, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 1012, 277, 278, 963, 961,
	962, 969, 965, 964, 968, 279, 280, 281, 282, 0,
	283, 515, 516, 0, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 292, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 517, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 1003, 1004,
	0, 234, 0, 0, 0, 0, 0, 311, 312, 313,
	520, 0, 0, 0, 314, 0, 315, 0, 0, 1013,
	316, 317, 521, 522, 318, 319, 0, 320, 1010, 0,
	524, 321, 0, 322, 323, 324, 325, 326, 974, 975,
	978, 380, 1015, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 235, 333, 334, 336, 0, 1014, 335,
	528, 529, 0, 530, 0, 337, 1016, 976, 1017, 338,
	339, 340, 1018, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 1011, 1019, 350,
	351, 1020, 0, 352, 353, 354, 967, 966, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 1021, 371, 372, 373,
	376, 377, 375, 1022, 374, 0, 236, 1023, 378, 0,
	977, 379, 534, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 1024,
	390, 1025, 1005, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 1006, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 541, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 1026, 428, 429,
	430, 431, 542, 1063, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 970, 452, 436, 437, 453, 454, 1027, 455,
	456, 543, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 544, 463, 464, 465, 466, 1007, 0, 469,
	470, 0, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 546, 547, 548, 549, 0, 485,
	0, 479, 480, 1008, 481, 1009, 0, 482, 483, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 492, 493,
	491, 494, 971, 495, 0, 0, 496, 497, 498, 552,
	553, 554, 0, 500, 499, 555, 0, 895, 0, 1250,
	501, 502, 556, 503, 504, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 1611,
	506, 0, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 0, 259, 260, 514, 0, 1219, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 1012,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 281, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 1013, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 525, 526, 527, 380, 1015, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 0, 333, 334,
	336, 0, 1014, 335, 528, 529, 0, 530, 0, 337,
	1016, 531, 1017, 338, 339, 340, 1018, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 1019, 350, 351, 1020, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	1021, 371, 372, 373, 376, 377, 375, 1022, 374, 0,
	0, 1023, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 1024, 390, 1025, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 1026, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 199,
	447, 448, 446, 449, 450, 451, 0, 452, 436, 437,
	453, 454, 1027, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 201, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 1394, 553, 554, 0, 500, 499, 555,
	0, 0, 0, 193, 501, 502, 556, 503, 504, 505,
	0, 194, 0, 0, 0, 1391, 0, 1250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 0, 253, 254, 255,
	256, 257, 0, 0, 0, 258, 511, 512, 513, 0,
	259, 260, 514, 0, 1219, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 1012, 277, 278,
	0, 0, 0, 0, 0, 0, 0, 279, 280, 281,
	282, 0, 283, 515, 516, 0, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 292, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	518, 519, 0, 234, 0, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 0, 315, 0,
	0, 1013, 316, 317, 521, 522, 318, 319, 0, 320,
	523, 0, 524, 321, 0, 322, 323, 324, 325, 326,
	525, 526, 527, 380, 1015, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 0, 333, 334, 336, 0,
	1014, 335, 528, 529, 0, 530, 0, 337, 1016, 531,
	1017, 338, 339, 340, 1018, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 532,
	1019, 350, 351, 1020, 0, 352, 353, 354, 0, 0,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 1021, 371,
	372, 373, 376, 377, 375, 1022, 374, 0, 0, 1023,
	378, 0, 533, 379, 534, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 1024, 390, 1025, 536, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	539, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 541, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 1026,
	428, 429, 430, 431, 542, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 199, 447, 448,
	446, 449, 450, 451, 0, 452, 436, 437, 453, 454,
	1027, 455, 456, 543, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 545,
	0, 469, 470, 0, 468, 201, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 546, 547, 548, 549,
	0, 485, 0, 479, 480, 550, 481, 551, 0, 482,
	483, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	492, 493, 491, 494, 0, 495, 0, 0, 496, 497,
	498, 1394, 553, 554, 0, 500, 499, 555, 0, 0,
	0, 193, 501, 502, 556, 503, 504, 505, 0, 194,
	0, 0, 0, 0, 0, 1250, 1249, 0, 0, 0,
	0, 1247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 508,
	0, 509, 252, 510, 0, 253, 254, 255, 256, 257,
	0, 0, 0, 258, 511, 512, 513, 0, 259, 260,
	514, 0, 1219, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 1012, 277, 278, 0, 0,
	0, 0, 0, 0, 0, 279, 280, 281, 282, 0,
	283, 515, 516, 0, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 292, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 517, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 518, 519,
	0, 234, 0, 0, 0, 0, 0, 311, 312, 313,
	520, 0, 0, 0, 314, 0, 315, 0, 0, 1013,
	316, 317, 521, 522, 318, 319, 0, 320, 523, 0,
	524, 321, 0, 322, 323, 324, 325, 326, 525, 526,
	527, 380, 1015, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 0, 333, 334, 336, 0, 1014, 335,
	528, 529, 0, 530, 0, 337, 1016, 531, 1017, 338,
	339, 340, 1018, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 532, 1019, 350,
	351, 1020, 0, 352, 353, 354, 0, 0, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 1021, 371, 372, 373,
	376, 377, 375, 1022, 374, 0, 0, 1023, 378, 0,
	533, 379, 534, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 1024,
	390, 1025, 536, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 539, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 541, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 1026, 428, 429,
	430, 431, 542, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 0, 452, 436, 437, 453, 454, 1027, 455,
	456, 543, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 544, 463, 464, 465, 466, 545, 0, 469,
	470, 0, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 546, 547, 548, 549, 0, 485,
	0, 479, 480, 550, 481, 551, 0, 482, 483, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 492, 493,
	491, 494, 0, 495, 0, 0, 496, 497, 498, 552,
	553, 554, 0, 500, 499, 555, 0, 0, 0, 0,
	501, 502, 556, 503, 504, 505, 1250, 1249, 0, 0,
	0, 0, 1247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 1415,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 1219, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 1012, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	1013, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 525,
	526, 527, 380, 1015, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 0, 333, 334, 336, 0, 1014,
	335, 528, 529, 0, 530, 0, 337, 1016, 531, 1017,
	338, 339, 340, 1018, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 1019,
	350, 351, 1020, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 1021, 371, 372,
	373, 376, 377, 375, 1022, 374, 0, 0, 1023, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	1024, 390, 1025, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 1026, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 1027,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 0, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 1250, 1249, 0,
	0, 0, 0, 1247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	3020, 243, 244, 0, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 0, 253, 254, 255,
	256, 257, 0, 0, 0, 258, 511, 512, 513, 0,
	259, 260, 514, 0, 1219, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 1012, 277, 278,
	0, 0, 0, 0, 0, 0, 0, 279, 280, 281,
	282, 0, 283, 515, 516, 0, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 292, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	518, 519, 0, 234, 0, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 0, 315, 0,
	0, 1013, 316, 317, 521, 522, 318, 319, 0, 320,
	523, 0, 524, 321, 0, 322, 323, 324, 325, 326,
	525, 526, 527, 380, 1015, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 0, 333, 334, 336, 0,
	1014, 335, 528, 529, 0, 530, 0, 337, 1016, 531,
	1017, 338, 339, 340, 1018, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 532,
	1019, 350, 351, 1020, 0, 352, 353, 354, 0, 0,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 1021, 371,
	372, 373, 376, 377, 375, 1022, 374, 0, 0, 1023,
	378, 0, 533, 379, 534, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 1024, 390, 1025, 536, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	539, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 541, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 1026,
	428, 429, 430, 431, 542, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 450, 451, 0, 452, 436, 437, 453, 454,
	1027, 455, 456, 543, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 545,
	0, 469, 470, 0, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 546, 547, 548, 549,
	0, 485, 0, 479, 480, 550, 481, 551, 0, 482,
	483, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	492, 493, 491, 494, 0, 495, 0, 0, 496, 497,
	498, 552, 553, 554, 0, 500, 499, 555, 1069, 0,
	0, 0, 501, 502, 556, 503, 504, 505, 0, 0,
	0, 0, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 973,
	0, 1400, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 0, 253, 254,
	255, 256, 257, 0, 972, 0, 258, 511, 512, 513,
	0, 259, 260, 979, 0, 960, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 1012, 277,
	278, 963, 961, 962, 969, 965, 964, 968, 279, 280,
	281, 282, 0, 283, 515, 516, 0, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 292,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 1003, 1004, 0, 234, 0, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 0, 315,
	0, 0, 1013, 316, 317, 521, 522, 318, 319, 0,
	320, 1010, 0, 524, 321, 0, 322, 323, 324, 325,
	326, 974, 975, 978, 380, 1015, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 235, 333, 334, 336,
	0, 1014, 335, 528, 529, 0, 530, 0, 337, 1016,
	976, 1017, 338, 339, 340, 1018, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	1011, 1019, 350, 351, 1020, 0, 352, 353, 354, 967,
	966, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 1021,
	371, 372, 373, 376, 377, 375, 1022, 374, 0, 236,
	1023, 378, 0, 977, 379, 534, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 1024, 390, 1025, 1005, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 1006, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	1026, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 970, 452, 436, 437, 453,
	454, 1027, 455, 456, 543, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	1007, 0, 469, 470, 0, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 546, 547, 548,
	549, 0, 485, 0, 479, 480, 1008, 481, 1009, 0,
	482, 483, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 492, 493, 491, 494, 971, 495, 0, 0, 496,
	497, 498, 552, 553, 554, 0, 500, 499, 555, 895,
	0, 231, 0, 501, 502, 556, 503, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	0, 253, 254, 255, 256, 257, 0, 0, 0, 258,
	511, 512, 513, 0, 259, 260, 514, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 0,
	0, 279, 280, 281, 282, 0, 283, 515, 516, 0,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 292, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 518, 519, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 0, 315, 0, 0, 0, 316, 317, 521, 522,
	318, 319, 0, 320, 523, 0, 524, 321, 0, 322,
	323, 324, 325, 326, 525, 526, 527, 380, 0, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 0,
	333, 334, 336, 0, 0, 335, 528, 529, 0, 530,
	0, 337, 0, 531, 0, 338, 339, 340, 0, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 532, 0, 350, 351, 0, 0, 352,
	353, 354, 0, 0, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 0, 371, 372, 373, 376, 377, 375, 0,
	374, 0, 0, 0, 378, 0, 533, 379, 534, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 0, 390, 0, 536, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 539, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 0, 428, 429, 430, 431, 542, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 199, 447, 448, 446, 449, 450, 451, 0, 452,
	436, 437, 453, 454, 0, 455, 456, 543, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 545, 0, 469, 470, 0, 468, 201,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	546, 547, 548, 549, 0, 485, 0, 479, 480, 550,
	481, 551, 0, 482, 483, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 492, 493, 491, 494, 0, 495,
	0, 0, 496, 497, 498, 1394, 553, 554, 0, 500,
	499, 555, 231, 0, 0, 193, 501, 502, 556, 503,
	504, 505, 0, 194, 0, 0, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 506, 0, 168, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 508, 0, 509, 252,
	510, 0, 253, 254, 255, 256, 257, 0, 0, 0,
	258, 511, 512, 513, 0, 259, 260, 514, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	0, 0, 279, 280, 281, 282, 0, 283, 515, 516,
	0, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 292, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 517, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 518, 519, 0, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 520, 0, 0,
	0, 314, 0, 315, 0, 0, 0, 316, 317, 521,
	522, 318, 319, 0, 320, 523, 0, 524, 321, 0,
	322, 323, 324, 325, 326, 525, 526, 527, 380, 0,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	235, 333, 334, 336, 0, 0, 335, 528, 529, 0,
	530, 0, 337, 0, 531, 0, 338, 339, 340, 0,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 532, 0, 350, 351, 0, 0,
	352, 353, 354, 0, 0, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 0, 371, 372, 373, 376, 377, 375,
	0, 374, 0, 236, 0, 378, 0, 533, 379, 534,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 0, 390, 0, 536,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 539, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	541, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 0, 428, 429, 430, 431, 542,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 0,
	452, 436, 437, 453, 454, 0, 455, 456, 543, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 544,
	463, 464, 465, 466, 545, 0, 469, 470, 0, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 546, 547, 548, 549, 0, 485, 0, 479, 480,
	550, 481, 551, 0, 482, 483, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 492, 493, 491, 494, 0,
	495, 0, 0, 496, 497, 498, 552, 553, 554, 0,
	500, 499, 555, 0, 1338, 0, 231, 501, 502, 556,
	503, 504, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 1727, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	0, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 525,
	526, 527, 380, 0, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 0, 0,
	335, 528, 529, 0, 530, 0, 337, 0, 531, 0,
	338, 339, 340, 0, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 0,
	350, 351, 0, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 0, 371, 372,
	373, 376, 377, 375, 0, 374, 0, 236, 0, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	0, 390, 0, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 0, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 0,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 0, 500, 499, 555, 0, 231, 2563,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 1342, 506,
	0, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 0, 253, 254,
	255, 256, 257, 0, 0, 0, 258, 511, 512, 513,
	0, 259, 260, 514, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 0, 0, 279, 280,
	281, 282, 0, 283, 515, 516, 0, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 292,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 0, 315,
	0, 0, 0, 316, 317, 521, 522, 318, 319, 0,
	320, 523, 0, 524, 321, 0, 322, 323, 324, 325,
	326, 525, 526, 527, 380, 0, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 0, 333, 334, 336,
	0, 0, 335, 528, 529, 0, 530, 0, 337, 0,
	531, 0, 338, 339, 340, 0, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	532, 0, 350, 351, 0, 0, 352, 353, 354, 0,
	0, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 0,
	371, 372, 373, 376, 377, 375, 0, 374, 0, 0,
	0, 378, 0, 533, 379, 534, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 0, 390, 0, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	0, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 0, 452, 436, 437, 453,
	454, 0, 455, 456, 543, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 0, 469, 470, 0, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 546, 547, 548,
	549, 0, 485, 0, 479, 480, 550, 481, 551, 0,
	482, 483, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 492, 493, 491, 494, 0, 495, 0, 0, 496,
	497, 498, 552, 553, 554, 0, 500, 499, 555, 231,
	0, 0, 0, 501, 502, 556, 503, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	506, 0, 4011, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 0, 259, 260, 514, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 281, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 0, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 525, 526, 527, 380, 0, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 0, 0, 335, 528, 529, 0, 530, 0, 337,
	0, 531, 0, 338, 339, 340, 0, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 0, 350, 351, 0, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	0, 371, 372, 373, 376, 377, 375, 0, 374, 0,
	236, 0, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 0, 390, 0, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 0, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 0, 452, 436, 437,
	453, 454, 0, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 231, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 2968, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	0, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 525,
	526, 527, 380, 0, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 0, 0,
	335, 528, 529, 0, 530, 0, 337, 0, 531, 0,
	338, 339, 340, 0, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 0,
	350, 351, 0, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 0, 371, 372,
	373, 376, 377, 375, 0, 374, 0, 236, 0, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	0, 390, 0, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 0, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 0,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 231, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 1342, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 0, 253, 254, 255, 256, 257, 0, 0,
	0, 258, 511, 512, 513, 0, 259, 260, 514, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 0, 0, 279, 280, 281, 282, 0, 283, 515,
	516, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 292, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 518, 519, 0, 0,
	0, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 0, 315, 0, 0, 0, 316, 317,
	521, 522, 318, 319, 0, 320, 523, 0, 524, 321,
	0, 322, 323, 324, 325, 326, 525, 526, 527, 380,
	0, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 0, 333, 334, 336, 0, 0, 335, 528, 529,
	0, 530, 0, 337, 0, 531, 0, 338, 339, 340,
	0, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 532, 0, 350, 351, 0,
	0, 352, 353, 354, 0, 0, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 0, 371, 372, 373, 376, 377,
	375, 0, 374, 0, 0, 0, 378, 0, 533, 379,
	534, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 0, 390, 0,
	536, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 539, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 0, 428, 429, 430, 431,
	542, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	0, 452, 436, 437, 453, 454, 0, 455, 456, 543,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 545, 0, 469, 470, 0,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 546, 547, 548, 549, 0, 485, 0, 479,
	480, 550, 481, 551, 0, 482, 483, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 492, 493, 491, 494,
	0, 495, 0, 0, 496, 497, 498, 552, 553, 554,
	0, 500, 499, 555, 231, 0, 0, 0, 501, 502,
	556, 503, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	0, 0, 0, 0, 0, 506, 0, 2538, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 508, 0,
	509, 252, 510, 0, 253, 254, 255, 256, 257, 0,
	0, 0, 258, 511, 512, 513, 0, 259, 260, 514,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 0, 0, 279, 280, 281, 282, 0, 283,
	515, 516, 0, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 292, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 517, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 518, 519, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 520,
	0, 0, 0, 314, 0, 315, 0, 0, 0, 316,
	317, 521, 522, 318, 319, 0, 320, 523, 0, 524,
	321, 0, 322, 323, 324, 325, 326, 525, 526, 527,
	380, 0, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 0, 333, 334, 336, 0, 0, 335, 528,
	529, 0, 530, 0, 337, 0, 531, 0, 338, 339,
	340, 0, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 532, 0, 350, 351,
	0, 0, 352, 353, 354, 0, 0, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 0, 371, 372, 373, 376,
	377, 375, 0, 374, 0, 0, 0, 378, 0, 533,
	379, 534, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 0, 390,
	0, 536, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 539, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 541, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 0, 428, 429, 430,
	431, 542, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 0, 447, 448, 446, 449, 450,
	451, 0, 452, 436, 437, 453, 454, 0, 455, 456,
	543, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 544, 463, 464, 465, 466, 545, 0, 469, 470,
	0, 468, 0, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 546, 547, 548, 549, 0, 485, 0,
	479, 480, 550, 481, 551, 0, 482, 483, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 492, 493, 491,
	494, 0, 495, 0, 0, 496, 497, 498, 552, 553,
	554, 0, 500, 499, 555, 231, 0, 0, 0, 501,
	502, 556, 503, 504, 505, 0, 0, 0, 0, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 506, 0, 3108, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 508,
	0, 509, 252, 510, 0, 253, 254, 255, 256, 257,
	0, 0, 0, 258, 511, 512, 513, 0, 259, 260,
	514, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 0, 0, 279, 280, 281, 282, 0,
	283, 515, 516, 0, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 292, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 517, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 518, 519,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	520, 0, 0, 0, 314, 0, 315, 0, 0, 0,
	316, 317, 521, 522, 318, 319, 0, 320, 523, 0,
	524, 321, 0, 322, 323, 324, 325, 326, 525, 526,
	527, 380, 0, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 0, 333, 334, 336, 0, 0, 335,
	528, 529, 0, 530, 0, 337, 0, 531, 0, 338,
	339, 340, 0, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 532, 0, 350,
	351, 0, 0, 352, 353, 354, 0, 0, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 0, 371, 372, 373,
	376, 377, 375, 0, 374, 0, 0, 0, 378, 0,
	533, 379, 534, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 0,
	390, 0, 536, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 539, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 541, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 0, 428, 429,
	430, 431, 542, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 0, 452, 436, 437, 453, 454, 0, 455,
	456, 543, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 544, 463, 464, 465, 466, 545, 0, 469,
	470, 0, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 546, 547, 548, 549, 0, 485,
	0, 479, 480, 550, 481, 551, 0, 482, 483, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 492, 493,
	491, 494, 0, 495, 0, 0, 496, 497, 498, 552,
	553, 554, 0, 500, 499, 555, 0, 754, 0, 638,
	501, 502, 556, 503, 504, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 1981,
	506, 0, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 0, 259, 260, 514, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 645, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 752, 0, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 525, 526, 527, 380, 0, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 0, 0, 335, 528, 529, 0, 530, 0, 337,
	0, 531, 0, 338, 339, 340, 0, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 0, 350, 351, 0, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	0, 371, 372, 373, 376, 377, 375, 0, 374, 0,
	236, 0, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 0, 390, 0, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 0, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 0, 452, 436, 437,
	453, 454, 0, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 643, 471, 472,
	473, 474, 644, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 0, 500, 499, 555,
	0, 636, 0, 638, 501, 502, 556, 503, 504, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 648, 243, 244, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 0, 253, 254, 255, 256, 257, 0, 0,
	0, 258, 511, 512, 513, 0, 259, 260, 514, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 0, 0, 279, 280, 645, 282, 0, 283, 515,
	516, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 292, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 518, 519, 0, 234,
	0, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 0, 315, 0, 0, 0, 316, 317,
	521, 522, 318, 319, 0, 320, 523, 0, 524, 321,
	0, 322, 323, 324, 325, 326, 525, 526, 527, 380,
	0, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 235, 333, 334, 336, 0, 0, 335, 528, 529,
	0, 530, 0, 337, 0, 531, 0, 338, 339, 340,
	0, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 532, 0, 350, 351, 0,
	0, 352, 353, 354, 0, 0, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 0, 371, 372, 373, 376, 377,
	375, 0, 374, 0, 236, 0, 378, 0, 533, 379,
	534, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 0, 390, 0,
	536, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 539, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 0, 428, 429, 430, 431,
	542, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	0, 452, 436, 437, 453, 454, 0, 455, 456, 543,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 545, 0, 469, 470, 0,
	468, 643, 471, 472, 473, 474, 644, 476, 305, 477,
	0, 478, 546, 547, 548, 549, 0, 485, 0, 479,
	480, 550, 481, 551, 0, 482, 483, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 492, 493, 491, 494,
	0, 495, 0, 0, 496, 497, 498, 552, 553, 554,
	638, 500, 499, 555, 0, 0, 0, 0, 501, 502,
	556, 503, 504, 505, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	648, 506, 0, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 0,
	253, 254, 255, 256, 257, 0, 0, 0, 258, 511,
	512, 513, 0, 259, 260, 514, 0, 0, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 0, 0,
	279, 280, 645, 282, 0, 283, 515, 516, 0, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 292, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 518, 519, 0, 234, 0, 0, 0,
	0, 0, 311, 312, 313, 520, 0, 0, 0, 314,
	0, 315, 0, 0, 0, 316, 317, 521, 522, 318,
	319, 0, 320, 523, 0, 524, 321, 0, 322, 323,
	324, 325, 326, 525, 526, 527, 380, 0, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 235, 333,
	334, 336, 0, 0, 335, 528, 529, 0, 530, 0,
	337, 0, 531, 0, 338, 339, 340, 0, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 532, 0, 350, 351, 0, 0, 352, 353,
	354, 0, 0, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 0, 371, 372, 373, 376, 377, 375, 0, 374,
	0, 236, 0, 378, 0, 533, 379, 534, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 0, 390, 0, 536, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 539, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 541, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 0, 428, 429, 430, 431, 542, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 0, 452, 436,
	437, 453, 454, 0, 455, 456, 543, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 545, 0, 469, 470, 0, 468, 643, 471,
	472, 473, 474, 644, 476, 305, 477, 0, 478, 546,
	547, 548, 549, 0, 485, 0, 479, 480, 550, 481,
	551, 0, 482, 483, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 492, 493, 491, 494, 0, 495, 0,
	0, 496, 497, 498, 552, 553, 554, 638, 500, 499,
	555, 0, 0, 0, 0, 501, 502, 556, 503, 504,
	505, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 648, 506, 0,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 0, 253, 254, 255,
	256, 257, 0, 0, 0, 258, 511, 512, 513, 0,
	259, 260, 514, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 0, 0, 279, 280, 645,
	282, 0, 283, 515, 516, 0, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 292, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	518, 519, 0, 234, 0, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 0, 315, 0,
	0, 0, 316, 317, 521, 522, 318, 319, 0, 320,
	523, 0, 524, 321, 0, 322, 323, 324, 325, 326,
	525, 526, 527, 380, 0, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 235, 333, 334, 336, 0,
	0, 335, 528, 529, 0, 530, 0, 337, 0, 531,
	0, 338, 339, 340, 0, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 532,
	0, 350, 351, 0, 0, 352, 353, 354, 0, 0,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 0, 371,
	372, 373, 376, 377, 375, 0, 374, 0, 236, 0,
	378, 0, 533, 379, 534, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 0, 390, 0, 536, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	539, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 541, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 0,
	2017, 429, 430, 431, 542, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 450, 451, 0, 452, 436, 437, 453, 454,
	0, 455, 456, 543, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 545,
	0, 469, 470, 0, 468, 643, 471, 472, 473, 474,
	644, 476, 305, 477, 0, 478, 546, 547, 548, 549,
	0, 485, 0, 479, 480, 550, 481, 551, 0, 482,
	483, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	492, 493, 491, 494, 0, 495, 0, 0, 496, 497,
	498, 552, 553, 554, 1762, 500, 499, 555, 0, 0,
	0, 0, 501, 502, 556, 503, 504, 505, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	0, 0, 0, 0, 648, 0, 0, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 0, 1768, 0,
	1758, 252, 1774, 0, 253, 254, 255, 256, 257, 0,
	0, 0, 258, 1783, 1784, 0, 0, 259, 260, 0,
	0, 1219, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 1012, 277, 278, 0, 0, 0,
	0, 0, 0, 0, 279, 280, 281, 282, 996, 283,
	1772, 1771, 0, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 981, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 0, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 1770,
	0, 0, 0, 314, 0, 315, 0, 0, 1013, 316,
	317, 1779, 1780, 318, 319, 0, 320, 0, 0, 0,
	321, 0, 322, 323, 324, 325, 326, 0, 0, 0,
	380, 1015, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 0, 333, 334, 336, 0, 1014, 335, 1765,
	1766, 0, 1761, 0, 337, 1016, 0, 1017, 338, 339,
	340, 1018, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 0, 1019, 350, 351,
	1020, 0, 352, 353, 354, 0, 0, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 1021, 371, 372, 373, 376,
	377, 375, 1022, 374, 0, 0, 1023, 378, 0, 0,
	379, 1773, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 0, 1024, 390,
	1025, 0, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 1755, 1756, 0, 402, 0,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 1769, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 1026, 428, 429, 430,
	431, 0, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 0, 447, 448, 446, 449, 450,
	451, 0, 452, 436, 437, 453, 454, 1027, 455, 456,
	1767, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 1782, 463, 464, 465, 466, 0, 0, 469, 470,
	0, 468, 0, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 1775, 1776, 1777, 1778, 0, 485, 0,
	479, 480, 0, 481, 0, 0, 482, 483, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 492, 493, 491,
	494, 0, 495, 0, 0, 496, 497, 498, 0, 1759,
	1781, 0, 500, 499, 0, 0, 0, 0, 0, 501,
	502, 0, 503, 504, 505, 1250, 1249, 0, 0, 0,
	0, 1247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 1749, 0, 0, 0, 506, 0, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 508,
	0, 509, 252, 510, 0, 253, 254, 255, 256, 257,
	0, 0, 0, 258, 511, 512, 513, 0, 259, 260,
	514, 0, 1219, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 1012, 277, 278, 0, 0,
	0, 0, 0, 0, 0, 279, 280, 281, 282, 0,
	283, 515, 516, 0, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 292, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 517, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 518, 519,
	0, 234, 0, 0, 0, 0, 0, 311, 312, 313,
	520, 0, 0, 0, 314, 0, 315, 0, 0, 1013,
	316, 317, 521, 522, 318, 319, 0, 320, 523, 0,
	524, 321, 0, 322, 323, 324, 325, 326, 525, 526,
	527, 380, 1015, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 0, 333, 334, 336, 0, 1014, 335,
	528, 529, 0, 530, 0, 337, 1016, 531, 1017, 338,
	339, 340, 1018, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 532, 1019, 350,
	351, 1020, 0, 352, 353, 354, 0, 0, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 1021, 371, 372, 373,
	376, 377, 375, 1022, 374, 0, 0, 1023, 378, 3264,
	533, 379, 534, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 1024,
	390, 1025, 536, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 539, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 541, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 1026, 428, 429,
	430, 431, 542, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 0, 452, 436, 437, 453, 454, 1027, 455,
	456, 543, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 544, 463, 464, 465, 466, 545, 0, 469,
	470, 0, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 546, 547, 548, 549, 0, 485,
	0, 479, 480, 550, 481, 551, 0, 482, 483, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 492, 493,
	491, 494, 0, 495, 0, 0, 496, 497, 498, 552,
	553, 554, 0, 500, 499, 555, 0, 0, 0, 0,
	501, 502, 556, 503, 504, 505, 1250, 1249, 0, 0,
	0, 0, 1247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 1219, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 1012, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	1013, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 525,
	526, 527, 380, 1015, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 0, 333, 334, 336, 0, 1014,
	335, 528, 529, 0, 530, 0, 337, 1016, 531, 1017,
	338, 339, 340, 1018, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 1019,
	350, 351, 1020, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 1021, 371, 372,
	373, 376, 377, 375, 1022, 374, 0, 0, 1023, 378,
	2948, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	1024, 390, 1025, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 1026, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 1027,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 0, 500, 499, 555, 1250, 1249, 0,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	0, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 0, 253, 254, 255,
	256, 257, 0, 0, 0, 258, 511, 512, 513, 0,
	259, 260, 514, 0, 1219, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 1012, 277, 278,
	0, 0, 0, 0, 0, 0, 2939, 279, 280, 281,
	282, 0, 283, 515, 516, 0, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 292, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	518, 519, 0, 234, 0, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 0, 315, 0,
	0, 1013, 316, 317, 521, 522, 318, 319, 0, 320,
	523, 0, 524, 321, 0, 322, 323, 324, 325, 326,
	525, 526, 527, 380, 1015, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 0, 333, 334, 336, 0,
	1014, 335, 528, 529, 0, 530, 0, 337, 1016, 531,
	1017, 338, 339, 340, 1018, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 532,
	1019, 350, 351, 1020, 0, 352, 353, 354, 0, 0,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 1021, 371,
	372, 373, 376, 377, 375, 1022, 374, 0, 0, 1023,
	378, 0, 533, 379, 534, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 1024, 390, 1025, 536, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	539, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 541, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 1026,
	428, 429, 430, 431, 542, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 450, 451, 2940, 452, 436, 437, 453, 454,
	1027, 455, 456, 543, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 545,
	0, 469, 470, 0, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 546, 547, 548, 549,
	0, 485, 0, 479, 480, 550, 481, 551, 0, 482,
	483, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	492, 493, 491, 494, 0, 495, 0, 0, 496, 497,
	498, 552, 553, 554, 231, 500, 499, 555, 0, 0,
	0, 0, 501, 502, 556, 503, 504, 505, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	0, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 508, 0,
	509, 252, 510, 0, 253, 254, 255, 256, 257, 0,
	0, 0, 258, 511, 512, 513, 0, 259, 260, 514,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 0, 0, 279, 280, 281, 282, 0, 283,
	515, 516, 0, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 292, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 517, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 518, 519, 0,
	234, 0, 0, 0, 0, 0, 311, 312, 313, 520,
	0, 0, 0, 314, 0, 315, 0, 0, 0, 316,
	317, 521, 522, 318, 319, 0, 320, 523, 0, 524,
	321, 0, 322, 323, 324, 325, 326, 525, 526, 527,
	380, 0, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 235, 333, 334, 336, 0, 0, 335, 528,
	529, 0, 530, 0, 337, 0, 531, 0, 338, 339,
	340, 0, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 532, 0, 350, 351,
	0, 0, 352, 353, 354, 0, 0, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 0, 371, 372, 373, 376,
	377, 375, 0, 374, 0, 236, 0, 378, 0, 533,
	379, 534, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 0, 390,
	0, 536, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 539, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 541, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 0, 428, 429, 430,
	431, 542, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 0, 447, 448, 446, 449, 450,
	451, 0, 452, 436, 437, 453, 454, 0, 455, 456,
	543, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 544, 463, 464, 465, 466, 545, 0, 469, 470,
	0, 468, 0, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 546, 547, 548, 549, 0, 485, 0,
	479, 480, 550, 481, 551, 0, 482, 483, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 492, 493, 491,
	494, 0, 495, 0, 0, 496, 497, 498, 552, 553,
	554, 0, 500, 499, 555, 0, 0, 0, 0, 501,
	502, 556, 503, 504, 505, 1441, 0, 1250, 1249, 0,
	0, 0, 0, 1247, 0, 0, 0, 0, 0, 0,
	0, 648, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 0, 253, 254, 255,
	256, 257, 0, 0, 0, 258, 511, 512, 513, 0,
	259, 260, 514, 0, 1219, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 1012, 277, 278,
	0, 0, 0, 0, 0, 0, 0, 279, 280, 281,
	282, 0, 283, 515, 516, 0, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 292, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	518, 519, 0, 234, 0, 0, 0, 0, 0, 1440,
	312, 313, 520, 0, 0, 0, 314, 0, 315, 0,
	0, 1013, 316, 317, 521, 522, 318, 319, 0, 320,
	523, 0, 524, 321, 0, 322, 323, 324, 325, 326,
	525, 526, 527, 380, 1015, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 0, 333, 334, 336, 0,
	1014, 335, 528, 529, 0, 530, 0, 337, 1016, 531,
	1017, 338, 339, 340, 1018, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 532,
	1019, 350, 351, 1020, 0, 352, 353, 354, 0, 0,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 1021, 371,
	372, 373, 376, 377, 375, 1022, 374, 0, 0, 1023,
	378, 0, 533, 379, 534, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 1024, 390, 1025, 536, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	539, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 1439, 412, 541, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 1026,
	428, 429, 430, 431, 542, 432, 0, 433, 439, 440,
	434, 435, 441, 1438, 443, 444, 445, 0, 447, 448,
	446, 449, 450, 451, 0, 452, 436, 437, 453, 454,
	1027, 455, 456, 543, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 545,
	0, 469, 470, 0, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 546, 547, 548, 549,
	0, 485, 0, 479, 480, 550, 481, 551, 0, 482,
	483, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	492, 493, 491, 494, 0, 495, 0, 0, 496, 497,
	498, 552, 553, 554, 0, 500, 499, 555, 0, 0,
	0, 0, 501, 502, 556, 503, 504, 505, 1384, 0,
	1250, 1249, 0, 0, 0, 0, 1247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 0,
	253, 254, 255, 256, 257, 0, 0, 0, 258, 511,
	512, 513, 0, 259, 260, 514, 0, 1219, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	1012, 277, 278, 0, 0, 0, 0, 0, 0, 0,
	279, 280, 281, 282, 0, 283, 515, 516, 0, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 292, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 518, 519, 0, 234, 0, 0, 0,
	0, 0, 311, 312, 313, 520, 0, 0, 0, 314,
	0, 315, 0, 0, 1013, 316, 317, 521, 522, 318,
	319, 0, 320, 523, 0, 524, 321, 0, 322, 323,
	324, 325, 326, 1383, 526, 527, 380, 1015, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 0, 333,
	334, 336, 0, 1014, 335, 528, 529, 0, 530, 0,
	337, 1016, 531, 1017, 338, 339, 340, 1018, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 532, 1019, 350, 351, 1020, 0, 352, 353,
	354, 0, 0, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 1021, 371, 372, 373, 376, 377, 375, 1022, 374,
	0, 0, 1023, 378, 0, 533, 379, 534, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 1024, 390, 1025, 536, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 539, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 541, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 1026, 428, 429, 430, 431, 542, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 0, 452, 436,
	437, 453, 454, 1027, 455, 456, 543, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 545, 0, 469, 470, 0, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 546,
	547, 548, 549, 0, 485, 0, 479, 480, 550, 481,
	551, 0, 482, 483, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 492, 493, 491, 494, 0, 495, 0,
	0, 496, 497, 498, 552, 553, 554, 0, 500, 499,
	555, 0, 0, 0, 0, 501, 502, 556, 503, 504,
	505, 1318, 0, 1250, 1249, 0, 0, 0, 0, 1247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 0, 253, 254, 255, 256, 257, 0, 0,
	0, 258, 511, 512, 513, 0, 259, 260, 514, 0,
	1219, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 1012, 277, 278, 0, 0, 0, 0,
	0, 0, 0, 279, 280, 281, 282, 0, 283, 515,
	516, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 292, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 518, 519, 0, 234,
	0, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 0, 315, 0, 0, 1013, 316, 317,
	521, 522, 318, 319, 0, 320, 523, 0, 524, 321,
	0, 322, 323, 324, 325, 326, 1317, 526, 527, 380,
	1015, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 0, 333, 334, 336, 0, 1014, 335, 528, 529,
	0, 530, 0, 337, 1016, 531, 1017, 338, 339, 340,
	1018, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 532, 1019, 350, 351, 1020,
	0, 352, 353, 354, 0, 0, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 1021, 371, 372, 373, 376, 377,
	375, 1022, 374, 0, 0, 1023, 378, 0, 533, 379,
	534, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 1024, 390, 1025,
	536, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 539, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 1026, 428, 429, 430, 431,
	542, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	0, 452, 436, 437, 453, 454, 1027, 455, 456, 543,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 545, 0, 469, 470, 0,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 546, 547, 548, 549, 0, 485, 0, 479,
	480, 550, 481, 551, 0, 482, 483, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 492, 493, 491, 494,
	0, 495, 0, 0, 496, 497, 498, 552, 553, 554,
	0, 500, 499, 555, 0, 0, 0, 0, 501, 502,
	556, 503, 504, 505, 1281, 0, 1250, 1249, 0, 0,
	0, 0, 1247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 1219, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 1012, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	1013, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 525,
	526, 527, 380, 1015, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 0, 333, 334, 336, 0, 1014,
	335, 528, 529, 0, 530, 0, 337, 1016, 531, 1017,
	338, 339, 340, 1018, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 1019,
	350, 351, 1020, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 1021, 371, 372,
	373, 376, 377, 375, 1022, 374, 0, 0, 1023, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	1024, 390, 1025, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 1026, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 1027,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 0, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 1245, 0, 1250,
	1249, 0, 0, 0, 0, 1247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 0, 259, 260, 514, 0, 1219, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 1012,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 281, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 1013, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 1244, 526, 527, 380, 1015, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 0, 333, 334,
	336, 0, 1014, 335, 528, 529, 0, 530, 0, 337,
	1016, 531, 1017, 338, 339, 340, 1018, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 1019, 350, 351, 1020, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	1021, 371, 372, 373, 376, 377, 375, 1022, 374, 0,
	0, 1023, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 1024, 390, 1025, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 1026, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 0, 452, 436, 437,
	453, 454, 1027, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 0, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	1250, 1249, 0, 0, 0, 0, 1247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 0,
	253, 254, 255, 256, 257, 0, 0, 0, 258, 511,
	512, 513, 0, 259, 260, 514, 0, 1219, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	1012, 277, 278, 0, 0, 0, 0, 0, 0, 0,
	279, 280, 281, 282, 0, 283, 515, 516, 0, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 292, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 518, 519, 0, 234, 0, 0, 0,
	0, 0, 311, 312, 313, 520, 0, 0, 0, 314,
	0, 315, 0, 0, 1013, 316, 317, 521, 522, 318,
	319, 0, 320, 523, 0, 524, 321, 0, 322, 323,
	324, 325, 326, 525, 526, 527, 380, 1015, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 0, 333,
	334, 336, 0, 1014, 335, 528, 529, 0, 530, 0,
	337, 1016, 531, 1017, 338, 339, 340, 1018, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 532, 1019, 350, 351, 1020, 0, 352, 353,
	354, 0, 0, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 1021, 371, 372, 373, 376, 377, 375, 1022, 374,
	0, 0, 1023, 378, 0, 533, 379, 534, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 1024, 390, 1025, 536, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 539, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 541, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 1026, 428, 429, 430, 431, 542, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 0, 452, 436,
	437, 453, 454, 1027, 455, 456, 543, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 545, 0, 469, 470, 0, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 546,
	547, 548, 549, 0, 485, 0, 479, 480, 550, 481,
	551, 0, 482, 483, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 492, 493, 491, 494, 0, 495, 0,
	0, 496, 497, 498, 552, 553, 554, 0, 500, 499,
	555, 1250, 1249, 0, 0, 501, 502, 556, 503, 504,
	505, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	0, 253, 254, 255, 256, 257, 0, 0, 0, 258,
	511, 512, 513, 0, 259, 260, 514, 0, 1219, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 1012, 277, 278, 0, 0, 0, 0, 0, 0,
	0, 279, 280, 281, 282, 0, 283, 515, 516, 1793,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 292, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 518, 519, 0, 234, 0, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 0, 315, 0, 0, 1013, 316, 317, 521, 522,
	318, 319, 0, 320, 523, 0, 524, 321, 0, 322,
	323, 324, 325, 326, 525, 526, 527, 380, 1015, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 0,
	333, 334, 336, 0, 1014, 335, 528, 529, 0, 530,
	0, 337, 1016, 531, 1017, 338, 339, 340, 1018, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 532, 1019, 350, 351, 1020, 0, 352,
	353, 354, 0, 0, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 1021, 371, 372, 373, 376, 377, 375, 1022,
	374, 0, 0, 1023, 378, 0, 533, 379, 534, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 1024, 390, 1025, 536, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 539, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 1026, 428, 429, 430, 431, 542, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 0, 452,
	436, 437, 453, 454, 1027, 455, 456, 543, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 545, 0, 469, 470, 0, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	546, 547, 548, 549, 0, 485, 0, 479, 480, 550,
	481, 551, 0, 482, 483, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 492, 493, 491, 494, 0, 495,
	0, 0, 496, 497, 498, 552, 553, 554, 0, 500,
	499, 555, 1250, 1249, 0, 0, 501, 502, 556, 503,
	504, 505, 0, 0, 0, 0, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 508, 0, 509, 252,
	510, 0, 253, 254, 255, 256, 257, 0, 0, 0,
	258, 511, 512, 513, 0, 259, 260, 514, 0, 1219,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 1012, 277, 278, 0, 0, 0, 0, 0,
	0, 0, 279, 280, 281, 282, 0, 283, 515, 516,
	0, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 292, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 517, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 518, 519, 0, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 520, 0, 0,
	0, 314, 0, 315, 0, 0, 1013, 316, 317, 521,
	522, 318, 319, 0, 320, 523, 0, 524, 321, 0,
	322, 323, 324, 325, 326, 525, 526, 527, 380, 1015,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	0, 333, 334, 336, 0, 1014, 335, 528, 529, 0,
	530, 0, 337, 1016, 531, 1017, 338, 339, 340, 1018,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 532, 1019, 350, 351, 1020, 0,
	352, 353, 354, 0, 0, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 1021, 371, 372, 373, 376, 377, 375,
	1022, 374, 0, 0, 1023, 378, 0, 533, 379, 534,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 1024, 390, 1025, 536,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 539, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	541, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 1026, 428, 429, 430, 431, 542,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 0,
	452, 436, 437, 453, 454, 1027, 455, 456, 543, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 544,
	463, 464, 465, 466, 545, 0, 469, 470, 0, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 546, 547, 548, 549, 0, 485, 0, 479, 480,
	550, 481, 551, 0, 482, 483, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 492, 493, 491, 494, 0,
	495, 0, 0, 496, 497, 498, 552, 553, 554, 1250,
	500, 499, 555, 0, 0, 0, 0, 501, 502, 556,
	503, 504, 505, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 0, 259, 260, 514, 0, 1219, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 1012,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 281, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 1013, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 525, 526, 527, 380, 1015, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 0, 333, 334,
	336, 0, 1014, 335, 528, 529, 0, 530, 0, 337,
	1016, 531, 1017, 338, 339, 340, 1018, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 1019, 350, 351, 1020, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	1021, 371, 372, 373, 376, 377, 375, 1022, 374, 0,
	0, 1023, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 1024, 390, 1025, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 1026, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 0, 452, 436, 437,
	453, 454, 1027, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 231, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 2405, 259,
	260, 514, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 2402, 272,
	0, 273, 274, 275, 0, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 2409, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 2576, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 2408, 0,
	0, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 525,
	526, 527, 380, 0, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 2573, 333, 334, 336, 0, 0,
	335, 528, 529, 0, 530, 0, 2575, 0, 531, 0,
	338, 339, 340, 0, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 0,
	350, 351, 2572, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 0, 371, 372,
	373, 376, 377, 375, 0, 374, 0, 0, 0, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	0, 390, 0, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 2407, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 0, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 0,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 2574, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 231, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 0, 253, 254, 255, 256, 257, 0, 0,
	0, 258, 511, 512, 513, 2405, 259, 260, 514, 0,
	0, 2399, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 2402, 272, 0, 273, 274,
	275, 0, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 0, 0, 279, 280, 281, 282, 0, 283, 515,
	516, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 292, 293, 0, 294, 295, 0,
	296, 297, 0, 2409, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 518, 519, 0, 0,
	0, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 0, 315, 2408, 0, 0, 316, 317,
	521, 522, 318, 319, 0, 320, 523, 0, 524, 321,
	0, 322, 323, 324, 325, 326, 2398, 526, 527, 380,
	0, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 0, 333, 334, 336, 0, 0, 335, 528, 529,
	0, 530, 0, 337, 0, 531, 0, 338, 339, 340,
	0, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 532, 0, 350, 351, 0,
	0, 352, 353, 354, 0, 0, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 0, 371, 372, 373, 376, 377,
	375, 0, 374, 0, 0, 0, 378, 0, 533, 379,
	534, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 0, 390, 0,
	536, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 539, 402, 540, 403,
	404, 2407, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 0, 428, 429, 430, 431,
	542, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	0, 452, 436, 437, 453, 454, 0, 455, 456, 543,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 545, 0, 469, 470, 0,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 546, 547, 548, 549, 0, 485, 0, 479,
	480, 550, 481, 551, 0, 482, 483, 484, 0, 486,
	487, 0, 2406, 488, 489, 490, 492, 493, 491, 494,
	0, 495, 0, 0, 496, 497, 498, 552, 553, 554,
	0, 500, 499, 555, 1499, 0, 231, 0, 501, 502,
	556, 503, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	0, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 525,
	526, 527, 380, 0, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 0, 0,
	335, 528, 529, 0, 530, 0, 337, 0, 531, 0,
	338, 339, 340, 0, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 0,
	350, 351, 0, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 0, 371, 372,
	373, 376, 377, 375, 0, 374, 0, 236, 0, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	0, 390, 0, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 0, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 1502, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 0,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 1500, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 0, 1501, 499, 555, 1223, 0, 231,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 0, 259, 260, 514, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 281, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 0, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 1225, 526, 527, 380, 0, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 0, 0, 335, 528, 529, 0, 530, 0, 337,
	0, 531, 0, 338, 339, 340, 0, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 0, 350, 351, 0, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	0, 371, 372, 373, 376, 377, 375, 0, 374, 0,
	236, 0, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 1061, 385, 386, 387, 0, 0,
	388, 389, 535, 0, 390, 0, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 0, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 0, 452, 436, 437,
	453, 454, 0, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 0, 500, 499, 555,
	1220, 0, 231, 0, 501, 502, 556, 503, 504, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 508, 0, 509, 252,
	510, 0, 253, 254, 255, 256, 257, 0, 0, 0,
	258, 511, 512, 513, 0, 259, 260, 514, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	0, 0, 279, 280, 281, 282, 0, 283, 515, 516,
	0, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 292, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 517, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 518, 519, 0, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 520, 0, 0,
	0, 314, 0, 315, 0, 0, 0, 316, 317, 521,
	522, 318, 319, 0, 320, 523, 0, 524, 321, 0,
	322, 323, 324, 325, 326, 1222, 526, 527, 380, 0,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	235, 333, 334, 336, 0, 0, 335, 528, 529, 0,
	530, 0, 337, 0, 531, 0, 338, 339, 340, 0,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 532, 0, 350, 351, 0, 0,
	352, 353, 354, 0, 0, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 0, 371, 372, 373, 376, 377, 375,
	0, 374, 0, 236, 0, 378, 0, 533, 379, 534,
	381, 382, 0, 0, 383, 0, 0, 1061, 385, 386,
	387, 0, 0, 388, 389, 535, 0, 390, 0, 536,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 539, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	541, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 0, 428, 429, 430, 431, 542,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 0,
	452, 436, 437, 453, 454, 0, 455, 456, 543, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 544,
	463, 464, 465, 466, 545, 0, 469, 470, 0, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 546, 547, 548, 549, 0, 485, 0, 479, 480,
	550, 481, 551, 0, 482, 483, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 492, 493, 491, 494, 0,
	495, 0, 0, 496, 497, 498, 552, 553, 554, 0,
	500, 499, 555, 1126, 0, 231, 0, 501, 502, 556,
	503, 504, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 508,
	0, 509, 252, 510, 0, 253, 254, 255, 256, 257,
	0, 0, 0, 258, 511, 512, 513, 0, 259, 260,
	514, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 0, 0, 279, 280, 281, 282, 0,
	283, 515, 516, 0, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 292, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 517, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 518, 519,
	0, 234, 0, 0, 0, 0, 0, 311, 312, 313,
	520, 0, 0, 0, 314, 0, 315, 0, 0, 0,
	316, 317, 521, 522, 318, 319, 0, 320, 523, 0,
	524, 321, 0, 322, 323, 324, 325, 326, 1128, 526,
	527, 380, 0, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 235, 333, 334, 336, 0, 0, 335,
	528, 529, 0, 530, 0, 337, 0, 531, 0, 338,
	339, 340, 0, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 532, 0, 350,
	351, 0, 0, 352, 353, 354, 0, 0, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 0, 371, 372, 373,
	376, 377, 375, 0, 374, 0, 236, 0, 378, 0,
	533, 379, 534, 381, 382, 0, 0, 383, 0, 0,
	1061, 385, 386, 387, 0, 0, 388, 389, 535, 0,
	390, 0, 536, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 539, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 541, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 0, 428, 429,
	430, 431, 542, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 0, 452, 436, 437, 453, 454, 0, 455,
	456, 543, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 544, 463, 464, 465, 466, 545, 0, 469,
	470, 0, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 546, 547, 548, 549, 0, 485,
	0, 479, 480, 550, 481, 551, 0, 482, 483, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 492, 493,
	491, 494, 0, 495, 0, 0, 496, 497, 498, 552,
	553, 554, 0, 500, 499, 555, 588, 0, 231, 0,
	501, 502, 556, 503, 504, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 238, 239, 587, 241,
	242, 577, 243, 244, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 0, 253, 254,
	255, 256, 257, 0, 0, 0, 258, 511, 512, 513,
	0, 259, 260, 514, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 580, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 0, 0, 279, 280,
	281, 282, 0, 283, 515, 516, 0, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 292,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 0, 315,
	0, 0, 0, 316, 317, 521, 522, 318, 319, 581,
	320, 523, 0, 524, 321, 0, 322, 323, 324, 325,
	326, 525, 526, 527, 380, 0, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 0, 333, 334, 336,
	0, 0, 335, 528, 529, 0, 530, 0, 337, 0,
	531, 0, 338, 339, 340, 0, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	532, 0, 350, 351, 0, 0, 352, 353, 354, 0,
	0, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 0,
	371, 372, 373, 376, 377, 375, 0, 374, 0, 0,
	0, 378, 0, 533, 379, 534, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 0, 390, 0, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	0, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 582, 447,
	448, 446, 449, 450, 451, 0, 452, 436, 437, 453,
	454, 0, 455, 456, 543, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 0, 469, 470, 0, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 546, 547, 548,
	549, 0, 485, 0, 479, 480, 550, 481, 551, 0,
	482, 483, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 492, 493, 491, 494, 0, 495, 0, 0, 496,
	497, 498, 552, 553, 554, 0, 500, 499, 555, 576,
	0, 231, 0, 501, 502, 556, 503, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 577, 243, 244, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	0, 253, 254, 255, 256, 257, 0, 0, 0, 258,
	511, 512, 513, 0, 259, 260, 514, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 580,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 0,
	0, 279, 280, 281, 282, 0, 283, 515, 516, 0,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 292, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 518, 519, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 0, 315, 0, 0, 0, 316, 317, 521, 522,
	318, 319, 581, 320, 523, 0, 524, 321, 0, 322,
	323, 324, 325, 326, 525, 526, 527, 380, 0, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 0,
	333, 334, 336, 0, 0, 335, 528, 529, 0, 530,
	0, 337, 0, 531, 0, 338, 339, 340, 0, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 532, 0, 350, 351, 0, 0, 352,
	353, 354, 0, 0, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 0, 371, 372, 373, 376, 377, 375, 0,
	374, 0, 0, 0, 378, 0, 533, 379, 534, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 0, 390, 0, 536, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 539, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 0, 428, 429, 430, 431, 542, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 582, 447, 448, 446, 449, 450, 451, 0, 452,
	436, 437, 453, 454, 0, 455, 456, 543, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 545, 0, 469, 470, 0, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	546, 547, 548, 549, 0, 485, 0, 479, 480, 550,
	481, 551, 0, 482, 483, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 492, 493, 491, 494, 0, 495,
	0, 0, 496, 497, 498, 552, 553, 554, 231, 500,
	499, 555, 0, 0, 0, 0, 501, 502, 556, 503,
	504, 505, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 0, 253, 254,
	255, 256, 257, 0, 0, 0, 258, 511, 512, 513,
	0, 259, 260, 514, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 0, 0, 279, 280,
	281, 282, 0, 283, 515, 516, 0, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 292,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 0, 234, 0, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 0, 315,
	0, 0, 0, 316, 317, 521, 522, 318, 319, 0,
	320, 523, 0, 524, 321, 0, 322, 323, 324, 325,
	326, 525, 526, 527, 380, 0, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 235, 333, 334, 336,
	0, 0, 335, 528, 529, 0, 530, 0, 337, 0,
	531, 0, 338, 339, 340, 0, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	532, 0, 350, 351, 0, 0, 352, 353, 354, 0,
	0, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 0,
	371, 372, 373, 376, 377, 375, 2914, 374, 0, 236,
	0, 378, 0, 533, 379, 534, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 0, 390, 0, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	0, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 0, 452, 436, 437, 453,
	454, 0, 455, 456, 543, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 0, 469, 470, 0, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 546, 547, 548,
	549, 0, 485, 0, 479, 480, 550, 481, 551, 0,
	482, 483, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 492, 493, 491, 494, 0, 495, 0, 0, 496,
	497, 498, 552, 553, 554, 231, 500, 499, 555, 0,
	0, 0, 0, 501, 502, 556, 503, 504, 505, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 508,
	0, 509, 252, 510, 0, 253, 254, 255, 256, 257,
	0, 0, 0, 258, 511, 512, 513, 0, 259, 260,
	514, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 0, 0, 279, 280, 281, 282, 0,
	283, 515, 516, 0, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 292, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 517, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 518, 519,
	0, 234, 0, 0, 0, 0, 0, 311, 312, 313,
	520, 0, 0, 0, 314, 0, 315, 0, 0, 0,
	316, 317, 521, 522, 318, 319, 0, 320, 523, 0,
	524, 321, 0, 322, 323, 324, 325, 326, 525, 526,
	527, 380, 0, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 235, 333, 334, 336, 0, 0, 335,
	528, 529, 0, 530, 0, 337, 0, 531, 0, 338,
	339, 340, 0, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 532, 0, 350,
	351, 0, 0, 352, 353, 354, 0, 0, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 0, 371, 372, 373,
	376, 377, 375, 0, 374, 0, 236, 0, 378, 0,
	533, 379, 534, 381, 382, 0, 0, 383, 0, 0,
	1061, 385, 386, 387, 0, 0, 388, 389, 535, 0,
	390, 0, 536, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 539, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 541, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 0, 428, 429,
	430, 431, 542, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 0, 452, 436, 437, 453, 454, 0, 455,
	456, 543, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 544, 463, 464, 465, 466, 545, 0, 469,
	470, 0, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 546, 547, 548, 549, 0, 485,
	0, 479, 480, 550, 481, 551, 0, 482, 483, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 492, 493,
	491, 494, 0, 495, 0, 0, 496, 497, 498, 552,
	553, 554, 0, 500, 499, 555, 2510, 0, 231, 0,
	501, 502, 556, 503, 504, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 0, 253, 254,
	255, 256, 257, 0, 0, 0, 258, 511, 512, 513,
	0, 259, 260, 514, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 0, 0, 279, 280,
	281, 282, 0, 283, 515, 516, 0, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 292,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 0, 234, 0, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 0, 315,
	0, 0, 0, 316, 317, 521, 522, 318, 319, 0,
	320, 523, 0, 524, 321, 0, 322, 323, 324, 325,
	326, 2509, 526, 527, 380, 0, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 235, 333, 334, 336,
	0, 0, 335, 528, 529, 0, 530, 0, 337, 0,
	531, 0, 338, 339, 340, 0, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	532, 0, 350, 351, 0, 0, 352, 353, 354, 0,
	0, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 0,
	371, 372, 373, 376, 377, 375, 0, 374, 0, 236,
	0, 378, 0, 533, 379, 534, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 0, 390, 0, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	0, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 0, 452, 436, 437, 453,
	454, 0, 455, 456, 543, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 0, 469, 470, 0, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 546, 547, 548,
	549, 0, 485, 0, 479, 480, 550, 481, 551, 0,
	482, 483, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 492, 493, 491, 494, 0, 495, 0, 0, 496,
	497, 498, 552, 553, 554, 0, 500, 499, 555, 1993,
	0, 231, 0, 501, 502, 556, 503, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	0, 253, 254, 255, 256, 257, 0, 0, 0, 258,
	511, 512, 513, 0, 259, 260, 514, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 0,
	0, 279, 280, 281, 282, 0, 283, 515, 516, 0,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 292, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 518, 519, 0, 234, 0, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 0, 315, 0, 0, 0, 316, 317, 521, 522,
	318, 319, 0, 320, 523, 0, 524, 321, 0, 322,
	323, 324, 325, 326, 525, 526, 527, 380, 0, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 235,
	333, 334, 336, 0, 0, 335, 528, 529, 0, 530,
	0, 337, 0, 531, 0, 338, 339, 340, 0, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 532, 0, 350, 351, 0, 0, 352,
	353, 354, 0, 0, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 0, 371, 372, 373, 376, 377, 375, 0,
	374, 0, 236, 0, 378, 0, 533, 379, 534, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 0, 390, 0, 536, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 539, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 0, 428, 429, 430, 431, 542, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 0, 452,
	436, 437, 453, 454, 0, 455, 456, 543, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 545, 0, 469, 470, 0, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	546, 547, 548, 549, 0, 485, 0, 479, 480, 550,
	481, 551, 0, 482, 483, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 492, 493, 491, 494, 0, 495,
	0, 0, 496, 497, 498, 552, 553, 554, 231, 500,
	499, 555, 0, 0, 0, 0, 501, 502, 556, 503,
	504, 505, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 0, 253, 254,
	255, 256, 257, 0, 0, 0, 258, 511, 512, 513,
	0, 259, 260, 514, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 0, 0, 279, 280,
	281, 282, 0, 283, 515, 516, 0, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 292,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 0, 234, 0, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 0, 315,
	0, 0, 0, 316, 317, 521, 522, 318, 319, 0,
	320, 523, 0, 524, 321, 0, 322, 323, 324, 325,
	326, 525, 526, 527, 380, 0, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 235, 333, 334, 336,
	0, 0, 335, 528, 529, 0, 530, 0, 337, 0,
	531, 0, 338, 339, 340, 0, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	532, 0, 350, 351, 0, 0, 352, 353, 354, 0,
	0, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 0,
	371, 372, 373, 376, 377, 375, 0, 374, 0, 236,
	0, 378, 0, 533, 379, 534, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 0, 390, 0, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	0, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 0, 452, 436, 437, 453,
	454, 0, 455, 456, 543, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 0, 469, 470, 0, 468, 1919, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 546, 547, 548,
	549, 0, 485, 0, 479, 480, 550, 481, 551, 0,
	482, 483, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 492, 493, 491, 494, 0, 495, 0, 0, 496,
	497, 498, 552, 553, 554, 0, 500, 499, 555, 1924,
	0, 231, 0, 501, 502, 556, 503, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	0, 253, 254, 255, 256, 257, 0, 0, 0, 258,
	511, 512, 513, 0, 259, 260, 514, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 0,
	0, 279, 280, 281, 282, 0, 283, 515, 516, 0,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 292, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 518, 519, 0, 234, 0, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 0, 315, 0, 0, 0, 316, 317, 521, 522,
	318, 319, 0, 320, 523, 0, 524, 321, 0, 322,
	323, 324, 325, 326, 1923, 526, 527, 380, 0, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 235,
	333, 334, 336, 0, 0, 335, 528, 529, 0, 530,
	0, 337, 0, 531, 0, 338, 339, 340, 0, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 532, 0, 350, 351, 0, 0, 352,
	353, 354, 0, 0, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 0, 371, 372, 373, 376, 377, 375, 0,
	374, 0, 236, 0, 378, 0, 533, 379, 534, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 0, 390, 0, 536, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 539, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 0, 428, 429, 430, 431, 542, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 0, 452,
	436, 437, 453, 454, 0, 455, 456, 543, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 545, 0, 469, 470, 0, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	546, 547, 548, 549, 0, 485, 0, 479, 480, 550,
	481, 551, 0, 482, 483, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 492, 493, 491, 494, 0, 495,
	0, 0, 496, 497, 498, 552, 553, 554, 0, 500,
	499, 555, 1912, 0, 231, 0, 501, 502, 556, 503,
	504, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	0, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 508, 0,
	509, 252, 510, 0, 253, 254, 255, 256, 257, 0,
	0, 0, 258, 511, 512, 513, 0, 259, 260, 514,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 0, 0, 279, 280, 281, 282, 0, 283,
	515, 516, 0, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 292, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 517, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 518, 519, 0,
	234, 0, 0, 0, 0, 0, 311, 312, 313, 520,
	0, 0, 0, 314, 0, 315, 0, 0, 0, 316,
	317, 521, 522, 318, 319, 0, 320, 523, 0, 524,
	321, 0, 322, 323, 324, 325, 326, 1914, 526, 527,
	380, 0, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 235, 333, 334, 336, 0, 0, 335, 528,
	529, 0, 530, 0, 337, 0, 531, 0, 338, 339,
	340, 0, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 532, 0, 350, 351,
	0, 0, 352, 353, 354, 0, 0, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 0, 371, 372, 373, 376,
	377, 375, 0, 374, 0, 236, 0, 378, 0, 533,
	379, 534, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 0, 390,
	0, 536, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 539, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 541, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 0, 428, 429, 430,
	431, 542, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 0, 447, 448, 446, 449, 450,
	451, 0, 452, 436, 437, 453, 454, 0, 455, 456,
	543, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 544, 463, 464, 465, 466, 545, 0, 469, 470,
	0, 468, 0, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 546, 547, 548, 549, 0, 485, 0,
	479, 480, 550, 481, 551, 0, 482, 483, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 492, 493, 491,
	494, 0, 495, 0, 0, 496, 497, 498, 552, 553,
	554, 0, 500, 499, 555, 1380, 0, 231, 0, 501,
	502, 556, 503, 504, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 0, 253, 254, 255,
	256, 257, 0, 0, 0, 258, 511, 512, 513, 0,
	259, 260, 514, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 0, 0, 279, 280, 281,
	282, 0, 283, 515, 516, 0, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 292, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	518, 519, 0, 234, 0, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 0, 315, 0,
	0, 0, 316, 317, 521, 522, 318, 319, 0, 320,
	523, 0, 524, 321, 0, 322, 323, 324, 325, 326,
	1379, 526, 527, 380, 0, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 235, 333, 334, 336, 0,
	0, 335, 528, 529, 0, 530, 0, 337, 0, 531,
	0, 338, 339, 340, 0, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 532,
	0, 350, 351, 0, 0, 352, 353, 354, 0, 0,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 0, 371,
	372, 373, 376, 377, 375, 0, 374, 0, 236, 0,
	378, 0, 533, 379, 534, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 0, 390, 0, 536, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	539, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 541, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 0,
	428, 429, 430, 431, 542, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 450, 451, 0, 452, 436, 437, 453, 454,
	0, 455, 456, 543, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 545,
	0, 469, 470, 0, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 546, 547, 548, 549,
	0, 485, 0, 479, 480, 550, 481, 551, 0, 482,
	483, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	492, 493, 491, 494, 0, 495, 0, 0, 496, 497,
	498, 552, 553, 554, 0, 500, 499, 555, 1371, 0,
	231, 0, 501, 502, 556, 503, 504, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 0,
	253, 254, 255, 256, 257, 0, 0, 0, 258, 511,
	512, 513, 0, 259, 260, 514, 0, 0, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 0, 0,
	279, 280, 281, 282, 0, 283, 515, 516, 0, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 292, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 518, 519, 0, 234, 0, 0, 0,
	0, 0, 311, 312, 313, 520, 0, 0, 0, 314,
	0, 315, 0, 0, 0, 316, 317, 521, 522, 318,
	319, 0, 320, 523, 0, 524, 321, 0, 322, 323,
	324, 325, 326, 1370, 526, 527, 380, 0, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 235, 333,
	334, 336, 0, 0, 335, 528, 529, 0, 530, 0,
	337, 0, 531, 0, 338, 339, 340, 0, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 532, 0, 350, 351, 0, 0, 352, 353,
	354, 0, 0, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 0, 371, 372, 373, 376, 377, 375, 0, 374,
	0, 236, 0, 378, 0, 533, 379, 534, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 0, 390, 0, 536, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 539, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 541, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 0, 428, 429, 430, 431, 542, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 0, 452, 436,
	437, 453, 454, 0, 455, 456, 543, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 545, 0, 469, 470, 0, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 546,
	547, 548, 549, 0, 485, 0, 479, 480, 550, 481,
	551, 0, 482, 483, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 492, 493, 491, 494, 0, 495, 0,
	0, 496, 497, 498, 552, 553, 554, 0, 500, 499,
	555, 1368, 0, 231, 0, 501, 502, 556, 503, 504,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 0, 253, 254, 255, 256, 257, 0, 0,
	0, 258, 511, 512, 513, 0, 259, 260, 514, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 0, 0, 279, 280, 281, 282, 0, 283, 515,
	516, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 292, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 518, 519, 0, 234,
	0, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 0, 315, 0, 0, 0, 316, 317,
	521, 522, 318, 319, 0, 320, 523, 0, 524, 321,
	0, 322, 323, 324, 325, 326, 1367, 526, 527, 380,
	0, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 235, 333, 334, 336, 0, 0, 335, 528, 529,
	0, 530, 0, 337, 0, 531, 0, 338, 339, 340,
	0, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 532, 0, 350, 351, 0,
	0, 352, 353, 354, 0, 0, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 0, 371, 372, 373, 376, 377,
	375, 0, 374, 0, 236, 0, 378, 0, 533, 379,
	534, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 0, 390, 0,
	536, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 539, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 0, 428, 429, 430, 431,
	542, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	0, 452, 436, 437, 453, 454, 0, 455, 456, 543,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 545, 0, 469, 470, 0,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 546, 547, 548, 549, 0, 485, 0, 479,
	480, 550, 481, 551, 0, 482, 483, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 492, 493, 491, 494,
	0, 495, 0, 0, 496, 497, 498, 552, 553, 554,
	0, 500, 499, 555, 1364, 0, 231, 0, 501, 502,
	556, 503, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	0, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 1363,
	526, 527, 380, 0, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 0, 0,
	335, 528, 529, 0, 530, 0, 337, 0, 531, 0,
	338, 339, 340, 0, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 0,
	350, 351, 0, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 0, 371, 372,
	373, 376, 377, 375, 0, 374, 0, 236, 0, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	0, 390, 0, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 0, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 0,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 0, 500, 499, 555, 1320, 0, 231,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 0, 259, 260, 514, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 281, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 0, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 525, 526, 527, 380, 0, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 0, 0, 335, 528, 529, 0, 530, 0, 337,
	0, 531, 0, 338, 339, 340, 0, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 0, 350, 351, 0, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	0, 371, 372, 373, 376, 377, 375, 0, 374, 0,
	236, 0, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 0, 390, 0, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 0, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 0, 452, 436, 437,
	453, 454, 0, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 0, 500, 499, 555,
	1241, 0, 231, 0, 501, 502, 556, 503, 504, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 508, 0, 509, 252,
	510, 0, 253, 254, 255, 256, 257, 0, 0, 0,
	258, 511, 512, 513, 0, 259, 260, 514, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	0, 0, 279, 280, 281, 282, 0, 283, 515, 516,
	0, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 292, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 517, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 518, 519, 0, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 520, 0, 0,
	0, 314, 0, 315, 0, 0, 0, 316, 317, 521,
	522, 318, 319, 0, 320, 523, 0, 524, 321, 0,
	322, 323, 324, 325, 326, 525, 526, 527, 380, 0,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	235, 333, 334, 336, 0, 0, 335, 528, 529, 0,
	530, 0, 337, 0, 531, 0, 338, 339, 340, 0,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 532, 0, 350, 351, 0, 0,
	352, 353, 354, 0, 0, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 0, 371, 372, 373, 376, 377, 375,
	0, 374, 0, 236, 0, 378, 0, 533, 379, 534,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 0, 390, 0, 536,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 539, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	541, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 0, 428, 429, 430, 431, 542,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 0,
	452, 436, 437, 453, 454, 0, 455, 456, 543, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 544,
	463, 464, 465, 466, 545, 0, 469, 470, 0, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 546, 547, 548, 549, 0, 485, 0, 479, 480,
	550, 481, 551, 0, 482, 483, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 492, 493, 491, 494, 0,
	495, 0, 0, 496, 497, 498, 552, 553, 554, 0,
	500, 499, 555, 1234, 0, 231, 0, 501, 502, 556,
	503, 504, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 508,
	0, 509, 252, 510, 0, 253, 254, 255, 256, 257,
	0, 0, 0, 258, 511, 512, 513, 0, 259, 260,
	514, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 0, 0, 279, 280, 281, 282, 0,
	283, 515, 516, 0, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 292, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 517, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 518, 519,
	0, 234, 0, 0, 0, 0, 0, 311, 312, 313,
	520, 0, 0, 0, 314, 0, 315, 0, 0, 0,
	316, 317, 521, 522, 318, 319, 0, 320, 523, 0,
	524, 321, 0, 322, 323, 324, 325, 326, 1236, 526,
	527, 380, 0, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 235, 333, 334, 336, 0, 0, 335,
	528, 529, 0, 530, 0, 337, 0, 531, 0, 338,
	339, 340, 0, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 532, 0, 350,
	351, 0, 0, 352, 353, 354, 0, 0, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 0, 371, 372, 373,
	376, 377, 375, 0, 374, 0, 236, 0, 378, 0,
	533, 379, 534, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 0,
	390, 0, 536, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 539, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 541, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 0, 428, 429,
	430, 431, 542, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 0, 452, 436, 437, 453, 454, 0, 455,
	456, 543, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 544, 463, 464, 465, 466, 545, 0, 469,
	470, 0, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 546, 547, 548, 549, 0, 485,
	0, 479, 480, 550, 481, 551, 0, 482, 483, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 492, 493,
	491, 494, 0, 495, 0, 0, 496, 497, 498, 552,
	553, 554, 0, 500, 499, 555, 558, 0, 231, 0,
	501, 502, 556, 503, 504, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 0, 253, 254,
	255, 256, 257, 0, 0, 0, 258, 511, 512, 513,
	0, 259, 260, 514, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 0, 0, 279, 280,
	281, 282, 0, 283, 515, 516, 0, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 292,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 0, 234, 0, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 0, 315,
	0, 0, 0, 316, 317, 521, 522, 318, 319, 0,
	320, 523, 0, 524, 321, 0, 322, 323, 324, 325,
	326, 525, 526, 527, 380, 0, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 235, 333, 334, 336,
	0, 0, 335, 528, 529, 0, 530, 0, 337, 0,
	531, 0, 338, 339, 340, 0, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	532, 0, 350, 351, 0, 0, 352, 353, 354, 0,
	0, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 0,
	371, 372, 373, 376, 377, 375, 0, 374, 0, 236,
	0, 378, 0, 533, 379, 534, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 0, 390, 0, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	0, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 0, 452, 436, 437, 453,
	454, 0, 455, 456, 543, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 0, 469, 470, 0, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 546, 547, 548,
	549, 0, 485, 0, 479, 480, 550, 481, 551, 0,
	482, 483, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 492, 493, 491, 494, 0, 495, 0, 0, 496,
	497, 498, 552, 553, 554, 0, 500, 499, 555, 222,
	0, 231, 0, 501, 502, 556, 503, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	0, 253, 254, 255, 256, 257, 0, 0, 0, 258,
	511, 512, 513, 0, 259, 260, 514, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 0,
	0, 279, 280, 281, 282, 0, 283, 515, 516, 0,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 292, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 518, 519, 0, 234, 0, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 0, 315, 0, 0, 0, 316, 317, 521, 522,
	318, 319, 0, 320, 523, 0, 524, 321, 0, 322,
	323, 324, 325, 326, 525, 526, 527, 380, 0, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 235,
	333, 334, 336, 0, 0, 335, 528, 529, 0, 530,
	0, 337, 0, 531, 0, 338, 339, 340, 0, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 532, 0, 350, 351, 0, 0, 352,
	353, 354, 0, 0, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 0, 371, 372, 373, 376, 377, 375, 0,
	374, 0, 236, 0, 378, 0, 533, 379, 534, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 0, 390, 0, 536, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 539, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 0, 428, 429, 430, 431, 542, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 0, 452,
	436, 437, 453, 454, 0, 455, 456, 543, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 545, 0, 469, 470, 0, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	546, 547, 548, 549, 0, 485, 0, 479, 480, 550,
	481, 551, 0, 482, 483, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 492, 493, 491, 494, 0, 495,
	0, 0, 496, 497, 498, 552, 553, 554, 231, 500,
	499, 555, 0, 0, 0, 0, 501, 502, 556, 503,
	504, 505, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 0, 253, 254,
	255, 256, 257, 0, 0, 0, 258, 511, 512, 513,
	0, 259, 260, 514, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 0, 0, 279, 280,
	281, 282, 0, 283, 515, 516, 0, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 292,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 0, 234, 0, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 0, 315,
	0, 0, 0, 316, 317, 521, 522, 318, 319, 0,
	320, 523, 0, 524, 321, 0, 322, 323, 324, 325,
	326, 525, 526, 527, 380, 0, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 235, 333, 334, 336,
	0, 0, 335, 528, 529, 0, 530, 0, 337, 0,
	531, 0, 338, 339, 340, 0, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	532, 0, 350, 351, 0, 0, 352, 353, 354, 0,
	0, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 0,
	371, 372, 373, 376, 377, 375, 0, 374, 0, 236,
	0, 378, 0, 533, 379, 534, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 0, 390, 0, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	0, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 0, 452, 436, 437, 453,
	454, 0, 455, 456, 543, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 0, 469, 470, 0, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 546, 547, 548,
	549, 0, 485, 0, 479, 480, 550, 481, 551, 0,
	482, 483, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 492, 493, 491, 494, 0, 495, 0, 0, 496,
	497, 498, 552, 553, 554, 231, 500, 499, 555, 0,
	0, 0, 0, 501, 502, 556, 503, 504, 505, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 508,
	0, 509, 252, 510, 0, 253, 254, 255, 256, 257,
	0, 0, 0, 258, 511, 512, 513, 0, 259, 260,
	514, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 580, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 0, 0, 279, 280, 281, 282, 0,
	283, 515, 516, 0, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 292, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 517, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 518, 519,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	520, 0, 0, 0, 314, 0, 315, 0, 0, 0,
	316, 317, 521, 522, 318, 319, 581, 320, 523, 0,
	524, 321, 0, 322, 323, 324, 325, 326, 525, 526,
	527, 380, 0, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 0, 333, 334, 336, 0, 0, 335,
	528, 529, 0, 530, 0, 337, 0, 531, 0, 338,
	339, 340, 0, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 532, 0, 350,
	351, 0, 0, 352, 353, 354, 0, 0, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 0, 371, 372, 373,
	376, 377, 375, 0, 374, 0, 0, 0, 378, 0,
	533, 379, 534, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 0,
	390, 0, 536, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 539, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 541, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 0, 428, 429,
	430, 431, 542, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 582, 447, 448, 446, 449,
	450, 451, 0, 452, 436, 437, 453, 454, 0, 455,
	456, 543, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 544, 463, 464, 465, 466, 545, 0, 469,
	470, 0, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 546, 547, 548, 549, 0, 485,
	0, 479, 480, 550, 481, 551, 0, 482, 483, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 492, 493,
	491, 494, 0, 495, 0, 0, 496, 497, 498, 552,
	553, 554, 231, 500, 499, 555, 0, 0, 0, 0,
	501, 502, 556, 503, 504, 505, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 508, 0, 509, 252,
	510, 0, 253, 254, 255, 256, 257, 0, 0, 0,
	258, 511, 512, 513, 0, 259, 260, 514, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	0, 0, 279, 280, 2024, 282, 0, 283, 515, 516,
	0, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 292, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 517, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 518, 519, 0, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 520, 0, 0,
	0, 314, 0, 315, 0, 0, 0, 316, 317, 521,
	522, 318, 319, 0, 320, 523, 0, 524, 321, 0,
	322, 323, 324, 325, 326, 525, 526, 527, 380, 0,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	235, 333, 334, 336, 0, 0, 335, 528, 529, 0,
	530, 0, 337, 0, 531, 0, 338, 339, 340, 0,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 532, 0, 350, 351, 0, 0,
	352, 353, 354, 0, 0, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 0, 371, 372, 373, 376, 377, 375,
	0, 374, 0, 236, 0, 378, 0, 533, 379, 534,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 0, 390, 0, 536,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 539, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	541, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 0, 428, 429, 430, 431, 542,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 0,
	452, 436, 437, 453, 454, 0, 455, 456, 543, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 544,
	463, 464, 465, 466, 545, 0, 469, 470, 0, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 546, 547, 548, 549, 0, 485, 0, 479, 480,
	550, 481, 551, 0, 482, 483, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 492, 493, 491, 494, 0,
	495, 0, 0, 496, 497, 498, 552, 553, 554, 231,
	500, 499, 555, 0, 0, 0, 0, 501, 502, 556,
	503, 504, 505, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 0, 259, 260, 514, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 2022, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 0, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 525, 526, 527, 380, 0, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 0, 0, 335, 528, 529, 0, 530, 0, 337,
	0, 531, 0, 338, 339, 340, 0, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 0, 350, 351, 0, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	0, 371, 372, 373, 376, 377, 375, 0, 374, 0,
	236, 0, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 0, 390, 0, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 0, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 0, 452, 436, 437,
	453, 454, 0, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 231, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 2020, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	0, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 525,
	526, 527, 380, 0, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 0, 0,
	335, 528, 529, 0, 530, 0, 337, 0, 531, 0,
	338, 339, 340, 0, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 0,
	350, 351, 0, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 0, 371, 372,
	373, 376, 377, 375, 0, 374, 0, 236, 0, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	0, 390, 0, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 0, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 0,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 231, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 0, 253, 254, 255, 256, 257, 0, 0,
	0, 258, 511, 512, 513, 0, 259, 260, 514, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 0, 0, 279, 280, 281, 282, 0, 283, 515,
	516, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 292, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 518, 519, 0, 234,
	0, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 0, 315, 0, 0, 0, 316, 317,
	521, 522, 318, 319, 0, 320, 523, 0, 524, 321,
	0, 322, 323, 324, 325, 326, 1962, 526, 527, 380,
	0, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 235, 333, 334, 336, 0, 0, 335, 528, 529,
	0, 530, 0, 337, 0, 531, 0, 338, 339, 340,
	0, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 532, 0, 350, 351, 0,
	0, 352, 353, 354, 0, 0, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 0, 371, 372, 373, 376, 377,
	375, 0, 374, 0, 236, 0, 378, 0, 533, 379,
	534, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 0, 390, 0,
	536, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 539, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 0, 428, 429, 430, 431,
	542, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	0, 452, 436, 437, 453, 454, 0, 455, 456, 543,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 545, 0, 469, 470, 0,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 546, 547, 548, 549, 0, 485, 0, 479,
	480, 550, 481, 551, 0, 482, 483, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 492, 493, 491, 494,
	0, 495, 0, 0, 496, 497, 498, 552, 553, 554,
	0, 500, 499, 555, 741, 0, 231, 0, 501, 502,
	556, 503, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	0, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 525,
	526, 527, 380, 0, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 0, 333, 334, 336, 0, 0,
	335, 528, 529, 0, 530, 740, 337, 0, 531, 0,
	338, 339, 340, 0, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 0,
	350, 351, 0, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 0, 371, 372,
	373, 376, 377, 375, 0, 374, 0, 0, 0, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	0, 390, 0, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 0, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 0,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 739, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 231, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 0, 253, 254, 255, 256, 257, 0, 0,
	0, 258, 511, 512, 513, 0, 259, 260, 514, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 0, 0, 279, 280, 281, 282, 0, 283, 515,
	516, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 292, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 518, 519, 0, 2576,
	0, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 0, 315, 0, 0, 0, 316, 317,
	521, 522, 318, 319, 0, 320, 523, 0, 524, 321,
	0, 322, 323, 324, 325, 326, 525, 526, 527, 380,
	0, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 0, 333, 334, 336, 0, 0, 335, 528, 529,
	0, 530, 0, 337, 0, 531, 0, 338, 339, 340,
	0, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 532, 0, 350, 351, 0,
	0, 352, 353, 354, 0, 0, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 0, 371, 372, 373, 376, 377,
	375, 0, 374, 0, 0, 0, 378, 0, 533, 379,
	534, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 0, 390, 0,
	536, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 539, 402, 540, 403,
	404, 3492, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 0, 428, 429, 430, 431,
	542, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	0, 452, 436, 437, 453, 454, 0, 455, 456, 543,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 545, 0, 469, 470, 0,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 546, 547, 548, 549, 0, 485, 0, 479,
	480, 550, 481, 551, 0, 482, 483, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 492, 493, 491, 494,
	0, 495, 0, 0, 496, 497, 498, 552, 553, 554,
	0, 500, 499, 555, 567, 0, 231, 0, 501, 502,
	556, 503, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 566,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	0, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 525,
	526, 527, 380, 0, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 0, 333, 334, 336, 0, 0,
	335, 528, 529, 0, 530, 0, 337, 0, 531, 0,
	338, 339, 340, 0, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 0,
	350, 351, 0, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 0, 371, 372,
	373, 376, 377, 375, 0, 374, 0, 0, 0, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	0, 390, 0, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 565, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 0, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 0,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 0, 500, 499, 555, 231, 2563, 0,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	0, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 0, 253, 254, 255,
	256, 257, 0, 0, 0, 258, 511, 512, 513, 0,
	259, 260, 514, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 0, 0, 279, 280, 281,
	282, 0, 283, 515, 516, 0, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 292, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	518, 519, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 0, 315, 0,
	0, 0, 316, 317, 521, 522, 318, 319, 0, 320,
	523, 0, 524, 321, 0, 322, 323, 324, 325, 326,
	525, 526, 527, 380, 0, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 0, 333, 334, 336, 0,
	0, 335, 528, 529, 0, 530, 0, 337, 0, 531,
	0, 338, 339, 340, 0, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 532,
	0, 350, 351, 0, 0, 352, 353, 354, 0, 0,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 0, 371,
	372, 373, 376, 377, 375, 0, 374, 0, 0, 0,
	378, 0, 533, 379, 534, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 0, 390, 0, 536, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	539, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 541, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 0,
	428, 429, 430, 431, 542, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 450, 451, 0, 452, 436, 437, 453, 454,
	0, 455, 456, 543, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 545,
	0, 469, 470, 0, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 546, 547, 548, 549,
	0, 485, 0, 479, 480, 550, 481, 551, 0, 482,
	483, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	492, 493, 491, 494, 0, 495, 0, 0, 496, 497,
	498, 552, 553, 554, 0, 500, 499, 555, 231, 3501,
	0, 0, 501, 502, 556, 503, 504, 505, 0, 0,
	0, 0, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 0, 253, 254,
	255, 256, 257, 0, 0, 0, 258, 511, 512, 513,
	0, 259, 260, 514, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 0, 0, 279, 280,
	281, 282, 0, 283, 515, 516, 0, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 292,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 0, 315,
	0, 0, 0, 316, 317, 521, 522, 318, 319, 0,
	320, 523, 0, 524, 321, 0, 322, 323, 324, 325,
	326, 525, 526, 527, 380, 0, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 0, 333, 334, 336,
	0, 0, 335, 528, 529, 0, 530, 0, 337, 0,
	531, 0, 338, 339, 340, 0, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	532, 0, 350, 351, 0, 0, 352, 353, 354, 0,
	0, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 0,
	371, 372, 373, 376, 377, 375, 0, 374, 0, 0,
	0, 378, 0, 533, 379, 534, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 0, 390, 0, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	0, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 0, 452, 436, 437, 453,
	454, 0, 455, 456, 543, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 0, 469, 470, 0, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 546, 547, 548,
	549, 0, 485, 0, 479, 480, 550, 481, 551, 0,
	482, 483, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 492, 493, 491, 494, 0, 495, 0, 0, 496,
	497, 498, 552, 553, 554, 231, 500, 499, 555, 0,
	0, 0, 0, 501, 502, 556, 503, 504, 505, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 508,
	0, 509, 252, 510, 0, 253, 254, 255, 256, 257,
	0, 0, 0, 258, 511, 512, 513, 0, 259, 260,
	514, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 0, 0, 279, 280, 281, 282, 0,
	283, 515, 516, 3241, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 292, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 517, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 518, 519,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	520, 0, 0, 0, 314, 0, 315, 0, 0, 0,
	316, 317, 521, 522, 318, 319, 0, 320, 523, 0,
	524, 321, 0, 322, 323, 324, 325, 326, 525, 526,
	527, 380, 0, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 0, 333, 334, 336, 0, 0, 335,
	528, 529, 0, 530, 0, 337, 0, 531, 0, 338,
	339, 340, 0, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 532, 0, 350,
	351, 0, 0, 352, 353, 354, 0, 0, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 0, 371, 372, 373,
	376, 377, 375, 0, 374, 0, 0, 0, 378, 0,
	533, 379, 534, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 0,
	390, 0, 536, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 539, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 541, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 0, 428, 429,
	430, 431, 542, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 0, 452, 436, 437, 453, 454, 0, 455,
	456, 543, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 544, 463, 464, 465, 466, 545, 0, 469,
	470, 0, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 546, 547, 548, 549, 0, 485,
	0, 479, 480, 550, 481, 551, 0, 482, 483, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 492, 493,
	491, 494, 0, 495, 0, 0, 496, 497, 498, 552,
	553, 554, 231, 500, 499, 555, 0, 0, 0, 0,
	501, 502, 556, 503, 504, 505, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 506, 0, 2326, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 508, 0, 509, 252,
	510, 0, 253, 254, 255, 256, 257, 0, 0, 0,
	258, 511, 512, 513, 0, 259, 260, 514, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	0, 0, 279, 280, 281, 282, 0, 283, 515, 516,
	0, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 292, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 517, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 520, 0, 0,
	0, 314, 0, 315, 0, 0, 0, 316, 317, 521,
	522, 318, 319, 0, 320, 523, 0, 524, 321, 0,
	322, 323, 324, 325, 326, 525, 526, 527, 380, 0,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	0, 333, 334, 336, 0, 0, 335, 528, 529, 0,
	530, 0, 337, 0, 531, 0, 338, 339, 340, 0,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 532, 0, 350, 351, 0, 0,
	352, 353, 354, 0, 0, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 0, 371, 372, 373, 376, 377, 375,
	0, 374, 0, 0, 0, 378, 0, 533, 379, 534,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 0, 390, 0, 536,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 539, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	541, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 0, 428, 429, 430, 431, 542,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 0,
	452, 436, 437, 453, 454, 0, 455, 456, 543, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 544,
	463, 464, 465, 466, 545, 0, 469, 470, 0, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 546, 547, 548, 549, 0, 485, 0, 479, 480,
	550, 481, 551, 0, 482, 483, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 492, 493, 491, 494, 0,
	495, 0, 0, 496, 497, 498, 552, 553, 554, 0,
	500, 499, 555, 231, 2563, 0, 0, 501, 502, 556,
	503, 504, 505, 0, 0, 0, 0, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 0, 253, 254, 255, 256, 257, 0, 0,
	0, 258, 511, 512, 513, 0, 259, 260, 514, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 0, 0, 279, 280, 281, 282, 0, 283, 515,
	516, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 292, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 518, 519, 0, 0,
	0, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 0, 315, 0, 0, 0, 316, 317,
	521, 522, 318, 319, 0, 320, 523, 0, 524, 321,
	0, 322, 323, 324, 325, 326, 525, 526, 527, 380,
	0, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 0, 333, 334, 336, 0, 0, 335, 528, 529,
	0, 530, 0, 337, 0, 531, 0, 338, 339, 340,
	0, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 532, 0, 350, 351, 0,
	0, 352, 353, 354, 0, 0, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 0, 371, 372, 373, 376, 377,
	375, 0, 374, 0, 0, 0, 378, 0, 533, 379,
	534, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 2560, 0, 0, 388, 389, 535, 0, 390, 0,
	536, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 539, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 0, 428, 429, 430, 431,
	542, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	0, 452, 436, 437, 453, 454, 0, 455, 456, 543,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 545, 0, 469, 470, 0,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 546, 547, 548, 549, 0, 485, 0, 479,
	480, 550, 481, 551, 0, 482, 483, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 492, 493, 491, 494,
	0, 495, 0, 0, 496, 497, 498, 552, 553, 554,
	231, 500, 499, 555, 0, 0, 0, 0, 501, 502,
	556, 503, 504, 505, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 2001, 243, 244, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 0,
	253, 254, 255, 256, 257, 0, 0, 0, 258, 511,
	512, 513, 0, 259, 260, 514, 0, 0, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 0, 0,
	279, 280, 281, 282, 0, 283, 515, 516, 0, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 292, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 520, 0, 0, 0, 314,
	0, 315, 0, 0, 0, 316, 317, 521, 522, 318,
	319, 0, 320, 523, 0, 524, 321, 0, 322, 323,
	324, 325, 326, 525, 526, 527, 380, 0, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 0, 333,
	334, 336, 0, 0, 335, 528, 529, 0, 530, 0,
	337, 0, 531, 0, 338, 339, 340, 0, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 532, 0, 350, 351, 0, 0, 352, 353,
	354, 0, 0, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 0, 371, 372, 373, 376, 377, 375, 0, 374,
	0, 0, 0, 378, 0, 533, 379, 534, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 0, 390, 0, 536, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 539, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 541, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 0, 428, 429, 430, 431, 542, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 0, 452, 436,
	437, 453, 454, 0, 455, 456, 543, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 545, 0, 469, 470, 0, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 546,
	547, 548, 549, 0, 485, 0, 479, 480, 550, 481,
	551, 0, 482, 483, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 492, 493, 491, 494, 0, 495, 0,
	0, 496, 497, 498, 552, 553, 554, 0, 500, 499,
	555, 1991, 0, 231, 0, 501, 502, 556, 503, 504,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 0, 253, 254, 255, 256, 257, 0, 0,
	0, 258, 511, 512, 513, 0, 259, 260, 514, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 0, 0, 279, 280, 281, 282, 0, 283, 515,
	516, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 292, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 518, 519, 0, 0,
	0, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 0, 315, 0, 0, 0, 316, 317,
	521, 522, 318, 319, 0, 320, 523, 0, 524, 321,
	0, 322, 323, 324, 325, 326, 525, 526, 527, 380,
	0, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 0, 333, 334, 336, 0, 0, 335, 528, 529,
	0, 530, 0, 337, 0, 531, 0, 338, 339, 340,
	0, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 532, 0, 350, 351, 0,
	0, 352, 353, 354, 0, 0, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 0, 371, 372, 373, 376, 377,
	375, 0, 374, 0, 0, 0, 378, 0, 533, 379,
	534, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 0, 390, 0,
	536, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 539, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 0, 428, 429, 430, 431,
	542, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	0, 452, 436, 437, 453, 454, 0, 455, 456, 543,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 545, 0, 469, 470, 0,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 546, 547, 548, 549, 0, 485, 0, 479,
	480, 550, 481, 551, 0, 482, 483, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 492, 493, 491, 494,
	0, 495, 0, 0, 496, 497, 498, 552, 553, 554,
	0, 500, 499, 555, 608, 0, 231, 0, 501, 502,
	556, 503, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 1100, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 1098, 0, 259,
	260, 514, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	0, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 525,
	526, 527, 380, 0, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 0, 333, 334, 336, 0, 0,
	335, 528, 529, 0, 530, 0, 337, 0, 531, 0,
	338, 339, 340, 0, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 0,
	350, 351, 0, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 609, 0, 371, 372,
	373, 376, 377, 375, 0, 374, 0, 0, 0, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	0, 390, 0, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 0, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 605, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 1101, 451, 0, 452, 436, 437, 453, 454, 0,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 604, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 0, 500, 499, 555, 608, 0, 231,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 0, 259, 598, 514, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 281, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 0, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 525, 526, 527, 380, 0, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 0, 333, 334,
	336, 0, 0, 335, 528, 529, 0, 530, 0, 337,
	0, 531, 0, 338, 339, 340, 0, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 0, 350, 351, 0, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 609,
	0, 371, 372, 373, 376, 377, 375, 0, 374, 0,
	0, 0, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 0, 390, 0, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 0, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 605, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 1399, 451, 0, 452, 436, 437,
	453, 454, 0, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 604, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 0, 500, 499, 555,
	1377, 0, 231, 0, 501, 502, 556, 503, 504, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 508, 0, 509, 252,
	510, 0, 253, 254, 255, 256, 257, 0, 0, 0,
	258, 511, 512, 513, 0, 259, 260, 514, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	0, 0, 279, 280, 281, 282, 0, 283, 515, 516,
	0, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 292, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 517, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 520, 0, 0,
	0, 314, 0, 315, 0, 0, 0, 316, 317, 521,
	522, 318, 319, 0, 320, 523, 0, 524, 321, 0,
	322, 323, 324, 325, 326, 1376, 526, 527, 380, 0,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	0, 333, 334, 336, 0, 0, 335, 528, 529, 0,
	530, 0, 337, 0, 531, 0, 338, 339, 340, 0,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 532, 0, 350, 351, 0, 0,
	352, 353, 354, 0, 0, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 0, 371, 372, 373, 376, 377, 375,
	0, 374, 0, 0, 0, 378, 0, 533, 379, 534,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 0, 390, 0, 536,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 539, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	541, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 0, 428, 429, 430, 431, 542,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 0,
	452, 436, 437, 453, 454, 0, 455, 456, 543, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 544,
	463, 464, 465, 466, 545, 0, 469, 470, 0, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 546, 547, 548, 549, 0, 485, 0, 479, 480,
	550, 481, 551, 0, 482, 483, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 492, 493, 491, 494, 0,
	495, 0, 0, 496, 497, 498, 552, 553, 554, 0,
	500, 499, 555, 1326, 0, 231, 0, 501, 502, 556,
	503, 504, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 508,
	0, 509, 252, 510, 0, 253, 254, 255, 256, 257,
	0, 0, 0, 258, 511, 512, 513, 0, 259, 260,
	514, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 0, 0, 279, 280, 281, 282, 0,
	283, 515, 516, 0, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 292, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 517, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 518, 519,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	520, 0, 0, 0, 314, 0, 315, 0, 0, 0,
	316, 317, 521, 522, 318, 319, 0, 320, 523, 0,
	524, 321, 0, 322, 323, 324, 325, 326, 1325, 526,
	527, 380, 0, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 0, 333, 334, 336, 0, 0, 335,
	528, 529, 0, 530, 0, 337, 0, 531, 0, 338,
	339, 340, 0, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 532, 0, 350,
	351, 0, 0, 352, 353, 354, 0, 0, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 0, 371, 372, 373,
	376, 377, 375, 0, 374, 0, 0, 0, 378, 0,
	533, 379, 534, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 0,
	390, 0, 536, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 539, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 541, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 0, 428, 429,
	430, 431, 542, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 0, 452, 436, 437, 453, 454, 0, 455,
	456, 543, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 544, 463, 464, 465, 466, 545, 0, 469,
	470, 0, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 546, 547, 548, 549, 0, 485,
	0, 479, 480, 550, 481, 551, 0, 482, 483, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 492, 493,
	491, 494, 0, 495, 0, 0, 496, 497, 498, 552,
	553, 554, 0, 500, 499, 555, 1311, 0, 231, 0,
	501, 502, 556, 503, 504, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 0, 253, 254,
	255, 256, 257, 0, 0, 0, 258, 511, 512, 513,
	0, 259, 260, 514, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 0, 0, 279, 280,
	281, 282, 0, 283, 515, 516, 0, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 292,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 0, 315,
	0, 0, 0, 316, 317, 521, 522, 318, 319, 0,
	320, 523, 0, 524, 321, 0, 322, 323, 324, 325,
	326, 1310, 526, 527, 380, 0, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 0, 333, 334, 336,
	0, 0, 335, 528, 529, 0, 530, 0, 337, 0,
	531, 0, 338, 339, 340, 0, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	532, 0, 350, 351, 0, 0, 352, 353, 354, 0,
	0, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 0,
	371, 372, 373, 376, 377, 375, 0, 374, 0, 0,
	0, 378, 0, 533, 379, 534, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 0, 390, 0, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	0, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 0, 452, 436, 437, 453,
	454, 0, 455, 456, 543, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 0, 469, 470, 0, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 546, 547, 548,
	549, 0, 485, 0, 479, 480, 550, 481, 551, 0,
	482, 483, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 492, 493, 491, 494, 0, 495, 0, 0, 496,
	497, 498, 552, 553, 554, 0, 500, 499, 555, 1306,
	0, 231, 0, 501, 502, 556, 503, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	0, 253, 254, 255, 256, 257, 0, 0, 0, 258,
	511, 512, 513, 0, 259, 260, 514, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 0,
	0, 279, 280, 281, 282, 0, 283, 515, 516, 0,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 292, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 518, 519, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 0, 315, 0, 0, 0, 316, 317, 521, 522,
	318, 319, 0, 320, 523, 0, 524, 321, 0, 322,
	323, 324, 325, 326, 525, 526, 527, 380, 0, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 0,
	333, 334, 336, 0, 0, 335, 528, 529, 0, 530,
	0, 337, 0, 531, 0, 338, 339, 340, 0, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 532, 0, 350, 351, 0, 0, 352,
	353, 354, 0, 0, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 0, 371, 372, 373, 376, 377, 375, 0,
	374, 0, 0, 0, 378, 0, 533, 379, 534, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 0, 390, 0, 536, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 539, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 0, 428, 429, 430, 431, 542, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 0, 452,
	436, 437, 453, 454, 0, 455, 456, 543, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 545, 0, 469, 470, 0, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	546, 547, 548, 549, 0, 485, 0, 479, 480, 550,
	481, 551, 0, 482, 483, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 492, 493, 491, 494, 0, 495,
	0, 0, 496, 497, 498, 552, 553, 554, 0, 500,
	499, 555, 1228, 0, 231, 0, 501, 502, 556, 503,
	504, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	0, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 508, 0,
	509, 252, 510, 0, 253, 254, 255, 256, 257, 0,
	0, 0, 258, 511, 512, 513, 0, 259, 260, 514,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 0, 0, 279, 280, 281, 282, 0, 283,
	515, 516, 0, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 292, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 517, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 518, 519, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 520,
	0, 0, 0, 314, 0, 315, 0, 0, 0, 316,
	317, 521, 522, 318, 319, 0, 320, 523, 0, 524,
	321, 0, 322, 323, 324, 325, 326, 525, 526, 527,
	380, 0, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 0, 333, 334, 336, 0, 0, 335, 528,
	529, 0, 530, 0, 337, 0, 531, 0, 338, 339,
	340, 0, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 532, 0, 350, 351,
	0, 0, 352, 353, 354, 0, 0, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 0, 371, 372, 373, 376,
	377, 375, 0, 374, 0, 0, 0, 378, 0, 533,
	379, 534, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 0, 390,
	0, 536, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 539, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 541, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 0, 428, 429, 430,
	431, 542, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 0, 447, 448, 446, 449, 450,
	451, 0, 452, 436, 437, 453, 454, 0, 455, 456,
	543, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 544, 463, 464, 465, 466, 545, 0, 469, 470,
	0, 468, 0, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 546, 547, 548, 549, 0, 485, 0,
	479, 480, 550, 481, 551, 0, 482, 483, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 492, 493, 491,
	494, 0, 495, 0, 0, 496, 497, 498, 552, 553,
	554, 0, 500, 499, 555, 608, 0, 231, 0, 501,
	502, 556, 503, 504, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 245, 246, 1100, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 0, 253, 254, 255,
	256, 257, 0, 0, 0, 258, 511, 512, 1098, 0,
	259, 260, 514, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 0, 0, 279, 280, 281,
	282, 0, 283, 515, 516, 0, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 292, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	518, 519, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 0, 315, 0,
	0, 0, 316, 317, 521, 522, 318, 319, 0, 320,
	523, 0, 524, 321, 0, 322, 323, 324, 325, 326,
	525, 526, 527, 380, 0, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 0, 333, 334, 336, 0,
	0, 335, 528, 529, 0, 530, 0, 337, 0, 531,
	0, 338, 339, 340, 0, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 532,
	0, 350, 351, 0, 0, 352, 353, 354, 0, 0,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 609, 0, 371,
	372, 373, 376, 377, 375, 0, 374, 0, 0, 0,
	378, 0, 533, 379, 534, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 0, 390, 0, 536, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	539, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 541, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 0,
	428, 429, 430, 431, 542, 432, 0, 433, 439, 440,
	434, 435, 605, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 1101, 451, 0, 452, 436, 437, 453, 454,
	0, 455, 456, 543, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 545,
	0, 469, 470, 0, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 604, 547, 548, 549,
	0, 485, 0, 479, 1099, 550, 481, 551, 0, 482,
	483, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	492, 493, 491, 494, 0, 495, 0, 0, 496, 497,
	498, 552, 553, 554, 231, 500, 499, 555, 0, 0,
	0, 0, 501, 502, 556, 503, 504, 505, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 1082, 243, 244,
	0, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 508, 0,
	509, 252, 510, 0, 253, 254, 255, 256, 257, 0,
	0, 0, 258, 511, 512, 513, 0, 259, 260, 514,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 0, 0, 279, 280, 281, 282, 0, 283,
	515, 516, 0, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 292, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 517, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 518, 519, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 520,
	0, 0, 0, 314, 0, 315, 0, 0, 0, 316,
	317, 521, 522, 318, 319, 0, 320, 523, 0, 524,
	321, 0, 322, 323, 324, 325, 326, 525, 526, 527,
	380, 0, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 0, 333, 334, 336, 0, 0, 335, 528,
	529, 0, 530, 0, 337, 0, 531, 0, 338, 339,
	340, 0, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 532, 0, 350, 351,
	0, 0, 352, 353, 354, 0, 0, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 0, 371, 372, 373, 376,
	377, 375, 0, 374, 0, 0, 0, 378, 0, 533,
	379, 534, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 0, 390,
	0, 536, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 539, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 541, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 0, 428, 429, 430,
	431, 542, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 0, 447, 448, 446, 449, 450,
	451, 0, 452, 436, 437, 453, 454, 0, 455, 456,
	543, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 544, 463, 464, 465, 466, 545, 0, 469, 470,
	0, 468, 0, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 546, 547, 548, 549, 0, 485, 0,
	479, 480, 550, 481, 551, 0, 482, 483, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 492, 493, 491,
	494, 0, 495, 0, 0, 496, 497, 498, 552, 553,
	554, 231, 500, 499, 555, 0, 0, 0, 0, 501,
	502, 556, 503, 504, 505, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 614, 243, 244, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	0, 253, 254, 255, 256, 257, 0, 0, 0, 258,
	511, 512, 513, 0, 259, 260, 514, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 0,
	0, 279, 280, 281, 282, 0, 283, 515, 516, 0,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 292, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 518, 519, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 0, 315, 0, 0, 0, 316, 317, 521, 522,
	318, 319, 0, 320, 523, 0, 524, 321, 0, 322,
	323, 324, 325, 326, 525, 526, 527, 380, 0, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 0,
	333, 334, 336, 0, 0, 335, 528, 529, 0, 530,
	0, 337, 0, 531, 0, 338, 339, 340, 0, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 532, 0, 350, 351, 0, 0, 352,
	353, 354, 0, 0, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 0, 371, 372, 373, 376, 377, 375, 0,
	374, 0, 0, 0, 378, 0, 533, 379, 534, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 0, 390, 0, 536, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 539, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 0, 428, 429, 430, 431, 542, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 0, 452,
	436, 437, 453, 454, 0, 455, 456, 543, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 545, 0, 469, 470, 0, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	546, 547, 548, 549, 0, 485, 0, 479, 480, 550,
	481, 551, 0, 482, 483, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 492, 493, 491, 494, 0, 495,
	0, 0, 496, 497, 498, 552, 553, 554, 0, 500,
	499, 555, 608, 0, 231, 0, 501, 502, 556, 503,
	504, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	0, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 508, 0,
	509, 252, 510, 0, 253, 254, 255, 256, 257, 0,
	0, 0, 258, 511, 512, 513, 0, 259, 598, 514,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 596, 0, 273,
	274, 275, 0, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 0, 0, 279, 280, 281, 282, 0, 283,
	515, 516, 0, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 292, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 517, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 518, 519, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 520,
	0, 0, 0, 314, 0, 315, 0, 0, 0, 316,
	317, 521, 522, 318, 319, 0, 320, 523, 0, 524,
	321, 0, 322, 323, 324, 325, 326, 525, 526, 527,
	380, 0, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 0, 333, 334, 336, 0, 0, 335, 528,
	529, 0, 530, 0, 337, 0, 531, 0, 338, 339,
	340, 0, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 532, 0, 350, 351,
	0, 0, 352, 353, 597, 0, 0, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 609, 0, 371, 372, 373, 376,
	377, 375, 0, 374, 0, 0, 0, 378, 0, 533,
	379, 534, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 0, 390,
	0, 536, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 539, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 541, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 0, 428, 429, 430,
	431, 599, 432, 0, 433, 439, 440, 434, 435, 605,
	442, 443, 444, 445, 0, 447, 448, 446, 449, 600,
	451, 0, 452, 436, 437, 453, 454, 0, 455, 456,
	543, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 544, 463, 464, 465, 466, 545, 0, 469, 470,
	0, 468, 0, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 604, 547, 548, 549, 0, 485, 0,
	479, 602, 550, 481, 551, 0, 482, 483, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 492, 493, 491,
	494, 0, 495, 0, 0, 496, 497, 498, 552, 553,
	554, 0, 500, 499, 555, 592, 0, 231, 0, 501,
	502, 556, 503, 504, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 0, 253, 254, 255,
	256, 257, 0, 0, 0, 258, 511, 512, 513, 0,
	259, 260, 514, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 0, 0, 279, 280, 281,
	282, 0, 283, 515, 516, 0, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 292, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	518, 519, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 0, 315, 0,
	0, 0, 316, 317, 521, 522, 318, 319, 0, 320,
	523, 0, 524, 321, 0, 322, 323, 324, 325, 326,
	525, 526, 527, 380, 0, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 0, 333, 334, 336, 0,
	0, 335, 528, 529, 0, 530, 0, 337, 0, 531,
	0, 338, 339, 340, 0, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 532,
	0, 350, 351, 0, 0, 352, 353, 354, 0, 0,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 0, 371,
	372, 373, 376, 377, 375, 0, 374, 0, 0, 0,
	378, 0, 533, 379, 534, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 0, 390, 0, 536, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	539, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 541, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 0,
	428, 429, 430, 431, 542, 432, 0, 433, 593, 440,
	434, 435, 441, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 450, 451, 0, 452, 436, 437, 453, 454,
	0, 455, 456, 543, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 545,
	0, 469, 470, 0, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 546, 547, 548, 549,
	0, 485, 0, 479, 480, 550, 481, 551, 0, 482,
	483, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	492, 493, 491, 494, 0, 495, 0, 0, 496, 497,
	498, 552, 553, 554, 0, 500, 499, 555, 590, 0,
	231, 0, 501, 502, 556, 503, 504, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 0,
	253, 254, 255, 256, 257, 0, 0, 0, 258, 511,
	512, 513, 0, 259, 260, 514, 0, 0, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 0, 0,
	279, 280, 281, 282, 0, 283, 515, 516, 0, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 292, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 520, 0, 0, 0, 314,
	0, 315, 0, 0, 0, 316, 317, 521, 522, 318,
	319, 0, 320, 523, 0, 524, 321, 0, 322, 323,
	324, 325, 326, 525, 526, 527, 380, 0, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 0, 333,
	334, 336, 0, 0, 335, 528, 529, 0, 530, 0,
	337, 0, 531, 0, 338, 339, 340, 0, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 532, 0, 350, 351, 0, 0, 352, 353,
	354, 0, 0, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 0, 371, 372, 373, 376, 377, 375, 0, 374,
	0, 0, 0, 378, 0, 533, 379, 534, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 0, 390, 0, 536, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 539, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 541, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 0, 428, 429, 430, 431, 542, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 0, 452, 436,
	437, 453, 454, 0, 455, 456, 543, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 545, 0, 469, 470, 0, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 546,
	547, 548, 549, 0, 485, 0, 479, 480, 550, 481,
	551, 0, 482, 483, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 492, 493, 491, 494, 0, 495, 0,
	0, 496, 497, 498, 552, 553, 554, 0, 500, 499,
	555, 584, 0, 231, 0, 501, 502, 556, 503, 504,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 0, 253, 254, 255, 256, 257, 0, 0,
	0, 258, 511, 512, 513, 0, 259, 260, 514, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 0, 0, 279, 280, 281, 282, 0, 283, 515,
	516, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 292, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 518, 519, 0, 0,
	0, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 0, 315, 0, 0, 0, 316, 317,
	521, 522, 318, 319, 0, 320, 523, 0, 524, 321,
	0, 322, 323, 324, 325, 326, 525, 526, 527, 380,
	0, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 0, 333, 334, 336, 0, 0, 335, 528, 529,
	0, 530, 0, 337, 0, 531, 0, 338, 339, 340,
	0, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 532, 0, 350, 351, 0,
	0, 352, 353, 354, 0, 0, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 0, 371, 372, 373, 376, 377,
	375, 0, 374, 0, 0, 0, 378, 0, 533, 379,
	534, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 0, 390, 0,
	536, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 539, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 0, 428, 429, 430, 431,
	542, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	0, 452, 436, 437, 453, 454, 0, 455, 456, 543,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 545, 0, 469, 470, 0,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 546, 547, 548, 549, 0, 485, 0, 479,
	480, 550, 481, 551, 0, 482, 483, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 492, 493, 491, 494,
	0, 495, 0, 0, 496, 497, 498, 552, 553, 554,
	0, 500, 499, 555, 562, 0, 231, 0, 501, 502,
	556, 503, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	0, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 525,
	526, 527, 380, 0, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 0, 333, 334, 336, 0, 0,
	335, 528, 529, 0, 530, 0, 337, 0, 531, 0,
	338, 339, 340, 0, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 0,
	350, 351, 0, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 0, 371, 372,
	373, 376, 377, 375, 0, 374, 0, 0, 0, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	0, 390, 0, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 0, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 0,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 231, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 0, 253, 254, 255, 256, 257, 0, 0,
	0, 258, 511, 512, 513, 0, 259, 260, 514, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 0, 0, 279, 280, 281, 282, 0, 283, 515,
	516, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 292, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 518, 519, 0, 0,
	0, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 0, 315, 0, 0, 0, 316, 317,
	521, 522, 318, 319, 0, 320, 523, 0, 524, 321,
	0, 322, 323, 324, 325, 326, 525, 526, 527, 380,
	0, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 0, 333, 334, 336, 0, 0, 335, 528, 529,
	0, 530, 0, 337, 0, 531, 0, 338, 339, 340,
	0, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 532, 0, 350, 351, 0,
	0, 352, 353, 354, 0, 0, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 0, 371, 372, 373, 376, 377,
	375, 0, 374, 0, 0, 0, 378, 0, 533, 379,
	534, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 0, 390, 0,
	536, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 539, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 0, 428, 429, 430, 431,
	542, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	0, 452, 436, 437, 453, 454, 0, 455, 456, 543,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 545, 0, 469, 470, 0,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 546, 547, 548, 549, 0, 485, 0, 479,
	480, 550, 481, 551, 0, 482, 483, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 492, 493, 491, 494,
	0, 495, 0, 0, 496, 497, 498, 552, 553, 554,
	231, 500, 499, 555, 0, 0, 0, 0, 501, 502,
	556, 503, 504, 505, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 0,
	253, 254, 255, 256, 257, 0, 0, 0, 258, 511,
	512, 513, 0, 259, 260, 514, 0, 0, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 0, 0,
	279, 280, 281, 282, 0, 283, 515, 516, 0, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 292, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 520, 0, 0, 0, 314,
	0, 315, 0, 0, 0, 316, 317, 521, 522, 318,
	319, 0, 320, 523, 0, 524, 321, 0, 322, 323,
	324, 325, 326, 2983, 526, 527, 380, 0, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 0, 333,
	334, 336, 0, 0, 335, 528, 529, 0, 530, 0,
	337, 0, 531, 0, 338, 339, 340, 0, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 532, 0, 350, 351, 0, 0, 352, 353,
	354, 0, 0, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 0, 371, 372, 373, 376, 377, 375, 0, 374,
	0, 0, 0, 378, 0, 533, 379, 534, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 0, 390, 0, 536, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 539, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 541, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 0, 428, 429, 430, 431, 542, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 0, 452, 436,
	437, 453, 454, 0, 455, 456, 543, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 545, 0, 469, 470, 0, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 546,
	547, 548, 549, 0, 485, 0, 479, 480, 550, 481,
	551, 0, 482, 483, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 492, 493, 491, 494, 0, 495, 0,
	0, 496, 497, 498, 552, 553, 554, 231, 500, 499,
	555, 0, 0, 0, 0, 501, 502, 556, 503, 504,
	505, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 0, 253, 254, 255,
	256, 257, 0, 0, 0, 258, 511, 512, 513, 0,
	259, 260, 514, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 0, 0, 279, 280, 281,
	282, 0, 283, 515, 516, 0, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 292, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	518, 519, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 0, 315, 0,
	0, 0, 316, 317, 521, 522, 318, 319, 0, 320,
	523, 0, 524, 321, 0, 322, 323, 324, 325, 326,
	2944, 526, 527, 380, 0, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 0, 333, 334, 336, 0,
	0, 335, 528, 529, 0, 530, 0, 337, 0, 531,
	0, 338, 339, 340, 0, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 532,
	0, 350, 351, 0, 0, 352, 353, 354, 0, 0,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 0, 371,
	372, 373, 376, 377, 375, 0, 374, 0, 0, 0,
	378, 0, 533, 379, 534, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 0, 390, 0, 536, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	539, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 541, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 0,
	428, 429, 430, 431, 542, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 450, 451, 0, 452, 436, 437, 453, 454,
	0, 455, 456, 543, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 545,
	0, 469, 470, 0, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 546, 547, 548, 549,
	0, 485, 0, 479, 480, 550, 481, 551, 0, 482,
	483, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	492, 493, 491, 494, 0, 495, 0, 0, 496, 497,
	498, 552, 553, 554, 231, 500, 499, 555, 0, 0,
	0, 0, 501, 502, 556, 503, 504, 505, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	0, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 508, 0,
	509, 252, 510, 0, 253, 254, 255, 256, 257, 0,
	0, 0, 258, 511, 512, 513, 0, 259, 260, 514,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 0, 0, 279, 280, 281, 282, 0, 283,
	515, 516, 0, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 292, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 517, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 518, 519, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 520,
	0, 0, 0, 314, 0, 315, 0, 0, 0, 316,
	317, 521, 522, 318, 319, 0, 320, 523, 0, 524,
	321, 0, 322, 323, 324, 325, 326, 2890, 526, 527,
	380, 0, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 0, 333, 334, 336, 0, 0, 335, 528,
	529, 0, 530, 0, 337, 0, 531, 0, 338, 339,
	340, 0, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 532, 0, 350, 351,
	0, 0, 352, 353, 354, 0, 0, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 0, 371, 372, 373, 376,
	377, 375, 0, 374, 0, 0, 0, 378, 0, 533,
	379, 534, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 0, 390,
	0, 536, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 539, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 541, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 0, 428, 429, 430,
	431, 542, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 0, 447, 448, 446, 449, 450,
	451, 0, 452, 436, 437, 453, 454, 0, 455, 456,
	543, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 544, 463, 464, 465, 466, 545, 0, 469, 470,
	0, 468, 0, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 546, 547, 548, 549, 0, 485, 0,
	479, 480, 550, 481, 551, 0, 482, 483, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 492, 493, 491,
	494, 0, 495, 0, 0, 496, 497, 498, 552, 553,
	554, 231, 500, 499, 555, 0, 0, 0, 0, 501,
	502, 556, 503, 504, 505, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	0, 253, 254, 255, 256, 257, 0, 0, 0, 258,
	511, 512, 513, 0, 259, 260, 514, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 0,
	0, 279, 280, 281, 282, 0, 283, 515, 516, 0,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 292, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 518, 519, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 0, 315, 0, 0, 0, 316, 317, 521, 522,
	318, 319, 0, 320, 523, 0, 524, 321, 0, 322,
	323, 324, 325, 326, 2888, 526, 527, 380, 0, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 0,
	333, 334, 336, 0, 0, 335, 528, 529, 0, 530,
	0, 337, 0, 531, 0, 338, 339, 340, 0, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 532, 0, 350, 351, 0, 0, 352,
	353, 354, 0, 0, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 0, 371, 372, 373, 376, 377, 375, 0,
	374, 0, 0, 0, 378, 0, 533, 379, 534, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 0, 390, 0, 536, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 539, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 0, 428, 429, 430, 431, 542, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 0, 452,
	436, 437, 453, 454, 0, 455, 456, 543, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 545, 0, 469, 470, 0, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	546, 547, 548, 549, 0, 485, 0, 479, 480, 550,
	481, 551, 0, 482, 483, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 492, 493, 491, 494, 0, 495,
	0, 0, 496, 497, 498, 552, 553, 554, 231, 500,
	499, 555, 0, 0, 0, 0, 501, 502, 556, 503,
	504, 505, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 0, 253, 254,
	255, 256, 257, 0, 0, 0, 258, 511, 512, 513,
	0, 259, 260, 514, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 0, 0, 279, 280,
	281, 282, 0, 283, 515, 516, 0, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 292,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 0, 315,
	0, 0, 0, 316, 317, 521, 522, 318, 319, 0,
	320, 523, 0, 524, 321, 0, 322, 323, 324, 325,
	326, 2874, 526, 527, 380, 0, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 0, 333, 334, 336,
	0, 0, 335, 528, 529, 0, 530, 0, 337, 0,
	531, 0, 338, 339, 340, 0, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	532, 0, 350, 351, 0, 0, 352, 353, 354, 0,
	0, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 0,
	371, 372, 373, 376, 377, 375, 0, 374, 0, 0,
	0, 378, 0, 533, 379, 534, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 0, 390, 0, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	0, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 0, 452, 436, 437, 453,
	454, 0, 455, 456, 543, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 0, 469, 470, 0, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 546, 547, 548,
	549, 0, 485, 0, 479, 480, 550, 481, 551, 0,
	482, 483, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 492, 493, 491, 494, 0, 495, 0, 0, 496,
	497, 498, 552, 553, 554, 231, 500, 499, 555, 0,
	0, 0, 0, 501, 502, 556, 503, 504, 505, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 508,
	0, 509, 252, 510, 0, 253, 254, 255, 256, 257,
	0, 0, 0, 258, 511, 512, 513, 0, 259, 260,
	514, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 0, 0, 279, 280, 281, 282, 0,
	283, 515, 516, 0, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 292, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 517, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 518, 519,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	520, 0, 0, 0, 314, 0, 315, 0, 0, 0,
	316, 317, 521, 522, 318, 319, 0, 320, 523, 0,
	524, 321, 0, 322, 323, 324, 325, 326, 2518, 526,
	527, 380, 0, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 0, 333, 334, 336, 0, 0, 335,
	528, 529, 0, 530, 0, 337, 0, 531, 0, 338,
	339, 340, 0, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 532, 0, 350,
	351, 0, 0, 352, 353, 354, 0, 0, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 0, 371, 372, 373,
	376, 377, 375, 0, 374, 0, 0, 0, 378, 0,
	533, 379, 534, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 0,
	390, 0, 536, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 539, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 541, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 0, 428, 429,
	430, 431, 542, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 0, 452, 436, 437, 453, 454, 0, 455,
	456, 543, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 544, 463, 464, 465, 466, 545, 0, 469,
	470, 0, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 546, 547, 548, 549, 0, 485,
	0, 479, 480, 550, 481, 551, 0, 482, 483, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 492, 493,
	491, 494, 0, 495, 0, 0, 496, 497, 498, 552,
	553, 554, 231, 500, 499, 555, 0, 0, 0, 0,
	501, 502, 556, 503, 504, 505, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 508, 0, 509, 252,
	510, 0, 253, 254, 255, 256, 257, 0, 0, 0,
	258, 511, 512, 513, 0, 259, 260, 514, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	0, 0, 279, 280, 281, 282, 0, 283, 515, 516,
	0, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 292, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 517, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 520, 0, 0,
	0, 314, 0, 315, 0, 0, 0, 316, 317, 521,
	522, 318, 319, 0, 320, 523, 0, 524, 321, 0,
	322, 323, 324, 325, 326, 525, 526, 527, 380, 0,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	0, 333, 334, 336, 0, 0, 335, 528, 529, 0,
	530, 0, 337, 0, 531, 0, 338, 339, 340, 0,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 532, 0, 350, 351, 0, 0,
	352, 353, 354, 0, 0, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 0, 371, 372, 373, 376, 377, 375,
	0, 374, 0, 0, 0, 378, 0, 533, 379, 534,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 0, 390, 0, 536,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 539, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	541, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 0, 428, 429, 430, 431, 542,
	432, 0, 433, 593, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 0,
	452, 436, 437, 453, 454, 0, 455, 456, 543, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 544,
	463, 464, 465, 466, 545, 0, 469, 470, 0, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 546, 547, 548, 549, 0, 485, 0, 479, 480,
	550, 481, 551, 0, 482, 483, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 492, 493, 491, 494, 0,
	495, 0, 0, 496, 497, 498, 552, 553, 554, 231,
	500, 499, 555, 0, 0, 0, 0, 501, 502, 556,
	503, 504, 505, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	506, 0, 1944, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 0, 259, 260, 514, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 281, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 0, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 525, 526, 527, 380, 0, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 0, 333, 334,
	336, 0, 0, 335, 528, 529, 0, 530, 0, 337,
	0, 531, 0, 338, 339, 340, 0, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 0, 350, 351, 0, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	0, 371, 372, 373, 376, 377, 375, 0, 374, 0,
	0, 0, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 0, 390, 0, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 0, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 0, 0, 436, 437,
	453, 454, 0, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 231, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	0, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 1348,
	526, 527, 380, 0, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 0, 333, 334, 336, 0, 0,
	335, 528, 529, 0, 530, 0, 337, 0, 531, 0,
	338, 339, 340, 0, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 0,
	350, 351, 0, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 0, 371, 372,
	373, 376, 377, 375, 0, 374, 0, 0, 0, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	0, 390, 0, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 0, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 0,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 231, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 0, 253, 254, 255, 256, 257, 0, 0,
	0, 258, 511, 512, 513, 0, 259, 260, 514, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 0, 0, 279, 280, 281, 282, 0, 283, 515,
	516, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 292, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 518, 519, 0, 0,
	0, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 0, 315, 0, 0, 0, 316, 317,
	521, 522, 318, 319, 0, 320, 523, 0, 524, 321,
	0, 322, 323, 324, 325, 326, 1288, 526, 527, 380,
	0, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 0, 333, 334, 336, 0, 0, 335, 528, 529,
	0, 530, 0, 337, 0, 531, 0, 338, 339, 340,
	0, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 532, 0, 350, 351, 0,
	0, 352, 353, 354, 0, 0, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 0, 371, 372, 373, 376, 377,
	375, 0, 374, 0, 0, 0, 378, 0, 533, 379,
	534, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 0, 390, 0,
	536, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 539, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 0, 428, 429, 430, 431,
	542, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	0, 452, 436, 437, 453, 454, 0, 455, 456, 543,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 545, 0, 469, 470, 0,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 546, 547, 548, 549, 0, 485, 0, 479,
	480, 550, 481, 551, 0, 482, 483, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 492, 493, 491, 494,
	0, 495, 0, 0, 496, 497, 498, 552, 553, 554,
	231, 500, 499, 555, 0, 0, 0, 0, 501, 502,
	556, 503, 504, 505, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 0,
	253, 254, 255, 256, 257, 0, 0, 0, 258, 511,
	512, 513, 0, 259, 260, 514, 0, 0, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 0, 0,
	279, 280, 281, 282, 0, 283, 515, 516, 0, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 292, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 520, 0, 0, 0, 314,
	0, 315, 0, 0, 0, 316, 317, 521, 522, 318,
	319, 0, 320, 523, 0, 524, 321, 0, 322, 323,
	324, 325, 326, 525, 526, 527, 380, 0, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 0, 333,
	334, 336, 0, 0, 335, 528, 529, 0, 530, 0,
	337, 0, 531, 0, 338, 339, 340, 0, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 532, 0, 350, 351, 0, 0, 352, 353,
	354, 0, 0, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 0, 371, 372, 373, 376, 377, 375, 0, 374,
	0, 0, 0, 378, 0, 533, 379, 534, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 0, 390, 0, 536, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 539, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 541, 1034,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 0, 428, 429, 430, 431, 542, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 0, 452, 436,
	437, 453, 454, 0, 455, 456, 543, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 545, 0, 469, 470, 0, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 546,
	547, 548, 549, 0, 485, 0, 479, 480, 550, 481,
	551, 0, 482, 483, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 492, 493, 491, 494, 0, 495, 0,
	0, 496, 497, 498, 552, 553, 554, 231, 500, 499,
	555, 0, 0, 0, 0, 501, 502, 556, 503, 504,
	505, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 0, 253, 254, 255,
	256, 257, 0, 0, 0, 258, 511, 512, 513, 0,
	259, 260, 514, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 0, 0, 279, 280, 281,
	282, 0, 283, 515, 516, 0, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 292, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	518, 519, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 0, 315, 0,
	0, 0, 316, 317, 521, 522, 318, 319, 0, 320,
	523, 0, 524, 0, 0, 322, 323, 324, 325, 326,
	525, 526, 527, 380, 0, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 0, 333, 334, 336, 0,
	0, 335, 528, 529, 0, 530, 0, 337, 0, 531,
	0, 338, 339, 340, 0, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 532,
	0, 350, 351, 0, 0, 352, 353, 354, 0, 0,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 0, 371,
	372, 373, 376, 377, 375, 0, 374, 0, 0, 0,
	378, 0, 533, 379, 534, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 0, 390, 0, 536, 391, 392, 384, 393, 394,
	0, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	539, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 0, 411, 412, 541, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 0,
	428, 429, 430, 431, 542, 0, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 450, 451, 0, 452, 436, 437, 453, 454,
	0, 455, 456, 543, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 545,
	0, 469, 470, 0, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 546, 547, 548, 549,
	0, 485, 0, 479, 480, 550, 481, 551, 0, 482,
	483, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	492, 493, 491, 494, 0, 495, 0, 0, 496, 497,
	498, 552, 553, 554, 0, 500, 499, 555, 0, 0,
	0, 0, 501, 502, 556, 503, 504, 505, 1545, 1546,
	0, 1578, 1579, 1580, 1588, 1589, 1590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1581,
	1576, 0, 0, 0, 0, 0, 0, 1548, 0, 0,
	0, 0, 0, 0, 1594, 0, 0, 0, 0, 0,
	0, 1545, 1546, 0, 1578, 1579, 1580, 1588, 1589, 1590,
	0, 0, 0, 0, 0, 0, 0, 1547, 0, 0,
	0, 0, 1581, 1576, 0, 0, 0, 1567, 0, 0,
	1548, 0, 0, 0, 0, 1564, 0, 1594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1567, 0, 0, 0, 0, 0, 0, 0, 1564, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1570,
	1571, 1572, 1573, 0, 0, 0, 0, 0, 0, 1553,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1585, 0,
	0, 1595, 1570, 1571, 1572, 1573, 0, 1575, 1577, 0,
	0, 0, 1553, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1591, 0, 1592, 0, 0, 0, 0, 0,
	0, 1562, 1563, 0, 0, 0, 0, 0, 0, 0,
	0, 1585, 0, 0, 1595, 0, 0, 1583, 0, 0,
	1575, 1577, 0, 0, 0, 0, 0, 0, 1568, 0,
	0, 0, 0, 0, 0, 1591, 0, 1592, 0, 0,
	0, 0, 0, 0, 1562, 1563, 0, 0, 0, 0,
	0, 0, 0, 1593, 0, 0, 0, 0, 0, 0,
	1583, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1582, 1568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1582, 0, 0, 0, 0, 0, 0,
	1574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1569, 0, 0, 0, 0, 1545, 1546, 0, 1578, 1579,
	1580, 1588, 1589, 1590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1574, 1586, 0, 1581, 1576, 0, 0,
	0, 0, 0, 0, 1548, 0, 0, 0, 0, 0,
	0, 1594, 0, 1569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1547, 0, 0, 1586, 0, 0,
	0, 0, 0, 0, 1567, 0, 0, 0, 0, 0,
	0, 0, 1564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1584, 0, 0, 0, 1559, 1560, 1566, 1587,
	1565, 1561, 0, 1558, 1556, 1557, 1549, 1550, 1551, 1552,
	1554, 1555, 0, 0, 0, 0, 3799, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1570, 1571, 1572, 1573,
	0, 0, 0, 0, 0, 1584, 1553, 0, 0, 1559,
	1560, 1566, 1587, 1565, 1561, 0, 1558, 1556, 1557, 1549,
	1550, 1551, 1552, 1554, 1555, 0, 0, 0, 0, 3708,
	0, 0, 0, 0, 0, 1585, 0, 0, 1595, 0,
	0, 0, 0, 0, 1575, 1577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1591,
	0, 1592, 0, 0, 0, 0, 0, 0, 1562, 1563,
	0, 0, 0, 0, 0, 1545, 1546, 0, 1578, 1579,
	1580, 1588, 1589, 1590, 1583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1568, 1581, 1576, 0, 0,
	0, 0, 0, 0, 1548, 0, 0, 0, 0, 0,
	0, 1594, 0, 0, 0, 0, 0, 0, 0, 0,
	1593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1547, 0, 0, 1582, 0, 0,
	0, 0, 0, 0, 1567, 0, 0, 0, 0, 0,
	0, 0, 1564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1569, 0, 0,
	0, 0, 0, 0, 0, 0, 1570, 1571, 1572, 1573,
	0, 0, 0, 0, 0, 0, 1553, 0, 0, 0,
	0, 1586, 1545, 1546, 0, 1578, 1579, 1580, 1588, 1589,
	1590, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1581, 1576, 1585, 0, 0, 1595, 0,
	0, 1548, 0, 0, 1575, 1577, 0, 0, 1594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1591,
	0, 1592, 0, 0, 0, 0, 0, 0, 1562, 1563,
	0, 1547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1567, 0, 0, 1583, 0, 0, 0, 0, 1564,
	0, 0, 0, 0, 0, 1568, 0, 0, 0, 1584,
	0, 0, 0, 1559, 1560, 1566, 1587, 1565, 1561, 0,
	1558, 1556, 1557, 1549, 1550, 1551, 1552, 1554, 1555, 0,
	1593, 0, 0, 3707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1570, 1571, 1572, 1573, 0, 0, 0,
	0, 0, 0, 1553, 0, 0, 0, 0, 0, 1545,
	1546, 0, 1578, 1579, 1580, 1588, 1589, 1590, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1574, 0, 0,
	1581, 1576, 1585, 0, 0, 1595, 0, 0, 1548, 0,
	0, 1575, 1577, 0, 0, 1594, 0, 1569, 0, 0,
	0, 0, 0, 0, 0, 0, 1591, 0, 1592, 0,
	0, 0, 0, 0, 0, 1562, 1563, 0, 1547, 0,
	0, 1586, 0, 0, 0, 0, 0, 0, 1567, 0,
	0, 1583, 0, 0, 0, 0, 1564, 0, 0, 0,
	0, 0, 1568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1593, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1570, 1571, 1572, 1573, 0, 0, 0, 0, 0, 1584,
	1553, 0, 0, 1559, 1560, 1566, 1587, 1565, 1561, 0,
	1558, 1556, 1557, 1549, 1550, 1551, 1552, 1554, 1555, 0,
	0, 0, 0, 3562, 1574, 0, 0, 0, 0, 1585,
	0, 0, 1595, 0, 0, 0, 0, 0, 1575, 1577,
	0, 0, 0, 0, 1569, 0, 0, 0, 0, 0,
	0, 0, 0, 1591, 0, 1592, 0, 0, 0, 0,
	0, 0, 1562, 1563, 0, 0, 0, 0, 1586, 1545,
	1546, 0, 1578, 1579, 1580, 1588, 1589, 1590, 1583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1568,
	1581, 1576, 0, 0, 0, 0, 0, 0, 1548, 0,
	0, 0, 0, 0, 0, 1594, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1547, 0,
	0, 1582, 0, 0, 0, 0, 0, 0, 1567, 0,
	0, 0, 0, 0, 0, 0, 1564, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1584, 0, 0, 0,
	1559, 1560, 1566, 1587, 1565, 1561, 0, 1558, 1556, 1557,
	1549, 1550, 1551, 1552, 1554, 1555, 0, 0, 0, 0,
	3436, 1574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1569, 0, 0, 0, 0, 0, 0, 0, 0,
	1570, 1571, 1572, 1573, 0, 0, 0, 0, 0, 0,
	1553, 0, 0, 0, 0, 1586, 1545, 1546, 0, 1578,
	1579, 1580, 1588, 1589, 1590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1581, 1576, 1585,
	0, 0, 1595, 0, 0, 1548, 0, 0, 1575, 1577,
	0, 0, 1594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1591, 0, 1592, 0, 0, 0, 0,
	0, 0, 1562, 1563, 0, 1547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1567, 0, 0, 1583, 0,
	0, 0, 0, 1564, 0, 0, 0, 0, 0, 1568,
	0, 0, 0, 1584, 0, 0, 0, 1559, 1560, 1566,
	1587, 1565, 1561, 0, 1558, 1556, 1557, 1549, 1550, 1551,
	1552, 1554, 1555, 0, 1593, 0, 0, 3382, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1570, 1571, 1572,
	1573, 0, 0, 0, 0, 0, 0, 1553, 0, 0,
	0, 0, 0, 1545, 1546, 0, 1578, 1579, 1580, 1588,
	1589, 1590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1574, 0, 0, 1581, 1576, 1585, 0, 0, 1595,
	0, 0, 1548, 0, 0, 1575, 1577, 0, 0, 1594,
	0, 1569, 0, 0, 0, 0, 0, 0, 0, 0,
	1591, 0, 1592, 0, 0, 0, 0, 0, 0, 1562,
	1563, 0, 1547, 0, 0, 1586, 0, 0, 0, 0,
	0, 0, 1567, 0, 0, 1583, 0, 0, 0, 0,
	1564, 0, 0, 0, 0, 0, 1568, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1570, 1571, 1572, 1573, 0, 0,
	0, 0, 0, 1584, 1553, 0, 0, 1559, 1560, 1566,
	1587, 1565, 1561, 0, 1558, 1556, 1557, 1549, 1550, 1551,
	1552, 1554, 1555, 0, 0, 0, 0, 3381, 1574, 0,
	0, 0, 0, 1585, 0, 0, 1595, 0, 0, 0,
	0, 0, 1575, 1577, 0, 0, 0, 0, 1569, 0,
	0, 0, 0, 0, 0, 0, 0, 1591, 0, 1592,
	0, 0, 0, 0, 0, 0, 1562, 1563, 0, 0,
	0, 0, 1586, 1545, 1546, 0, 1578, 1579, 1580, 1588,
	1589, 1590, 1583, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1568, 1581, 1576, 0, 0, 0, 0,
	0, 0, 1548, 0, 0, 0, 0, 0, 0, 1594,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1547, 0, 0, 1582, 0, 0, 0, 0,
	0, 0, 1567, 0, 0, 0, 0, 0, 0, 0,
	1564, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1584, 0, 0, 0, 1559, 1560, 1566, 1587, 1565, 1561,
	0, 1558, 1556, 1557, 1549, 1550, 1551, 1552, 1554, 1555,
	0, 0, 0, 0, 3380, 1574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1569, 0, 0, 0, 0,
	0, 0, 0, 0, 1570, 1571, 1572, 1573, 0, 0,
	0, 0, 0, 0, 1553, 0, 0, 0, 0, 1586,
	1545, 1546, 0, 1578, 1579, 1580, 1588, 1589, 1590, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1581, 1576, 1585, 0, 0, 1595, 0, 0, 1548,
	0, 0, 1575, 1577, 0, 0, 1594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1591, 0, 1592,
	0, 0, 0, 0, 0, 0, 1562, 1563, 0, 1547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1567,
	0, 0, 1583, 0, 0, 0, 0, 1564, 0, 0,
	0, 0, 0, 1568, 0, 0, 0, 1584, 0, 0,
	0, 1559, 1560, 1566, 1587, 1565, 1561, 0, 1558, 1556,
	1557, 1549, 1550, 1551, 1552, 1554, 1555, 0, 1593, 0,
	0, 3113, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1570, 1571, 1572, 1573, 0, 0, 0, 0, 0,
	0, 1553, 0, 0, 0, 0, 0, 1545, 1546, 0,
	1578, 1579, 1580, 1588, 1589, 1590, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1574, 0, 0, 1581, 1576,
	1585, 0, 0, 1595, 0, 0, 1548, 0, 0, 1575,
	1577, 0, 0, 1594, 0, 1569, 0, 0, 0, 0,
	0, 0, 0, 0, 1591, 0, 1592, 0, 0, 0,
	0, 0, 0, 1562, 1563, 0, 1547, 0, 0, 1586,
	0, 0, 0, 0, 0, 0, 1567, 0, 0, 1583,
	0, 0, 0, 0, 1564, 0, 0, 0, 0, 0,
	1568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1593, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1570, 1571,
	1572, 1573, 0, 0, 0, 0, 0, 1584, 1553, 0,
	0, 1559, 1560, 1566, 1587, 1565, 1561, 0, 1558, 1556,
	1557, 1549, 1550, 1551, 1552, 1554, 1555, 0, 0, 0,
	0, 2716, 1574, 0, 0, 0, 0, 1585, 0, 0,
	1595, 0, 0, 0, 0, 0, 1575, 1577, 0, 0,
	0, 0, 1569, 0, 0, 0, 0, 0, 0, 0,
	0, 1591, 0, 1592, 0, 0, 0, 0, 0, 0,
	1562, 1563, 0, 0, 0, 0, 1586, 1545, 1546, 0,
	1578, 1579, 1580, 1588, 1589, 1590, 1583, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1568, 1581, 1576,
	0, 0, 0, 0, 0, 0, 1548, 0, 0, 0,
	0, 0, 0, 1594, 0, 0, 0, 0, 0, 0,
	0, 0, 1593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1547, 0, 0, 1582,
	0, 0, 0, 0, 0, 0, 1567, 0, 0, 0,
	0, 0, 0, 0, 1564, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1584, 0, 0, 0, 1559, 1560,
	1566, 1587, 1565, 1561, 0, 1558, 1556, 1557, 1549, 1550,
	1551, 1552, 1554, 1555, 0, 0, 0, 0, 2715, 1574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1569,
	0, 0, 0, 0, 0, 0, 0, 0, 1570, 1571,
	1572, 1573, 0, 0, 0, 0, 0, 0, 1553, 0,
	0, 0, 0, 1586, 1545, 1546, 0, 1578, 1579, 1580,
	1588, 1589, 1590, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1581, 1576, 1585, 0, 0,
	1595, 0, 0, 1548, 0, 0, 1575, 1577, 0, 0,
	1594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1591, 0, 1592, 0, 0, 0, 0, 0, 0,
	1562, 1563, 0, 1547, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1567, 0, 0, 1583, 0, 0, 0,
	0, 1564, 0, 0, 0, 0, 0, 1568, 0, 0,
	0, 1584, 0, 0, 0, 1559, 1560, 1566, 1587, 1565,
	1561, 0, 1558, 1556, 1557, 1549, 1550, 1551, 1552, 1554,
	1555, 0, 1593, 0, 0, 2714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1570, 1571, 1572, 1573, 0,
	0, 0, 0, 0, 0, 1553, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1574,
	0, 0, 0, 0, 1585, 0, 0, 1595, 0, 0,
	0, 0, 0, 1575, 1577, 0, 0, 0, 0, 1569,
	0, 0, 0, 0, 0, 0, 0, 0, 1591, 0,
	1592, 0, 0, 0, 0, 0, 0, 1562, 1563, 0,
	0, 0, 0, 1586, 1545, 1546, 0, 1578, 1579, 1580,
	1588, 1589, 1590, 1583, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1568, 1581, 1576, 0, 0, 0,
	0, 0, 0, 1548, 0, 0, 0, 0, 0, 0,
	1594, 0, 0, 0, 0, 0, 0, 0, 0, 1593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1547, 0, 0, 1582, 0, 0, 0,
	0, 0, 0, 1567, 0, 0, 0, 0, 0, 0,
	0, 1564, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1584, 0, 0, 0, 1559, 1560, 1566, 1587, 1565,
	1561, 0, 1558, 1556, 1557, 1549, 1550, 1551, 1552, 1554,
	1555, 0, 0, 0, 0, 2713, 1574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1569, 0, 0, 0,
	0, 0, 0, 0, 0, 1570, 1571, 1572, 1573, 0,
	0, 0, 0, 0, 0, 1553, 3925, 0, 0, 0,
	1586, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1585, 0, 0, 1595, 0, 0,
	0, 0, 0, 1575, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1591, 0,
	1592, 0, 0, 0, 0, 0, 0, 1562, 1563, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1583, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1568, 0, 0, 0, 1584, 0,
	0, 0, 1559, 1560, 1566, 1587, 1565, 1561, 0, 1558,
	1556, 1557, 1549, 1550, 1551, 1552, 1554, 1555, 0, 1593,
	2680, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3924, 1545, 1546, 0, 1578, 1579, 1580, 1588, 1589,
	1590, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1581, 1576, 0, 1574, 0, 0, 2651,
	0, 1548, 0, 0, 0, 0, 0, 0, 1594, 0,
	0, 0, 0, 0, 0, 0, 1569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1547, 0, 0, 0, 0, 0, 0, 0, 0,
	1586, 1567, 0, 0, 0, 0, 0, 0, 0, 1564,
	0, 0, 1545, 1546, 0, 1578, 1579, 1580, 1588, 1589,
	1590, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1581, 1576, 0, 0, 0, 0, 0,
	2652, 1548, 0, 0, 0, 0, 0, 0, 1594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1547, 0, 1570, 1571, 1572, 1573, 0, 0, 0,
	0, 1567, 0, 1553, 0, 0, 0, 0, 1584, 1564,
	0, 0, 1559, 1560, 1566, 1587, 1565, 1561, 0, 1558,
	1556, 1557, 1549, 1550, 1551, 1552, 1554, 1555, 0, 0,
	0, 0, 1585, 0, 0, 1595, 0, 0, 0, 0,
	0, 1575, 1577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1591, 0, 1592, 0,
	0, 0, 0, 0, 0, 1562, 1563, 0, 0, 0,
	0, 0, 0, 1570, 1571, 1572, 1573, 0, 0, 0,
	0, 1583, 0, 1553, 0, 2776, 0, 0, 2775, 0,
	2300, 0, 1568, 0, 0, 0, 0, 1545, 1546, 0,
	1578, 1579, 1580, 1588, 1589, 1590, 0, 0, 0, 0,
	0, 0, 1585, 0, 0, 1595, 0, 1593, 1581, 1576,
	0, 1575, 1577, 2299, 0, 0, 1548, 0, 0, 0,
	0, 0, 0, 1594, 1582, 0, 1591, 0, 1592, 0,
	0, 0, 0, 0, 0, 1562, 1563, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1547, 0, 0, 0,
	0, 1583, 0, 0, 0, 0, 1567, 0, 0, 0,
	0, 0, 1568, 0, 1564, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1593, 0, 0,
	0, 0, 0, 0, 1569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1586, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1570, 1571,
	1572, 1573, 0, 0, 0, 0, 0, 0, 1553, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1585, 0, 0,
	1595, 0, 0, 0, 1569, 0, 1575, 1577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1591, 0, 1592, 0, 0, 0, 0, 1586, 0,
	1562, 1563, 0, 0, 0, 0, 1584, 0, 0, 0,
	1559, 1560, 1566, 1587, 1565, 1561, 1583, 1558, 1556, 1557,
	1549, 1550, 1551, 1552, 1554, 1555, 0, 1568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1584, 0, 0, 0,
	1559, 1560, 1566, 1587, 1565, 1561, 0, 1558, 1556, 1557,
	1549, 1550, 1551, 1552, 1554, 1555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1545, 1546, 0, 1578, 1579, 1580, 1588, 1589, 1590, 1569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1581, 1576, 0, 0, 0, 0, 0, 0, 1548,
	0, 0, 0, 1586, 0, 0, 1594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1567,
	0, 0, 0, 0, 0, 0, 0, 1564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1584, 0, 0, 0, 1559, 1560, 1566, 1587, 1565,
	1561, 0, 1558, 1556, 1557, 1549, 1550, 1551, 1552, 1554,
	1555, 1570, 1571, 1572, 1573, 0, 0, 0, 0, 0,
	0, 1553, 0, 0, 0, 0, 1545, 1546, 0, 1578,
	1579, 1580, 1588, 1589, 1590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1581, 1576, 0,
	1585, 0, 0, 1595, 0, 1548, 0, 0, 0, 1575,
	1577, 0, 1594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1591, 0, 1592, 0, 0, 0,
	0, 0, 0, 1562, 1563, 1547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1567, 0, 0, 0, 1583,
	0, 0, 0, 1564, 0, 0, 0, 0, 0, 0,
	1568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1593, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1582, 892, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1570, 1571, 1572,
	1573, 0, 0, 0, 0, 0, 0, 1553, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 0, 0, 0, 1585, 0, 0, 1595,
	0, 0, 0, 0, 0, 1575, 1577, 0, 0, 0,
	0, 0, 1569, 0, 0, 0, 0, 0, 0, 0,
	1591, 0, 1592, 0, 0, 0, 0, 0, 0, 1562,
	1563, 0, 0, 0, 0, 0, 1586, 0, 0, 0,
	0, 0, 0, 0, 0, 1583, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1568, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1584, 0, 0, 0, 1559, 1560,
	1566, 1587, 1565, 1561, 0, 1558, 1556, 1557, 1549, 1550,
	1551, 1552, 1554, 1555, 0, 0, 0, 0, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1545,
	1546, 0, 1578, 1579, 1580, 1588, 1589, 1590, 1569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1581, 1576, 0, 0, 0, 0, 0, 0, 1548, 0,
	0, 0, 1586, 0, 0, 1594, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1547, 0,
	0, 0, 0, 0, 0, 0, 3094, 0, 1567, 0,
	0, 0, 0, 0, 0, 0, 1564, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1584, 0, 0, 0, 1559, 1560, 1566, 1587, 1565, 1561,
	0, 1558, 1556, 1557, 1549, 1550, 1551, 1552, 1554, 1555,
	1570, 1571, 1572, 1573, 0, 0, 0, 0, 0, 0,
	1553, 0, 0, 0, 0, 2782, 0, 0, 0, 0,
	0, 0, 0, 0, 1545, 1546, 0, 1578, 1579, 1580,
	1588, 1589, 1590, 0, 0, 0, 0, 0, 0, 1585,
	0, 0, 1595, 0, 0, 1581, 1576, 0, 1575, 1577,
	2777, 0, 0, 1548, 0, 0, 0, 0, 0, 0,
	1594, 0, 0, 1591, 0, 1592, 0, 0, 0, 0,
	0, 0, 1562, 1563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1547, 0, 0, 0, 0, 1583, 0,
	0, 0, 0, 1567, 0, 0, 0, 0, 0, 1568,
	0, 1564, 0, 0, 1545, 1546, 0, 1578, 1579, 1580,
	1588, 1589, 1590, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 1581, 1576, 0, 0, 0,
	0, 0, 0, 1548, 0, 0, 0, 0, 0, 0,
	1594, 1582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1547, 0, 1570, 1571, 1572, 1573, 0,
	0, 0, 0, 1567, 0, 1553, 0, 0, 0, 0,
	0, 1564, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1585, 0, 0, 1595, 0, 0,
	0, 1569, 0, 1575, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1591, 0,
	1592, 0, 0, 0, 0, 1586, 0, 1562, 1563, 0,
	0, 0, 0, 0, 0, 1570, 1571, 1572, 1573, 0,
	0, 0, 0, 1583, 0, 1553, 0, 0, 0, 0,
	0, 0, 0, 0, 1568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1585, 0, 0, 1595, 0, 1593,
	0, 0, 0, 1575, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1582, 0, 1591, 0,
	1592, 0, 0, 0, 0, 0, 0, 1562, 1563, 0,
	0, 0, 0, 1584, 0, 0, 0, 1559, 1560, 1566,
	1587, 1565, 1561, 1583, 1558, 1556, 1557, 1549, 1550, 1551,
	1552, 1554, 1555, 0, 1568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1593,
	0, 0, 0, 0, 0, 0, 1569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1586, 0, 0, 0, 0, 2744, 0, 0, 1545, 1546,
	0, 1578, 1579, 1580, 1588, 1589, 1590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1581,
	1576, 0, 0, 0, 2717, 0, 1574, 1548, 0, 0,
	0, 0, 0, 0, 1594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1547, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1567, 0, 0,
	1586, 0, 0, 0, 0, 1564, 0, 0, 1584, 0,
	0, 0, 1559, 1560, 1566, 1587, 1565, 1561, 0, 1558,
	1556, 1557, 1549, 1550, 1551, 1552, 1554, 1555, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1570,
	1571, 1572, 1573, 0, 0, 0, 0, 0, 0, 1553,
	0, 0, 0, 0, 0, 0, 0, 0, 1584, 0,
	0, 0, 1559, 1560, 1566, 1587, 1565, 1561, 0, 1558,
	1556, 1557, 1549, 1550, 1551, 1552, 1554, 1555, 1585, 0,
	0, 1595, 0, 0, 0, 0, 0, 1575, 1577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1591, 0, 1592, 0, 0, 0, 0, 0,
	0, 1562, 1563, 0, 0, 0, 0, 0, 1545, 1546,
	0, 1578, 1579, 1580, 1588, 1589, 1590, 1583, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1568, 1581,
	1576, 0, 0, 0, 0, 0, 0, 1548, 0, 0,
	0, 0, 0, 0, 1594, 0, 0, 0, 0, 0,
	0, 0, 0, 1593, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1547, 0, 0,
	1582, 0, 0, 0, 0, 0, 0, 1567, 0, 0,
	0, 0, 0, 0, 0, 1564, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1569, 0, 0, 0, 0, 0, 0, 0, 0, 1570,
	1571, 1572, 1573, 0, 0, 0, 0, 0, 0, 1553,
	0, 0, 0, 0, 1586, 1545, 1546, 0, 1578, 1579,
	1580, 1588, 1589, 1590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1581, 1576, 1585, 0,
	0, 1595, 0, 0, 1548, 0, 0, 1575, 1577, 0,
	0, 1594, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1591, 0, 1592, 0, 0, 0, 0, 0,
	0, 1562, 1563, 0, 1547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1567, 0, 0, 1583, 0, 0,
	0, 0, 1564, 0, 0, 0, 0, 0, 1568, 0,
	0, 0, 1584, 0, 0, 0, 1559, 1560, 1566, 1587,
	1565, 1561, 0, 1558, 1556, 1557, 1549, 1550, 1551, 1552,
	1554, 1555, 0, 1593, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1570, 1571, 1572, 1573,
	0, 0, 0, 0, 0, 0, 1553, 0, 0, 0,
	0, 0, 1545, 1546, 0, 1578, 1579, 1580, 1588, 1589,
	1590, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1574, 0, 0, 0, 1576, 1585, 0, 0, 1595, 0,
	0, 1548, 0, 0, 1575, 1577, 0, 0, 1594, 0,
	1569, 0, 0, 0, 0, 0, 0, 0, 0, 1591,
	0, 1592, 0, 0, 0, 0, 0, 0, 1562, 1563,
	0, 1547, 0, 0, 1586, 0, 0, 0, 0, 0,
	0, 1567, 0, 0, 1583, 0, 0, 0, 0, 1564,
	0, 0, 0, 0, 0, 1568, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1570, 1571, 1572, 1573, 0, 0, 0,
	0, 0, 1584, 1553, 0, 0, 1559, 1560, 1566, 1587,
	1565, 1561, 0, 1558, 1556, 1557, 1549, 1550, 1551, 1552,
	1554, 1555, 0, 0, 0, 0, 0, 1574, 0, 0,
	0, 0, 1585, 0, 0, 1595, 0, 0, 0, 0,
	0, 1575, 1577, 794, 0, 831, 0, 1569, 0, 0,
	0, 0, 0, 0, 0, 0, 1591, 0, 1592, 0,
	0, 0, 0, 0, 0, 1562, 1563, 0, 801, 0,
	0, 1586, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1583, 0, 0, 813, 799, 0, 0, 0, 0,
	0, 0, 1568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 800,
	0, 0, 0, 0, 803, 0, 0, 1593, 0, 837,
	0, 0, 0, 0, 0, 0, 0, 810, 811, 0,
	0, 0, 0, 824, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 832, 805, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1584,
	0, 0, 0, 1559, 1560, 1566, 1587, 1565, 1561, 0,
	1558, 1556, 1557, 1549, 1550, 1551, 1552, 1554, 1555, 0,
	0, 830, 0, 0, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 806, 0, 0,
	0, 0, 0, 0, 0, 798, 0, 0, 1586, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 807, 808, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	815, 814, 0, 0, 0, 0, 0, 0, 809, 0,
	0, 821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1584, 0, 0, 0,
	1559, 1560, 1566, 1587, 1565, 1561, 0, 1558, 1556, 1557,
	1549, 1550, 1551, 1552, 1554, 1555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 802, 0, 0, 0,
	828, 829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 826,
	0, 0, 0, 0, 0, 0, 822, 0, 0, 0,
	0, 818, 0, 0, 0, 0, 0, 819, 0, 0,
	796, 0, 834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 820,
	0, 0, 0, 0, 817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 835, 0, 0, 0, 0, 0,
	0, 0, 823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 827,
}
var sqlPact = [...]int{

	6353, -1000, -1000, -1000, -1000, 283, -1000, -1000, 273, 270,
	259, 257, 253, 249, 245, 241, -1000, -1000, -1000, -1000,
	-1000, -1000, 240, -1000, -1000, 236, -1000, 226, 225, 223,
	-1000, -1000, 205, -1000, 202, -1000, -1000, -1000, -1000, 198,
	191, 188, 71127, 70664, 71584, 2070, 85402, 75252, 1814, 63737,
	84939, 63274, 84476, 84013, 184, -1000, 83550, 183, 181, 180,
	-1000, 83087, -1000, 1753, -1000, 178, 4006, 52599, 177, 175,
	174, 2256, 172, -1000, 169, 167, -1000, 9519, 1619, -1000,
	166, 165, -1000, 8338, 4195, 74332, 161, 159, 2149, 157,
	155, 52135, 153, 152, 2103, 2643, -1000, -1000, 1877, -1000,
	-1000, 149, 147, 146, 143, 141, 136, 135, 134, 133,
	-1000, 132, 130, 129, 127, 126, 125, 123, -1000, 122,
	121, 120, 119, 118, 116, 114, 113, 111, 110, 103,
	102, -1000, 97041, 100, 1829, 1758, 1699, 1685, 1667, 1637,
	1026, 95, 94, 93, 89, 88, 86, 85, 82, -1000,
	81, 80, 79, 78, 77, 75, 74, 73, 557, 72,
	68, 67, 63, 62, 61, 3807, -1000, 1527, 995, 24708,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 90886, 85859, 60, -38, 59, -1000, 3012,
	1097, 43777, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 378, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 568,
	1804, 794, -1000, -1000, -1000, 82630, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2069, -87, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 781, -1000, 2065, 171, 2016, -1000, -1000,
	-1000, -1000, -1000, 85859, -1000, -1000, 3372, 3371, 1914, 777,
	82173, -1000, 1668, -1000, 948, 27642, -1000, 1218, -1000, 27642,
	375, -1000, -1000, -1000, -1000, -1000, -1000, 3370, 3366, 3365,
	3359, -1000, -1000, 62811, 18810, 62348, 61885, 81710, 18337, 70201,
	69738, 58195, -1000, -1000, -1000, 1379, -1000, -1000, -1000, -1000,
	-1000, -1000, 34, 55830, 3172, 85859, -1000, 370, -1000, -1000,
	-1000, -1000, -1000, -1000, 37087, 870, 36588, 415, 36089, 413,
	-1000, -1000, -1000, 57722, -1000, 3358, 3347, 1205, 3346, 2897,
	90429, 1775, 3345, 1684, 1273, 1061, 3343, 3342, 3340, 3339,
	3337, 3336, 1436, 81247, 2704, 80784, 1592, 57249, 69275, 71584,
	2427, 80321, 1430, 1398, -1000, -1000, -1000, -1000, 2742, 2640,
	2635, 48912, -1000, -1000, 3335, 3334, 3332, 3330, 3329, 89972,
	1751, 3328, 2275, 3327, 3326, 3325, 3324, 3321, 3319, 3318,
	3317, -1000, 68812, 68349, 67886, 3025, 79858, 67423, 56776, 35590,
	855, -1000, -1000, -1000, 45643, 5546, 4891, 79395, 47063, 71584,
	71584, -1000, -1000, -1000, -1000, -1000, 35091, 842, 34592, 818,
	-1000, -1000, 46121, 2631, -1000, -1000, -1000, -1000, 34093, 688,
	33594, 663, 85859, -1000, 2703, 1832, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2225, 1622, 3209, 56303,
	1894, 1341, 2969, 2741, 2735, 1446, 2324, 2734, 2732, 2730,
	2729, 2727, 1607, 2372, 275, 24209, 1520, 1450, 2720, 2713,
	3214, 1778, 1864, 1995, 61422, 3316, 3314, 2918, 2712, 2705,
	2630, -1000, -1000, -1000, -1000, 1413, -1000, -1000, -1000, 64651,
	-1000, -1000, 1177, -1000, -1000, 1177, -1000, -1000, -1000, -1000,
	-1000, 1378, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1569, 1527, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2243, -1000, 1907, -1000, -1000, 2253, 2948,
	2948, 2948, 2999, 554, 547, -1000, 185, -1000, -1000, 96527,
	-1000, -1000, 37574, 37574, 37574, 37574, 37574, 37574, 37574, 1912,
	-1000, 776, -1000, -1000, 849, -1000, 775, 650, -1000, -1000,
	-1000, -1000, -1000, -1000, 774, -1000, -1000, -1000, -1000, -1000,
	-1000, 3172, -1000, 21227, -1000, -1000, -1000, 526, 773, 37574,
	-1000, -1000, 3228, 3227, 580, -1000, 365, 955, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2694, 770, 767, -1000, 765, 761, 755, 754, 753, -1000,
	-1000, -1000, 744, 743, 742, 741, 739, 736, 730, 728,
	-1000, 1848, -1000, -1000, -1000, -1000, -1000, -1000, 700, 699,
	699, 699, -1000, 1050, -1000, -1000, -1000, 404, 698, 347,
	697, 695, 690, 727, 726, 725, 724, 723, 717, 713,
	712, 711, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1048, -1000,
	-1000, -1000, -1000, 32, 85859, -1000, 568, 32, -1000, -1000,
	710, -1000, 28129, 28129, 28129, -1000, -1000, 2055, 37574, -1000,
	2791, -1000, 47, 47, 891, 44701, -1000, 42835, 891, 502,
	858, 48448, -1000, 2628, -1000, -1000, 709, 358, -1000, -1000,
	-1000, -1000, 19281, 2626, 85859, 85859, 71584, 71584, 71584, 2842,
	37574, -1000, -1000, 53056, 85859, 72041, 3129, 53970, 53056, 85859,
	2685, -1000, -1000, -1000, 85859, -1000, 37574, -1000, 3128, 1416,
	59127, 3044, 5, -1000, -1000, -1000, -1000, -1000, -1000, 2235,
	2206, 1136, 2091, 1252, -1000, 27642, 2886, -1000, -1000, -1000,
	337, 19281, -1000, -1000, -1000, -1000, -1000, 2031, 2822, 1238,
	-1000, 2090, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1704, 2821, -1000, 1949, 2820, 1703, -1000, -1000, 1959,
	-1000, -1000, 2915, -1000, -1000, 1644, 2817, 48, -1000, -1000,
	2351, -1000, -1000, 997, 2816, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 46121, 55830, 28, -1000, -1000, -1000,
	-1000, -17, -1000, 17864, 96527, -1000, -1000, -1000, 96527, 916,
	-1000, -1000, 2815, -1000, 96527, 889, -1000, -1000, 2813, -1000,
	2681, -1000, -1000, -1000, -1000, 3309, -1000, 3307, 2177, 3305,
	3304, 3303, -1000, 1733, 1803, 3302, -1000, 3301, -1000, -1000,
	-1000, -1000, -1000, -1000, 66960, 2054, -1000, -1000, 66034, -1000,
	2173, -1000, -1000, 66497, 1054, -1000, 997, 2159, -1000, 1014,
	-1000, 3300, 3022, 2444, 997, 2158, -1000, -1000, -1000, -1000,
	-1000, 50292, -1000, 50292, -1000, 50292, -1000, 1521, -1000, 89515,
	47, 47, 3172, -1000, -1000, -1000, -1000, -1000, 2812, 3299,
	3296, 3290, -1000, 85859, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 195, 2806, -1000, -1000, 195, 2805, -1000, 195,
	2804, -1000, 73869, -1000, -1000, 1978, 2800, -1000, 194, 2799,
	-1000, -1000, -92, 2798, -1000, -1000, 96527, -1000, -1000, -1000,
	26, -1000, -1000, -1000, 1097, -1000, 45165, -1000, 45165, 78932,
	58666, 961, 771, 51671, 96527, -1000, -1000, -1000, 96527, -1000,
	-1000, -1000, 4, -1000, -1000, 58666, 46121, 96527, -1000, -1000,
	-1000, 96527, -1000, -1000, -1000, 58666, 66034, -1000, 78469, 65577,
	-1000, -1000, 1428, 2301, -1000, -1000, -1000, 961, 58666, 58666,
	58666, -1000, 78006, -1000, -1000, 1905, 1594, 2926, 1898, 71584,
	-1000, 1825, -1000, -1000, -1000, 2955, 2680, -1000, 53513, 73412,
	-1000, 72955, -1000, 72498, -1000, 71584, -1000, 71584, -1000, 3289,
	3288, 3285, -1000, 3284, 2937, 96527, 2934, -1000, 2797, 1694,
	1679, 85859, -1000, -1000, 85859, -1000, 85859, -1000, -1000, -1000,
	1491, -1000, -1000, 2233, -1000, -1000, -1000, -1000, 71584, -1000,
	-1000, -1000, -1000, -1000, -1000, 2671, -1000, 1689, -1000, 1824,
	-1000, 1423, -1000, -1000, 197, -1000, -1000, 5, -1000, 89058,
	-1000, -1000, 2253, -1000, 85859, -1000, 2260, 2637, 2669, 1488,
	2079, 2322, -1000, 33095, 2297, 40009, 2088, 185, -1000, -1000,
	185, 185, 25682, -1000, -1000, 53970, 53970, 19281, 1387, 37574,
	37574, 37574, 37574, 37574, 37574, 37574, 37574, 37574, 37574, 37574,
	37574, 37574, 37574, 37574, 37574, 37574, 37574, 37574, 37574, 37574,
	37574, 37574, 37574, 37574, 37574, 37574, 37574, 37574, 37574, 37574,
	37574, 37574, 37574, 37574, 1932, 37574, 1371, 37574, 37574, 37574,
	37574, 2118, -1000, -1000, 1842, 597, 1879, -1000, 3178, 3178,
	3178, 944, 944, 96841, 96841, 689, 3282, 849, -1000, 37574,
	-1000, 90, 37574, 19754, -1000, 547, 5273, 2166, -1000, 542,
	20253, -1000, -1000, -1000, 21227, 650, 32596, 37574, 1042, 96527,
	-1000, -1000, 1585, 3176, 17393, 2625, 2523, 708, 844, 820,
	23710, 23211, 22712, 22213, 692, 37574, 37574, 37574, 37574, 37574,
	37574, 37574, 37574, -1000, -1000, 3206, -1000, 3176, -1000, -1000,
	-1000, -1000, 3176, 1345, 1292, 3176, -1000, 3176, 3176, 2615,
	2615, 32109, 31610, 31111, 40496, 30612, 37574, 21714, 30113, 29614,
	-1000, 85859, 32, 3127, 37574, 137, -1000, 94916, -1000, 137,
	137, 707, 20, 96527, 2302, 2302, 44239, 2354, 1941, 1941,
	1941, -1000, 891, 13596, 891, 77088, 1955, 891, 891, 321,
	348, 537, 42373, 2791, 77088, 808, 706, 56, 55, 54,
	-1000, -1000, 53, 52, 185, -1000, -1000, 71584, 705, 19754,
	19281, 312, 1453, 18, 2394, 2392, 2385, -1000, 2379, 1603,
	17, 1368, -116, -1000, 884, 15, -1000, 1288, 310, 3176,
	-1000, -1000, -1000, -1000, -1000, 3281, 3280, -1000, 1047, 703,
	701, 341, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	700, 699, 699, 699, -1000, 404, 698, 347, 697, 695,
	690, -1000, -1000, -1000, -1000, 2624, -17, 72041, 927, 12,
	1224, 5, -1000, -1000, -1000, 59127, 1177, -1000, 1591, -1000,
	-1000, -1000, -1000, -1000, -1000, 1440, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 580, -1000, -1000, -1000, -1000, -1000, -1000,
	3188, 3186, 30, -1000, -1000, 19281, -1000, 0, 1732, -1000,
	60959, 2219, 2921, 2909, 1512, -1000, 1472, 2996, 64651, 3089,
	3112, 657, -1000, 2623, -1000, -1000, 947, 1670, 1366, 64651,
	1949, -1000, 53970, -1000, 2378, 2993, 1349, 1339, 1349, 1349,
	1343, -1000, 64651, 1362, -1000, 1360, -1000, -2, 3080, 3108,
	559, -1000, 2622, 1358, -1000, -1000, 71584, 19281, 1489, 1484,
	1560, 1356, 29, -1000, 3071, 3060, -1000, 1657, -1000, 58666,
	929, 28, 55830, 85859, 295, -1000, 37574, 90, 37574, 90,
	3041, -1000, -1000, 2796, -1000, -1000, -1000, 3278, 1755, 2269,
	-1000, -1000, -1000, 684, 2156, 2618, 85859, 2397, 27, 71584,
	-1000, 2793, 1949, 2155, -1000, -1000, 65114, -1000, 2792, 682,
	3275, -1000, 88601, -1000, 2929, 1361, 2790, 1152, 193, 3126,
	-1000, 193, 50749, -1000, 85859, -1000, -1000, 85859, -1000, -1000,
	-1000, 3265, -1000, 71584, -1000, -1000, 71584, -1000, 71584, -1000,
	71584, 192, 2789, -1000, -1000, 85859, -1000, 71584, 71584, 58666,
	58666, 4564, 60045, -4, -5, 535, -1000, 77549, 85859, 1149,
	60502, 85859, 2876, 961, 46121, -1000, -6, 4, 961, 961,
	929, -1000, 929, -1000, 71584, 2649, -1000, 961, 961, 961,
	-1000, -1000, -1000, -1000, 3264, 3258, -1000, -1000, -1000, 994,
	71584, 85859, 71584, -1000, -1000, 85859, -1000, 85859, -1000, 994,
	85859, 994, 85859, 994, 85859, -1000, -1000, -1000, -1000, -1000,
	-1000, 90, 37574, 1545, -1000, 2647, -1000, 2638, -1000, 84,
	-1000, -1000, -1000, -1000, -1000, 2052, 71584, 71584, 71584, 71584,
	85859, 71584, -1000, 64651, -1000, 2260, 2637, -1000, -1000, -1000,
	-1000, -1000, -1000, 1403, 2021, -1000, 2343, -1000, 1504, -1000,
	-1000, -1000, 96527, 40967, -1000, -1000, 96527, 1598, -1000, 39522,
	39035, -1000, -1000, 1635, 71584, 2407, -1000, 2407, -190, -1000,
	94671, 2341, 71584, -1000, -1000, -1000, -1000, -1000, 946, 1173,
	1173, 1208, 1208, 1208, 1208, 3097, 4194, 4333, 501, 4769,
	4769, 5381, 5381, 5381, 5381, 5381, 4769, 289, 944, 944,
	289, 289, 289, 289, 289, 944, 944, 944, 4769, 4769,
	4769, 96841, 96684, 10768, 37574, 37574, 1353, 1831, 597, 10214,
	37574, 7178, 7178, 7178, 7178, -1000, 1920, -1000, -1000, -1000,
	-1000, 2617, 683, 40496, 40496, -1000, -1000, -1000, -1000, 20740,
	37574, -1000, -1000, -1000, -1000, 29115, -1000, -1000, 94143, -268,
	531, -148, 3, -1000, 37574, 37574, 37574, 527, -1000, 293,
	37574, 85859, -1000, 12653, 807, -84, -1000, -7, 1382, -1000,
	37574, -1000, -1000, 1344, -1000, 1342, 1334, 1322, -1000, 680,
	522, -1000, 290, -1000, 1943, 679, 677, 37574, -1000, -1000,
	-1000, -1000, -1000, 93986, -1000, -1000, 93766, -1000, -1000, 93609,
	-1000, -1000, 93452, -1000, -1000, -1000, 96307, 12345, 11725, 11569,
	4262, 10927, 7681, -16, 521, -21, 517, 939, 937, 514,
	510, 507, -24, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -26, 506, -1000, 2612, -148, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 505, -1000, 497, -1000, 96003, -148,
	488, 3942, -1000, 40496, 40496, 40496, -1000, 486, -1000, 94751,
	-1000, 95923, 28628, 28628, 28628, 484, 95758, 37574, -148, -41,
	-1000, -43, -1000, -1000, 544, -44, 989, 28129, 43313, 19281,
	-1000, 989, 989, 37574, -1000, 37574, 2360, -1000, -1000, -1000,
	2357, 1957, 2302, 44239, -1000, -1000, -1000, -1000, 77088, -1000,
	3172, 2440, -1000, 77088, -1000, -1000, 85859, 568, -1000, 77088,
	77088, 19281, 891, -1000, 891, 77088, 664, -1000, -1000, -1000,
	-1000, -1000, 481, 47524, 3, 288, 19281, 961, -1000, 2377,
	2377, 2377, 2377, -1000, -1000, 85859, 3149, -1000, 1855, -1000,
	53970, -1000, 848, 1171, 19281, -1000, -1000, -1000, 675, -1000,
	3176, 3176, -1000, 3176, 85859, 106, 27642, -1000, 1177, -1000,
	-1000, 1554, -1000, 1784, -1000, 1277, -1000, -1000, -1000, -1000,
	27642, -1000, 2027, 85859, 85859, 71584, -1000, -1000, 2151, 88144,
	2147, 53970, 85859, -1000, -1000, 674, 671, 2331, 2329, 1087,
	85859, 85859, 2320, 87687, 87230, 85859, 1940, 37574, 2111, 1675,
	90, 90, -1000, -1000, 90, 668, 1309, 71584, 71584, 71584,
	1695, -1000, -1000, -1000, -1000, -1000, 64194, -1000, -1000, 3204,
	3190, -1000, 1349, -1000, -1000, -1000, 1349, 1949, 1693, 71584,
	85859, 1873, 90, 90, -1000, -1000, 90, 667, 19281, 1789,
	-1000, 2682, 85859, 3225, 85859, 85859, 85859, 55373, 2942, 86773,
	85859, 1657, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 54912,
	1162, 997, 2449, -1000, -1000, 16922, 96527, -1000, 96527, -1000,
	53056, 85859, -1000, 1052, 85859, 60502, 979, 2788, 49835, -17,
	961, 58666, 71584, 27, 85859, -1000, 1949, 2787, 568, 2146,
	-1000, -1000, 58666, 659, 3255, 3254, -1000, 2049, 2145, -1000,
	-1000, 86316, 2832, 882, 85859, 989, 44239, 1913, -1000, 47987,
	1069, 85859, 1666, 105, -1000, -1000, -1000, 70, 85859, -1000,
	3253, -1000, -1000, 195, 195, 195, -1000, 71584, 71584, 1978,
	-1000, 194, -1000, -92, -1000, -1000, 4564, 4564, 961, -223,
	656, -1000, 912, 909, 46592, 58666, -51, -1000, -1000, -1000,
	-1000, -1000, 71584, 85859, 779, 2442, 85859, -54, -1000, 286,
	652, -1000, -1000, -1000, 961, 2608, -1000, -1000, 1030, -1000,
	1412, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	41, -17, -17, -1000, 994, -1000, 994, -1000, 994, -1000,
	96527, -1000, 1540, 1538, 85859, -1000, 19281, 85859, 71584, 19281,
	71584, 2636, 2553, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1176, -1000, 1598, 2020, -1000, 650, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2214, -1000, 25, 25682,
	2098, -1000, -1000, 71584, 37, 37574, 37574, 9071, 8231, 37574,
	40496, 40496, -1000, 37574, 8062, -1000, -1000, -1000, -1000, -1000,
	2606, 649, 37574, 53970, 987, 456, -1000, 480, 7295, 289,
	-1000, 37574, -1000, 478, 27155, -1000, 95259, -29, -56, -1000,
	14080, -148, -64, -1000, -1000, 840, -1000, 2747, -1000, 37574,
	95415, 2183, 2024, 1741, 1555, 3176, 3224, 16451, -1000, 51210,
	1039, 1969, 93232, -1000, -1000, -1000, -1000, 53970, 53970, 37574,
	37574, -1000, 37574, 37574, 37574, -1000, -1000, -1000, 3176, 934,
	-1000, -1000, -1000, 934, -1000, -1000, 1349, -1000, 1349, -1000,
	37574, -1000, -1000, 2605, 37574, -1000, 53970, 53970, 40496, 40496,
	40496, 40496, 40496, 40496, 40496, 40496, 40496, 40496, 40496, 40496,
	40496, 40496, 40496, 40496, 40496, 40496, 40496, 2254, 40496, 3165,
	3165, 3165, -1000, 2545, 2605, 37574, 37574, 53970, 476, 475,
	474, -1000, 37574, -148, -1000, -1000, 4564, 647, -1000, 2205,
	-1000, 2519, -1000, 37574, -1000, -182, -1000, 2791, -1000, -1000,
	2519, 2519, -66, 96527, 44239, 44239, -1000, 646, 37574, 2353,
	-1000, -1000, 805, -254, -1000, 908, -1000, -1000, -1000, -1000,
	-1000, 568, -1000, -1000, -1000, 285, 77088, 77088, 804, -1000,
	-67, -1000, -1000, -72, -1000, 3125, 473, 19281, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -17, 2003, 3223, -1000,
	3183, 837, 802, 196, 3176, 469, 466, 463, -17, 85859,
	-1000, 5, -1000, -1000, -1000, 37574, -1000, -1000, 2919, 1317,
	1285, -1000, 2786, -1000, 2142, -1000, 1073, -1000, 1691, -1000,
	37574, 37574, 645, 643, 3252, 1797, 3249, 1092, 2777, 1978,
	2776, 1978, -1000, -1000, 956, -1000, 96527, 642, 637, -1000,
	0, 1705, 1004, -1000, -1000, 37574, 37574, 76631, -1000, 425,
	2915, 36, -1000, 1282, -1000, -1000, -1000, -1000, 1949, 1281,
	-1000, -1000, -1000, 1002, -1000, -1000, 37574, -1000, -2, 1278,
	3100, 2141, 71584, 1264, -1000, 1263, -1000, -1000, -1000, -1000,
	-1000, -1000, 3049, 1978, 2775, 1251, -1000, -1000, -1000, 54441,
	-1000, 993, 2603, -1000, 1261, 3247, 71584, 3244, 462, -75,
	-3, 53970, 3123, 2026, 638, 71584, 928, -1000, 3172, -1000,
	-1000, -1000, -1000, 71584, 3118, 2768, 997, 3222, -1000, -1000,
	71584, 2767, 2048, 2140, 2262, 882, 59588, -1000, 997, 1967,
	-69, -1000, 1666, 26656, 2911, -78, -1000, -1000, -1000, 989,
	50749, 44239, 37574, 3243, -85, -1000, -1000, -1000, -1000, -1000,
	192, -1000, -1000, -1000, -1000, -1000, 75713, 75713, 58666, 58666,
	58666, 961, 85859, 85859, 60502, -1000, 634, 85859, 85859, 632,
	-1000, 85859, 85859, 3241, 58666, -1000, 90, -1000, 2000, 71584,
	15980, -1000, -1000, -1000, -1000, -1000, 994, -1000, -1000, 1876,
	2084, 1876, 1653, 1632, -1000, 2019, -1000, -1000, -1000, -1000,
	2384, 2930, 19281, 3088, 7178, 37574, 37574, 6645, 362, 276,
	7178, 37574, 37574, 53970, 5354, -91, 37574, 37574, -1000, 37574,
	801, 96527, 3221, 37574, 460, 458, -1000, -1000, -1000, 3174,
	-1000, -1000, -1000, 96527, 37574, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 455, -1000, 138, -1000, -1000, -1000, 91343, -1000,
	37574, 454, 2991, -1000, 453, 452, 6079, 229, 93075, 92918,
	92698, 440, -1000, -1000, 431, 430, 96527, 2545, 96527, -1000,
	-1000, 952, 952, 1314, 1314, 1314, 1314, 3165, 314, 429,
	342, 886, 886, 886, 996, 1028, 1028, 886, 886, 886,
	2601, 2268, 631, 5425, -1000, -1000, 96527, 96527, 426, -1000,
	-1000, -1000, -148, 418, 4564, -1000, 2517, 2989, 96527, -1000,
	44239, 2517, 2517, -1000, -1000, 1957, 85859, 96527, 44239, -1000,
	2440, -1000, 14562, -1000, 19281, -1000, -1000, -1000, -1000, 3172,
	-1000, 47524, -1000, 629, -1000, 107, -1000, -1000, 800, 3239,
	825, 19281, 417, -1000, -1000, -1000, -17, 96527, 85859, 85859,
	85859, 2762, -1000, 1979, -1000, 1087, 92541, -93, -1000, 94671,
	37574, 85859, -1000, -1000, 1869, 2296, 1198, -1000, 2958, 85859,
	-1000, 85859, -1000, -1000, 85859, 85859, 71584, 2746, -94, 96527,
	-19, -1000, 907, -1000, 1346, -1000, 15509, 71584, 71584, 2743,
	-96, 19281, -1000, 3220, 3218, 2756, 2966, 3217, 85859, -1000,
	85859, 71584, 2874, -1000, -1000, -1000, 2139, 58666, 46121, -1000,
	568, -1000, 2435, -1000, 74789, 2038, 90, -1000, 76174, 3238,
	628, -1000, 1994, -1000, 798, 1949, 90, 71584, -1000, 411,
	-37, -1000, 1082, 19281, 71584, 2755, 2264, 882, 59588, -1000,
	1361, 2322, -1000, -46, -1000, 612, 90, 1967, -1000, -69,
	96527, -1000, 905, -1000, -1000, -99, -1000, -1000, 400, -1000,
	2873, 2871, -1000, 2516, 37574, 622, 614, 85859, 2867, -1000,
	-1000, -104, -1000, 2207, -1000, -1000, -1000, -1000, -1000, 19281,
	1649, -1000, 613, 611, -1000, -1000, -1000, -1000, 2930, 7178,
	7178, 37574, 37574, 37574, 7178, 5354, -106, -1000, 7178, 7178,
	-148, -1000, -1000, 95259, -1000, -1000, -1000, 96527, -1000, 15038,
	1886, -1000, 92384, -1000, 25682, -1000, -1000, 37574, 37574, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 40496, 2579, 609,
	53970, -1000, -1000, 397, 1032, 37574, 37574, 2791, 1032, 1032,
	-1000, -111, -1000, -1000, -1000, 3172, 107, -1000, -1000, 3237,
	19281, 816, -1000, 3236, -1000, -1000, -1000, -1000, -1000, 85859,
	-1000, 85859, -1000, 19281, 85859, 2518, 2121, -1000, -1000, 2317,
	607, 40496, 71584, 893, -1000, 3143, 2507, 1780, 37574, 2098,
	-113, -114, 2120, -1000, -1000, 2117, 37574, -1000, 53970, 606,
	1978, 1978, -128, -131, -1000, 37574, 1235, 85859, 26169, -1000,
	3235, 2915, -1000, -1000, 37574, 1232, -1000, -1000, -1000, 3215,
	1978, 19281, -1000, 1978, 1978, 2966, 1188, -77, 604, -1000,
	902, -1000, -1000, -92, 993, 3116, 1873, 2458, -1000, -1000,
	-1000, -1000, 2314, -1000, -1000, 85859, 2288, 974, -133, -1000,
	900, 890, -1000, 60502, 979, 942, -1000, -1000, -1000, 568,
	-1000, 3181, 600, 85859, 2045, 598, 19281, -1000, 882, 59588,
	-1000, 2832, 1666, -1000, 2810, 85859, 2906, -1000, 2322, 597,
	-1000, 961, 595, 593, 2984, 2984, -134, 37574, 37574, -136,
	592, 961, -105, -1000, 867, 863, -1000, -1000, 71584, 71584,
	37574, 37574, -1000, 7178, 7178, 7178, -1000, 385, -1000, -1000,
	1967, 2988, -1000, -123, 92164, 91850, 5220, 40496, 53970, -139,
	-1000, -1000, 85859, 96527, -148, -1000, -1000, -1000, 665, -1000,
	3234, -1000, -1000, 1878, -1000, -1000, -1000, 85859, 2131, -1000,
	1085, 37574, 5425, 589, 37574, -1000, 3114, -1000, 2433, 2550,
	2435, 588, -1000, -1000, -1000, -1000, -1000, 1076, 1720, -1000,
	-1000, 96527, 2966, 37574, -1000, -1000, 587, 576, 96527, 574,
	881, 2573, -1000, -1000, -1000, 96527, 573, 3100, -1000, -1000,
	-1000, -1000, 1978, 71584, 2167, 2167, 58666, 1739, 90, 979,
	-1000, 1928, 2038, 572, -1000, -1000, 2023, 2347, -1000, 76174,
	41909, 41909, 383, 3109, 942, -1000, 3169, -1000, 3104, -1000,
	37574, -1000, 71584, 37574, 2042, 59588, -1000, 2262, -1000, 1347,
	-141, 85859, 1666, -1000, -1000, 58666, 58666, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1076, -142,
	-152, -1000, 58666, -1000, 2207, -1000, 85859, -1000, 85859, -1000,
	-1000, -153, -158, -1000, 1845, 37574, 25682, -1000, -1000, 5220,
	-160, -1000, -124, -1000, 3094, -1000, -1000, -1000, -1000, 2754,
	2511, 91807, 2217, 85859, 12996, -1000, 2546, -1000, -1000, 1873,
	85859, 2435, 2477, 71584, 1084, -166, 1876, 1876, 37574, 25195,
	1906, 37574, -1000, -1000, 2966, -1000, -167, -1000, 2535, 2542,
	-1000, 2023, 71584, 85859, -1000, 2947, -1000, 2866, -1000, -1000,
	-1000, 2435, 90, -1000, -1000, 90, -168, 1082, -169, 71584,
	-1000, 2264, 1510, -1000, 989, -1000, -1000, -175, -176, 1780,
	1076, 989, -183, -1000, -184, -185, -1000, -1000, 380, 38548,
	38548, 38548, -148, -190, -1000, 85859, 570, 2654, 990, -1000,
	2028, 1844, 363, 1129, -1000, -1000, 2507, -193, -1000, 988,
	568, -1000, 37574, 1076, -196, -1000, 1068, -201, -1000, 1066,
	-210, -1000, 2568, -1000, -217, 1978, -1000, 983, 3032, -1000,
	-1000, -1000, -1000, -1000, 567, -218, -1000, -1000, 2209, -1000,
	1873, 974, -1000, 1076, 566, 1780, 565, -1000, 50749, -1000,
	961, 961, 2435, 1780, -1000, 961, -1000, -1000, -1000, 2744,
	-1000, 41438, 2033, 1623, 94363, 2744, 2744, -1000, -1000, 85859,
	3030, -1000, 2041, 2029, 1501, -1000, -1000, -1000, -1000, -1000,
	-1000, 989, -1000, 3011, 2217, 96527, 2435, -1000, 1876, 2455,
	-1000, 1876, 2549, -1000, 1901, -1000, -1000, -1000, 2731, 3164,
	85859, -1000, 85859, 1601, 1599, 3233, 979, 2023, 1780, 37574,
	2435, 37574, -224, -1000, -1000, 1873, 2435, -1000, -1000, 1726,
	3136, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 877,
	-1000, 2846, -1000, 1165, 2012, 2012, -1000, 875, 2028, -1000,
	-1000, 562, -1000, 561, -1000, 1575, -1000, -1000, -225, -1000,
	-1000, 3232, -1000, 2023, -1000, 2435, -228, 1873, -233, -1000,
	989, 1873, 1593, -1000, -1000, 1947, 38061, 37574, -1000, 3153,
	-1000, -1000, 2276, -1000, 37574, 2507, 37574, 37574, 1977, 1970,
	-1000, -1000, 1873, 1076, 989, 1780, -1000, 989, -1000, -1000,
	-1000, 96527, -1000, -1000, -1000, 96527, -1000, -235, -236, 49374,
	-1000, -1000, -1000, 989, 1780, -1000, 2435, -1000, 1873, 1231,
	-223, 75713, -1000, 2435, 1873, -1000, 556, -243, 1873, 989,
	37574, -1000, 989, -1000, -245, -1000, 1873, -1000,
}
var sqlPgo = [...]int{

	0, 3959, 3949, 3948, 3947, 3943, 3941, 3940, 3939, 3938,
	3937, 3936, 3934, 3933, 3932, 3930, 3928, 3927, 3926, 3925,
	3923, 3917, 3905, 3901, 3900, 3895, 3892, 3889, 3886, 3885,
	3882, 3878, 3877, 3876, 3874, 3873, 3871, 3870, 3869, 3868,
	3865, 3861, 3860, 3854, 3853, 3852, 3851, 3850, 37, 3847,
	3843, 3839, 3838, 3837, 3836, 3833, 3832, 3831, 3830, 3828,
	3826, 3820, 3819, 3817, 3816, 3815, 3814, 42, 3812, 231,
	3808, 3807, 3799, 3798, 3797, 3794, 3793, 3781, 3779, 3778,
	3776, 230, 3774, 132, 3773, 3772, 3771, 3770, 3769, 229,
	3767, 3765, 3764, 3763, 3762, 3761, 3760, 3756, 3755, 3754,
	3748, 3747, 3746, 100, 198, 3745, 78, 3744, 3741, 3735,
	3734, 3733, 3731, 3730, 3729, 3728, 3726, 200, 3723, 225,
	3719, 3718, 3716, 3715, 3714, 3711, 3709, 3705, 3703, 3702,
	3701, 3700, 3699, 3691, 3690, 3685, 3684, 3683, 3680, 3679,
	3672, 3670, 3669, 3667, 3665, 3663, 3662, 3660, 3659, 235,
	158, 3658, 3657, 223, 221, 3656, 3655, 3653, 3650, 3649,
	102, 12, 94, 3646, 3644, 71, 47, 45, 98, 48,
	3642, 7, 142, 237, 8692, 183, 3639, 3638, 3634, 194,
	164, 3632, 189, 3629, 3627, 3625, 3622, 76, 62, 146,
	148, 133, 139, 125, 3621, 3620, 75, 57, 40, 34,
	3619, 3618, 3616, 3156, 88, 3615, 222, 207, 130, 3612,
	3611, 3609, 1329, 3606, 32, 3604, 174, 70, 104, 49,
	90, 3598, 129, 20, 3597, 154, 38, 3594, 122, 74,
	59, 7945, 6877, 3593, 84, 55, 95, 1092, 147, 128,
	173, 126, 171, 167, 140, 259, 3591, 206, 3588, 3113,
	63, 127, 3586, 3584, 3575, 56, 163, 85, 3574, 3573,
	46, 1, 4, 8, 156, 14, 91, 18, 3572, 16,
	3571, 3570, 3565, 3564, 24, 153, 3561, 234, 3559, 93,
	36, 10, 3557, 28, 176, 3546, 184, 105, 3545, 3543,
	213, 169, 161, 3541, 79, 186, 3540, 3537, 3533, 3532,
	3529, 108, 23, 103, 3528, 3527, 119, 193, 162, 3526,
	39, 3525, 141, 77, 106, 232, 97, 182, 89, 187,
	149, 192, 3524, 3522, 3519, 152, 3518, 3514, 181, 138,
	3513, 3511, 168, 236, 33, 60, 195, 52, 160, 137,
	3510, 166, 3509, 3507, 3506, 233, 145, 180, 15, 9,
	67, 101, 30, 22, 191, 121, 257, 81, 3505, 5403,
	1327, 65, 43, 3504, 120, 87, 53, 99, 116, 218,
	54, 3500, 3499, 1412, 3498, 3496, 3495, 3493, 159, 3491,
	3490, 3489, 112, 115, 155, 3488, 80, 64, 13, 110,
	284, 224, 82, 188, 172, 212, 3485, 151, 3484, 41,
	109, 3480, 165, 210, 3479, 3478, 136, 3477, 118, 226,
	50, 117, 3474, 179, 3473, 3471, 3470, 3467, 3466, 3464,
	3463, 219, 190, 3461, 3458, 3452, 113, 150, 3450, 216,
	134, 143, 86, 35, 3448, 72, 2485, 3446, 199, 197,
	58, 3444, 294, 44, 0, 9388, 9080, 6552, 9936, 3443,
	2428, 3442, 3441, 3440, 178, 111, 3437, 3436, 3435, 96,
	3434, 66, 3433, 3431, 51, 3429, 17, 5, 6, 26,
	19, 344, 283, 3428, 3427, 83, 107, 123, 3426, 227,
	185, 3423, 3422, 3421, 3420, 69, 3419, 29, 3418, 27,
	3417, 3416, 31, 2, 21, 3415, 3413, 204, 3412, 203,
	3410, 131, 3409, 3075, 114, 3408, 3407, 214, 73, 3406,
	209, 3405, 3040, 3404, 3403, 11, 3402, 144, 175, 3400,
	3399, 3398, 135, 3395, 3394, 3393, 211, 3392, 3390, 25,
	3389, 3, 3387, 3384, 177, 2954, 3382, 3380, 61, 3377,
	157,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 11,
	11, 7, 7, 8, 8, 8, 36, 36, 9, 9,
	9, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 15, 15, 26, 26, 16, 16, 28, 28,
	17, 17, 29, 29, 507, 507, 20, 31, 21, 32,
	14, 508, 508, 508, 508, 25, 22, 33, 23, 23,
	23, 23, 23, 163, 163, 163, 163, 19, 19, 27,
	27, 190, 190, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 506, 506, 192, 192, 191,
	186, 186, 509, 509, 193, 193, 193, 195, 195, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 410, 410,
	410, 520, 520, 520, 521, 521, 522, 522, 522, 522,
	522, 37, 37, 501, 501, 165, 165, 165, 167, 167,
	166, 166, 166, 58, 58, 514, 514, 515, 515, 513,
	513, 516, 516, 516, 164, 164, 164, 102, 102, 102,
	103, 103, 104, 104, 168, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 85, 85, 442, 442, 443, 443,
	159, 159, 160, 160, 160, 160, 161, 161, 162, 162,
	162, 51, 39, 39, 39, 39, 39, 39, 39, 40,
	40, 40, 40, 41, 41, 41, 41, 41, 41, 42,
	42, 42, 42, 42, 42, 49, 49, 49, 49, 150,
	150, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	524, 524, 525, 525, 526, 526, 527, 527, 527, 527,
	527, 527, 527, 527, 527, 527, 527, 527, 527, 527,
	527, 527, 527, 527, 527, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 64, 64, 276, 276, 248, 248, 65,
	65, 65, 66, 66, 67, 67, 53, 53, 499, 499,
	291, 291, 401, 401, 69, 69, 311, 311, 70, 70,
	70, 70, 70, 70, 71, 71, 71, 71, 71, 71,
	71, 72, 72, 72, 72, 72, 72, 72, 72, 72,
	72, 72, 72, 78, 78, 78, 79, 79, 79, 76,
	76, 76, 74, 74, 74, 73, 73, 73, 77, 77,
	77, 240, 240, 75, 75, 75, 292, 292, 80, 80,
	80, 80, 249, 81, 81, 81, 81, 81, 81, 81,
	81, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 403, 403, 82, 82, 82, 371,
	371, 86, 86, 86, 326, 326, 87, 87, 87, 87,
	87, 88, 88, 88, 88, 105, 105, 105, 105, 503,
	503, 284, 284, 206, 206, 206, 206, 95, 95, 95,
	95, 96, 96, 96, 97, 97, 155, 155, 111, 111,
	111, 111, 111, 110, 110, 110, 110, 110, 110, 43,
	43, 43, 44, 44, 45, 45, 46, 46, 47, 47,
	48, 48, 48, 48, 48, 113, 113, 517, 517, 115,
	112, 112, 112, 114, 114, 114, 114, 116, 117, 117,
	117, 117, 117, 117, 117, 117, 118, 118, 435, 435,
	300, 300, 433, 433, 451, 451, 434, 434, 253, 253,
	253, 253, 253, 254, 254, 254, 441, 441, 441, 441,
	441, 441, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 156, 156,
	157, 158, 158, 158, 158, 138, 138, 138, 149, 149,
	149, 149, 149, 149, 149, 141, 141, 141, 128, 128,
	120, 120, 120, 120, 120, 124, 124, 124, 124, 124,
	124, 124, 124, 121, 121, 130, 130, 130, 130, 130,
	125, 125, 127, 127, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 122, 122, 122, 122, 132, 132, 132,
	132, 333, 333, 333, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 145, 145, 145, 145, 145, 145,
	385, 385, 139, 139, 139, 139, 144, 144, 144, 144,
	316, 316, 136, 136, 136, 137, 137, 137, 142, 142,
	143, 140, 140, 146, 146, 146, 146, 123, 123, 123,
	528, 528, 528, 147, 147, 135, 135, 148, 148, 148,
	148, 148, 148, 148, 148, 134, 134, 134, 133, 133,
	133, 133, 126, 500, 500, 497, 497, 497, 497, 497,
	497, 497, 497, 498, 498, 502, 502, 91, 91, 91,
	91, 91, 98, 98, 98, 98, 98, 92, 92, 92,
	92, 93, 93, 93, 93, 93, 59, 59, 59, 60,
	60, 171, 171, 171, 171, 261, 261, 261, 261, 169,
	169, 170, 170, 61, 61, 529, 529, 529, 510, 510,
	510, 511, 511, 511, 511, 511, 511, 255, 255, 256,
	256, 351, 351, 351, 351, 351, 259, 259, 259, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 262, 262,
	194, 194, 194, 265, 266, 266, 263, 263, 264, 264,
	264, 268, 268, 267, 270, 270, 269, 350, 460, 460,
	462, 462, 462, 462, 462, 462, 462, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 530, 530,
	458, 458, 458, 459, 454, 454, 455, 455, 455, 455,
	455, 257, 257, 258, 258, 258, 258, 456, 457, 282,
	282, 388, 461, 461, 463, 463, 465, 531, 531, 531,
	531, 531, 531, 532, 532, 532, 349, 349, 348, 348,
	274, 274, 466, 466, 466, 466, 467, 467, 467, 467,
	467, 470, 469, 468, 468, 468, 468, 468, 63, 63,
	63, 313, 313, 312, 312, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	152, 152, 209, 209, 57, 57, 57, 12, 12, 12,
	512, 512, 512, 62, 62, 62, 62, 208, 208, 208,
	208, 208, 208, 505, 505, 504, 504, 210, 210, 534,
	534, 68, 68, 68, 68, 68, 68, 68, 404, 404,
	405, 405, 56, 56, 56, 56, 56, 334, 334, 332,
	332, 331, 331, 281, 281, 387, 214, 214, 187, 187,
	187, 24, 18, 18, 34, 34, 35, 35, 30, 30,
	518, 518, 519, 519, 94, 94, 99, 99, 99, 99,
	100, 100, 100, 100, 101, 101, 101, 101, 109, 109,
	151, 151, 151, 151, 151, 151, 151, 38, 38, 38,
	38, 50, 50, 50, 50, 107, 536, 536, 536, 108,
	108, 108, 535, 535, 207, 207, 345, 345, 346, 346,
	537, 537, 347, 347, 347, 347, 201, 200, 202, 202,
	55, 55, 55, 196, 196, 197, 197, 198, 198, 199,
	199, 538, 538, 89, 89, 89, 154, 154, 247, 247,
	247, 341, 341, 341, 275, 275, 220, 220, 344, 344,
	342, 342, 342, 342, 310, 310, 310, 153, 153, 289,
	289, 302, 302, 303, 303, 398, 398, 304, 106, 106,
	174, 174, 172, 172, 172, 172, 172, 172, 172, 172,
	179, 179, 180, 180, 181, 181, 182, 183, 183, 183,
	183, 293, 293, 184, 184, 184, 173, 173, 173, 175,
	175, 175, 175, 175, 175, 175, 178, 178, 178, 178,
	185, 185, 185, 177, 177, 477, 477, 477, 479, 479,
	481, 481, 480, 480, 476, 476, 478, 478, 533, 533,
	315, 315, 315, 272, 273, 271, 271, 279, 279, 277,
	278, 278, 280, 280, 386, 386, 386, 188, 188, 188,
	307, 307, 307, 307, 308, 308, 337, 337, 335, 335,
	335, 335, 336, 336, 338, 338, 338, 339, 339, 340,
	340, 306, 306, 367, 367, 176, 176, 176, 286, 286,
	286, 287, 287, 357, 357, 357, 357, 357, 357, 358,
	358, 356, 356, 356, 356, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 390, 391, 391, 288, 288, 392,
	343, 343, 495, 495, 495, 496, 496, 384, 384, 393,
	393, 393, 393, 393, 393, 382, 382, 383, 383, 399,
	400, 400, 319, 319, 319, 319, 317, 317, 320, 320,
	320, 320, 318, 318, 394, 394, 394, 394, 309, 309,
	395, 395, 395, 395, 396, 352, 353, 353, 406, 406,
	406, 406, 408, 285, 285, 285, 285, 285, 453, 452,
	452, 407, 407, 407, 407, 407, 407, 407, 407, 407,
	422, 422, 422, 422, 422, 422, 422, 422, 423, 423,
	423, 423, 423, 423, 409, 409, 409, 409, 409, 413,
	413, 413, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 414, 414, 419, 419, 420, 420, 420,
	415, 416, 421, 421, 421, 421, 539, 539, 425, 425,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 411,
	411, 411, 418, 418, 418, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 327, 327,
	329, 329, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 361,
	361, 361, 361, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 471, 471,
	471, 471, 471, 471, 471, 471, 363, 363, 474, 474,
	475, 475, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 482, 482, 483, 483, 485, 485, 486, 486, 487,
	488, 488, 488, 489, 490, 490, 484, 484, 491, 491,
	491, 491, 492, 492, 493, 493, 493, 493, 493, 494,
	494, 494, 494, 494, 373, 373, 374, 374, 380, 380,
	380, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 211, 211, 211,
	211, 211, 298, 298, 296, 296, 296, 299, 299, 297,
	297, 295, 295, 294, 294, 370, 370, 368, 368, 372,
	372, 321, 321, 424, 424, 424, 424, 424, 424, 424,
	424, 322, 322, 322, 330, 323, 323, 324, 324, 324,
	324, 324, 364, 365, 325, 325, 325, 366, 366, 375,
	379, 379, 378, 377, 377, 376, 376, 354, 354, 355,
	355, 305, 305, 540, 540, 301, 301, 397, 397, 397,
	397, 251, 251, 290, 290, 250, 250, 242, 242, 243,
	243, 243, 243, 283, 283, 381, 381, 426, 426, 427,
	427, 428, 428, 429, 429, 430, 431, 432, 369, 369,
	230, 229, 217, 218, 228, 227, 226, 216, 219, 223,
	224, 225, 221, 222, 236, 235, 234, 241, 232, 233,
	402, 215, 244, 244, 245, 245, 245, 246, 246, 246,
	246, 212, 212, 213, 213, 237, 237, 238, 239, 239,
	231, 231, 231, 203, 203, 203, 204, 204, 205, 205,
	440, 440, 437, 437, 437, 438, 438, 438, 439, 439,
	439, 439, 436, 436, 436, 436, 436, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 445, 445, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 447, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 450, 450,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 3, 1, 1, 3, 4, 6, 1, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 10, 3,
	6, 4, 3, 1, 3, 2, 1, 1, 3, 1,
	3, 2, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 3, 6, 4, 6, 7,
	9, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 12, 3, 1, 0, 1, 1, 2,
	2, 3, 3, 0, 5, 7, 0, 5, 6, 2,
	1, 3, 1, 3, 1, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 6, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	3, 3, 4, 3, 4, 7, 4, 4, 4, 3,
	5, 7, 4, 3, 3, 4, 3, 3, 3, 3,
	2, 0, 1, 0, 1, 0, 3, 3, 3, 3,
	3, 6, 4, 4, 4, 3, 5, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 2, 1,
	2, 1, 2, 7, 3, 2, 0, 1, 3, 3,
	1, 0, 1, 2, 2, 1, 6, 5, 1, 2,
	1, 3, 2, 0, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 3, 4, 6, 3, 4,
	6, 3, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 1, 3, 3, 5, 3, 1, 3, 2, 2,
	2, 2, 1, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 3, 5, 7, 2, 3,
	0, 3, 5, 2, 3, 0, 2, 3, 2, 3,
	2, 6, 4, 7, 2, 6, 4, 7, 2, 1,
	1, 1, 3, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 2, 4, 3, 2, 2, 1, 2,
	1, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	1, 3, 5, 4, 6, 4, 3, 0, 1, 3,
	2, 4, 2, 4, 1, 6, 3, 1, 1, 5,
	3, 2, 6, 3, 3, 4, 4, 3, 1, 3,
	2, 3, 3, 1, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 2,
	1, 3, 3, 3, 3, 2, 3, 3, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 5, 5, 5, 3, 4, 4, 3, 4, 4,
	3, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 4, 3, 4, 3, 3, 4, 4,
	5, 0, 1, 1, 3, 2, 4, 3, 3, 5,
	4, 3, 5, 3, 5, 4, 6, 4, 6, 4,
	1, 0, 3, 4, 4, 5, 7, 5, 3, 3,
	2, 0, 4, 2, 3, 4, 2, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 3, 4, 3,
	1, 1, 1, 2, 3, 2, 3, 6, 6, 7,
	9, 7, 9, 3, 4, 10, 10, 3, 5, 5,
	5, 3, 5, 2, 0, 1, 1, 1, 1, 3,
	2, 2, 2, 2, 1, 2, 0, 1, 2, 1,
	2, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 6, 3, 11,
	14, 0, 2, 4, 3, 0, 4, 5, 4, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 1, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 8, 0,
	1, 1, 0, 2, 1, 0, 1, 0, 9, 9,
	3, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 1,
	2, 8, 4, 2, 5, 5, 5, 2, 1, 3,
	10, 11, 7, 5, 3, 1, 5, 9, 7, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 5, 1,
	3, 1, 2, 0, 1, 2, 2, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 6, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	4, 2, 2, 2, 4, 7, 3, 4, 6, 3,
	1, 1, 1, 8, 10, 11, 5, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 3, 0,
	1, 8, 3, 6, 6, 5, 3, 4, 1, 0,
	1, 3, 16, 19, 15, 18, 4, 2, 0, 1,
	0, 1, 0, 1, 3, 3, 2, 0, 1, 1,
	0, 6, 6, 8, 6, 8, 6, 8, 6, 8,
	1, 0, 2, 0, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 0, 2,
	4, 2, 1, 0, 2, 1, 1, 0, 1, 3,
	1, 0, 1, 1, 1, 1, 2, 3, 2, 2,
	8, 11, 3, 3, 0, 3, 0, 3, 0, 3,
	0, 1, 0, 6, 7, 3, 6, 3, 1, 3,
	1, 1, 4, 2, 1, 3, 1, 3, 8, 5,
	3, 4, 3, 0, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 3,
	3, 5, 1, 3, 3, 4, 5, 2, 2, 0,
	2, 2, 1, 1, 1, 0, 1, 0, 2, 2,
	5, 4, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 2, 0, 4, 2, 5, 3, 2,
	0, 1, 3, 3, 5, 1, 1, 1, 1, 1,
	3, 2, 4, 4, 0, 4, 4, 3, 4, 1,
	5, 3, 4, 5, 5, 1, 5, 1, 3, 2,
	0, 3, 0, 2, 3, 1, 3, 2, 0, 3,
	5, 6, 4, 6, 4, 3, 2, 1, 0, 5,
	1, 0, 2, 2, 2, 1, 1, 0, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 2, 2, 1, 0, 2, 5,
	7, 2, 1, 2, 4, 3, 5, 0, 1, 3,
	5, 1, 2, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 6, 6, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 3, 0, 5, 4, 1, 2, 1,
	4, 1, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 2, 5, 1, 4, 2, 5, 1, 4, 3,
	3, 0, 1, 2, 4, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 1, 0,
	1, 4, 1, 3, 3, 3, 5, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 5,
	4, 6, 3, 5, 4, 6, 4, 6, 5, 7,
	3, 3, 3, 3, 3, 4, 3, 2, 4, 2,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	1, 3, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 5, 6, 6, 7, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 6, 1,
	1, 1, 1, 1, 1, 2, 1, 5, 5, 6,
	3, 1, 1, 1, 2, 2, 2, 4, 3, 5,
	6, 8, 6, 5, 4, 3, 2, 2, 4, 1,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 6, 6, 8, 8, 6, 4,
	6, 6, 6, 4, 1, 3, 3, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4,
	4, 3, 6, 5, 5, 5, 4, 4, 3, 4,
	3, 5, 0, 5, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 3, 3,
	3, 0, 1, 4, 2, 2, 2, 2, 2, 3,
	2, 2, 3, 0, 4, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 1, 2, 3, 2, 3, 2,
	3, 1, 0, 1, 3, 1, 3, 3, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 2, 3, 0, 3, 3, 2,
	2, 1, 2, 2, 3, 2, 1, 1, 1, 5,
	1, 2, 4, 2, 0, 1, 0, 3, 5, 1,
	0, 1, 2, 1, 0, 1, 3, 3, 2, 1,
	1, 1, 3, 1, 3, 3, 1, 1, 1, 1,
	5, 3, 1, 1, 3, 1, 1, 1, 1, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 501, -83, -80, -51, -49, -86, -87,
	-70, -88, -82, -105, -109, -94, -111, -151, -156, -157,
	-158, -3, -37, -39, -52, -69, -71, -81, -90, -89,
	-91, -95, -102, -98, -85, -43, -106, -110, -119, -152,
	-153, -154, 31, 30, 90, 74, 137, 114, 121, 175,
	320, 355, 365, 347, -114, -115, 382, -38, -50, -108,
	-107, 67, 115, 342, -4, -12, 28, 44, -40, -41,
	-42, 57, -57, -54, -64, -58, -523, 92, -478, -72,
	-75, -101, -527, 126, 144, 193, -92, -93, 310, -96,
	-97, 349, -99, -100, 351, 145, -45, -44, 139, -172,
	-174, -112, -113, -155, -120, -121, -122, -123, -124, -125,
	-126, -127, -128, -129, -130, -131, -132, -133, -134, -135,
	-140, -136, -137, -138, -139, -141, -142, -144, -145, -146,
	-147, -148, 386, -143, 436, 46, 396, 76, 130, 359,
	21, -5, -6, -7, -8, -9, -10, -11, -13, -53,
	-55, -56, -59, -60, -61, -68, -62, -63, -477, -73,
	-74, -76, -78, -79, -77, 348, -175, -173, 498, 450,
	-15, -20, -21, -16, -17, -19, -22, -18, -26, -31,
	-32, -28, -29, -27, -30, -33, -34, -35, -36, -24,
	-25, -14, -23, 468, 476, -178, -176, -177, -185, 374,
	458, 412, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, -249, 2, -232, -237, -238, -239, -231, -203, -447,
	-450, 4, -444, -448, 150, 202, 275, 21, 22, 23,
	24, 25, 26, 28, 29, 40, 41, 43, 42, 44,
	45, 46, 51, 54, 55, 56, 57, 58, 62, 67,
	68, 73, 74, 75, 76, 77, 78, 79, 85, 82,
	83, 84, 87, 89, 90, 91, 93, 95, 96, 104,
	105, 106, 107, 109, 114, 115, 118, 113, 117, 120,
	121, 124, 125, 126, 128, 129, 131, 132, 134, 135,
	137, 138, 139, 142, 140, 419, 141, 143, 144, 145,
	146, 156, 157, 158, 163, 165, 169, 170, 173, 174,
	176, 180, 182, 183, 184, 185, 186, 192, 193, 195,
	196, 197, 198, 203, 204, 208, 205, 214, 218, 219,
	220, 222, 226, 227, 228, 229, 230, 233, 232, 235,
	238, 239, 242, 243, 244, 247, 248, 249, 250, 252,
	253, 256, 254, 257, 255, 259, 260, 261, 258, 264,
	262, 266, 267, 268, 273, 271, 269, 270, 277, 280,
	190, 282, 283, 286, 304, 290, 291, 292, 295, 296,
	299, 302, 303, 305, 306, 307, 308, 309, 310, 311,
	313, 314, 318, 320, 321, 323, 325, 326, 327, 328,
	329, 330, 331, 334, 333, 335, 342, 347, 344, 345,
	346, 348, 349, 350, 351, 353, 354, 355, 357, 358,
	359, 360, 362, 364, 367, 368, 383, 384, 398, 365,
	366, 369, 370, 371, 372, 373, 377, 375, 376, 378,
	379, 380, 382, 385, 386, 388, 389, 392, 394, 395,
	396, 397, 399, 402, 403, 404, 405, 400, 411, 408,
	409, 413, 414, 415, 416, 417, 418, 420, 422, 430,
	431, 433, 436, 437, 438, 428, 440, 441, 444, 445,
	446, 449, 447, 448, 450, 452, 455, 456, 457, 463,
	462, 469, 470, 472, 473, 474, 35, 47, 48, 50,
	52, 63, 64, 65, 69, 110, 111, 136, 147, 148,
	159, 171, 172, 177, 179, 187, 188, 189, 209, 210,
	212, 216, 236, 279, 281, 297, 301, 315, 316, 317,
	319, 332, 361, 390, 401, 406, 423, 424, 425, 426,
	432, 434, 458, 459, 460, 464, 471, -249, 2, -232,
	288, -225, 2, -203, -203, 320, 27, 2, 27, 314,
	376, 414, 416, 2, -503, -284, 2, 27, -206, -203,
	92, 175, 374, -225, 2, -503, -284, 24, 2, -203,
	2, -207, 2, 365, -203, 501, 87, 244, 68, 361,
	379, -117, 431, -116, 423, 369, -118, -435, 2, 264,
	-203, 501, 501, 501, 27, -215, -203, 412, 202, 106,
	409, 501, 2, 412, 307, 462, 375, 106, 329, 202,
	438, -512, 357, 178, 451, -501, 2, -497, 4, -448,
	-444, -243, -242, 412, 417, 106, -239, -231, 491, -238,
	501, 501, 501, 2, 219, 220, 328, 327, 379, 380,
	501, 501, 501, 367, 2, 26, 60, 86, 89, 112,
	146, 166, 169, 293, -524, 253, 304, 326, 378, 411,
	420, 433, -511, 397, 62, 369, -510, -512, 438, 124,
	-331, 106, 244, 174, 445, 416, 414, 443, 118, 208,
	448, 447, 501, 501, 26, 60, 71, 89, 124, 146,
	166, 169, -526, 304, 326, 364, 369, 378, 411, 420,
	433, 2, 462, 375, 412, 202, 106, 438, -512, 367,
	368, 324, -83, 2, 498, 31, 30, 382, -168, 412,
	213, 2, -203, 501, 501, 2, 219, 220, 367, 368,
	501, 501, 167, -497, 2, 501, 501, 2, 219, 220,
	367, 368, 213, 2, 62, 371, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 2, -149, 379, 397, 184, 44,
	68, 27, 325, 73, 308, 107, 176, 202, 203, 227,
	86, 87, -333, 43, 220, 219, -385, 413, 370, 376,
	408, 230, 365, 431, 92, 452, 358, 474, 329, 330,
	140, 4, 106, 264, 381, 423, 244, 78, 501, -533,
	2, 412, -535, 2, 431, 431, 2, -535, 2, -535,
	2, -535, 2, -536, 431, 471, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 310, -173, -175, -174, 501, 501, 501, 501,
	501, 501, -149, 379, 2, 68, 27, -277, -279, 442,
	211, 133, 294, -172, -174, 2, -477, -433, 2, -359,
	-451, -361, 489, 490, 482, 410, 61, 274, 475, -373,
	112, 443, 288, -450, -362, -375, 136, 361, -299, 8,
	9, 5, 6, 7, -212, -363, -369, 435, 149, 278,
	-246, 502, 10, 498, -474, -174, -374, 36, 179, 59,
	-437, -245, -213, -409, 212, -244, -231, -471, -472, 4,
	-444, -445, -438, -412, -420, -416, -417, -423, -203, -447,
	71, 98, 99, 97, 102, 101, 246, 245, 103, 100,
	381, 451, 60, 35, 187, 188, 216, 279, 189, 69,
	-473, 125, -446, 209, 210, 390, 48, 332, 159, 111,
	110, 281, 52, 50, 459, -421, 108, 423, 424, 425,
	426, 171, 172, 147, 148, 301, 317, 406, 432, 434,
	177, 236, 94, 168, 207, 191, 215, 217, 221, 237,
	240, 265, 272, 276, 298, 300, 356, 387, -539, 460,
	401, 63, 64, -479, 333, -480, -225, -479, 501, 501,
	503, 501, -271, -272, -273, 2, 27, 122, 498, 2,
	-389, 2, -390, -394, -174, 231, -393, 498, -391, 496,
	-232, 289, -475, 362, -471, -472, -212, -231, -245, 4,
	-444, -446, 500, -274, 498, 106, 412, 72, 202, -326,
	498, -203, 27, 288, 427, 503, -371, 498, 288, 167,
	291, -203, 2, 2, 383, 2, 498, -117, 65, 431,
	42, 379, -346, 2, -347, -200, -201, -202, -399, 218,
	323, 331, 477, 474, -433, -517, 167, 481, 427, -433,
	-300, 500, 2, 2, 2, 2, 2, -394, 187, -232,
	2, -229, -436, 4, -444, -448, -445, -449, -447, 27,
	30, 31, 32, 34, 36, 37, 38, 39, 53, 59,
	60, 66, 70, 72, 81, 86, 92, 97, 98, 100,
	99, 101, 102, 103, 112, 116, 119, 122, 123, 127,
	130, 133, 149, 151, 164, 166, 167, 175, 178, 181,
	194, 206, 211, 213, 231, 234, 241, 245, 246, 274,
	278, 284, 288, 289, 293, 294, 312, 322, 336, 352,
	374, 381, 393, 407, 412, 421, 427, 429, 435, 442,
	443, 451, 453, 461, 465, 466, 467, 468, -450, 71,
	2, -394, 187, 2, -234, 187, -394, -237, 2, -216,
	-203, 2, -228, -436, 2, -250, 187, -232, -233, -237,
	-235, 2, -237, -442, 187, 2, -440, 10, -439, 5,
	4, -444, -448, -445, 427, 503, -290, -242, -243, -432,
	8, -283, -203, 500, -359, 2, -106, 2, -359, 187,
	2, -106, 187, 2, -359, 187, 2, -106, 187, 2,
	-514, 2, -442, 2, 2, 433, 2, 89, 187, -203,
	412, 105, 2, 346, -525, 364, 437, 462, 2, 2,
	2, 2, 2, 2, 412, -221, 2, -203, 164, -241,
	187, 2, -203, 375, -534, 333, -442, 187, 2, -235,
	2, -235, 202, 214, -216, 187, 2, 416, 414, 416,
	414, 167, 2, 213, 2, 213, 2, -395, 2, -396,
	-390, -232, 496, 2, 2, 2, 2, 2, 187, -203,
	412, 105, 2, 229, 2, 2, 2, 2, 2, 2,
	2, 2, -292, 187, 2, -232, -292, 187, 2, -292,
	187, 2, -332, 2, 81, -216, 187, 2, -240, 187,
	2, -235, -443, 187, 2, -442, -359, 2, -106, 2,
	-403, 2, -402, -439, 458, -83, 498, -83, 498, 379,
	498, -442, -232, -232, -359, 2, -106, 2, -359, 2,
	-106, 2, -104, -103, -442, 498, 167, -359, 2, -106,
	2, -359, 2, -106, 2, -168, 164, 2, 106, 412,
	-149, 2, 164, 453, 2, 8, 2, -442, 370, 330,
	156, 2, 383, 2, 384, 68, -333, 474, 68, 167,
	2, 167, 2, -316, 2, 468, -500, 2, 288, 167,
	2, 167, 2, 167, 2, 167, 2, 167, 2, 327,
	380, 220, 2, -106, 465, -359, 465, 2, 430, 228,
	141, 167, -316, 2, 167, 2, 167, 2, 5, 2,
	328, 398, 2, 218, 323, 398, 2, -232, -528, 2,
	412, 462, 375, 2, 2, 82, 83, 167, 2, 167,
	2, 167, 474, 2, -309, -394, -345, -346, -345, 427,
	368, -277, -279, -149, 383, 2, -179, -307, -181, 164,
	-335, -336, -182, 241, 151, 284, -183, -315, 27, 122,
	-315, -315, 55, 499, 499, 11, 12, 70, 40, 489,
	490, 491, 492, 162, 493, 494, 487, 488, 486, 479,
	480, 484, 224, 225, 88, 483, 481, 80, 251, 363,
	152, 153, 154, 155, 343, 200, 33, 201, 14, 15,
	16, 32, 293, 240, 475, 191, 387, 482, 17, 18,
	19, 215, 217, 276, 47, 194, -211, -252, -359, -359,
	-359, -359, -359, -359, -359, 300, 498, -305, -354, 496,
	-174, 498, 498, 498, -432, -174, -359, -373, 499, -297,
	498, -174, -373, -368, 498, 361, 496, 498, -376, -359,
	5, 5, 5, 498, 500, -482, 469, 164, 498, 498,
	498, 498, 498, 498, 498, 498, 498, 498, 498, 498,
	498, 498, 498, 319, -414, 498, -413, 498, -413, -413,
	463, -411, 498, 476, 470, 498, -411, 498, 498, 498,
	498, 498, 498, 498, 498, 498, 498, 498, 498, 498,
	463, 503, -479, -274, 498, -301, -397, -359, 491, -301,
	-301, 288, -294, -359, 94, -319, 221, 265, 168, 237,
	356, 207, -356, 502, -356, -384, 476, -174, -391, -231,
	-174, -393, 498, -389, -384, -84, -432, -69, -81, -89,
	-106, -119, -153, -154, -477, 491, -232, 498, 167, 498,
	500, -436, 167, -283, -216, -232, -244, -245, -250, 121,
	-294, -497, -283, -206, 37, -370, -406, -407, -453, 502,
	-452, -409, -419, -415, -418, 315, 316, -438, 50, 459,
	-421, 212, 4, -444, -446, 209, 210, 390, 48, 332,
	159, 111, 110, 281, 52, 423, 424, 425, 426, 171,
	172, 460, 401, 63, 64, -497, -283, 164, -435, -294,
	37, -346, 2, 112, -440, 42, -537, 503, 239, -254,
	250, 273, 183, 289, 472, 282, -441, 5, 4, -369,
	-381, 112, 244, 212, -426, -428, 8, -427, 9, -429,
	489, 490, -434, -433, 96, 500, -436, -190, 344, -189,
	23, 28, 126, 456, 142, -264, 204, 307, 136, 394,
	446, -507, -508, 366, 418, 419, 84, 282, 344, 136,
	-312, -314, 37, 104, 268, 302, 56, 197, 255, 256,
	396, 464, 136, 344, -508, 344, -508, -192, 394, 446,
	-507, -508, 366, 344, -191, -264, 136, 502, 23, 344,
	382, 303, -521, -522, 126, 28, -504, -476, 468, 136,
	-103, -290, 503, 503, -436, 491, 136, 136, 136, 136,
	164, 2, 2, 274, 2, 2, 2, 169, -510, -526,
	2, 2, 2, -232, 187, -276, 288, -499, -291, 412,
	-232, 274, -234, 187, 2, -237, 462, -504, 274, 37,
	498, 2, -332, 2, 202, -476, 274, -395, -247, -232,
	-390, -247, 382, -225, 37, -356, -356, 136, 2, 2,
	2, -203, -193, 503, 58, 350, 136, -193, 136, -193,
	136, -251, 187, -250, -193, 136, -193, 503, 136, 503,
	136, 499, 503, -403, -403, -442, -162, 468, 167, 92,
	498, 498, -168, -400, 503, -399, -443, -104, -442, -499,
	-216, 2, -232, 2, 412, 222, -162, -442, -442, -442,
	-435, 27, 384, 2, 327, 380, 83, 384, 2, -232,
	412, 106, 202, 74, -502, 164, -498, 357, -497, -232,
	106, -232, 106, -232, 106, -232, -232, 2, 2, 2,
	2, 79, 79, 164, 2, 430, 2, 430, 2, -203,
	-203, -203, 397, 239, -232, 164, 412, 202, 412, 202,
	106, 412, -193, 503, -207, -179, -307, -435, -308, -307,
	-180, -179, -182, 164, 331, 447, 268, 385, 226, -336,
	-335, 27, -359, -340, 158, 267, -359, -338, -361, 489,
	490, -427, -429, -293, 282, -173, -173, -173, -280, -386,
	-359, 322, 202, -408, -406, -406, -230, -436, 423, -359,
	-359, -359, -359, -359, -359, -359, -359, -359, -359, -359,
	-359, -359, -359, -359, -359, -359, -359, -359, -359, -359,
	-359, -359, -359, -359, -359, -359, -359, -359, -359, -359,
	-359, -359, -359, -359, 240, 191, 387, 47, 194, -359,
	427, -359, -359, -359, -359, 262, 274, 278, 435, 149,
	444, 122, 282, -540, 407, 39, -366, -174, -298, 498,
	-380, 34, 393, 27, -373, 498, 2, -354, -359, -355,
	-295, -294, -294, 499, 461, 27, 122, 491, 2, 499,
	503, 37, 499, -359, -295, -372, -368, -294, -379, -378,
	465, -327, -328, 473, 258, 109, 185, 257, -329, 373,
	-430, 8, -436, 491, -483, 157, 178, 498, 499, 2,
	499, 2, 499, -359, 2, 499, -359, 2, 499, -359,
	2, 499, -359, 2, 499, 2, -359, -359, -359, -359,
	-359, -359, -359, -294, 8, -430, -430, 423, 423, -430,
	-430, -430, -422, 315, 242, 316, 173, 261, 259, 260,
	172, -422, -321, 2, -424, -294, 4, 473, 258, 109,
	185, 257, 373, 5, -321, 2, -322, 2, -359, -294,
	-323, -360, -361, 489, 490, 482, -373, -324, 2, -359,
	-295, -359, 53, 234, 429, -325, -359, 167, -294, -294,
	2, -294, 2, -480, 37, -294, -286, 503, 167, 37,
	4, -286, -286, 498, 499, 503, -320, 182, 254, 249,
	-320, -389, -319, 221, -317, 298, -317, -317, -384, -217,
	496, 504, -436, -384, -383, -382, 37, -225, 295, -384,
	-384, 500, 499, -383, 497, -495, 498, 501, 501, 501,
	501, 501, -232, 498, -294, -436, 500, 399, 499, 215,
	215, 215, 215, 362, 499, 427, 468, -83, 290, 499,
	503, -285, 36, 496, 500, -430, 2, 2, -425, 463,
	498, 498, -328, 498, 167, -284, -517, 499, 431, -347,
	-253, 331, 392, 345, 377, 409, 8, 9, 8, 9,
	503, -436, 503, -518, 86, 427, 72, -350, 187, 72,
	-454, -219, 86, -455, -203, 66, 443, 322, 166, 134,
	-518, 86, 322, -518, 86, 86, 382, 397, 55, -394,
	40, 40, 27, -106, 235, 167, 474, 412, 202, 427,
	-394, -314, -406, 104, 255, 256, 55, -431, -426, 489,
	490, -431, 55, -431, -431, -431, 468, -234, -394, 427,
	427, 503, 40, 40, 27, -106, 235, 167, 427, -250,
	-217, 457, 41, 457, 427, 41, 369, 427, 503, 41,
	41, -505, -208, 93, 269, 248, 270, -209, -210, 309,
	455, -442, -400, -242, -203, 500, -359, -106, -359, -106,
	44, 136, 2, -534, 229, 498, -257, 274, 167, -283,
	-401, 213, 503, -291, 136, -313, -312, 274, -236, 187,
	2, -232, 136, 131, 498, 329, 2, -218, 187, -204,
	-203, -332, -196, 415, 136, -311, 453, -341, -106, 498,
	112, 37, -341, -302, -303, -398, -304, -219, 498, -225,
	-203, 2, -232, -292, -292, -292, -193, 503, 136, -216,
	-235, -240, -442, -443, -83, -402, 499, 499, 499, -161,
	292, -160, -203, 5, -168, 453, -256, -351, -350, -458,
	-459, -454, 240, 202, 443, 214, 150, -275, -220, -219,
	105, -162, -103, 499, -400, -162, -162, -400, -400, -232,
	164, -162, -162, -162, 2, 2, -316, -232, -216, -250,
	-232, -283, -283, -316, -216, -316, -216, -316, -216, -106,
	-359, 379, 164, 164, 500, -316, 329, 106, 412, 307,
	202, -232, -250, -232, -250, -216, -232, -394, -308, -180,
	289, 226, 385, -338, -339, -361, 361, 362, -339, 361,
	362, 8, 9, 8, 9, -184, 389, 277, -292, 503,
	-187, 38, 119, 226, -232, 474, 132, -359, -359, 427,
	-540, 407, -366, 132, -359, 262, 278, 435, 149, 444,
	122, 282, 167, 498, -360, -360, 499, -296, -359, -359,
	497, 506, 499, -279, 503, -277, -359, -294, -294, 499,
	500, -294, -283, 497, 497, 503, 499, -377, -378, 127,
	-359, 427, 427, 427, 427, 498, 499, 500, -488, 299,
	498, 498, -359, 499, 499, 499, 499, 37, 503, 503,
	503, 499, 503, 503, 503, 499, 499, 499, 503, 499,
	474, 474, 499, 499, 499, 499, 503, 499, 503, 499,
	167, 499, 499, -330, 312, 499, 11, 12, 489, 490,
	491, 492, 162, 493, 494, 487, 488, 486, 479, 480,
	481, 80, 251, 363, 14, 15, 16, 215, 194, -360,
	-360, -360, 499, -364, -365, 167, 164, 37, -325, -325,
	-325, 499, 167, -294, 499, 499, 498, -481, 253, 274,
	499, -353, -352, 466, -397, -287, 2, -389, -227, -436,
	-353, -353, -294, -359, 221, 221, -318, 453, 288, -320,
	-389, -383, -432, -358, -357, 165, 38, 119, 271, 190,
	-383, -225, -274, -383, -383, -436, -384, -384, -382, 499,
	-496, -432, 499, -288, -392, -475, -279, 500, -436, -162,
	-150, 5, 278, -150, -150, -150, -283, 24, 313, -406,
	496, 497, 8, -436, 498, -430, -430, -430, -283, 167,
	-433, -346, 441, 77, 331, 423, -433, -189, 344, -219,
	-219, -232, 274, -350, 187, -195, 274, -406, -226, -203,
	498, 498, 226, 226, 453, -219, -226, 226, 187, -219,
	187, -226, -226, -506, 331, 283, -359, 243, 329, 275,
	-190, 344, -106, -106, -106, 498, -517, 453, 121, -232,
	-250, -232, -236, 344, 272, -244, -431, -431, -312, 344,
	-234, -216, -191, -106, -106, -106, 498, -217, -192, 344,
	5, 187, -219, 5, -203, -219, -241, -520, -440, 103,
	381, -522, 23, -219, 187, -219, -208, -442, 278, 449,
	-504, -159, 198, 491, -501, -203, 462, -203, -255, -258,
	-256, -219, -171, 470, 468, 136, -248, -232, 496, -162,
	-442, -232, -241, 136, -274, 274, -442, 498, 2, 2,
	288, 274, -218, 187, -197, 128, -538, 481, -216, -353,
	-287, -310, -344, 352, 288, -275, 458, -225, -310, -289,
	503, 167, 481, 500, -275, 2, -193, -193, -193, -250,
	-251, -193, -193, -83, -83, -162, 503, 498, 481, 481,
	498, -442, -442, 499, 503, -232, -218, 202, 202, -224,
	-204, 499, 503, 500, 498, -162, 167, -46, 468, 412,
	502, -316, -316, -316, 379, 379, -203, -228, -216, -232,
	-229, -250, 164, 164, 447, -339, 289, 247, -386, -188,
	280, -232, 502, -359, -359, 132, 132, -359, -360, -360,
	-359, 132, 167, 498, -359, -370, 32, 32, 499, 503,
	-355, -359, 499, 461, -279, -279, 499, 491, -436, 502,
	499, -368, 130, -359, 421, 258, 185, 257, -329, 257,
	-329, -329, -430, 5, -436, 491, -489, -222, 498, -203,
	466, -278, 294, 499, -408, -406, -359, -359, -359, -359,
	-359, -430, -411, -411, -426, -426, -359, -364, -359, -408,
	-406, -360, -360, -360, -360, -360, -360, -360, -360, -360,
	-360, -360, -360, -360, -360, -360, -360, -360, -360, -360,
	122, 274, 282, -360, -365, -364, -359, -359, -406, 499,
	499, 499, -294, -83, 498, 253, -306, 178, -359, -400,
	503, -306, -306, 499, -389, -389, 498, -359, 221, 497,
	503, 505, 481, -274, 500, -382, -383, 497, 499, 503,
	499, 503, -343, 37, 499, -436, 291, 5, 8, 496,
	497, 500, -430, 499, 499, 499, -283, -359, 427, 427,
	136, 274, 455, -460, -455, 134, -359, -281, -387, -359,
	498, 498, 2, -186, 126, 382, -519, 2, 453, 136,
	-193, 136, -193, 472, 498, 498, 427, 468, -294, -359,
	-163, 112, -435, -508, 502, -508, 502, 427, 427, 468,
	-294, 427, -410, 45, 25, 274, -235, 427, 427, -193,
	136, 438, 382, -442, 278, -165, 468, 167, 427, 2,
	-236, 2, 499, 499, 503, -461, 37, 286, 498, 286,
	-232, -65, 468, -399, -432, -234, 37, 136, -504, -404,
	-405, 5, -232, 136, 288, 274, -198, 233, -538, -440,
	-476, -279, -310, -301, 275, 85, 499, -353, -303, -287,
	-359, 2, 499, -193, -160, -161, -442, -442, -442, -162,
	-168, -168, -351, -259, 498, -218, -204, 498, -168, -220,
	2, -443, -106, 292, -232, 491, -316, -266, -265, 307,
	282, -266, 361, 361, 289, 158, 230, -187, -217, -359,
	-359, 132, 32, 32, -359, -359, -370, 499, -359, -359,
	-294, 497, 5, -359, 499, 499, 8, -359, 499, 500,
	-490, -203, -359, 499, 55, 499, 499, 503, 503, 499,
	499, 499, 499, 499, 499, 499, -365, 167, 122, 282,
	498, 499, 499, -83, -367, 181, 55, -389, -367, -367,
	-318, -283, -389, -357, -217, 496, -436, -432, -392, 498,
	500, 497, 2, 496, -436, 499, -219, -219, -350, 136,
	-462, 86, -464, 70, 150, 92, 274, 278, 443, 322,
	66, 112, 336, -530, 37, 478, 499, 499, 503, -187,
	-281, -283, 274, 404, 112, 274, 112, 105, 438, 73,
	-219, -226, -283, -283, -232, 143, 499, 503, 481, 2,
	491, 491, -236, -234, 143, 499, -217, 5, 5, 136,
	-214, 70, 5, -219, -219, -235, 105, -167, 292, -166,
	129, 354, 120, -443, -103, -274, -262, 205, -219, -459,
	-456, -457, 322, -463, -465, 150, 322, -106, -170, -169,
	-203, 5, 2, 498, -257, 292, 497, -313, -106, -236,
	499, 503, -334, 453, -217, -232, 136, -199, 232, -538,
	-440, -196, -337, -335, -342, 498, 288, -106, -279, 481,
	499, 499, 105, 105, 196, 135, -281, 498, 498, -283,
	105, 499, -47, -48, 202, 86, 311, -229, 412, 202,
	498, 498, -187, -359, -359, -359, 499, -279, -436, 491,
	-484, 307, 499, -386, -359, -359, -360, 167, 498, -370,
	499, -485, 467, -359, -294, -485, -485, 499, -432, 2,
	496, 2, -350, -226, -230, -223, -203, 150, 187, 278,
	226, 498, -360, -232, 498, 2, 29, -531, 116, 206,
	-349, -532, 91, 405, 195, -387, -188, 499, 499, 278,
	278, -359, -406, 498, -193, -193, 499, 499, -359, 427,
	-435, 90, -433, 2, -508, -359, 427, 5, -193, -230,
	-193, -193, -214, 438, 503, 498, 481, -165, 37, -263,
	-264, 194, -461, 226, -223, 226, -529, 468, 499, 503,
	481, 481, -255, -171, -66, -67, 428, -399, -274, 5,
	498, -203, 288, 498, -217, -538, -440, -197, -310, 123,
	-283, 86, -337, -366, -162, 498, 498, -260, 75, 87,
	113, 186, 170, 203, 397, 402, 27, -260, 499, -281,
	-281, 499, 498, -162, 503, 27, 498, 27, 498, -232,
	-250, -294, -294, 499, -279, 55, 503, 499, 499, -360,
	-370, 499, -486, -487, -222, 497, 2, -464, -223, 274,
	453, -359, -205, 498, -359, 37, 206, 117, 192, -262,
	498, -348, 453, 336, -214, -281, 498, 498, 498, 481,
	167, 498, -410, -193, -235, -166, -167, -442, -513, 334,
	-106, -171, 305, 498, -261, 288, 105, 268, -169, -362,
	-362, 499, 37, -67, 9, 37, -281, -232, -281, 288,
	-440, -198, 447, 275, 499, -226, -310, -443, -443, -348,
	499, 499, -443, -48, -283, -283, 499, 499, -491, 329,
	362, 180, -294, -280, 499, 503, 37, 136, 182, 499,
	-466, 252, -203, 499, 117, 192, -263, -283, -262, 182,
	-232, -509, 453, 499, -268, -267, -265, -270, -269, -265,
	-294, -433, 90, 305, -294, -214, 499, -516, 168, 266,
	-515, 5, 10, -261, -232, -282, -388, -219, 76, 105,
	-262, -106, -106, 499, -334, 499, -232, -199, 382, -352,
	499, 499, -349, -348, -353, 499, 499, 499, 499, -492,
	-493, 47, 440, 96, -359, -492, -492, -487, -489, 150,
	468, -467, -470, -469, 288, 388, 168, 306, 499, 404,
	464, -531, 499, 468, -274, -359, -348, 499, 503, 458,
	499, 503, 458, 499, 167, 499, -193, -164, 468, 44,
	498, 499, 503, 321, 118, 126, -263, -529, -348, 498,
	-349, 498, -302, -162, -162, -262, -349, -162, -494, 134,
	-493, 318, 163, 361, 318, 163, -494, -494, -223, 51,
	-469, 288, -470, 288, 447, 118, -353, 51, -466, -262,
	-267, 194, -269, 167, 305, 139, -515, 29, -283, -388,
	362, 362, 2, -171, -261, -349, -281, -262, -281, -353,
	-263, -262, 96, 178, 422, 268, 32, 481, -468, 268,
	350, 58, 382, -468, 481, -467, 498, 498, 367, 499,
	2, -261, -262, 499, -263, 499, -353, -263, 361, 296,
	-493, -359, 22, 278, 112, -359, -531, -294, -294, 292,
	-194, 58, 350, -263, -348, -353, -349, -353, 499, 499,
	-161, 498, -353, -349, -262, -263, 427, -161, -262, -263,
	498, 499, -263, -353, -294, -353, 499, -263,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 25, 26, 27,
	28, 431, 432, 434, 435, 436, 438, 439, 441, 443,
	445, 446, 447, 449, 450, 452, 453, 454, 455, 456,
	458, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 518, 520, 0, 1080, 1082, 1084,
	1086, 0, 650, 0, 30, 31, 0, -2, 242, 244,
	246, 0, 271, 273, 274, 276, 278, -2, 0, 374,
	375, 377, 379, -2, -2, 0, 797, 799, 0, 507,
	509, 0, 802, 804, 0, 0, 529, 530, 0, 1168,
	-2, 523, 525, 527, 592, 594, 596, 598, 600, 602,
	604, 605, 607, 609, 611, 613, 615, 617, 619, 620,
	622, 624, 626, 628, 630, 632, 634, 636, 638, 640,
	642, 644, -2, 646, -2, -2, 0, -2, -2, -2,
	1098, 34, 36, 38, 40, 42, 44, 46, 48, 325,
	326, 328, 330, 332, 334, 337, 339, 341, 1226, 381,
	383, 385, 387, 389, 391, 0, -2, 1238, 0, 0,
	50, 51, 52, 53, 54, 55, 56, 57, 73, 74,
	75, 76, 77, 78, 79, 80, 61, 63, 64, 68,
	69, 71, 59, 0, 0, 1199, 1201, 1203, 1205, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 433, 437, 440, 442, 444, 448, 451, 457, 459,
	461, 418, 419, 422, 1858, 1875, 1876, 1877, 1880, 1881,
	1882, 1883, 1884, 1885, 2246, 2327, 2328, 1907, 1908, 1909,
	1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
	1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929,
	1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939,
	1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949,
	1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
	2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
	2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059,
	2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069,
	2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079,
	2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089,
	2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099,
	2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109,
	2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
	2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129,
	2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139,
	2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149,
	2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
	2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169,
	2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179,
	2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189,
	2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199,
	2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209,
	2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219,
	2220, 2221, 2222, 2223, 2224, 2225, 2226, 420, 421, 951,
	0, 485, 483, 1851, 486, 2073, 488, 490, 368, 369,
	370, 371, 372, 373, 0, 500, 494, 499, 501, 503,
	504, 505, 506, 480, 478, 0, 500, 1910, 498, 1078,
	1079, 1064, 1065, 2109, 1105, 519, -2, -2, -2, 2212,
	-2, 551, -2, 558, 2216, 2111, 563, 0, 565, -2,
	568, 1081, 1083, 1085, 648, 649, 1861, 0, 0, 0,
	0, 32, 33, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1000, 1001, 1002, 0, 182, 184, -2, -2,
	-2, -2, 0, 0, 2145, 1951, 1819, 1877, 1822, 1817,
	243, 245, 247, 248, 0, 0, 0, 0, 0, 0,
	272, 275, 277, -2, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 846, 838, 839, 1041, 0, 0,
	0, 0, 376, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 304, 423, 424, 0, 1227, 1227, 0, 0, 0,
	0, 223, 214, 798, 800, 801, 0, 0, 0, 0,
	508, 510, 0, 0, 209, 803, 805, 806, 0, 0,
	0, 0, 0, 225, 0, 0, 524, 526, 528, 593,
	595, 597, 599, 601, 603, 606, 608, 610, 612, 614,
	616, 618, 621, 623, 625, 627, 629, 631, 633, 635,
	637, 639, 641, 643, 645, 655, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, -2, -2, -2,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 658, 660, 661, 662, 0, 713, 730, 647, 0,
	991, 1228, 1107, 1088, 1102, 1107, 1090, 1091, 1092, 1093,
	1094, 1099, 1101, 1095, 1096, 1097, 35, 37, 39, 41,
	43, 45, 47, 49, 327, 329, 331, 333, 335, 338,
	340, 342, 0, -2, 1197, 1198, 382, 384, 386, 388,
	390, 392, 511, 0, 513, 0, 659, -2, 0, 1232,
	1232, 1232, 0, 0, 1198, 1196, 0, 516, 517, 572,
	573, 1462, 0, 0, 0, 0, 0, 0, 0, 1716,
	1548, 0, 574, -2, 1579, 1581, 2187, 2212, 1715, 1583,
	1584, 1585, 1586, 1587, 0, 1589, 1590, 1591, 1592, 1593,
	1594, 0, 1596, 0, 1601, 1602, 1603, 0, 2194, 1796,
	1871, -2, 0, 0, 2200, 1867, 0, 1682, 1619, -2,
	-2, 1894, 1873, 1394, 1395, 1396, 1397, 1398, -2, -2,
	2229, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 0, 2176, 2195, 2196, 2201, 2203, 2197, 2184,
	1644, 1962, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1421, 1430, -2, -2, -2,
	-2, -2, -2, 2188, 2189, 2206, 2209, 2215, 2220, 2221,
	2193, 2202, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237,
	2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 1422, -2,
	-2, -2, -2, 1215, 2084, 1218, 951, 1216, 1200, 1202,
	0, 1204, 0, 0, 0, 1209, 1235, 1233, 0, 1276,
	1213, 1214, 1294, 1294, 1318, 0, 1299, 0, 1318, 1227,
	1344, 0, 1305, 2102, 1620, 1621, 0, 1877, 1872, -2,
	-2, 2227, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 487, 489, 0, 0, 0, 0, 0, 0, 0,
	0, 1104, 521, 522, 0, 546, 0, 550, 2183, -2,
	1918, 2120, -2, 554, 1108, 1112, 1113, 1114, 1115, 0,
	0, 0, 0, 0, 560, 0, 0, 547, 548, 566,
	569, 0, 651, 652, 653, 654, 58, 0, 2195, 1344,
	60, 0, 1841, 1902, 1903, 1904, 1905, 1906, 2228, 2247,
	2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257,
	2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267,
	2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277,
	2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287,
	2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297,
	2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307,
	2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317,
	2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2229,
	62, 0, 2195, 65, 0, 2195, 0, -2, 70, 0,
	1847, 72, 0, 1844, 81, 0, 2195, 0, 1816, -2,
	0, 167, 1855, -2, 2195, 999, 226, 227, 1890, 1891,
	1898, 1899, 1900, 1901, 0, 0, 790, 1813, 1818, 791,
	1837, 792, 1823, 0, 249, 250, 251, 252, 253, 2195,
	255, 256, 0, 258, 259, 2195, 261, 262, 0, 264,
	0, 194, 195, 280, 281, 0, 283, 0, 2195, 0,
	0, 0, 289, -2, 305, 0, 302, 0, 293, 294,
	296, 297, 298, 299, 0, 346, 344, 1852, 0, 816,
	2195, 818, 1857, 0, 0, 1020, -2, 2195, 996, 1026,
	1022, 0, -2, 0, 1225, 2195, 1122, 842, 843, 844,
	845, 0, 365, 0, 1135, 0, 1137, 0, 1158, 1350,
	1294, 1294, 0, 306, 307, 308, 309, 310, 2195, 0,
	0, 0, 315, 0, 317, 318, 319, 320, 321, 322,
	323, 324, 156, 2195, 395, 416, 156, 2195, 398, 156,
	2195, 401, 0, 404, 1039, 156, 2195, 407, 156, 2195,
	410, 411, 413, 2195, 415, 228, 1074, 1075, 1076, 1077,
	0, -2, 474, 1860, -2, 426, 0, 427, 0, -2,
	0, 240, 0, 0, 807, 808, 809, 810, 811, 812,
	813, 815, 1331, 212, 210, 0, 0, 1066, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 0, 0, 531, 0, 0,
	656, 657, 0, 0, 667, 668, 669, 240, 2112, 2081,
	1981, 674, 0, 677, 680, -2, 0, 0, 0, 0,
	684, 0, 689, 690, 691, 0, 796, 693, 0, 0,
	695, 0, 699, 0, 702, 0, 704, 0, 706, -2,
	-2, -2, 717, -2, 0, 721, 0, 723, 0, 0,
	0, 0, 738, 739, 0, 744, 0, 747, 748, 749,
	0, 751, 752, 0, 754, 755, 756, 757, 0, 759,
	760, -2, -2, 764, 766, 0, 773, 0, 777, 0,
	781, 0, 663, 664, 156, 1348, 1087, -2, 1089, 0,
	814, -2, 0, 512, 0, 515, 1255, 1183, 1180, 0,
	1252, 1253, 1184, 0, 0, 0, 1191, 0, 1230, 1231,
	0, 0, 0, 1170, 1171, 0, 0, 0, 0, 1721,
	1722, 1723, 1724, 1725, 1726, 1729, 1730, 1727, 1728, 1731,
	1732, 0, 0, 0, 0, 0, 1733, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1734, 1735,
	1736, 0, 0, 1738, 0, 1740, 0, 0, 0, 0,
	0, 0, 1527, 1529, 1804, 0, 0, 1737, 1467, 1468,
	1469, 1470, 1471, 1506, 1507, 0, 0, 1580, 1801, 1800,
	1582, 0, 1752, 0, 1595, -2, 0, 1716, 1747, 0,
	0, 1604, 1605, 1606, 0, 0, 1752, 0, 0, 1795,
	1616, 1617, 1459, 0, 0, 1684, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1408, 1407, 0, 1409, 0, 1410, 1411,
	1418, 1431, 0, 0, 0, 0, 1435, 0, 0, 0,
	0, 0, 0, 0, 1776, -2, 0, 0, 0, 0,
	1423, 0, 1217, 0, 0, 1280, 1805, 1809, 1810, 1280,
	1280, 0, 0, 1753, 1341, 1341, 0, 0, 1337, 1337,
	1337, 1335, 1318, 0, 1318, 1328, 0, 1318, 1318, 0,
	-2, 1299, 0, 0, 1328, 0, 1312, 462, 464, 466,
	468, 469, 470, 472, 1226, 1345, 1346, 0, 0, 0,
	0, 1878, 0, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 492, 502, 1227, 0, 1755, 1367, 1371, 0,
	1373, 1374, 1375, 1376, 1377, 0, 0, 1368, -2, 1419,
	1421, 1442, 1895, 1896, 1897, 1402, 1403, 1404, 1405, 1406,
	1414, 1401, 1401, 1401, 1412, 1441, 1433, 1441, 1437, 1388,
	1389, 1424, 1425, 1426, 1427, 0, 496, 0, 0, 0,
	0, -2, 556, 561, 562, 0, 0, 1110, 0, 1116,
	583, 584, 585, 1118, 1119, 0, 559, 586, 587, 588,
	589, 590, 591, 0, 1825, 1826, 1827, 1828, 1831, 1832,
	0, 0, 557, 576, 564, 0, 570, 82, 1061, 121,
	0, 1061, 1061, 0, 0, 143, 0, 0, 0, 0,
	0, 0, 106, 117, 94, 95, 0, 0, 0, 0,
	66, 973, 0, 976, 0, 0, 0, 0, 0, 0,
	0, 989, 0, 0, 105, 0, 100, 84, 0, 0,
	0, 107, 119, 0, 147, 149, 0, 0, 0, 0,
	0, 0, 166, 174, 0, 0, 997, 0, 1224, 0,
	1331, 789, 0, 0, 1878, 1821, 0, 0, 0, 0,
	0, 282, 284, 0, 286, 287, 288, 0, 1019, 0,
	295, 292, 336, 922, 2195, 0, 0, 363, 358, 0,
	360, 0, 972, 2195, 970, 1856, 0, 994, 0, 0,
	0, 1027, 1887, 1036, 1040, 1124, 0, 367, 0, 1138,
	1140, 0, 0, 1351, 0, 1353, 1354, 0, 312, 313,
	314, 0, 393, 0, 154, 155, 0, 396, 0, 399,
	0, 156, 2195, 1811, 405, 0, 408, 0, 0, 0,
	0, 1227, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 240, 0, 1330, 0, 1331, 240, 240,
	1331, 533, 1331, 535, 0, 0, 670, 240, 240, 240,
	675, 676, 678, 679, -2, -2, 774, 681, 682, 741,
	0, 0, 0, 740, 692, 0, 783, 2098, 794, 741,
	1951, 741, 1951, 741, 1951, 703, 705, 708, 733, 716,
	720, 0, 0, 0, 725, 0, 727, 0, 729, 741,
	742, 745, 750, 753, 758, 0, 0, 0, 0, 0,
	0, 0, 990, 0, 1100, 1255, 1183, 514, 1174, 1254,
	1175, 1182, 1185, 0, 0, 1187, 0, 1189, 0, 1250,
	1251, 1258, 1259, 0, 1269, 1270, 1262, 0, -2, 0,
	0, 1265, 1266, 1193, 0, 1210, 1211, 1212, 1239, 1242,
	1050, 0, 2327, 1463, 1362, 1464, 1465, 1840, 0, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, -2,
	-2, -2, -2, -2, -2, -2, -2, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, -2, -2,
	-2, 1504, 1505, -2, 1739, 1741, 0, 1804, 0, -2,
	0, -2, -2, -2, -2, 1524, 0, 1526, 1531, 1533,
	1535, 0, 0, 0, 0, 1803, 1545, 1787, 1788, 0,
	0, 1718, 1719, 1720, 1530, 0, 1549, 1802, 1799, 0,
	0, 1751, 1238, 1608, 0, 0, 0, 0, 1615, 1600,
	1749, 0, 1748, 0, 0, 0, 1759, 0, 1794, 1790,
	0, 1838, 1458, 1445, 1446, 1447, 1448, 1449, 1450, 1460,
	0, 1835, 1864, 1870, 1692, 0, 0, 0, 1645, 1646,
	1647, 1648, 1649, 0, 1651, 1652, 0, 1654, 1655, 0,
	1657, 1658, 0, 1660, 1661, 1662, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 0, 0, 1664, 0, 1762, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 1666, 0, 1668, 1753, 1773,
	0, 0, 1550, 0, 0, 0, 1716, 0, 1671, 1753,
	1781, 0, 0, 0, 0, 0, 1753, 0, 1786, 0,
	1678, 0, 1680, 1219, 0, 0, 1357, 0, 0, 0,
	1808, 1357, 1357, 0, 1275, 0, 0, 1338, 1339, 1340,
	0, 0, 1341, 0, 1332, 1336, 1333, 1334, 1328, 1291,
	0, 0, 1842, 1328, 1297, 1327, 0, 951, 1317, 1328,
	1328, 0, -2, 1301, 1318, 0, 0, 463, 465, 467,
	471, 473, 0, 0, 1238, -2, 0, 240, 950, 0,
	0, 0, 0, 482, 484, 0, 0, 476, 0, 479,
	0, 1358, 1361, 0, 0, 1372, 1378, 1379, 0, -2,
	0, 0, 1443, 0, 0, 0, 0, 549, 0, 1109,
	1117, 0, 580, 0, 582, 0, 1829, 1833, 1830, 1834,
	0, 571, 0, 0, 0, 0, 1060, 125, 2195, 0,
	158, 0, 0, 915, 1848, 0, 0, 0, 0, 1968,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 91, 96, 0, 0, 0, 0, 0, 0,
	0, 974, 975, 977, 984, 986, 0, 980, 1836, 0,
	0, 981, 0, 983, 985, 987, 0, 0, 0, 0,
	0, 0, 0, 0, 93, 97, 0, 0, 0, 0,
	1815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1015, 1013, 1007, 1008, 1009, 1010, 1011, 1012, 0,
	0, -2, 231, 1814, 1824, 0, 254, 257, 260, 263,
	183, 0, 290, 0, 0, 848, 821, 0, 0, 345,
	240, 0, 0, 359, 0, 968, 971, 0, 951, 2195,
	1006, 1854, 0, 0, 0, 0, 1025, 0, 2195, 1843,
	1886, 1887, 1126, 1132, 0, 1357, 0, 1156, 1141, 0,
	0, 0, 1156, 1160, 1161, 1163, 1164, 0, 0, 1352,
	0, 316, 417, 156, 156, 156, 402, 0, 0, 156,
	412, 156, 229, 414, 425, 475, 1227, 1227, 240, 238,
	2057, 236, 233, 235, 0, 0, 0, 849, 851, 852,
	853, 854, 0, 1887, 0, 2007, 1887, 0, 1144, 1146,
	0, 207, 213, 211, 240, 0, 357, 532, 537, 665,
	0, 671, 672, 673, 710, 735, 683, 685, 686, 687,
	0, 795, 793, 694, 741, 697, 741, 700, 741, 719,
	722, 724, 0, 0, 0, 737, 0, 0, 0, 0,
	0, 0, 0, 778, 779, 780, 782, 1349, 1178, 1179,
	1181, 0, 1190, 0, 0, 1264, -2, -2, 1263, 1267,
	1268, -2, -2, -2, -2, 1186, 0, 1195, 1192, 0,
	1249, 1048, 1049, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 1546, 0, -2, 1525, 1528, 1532, 1534, 1536,
	0, 0, 0, 0, 0, 0, 1742, 0, 1744, 1547,
	1797, 1800, 1714, 0, 0, 1237, 1238, 1238, 0, 1614,
	0, 1750, 0, 1757, 1758, 0, 1607, 0, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1618, 0,
	0, 0, 0, 1650, 1653, 1656, 1659, 0, 0, 0,
	0, 1639, 0, 0, 0, 1643, 1413, 1399, 0, 1441,
	1439, 1440, 1434, 1441, 1438, 1391, 0, 1390, 0, 1663,
	0, 1665, 1667, 0, 0, 1669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1553,
	1554, 1555, 1670, 1779, 1780, 0, 0, 0, 0, 0,
	0, 1676, 0, 1785, 1677, 1679, 1227, 0, 1220, 0,
	1277, 1272, 1356, 0, 1806, 1331, 1279, 1281, 1807, 1845,
	1272, 1272, 0, 1754, 0, 0, 1322, 0, 0, 0,
	1324, 1295, 0, 0, 1289, 0, 1285, 1286, 1287, 1288,
	1296, 951, 1326, 1298, 1302, 1864, 0, 1328, 0, 1313,
	0, 1315, 1347, 0, 1307, 1310, 0, 0, 1879, 241,
	265, 269, 270, 266, 267, 268, 491, 0, 0, 1756,
	0, 1363, 0, 1369, 0, 0, 0, 0, 495, 0,
	545, -2, 578, 579, 581, 0, 577, 122, 1061, 0,
	0, 1052, 0, 127, 2195, 136, 0, 889, 0, 1846,
	0, 0, 0, 0, 0, 1063, 0, 0, 2195, 156,
	2195, 156, 139, 142, 0, 146, 144, 0, 0, 880,
	83, 1061, 86, 90, 98, 0, 0, 0, 104, 0,
	0, 0, 1054, 0, 978, 979, 982, 988, 67, 0,
	1056, 1051, 148, 88, 92, 99, 0, 1058, 85, 0,
	170, 0, 0, 0, 162, 0, 163, 164, 171, 172,
	173, 175, 0, 156, 2195, 0, 1014, 992, 993, 0,
	998, 187, 0, 1820, 0, 0, 0, 0, 0, 0,
	847, 933, 0, 0, 0, 0, 351, 347, 0, 356,
	362, 361, 817, 0, 0, 0, -2, 1029, 1023, 1024,
	0, 0, 0, 2195, 1128, 1132, 0, 1131, 1225, 1238,
	366, 1133, 1156, 0, 0, 0, 1143, 1139, 1136, 1357,
	0, 0, 0, 0, 0, 311, 394, 397, 400, 1812,
	156, 406, 409, 428, 429, 215, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 858, 0, 1887, 1887, 0,
	1850, 0, 0, 0, 0, 208, 0, 534, 0, 0,
	0, 696, 698, 701, 726, 728, 741, 767, 768, 875,
	0, 875, 0, 0, 1188, 0, 1261, 1194, 1243, 1244,
	0, 1050, 0, 1466, 1509, 0, 0, -2, 0, 0,
	1513, 0, 0, 0, -2, 0, 0, 0, 1743, 1745,
	0, 1799, 1609, 0, 0, 0, 1613, 1597, 1598, 0,
	1717, 1760, 1789, 1793, 0, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 0, 1839, 1865, 1869, 1690, 1691, 1695, 1853,
	0, 0, 0, 1622, 0, 0, 0, 0, 0, 0,
	0, 0, 1432, 1436, 0, 0, 1761, 1772, 1774, 1551,
	1552, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, -2, -2, -2, 1569, 1570, 1571, -2, -2, -2,
	0, 0, 0, 1775, 1777, 1778, 1782, 1783, 0, 1673,
	1674, 1675, 1784, 0, 1227, 1221, 1274, 0, 1355, 1278,
	0, 1274, 1274, 1234, 1320, 0, 0, 1343, 0, 1292,
	0, 1293, 0, 1325, 0, 1300, 1303, 1304, 1314, 0,
	1306, 0, 1309, 0, 1609, -2, 493, 477, 0, 0,
	1365, 0, 0, 1416, 1420, 1444, 497, 1329, 0, 0,
	0, 0, 157, 887, 914, 0, 0, 0, 1043, 1050,
	0, 0, 920, 129, 0, 0, 0, 137, 0, 0,
	134, 0, 141, 145, 0, 0, 0, 0, 0, 101,
	102, 103, 0, 108, 0, 109, 0, 0, 0, 0,
	0, 0, 159, 0, 0, 0, 1047, 0, 0, 177,
	0, 0, 0, 1017, 1018, 181, 0, 0, 0, 285,
	951, 291, 869, 921, 0, 923, 0, 822, 0, 0,
	922, 343, 0, 350, 0, 972, 0, 0, 995, 0,
	1028, 1030, 1038, 0, 0, 0, 1130, 1132, 0, 1123,
	1124, 1257, 1134, 1154, -2, 1153, 0, 1238, 1162, 1159,
	1165, 1166, 0, 403, 237, 0, 232, 234, 0, 218,
	0, 0, 850, 855, 0, 0, 0, 0, 0, 1145,
	1147, 0, 224, 0, 666, 688, 736, 769, 874, 0,
	0, 771, 0, 0, 1260, 1247, 1248, 1245, 1050, 1511,
	1515, 0, 0, 0, 1517, -2, 0, 1539, -2, -2,
	1746, 1798, 1588, 1238, 1610, 1612, 1599, 1792, 1461, 0,
	1697, 1694, 0, 1681, 0, 1634, 1635, 0, 0, 1638,
	1640, 1641, 1642, 1400, 1393, 1392, 1771, 0, 0, 0,
	0, 1672, 1222, 0, 1686, 0, 0, 1282, 1686, 1686,
	1321, 0, 1323, 1290, 1283, 0, 1865, 1316, 1308, 0,
	0, 1359, 1364, 0, 1370, 1415, 123, 124, 126, 0,
	888, 0, 891, 0, 0, 0, 0, 898, 899, 0,
	0, 0, 0, 0, 908, 0, 937, 947, 0, 1249,
	0, 0, 0, 131, 151, 0, 0, 1062, 0, 0,
	156, 156, 0, 0, 1053, 0, 0, 0, 0, 111,
	0, 0, 1055, 1057, 0, 0, 1059, 168, 169, 0,
	156, 0, 161, 156, 156, 1047, 0, 185, 0, 188,
	0, 191, 192, 230, 187, 0, 877, 0, 933, 925,
	926, 927, 0, 932, 934, 0, 0, 835, 0, 831,
	0, 0, 824, 848, 821, 0, 348, 969, 1003, 951,
	1021, 0, 0, 0, 0, 0, 0, 1120, 1132, 0,
	1125, 1126, 1156, 1256, 0, 0, 0, 1142, 1257, 0,
	239, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 536, 538, 0, 0, 544, 873, 0, 0,
	0, 0, 1246, 1519, -2, -2, 1540, 0, 1866, 1868,
	1238, 0, 1683, 1240, 0, 0, -2, 0, 0, 0,
	1223, 1206, 0, 1273, 1271, 1207, 1208, 1342, 0, 1311,
	0, 1366, 128, 0, 892, 893, 1849, 895, 0, 897,
	900, 0, 903, 1889, 0, 907, 0, 916, 938, 0,
	869, 0, 943, 944, 945, 1044, 1045, 949, 0, 130,
	132, 150, 1047, 0, 133, 140, 0, 0, 87, 0,
	0, 1944, 114, 112, 110, 89, 0, 170, 176, 1046,
	165, 178, 156, 0, 0, 0, 0, 0, 0, 821,
	876, 0, 924, 0, 935, 936, 825, 0, 823, 0,
	0, 0, 0, 0, 349, 352, 0, 355, 0, 1031,
	0, 1037, 0, 0, 0, 0, 1127, 1128, 364, 0,
	0, 0, 1156, 1167, 217, 0, 0, 856, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 857, 949, 0,
	0, 913, 0, 222, 0, 540, 0, 542, 0, 770,
	772, 0, 0, 1611, 1701, 0, 0, 1636, 1637, -2,
	0, 1577, 1685, 1687, 0, 1284, 1360, 890, 894, 0,
	0, 0, 955, 0, 0, 909, 0, 941, 942, 877,
	0, 869, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 0, 160, 179, 1047, 189, 0, 190, 203, 0,
	1004, 825, 0, 0, 833, 0, 836, 0, 832, 829,
	830, 869, 0, 353, 354, 0, 0, 1038, 0, 0,
	1129, 1130, 0, 1149, 1150, 1152, 1157, 0, 0, 947,
	949, 1357, 0, 539, 0, 0, 775, 776, 0, 0,
	0, 0, 1696, 1241, 1578, 0, 0, 0, 0, 902,
	960, 0, 0, 0, 939, 940, 937, 0, 918, 0,
	951, 135, 0, 949, 0, 881, 0, 0, 884, 0,
	0, 115, 1944, 113, 0, 156, 186, 206, 0, 199,
	200, 197, 198, 819, 0, 0, 929, 931, 0, 837,
	877, 835, 1005, 949, 0, 947, 0, 1121, 0, 1151,
	240, 240, 869, 947, 912, 240, 541, 543, 1693, 1713,
	1702, -2, 2156, 1948, 0, 1713, 1713, 1688, 1689, 0,
	0, 904, 956, 957, 0, 952, 953, 954, 1888, 905,
	906, 1357, 946, 0, 955, 152, 869, 878, 0, 0,
	879, 0, 0, 118, 0, 120, 180, 193, 0, 0,
	0, 928, 0, 0, 0, 0, 821, 825, 947, 0,
	869, 0, 1357, 219, 220, 877, 869, 221, 1698, 0,
	0, 1704, 1705, 1706, 1707, 1708, 1699, 1700, 896, 0,
	958, 0, 959, 0, 0, 0, 917, 0, 960, 138,
	882, 0, 885, 0, 116, 0, 201, 202, 0, 930,
	826, 0, 828, 825, 834, 869, 0, 877, 0, 1148,
	1357, 877, 0, 1710, 1711, 0, 0, 0, 961, 0,
	964, 965, 0, 962, 0, 937, 0, 0, 0, 872,
	827, 820, 877, 949, 1357, 947, 910, 1357, 1709, 1712,
	1703, 901, 963, 966, 967, 948, 919, 0, 0, 0,
	868, 870, 871, 1357, 947, 1034, 869, 911, 877, 0,
	204, 0, 1032, 869, 877, 883, 0, 0, 877, 1357,
	0, 205, 1357, 1035, 0, 1033, 877, 886,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 487, 3, 493, 488, 3,
	498, 499, 491, 489, 503, 490, 500, 492, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 506, 3,
	479, 481, 480, 484, 502, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 496, 3, 497, 494, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 504, 486, 505, 482,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 483, 57822, 485, 57823, 495, 57824, 501,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1180
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1185
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1187
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1190
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1191
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1192
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1193
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1194
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1195
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1196
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1197
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1204
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1213
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1214
		{
			return helpWith(sqllex, "ALTER")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1217
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1218
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1219
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1220
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1221
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1222
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1223
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1224
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1278
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1304
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1330
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1334
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 67:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1338
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1352
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1371
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1403
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1407
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1411
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1417
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1421
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1427
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1436
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1447
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1451
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1457
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1465
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1475
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1479
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1489
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1500
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1507
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1519
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1526
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1534
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1539
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1543
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1548
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1554
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1562
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1573
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 108:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1583
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 109:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1593
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 110:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1602
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1613
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 112:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1619
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1627
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1631
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1635
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 116:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1639
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1645
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1650
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1661
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1665
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1671
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1675
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1682
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1687
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1692
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1697
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1702
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1707
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1712
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1717
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1722
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1727
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1732
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1753
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1763
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1770
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 138:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1774
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1782
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1798
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1807
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1812
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1819
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1828
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1832
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1842
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1850
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = nil
		}
	case 152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1860
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1864
		{
			sqlVAL.union.val = nil
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1875
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1879
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1889
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1914
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1925
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1955
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1964
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1968
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1972
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1975
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1979
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 181:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2037
		{
			backup := &tree.Backup{
				To:              sqlDollar[4].union.partitionedBackup(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}

			tl := sqlDollar[2].union.targetListPtr()
			if tl == nil {
				backup.DescriptorCoverage = tree.AllDescriptors
			} else {
				backup.DescriptorCoverage = tree.RequestedDescriptors
				backup.Targets = *tl
			}

			sqlVAL.union.val = backup
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2055
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2063
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2075
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2079
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2086
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2090
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2107
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2189
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleName:    sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.partitionedBackup(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2200
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2213
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2217
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2225
		{
			sqlVAL.union.val = nil
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2231
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2247
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2257
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2261
		{
			sqlVAL.union.val = nil
		}
	case 207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2287
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2294
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2302
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2308
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2312
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2355
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2364
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2370
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2375
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2380
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2385
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2390
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2394
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2410
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2413
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2417
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2421
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2429
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2439
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2443
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2453
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2457
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2461
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = nil
		}
	case 241:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2491
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2505
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2506
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2507
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2508
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2518
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2526
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2528
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2531
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2550
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2558
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2564
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2567
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2586
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2594
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2596
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2603
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2607
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2615
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2634
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2639
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2651
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2653
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2654
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2655
		{
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2656
		{
			return helpWith(sqllex, "CREATE")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2659
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2660
		{
			return unimplemented(sqllex, "create cast")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2661
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2662
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2663
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2664
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2665
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2666
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2667
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2668
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2669
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2670
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2671
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2672
		{
			return unimplemented(sqllex, "create operator")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2673
		{
			return unimplemented(sqllex, "create publication")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2674
		{
			return unimplemented(sqllex, "create rule")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2675
		{
			return unimplemented(sqllex, "create server")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2676
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2677
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2678
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2681
		{
		}
	case 301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2682
		{
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2685
		{
		}
	case 303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2686
		{
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2689
		{
		}
	case 305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2690
		{
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2693
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2694
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2695
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2696
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2697
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2698
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2699
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2700
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2701
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2702
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2703
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2704
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2705
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2706
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2707
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2708
		{
			return unimplemented(sqllex, "drop server")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2709
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2710
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2711
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2715
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2716
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2717
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2718
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2719
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2721
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2722
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2723
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2724
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2734
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2742
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2750
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2760
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2769
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2788
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2792
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2803
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2831
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2845
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2851
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2866
		{

			sqlVAL.union.val = nil
		}
	case 364:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2880
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2890
		{
			return helpWith(sqllex, "DELETE")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2893
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2894
		{
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2905
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2906
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2907
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2908
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2909
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2918
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2919
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2920
		{
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2921
		{
			return helpWith(sqllex, "DROP")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2924
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2925
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2926
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2927
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2928
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2929
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2937
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2941
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2944
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2959
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2967
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2971
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2974
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2982
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2991
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2999
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3007
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3015
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3022
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3029
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3037
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3044
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3049
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3053
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3071
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3075
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3080
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3093
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3098
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3105
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3131
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3138
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3140
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3148
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3156
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3164
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3172
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3183
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3187
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3190
		{
			return helpWith(sqllex, "DELETE")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3192
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3193
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3194
		{
			return helpWith(sqllex, "INSERT")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3197
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3199
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3202
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3207
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3208
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3209
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3214
		{
			return helpWith(sqllex, "DELETE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3215
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3216
		{
			return helpWith(sqllex, "INSERT")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3218
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3222
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3223
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3227
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3231
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 476:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3241
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3249
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3257
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3265
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3282
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3290
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3298
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3308
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3312
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3320
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3323
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3343
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3347
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3351
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3354
		{
			return helpWith(sqllex, "GRANT")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3374
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3378
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3385
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3394
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3422
		{
			return helpWith(sqllex, "RESET")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3423
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3435
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3438
		{
			return helpWith(sqllex, "RESET")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3449
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3460
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3463
		{
			return helpWith(sqllex, "USE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3467
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3468
		{
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3469
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3470
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3474
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3476
		{
			return helpWith(sqllex, "USE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3492
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3510
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3528
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3536
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3540
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3544
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3550
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3554
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3560
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3564
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3587
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3590
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3600
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3616
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 552:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3642
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3645
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3647
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3650
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3654
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3673
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3680
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3685
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3690
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3695
		{
			return unimplemented(sqllex, "set from current")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3696
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3704
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3709
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3716
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3726
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3730
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3737
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3758
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3762
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3768
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3780
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3784
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3790
		{
			sqlVAL.union.val = tree.Low
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3794
		{
			sqlVAL.union.val = tree.Normal
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3798
		{
			sqlVAL.union.val = tree.High
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3817
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3822
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3826
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3840
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3841
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3842
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3843
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3844
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3845
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3847
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3848
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3849
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3850
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3851
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3852
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3853
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3855
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3856
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3857
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3858
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3859
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3860
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3861
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3862
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3863
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3864
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3865
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3866
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3868
		{
			return helpWith(sqllex, "SHOW")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3869
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3874
		{
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3875
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3878
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3882
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3887
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3892
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3897
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3907
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3908
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3909
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.str = "client_encoding"
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3923
		{
			sqlVAL.str = "timezone"
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3924
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3938
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3942
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3946
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3957
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3965
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3973
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3981
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3990
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3999
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4007
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4017
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4021
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4024
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4026
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4029
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4031
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4035
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4038
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4049
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4061
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4072
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4080
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4083
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4096
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4104
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4115
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4121
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4125
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4130
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4134
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4137
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4145
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4150
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4153
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4161
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4164
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4166
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4169
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = true
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = true
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4177
		{
			sqlVAL.union.val = false
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4187
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4191
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4194
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4195
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4197
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4201
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4204
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4214
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4231
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4236
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4241
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4245
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = true
		}
	case 731:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4249
		{
			sqlVAL.union.val = false
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4257
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4260
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4265
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4273
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4283
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4293
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4296
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4299
		{
			sqlVAL.union.val = true
		}
	case 741:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = false
		}
	case 742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4311
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4314
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4321
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4325
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4328
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4335
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4339
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4346
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4356
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4359
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4367
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4372
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4377
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4381
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4389
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4393
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4397
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4410
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4413
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4421
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4424
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4428
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4432
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4436
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4444
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4459
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4466
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4470
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4481
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4489
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4495
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4504
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4513
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4516
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4520
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4527
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 784:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4532
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4652
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4656
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4660
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4703
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4712
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4720
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4736
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 796:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4740
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4753
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4754
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4755
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4765
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4766
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4767
		{
			return helpWith(sqllex, "RESUME")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4777
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4785
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4787
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4790
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4809
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4811
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4818
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4826
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4832
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4838
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4877
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:4892
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.union.val = nil
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{

			sqlVAL.union.val = nil
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4919
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4924
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4934
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4939
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4944
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4951
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 833:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4971
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
			}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4984
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4998
		{
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4999
		{
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5000
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5018
		{
			sqlVAL.union.val = true
		}
	case 839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5019
		{
			sqlVAL.union.val = true
		}
	case 840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5020
		{
			sqlVAL.union.val = false
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = true
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5025
		{
			sqlVAL.union.val = true
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5026
		{
			sqlVAL.union.val = true
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5027
		{
			sqlVAL.union.val = true
		}
	case 846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5028
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5033
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5039
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5043
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5049
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5055
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5059
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5072
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 858:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5083
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5084
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5086
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5087
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5089
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5090
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5091
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5096
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5105
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5112
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5117
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 872:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5122
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5128
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 875:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5135
		{
			sqlVAL.str = ""
		}
	case 877:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5142
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 878:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5155
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5162
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5172
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 883:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5178
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5192
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 886:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5198
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5212
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5223
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 889:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5227
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5233
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5237
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5245
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5275
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5291
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5298
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5302
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5306
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5316
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5320
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5331
		{
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5332
		{
		}
	case 910:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5337
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
				Predicate:   sqlDollar[10].union.expr(),
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5349
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
					Predicate:   sqlDollar[11].union.expr(),
				},
			}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:      tree.Name(sqlDollar[3].str),
				Columns:   sqlDollar[5].union.idxElems(),
				Inverted:  true,
				Predicate: sqlDollar[7].union.expr(),
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5386
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5391
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5397
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5415
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5427
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5438
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5455
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5465
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5476
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5480
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5493
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5504
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5514
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5524
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5534
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5540
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5545
		{
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5546
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5547
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5548
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5549
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5550
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5568
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5584
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5594
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5618
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5622
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5626
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5635
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5643
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5647
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5651
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5671
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5683
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5706
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5715
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5723
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5727
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5730
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5731
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5734
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5735
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5739
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5749
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5752
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5754
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5756
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5758
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5759
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5761
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5762
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5764
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5766
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5774
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5777
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5785
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5795
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5799
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5802
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5810
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5814
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5817
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = true
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5827
		{

			sqlVAL.union.val = true
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = false
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5842
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5856
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Temporary:   sqlDollar[4].union.persistenceType(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5868
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5879
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5895
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5913
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5917
		{
			sqlVAL.union.val = nil
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5927
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5932
		{
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5933
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5942
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5949
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5951
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5953
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5955
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5957
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5959
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5963
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5967
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5973
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5977
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5995
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[5].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Columns:      sqlDollar[10].union.idxElems(),
				Sharded:      sqlDollar[12].union.shardedIndexDef(),
				Storing:      sqlDollar[13].union.nameList(),
				Interleave:   sqlDollar[14].union.interleave(),
				PartitionBy:  sqlDollar[15].union.partitionBy(),
				Predicate:    sqlDollar[16].union.expr(),
				Inverted:     sqlDollar[8].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6012
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[8].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Sharded:      sqlDollar[15].union.shardedIndexDef(),
				Storing:      sqlDollar[16].union.nameList(),
				Interleave:   sqlDollar[17].union.interleave(),
				PartitionBy:  sqlDollar[18].union.partitionBy(),
				Inverted:     sqlDollar[11].union.bool(),
				Predicate:    sqlDollar[19].union.expr(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6030
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[6].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				Columns:      sqlDollar[10].union.idxElems(),
				Storing:      sqlDollar[12].union.nameList(),
				Interleave:   sqlDollar[13].union.interleave(),
				PartitionBy:  sqlDollar[14].union.partitionBy(),
				Predicate:    sqlDollar[15].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:6046
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[9].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Storing:      sqlDollar[15].union.nameList(),
				Interleave:   sqlDollar[16].union.interleave(),
				PartitionBy:  sqlDollar[17].union.partitionBy(),
				Predicate:    sqlDollar[18].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6062
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6066
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6081
		{
			sqlVAL.union.val = false
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = true
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = false
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6097
		{
			sqlVAL.union.val = true
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = false
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6120
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6142
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.str = ""
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6151
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6155
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6161
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6167
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6173
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6181
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6187
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6195
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6201
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6218
		{
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6219
		{
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6222
		{
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6223
		{
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6231
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6234
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6244
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6252
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6257
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6270
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6278
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6280
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6286
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6299
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6307
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6309
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6315
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6323
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6326
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6330
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6331
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6332
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6351
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6353
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6356
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6369
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6374
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6383
		{
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6384
		{
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6385
		{
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6402
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6405
		{
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6406
		{
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6434
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6447
		{
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6449
		{
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6453
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6472
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6478
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6518
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.str = ""
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.str = ""
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6546
		{
			sqlVAL.str = ""
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6556
		{
			sqlVAL.str = ""
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6561
		{
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6562
		{
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6581
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6588
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6599
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6606
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6610
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6619
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6624
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6630
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6634
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6638
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6644
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6648
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6668
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6672
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6676
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6685
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6686
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6694
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6699
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6732
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6761
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6764
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6768
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6811
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6817
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6860
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6878
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6882
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6888
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6900
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6903
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6904
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6914
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6949
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6950
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6951
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6986
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7012
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7025
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7049
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7056
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7072
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = true
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7097
		{
			sqlVAL.union.val = false
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7125
		{
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7126
		{
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7134
		{
			sqlVAL.union.val = nil
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7139
		{
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7140
		{
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = true
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = false
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = false
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7158
		{
			sqlVAL.union.val = true
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7169
		{
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7170
		{
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7190
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7211
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7232
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7237
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7266
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7299
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7354
		{
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7355
		{
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7358
		{
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7359
		{
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7409
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7412
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7414
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7426
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7429
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7451
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7456
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7461
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7472
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7484
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7495
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7499
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7503
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7511
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7542
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7552
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7562
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7583
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7587
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7598
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7628
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7651
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7655
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7661
		{
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7663
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7666
		{
			sqlVAL.union.val = nil
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7667
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7668
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7672
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7676
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = true
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7686
		{
			sqlVAL.union.val = false
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7706
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7710
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7714
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7722
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7726
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7743
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7749
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7762
		{
			sqlVAL.str = tree.AstFull
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.str = tree.AstRight
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.str = tree.AstInner
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7780
		{
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7781
		{
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.str = tree.AstHash
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7810
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.str = ""
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7837
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7838
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7839
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7843
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7848
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7862
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7866
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7872
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7878
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7888
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7917
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7930
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7938
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7939
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7957
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7959
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7967
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7980
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7987
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7996
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8036
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.IDTypeReference{ID: uint32(id)}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8048
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8049
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8053
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8054
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8057
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = types.Geography
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8069
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8073
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8081
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8107
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8115
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.union.val = nil
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8134
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.union.val = types.Int2
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = types.Int
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8146
		{
			sqlVAL.union.val = types.Float4
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = types.Float
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8158
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8166
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8174
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = types.Bool
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8188
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = types.Float
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8207
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8213
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8229
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8235
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8257
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8265
		{
			sqlVAL.union.val = types.String
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = true
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = false
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = types.Date
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8284
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8292
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8304
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8306
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8315
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8323
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8336
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8340
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = true
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = false
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8352
		{
			sqlVAL.union.val = false
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = types.Interval
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8364
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8448
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8463
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = nil
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8493
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8530
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8553
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8558
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8562
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8606
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8614
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8686
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8690
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8702
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8726
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8730
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8738
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8774
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8790
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8805
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8871
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8893
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8925
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8933
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8973
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8989
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9005
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9009
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9013
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9035
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9071
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9087
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9092
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9094
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9118
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9127
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9142
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9165
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9172
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9183
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9184
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9199
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9208
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9274
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9286
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9345
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9399
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9401
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9404
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9410
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9413
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9422
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9431
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9440
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9445
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9450
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9455
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9460
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9469
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9470
		{
			return unimplemented(sqllex, "treat")
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9491
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9496
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9523
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9533
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9543
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.str = ""
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9632
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9645
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9681
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9685
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9713
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9742
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = tree.Any
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = tree.Some
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = tree.All
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = tree.Div
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9772
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = tree.LT
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = tree.GT
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = tree.LE
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = tree.GE
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = tree.NE
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9786
		{
			sqlVAL.union.val = tree.Like
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9851
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9868
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9872
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9878
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9882
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9898
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9908
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9943
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9977
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9993
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10005
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10025
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10054
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10094
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10103
		{
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10104
		{
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10118
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10127
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10131
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10176
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10184
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10216
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10234
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10257
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10273
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10282
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10293
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10302
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10310
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10322
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10456
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10460
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10500
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10513
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10520
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.str = ""
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
