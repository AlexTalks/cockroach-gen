// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colTableDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) colDef() tree.ColumnDef {
	return u.val.(tree.ColumnDef)
}
func (u *sqlSymUnion) colDefList() tree.ColumnDefList {
	return u.val.(tree.ColumnDefList)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterBackupScheduleCmd() tree.AlterBackupScheduleCmd {
	return u.val.(tree.AlterBackupScheduleCmd)
}
func (u *sqlSymUnion) alterBackupScheduleCmds() tree.AlterBackupScheduleCmds {
	return u.val.(tree.AlterBackupScheduleCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}
func (u *sqlSymUnion) functionObj() tree.FuncObj {
	return u.val.(tree.FuncObj)
}
func (u *sqlSymUnion) functionObjs() tree.FuncObjs {
	return u.val.(tree.FuncObjs)
}

//line sql-gen.y:982
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONNECTIONS = lexbase.CONNECTIONS
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DEPENDS = lexbase.DEPENDS
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const EXTREMES = lexbase.EXTREMES
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INDEX_BEFORE_PAREN = lexbase.INDEX_BEFORE_PAREN
const INDEX_BEFORE_NAME_THEN_PAREN = lexbase.INDEX_BEFORE_NAME_THEN_PAREN
const INDEX_AFTER_ORDER_BY_BEFORE_AT = lexbase.INDEX_AFTER_ORDER_BY_BEFORE_AT
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LABEL = lexbase.LABEL
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTHING_AFTER_RETURNING = lexbase.NOTHING_AFTER_RETURNING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMA_ONLY = lexbase.SCHEMA_ONLY
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECONDARY = lexbase.SECONDARY
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLISTEN = lexbase.UNLISTEN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VERIFY_BACKUP_TABLE_DATA = lexbase.VERIFY_BACKUP_TABLE_DATA
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWDEBUG = lexbase.VIEWDEBUG
const VIEWCLUSTERMETADATA = lexbase.VIEWCLUSTERMETADATA
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONNECTIONS",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DEPENDS",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"EXTREMES",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INDEX_BEFORE_PAREN",
	"INDEX_BEFORE_NAME_THEN_PAREN",
	"INDEX_AFTER_ORDER_BY_BEFORE_AT",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LABEL",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTHING_AFTER_RETURNING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMA_ONLY",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VERIFY_BACKUP_TABLE_DATA",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWDEBUG",
	"VIEWCLUSTERMETADATA",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15928

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 1928,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 64,
	288, 586,
	-2, 0,
	-1, 76,
	8, 1061,
	29, 1061,
	656, 1061,
	657, 1061,
	-2, 0,
	-1, 77,
	8, 1061,
	29, 1061,
	656, 1061,
	657, 1061,
	-2, 0,
	-1, 80,
	1, 1775,
	140, 1775,
	275, 1775,
	363, 1775,
	427, 1775,
	437, 1775,
	637, 1775,
	669, 1775,
	-2, 0,
	-1, 81,
	1, 1775,
	669, 1775,
	-2, 0,
	-1, 87,
	268, 295,
	571, 295,
	-2, 0,
	-1, 102,
	206, 486,
	251, 1649,
	270, 1649,
	288, 486,
	429, 486,
	441, 1390,
	485, 486,
	502, 1390,
	555, 1390,
	584, 486,
	613, 1390,
	-2, 0,
	-1, 109,
	142, 1928,
	263, 1928,
	596, 1928,
	597, 1928,
	-2, 0,
	-1, 127,
	162, 1899,
	184, 1899,
	197, 1899,
	266, 1899,
	302, 1899,
	377, 1899,
	388, 1899,
	590, 1899,
	-2, 1870,
	-1, 171,
	170, 1198,
	286, 1198,
	432, 1159,
	507, 1159,
	554, 1159,
	574, 1198,
	576, 1159,
	-2, 0,
	-1, 176,
	4, 1930,
	21, 1930,
	22, 1930,
	23, 1930,
	24, 1930,
	25, 1930,
	26, 1930,
	27, 1930,
	28, 1930,
	30, 1930,
	31, 1930,
	37, 1930,
	41, 1930,
	43, 1930,
	44, 1930,
	45, 1930,
	47, 1930,
	48, 1930,
	49, 1930,
	50, 1930,
	51, 1930,
	52, 1930,
	53, 1930,
	54, 1930,
	55, 1930,
	57, 1930,
	58, 1930,
	59, 1930,
	60, 1930,
	62, 1930,
	63, 1930,
	64, 1930,
	65, 1930,
	66, 1930,
	67, 1930,
	68, 1930,
	69, 1930,
	73, 1930,
	74, 1930,
	75, 1930,
	76, 1930,
	78, 1930,
	79, 1930,
	80, 1930,
	84, 1930,
	85, 1930,
	86, 1930,
	87, 1930,
	88, 1930,
	89, 1930,
	90, 1930,
	91, 1930,
	94, 1930,
	95, 1930,
	96, 1930,
	97, 1930,
	98, 1930,
	99, 1930,
	101, 1930,
	103, 1930,
	104, 1930,
	105, 1930,
	106, 1930,
	107, 1930,
	108, 1930,
	109, 1930,
	111, 1930,
	112, 1930,
	113, 1930,
	115, 1930,
	116, 1930,
	117, 1930,
	125, 1930,
	126, 1930,
	127, 1930,
	128, 1930,
	129, 1930,
	131, 1930,
	132, 1930,
	133, 1930,
	134, 1930,
	136, 1930,
	137, 1930,
	138, 1930,
	139, 1930,
	141, 1930,
	142, 1930,
	143, 1930,
	144, 1930,
	146, 1930,
	147, 1930,
	148, 1930,
	151, 1930,
	152, 1930,
	153, 1930,
	155, 1930,
	156, 1930,
	157, 1930,
	159, 1930,
	160, 1930,
	161, 1930,
	163, 1930,
	164, 1930,
	165, 1930,
	166, 1930,
	167, 1930,
	168, 1930,
	169, 1930,
	170, 1930,
	171, 1930,
	172, 1930,
	173, 1930,
	174, 1930,
	175, 1930,
	176, 1930,
	177, 1930,
	178, 1930,
	179, 1930,
	180, 1930,
	181, 1930,
	183, 1930,
	189, 1930,
	190, 1930,
	191, 1930,
	192, 1930,
	196, 1930,
	198, 1930,
	199, 1930,
	200, 1930,
	202, 1930,
	203, 1930,
	206, 1930,
	207, 1930,
	208, 1930,
	209, 1930,
	210, 1930,
	211, 1930,
	212, 1930,
	213, 1930,
	214, 1930,
	215, 1930,
	216, 1930,
	217, 1930,
	218, 1930,
	219, 1930,
	221, 1930,
	222, 1930,
	224, 1930,
	225, 1930,
	227, 1930,
	228, 1930,
	229, 1930,
	230, 1930,
	231, 1930,
	232, 1930,
	233, 1930,
	234, 1930,
	235, 1930,
	236, 1930,
	237, 1930,
	239, 1930,
	240, 1930,
	241, 1930,
	243, 1930,
	244, 1930,
	245, 1930,
	246, 1930,
	247, 1930,
	251, 1930,
	252, 1930,
	253, 1930,
	254, 1930,
	256, 1930,
	257, 1930,
	258, 1930,
	260, 1930,
	261, 1930,
	262, 1930,
	263, 1930,
	264, 1930,
	265, 1930,
	267, 1930,
	269, 1930,
	270, 1930,
	271, 1930,
	273, 1930,
	275, 1930,
	276, 1930,
	277, 1930,
	279, 1930,
	283, 1930,
	284, 1930,
	285, 1930,
	286, 1930,
	287, 1930,
	288, 1930,
	289, 1930,
	291, 1930,
	292, 1930,
	293, 1930,
	295, 1930,
	296, 1930,
	297, 1930,
	299, 1930,
	300, 1930,
	303, 1930,
	304, 1930,
	305, 1930,
	306, 1930,
	307, 1930,
	308, 1930,
	309, 1930,
	312, 1930,
	313, 1930,
	314, 1930,
	315, 1930,
	317, 1930,
	318, 1930,
	319, 1930,
	320, 1930,
	321, 1930,
	322, 1930,
	323, 1930,
	324, 1930,
	325, 1930,
	326, 1930,
	327, 1930,
	328, 1930,
	329, 1930,
	330, 1930,
	331, 1930,
	332, 1930,
	333, 1930,
	334, 1930,
	335, 1930,
	336, 1930,
	337, 1930,
	338, 1930,
	339, 1930,
	341, 1930,
	343, 1930,
	344, 1930,
	345, 1930,
	346, 1930,
	347, 1930,
	348, 1930,
	349, 1930,
	350, 1930,
	351, 1930,
	352, 1930,
	353, 1930,
	354, 1930,
	355, 1930,
	356, 1930,
	357, 1930,
	358, 1930,
	359, 1930,
	361, 1930,
	362, 1930,
	364, 1930,
	365, 1930,
	367, 1930,
	368, 1930,
	369, 1930,
	370, 1930,
	372, 1930,
	373, 1930,
	374, 1930,
	375, 1930,
	376, 1930,
	379, 1930,
	381, 1930,
	383, 1930,
	384, 1930,
	385, 1930,
	386, 1930,
	389, 1930,
	390, 1930,
	391, 1930,
	393, 1930,
	395, 1930,
	396, 1930,
	397, 1930,
	398, 1930,
	399, 1930,
	400, 1930,
	401, 1930,
	402, 1930,
	403, 1930,
	404, 1930,
	405, 1930,
	406, 1930,
	407, 1930,
	408, 1930,
	410, 1930,
	411, 1930,
	412, 1930,
	413, 1930,
	414, 1930,
	415, 1930,
	416, 1930,
	417, 1930,
	418, 1930,
	419, 1930,
	420, 1930,
	421, 1930,
	422, 1930,
	423, 1930,
	424, 1930,
	426, 1930,
	427, 1930,
	428, 1930,
	430, 1930,
	431, 1930,
	432, 1930,
	433, 1930,
	434, 1930,
	435, 1930,
	436, 1930,
	437, 1930,
	438, 1930,
	439, 1930,
	440, 1930,
	441, 1930,
	442, 1930,
	443, 1930,
	445, 1930,
	447, 1930,
	448, 1930,
	449, 1930,
	455, 1930,
	456, 1930,
	457, 1930,
	459, 1930,
	460, 1930,
	461, 1930,
	462, 1930,
	463, 1930,
	464, 1930,
	465, 1930,
	466, 1930,
	467, 1930,
	468, 1930,
	469, 1930,
	471, 1930,
	472, 1930,
	473, 1930,
	474, 1930,
	475, 1930,
	477, 1930,
	478, 1930,
	479, 1930,
	480, 1930,
	481, 1930,
	482, 1930,
	483, 1930,
	485, 1930,
	486, 1930,
	487, 1930,
	488, 1930,
	489, 1930,
	490, 1930,
	491, 1930,
	492, 1930,
	493, 1930,
	494, 1930,
	495, 1930,
	496, 1930,
	497, 1930,
	498, 1930,
	499, 1930,
	500, 1930,
	502, 1930,
	503, 1930,
	504, 1930,
	505, 1930,
	506, 1930,
	507, 1930,
	509, 1930,
	510, 1930,
	511, 1930,
	512, 1930,
	513, 1930,
	514, 1930,
	515, 1930,
	517, 1930,
	518, 1930,
	519, 1930,
	520, 1930,
	521, 1930,
	522, 1930,
	523, 1930,
	524, 1930,
	526, 1930,
	528, 1930,
	529, 1930,
	530, 1930,
	531, 1930,
	532, 1930,
	533, 1930,
	534, 1930,
	535, 1930,
	536, 1930,
	537, 1930,
	538, 1930,
	539, 1930,
	540, 1930,
	541, 1930,
	542, 1930,
	543, 1930,
	544, 1930,
	545, 1930,
	546, 1930,
	547, 1930,
	548, 1930,
	550, 1930,
	551, 1930,
	553, 1930,
	554, 1930,
	556, 1930,
	557, 1930,
	558, 1930,
	559, 1930,
	560, 1930,
	561, 1930,
	563, 1930,
	564, 1930,
	566, 1930,
	567, 1930,
	568, 1930,
	569, 1930,
	570, 1930,
	572, 1930,
	574, 1930,
	575, 1930,
	576, 1930,
	577, 1930,
	578, 1930,
	579, 1930,
	580, 1930,
	581, 1930,
	583, 1930,
	584, 1930,
	585, 1930,
	586, 1930,
	587, 1930,
	588, 1930,
	589, 1930,
	592, 1930,
	593, 1930,
	594, 1930,
	595, 1930,
	596, 1930,
	597, 1930,
	598, 1930,
	599, 1930,
	600, 1930,
	602, 1930,
	605, 1930,
	606, 1930,
	607, 1930,
	608, 1930,
	609, 1930,
	610, 1930,
	612, 1930,
	613, 1930,
	614, 1930,
	615, 1930,
	616, 1930,
	617, 1930,
	618, 1930,
	619, 1930,
	620, 1930,
	621, 1930,
	622, 1930,
	623, 1930,
	628, 1930,
	629, 1930,
	630, 1930,
	631, 1930,
	632, 1930,
	633, 1930,
	-2, 0,
	-1, 178,
	1, 1775,
	669, 1775,
	672, 1775,
	-2, 0,
	-1, 179,
	1, 1775,
	571, 1775,
	669, 1775,
	672, 1775,
	-2, 0,
	-1, 215,
	162, 1898,
	184, 1898,
	197, 1898,
	266, 1898,
	302, 1898,
	377, 1898,
	388, 1898,
	590, 1898,
	-2, 1873,
	-1, 276,
	4, 1937,
	5, 1937,
	6, 1937,
	7, 1937,
	8, 1937,
	9, 1937,
	10, 1937,
	21, 1937,
	22, 1937,
	23, 1937,
	24, 1937,
	25, 1937,
	26, 1937,
	27, 1937,
	28, 1937,
	30, 1937,
	31, 1937,
	37, 1937,
	38, 1937,
	41, 1937,
	43, 1937,
	44, 1937,
	45, 1937,
	46, 1937,
	47, 1937,
	48, 1937,
	49, 1937,
	50, 1937,
	51, 1937,
	52, 1937,
	53, 1937,
	54, 1937,
	55, 1937,
	57, 1937,
	58, 1937,
	59, 1937,
	60, 1937,
	62, 1937,
	63, 1937,
	64, 1937,
	65, 1937,
	66, 1937,
	67, 1937,
	68, 1937,
	69, 1937,
	70, 1937,
	71, 1937,
	72, 1937,
	73, 1937,
	74, 1937,
	75, 1937,
	76, 1937,
	78, 1937,
	79, 1937,
	80, 1937,
	82, 1937,
	84, 1937,
	85, 1937,
	86, 1937,
	87, 1937,
	88, 1937,
	89, 1937,
	90, 1937,
	91, 1937,
	94, 1937,
	95, 1937,
	96, 1937,
	97, 1937,
	98, 1937,
	99, 1937,
	101, 1937,
	103, 1937,
	104, 1937,
	105, 1937,
	106, 1937,
	107, 1937,
	108, 1937,
	109, 1937,
	111, 1937,
	112, 1937,
	113, 1937,
	114, 1937,
	115, 1937,
	116, 1937,
	117, 1937,
	118, 1937,
	119, 1937,
	120, 1937,
	121, 1937,
	122, 1937,
	123, 1937,
	124, 1937,
	125, 1937,
	126, 1937,
	127, 1937,
	128, 1937,
	129, 1937,
	130, 1937,
	131, 1937,
	132, 1937,
	133, 1937,
	134, 1937,
	135, 1937,
	136, 1937,
	137, 1937,
	138, 1937,
	139, 1937,
	141, 1937,
	142, 1937,
	143, 1937,
	144, 1937,
	146, 1937,
	147, 1937,
	148, 1937,
	151, 1937,
	152, 1937,
	153, 1937,
	155, 1937,
	156, 1937,
	157, 1937,
	159, 1937,
	160, 1937,
	161, 1937,
	163, 1937,
	164, 1937,
	165, 1937,
	166, 1937,
	167, 1937,
	168, 1937,
	169, 1937,
	170, 1937,
	171, 1937,
	172, 1937,
	173, 1937,
	174, 1937,
	175, 1937,
	176, 1937,
	177, 1937,
	178, 1937,
	179, 1937,
	180, 1937,
	181, 1937,
	182, 1937,
	183, 1937,
	189, 1937,
	190, 1937,
	191, 1937,
	192, 1937,
	196, 1937,
	198, 1937,
	199, 1937,
	200, 1937,
	202, 1937,
	203, 1937,
	205, 1937,
	206, 1937,
	207, 1937,
	208, 1937,
	209, 1937,
	210, 1937,
	211, 1937,
	212, 1937,
	213, 1937,
	214, 1937,
	215, 1937,
	216, 1937,
	217, 1937,
	218, 1937,
	219, 1937,
	221, 1937,
	222, 1937,
	224, 1937,
	225, 1937,
	227, 1937,
	228, 1937,
	229, 1937,
	230, 1937,
	231, 1937,
	232, 1937,
	233, 1937,
	234, 1937,
	235, 1937,
	236, 1937,
	237, 1937,
	238, 1937,
	239, 1937,
	240, 1937,
	241, 1937,
	243, 1937,
	244, 1937,
	245, 1937,
	246, 1937,
	247, 1937,
	251, 1937,
	252, 1937,
	253, 1937,
	254, 1937,
	256, 1937,
	257, 1937,
	258, 1937,
	259, 1937,
	260, 1937,
	261, 1937,
	262, 1937,
	263, 1937,
	264, 1937,
	265, 1937,
	267, 1937,
	269, 1937,
	270, 1937,
	271, 1937,
	272, 1937,
	273, 1937,
	274, 1937,
	275, 1937,
	276, 1937,
	277, 1937,
	278, 1937,
	279, 1937,
	283, 1937,
	284, 1937,
	285, 1937,
	286, 1937,
	287, 1937,
	288, 1937,
	289, 1937,
	291, 1937,
	292, 1937,
	293, 1937,
	295, 1937,
	296, 1937,
	297, 1937,
	298, 1937,
	299, 1937,
	300, 1937,
	301, 1937,
	303, 1937,
	304, 1937,
	305, 1937,
	306, 1937,
	307, 1937,
	308, 1937,
	309, 1937,
	310, 1937,
	311, 1937,
	312, 1937,
	313, 1937,
	314, 1937,
	315, 1937,
	317, 1937,
	318, 1937,
	319, 1937,
	320, 1937,
	321, 1937,
	322, 1937,
	323, 1937,
	324, 1937,
	325, 1937,
	326, 1937,
	327, 1937,
	328, 1937,
	329, 1937,
	330, 1937,
	331, 1937,
	332, 1937,
	333, 1937,
	334, 1937,
	335, 1937,
	336, 1937,
	337, 1937,
	338, 1937,
	339, 1937,
	341, 1937,
	342, 1937,
	343, 1937,
	344, 1937,
	345, 1937,
	346, 1937,
	347, 1937,
	348, 1937,
	349, 1937,
	350, 1937,
	351, 1937,
	352, 1937,
	353, 1937,
	354, 1937,
	355, 1937,
	356, 1937,
	357, 1937,
	358, 1937,
	359, 1937,
	360, 1937,
	361, 1937,
	362, 1937,
	363, 1937,
	364, 1937,
	365, 1937,
	366, 1937,
	367, 1937,
	368, 1937,
	369, 1937,
	370, 1937,
	371, 1937,
	372, 1937,
	373, 1937,
	374, 1937,
	375, 1937,
	376, 1937,
	379, 1937,
	381, 1937,
	384, 1937,
	385, 1937,
	386, 1937,
	389, 1937,
	390, 1937,
	391, 1937,
	392, 1937,
	393, 1937,
	394, 1937,
	395, 1937,
	396, 1937,
	397, 1937,
	398, 1937,
	399, 1937,
	400, 1937,
	401, 1937,
	402, 1937,
	403, 1937,
	404, 1937,
	405, 1937,
	406, 1937,
	407, 1937,
	408, 1937,
	410, 1937,
	411, 1937,
	412, 1937,
	413, 1937,
	414, 1937,
	415, 1937,
	416, 1937,
	417, 1937,
	418, 1937,
	419, 1937,
	420, 1937,
	421, 1937,
	422, 1937,
	423, 1937,
	424, 1937,
	426, 1937,
	427, 1937,
	428, 1937,
	430, 1937,
	431, 1937,
	432, 1937,
	433, 1937,
	434, 1937,
	435, 1937,
	436, 1937,
	437, 1937,
	438, 1937,
	439, 1937,
	440, 1937,
	441, 1937,
	442, 1937,
	443, 1937,
	445, 1937,
	447, 1937,
	448, 1937,
	449, 1937,
	455, 1937,
	456, 1937,
	457, 1937,
	459, 1937,
	460, 1937,
	461, 1937,
	462, 1937,
	463, 1937,
	464, 1937,
	465, 1937,
	466, 1937,
	467, 1937,
	468, 1937,
	469, 1937,
	471, 1937,
	472, 1937,
	473, 1937,
	474, 1937,
	475, 1937,
	476, 1937,
	477, 1937,
	478, 1937,
	479, 1937,
	480, 1937,
	481, 1937,
	482, 1937,
	483, 1937,
	485, 1937,
	486, 1937,
	487, 1937,
	488, 1937,
	489, 1937,
	490, 1937,
	491, 1937,
	492, 1937,
	493, 1937,
	494, 1937,
	495, 1937,
	496, 1937,
	497, 1937,
	498, 1937,
	499, 1937,
	500, 1937,
	502, 1937,
	503, 1937,
	504, 1937,
	505, 1937,
	506, 1937,
	507, 1937,
	508, 1937,
	509, 1937,
	510, 1937,
	511, 1937,
	512, 1937,
	513, 1937,
	514, 1937,
	515, 1937,
	516, 1937,
	517, 1937,
	518, 1937,
	519, 1937,
	520, 1937,
	521, 1937,
	522, 1937,
	523, 1937,
	524, 1937,
	526, 1937,
	528, 1937,
	529, 1937,
	530, 1937,
	531, 1937,
	532, 1937,
	533, 1937,
	534, 1937,
	535, 1937,
	536, 1937,
	537, 1937,
	538, 1937,
	539, 1937,
	540, 1937,
	541, 1937,
	542, 1937,
	543, 1937,
	544, 1937,
	545, 1937,
	546, 1937,
	547, 1937,
	548, 1937,
	550, 1937,
	551, 1937,
	552, 1937,
	553, 1937,
	554, 1937,
	556, 1937,
	557, 1937,
	558, 1937,
	559, 1937,
	560, 1937,
	561, 1937,
	563, 1937,
	564, 1937,
	566, 1937,
	567, 1937,
	568, 1937,
	569, 1937,
	570, 1937,
	572, 1937,
	574, 1937,
	575, 1937,
	576, 1937,
	577, 1937,
	578, 1937,
	579, 1937,
	580, 1937,
	581, 1937,
	582, 1937,
	583, 1937,
	584, 1937,
	585, 1937,
	586, 1937,
	587, 1937,
	588, 1937,
	589, 1937,
	591, 1937,
	592, 1937,
	593, 1937,
	594, 1937,
	595, 1937,
	596, 1937,
	597, 1937,
	598, 1937,
	599, 1937,
	600, 1937,
	601, 1937,
	602, 1937,
	605, 1937,
	606, 1937,
	607, 1937,
	608, 1937,
	609, 1937,
	610, 1937,
	612, 1937,
	613, 1937,
	614, 1937,
	615, 1937,
	616, 1937,
	617, 1937,
	618, 1937,
	619, 1937,
	620, 1937,
	621, 1937,
	622, 1937,
	623, 1937,
	628, 1937,
	629, 1937,
	630, 1937,
	631, 1937,
	632, 1937,
	633, 1937,
	634, 1937,
	649, 1937,
	656, 1937,
	657, 1937,
	658, 1937,
	666, 1937,
	670, 1937,
	-2, 0,
	-1, 861,
	4, 1647,
	21, 1647,
	22, 1647,
	23, 1647,
	24, 1647,
	25, 1647,
	26, 1647,
	27, 1647,
	28, 1647,
	30, 1647,
	31, 1647,
	37, 1647,
	41, 1647,
	43, 1647,
	44, 1647,
	45, 1647,
	47, 1647,
	48, 1647,
	49, 1647,
	50, 1647,
	51, 1647,
	52, 1647,
	53, 1647,
	54, 1647,
	55, 1647,
	57, 1647,
	58, 1647,
	59, 1647,
	60, 1647,
	62, 1647,
	63, 1647,
	64, 1647,
	65, 1647,
	66, 1647,
	67, 1647,
	68, 1647,
	69, 1647,
	73, 1647,
	74, 1647,
	75, 1647,
	76, 1647,
	78, 1647,
	79, 1647,
	80, 1647,
	84, 1647,
	85, 1647,
	86, 1647,
	87, 1647,
	88, 1647,
	89, 1647,
	90, 1647,
	91, 1647,
	94, 1647,
	95, 1647,
	96, 1647,
	97, 1647,
	98, 1647,
	99, 1647,
	101, 1647,
	103, 1647,
	104, 1647,
	105, 1647,
	106, 1647,
	107, 1647,
	108, 1647,
	109, 1647,
	111, 1647,
	112, 1647,
	113, 1647,
	115, 1647,
	116, 1647,
	117, 1647,
	125, 1647,
	126, 1647,
	127, 1647,
	128, 1647,
	129, 1647,
	131, 1647,
	132, 1647,
	133, 1647,
	134, 1647,
	136, 1647,
	137, 1647,
	138, 1647,
	139, 1647,
	141, 1647,
	142, 1647,
	143, 1647,
	144, 1647,
	146, 1647,
	147, 1647,
	148, 1647,
	151, 1647,
	152, 1647,
	153, 1647,
	155, 1647,
	156, 1647,
	157, 1647,
	159, 1647,
	160, 1647,
	161, 1647,
	163, 1647,
	164, 1647,
	165, 1647,
	166, 1647,
	167, 1647,
	168, 1647,
	169, 1647,
	170, 1647,
	171, 1647,
	172, 1647,
	173, 1647,
	174, 1647,
	175, 1647,
	176, 1647,
	177, 1647,
	178, 1647,
	179, 1647,
	180, 1647,
	181, 1647,
	183, 1647,
	189, 1647,
	190, 1647,
	191, 1647,
	192, 1647,
	196, 1647,
	198, 1647,
	199, 1647,
	200, 1647,
	202, 1647,
	203, 1647,
	206, 1647,
	207, 1647,
	208, 1647,
	209, 1647,
	210, 1647,
	211, 1647,
	212, 1647,
	213, 1647,
	214, 1647,
	215, 1647,
	216, 1647,
	217, 1647,
	218, 1647,
	219, 1647,
	221, 1647,
	222, 1647,
	224, 1647,
	225, 1647,
	227, 1647,
	228, 1647,
	229, 1647,
	230, 1647,
	231, 1647,
	232, 1647,
	233, 1647,
	234, 1647,
	235, 1647,
	236, 1647,
	237, 1647,
	239, 1647,
	240, 1647,
	241, 1647,
	243, 1647,
	244, 1647,
	245, 1647,
	246, 1647,
	247, 1647,
	251, 1647,
	252, 1647,
	253, 1647,
	254, 1647,
	256, 1647,
	257, 1647,
	258, 1647,
	260, 1647,
	261, 1647,
	262, 1647,
	263, 1647,
	264, 1647,
	265, 1647,
	267, 1647,
	269, 1647,
	270, 1647,
	271, 1647,
	273, 1647,
	275, 1647,
	276, 1647,
	277, 1647,
	279, 1647,
	283, 1647,
	284, 1647,
	285, 1647,
	286, 1647,
	287, 1647,
	288, 1647,
	289, 1647,
	291, 1647,
	292, 1647,
	293, 1647,
	295, 1647,
	296, 1647,
	297, 1647,
	299, 1647,
	300, 1647,
	303, 1647,
	304, 1647,
	305, 1647,
	306, 1647,
	307, 1647,
	308, 1647,
	309, 1647,
	312, 1647,
	313, 1647,
	314, 1647,
	315, 1647,
	317, 1647,
	318, 1647,
	319, 1647,
	320, 1647,
	321, 1647,
	322, 1647,
	323, 1647,
	324, 1647,
	325, 1647,
	326, 1647,
	327, 1647,
	328, 1647,
	329, 1647,
	330, 1647,
	331, 1647,
	332, 1647,
	333, 1647,
	334, 1647,
	335, 1647,
	336, 1647,
	337, 1647,
	338, 1647,
	339, 1647,
	341, 1647,
	343, 1647,
	344, 1647,
	345, 1647,
	346, 1647,
	347, 1647,
	348, 1647,
	349, 1647,
	350, 1647,
	351, 1647,
	352, 1647,
	353, 1647,
	354, 1647,
	355, 1647,
	356, 1647,
	357, 1647,
	358, 1647,
	359, 1647,
	361, 1647,
	362, 1647,
	364, 1647,
	365, 1647,
	367, 1647,
	368, 1647,
	369, 1647,
	370, 1647,
	372, 1647,
	373, 1647,
	374, 1647,
	375, 1647,
	376, 1647,
	379, 1647,
	381, 1647,
	384, 1647,
	385, 1647,
	386, 1647,
	389, 1647,
	390, 1647,
	391, 1647,
	393, 1647,
	395, 1647,
	396, 1647,
	397, 1647,
	398, 1647,
	399, 1647,
	400, 1647,
	401, 1647,
	402, 1647,
	403, 1647,
	404, 1647,
	405, 1647,
	406, 1647,
	407, 1647,
	408, 1647,
	410, 1647,
	411, 1647,
	412, 1647,
	413, 1647,
	414, 1647,
	415, 1647,
	416, 1647,
	417, 1647,
	418, 1647,
	419, 1647,
	420, 1647,
	421, 1647,
	422, 1647,
	423, 1647,
	424, 1647,
	426, 1647,
	427, 1647,
	428, 1647,
	430, 1647,
	431, 1647,
	432, 1647,
	433, 1647,
	434, 1647,
	435, 1647,
	436, 1647,
	437, 1647,
	438, 1647,
	439, 1647,
	440, 1647,
	441, 1647,
	442, 1647,
	443, 1647,
	445, 1647,
	447, 1647,
	448, 1647,
	449, 1647,
	455, 1647,
	456, 1647,
	457, 1647,
	459, 1647,
	460, 1647,
	461, 1647,
	462, 1647,
	463, 1647,
	464, 1647,
	465, 1647,
	466, 1647,
	467, 1647,
	468, 1647,
	469, 1647,
	471, 1647,
	472, 1647,
	473, 1647,
	474, 1647,
	475, 1647,
	477, 1647,
	478, 1647,
	479, 1647,
	480, 1647,
	481, 1647,
	482, 1647,
	483, 1647,
	485, 1647,
	486, 1647,
	487, 1647,
	488, 1647,
	489, 1647,
	490, 1647,
	491, 1647,
	492, 1647,
	493, 1647,
	494, 1647,
	495, 1647,
	496, 1647,
	497, 1647,
	498, 1647,
	499, 1647,
	500, 1647,
	502, 1647,
	503, 1647,
	504, 1647,
	505, 1647,
	506, 1647,
	507, 1647,
	509, 1647,
	510, 1647,
	511, 1647,
	512, 1647,
	513, 1647,
	514, 1647,
	515, 1647,
	517, 1647,
	518, 1647,
	519, 1647,
	520, 1647,
	521, 1647,
	522, 1647,
	523, 1647,
	524, 1647,
	526, 1647,
	528, 1647,
	529, 1647,
	530, 1647,
	531, 1647,
	532, 1647,
	533, 1647,
	534, 1647,
	535, 1647,
	536, 1647,
	537, 1647,
	538, 1647,
	539, 1647,
	540, 1647,
	541, 1647,
	542, 1647,
	543, 1647,
	544, 1647,
	545, 1647,
	546, 1647,
	547, 1647,
	548, 1647,
	550, 1647,
	551, 1647,
	553, 1647,
	554, 1647,
	556, 1647,
	557, 1647,
	558, 1647,
	559, 1647,
	560, 1647,
	561, 1647,
	563, 1647,
	564, 1647,
	566, 1647,
	567, 1647,
	568, 1647,
	569, 1647,
	570, 1647,
	572, 1647,
	574, 1647,
	575, 1647,
	576, 1647,
	577, 1647,
	578, 1647,
	579, 1647,
	580, 1647,
	581, 1647,
	583, 1647,
	584, 1647,
	585, 1647,
	586, 1647,
	587, 1647,
	588, 1647,
	589, 1647,
	592, 1647,
	593, 1647,
	594, 1647,
	595, 1647,
	596, 1647,
	597, 1647,
	598, 1647,
	599, 1647,
	600, 1647,
	602, 1647,
	605, 1647,
	606, 1647,
	607, 1647,
	608, 1647,
	609, 1647,
	610, 1647,
	612, 1647,
	613, 1647,
	614, 1647,
	615, 1647,
	616, 1647,
	617, 1647,
	618, 1647,
	619, 1647,
	620, 1647,
	621, 1647,
	622, 1647,
	623, 1647,
	628, 1647,
	629, 1647,
	630, 1647,
	631, 1647,
	632, 1647,
	633, 1647,
	-2, 0,
	-1, 880,
	204, 2756,
	571, 2756,
	648, 2756,
	668, 2756,
	-2, 0,
	-1, 881,
	204, 2741,
	571, 2741,
	648, 2741,
	668, 2741,
	-2, 0,
	-1, 883,
	204, 3042,
	571, 3042,
	648, 3042,
	668, 3042,
	-2, 0,
	-1, 886,
	204, 2883,
	571, 2883,
	648, 2883,
	668, 2883,
	-2, 0,
	-1, 887,
	204, 3089,
	571, 3089,
	648, 3089,
	668, 3089,
	-2, 0,
	-1, 895,
	204, 2911,
	571, 2911,
	648, 2911,
	668, 2911,
	-2, 923,
	-1, 911,
	8, 1060,
	29, 1060,
	656, 1060,
	657, 1060,
	-2, 1065,
	-1, 915,
	1, 2815,
	669, 2815,
	672, 2815,
	-2, 1065,
	-1, 916,
	1, 2870,
	669, 2870,
	672, 2870,
	-2, 1065,
	-1, 919,
	1, 2916,
	669, 2916,
	672, 2916,
	-2, 1058,
	-1, 920,
	1, 2974,
	669, 2974,
	672, 2974,
	-2, 1059,
	-1, 921,
	1, 2820,
	669, 2820,
	672, 2820,
	-2, 1062,
	-1, 922,
	1, 2727,
	669, 2727,
	672, 2727,
	-2, 1063,
	-1, 965,
	668, 2684,
	671, 2684,
	-2, 1306,
	-1, 966,
	668, 2686,
	671, 2686,
	-2, 1307,
	-1, 967,
	668, 2685,
	671, 2685,
	-2, 1308,
	-1, 968,
	671, 2607,
	-2, 1309,
	-1, 995,
	197, 329,
	-2, 0,
	-1, 1018,
	46, 2656,
	-2, 0,
	-1, 1019,
	613, 1625,
	-2, 1391,
	-1, 1036,
	4, 2085,
	21, 2085,
	22, 2085,
	23, 2085,
	24, 2085,
	25, 2085,
	26, 2085,
	27, 2085,
	28, 2085,
	30, 2085,
	31, 2085,
	37, 2085,
	41, 2085,
	43, 2085,
	44, 2085,
	45, 2085,
	47, 2085,
	48, 2085,
	49, 2085,
	50, 2085,
	51, 2085,
	52, 2085,
	53, 2085,
	54, 2085,
	55, 2085,
	57, 2085,
	58, 2085,
	59, 2085,
	60, 2085,
	62, 2085,
	63, 2085,
	64, 2085,
	65, 2085,
	66, 2085,
	67, 2085,
	68, 2085,
	69, 2085,
	73, 2085,
	74, 2085,
	75, 2085,
	76, 2085,
	78, 2085,
	79, 2085,
	80, 2085,
	84, 2085,
	85, 2085,
	86, 2085,
	87, 2085,
	88, 2085,
	89, 2085,
	90, 2085,
	91, 2085,
	94, 2085,
	95, 2085,
	96, 2085,
	97, 2085,
	98, 2085,
	99, 2085,
	101, 2085,
	103, 2085,
	104, 2085,
	105, 2085,
	106, 2085,
	107, 2085,
	108, 2085,
	109, 2085,
	111, 2085,
	112, 2085,
	113, 2085,
	115, 2085,
	116, 2085,
	117, 2085,
	125, 2085,
	126, 2085,
	127, 2085,
	128, 2085,
	129, 2085,
	131, 2085,
	132, 2085,
	133, 2085,
	134, 2085,
	136, 2085,
	137, 2085,
	138, 2085,
	139, 2085,
	141, 2085,
	142, 2085,
	143, 2085,
	144, 2085,
	146, 2085,
	147, 2085,
	148, 2085,
	151, 2085,
	152, 2085,
	153, 2085,
	155, 2085,
	156, 2085,
	157, 2085,
	159, 2085,
	160, 2085,
	161, 2085,
	163, 2085,
	164, 2085,
	165, 2085,
	166, 2085,
	167, 2085,
	168, 2085,
	169, 2085,
	170, 2085,
	171, 2085,
	172, 2085,
	173, 2085,
	174, 2085,
	175, 2085,
	176, 2085,
	177, 2085,
	178, 2085,
	179, 2085,
	180, 2085,
	181, 2085,
	183, 2085,
	189, 2085,
	190, 2085,
	191, 2085,
	192, 2085,
	196, 2085,
	198, 2085,
	199, 2085,
	200, 2085,
	202, 2085,
	203, 2085,
	206, 2085,
	207, 2085,
	208, 2085,
	209, 2085,
	210, 2085,
	211, 2085,
	212, 2085,
	213, 2085,
	214, 2085,
	215, 2085,
	216, 2085,
	217, 2085,
	218, 2085,
	219, 2085,
	221, 2085,
	222, 2085,
	224, 2085,
	225, 2085,
	227, 2085,
	228, 2085,
	229, 2085,
	230, 2085,
	231, 2085,
	232, 2085,
	233, 2085,
	234, 2085,
	235, 2085,
	236, 2085,
	237, 2085,
	239, 2085,
	240, 2085,
	241, 2085,
	243, 2085,
	244, 2085,
	245, 2085,
	246, 2085,
	247, 2085,
	251, 2085,
	252, 2085,
	253, 2085,
	254, 2085,
	256, 2085,
	257, 2085,
	258, 2085,
	260, 2085,
	261, 2085,
	262, 2085,
	263, 2085,
	264, 2085,
	265, 2085,
	267, 2085,
	269, 2085,
	270, 2085,
	271, 2085,
	273, 2085,
	275, 2085,
	276, 2085,
	277, 2085,
	279, 2085,
	283, 2085,
	284, 2085,
	285, 2085,
	286, 2085,
	287, 2085,
	288, 2085,
	289, 2085,
	291, 2085,
	292, 2085,
	293, 2085,
	295, 2085,
	296, 2085,
	297, 2085,
	299, 2085,
	300, 2085,
	303, 2085,
	304, 2085,
	305, 2085,
	306, 2085,
	307, 2085,
	308, 2085,
	309, 2085,
	312, 2085,
	313, 2085,
	314, 2085,
	315, 2085,
	317, 2085,
	318, 2085,
	319, 2085,
	320, 2085,
	321, 2085,
	322, 2085,
	323, 2085,
	324, 2085,
	325, 2085,
	326, 2085,
	327, 2085,
	328, 2085,
	329, 2085,
	330, 2085,
	331, 2085,
	332, 2085,
	333, 2085,
	334, 2085,
	335, 2085,
	336, 2085,
	337, 2085,
	338, 2085,
	339, 2085,
	341, 2085,
	343, 2085,
	344, 2085,
	345, 2085,
	346, 2085,
	347, 2085,
	348, 2085,
	349, 2085,
	350, 2085,
	351, 2085,
	352, 2085,
	353, 2085,
	354, 2085,
	355, 2085,
	356, 2085,
	357, 2085,
	358, 2085,
	359, 2085,
	361, 2085,
	362, 2085,
	364, 2085,
	365, 2085,
	367, 2085,
	368, 2085,
	369, 2085,
	370, 2085,
	372, 2085,
	373, 2085,
	374, 2085,
	375, 2085,
	376, 2085,
	379, 2085,
	381, 2085,
	384, 2085,
	385, 2085,
	386, 2085,
	389, 2085,
	390, 2085,
	391, 2085,
	393, 2085,
	395, 2085,
	396, 2085,
	397, 2085,
	398, 2085,
	399, 2085,
	400, 2085,
	401, 2085,
	402, 2085,
	403, 2085,
	404, 2085,
	405, 2085,
	406, 2085,
	407, 2085,
	408, 2085,
	410, 2085,
	411, 2085,
	412, 2085,
	413, 2085,
	414, 2085,
	415, 2085,
	416, 2085,
	417, 2085,
	418, 2085,
	419, 2085,
	420, 2085,
	421, 2085,
	422, 2085,
	423, 2085,
	424, 2085,
	426, 2085,
	427, 2085,
	428, 2085,
	430, 2085,
	431, 2085,
	432, 2085,
	433, 2085,
	434, 2085,
	435, 2085,
	436, 2085,
	437, 2085,
	438, 2085,
	439, 2085,
	440, 2085,
	441, 2085,
	442, 2085,
	443, 2085,
	445, 2085,
	447, 2085,
	448, 2085,
	449, 2085,
	455, 2085,
	456, 2085,
	457, 2085,
	459, 2085,
	460, 2085,
	461, 2085,
	462, 2085,
	463, 2085,
	464, 2085,
	465, 2085,
	466, 2085,
	467, 2085,
	468, 2085,
	469, 2085,
	471, 2085,
	472, 2085,
	473, 2085,
	474, 2085,
	475, 2085,
	477, 2085,
	478, 2085,
	479, 2085,
	480, 2085,
	481, 2085,
	482, 2085,
	483, 2085,
	485, 2085,
	486, 2085,
	487, 2085,
	488, 2085,
	489, 2085,
	490, 2085,
	491, 2085,
	492, 2085,
	493, 2085,
	494, 2085,
	495, 2085,
	496, 2085,
	497, 2085,
	498, 2085,
	499, 2085,
	500, 2085,
	502, 2085,
	503, 2085,
	504, 2085,
	505, 2085,
	506, 2085,
	507, 2085,
	509, 2085,
	510, 2085,
	511, 2085,
	512, 2085,
	513, 2085,
	514, 2085,
	515, 2085,
	517, 2085,
	518, 2085,
	519, 2085,
	520, 2085,
	521, 2085,
	522, 2085,
	523, 2085,
	524, 2085,
	526, 2085,
	528, 2085,
	529, 2085,
	530, 2085,
	531, 2085,
	532, 2085,
	533, 2085,
	534, 2085,
	535, 2085,
	536, 2085,
	537, 2085,
	538, 2085,
	539, 2085,
	540, 2085,
	541, 2085,
	542, 2085,
	543, 2085,
	544, 2085,
	545, 2085,
	546, 2085,
	547, 2085,
	548, 2085,
	550, 2085,
	551, 2085,
	553, 2085,
	554, 2085,
	556, 2085,
	557, 2085,
	558, 2085,
	559, 2085,
	560, 2085,
	561, 2085,
	563, 2085,
	564, 2085,
	566, 2085,
	567, 2085,
	568, 2085,
	569, 2085,
	570, 2085,
	572, 2085,
	574, 2085,
	575, 2085,
	576, 2085,
	577, 2085,
	578, 2085,
	579, 2085,
	580, 2085,
	581, 2085,
	583, 2085,
	584, 2085,
	585, 2085,
	586, 2085,
	587, 2085,
	588, 2085,
	589, 2085,
	592, 2085,
	593, 2085,
	594, 2085,
	595, 2085,
	596, 2085,
	597, 2085,
	598, 2085,
	599, 2085,
	600, 2085,
	602, 2085,
	605, 2085,
	606, 2085,
	607, 2085,
	608, 2085,
	609, 2085,
	610, 2085,
	612, 2085,
	613, 2085,
	614, 2085,
	615, 2085,
	616, 2085,
	617, 2085,
	618, 2085,
	619, 2085,
	620, 2085,
	621, 2085,
	622, 2085,
	623, 2085,
	628, 2085,
	629, 2085,
	630, 2085,
	631, 2085,
	632, 2085,
	633, 2085,
	-2, 0,
	-1, 1047,
	288, 586,
	-2, 0,
	-1, 1127,
	204, 1105,
	-2, 0,
	-1, 1128,
	432, 1160,
	507, 1160,
	554, 1160,
	576, 1160,
	-2, 0,
	-1, 1129,
	432, 1159,
	507, 1159,
	554, 1159,
	576, 1159,
	-2, 1078,
	-1, 1133,
	1, 1216,
	665, 1216,
	667, 1216,
	669, 1216,
	672, 1216,
	-2, 0,
	-1, 1135,
	1, 1133,
	665, 1133,
	667, 1133,
	669, 1133,
	672, 1133,
	-2, 0,
	-1, 1136,
	1, 1137,
	665, 1137,
	667, 1137,
	669, 1137,
	672, 1137,
	-2, 0,
	-1, 1137,
	1, 1295,
	197, 1295,
	665, 1295,
	667, 1295,
	669, 1295,
	672, 1295,
	-2, 0,
	-1, 1146,
	1, 1165,
	665, 1165,
	667, 1165,
	669, 1165,
	672, 1165,
	-2, 0,
	-1, 1153,
	1, 1216,
	665, 1216,
	667, 1216,
	669, 1216,
	672, 1216,
	-2, 0,
	-1, 1154,
	1, 1209,
	665, 1209,
	667, 1209,
	669, 1209,
	672, 1209,
	-2, 0,
	-1, 1155,
	1, 1218,
	665, 1218,
	667, 1218,
	669, 1218,
	672, 1218,
	-2, 0,
	-1, 1156,
	1, 1221,
	665, 1221,
	667, 1221,
	669, 1221,
	672, 1221,
	-2, 0,
	-1, 1164,
	1, 1258,
	665, 1258,
	667, 1258,
	669, 1258,
	672, 1258,
	-2, 0,
	-1, 1165,
	1, 1260,
	665, 1260,
	667, 1260,
	669, 1260,
	672, 1260,
	-2, 0,
	-1, 1170,
	1, 1288,
	665, 1288,
	667, 1288,
	669, 1288,
	672, 1288,
	-2, 0,
	-1, 1224,
	184, 1941,
	197, 1941,
	302, 1941,
	377, 1941,
	-2, 1877,
	-1, 1241,
	184, 1940,
	197, 1940,
	302, 1940,
	377, 1940,
	-2, 1874,
	-1, 1270,
	668, 2683,
	-2, 931,
	-1, 1277,
	666, 2673,
	-2, 3305,
	-1, 1300,
	5, 2675,
	666, 2672,
	-2, 2663,
	-1, 1308,
	5, 2696,
	666, 2693,
	-2, 2684,
	-1, 1309,
	5, 2697,
	666, 2694,
	-2, 2685,
	-1, 1319,
	668, 2681,
	-2, 2662,
	-1, 1320,
	666, 3204,
	-2, 2682,
	-1, 1343,
	5, 2698,
	38, 2698,
	135, 2698,
	648, 2698,
	664, 2698,
	667, 2698,
	668, 2698,
	671, 2698,
	-2, 3203,
	-1, 1344,
	5, 2160,
	-2, 3173,
	-1, 1345,
	5, 2161,
	-2, 3174,
	-1, 1346,
	5, 2162,
	-2, 3189,
	-1, 1347,
	5, 2163,
	-2, 3151,
	-1, 1348,
	5, 2164,
	-2, 3186,
	-1, 1349,
	5, 2172,
	-2, 3164,
	-1, 1350,
	5, 2159,
	-2, 3160,
	-1, 1351,
	5, 2159,
	-2, 3159,
	-1, 1352,
	5, 2159,
	-2, 3179,
	-1, 1353,
	5, 2170,
	-2, 3153,
	-1, 1354,
	5, 2175,
	666, 2187,
	-2, 3152,
	-1, 1355,
	5, 2177,
	-2, 3199,
	-1, 1358,
	5, 2199,
	-2, 3192,
	-1, 1359,
	5, 2191,
	-2, 3193,
	-1, 1360,
	5, 2199,
	-2, 3194,
	-1, 1361,
	5, 2195,
	-2, 3195,
	-1, 1362,
	5, 2143,
	-2, 3165,
	-1, 1363,
	5, 2144,
	-2, 3166,
	-1, 1364,
	5, 2145,
	-2, 3154,
	-1, 1392,
	5, 2182,
	666, 2182,
	-2, 3200,
	-1, 1393,
	5, 2183,
	666, 2183,
	-2, 3190,
	-1, 1394,
	5, 2184,
	614, 2184,
	666, 2184,
	-2, 3155,
	-1, 1395,
	5, 2185,
	614, 2185,
	666, 2185,
	-2, 3156,
	-1, 1433,
	666, 2693,
	-2, 2684,
	-1, 1434,
	666, 2694,
	-2, 2685,
	-1, 1542,
	204, 3089,
	571, 3089,
	648, 3089,
	668, 3089,
	-2, 0,
	-1, 1547,
	1, 907,
	669, 907,
	672, 907,
	-2, 1783,
	-1, 1594,
	1, 1778,
	669, 1778,
	672, 1778,
	-2, 1783,
	-1, 1696,
	397, 2657,
	459, 2657,
	509, 2657,
	658, 2657,
	-2, 2645,
	-1, 1704,
	204, 170,
	295, 170,
	361, 170,
	623, 170,
	-2, 3084,
	-1, 1705,
	204, 171,
	295, 171,
	361, 171,
	623, 171,
	-2, 2804,
	-1, 1706,
	204, 172,
	295, 172,
	361, 172,
	623, 172,
	-2, 2997,
	-1, 1712,
	670, 2657,
	-2, 2659,
	-1, 1715,
	25, 3021,
	242, 3021,
	-2, 0,
	-1, 1736,
	1, 1622,
	464, 1576,
	509, 1576,
	640, 1576,
	645, 1576,
	665, 1622,
	667, 1622,
	669, 1622,
	672, 1622,
	-2, 1926,
	-1, 1742,
	220, 1722,
	242, 1722,
	475, 1722,
	-2, 0,
	-1, 1812,
	46, 2655,
	-2, 1353,
	-1, 1819,
	1, 1622,
	665, 1622,
	667, 1622,
	669, 1622,
	672, 1622,
	-2, 1926,
	-1, 1822,
	441, 1390,
	613, 1390,
	-2, 485,
	-1, 1828,
	4, 1647,
	21, 1647,
	22, 1647,
	23, 1647,
	24, 1647,
	25, 1647,
	26, 1647,
	27, 1647,
	28, 1647,
	30, 1647,
	31, 1647,
	37, 1647,
	41, 1647,
	43, 1647,
	44, 1647,
	45, 1647,
	47, 1647,
	48, 1647,
	49, 1647,
	50, 1647,
	51, 1647,
	52, 1647,
	53, 1647,
	54, 1647,
	55, 1647,
	57, 1647,
	58, 1647,
	59, 1647,
	60, 1647,
	62, 1647,
	63, 1647,
	64, 1647,
	65, 1647,
	66, 1647,
	67, 1647,
	68, 1647,
	69, 1647,
	73, 1647,
	74, 1647,
	75, 1647,
	76, 1647,
	78, 1647,
	79, 1647,
	80, 1647,
	84, 1647,
	85, 1647,
	86, 1647,
	87, 1647,
	88, 1647,
	89, 1647,
	90, 1647,
	91, 1647,
	94, 1647,
	95, 1647,
	96, 1647,
	97, 1647,
	98, 1647,
	99, 1647,
	101, 1647,
	103, 1647,
	104, 1647,
	105, 1647,
	106, 1647,
	107, 1647,
	108, 1647,
	109, 1647,
	111, 1647,
	112, 1647,
	113, 1647,
	115, 1647,
	116, 1647,
	117, 1647,
	125, 1647,
	126, 1647,
	127, 1647,
	128, 1647,
	129, 1647,
	131, 1647,
	132, 1647,
	133, 1647,
	134, 1647,
	136, 1647,
	137, 1647,
	138, 1647,
	139, 1647,
	141, 1647,
	142, 1647,
	143, 1647,
	144, 1647,
	146, 1647,
	147, 1647,
	148, 1647,
	151, 1647,
	152, 1647,
	153, 1647,
	155, 1647,
	156, 1647,
	157, 1647,
	159, 1647,
	160, 1647,
	161, 1647,
	163, 1647,
	164, 1647,
	165, 1647,
	166, 1647,
	167, 1647,
	168, 1647,
	169, 1647,
	170, 1647,
	171, 1647,
	172, 1647,
	173, 1647,
	174, 1647,
	175, 1647,
	176, 1647,
	177, 1647,
	178, 1647,
	179, 1647,
	180, 1647,
	181, 1647,
	189, 1647,
	190, 1647,
	191, 1647,
	192, 1647,
	196, 1647,
	198, 1647,
	199, 1647,
	200, 1647,
	202, 1647,
	203, 1647,
	206, 1647,
	207, 1647,
	208, 1647,
	209, 1647,
	210, 1647,
	211, 1647,
	212, 1647,
	213, 1647,
	214, 1647,
	215, 1647,
	216, 1647,
	217, 1647,
	218, 1647,
	219, 1647,
	221, 1647,
	222, 1647,
	224, 1647,
	225, 1647,
	227, 1647,
	228, 1647,
	229, 1647,
	230, 1647,
	231, 1647,
	232, 1647,
	233, 1647,
	234, 1647,
	235, 1647,
	236, 1647,
	237, 1647,
	239, 1647,
	240, 1647,
	241, 1647,
	243, 1647,
	244, 1647,
	245, 1647,
	246, 1647,
	247, 1647,
	251, 1647,
	252, 1647,
	253, 1647,
	254, 1647,
	260, 1647,
	261, 1647,
	262, 1647,
	263, 1647,
	264, 1647,
	265, 1647,
	267, 1647,
	269, 1647,
	270, 1647,
	271, 1647,
	273, 1647,
	275, 1647,
	276, 1647,
	277, 1647,
	279, 1647,
	283, 1647,
	284, 1647,
	285, 1647,
	286, 1647,
	287, 1647,
	288, 1647,
	289, 1647,
	291, 1647,
	292, 1647,
	293, 1647,
	295, 1647,
	296, 1647,
	297, 1647,
	299, 1647,
	300, 1647,
	303, 1647,
	304, 1647,
	305, 1647,
	306, 1647,
	307, 1647,
	308, 1647,
	309, 1647,
	312, 1647,
	313, 1647,
	314, 1647,
	315, 1647,
	317, 1647,
	318, 1647,
	319, 1647,
	320, 1647,
	321, 1647,
	322, 1647,
	323, 1647,
	324, 1647,
	325, 1647,
	326, 1647,
	327, 1647,
	328, 1647,
	329, 1647,
	330, 1647,
	331, 1647,
	332, 1647,
	333, 1647,
	334, 1647,
	335, 1647,
	336, 1647,
	337, 1647,
	338, 1647,
	339, 1647,
	341, 1647,
	343, 1647,
	344, 1647,
	345, 1647,
	346, 1647,
	347, 1647,
	348, 1647,
	349, 1647,
	350, 1647,
	351, 1647,
	352, 1647,
	353, 1647,
	354, 1647,
	355, 1647,
	356, 1647,
	357, 1647,
	358, 1647,
	359, 1647,
	361, 1647,
	362, 1647,
	364, 1647,
	367, 1647,
	368, 1647,
	369, 1647,
	370, 1647,
	372, 1647,
	373, 1647,
	374, 1647,
	375, 1647,
	376, 1647,
	379, 1647,
	381, 1647,
	382, 1647,
	384, 1647,
	385, 1647,
	386, 1647,
	389, 1647,
	390, 1647,
	391, 1647,
	393, 1647,
	395, 1647,
	396, 1647,
	397, 1647,
	398, 1647,
	399, 1647,
	400, 1647,
	401, 1647,
	402, 1647,
	403, 1647,
	404, 1647,
	405, 1647,
	406, 1647,
	407, 1647,
	408, 1647,
	410, 1647,
	411, 1647,
	412, 1647,
	413, 1647,
	414, 1647,
	415, 1647,
	416, 1647,
	417, 1647,
	418, 1647,
	419, 1647,
	420, 1647,
	421, 1647,
	422, 1647,
	423, 1647,
	424, 1647,
	426, 1647,
	427, 1647,
	428, 1647,
	430, 1647,
	431, 1647,
	432, 1647,
	433, 1647,
	434, 1647,
	435, 1647,
	436, 1647,
	437, 1647,
	438, 1647,
	439, 1647,
	440, 1647,
	441, 1647,
	442, 1647,
	443, 1647,
	445, 1647,
	447, 1647,
	448, 1647,
	449, 1647,
	455, 1647,
	456, 1647,
	457, 1647,
	459, 1647,
	460, 1647,
	461, 1647,
	462, 1647,
	463, 1647,
	464, 1647,
	465, 1647,
	466, 1647,
	467, 1647,
	468, 1647,
	469, 1647,
	471, 1647,
	472, 1647,
	473, 1647,
	474, 1647,
	475, 1647,
	477, 1647,
	478, 1647,
	479, 1647,
	480, 1647,
	481, 1647,
	482, 1647,
	483, 1647,
	485, 1647,
	486, 1647,
	487, 1647,
	488, 1647,
	489, 1647,
	490, 1647,
	491, 1647,
	492, 1647,
	493, 1647,
	494, 1647,
	495, 1647,
	496, 1647,
	497, 1647,
	498, 1647,
	499, 1647,
	500, 1647,
	502, 1647,
	503, 1647,
	504, 1647,
	505, 1647,
	506, 1647,
	507, 1647,
	509, 1647,
	510, 1647,
	511, 1647,
	512, 1647,
	513, 1647,
	514, 1647,
	515, 1647,
	517, 1647,
	518, 1647,
	519, 1647,
	520, 1647,
	521, 1647,
	522, 1647,
	523, 1647,
	524, 1647,
	526, 1647,
	528, 1647,
	529, 1647,
	530, 1647,
	531, 1647,
	532, 1647,
	533, 1647,
	534, 1647,
	535, 1647,
	536, 1647,
	537, 1647,
	538, 1647,
	539, 1647,
	540, 1647,
	541, 1647,
	542, 1647,
	543, 1647,
	544, 1647,
	545, 1647,
	546, 1647,
	547, 1647,
	548, 1647,
	550, 1647,
	551, 1647,
	553, 1647,
	554, 1647,
	556, 1647,
	557, 1647,
	558, 1647,
	559, 1647,
	560, 1647,
	561, 1647,
	563, 1647,
	564, 1647,
	566, 1647,
	567, 1647,
	568, 1647,
	569, 1647,
	570, 1647,
	572, 1647,
	574, 1647,
	575, 1647,
	576, 1647,
	577, 1647,
	578, 1647,
	579, 1647,
	580, 1647,
	581, 1647,
	583, 1647,
	584, 1647,
	585, 1647,
	586, 1647,
	587, 1647,
	588, 1647,
	589, 1647,
	592, 1647,
	593, 1647,
	594, 1647,
	595, 1647,
	596, 1647,
	597, 1647,
	598, 1647,
	599, 1647,
	600, 1647,
	602, 1647,
	605, 1647,
	606, 1647,
	607, 1647,
	608, 1647,
	609, 1647,
	610, 1647,
	612, 1647,
	613, 1647,
	614, 1647,
	615, 1647,
	616, 1647,
	617, 1647,
	618, 1647,
	619, 1647,
	620, 1647,
	621, 1647,
	622, 1647,
	623, 1647,
	628, 1647,
	629, 1647,
	630, 1647,
	631, 1647,
	632, 1647,
	633, 1647,
	-2, 0,
	-1, 1851,
	1, 733,
	665, 733,
	667, 733,
	669, 733,
	672, 733,
	-2, 1897,
	-1, 1854,
	4, 3198,
	11, 3198,
	12, 3198,
	14, 3198,
	15, 3198,
	16, 3198,
	17, 3198,
	18, 3198,
	19, 3198,
	21, 3198,
	22, 3198,
	23, 3198,
	24, 3198,
	25, 3198,
	26, 3198,
	27, 3198,
	28, 3198,
	30, 3198,
	31, 3198,
	34, 3198,
	35, 3198,
	37, 3198,
	39, 3198,
	41, 3198,
	43, 3198,
	44, 3198,
	45, 3198,
	47, 3198,
	48, 3198,
	49, 3198,
	50, 3198,
	51, 3198,
	52, 3198,
	53, 3198,
	54, 3198,
	55, 3198,
	57, 3198,
	58, 3198,
	59, 3198,
	60, 3198,
	62, 3198,
	63, 3198,
	64, 3198,
	65, 3198,
	66, 3198,
	67, 3198,
	68, 3198,
	69, 3198,
	72, 3198,
	73, 3198,
	74, 3198,
	75, 3198,
	76, 3198,
	78, 3198,
	79, 3198,
	80, 3198,
	81, 3198,
	84, 3198,
	85, 3198,
	86, 3198,
	87, 3198,
	88, 3198,
	89, 3198,
	90, 3198,
	91, 3198,
	92, 3198,
	94, 3198,
	95, 3198,
	96, 3198,
	97, 3198,
	98, 3198,
	99, 3198,
	101, 3198,
	102, 3198,
	103, 3198,
	104, 3198,
	105, 3198,
	106, 3198,
	107, 3198,
	108, 3198,
	109, 3198,
	111, 3198,
	112, 3198,
	113, 3198,
	114, 3198,
	115, 3198,
	116, 3198,
	117, 3198,
	125, 3198,
	126, 3198,
	127, 3198,
	128, 3198,
	129, 3198,
	131, 3198,
	132, 3198,
	133, 3198,
	134, 3198,
	136, 3198,
	137, 3198,
	138, 3198,
	139, 3198,
	141, 3198,
	142, 3198,
	143, 3198,
	144, 3198,
	146, 3198,
	147, 3198,
	148, 3198,
	151, 3198,
	152, 3198,
	153, 3198,
	155, 3198,
	156, 3198,
	157, 3198,
	159, 3198,
	160, 3198,
	161, 3198,
	163, 3198,
	164, 3198,
	165, 3198,
	166, 3198,
	167, 3198,
	168, 3198,
	169, 3198,
	170, 3198,
	171, 3198,
	172, 3198,
	173, 3198,
	174, 3198,
	175, 3198,
	176, 3198,
	177, 3198,
	178, 3198,
	179, 3198,
	180, 3198,
	181, 3198,
	185, 3198,
	186, 3198,
	187, 3198,
	188, 3198,
	189, 3198,
	190, 3198,
	191, 3198,
	192, 3198,
	195, 3198,
	196, 3198,
	198, 3198,
	199, 3198,
	200, 3198,
	202, 3198,
	203, 3198,
	205, 3198,
	206, 3198,
	207, 3198,
	208, 3198,
	209, 3198,
	210, 3198,
	211, 3198,
	212, 3198,
	213, 3198,
	214, 3198,
	215, 3198,
	216, 3198,
	217, 3198,
	218, 3198,
	219, 3198,
	221, 3198,
	222, 3198,
	224, 3198,
	225, 3198,
	227, 3198,
	228, 3198,
	229, 3198,
	230, 3198,
	231, 3198,
	232, 3198,
	233, 3198,
	234, 3198,
	235, 3198,
	236, 3198,
	237, 3198,
	238, 3198,
	239, 3198,
	240, 3198,
	241, 3198,
	242, 3198,
	243, 3198,
	244, 3198,
	245, 3198,
	246, 3198,
	247, 3198,
	249, 3198,
	250, 3198,
	251, 3198,
	252, 3198,
	253, 3198,
	254, 3198,
	259, 3198,
	260, 3198,
	261, 3198,
	262, 3198,
	263, 3198,
	264, 3198,
	265, 3198,
	267, 3198,
	269, 3198,
	270, 3198,
	271, 3198,
	272, 3198,
	273, 3198,
	274, 3198,
	275, 3198,
	276, 3198,
	277, 3198,
	278, 3198,
	279, 3198,
	281, 3198,
	282, 3198,
	283, 3198,
	284, 3198,
	285, 3198,
	286, 3198,
	287, 3198,
	288, 3198,
	289, 3198,
	291, 3198,
	292, 3198,
	293, 3198,
	295, 3198,
	296, 3198,
	297, 3198,
	298, 3198,
	299, 3198,
	300, 3198,
	301, 3198,
	303, 3198,
	304, 3198,
	305, 3198,
	306, 3198,
	307, 3198,
	308, 3198,
	309, 3198,
	312, 3198,
	313, 3198,
	314, 3198,
	315, 3198,
	316, 3198,
	317, 3198,
	318, 3198,
	319, 3198,
	320, 3198,
	321, 3198,
	322, 3198,
	323, 3198,
	324, 3198,
	325, 3198,
	326, 3198,
	327, 3198,
	328, 3198,
	329, 3198,
	330, 3198,
	331, 3198,
	332, 3198,
	333, 3198,
	334, 3198,
	335, 3198,
	336, 3198,
	337, 3198,
	338, 3198,
	339, 3198,
	341, 3198,
	342, 3198,
	343, 3198,
	344, 3198,
	345, 3198,
	346, 3198,
	347, 3198,
	348, 3198,
	349, 3198,
	350, 3198,
	351, 3198,
	352, 3198,
	353, 3198,
	354, 3198,
	355, 3198,
	356, 3198,
	357, 3198,
	358, 3198,
	359, 3198,
	361, 3198,
	362, 3198,
	364, 3198,
	366, 3198,
	367, 3198,
	368, 3198,
	369, 3198,
	370, 3198,
	372, 3198,
	373, 3198,
	374, 3198,
	375, 3198,
	376, 3198,
	379, 3198,
	381, 3198,
	384, 3198,
	385, 3198,
	386, 3198,
	387, 3198,
	389, 3198,
	390, 3198,
	391, 3198,
	393, 3198,
	395, 3198,
	396, 3198,
	397, 3198,
	398, 3198,
	399, 3198,
	400, 3198,
	401, 3198,
	402, 3198,
	403, 3198,
	404, 3198,
	405, 3198,
	406, 3198,
	407, 3198,
	408, 3198,
	410, 3198,
	411, 3198,
	412, 3198,
	413, 3198,
	414, 3198,
	415, 3198,
	416, 3198,
	417, 3198,
	418, 3198,
	419, 3198,
	420, 3198,
	421, 3198,
	422, 3198,
	423, 3198,
	424, 3198,
	426, 3198,
	427, 3198,
	428, 3198,
	430, 3198,
	431, 3198,
	432, 3198,
	433, 3198,
	434, 3198,
	435, 3198,
	436, 3198,
	437, 3198,
	438, 3198,
	439, 3198,
	440, 3198,
	441, 3198,
	442, 3198,
	443, 3198,
	445, 3198,
	447, 3198,
	448, 3198,
	449, 3198,
	455, 3198,
	456, 3198,
	457, 3198,
	458, 3198,
	459, 3198,
	460, 3198,
	461, 3198,
	462, 3198,
	463, 3198,
	464, 3198,
	465, 3198,
	466, 3198,
	467, 3198,
	468, 3198,
	469, 3198,
	471, 3198,
	472, 3198,
	473, 3198,
	474, 3198,
	475, 3198,
	476, 3198,
	477, 3198,
	478, 3198,
	479, 3198,
	480, 3198,
	481, 3198,
	482, 3198,
	483, 3198,
	484, 3198,
	485, 3198,
	486, 3198,
	487, 3198,
	488, 3198,
	489, 3198,
	490, 3198,
	491, 3198,
	492, 3198,
	493, 3198,
	494, 3198,
	495, 3198,
	496, 3198,
	497, 3198,
	498, 3198,
	499, 3198,
	500, 3198,
	502, 3198,
	503, 3198,
	504, 3198,
	505, 3198,
	506, 3198,
	507, 3198,
	509, 3198,
	510, 3198,
	511, 3198,
	512, 3198,
	513, 3198,
	514, 3198,
	515, 3198,
	516, 3198,
	517, 3198,
	518, 3198,
	519, 3198,
	520, 3198,
	521, 3198,
	522, 3198,
	523, 3198,
	524, 3198,
	526, 3198,
	528, 3198,
	529, 3198,
	530, 3198,
	531, 3198,
	532, 3198,
	533, 3198,
	534, 3198,
	535, 3198,
	536, 3198,
	537, 3198,
	538, 3198,
	539, 3198,
	540, 3198,
	541, 3198,
	542, 3198,
	543, 3198,
	544, 3198,
	545, 3198,
	546, 3198,
	547, 3198,
	548, 3198,
	550, 3198,
	551, 3198,
	552, 3198,
	553, 3198,
	554, 3198,
	556, 3198,
	557, 3198,
	558, 3198,
	559, 3198,
	560, 3198,
	561, 3198,
	563, 3198,
	564, 3198,
	566, 3198,
	567, 3198,
	568, 3198,
	569, 3198,
	570, 3198,
	572, 3198,
	574, 3198,
	575, 3198,
	576, 3198,
	577, 3198,
	578, 3198,
	579, 3198,
	580, 3198,
	581, 3198,
	583, 3198,
	584, 3198,
	585, 3198,
	586, 3198,
	587, 3198,
	588, 3198,
	589, 3198,
	592, 3198,
	593, 3198,
	594, 3198,
	595, 3198,
	596, 3198,
	597, 3198,
	598, 3198,
	599, 3198,
	600, 3198,
	602, 3198,
	605, 3198,
	606, 3198,
	607, 3198,
	608, 3198,
	609, 3198,
	610, 3198,
	612, 3198,
	613, 3198,
	614, 3198,
	615, 3198,
	616, 3198,
	617, 3198,
	618, 3198,
	619, 3198,
	620, 3198,
	621, 3198,
	622, 3198,
	623, 3198,
	628, 3198,
	629, 3198,
	630, 3198,
	631, 3198,
	632, 3198,
	633, 3198,
	634, 3198,
	636, 3198,
	646, 3198,
	647, 3198,
	648, 3198,
	649, 3198,
	650, 3198,
	651, 3198,
	653, 3198,
	654, 3198,
	655, 3198,
	656, 3198,
	657, 3198,
	658, 3198,
	659, 3198,
	660, 3198,
	661, 3198,
	664, 3198,
	667, 3198,
	668, 3198,
	670, 3198,
	671, 3198,
	-2, 0,
	-1, 1859,
	204, 3042,
	571, 3042,
	648, 3042,
	668, 3042,
	-2, 0,
	-1, 1907,
	204, 1106,
	-2, 3032,
	-1, 1908,
	204, 1107,
	-2, 2813,
	-1, 1909,
	204, 1108,
	-2, 2983,
	-1, 1910,
	204, 1109,
	-2, 3112,
	-1, 1915,
	432, 1160,
	507, 1160,
	554, 1160,
	576, 1160,
	-2, 0,
	-1, 1926,
	1, 1722,
	242, 1722,
	665, 1722,
	667, 1722,
	669, 1722,
	672, 1722,
	-2, 0,
	-1, 1944,
	1, 1155,
	665, 1155,
	667, 1155,
	669, 1155,
	672, 1155,
	-2, 0,
	-1, 1945,
	1, 1199,
	665, 1199,
	667, 1199,
	669, 1199,
	672, 1199,
	-2, 0,
	-1, 1946,
	1, 1211,
	665, 1211,
	667, 1211,
	669, 1211,
	672, 1211,
	-2, 0,
	-1, 1949,
	1, 1164,
	665, 1164,
	667, 1164,
	669, 1164,
	672, 1164,
	-2, 0,
	-1, 1951,
	1, 1170,
	665, 1170,
	667, 1170,
	669, 1170,
	672, 1170,
	-2, 0,
	-1, 1954,
	1, 1166,
	665, 1166,
	667, 1166,
	669, 1166,
	672, 1166,
	-2, 0,
	-1, 1959,
	1, 1180,
	665, 1180,
	667, 1180,
	669, 1180,
	672, 1180,
	-2, 0,
	-1, 1998,
	1, 3021,
	665, 3021,
	667, 3021,
	668, 3021,
	669, 3021,
	672, 3021,
	-2, 0,
	-1, 2003,
	1, 1269,
	665, 1269,
	667, 1269,
	669, 1269,
	672, 1269,
	-2, 0,
	-1, 2023,
	184, 1940,
	197, 1940,
	302, 1940,
	377, 1940,
	-2, 1878,
	-1, 2125,
	162, 1899,
	184, 1899,
	197, 1899,
	266, 1899,
	302, 1899,
	377, 1899,
	388, 1899,
	590, 1899,
	-2, 2364,
	-1, 2172,
	666, 2186,
	-2, 2176,
	-1, 2189,
	667, 2539,
	-2, 0,
	-1, 2226,
	162, 1899,
	184, 1899,
	197, 1899,
	266, 1899,
	302, 1899,
	377, 1899,
	388, 1899,
	590, 1899,
	-2, 2040,
	-1, 2265,
	668, 2684,
	671, 2684,
	-2, 1296,
	-1, 2266,
	668, 2686,
	671, 2686,
	-2, 1297,
	-1, 2267,
	668, 2685,
	671, 2685,
	-2, 1298,
	-1, 2268,
	671, 2607,
	-2, 1299,
	-1, 2304,
	666, 2187,
	-2, 2175,
	-1, 2321,
	204, 3039,
	668, 3039,
	671, 3039,
	-2, 0,
	-1, 2372,
	1, 909,
	669, 909,
	672, 909,
	-2, 1783,
	-1, 2575,
	242, 323,
	-2, 2692,
	-1, 2576,
	242, 324,
	-2, 388,
	-1, 2694,
	1, 1157,
	665, 1157,
	667, 1157,
	669, 1157,
	672, 1157,
	-2, 0,
	-1, 2695,
	1, 1201,
	665, 1201,
	667, 1201,
	669, 1201,
	672, 1201,
	-2, 0,
	-1, 2696,
	1, 1213,
	665, 1213,
	667, 1213,
	669, 1213,
	672, 1213,
	-2, 0,
	-1, 2697,
	1, 1271,
	665, 1271,
	667, 1271,
	669, 1271,
	672, 1271,
	-2, 0,
	-1, 2739,
	1, 1182,
	665, 1182,
	667, 1182,
	669, 1182,
	672, 1182,
	-2, 0,
	-1, 2765,
	1, 1250,
	665, 1250,
	667, 1250,
	669, 1250,
	672, 1250,
	-2, 0,
	-1, 2815,
	482, 1967,
	483, 1967,
	-2, 2220,
	-1, 2848,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2240,
	-1, 2849,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2241,
	-1, 2850,
	102, 0,
	281, 0,
	282, 0,
	650, 0,
	651, 0,
	-2, 2242,
	-1, 2851,
	102, 0,
	281, 0,
	282, 0,
	650, 0,
	651, 0,
	-2, 2243,
	-1, 2852,
	102, 0,
	281, 0,
	282, 0,
	650, 0,
	651, 0,
	-2, 2244,
	-1, 2853,
	102, 0,
	281, 0,
	282, 0,
	650, 0,
	651, 0,
	-2, 2245,
	-1, 2854,
	102, 0,
	281, 0,
	282, 0,
	650, 0,
	651, 0,
	-2, 2246,
	-1, 2855,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2247,
	-1, 2867,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2259,
	-1, 2868,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2260,
	-1, 2869,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2261,
	-1, 2873,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2268,
	-1, 2879,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2272,
	-1, 2881,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2280,
	-1, 2882,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2281,
	-1, 2883,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2282,
	-1, 2884,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2283,
	-1, 3061,
	5, 2696,
	204, 2550,
	666, 2693,
	-2, 2684,
	-1, 3062,
	204, 2551,
	-2, 3128,
	-1, 3063,
	204, 2552,
	-2, 2909,
	-1, 3064,
	204, 2553,
	-2, 2775,
	-1, 3065,
	204, 2554,
	-2, 2841,
	-1, 3066,
	204, 2555,
	-2, 2894,
	-1, 3067,
	204, 2556,
	-2, 3035,
	-1, 3068,
	204, 2557,
	-2, 2347,
	-1, 3163,
	1, 2041,
	2, 2041,
	114, 2041,
	162, 2041,
	184, 2041,
	197, 2041,
	205, 2041,
	223, 2041,
	226, 2041,
	259, 2041,
	266, 2041,
	278, 2041,
	298, 2041,
	302, 2041,
	342, 2041,
	377, 2041,
	382, 2041,
	388, 2041,
	470, 2041,
	476, 2041,
	590, 2041,
	603, 2041,
	625, 2041,
	626, 2041,
	627, 2041,
	637, 2041,
	665, 2041,
	667, 2041,
	669, 2041,
	671, 2041,
	672, 2041,
	-2, 2040,
	-1, 3179,
	666, 2664,
	-2, 2679,
	-1, 3181,
	1, 405,
	625, 405,
	672, 405,
	-2, 1926,
	-1, 3246,
	38, 2696,
	135, 2696,
	648, 2696,
	664, 2696,
	667, 2696,
	668, 2696,
	671, 2696,
	-2, 2693,
	-1, 3247,
	38, 2697,
	135, 2697,
	648, 2697,
	664, 2697,
	667, 2697,
	668, 2697,
	671, 2697,
	-2, 2694,
	-1, 3477,
	1, 1622,
	464, 1576,
	509, 1576,
	640, 1576,
	645, 1576,
	665, 1622,
	667, 1622,
	669, 1622,
	672, 1622,
	-2, 1926,
	-1, 3640,
	1, 1254,
	665, 1254,
	667, 1254,
	669, 1254,
	672, 1254,
	-2, 0,
	-1, 3668,
	383, 1970,
	-2, 3187,
	-1, 3669,
	383, 1971,
	-2, 3018,
	-1, 3673,
	482, 2618,
	483, 2618,
	-2, 2345,
	-1, 3674,
	482, 2622,
	483, 2622,
	-2, 2346,
	-1, 3675,
	482, 2619,
	483, 2619,
	-2, 2345,
	-1, 3676,
	482, 2623,
	483, 2623,
	-2, 2346,
	-1, 3690,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2270,
	-1, 3691,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2274,
	-1, 3697,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2276,
	-1, 3946,
	1, 904,
	665, 904,
	667, 904,
	669, 904,
	672, 904,
	-2, 1783,
	-1, 4174,
	46, 2655,
	-2, 1354,
	-1, 4179,
	1, 1622,
	665, 1622,
	667, 1622,
	669, 1622,
	672, 1622,
	-2, 1926,
	-1, 4295,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2278,
	-1, 4302,
	272, 0,
	274, 0,
	366, 0,
	-2, 2297,
	-1, 4371,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2326,
	-1, 4372,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2327,
	-1, 4373,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2328,
	-1, 4377,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2332,
	-1, 4378,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2333,
	-1, 4379,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2334,
	-1, 4431,
	666, 2665,
	-2, 2680,
	-1, 4680,
	668, 3307,
	-2, 1852,
	-1, 4739,
	272, 0,
	274, 0,
	366, 0,
	-2, 2298,
	-1, 4742,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2301,
	-1, 4743,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2303,
	-1, 4872,
	668, 2681,
	-2, 1657,
	-1, 5054,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2302,
	-1, 5055,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2304,
	-1, 5066,
	272, 0,
	-2, 2337,
	-1, 5269,
	272, 0,
	-2, 2338,
	-1, 5504,
	54, 0,
	238, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 3150,
}

const sqlPrivate = 57344

const sqlLast = 163901

var sqlAct = [...]int16{
	318, 5433, 1523, 5638, 3552, 5729, 5709, 3435, 5323, 3397,
	5131, 5577, 5490, 5432, 5503, 5517, 5552, 5315, 5384, 5559,
	1046, 10, 4, 1250, 204, 5667, 5444, 5652, 5423, 1045,
	6, 4160, 5519, 5447, 4722, 5471, 5518, 5586, 3833, 5368,
	5237, 2616, 4652, 2432, 1752, 1718, 3093, 1579, 2572, 5463,
	5188, 5217, 4335, 5502, 5515, 5273, 5202, 1437, 5010, 4928,
	4999, 4963, 5005, 3973, 2825, 4287, 1515, 3521, 2403, 5136,
	5075, 4161, 3976, 5040, 2232, 2667, 4197, 4672, 4664, 5351,
	3239, 4646, 817, 4095, 4568, 1514, 3682, 4869, 967, 4849,
	3834, 3306, 1242, 2896, 2665, 3572, 3305, 4191, 4045, 2032,
	2279, 3906, 4644, 5015, 4144, 4628, 4611, 2835, 3413, 1416,
	4613, 4421, 2642, 2441, 3965, 3979, 4224, 5071, 967, 4129,
	2354, 892, 3245, 4149, 3509, 1600, 4226, 3960, 2826, 4148,
	3536, 1299, 4141, 204, 3541, 4122, 4121, 3961, 4151, 4434,
	3962, 3882, 3193, 3436, 829, 3856, 2629, 3848, 1693, 3814,
	3839, 3604, 4721, 3837, 1049, 4778, 3889, 3567, 3553, 2201,
	3538, 2559, 2542, 3484, 4142, 930, 2491, 2561, 4000, 3426,
	3164, 3873, 5560, 2453, 1748, 3155, 3156, 1747, 2261, 4398,
	3813, 2832, 5274, 2133, 312, 2175, 2330, 2103, 2198, 3566,
	316, 2909, 1814, 1518, 3158, 2976, 2613, 3666, 1040, 962,
	1417, 888, 3446, 2974, 2540, 4868, 2536, 2518, 2522, 2514,
	3522, 1304, 2420, 1594, 2424, 2352, 1426, 1490, 1562, 3237,
	1309, 3238, 2560, 311, 2202, 1507, 3090, 1877, 3199, 1875,
	3136, 2965, 2893, 2402, 2399, 1581, 2797, 2814, 2221, 2795,
	1500, 1923, 865, 3546, 1817, 1720, 1810, 1493, 2612, 3194,
	1852, 804, 2392, 2218, 2545, 827, 3330, 2663, 5385, 1122,
	4152, 5710, 968, 3331, 3291, 969, 1549, 5468, 1504, 1496,
	1470, 2167, 973, 1467, 1420, 1455, 908, 2968, 2211, 1434,
	3145, 3105, 126, 1399, 2946, 1271, 1577, 2117, 1253, 3057,
	3023, 2033, 968, 2796, 2034, 969, 215, 2798, 216, 1959,
	873, 2709, 973, 2569, 1944, 884, 1843, 1019, 130, 1850,
	848, 976, 116, 2550, 1703, 5578, 1285, 822, 1777, 5639,
	1422, 1397, 51, 50, 48, 39, 37, 35, 2039, 957,
	3720, 1593, 2014, 4412, 1758, 818, 4413, 831, 1574, 1144,
	3714, 976, 2332, 2332, 2332, 1020, 3835, 2332, 2332, 5744,
	2332, 901, 904, 3135, 5732, 5719, 5717, 5716, 4102, 5676,
	3135, 3135, 5674, 5135, 3784, 3785, 5135, 3802, 3803, 3804,
	5608, 5561, 3907, 5543, 2581, 5562, 5541, 3135, 5538, 5535,
	3135, 5095, 5539, 5536, 5513, 5512, 5500, 4737, 5094, 5093,
	2581, 5499, 4206, 1300, 5498, 2581, 5488, 5486, 3577, 5477,
	5135, 5135, 5475, 5135, 5442, 5406, 5135, 5399, 5135, 3210,
	1270, 3135, 5103, 5398, 5389, 5367, 2364, 3135, 2581, 2581,
	5365, 5363, 5344, 1887, 5135, 5135, 4953, 1558, 5271, 1414,
	5251, 1520, 3210, 5219, 4697, 5211, 5154, 4487, 5153, 5135,
	2581, 5100, 2581, 5099, 3899, 3799, 5142, 2049, 2050, 5141,
	2581, 5134, 5098, 5135, 5082, 5135, 5056, 4102, 2581, 5025,
	3210, 2664, 4992, 3577, 4993, 1400, 1400, 4814, 4102, 4207,
	4923, 2080, 4896, 1235, 3135, 3923, 3135, 1246, 4793, 2052,
	4741, 2361, 4794, 4688, 3210, 1558, 4682, 4219, 2361, 2361,
	4219, 4625, 4518, 4486, 3917, 4626, 4519, 4487, 1751, 2617,
	1247, 1225, 4427, 1224, 1246, 4425, 4428, 3729, 2105, 4426,
	4405, 2364, 4319, 3730, 3135, 3231, 2581, 2051, 4315, 4402,
	4218, 3926, 3135, 3832, 4219, 3927, 3830, 3135, 3107, 3825,
	3831, 2049, 2050, 3135, 2082, 2083, 2084, 2093, 2094, 2095,
	3205, 3824, 3775, 3514, 2361, 3135, 3776, 1241, 3790, 3773,
	1811, 1462, 3762, 3774, 2086, 2080, 3763, 3760, 3731, 1452,
	3576, 3135, 3135, 2052, 3577, 3563, 3562, 3270, 3209, 2652,
	2652, 3135, 3210, 3191, 2099, 2581, 2364, 3135, 3183, 2049,
	2050, 3134, 2581, 2651, 2364, 3135, 1403, 2652, 1404, 3681,
	3135, 5407, 2105, 1401, 5275, 5266, 5254, 3577, 4402, 3106,
	5003, 2051, 4953, 2080, 2361, 4897, 4697, 4627, 4620, 3404,
	2446, 2052, 2071, 3290, 2378, 2364, 2580, 3281, 1760, 2358,
	3514, 4091, 2068, 2331, 3423, 3806, 3200, 2196, 2345, 1453,
	2971, 2057, 1745, 4536, 4290, 4256, 2219, 2529, 4208, 1925,
	2105, 3175, 3174, 3173, 3172, 3171, 1405, 1402, 1234, 2051,
	276, 1233, 1232, 1231, 1230, 1229, 1228, 4798, 4209, 1453,
	2071, 1227, 3784, 3785, 109, 276, 1223, 1222, 1221, 3800,
	2068, 1220, 1432, 1219, 1218, 1217, 1216, 1215, 1214, 1213,
	3630, 5017, 1212, 1211, 1210, 2079, 2081, 1209, 1208, 1207,
	1206, 1205, 1204, 1203, 1868, 1202, 1041, 1201, 1188, 1120,
	1119, 1118, 1117, 1116, 278, 2074, 2075, 2076, 2077, 1115,
	1114, 1113, 1112, 1111, 1110, 2057, 1950, 1109, 1108, 278,
	1107, 1106, 1105, 1104, 86, 1103, 1044, 1043, 1102, 4735,
	1101, 2972, 1100, 1099, 1098, 1097, 1772, 1766, 1759, 1096,
	2333, 2333, 2333, 87, 1095, 2333, 2333, 1094, 2333, 1093,
	1092, 2102, 2072, 2074, 2075, 2076, 2077, 277, 2090, 1091,
	3135, 92, 2100, 2057, 1090, 1089, 1088, 1087, 1086, 2079,
	2081, 1085, 277, 1084, 1083, 1082, 270, 1071, 1070, 1069,
	1064, 1063, 1056, 1055, 1054, 271, 1039, 3719, 1038, 1037,
	994, 993, 2096, 992, 2097, 2049, 2050, 991, 990, 989,
	980, 2066, 2067, 979, 102, 978, 977, 939, 2049, 2050,
	938, 899, 898, 897, 879, 217, 306, 2079, 2081, 2080,
	305, 2088, 2973, 304, 2970, 303, 302, 2052, 301, 300,
	217, 299, 298, 4753, 2102, 297, 2072, 3801, 296, 295,
	2052, 294, 1307, 3784, 3785, 293, 3790, 1047, 1306, 2066,
	2067, 2361, 2361, 292, 3784, 3785, 2105, 291, 290, 289,
	56, 288, 125, 287, 286, 2051, 1525, 1309, 109, 122,
	285, 284, 283, 282, 281, 280, 279, 4460, 2051, 2361,
	4417, 3298, 4260, 4220, 2072, 3885, 2098, 3742, 3725, 1760,
	3716, 3632, 3607, 1751, 1309, 1309, 1309, 3494, 3214, 3298,
	3180, 3162, 1454, 2787, 3003, 3001, 2222, 2087, 2361, 3531,
	2361, 1760, 2987, 5019, 2985, 2405, 1464, 2363, 2102, 2361,
	2073, 2245, 276, 2144, 3799, 2731, 1891, 3828, 2015, 3106,
	2135, 3549, 1754, 1760, 2178, 110, 4206, 2046, 2142, 5528,
	2178, 2177, 1453, 1603, 2364, 3257, 2361, 2177, 1309, 2358,
	2331, 1723, 2790, 3514, 1309, 1309, 1570, 1436, 1525, 5527,
	1736, 2361, 1566, 1567, 1568, 5524, 2102, 3800, 1771, 1765,
	5501, 2181, 3829, 5485, 5372, 5263, 278, 2176, 2078, 2057,
	5257, 5278, 1553, 1309, 5070, 1309, 5023, 1309, 2104, 5126,
	5002, 276, 2057, 4776, 4775, 3106, 1723, 2975, 4769, 3796,
	3797, 3798, 4768, 4767, 2073, 171, 3795, 3793, 3794, 3786,
	3787, 3788, 3789, 3791, 3792, 4760, 4759, 4757, 1453, 4752,
	2135, 1525, 4749, 1819, 4748, 4624, 2078, 3790, 1553, 277,
	4619, 4640, 4461, 2079, 2081, 1713, 2091, 4430, 3790, 4392,
	4391, 4390, 1872, 1723, 4351, 278, 1749, 4311, 270, 2102,
	1723, 4306, 2073, 3880, 1531, 3821, 3812, 271, 3783, 1309,
	3780, 1309, 3779, 3777, 3772, 4524, 1723, 204, 204, 1708,
	3771, 3770, 2104, 3767, 3766, 1309, 3765, 1309, 3761, 3741,
	3724, 3717, 3715, 3296, 1270, 1270, 1270, 217, 1545, 2062,
	2060, 2061, 2053, 2054, 2055, 2056, 2058, 2059, 277, 114,
	2072, 1547, 3564, 1413, 3163, 2958, 2046, 1499, 1503, 1824,
	1827, 2588, 2136, 1511, 2134, 2632, 2045, 270, 2586, 5738,
	2104, 1429, 5660, 5659, 5576, 5574, 271, 1428, 1723, 3784,
	3785, 2969, 1249, 1687, 1438, 3801, 2137, 4337, 5434, 3784,
	3785, 4641, 1596, 5349, 1690, 1695, 1846, 5335, 3800, 1309,
	1734, 5331, 1309, 5330, 2089, 973, 217, 5329, 213, 3800,
	117, 5309, 5308, 121, 5306, 3219, 2063, 2064, 2070, 2092,
	2069, 2065, 1700, 2062, 2060, 2061, 2053, 2054, 2055, 2056,
	2058, 2059, 2102, 5277, 4534, 3533, 1573, 4763, 5276, 1539,
	5256, 4762, 5249, 276, 976, 276, 2899, 5018, 5235, 1746,
	1584, 1585, 5232, 1048, 2905, 5231, 5215, 5213, 5150, 171,
	5121, 5068, 1812, 5051, 5050, 276, 1698, 4985, 2069, 2065,
	4981, 2062, 2060, 2061, 2053, 2054, 2055, 2056, 2058, 2059,
	2102, 4979, 4977, 1892, 3912, 276, 276, 276, 3295, 4954,
	1730, 2102, 1855, 1857, 4774, 4698, 4631, 278, 4522, 278,
	1576, 4521, 1830, 4502, 1586, 1587, 3295, 4501, 4499, 1309,
	1309, 1309, 1309, 1309, 1309, 1309, 1309, 3295, 2073, 278,
	3874, 2199, 4408, 4395, 4301, 3826, 2122, 176, 4221, 4183,
	4173, 4071, 4011, 3978, 3746, 3745, 3740, 1553, 1853, 278,
	278, 278, 3706, 1309, 219, 3508, 3506, 276, 3323, 1309,
	277, 2184, 277, 2183, 3795, 3793, 3794, 3786, 3787, 3788,
	3789, 3791, 3792, 3790, 2182, 2179, 3801, 2024, 4641, 270,
	2173, 270, 277, 3790, 2168, 1247, 2166, 3801, 271, 3177,
	271, 3170, 3133, 3014, 214, 2983, 2104, 2121, 1952, 218,
	2336, 270, 277, 277, 277, 2049, 2050, 2244, 2200, 2193,
	271, 278, 2192, 3784, 3785, 2191, 2190, 2189, 217, 2188,
	1042, 270, 270, 270, 2187, 2124, 2186, 2185, 2174, 2080,
	271, 271, 271, 2163, 2162, 2161, 2160, 2052, 2159, 2158,
	217, 3784, 3785, 1897, 2157, 2156, 2155, 2154, 2153, 2152,
	2020, 2151, 2150, 2149, 1867, 1968, 2148, 2137, 2123, 2120,
	217, 217, 217, 2115, 277, 1538, 2105, 1309, 1309, 1309,
	1886, 1459, 1448, 1309, 5280, 2051, 3532, 5279, 4991, 4819,
	1434, 4745, 1434, 270, 276, 276, 2071, 4459, 1844, 4424,
	4411, 3728, 271, 3168, 3800, 5096, 2068, 1603, 2060, 2061,
	2053, 2054, 2055, 2056, 2058, 2059, 4821, 204, 1283, 1309,
	1849, 4458, 2267, 1525, 2136, 2055, 2056, 2058, 2059, 2208,
	2292, 2267, 3548, 1525, 3910, 2118, 1525, 1723, 4212, 1916,
	2047, 4899, 3784, 3785, 2240, 2049, 2050, 3212, 278, 278,
	1580, 1953, 1563, 2248, 1565, 3795, 3793, 3794, 3786, 3787,
	3788, 3789, 3791, 3792, 4621, 2260, 2025, 3793, 3794, 3786,
	3787, 3788, 3789, 3791, 3792, 3398, 4014, 2052, 5651, 5339,
	5332, 5022, 4939, 4938, 4937, 2016, 2102, 2255, 4936, 2074,
	2075, 2076, 2077, 4935, 2021, 4898, 2102, 1580, 2398, 2057,
	1580, 277, 277, 1525, 4800, 4705, 2029, 3790, 4704, 1309,
	2028, 276, 4703, 4702, 4701, 2051, 2180, 1225, 4700, 1224,
	270, 270, 3877, 276, 4699, 2023, 4488, 4415, 2504, 271,
	271, 1564, 4414, 1309, 2254, 3790, 1580, 2205, 2206, 3002,
	3000, 1603, 2229, 2042, 2043, 1247, 1580, 2986, 4223, 2984,
	4222, 1558, 2280, 2079, 2081, 2370, 4104, 4103, 4100, 217,
	217, 5520, 5604, 1400, 4647, 278, 5516, 5602, 2435, 2143,
	1580, 2178, 3801, 3444, 2222, 4288, 2018, 278, 2177, 2396,
	2049, 2050, 2158, 4647, 4061, 2066, 2067, 5258, 4559, 2158,
	2384, 1578, 3769, 2169, 2170, 4649, 2268, 1687, 3768, 2270,
	3688, 276, 3349, 3334, 2250, 2268, 973, 1553, 2270, 2317,
	1561, 4517, 2052, 4633, 4649, 973, 1915, 3835, 277, 4645,
	2072, 2390, 2389, 5125, 2252, 1580, 2398, 1199, 2369, 1558,
	277, 2230, 4163, 3980, 4162, 2249, 3835, 270, 5301, 1969,
	4482, 2220, 4483, 2146, 1924, 976, 271, 2343, 1558, 270,
	2051, 5302, 2617, 2348, 976, 278, 3800, 2350, 271, 5218,
	5549, 5000, 5302, 3573, 2355, 4130, 2227, 4943, 2357, 1925,
	2563, 4618, 2360, 5072, 1247, 4565, 217, 2562, 4556, 2966,
	2526, 4527, 1200, 2346, 4251, 3944, 2684, 2753, 217, 2661,
	2197, 3835, 2596, 4339, 2523, 3734, 5145, 1430, 5668, 5702,
	5525, 1848, 2102, 5117, 2503, 3411, 2172, 2194, 277, 2502,
	2224, 5540, 2633, 5537, 1723, 1723, 2239, 2238, 2237, 2235,
	2234, 2233, 4180, 1270, 2625, 1603, 2372, 270, 1823, 1741,
	1534, 1687, 1495, 2527, 4915, 4911, 271, 1412, 2102, 4202,
	3420, 2276, 3417, 3794, 3786, 3787, 3788, 3789, 3791, 3792,
	3332, 1723, 2393, 3415, 3786, 3787, 3788, 3789, 3791, 3792,
	2538, 4493, 2078, 5324, 2057, 5006, 217, 5441, 3983, 4512,
	3545, 1901, 1880, 2368, 4113, 5643, 3400, 5605, 5526, 1849,
	5148, 5144, 1723, 1432, 2499, 1432, 2508, 3606, 2073, 2510,
	4075, 5606, 2519, 5123, 4282, 1252, 2048, 1786, 5177, 1033,
	2971, 4578, 3948, 3308, 4885, 1793, 2253, 3271, 1197, 1195,
	5731, 5181, 5340, 1193, 5170, 2546, 2513, 2745, 5156, 1565,
	3486, 2410, 2743, 2411, 3801, 4946, 4945, 1723, 4576, 1723,
	3294, 1723, 1966, 2418, 2419, 937, 3294, 934, 2385, 4575,
	2373, 1967, 2513, 5583, 4567, 1184, 4542, 3292, 2391, 1723,
	1723, 4541, 4539, 3292, 2275, 2513, 2104, 4538, 4526, 2805,
	3950, 3911, 4485, 1723, 2323, 1743, 4484, 2326, 2766, 4119,
	46, 4118, 4063, 2656, 2452, 1723, 1251, 4577, 1723, 1723,
	1723, 1723, 3898, 2440, 2395, 3739, 2412, 2413, 3738, 4496,
	3737, 3736, 3692, 2416, 2417, 3442, 1564, 3441, 2446, 1565,
	973, 2972, 5252, 2267, 3422, 3410, 3542, 3402, 3391, 3390,
	3378, 3019, 2567, 3367, 3365, 1687, 3360, 1846, 2685, 2644,
	1034, 2644, 3359, 2803, 2645, 2394, 1309, 3311, 3339, 2496,
	3338, 4013, 2565, 2566, 2366, 2621, 2474, 2511, 3299, 976,
	3192, 2573, 2578, 2547, 2579, 2880, 5146, 2277, 1965, 2022,
	3018, 2626, 2524, 5118, 2069, 2065, 5669, 2062, 2060, 2061,
	2053, 2054, 2055, 2056, 2058, 2059, 1899, 2102, 2639, 1309,
	3788, 3789, 3791, 3792, 2444, 2837, 1564, 4622, 1559, 2195,
	5049, 871, 1548, 4059, 4253, 2615, 2495, 2509, 2659, 3278,
	2492, 3980, 2973, 2517, 2970, 1797, 3786, 3787, 3788, 3789,
	3791, 3792, 4830, 4883, 2690, 2785, 1309, 5644, 1309, 2552,
	2647, 4880, 2552, 2551, 871, 1309, 2551, 2555, 1309, 2805,
	2292, 2292, 1603, 2680, 1309, 1309, 1309, 1309, 1309, 1309,
	1309, 1309, 1309, 1309, 1309, 1309, 1309, 1309, 1309, 1309,
	1309, 1309, 1309, 1309, 1309, 1309, 1309, 1309, 1309, 1309,
	1309, 1309, 1309, 1309, 1309, 1309, 1309, 1309, 1309, 1309,
	1848, 1309, 2563, 1309, 1309, 1309, 1309, 2636, 2600, 2593,
	2649, 2617, 1853, 3213, 1853, 5584, 1788, 2268, 2512, 2669,
	2270, 2715, 1031, 2803, 1030, 1481, 1190, 973, 2013, 1309,
	2804, 2676, 3792, 1309, 1309, 2059, 3336, 4900, 1582, 1583,
	2628, 1309, 2682, 2807, 2512, 1309, 1559, 1309, 1309, 1247,
	2756, 1247, 2675, 1555, 2641, 1603, 4841, 2512, 2794, 3355,
	1559, 1309, 1309, 1309, 1309, 1805, 976, 1309, 1309, 1309,
	1309, 1309, 1309, 1309, 1309, 1539, 2653, 2776, 2654, 2947,
	2948, 2506, 2833, 2834, 2895, 2400, 2401, 3225, 1582, 1583,
	1836, 3310, 1835, 2947, 2963, 3353, 1309, 1309, 1309, 1309,
	1309, 1309, 1309, 1309, 1309, 2966, 1309, 2975, 1744, 4060,
	1917, 1309, 2802, 2801, 2779, 1789, 2789, 1834, 1245, 1833,
	3011, 2895, 2765, 1434, 1582, 1583, 2762, 2891, 3379, 4840,
	1603, 2694, 3389, 3580, 1582, 1583, 3198, 2702, 1981, 1434,
	2705, 1560, 3060, 3060, 3074, 2716, 2947, 2017, 1270, 3094,
	3096, 5180, 1687, 1985, 3182, 1309, 1603, 3104, 1582, 1583,
	2889, 3644, 5646, 3625, 3381, 2053, 2054, 2055, 2056, 2058,
	2059, 2739, 1429, 5317, 1429, 870, 1964, 2831, 1428, 4879,
	1428, 1555, 2819, 2818, 1894, 5605, 1948, 2763, 1525, 3322,
	2804, 2830, 2751, 1036, 1035, 1555, 4096, 2737, 4881, 2445,
	1987, 3178, 1913, 3679, 1925, 1556, 3419, 2699, 870, 1925,
	4877, 2210, 204, 2400, 2401, 1557, 3383, 2764, 3207, 2911,
	3664, 2693, 1244, 1537, 5048, 2027, 3380, 3202, 2793, 4864,
	2962, 2442, 2792, 2791, 2806, 2799, 1525, 2778, 3150, 2548,
	3195, 2969, 3418, 3947, 3416, 1687, 1225, 3247, 2822, 1225,
	1225, 2823, 2824, 5201, 5680, 3414, 4265, 3309, 4523, 4093,
	2703, 2695, 3382, 816, 3293, 5645, 2553, 4857, 5647, 1560,
	2438, 3427, 2802, 3142, 3013, 1525, 1525, 3265, 4092, 3015,
	3016, 3321, 3017, 1560, 3647, 3020, 1948, 3021, 3022, 2229,
	811, 4829, 2877, 5522, 4264, 4509, 3222, 2903, 2646, 872,
	4603, 1400, 2214, 3627, 2901, 2443, 4172, 5319, 1947, 1818,
	1895, 2554, 1900, 1247, 2907, 3227, 1603, 2885, 3371, 5711,
	1687, 935, 935, 1247, 5193, 4858, 1192, 1247, 2549, 2744,
	2696, 2960, 872, 1556, 2742, 3167, 4328, 2439, 4864, 3263,
	3335, 2886, 2975, 1557, 1246, 5292, 1687, 1556, 935, 2887,
	935, 3678, 3141, 2892, 3260, 5291, 2217, 1557, 4944, 4325,
	3703, 1945, 4604, 1796, 973, 2292, 973, 3149, 3388, 3154,
	1816, 3221, 3160, 3161, 2556, 2212, 4857, 1442, 3244, 4540,
	4850, 2775, 1553, 3224, 3085, 3056, 3069, 4537, 4466, 3215,
	3100, 3098, 5649, 3701, 1444, 2215, 3953, 3131, 3132, 4848,
	2240, 4465, 3143, 976, 2180, 976, 3147, 3148, 1947, 4852,
	3201, 3236, 4602, 2227, 4464, 1558, 973, 5655, 1080, 3274,
	4453, 1247, 1439, 4507, 928, 3268, 1982, 4452, 4031, 1898,
	1946, 1175, 3196, 4098, 4858, 3646, 3223, 4882, 4875, 2213,
	1603, 4451, 3276, 3252, 2396, 2396, 2530, 4257, 4125, 3256,
	4326, 2537, 1723, 1480, 4117, 976, 1239, 4878, 3204, 3300,
	4057, 3421, 3366, 3267, 3358, 3262, 3337, 1961, 3643, 5617,
	1445, 3285, 3250, 2585, 2584, 1525, 2875, 3477, 3218, 3850,
	2878, 4097, 4851, 2169, 2170, 3197, 3277, 3342, 1311, 5523,
	4032, 2786, 3259, 3671, 3672, 1302, 1309, 1309, 3269, 1309,
	1446, 5630, 3255, 5629, 3439, 3297, 1687, 1499, 3275, 1503,
	3229, 2975, 3232, 3190, 5682, 5403, 1432, 5591, 3233, 3261,
	2049, 2050, 4727, 4726, 3356, 4258, 4126, 4123, 5553, 3254,
	4959, 1525, 1432, 3520, 2446, 3517, 3341, 4199, 3635, 2874,
	4030, 2777, 2454, 1558, 2080, 1443, 1243, 926, 3326, 2332,
	3698, 3396, 2052, 4853, 3272, 1176, 4200, 1558, 2011, 3412,
	2888, 4854, 3340, 1723, 2701, 1822, 3512, 4055, 2458, 2558,
	2890, 4098, 4859, 2216, 2531, 1723, 3357, 1723, 1983, 1191,
	4053, 2105, 3699, 1723, 5418, 204, 3704, 5109, 3645, 4022,
	2051, 3694, 4054, 4052, 1723, 1723, 3303, 3529, 5194, 3286,
	3287, 3313, 3316, 3288, 3289, 5521, 5492, 5318, 5493, 3386,
	2444, 5648, 5192, 3428, 3392, 4856, 3284, 4876, 4094, 3206,
	5190, 1525, 4051, 1525, 4048, 2975, 3583, 3584, 2894, 2455,
	1687, 2557, 3399, 5325, 4860, 1818, 3571, 3443, 3591, 3592,
	3593, 3594, 3478, 3479, 4199, 3570, 1309, 3362, 3967, 3375,
	3376, 4023, 2476, 3556, 3481, 3347, 3348, 3350, 3351, 3352,
	3354, 3949, 4853, 2214, 2467, 3568, 3384, 3230, 3492, 3385,
	4854, 1980, 812, 5189, 3394, 973, 2449, 2738, 1530, 1979,
	1723, 4859, 3524, 3401, 3408, 869, 1984, 1926, 3181, 4973,
	3610, 3995, 4001, 1742, 2486, 5653, 2507, 1457, 3294, 2164,
	3849, 4021, 1072, 5191, 2057, 3433, 3434, 3266, 3908, 3432,
	2505, 5590, 1912, 1914, 976, 3314, 3482, 2217, 2698, 1181,
	1180, 1309, 3565, 3487, 4856, 5401, 2468, 1309, 1309, 1073,
	4585, 1986, 2692, 1536, 3602, 2026, 3144, 1896, 2450, 4108,
	4583, 3489, 1309, 4860, 5569, 2527, 3491, 5615, 2459, 4003,
	4236, 5452, 3994, 3558, 2876, 5570, 2215, 4723, 2079, 2081,
	3560, 2436, 4808, 2482, 813, 4234, 3480, 5061, 1177, 3513,
	4809, 4917, 5043, 5402, 5678, 4227, 2466, 837, 1430, 4508,
	1430, 4855, 4124, 3528, 2114, 1309, 1309, 1440, 2448, 927,
	2957, 1309, 3146, 3700, 1757, 2902, 1764, 4056, 1770, 3551,
	2210, 2523, 3574, 3702, 1309, 1309, 3575, 3649, 1853, 3651,
	1309, 1309, 3581, 3561, 3559, 5654, 1309, 3540, 2534, 814,
	4002, 815, 3590, 2460, 2461, 2072, 2479, 3744, 4865, 4866,
	4587, 3932, 5683, 4807, 3159, 1246, 2553, 3578, 3601, 1057,
	2527, 1081, 4341, 5662, 3585, 4988, 3586, 929, 4712, 1441,
	2456, 925, 3599, 4949, 3616, 4818, 3618, 5656, 3620, 3487,
	4728, 1309, 1309, 1309, 4589, 4238, 1062, 1309, 4586, 3615,
	1866, 3617, 1871, 3619, 3614, 3621, 3622, 1309, 3968, 4454,
	2532, 2554, 3695, 2484, 3395, 1463, 1885, 4229, 1890, 1461,
	4855, 2214, 5184, 4284, 1309, 2445, 4585, 2521, 3631, 2457,
	3662, 3659, 1266, 4228, 1178, 1931, 4583, 2102, 3722, 3723,
	5369, 5458, 3727, 3726, 5383, 3652, 5234, 4948, 3654, 4947,
	4670, 4187, 3670, 5041, 4041, 4039, 1257, 2520, 5042, 3921,
	2533, 4974, 1270, 2475, 2216, 1179, 5589, 4865, 4866, 3369,
	3661, 3189, 3660, 2611, 2207, 2217, 5554, 2333, 1460, 2485,
	1451, 3718, 3076, 803, 2036, 2819, 2818, 1951, 3665, 4639,
	2036, 4381, 4237, 4772, 2212, 1429, 2515, 2031, 2463, 4612,
	2037, 1428, 3680, 2750, 4724, 3687, 1074, 1075, 2821, 1503,
	2447, 1429, 2386, 2472, 2215, 2489, 5688, 1428, 3890, 1309,
	1309, 1309, 1309, 2073, 1183, 5143, 4587, 4111, 1309, 1309,
	1309, 2443, 4112, 1309, 4225, 1175, 5089, 4545, 4040, 3370,
	5243, 3974, 5299, 2383, 1182, 4671, 4571, 1309, 1434, 1603,
	3693, 4546, 4494, 4492, 4188, 4178, 5568, 3970, 2213, 3530,
	1239, 3523, 3510, 2516, 4586, 2462, 2640, 2634, 2627, 2619,
	3315, 2595, 2592, 2811, 1309, 2470, 1309, 3858, 5370, 3823,
	3431, 4324, 3608, 5228, 3609, 1434, 1790, 4584, 2477, 2524,
	1472, 2104, 4478, 878, 4396, 5424, 4285, 3298, 2036, 2487,
	981, 3343, 2035, 1603, 5386, 2752, 3374, 2379, 2035, 5044,
	3842, 3843, 4673, 5011, 3137, 4729, 2483, 3507, 1434, 1482,
	3844, 1603, 1247, 5208, 5206, 2471, 4436, 988, 5120, 2381,
	3986, 3982, 3981, 1525, 3685, 3663, 3733, 2681, 4410, 3847,
	3846, 2673, 4240, 1058, 1059, 1955, 1954, 2480, 2662, 2590,
	3764, 2292, 1949, 2464, 2478, 1603, 4447, 3140, 3188, 1176,
	4042, 1525, 2488, 3187, 3186, 3372, 3854, 4235, 4230, 4231,
	4232, 4233, 1525, 3185, 3924, 2114, 2382, 2037, 3247, 2292,
	3184, 4617, 3859, 2037, 4437, 3879, 1809, 1842, 3904, 1828,
	1840, 1244, 2216, 4909, 2061, 2053, 2054, 2055, 2056, 2058,
	2059, 3139, 2409, 1079, 4544, 4382, 3138, 5132, 1829, 4239,
	1309, 3884, 4438, 4730, 5312, 4435, 2035, 4383, 2760, 4773,
	1076, 1077, 1309, 4964, 4446, 4634, 4635, 3319, 2812, 4500,
	4444, 2638, 2435, 4133, 2446, 3852, 3857, 3864, 2481, 1687,
	1525, 4489, 3969, 2543, 5612, 5107, 2292, 5105, 5104, 3605,
	917, 3922, 5687, 4584, 3818, 3819, 3820, 1811, 3929, 3931,
	4241, 5210, 3485, 1309, 2236, 3853, 4254, 4445, 2435, 4248,
	3865, 3836, 4441, 3909, 3863, 3920, 3868, 3869, 3945, 1525,
	3919, 4019, 3892, 3893, 3894, 3895, 3876, 3867, 918, 3888,
	3951, 3918, 3866, 1687, 4043, 3344, 3345, 4442, 5371, 3373,
	1525, 3872, 4034, 5227, 3902, 3901, 1553, 3900, 1525, 3244,
	4038, 1687, 4479, 3579, 3851, 1932, 3490, 3488, 3938, 1525,
	2666, 4044, 5133, 1181, 1180, 973, 2562, 3985, 3957, 3958,
	3990, 1904, 5430, 3992, 3883, 5313, 5115, 4076, 4550, 5128,
	5127, 5209, 3871, 1309, 1309, 1687, 2526, 3875, 4835, 4062,
	3984, 1603, 4834, 3988, 2526, 3914, 5438, 1060, 1061, 5421,
	3925, 4779, 4399, 1525, 976, 4086, 3971, 2982, 3977, 3903,
	1933, 5092, 1177, 2008, 982, 983, 4455, 3934, 5460, 2010,
	4555, 3936, 3937, 1525, 3891, 4106, 3940, 5116, 3941, 2007,
	3942, 2005, 4018, 4110, 3860, 3861, 3862, 4016, 3930, 3928,
	1270, 5616, 5614, 5542, 3998, 2741, 1975, 2771, 1973, 877,
	1971, 3935, 1270, 4033, 3939, 4101, 5342, 5333, 5102, 4490,
	4049, 4037, 5196, 2408, 5067, 3946, 4020, 4826, 1525, 1723,
	5431, 1723, 4771, 5314, 4616, 1603, 1943, 4471, 3815, 4300,
	4439, 1432, 967, 1723, 1723, 3954, 1941, 3247, 4440, 4035,
	4249, 4246, 4078, 1841, 4080, 1939, 1839, 4084, 4064, 4072,
	2541, 4090, 3916, 4109, 3778, 1937, 1935, 1928, 1525, 1078,
	4179, 1922, 1920, 3705, 1838, 2425, 4085, 3638, 1432, 4004,
	2426, 3511, 3409, 3403, 3333, 3220, 1434, 2784, 2780, 2759,
	2683, 2672, 4193, 4012, 2657, 4168, 4105, 2325, 4025, 2247,
	2243, 2012, 1879, 4443, 4833, 3816, 1723, 4029, 1178, 4279,
	2707, 1432, 2571, 4278, 4268, 2031, 3629, 3628, 1723, 3588,
	1723, 2800, 4177, 4195, 1960, 2710, 204, 204, 2591, 5514,
	985, 984, 2324, 2322, 2147, 1893, 1396, 2981, 4171, 1179,
	4918, 1687, 4558, 4557, 4990, 4147, 4215, 4543, 4922, 4895,
	5420, 5009, 4192, 4067, 5004, 4927, 4913, 4058, 4910, 4846,
	4074, 4186, 4073, 4845, 3897, 4669, 4077, 4659, 4204, 4252,
	4087, 4321, 4255, 5582, 4099, 4574, 4026, 4548, 3244, 4115,
	4027, 2009, 4028, 4515, 1603, 3568, 3386, 1603, 4107, 4455,
	4513, 2006, 3915, 2004, 3568, 4491, 4182, 4176, 1183, 5587,
	2740, 1430, 2773, 2427, 986, 987, 4164, 5360, 1974, 2772,
	1972, 4189, 1970, 3543, 4244, 3683, 968, 1430, 1182, 969,
	4269, 2431, 1309, 3535, 4120, 1687, 973, 3527, 933, 1309,
	1309, 3519, 3504, 1309, 1309, 1309, 3341, 1309, 1942, 4196,
	4116, 4135, 4114, 3502, 3483, 3258, 1309, 2292, 1940, 3253,
	2589, 4169, 4175, 4174, 2587, 1309, 4128, 1938, 4131, 2564,
	1309, 2528, 2465, 2451, 5352, 976, 1603, 1936, 1934, 1927,
	2437, 2365, 2362, 1921, 1919, 1309, 1837, 2359, 4201, 5353,
	2253, 2356, 2351, 1603, 2349, 4203, 2344, 4210, 2338, 2334,
	1409, 5497, 4088, 2292, 2292, 1309, 1309, 2537, 1309, 1309,
	1309, 4213, 4214, 2428, 2433, 2706, 2259, 2570, 4277, 4194,
	936, 2040, 4276, 3368, 5354, 5606, 2387, 1410, 5311, 1309,
	3684, 3655, 2783, 1309, 3656, 2292, 2292, 1309, 1309, 1309,
	1309, 1309, 1309, 1309, 1309, 1309, 1309, 1309, 1309, 1309,
	1309, 1309, 1309, 1309, 1309, 1309, 1309, 4303, 1309, 4245,
	4286, 3653, 3476, 5479, 4313, 4314, 1309, 1309, 2292, 5377,
	5024, 4934, 4354, 1309, 4355, 4832, 3569, 2375, 2376, 2280,
	3952, 1247, 2781, 4242, 1687, 2404, 1309, 1687, 1795, 4247,
	5245, 3320, 964, 3640, 3294, 5238, 5356, 1434, 1434, 3294,
	204, 1309, 3203, 2769, 1780, 2732, 4394, 2429, 4261, 4681,
	4262, 3292, 4263, 4283, 2446, 1466, 3317, 1194, 1196, 4393,
	4274, 5355, 2002, 2003, 2697, 2833, 4344, 2637, 1506, 4280,
	4089, 2782, 4281, 2735, 2730, 1505, 1603, 5478, 2704, 4886,
	5357, 2041, 4929, 3440, 1238, 2049, 2050, 1411, 1918, 1525,
	1525, 5265, 3324, 906, 4310, 1575, 4308, 2833, 4360, 5130,
	4780, 4758, 2436, 3999, 4320, 3325, 1687, 1525, 1525, 4127,
	2049, 2050, 2267, 3346, 1525, 2044, 4432, 4336, 3247, 2292,
	1532, 2292, 1465, 1687, 4343, 5600, 4331, 3325, 1572, 1432,
	4389, 4327, 4329, 4330, 5550, 4570, 307, 1732, 4588, 3501,
	1429, 1309, 2052, 4352, 4656, 3417, 1428, 4353, 2374, 4350,
	1066, 2620, 4357, 4385, 3415, 2051, 4359, 1543, 1506, 3955,
	4569, 3424, 5620, 3405, 2434, 2493, 1506, 3407, 3329, 1309,
	2498, 923, 909, 909, 3327, 1978, 5429, 1429, 5650, 5129,
	2051, 3406, 3328, 1428, 5408, 4386, 5375, 4406, 4407, 4448,
	800, 5373, 5310, 5229, 5226, 5108, 5037, 4667, 4658, 4474,
	4638, 4475, 1309, 1309, 4181, 3550, 3516, 3503, 3101, 3956,
	1429, 2371, 4403, 4404, 2278, 5255, 1428, 4111, 3393, 1740,
	1739, 4111, 4112, 1733, 1240, 3905, 4112, 2543, 2289, 5686,
	3784, 3785, 2049, 2050, 4419, 2285, 2446, 4111, 4418, 2415,
	3280, 4423, 4112, 5619, 4429, 4416, 2500, 4940, 4528, 3244,
	2414, 3279, 5394, 4551, 1309, 1309, 1751, 2539, 4495, 4989,
	1750, 1903, 1309, 1751, 1751, 1751, 1687, 1902, 3167, 4750,
	4457, 2977, 3633, 3012, 2415, 2414, 1977, 5557, 4666, 1976,
	5230, 5171, 4473, 1723, 1723, 4401, 2268, 4931, 4926, 2270,
	4467, 1723, 4925, 2494, 1723, 1723, 973, 4810, 4806, 4805,
	4746, 4720, 4456, 4332, 1723, 4082, 2430, 4079, 4566, 1525,
	3636, 4600, 4476, 2141, 2140, 3658, 4477, 2788, 5671, 4533,
	4535, 5631, 5483, 5412, 5411, 4532, 5410, 5341, 5285, 5281,
	5204, 5160, 5097, 5091, 5090, 976, 5088, 4590, 2292, 5087,
	4983, 4958, 4884, 4820, 4804, 4803, 4693, 4595, 4687, 4623,
	4511, 4560, 4503, 4271, 4572, 4185, 4184, 3991, 4520, 4553,
	4554, 3933, 5358, 1309, 3639, 4514, 3626, 4516, 5359, 4525,
	3598, 4655, 3597, 3596, 3595, 3534, 3505, 3318, 3249, 3217,
	3216, 2906, 4608, 2774, 1723, 2736, 2729, 2728, 2727, 2726,
	1309, 2725, 4674, 3341, 2635, 4582, 4605, 4606, 1434, 1309,
	2606, 2605, 2604, 2603, 2602, 2601, 4629, 1723, 2341, 2340,
	2339, 2337, 1723, 1723, 1723, 2258, 2257, 2001, 2000, 1929,
	1804, 1803, 4599, 1802, 3153, 1801, 1800, 1799, 1798, 4675,
	1432, 1432, 4651, 1794, 4683, 1792, 4592, 1723, 1791, 1723,
	1727, 1726, 4615, 1592, 1591, 1723, 4650, 1603, 1590, 4690,
	4648, 4579, 3428, 1589, 1588, 1535, 4601, 4573, 1489, 1488,
	3977, 1487, 1486, 1485, 1484, 4678, 1483, 1477, 1476, 1475,
	1474, 1473, 1391, 4598, 2377, 2127, 1198, 1189, 4677, 2132,
	4609, 1603, 5316, 4863, 1309, 1309, 4862, 4694, 4861, 2770,
	1309, 1309, 2292, 3556, 2614, 1309, 1309, 108, 1309, 1787,
	3361, 101, 2535, 1309, 4510, 5551, 3568, 5663, 5695, 4637,
	2597, 4581, 2469, 5462, 1309, 4657, 5461, 4661, 4591, 4663,
	4449, 4450, 4654, 5346, 3234, 2335, 4140, 4139, 4706, 5556,
	1309, 4660, 2473, 4709, 5200, 1000, 5036, 2490, 4462, 4463,
	1150, 5459, 1775, 1015, 4744, 4472, 5440, 3993, 2505, 4679,
	3445, 4685, 4676, 1930, 5223, 4684, 2711, 3878, 3169, 5400,
	4754, 3743, 4716, 4691, 5272, 2507, 4731, 4692, 1237, 5060,
	1175, 2980, 2145, 3827, 103, 1293, 4610, 1341, 1429, 4614,
	4972, 4971, 4847, 4497, 1428, 4150, 4968, 4967, 2282, 4732,
	2284, 1256, 4740, 1434, 1606, 1239, 3109, 3111, 5491, 2501,
	4717, 1434, 2388, 5677, 2504, 1603, 1603, 2397, 1603, 204,
	2171, 3059, 1318, 2292, 2280, 4777, 1356, 1313, 1314, 1434,
	4725, 2286, 1317, 1315, 1316, 2165, 1312, 2281, 4665, 1723,
	1723, 4170, 3554, 4211, 1847, 1845, 1152, 1687, 3165, 2900,
	2964, 3732, 2138, 4785, 1272, 1238, 1295, 2961, 1458, 2497,
	1284, 1603, 3855, 4198, 3102, 4420, 2810, 1025, 3781, 2967,
	1447, 3082, 1525, 3075, 4708, 3071, 3943, 3544, 4710, 2019,
	5074, 1687, 4714, 2116, 3555, 3495, 1569, 1276, 3498, 1309,
	3500, 2898, 2129, 3710, 2820, 4205, 3881, 2506, 3211, 5470,
	1434, 4796, 1434, 4707, 1176, 4340, 3634, 4770, 4719, 2610,
	1408, 1407, 1456, 1406, 5446, 5443, 2525, 4975, 4815, 4816,
	4817, 4145, 4146, 4788, 4790, 2380, 3273, 1525, 2910, 4894,
	4165, 4823, 4824, 4825, 1289, 3611, 4828, 1603, 3612, 1525,
	1711, 4903, 1525, 3547, 4906, 4795, 3547, 4874, 2757, 4272,
	3840, 4812, 4813, 4781, 4636, 4784, 1430, 4839, 4787, 4782,
	4783, 4786, 4236, 1806, 5137, 1309, 4890, 4891, 1603, 1301,
	4797, 2101, 3472, 4799, 3471, 5305, 1554, 4234, 1552, 1551,
	1550, 4836, 4837, 5640, 3430, 3425, 2544, 4227, 4888, 4842,
	2503, 4506, 4505, 1430, 4504, 2502, 275, 3677, 2038, 2030,
	272, 1432, 274, 273, 4811, 1687, 1687, 3997, 1687, 4433,
	4887, 4827, 3887, 1905, 5548, 4844, 4530, 1723, 1723, 4132,
	27, 3247, 1309, 1309, 910, 4838, 1430, 911, 2289, 2289,
	912, 3623, 1434, 3283, 2407, 2285, 2285, 4941, 1571, 4893,
	4481, 26, 25, 24, 23, 3883, 131, 4912, 28, 49,
	4914, 1687, 4902, 30, 4916, 4905, 29, 1525, 5, 4994,
	4889, 22, 175, 4933, 173, 150, 170, 169, 1181, 1180,
	1603, 4930, 141, 4932, 168, 1723, 4924, 4238, 167, 1270,
	166, 165, 164, 5012, 172, 163, 4904, 162, 157, 1429,
	1429, 4907, 4956, 161, 160, 1428, 1428, 159, 158, 4229,
	1723, 1723, 1723, 1723, 1723, 1723, 1723, 4873, 156, 154,
	155, 149, 153, 152, 151, 4228, 4870, 1177, 4870, 4998,
	5013, 5001, 148, 4965, 1603, 4995, 4987, 1687, 147, 146,
	4952, 145, 1319, 4942, 4955, 4650, 1309, 1309, 1309, 4648,
	144, 143, 142, 140, 174, 4951, 4950, 139, 138, 220,
	137, 136, 3244, 4960, 1603, 5045, 5046, 4970, 1687, 1309,
	135, 134, 1309, 1309, 4978, 4966, 133, 4986, 132, 4984,
	889, 890, 1309, 68, 4237, 2292, 5021, 5016, 5007, 67,
	1309, 1309, 128, 129, 21, 314, 314, 314, 47, 806,
	807, 16, 823, 806, 823, 835, 1432, 72, 876, 1603,
	73, 1723, 896, 5035, 1432, 20, 4997, 903, 903, 903,
	903, 5014, 314, 15, 42, 5027, 106, 120, 119, 5052,
	314, 118, 1432, 43, 5026, 115, 41, 1525, 19, 18,
	17, 113, 112, 111, 40, 38, 13, 4976, 11, 44,
	5057, 2231, 14, 1053, 7, 4957, 212, 209, 4870, 5047,
	314, 1603, 208, 1178, 211, 207, 210, 105, 206, 1309,
	1687, 107, 205, 104, 5083, 36, 5084, 12, 200, 4643,
	95, 203, 1309, 202, 201, 5069, 100, 199, 198, 197,
	194, 1309, 1236, 96, 1179, 93, 2292, 5063, 196, 99,
	98, 195, 94, 1432, 5114, 1432, 1309, 2280, 97, 1309,
	5080, 5081, 34, 4831, 8, 71, 5085, 9, 5039, 4250,
	123, 124, 45, 91, 1687, 2289, 90, 89, 88, 5111,
	1309, 5112, 2285, 1309, 4240, 33, 70, 32, 5029, 269,
	1603, 267, 5033, 268, 266, 265, 1723, 1309, 190, 1723,
	1723, 245, 5140, 1183, 1687, 244, 1525, 243, 5186, 4235,
	4230, 4231, 4232, 4233, 242, 241, 5163, 240, 5113, 239,
	5164, 238, 237, 1182, 232, 2435, 236, 5159, 5038, 5110,
	234, 5119, 233, 235, 231, 261, 260, 259, 1434, 258,
	1434, 257, 256, 255, 254, 248, 247, 253, 252, 1687,
	251, 4239, 250, 5176, 1430, 249, 246, 264, 84, 5195,
	230, 229, 228, 806, 806, 226, 222, 5203, 5149, 5162,
	1603, 314, 225, 1723, 227, 5161, 5207, 224, 5221, 5157,
	223, 5239, 221, 263, 262, 1432, 5216, 193, 85, 188,
	5165, 189, 83, 2289, 187, 186, 185, 5173, 184, 183,
	2285, 1687, 4241, 182, 181, 82, 192, 191, 31, 2,
	1429, 1309, 1309, 1, 2815, 5225, 1428, 0, 5240, 5185,
	0, 5198, 0, 5244, 5197, 5248, 0, 5250, 1309, 2292,
	0, 5205, 0, 0, 5151, 5152, 0, 5199, 0, 4650,
	0, 0, 4147, 4648, 0, 0, 0, 0, 0, 1270,
	5220, 5222, 5242, 5187, 1525, 1525, 1525, 5261, 5262, 1525,
	1525, 1525, 2644, 1525, 1525, 5224, 0, 2904, 0, 0,
	0, 0, 5241, 0, 0, 5172, 5247, 5174, 5236, 5175,
	1687, 5016, 1309, 2127, 1309, 5246, 1309, 0, 0, 0,
	0, 0, 0, 0, 5253, 0, 1434, 0, 0, 0,
	0, 0, 0, 5166, 0, 0, 0, 0, 0, 1309,
	0, 1434, 0, 5264, 0, 0, 0, 0, 5298, 0,
	0, 0, 0, 0, 0, 0, 5182, 5183, 0, 5270,
	5260, 0, 0, 0, 0, 0, 0, 1601, 0, 0,
	0, 1732, 0, 5212, 0, 5214, 0, 0, 1732, 0,
	0, 2280, 5300, 0, 4870, 0, 4870, 0, 0, 0,
	1687, 2292, 5297, 5296, 0, 3077, 5293, 0, 0, 5327,
	0, 1294, 127, 0, 1434, 0, 1434, 0, 0, 0,
	5362, 0, 0, 5320, 5321, 0, 0, 0, 4008, 4009,
	0, 4010, 0, 1434, 5348, 0, 1434, 0, 0, 0,
	1723, 0, 0, 0, 0, 1429, 0, 0, 0, 0,
	1723, 1428, 0, 1429, 0, 0, 5336, 0, 5101, 1428,
	0, 0, 5374, 5338, 0, 0, 1309, 1309, 0, 0,
	0, 1429, 0, 0, 0, 0, 1309, 1428, 0, 5343,
	5350, 5347, 0, 5345, 0, 5387, 0, 0, 0, 0,
	5361, 0, 0, 0, 2577, 1430, 1430, 0, 0, 0,
	0, 5396, 0, 5397, 4987, 0, 4068, 4069, 0, 4070,
	5379, 0, 5404, 4650, 0, 0, 0, 4648, 5390, 5388,
	0, 127, 0, 5391, 0, 5392, 0, 5393, 5395, 0,
	0, 5405, 1309, 1309, 0, 0, 1309, 0, 0, 0,
	1723, 1525, 1429, 1525, 1429, 0, 5409, 0, 1428, 0,
	1428, 0, 4870, 0, 0, 0, 5328, 0, 5416, 5417,
	5419, 0, 0, 5337, 5445, 5448, 0, 4870, 0, 0,
	0, 1432, 5474, 1432, 0, 0, 5427, 5428, 5449, 5476,
	5473, 0, 5453, 0, 5413, 5414, 5415, 5435, 5469, 0,
	0, 0, 5436, 0, 0, 5437, 5494, 0, 5454, 0,
	0, 5450, 1309, 1309, 1309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1226, 0, 0, 5364,
	0, 5366, 0, 0, 0, 0, 0, 0, 5496, 1248,
	4870, 0, 4870, 0, 5480, 0, 0, 0, 5380, 5484,
	0, 5382, 1309, 5529, 5487, 0, 5472, 5495, 0, 4870,
	0, 5534, 4870, 0, 0, 0, 5508, 5509, 0, 0,
	0, 5511, 0, 5510, 0, 0, 1723, 0, 0, 0,
	0, 0, 0, 0, 1429, 0, 0, 0, 0, 5530,
	1428, 0, 2435, 0, 5565, 0, 0, 5563, 0, 0,
	1418, 5567, 5564, 5531, 0, 5573, 0, 5532, 0, 0,
	0, 5579, 0, 0, 0, 1309, 5575, 0, 0, 5547,
	0, 5558, 5555, 1525, 1525, 0, 0, 0, 0, 5588,
	0, 0, 0, 1270, 5203, 5282, 5283, 5284, 0, 1432,
	5286, 5287, 5288, 5572, 5289, 5290, 5581, 5571, 0, 0,
	5585, 1449, 5580, 0, 1432, 0, 5594, 5595, 5566, 0,
	0, 5601, 823, 0, 0, 1309, 5603, 5598, 5545, 0,
	0, 5609, 0, 5611, 0, 0, 823, 5455, 5607, 0,
	0, 5445, 314, 5613, 5448, 1434, 0, 1434, 5625, 1479,
	0, 0, 0, 5626, 0, 0, 0, 5599, 0, 5636,
	314, 5634, 314, 314, 0, 1510, 314, 1519, 5623, 5618,
	5642, 0, 0, 5632, 0, 5627, 5610, 1432, 1533, 1432,
	0, 0, 5633, 0, 0, 0, 896, 1525, 0, 896,
	0, 0, 0, 0, 5641, 5658, 1432, 0, 0, 1432,
	0, 0, 0, 5622, 5657, 5624, 0, 0, 0, 5628,
	5666, 5544, 903, 0, 5546, 0, 0, 0, 5673, 0,
	5681, 1309, 1309, 0, 0, 5679, 1430, 0, 0, 5472,
	1309, 1309, 0, 5664, 0, 5684, 0, 5670, 0, 5689,
	5693, 2246, 5672, 0, 314, 0, 314, 314, 314, 1510,
	5698, 314, 314, 5706, 10, 5714, 5697, 204, 5712, 1519,
	5699, 5713, 5704, 6, 5708, 0, 5703, 5665, 0, 0,
	0, 0, 5718, 314, 5700, 1753, 5690, 5691, 5675, 0,
	0, 0, 0, 1525, 5707, 5726, 0, 5727, 5730, 0,
	5715, 1773, 5725, 0, 5723, 0, 5720, 0, 0, 0,
	2425, 1781, 1784, 5724, 5737, 2426, 0, 5735, 5701, 1309,
	5721, 0, 3556, 0, 5722, 5705, 5730, 5733, 5734, 1808,
	5746, 1519, 0, 5728, 0, 0, 314, 314, 0, 1510,
	0, 0, 0, 0, 0, 0, 5743, 0, 5745, 0,
	0, 0, 5456, 0, 5457, 5740, 0, 3556, 5742, 0,
	5635, 896, 5637, 314, 314, 5741, 0, 0, 0, 2289,
	0, 4870, 0, 4870, 0, 1873, 2285, 5736, 0, 0,
	0, 0, 0, 1732, 0, 2406, 1881, 5739, 0, 0,
	2425, 1053, 0, 0, 0, 2426, 2289, 2289, 0, 0,
	1429, 0, 1429, 2285, 2285, 0, 1428, 3667, 1428, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5692, 0,
	0, 1430, 3784, 3785, 0, 3802, 3803, 3804, 2427, 1430,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4736, 2431, 1430, 0, 0,
	0, 0, 0, 0, 2289, 0, 1732, 1732, 0, 0,
	0, 2285, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2476,
	3077, 3077, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3799, 0, 0, 3707, 3708, 2427, 0,
	0, 2049, 2050, 0, 5596, 5597, 0, 0, 1430, 0,
	1430, 2486, 0, 0, 0, 0, 2431, 0, 2428, 2433,
	0, 0, 2049, 2050, 0, 2080, 0, 0, 1432, 0,
	1432, 0, 0, 2052, 0, 0, 0, 0, 1429, 0,
	0, 0, 0, 0, 1428, 0, 2080, 0, 0, 2582,
	0, 0, 0, 1429, 2052, 0, 0, 0, 0, 1428,
	0, 0, 2105, 0, 0, 0, 0, 0, 0, 0,
	0, 2051, 0, 0, 0, 0, 0, 0, 0, 0,
	2482, 0, 0, 2105, 0, 0, 0, 0, 0, 0,
	0, 0, 2051, 0, 0, 0, 3790, 0, 2428, 2433,
	0, 0, 0, 2071, 0, 0, 0, 0, 5661, 0,
	0, 0, 2429, 2068, 0, 0, 1429, 0, 1429, 0,
	0, 0, 1428, 0, 1428, 0, 0, 0, 0, 0,
	0, 1732, 1732, 1732, 1732, 1429, 0, 0, 1429, 127,
	1430, 1428, 4662, 2479, 1428, 2289, 0, 0, 0, 0,
	0, 0, 2285, 0, 0, 3077, 3077, 3077, 3077, 0,
	0, 0, 4007, 0, 0, 0, 0, 2436, 0, 0,
	0, 0, 4299, 3806, 0, 0, 0, 0, 0, 0,
	0, 3808, 3809, 3810, 3811, 2057, 0, 0, 0, 0,
	0, 806, 2429, 0, 0, 0, 2074, 2075, 2076, 2077,
	2484, 0, 0, 0, 0, 0, 2057, 0, 0, 0,
	4711, 0, 314, 0, 314, 0, 0, 3800, 314, 0,
	0, 0, 0, 0, 4005, 0, 0, 0, 0, 2434,
	0, 1753, 1510, 1519, 314, 0, 314, 2256, 0, 2079,
	2081, 0, 2423, 0, 314, 0, 823, 2436, 0, 0,
	0, 0, 0, 314, 0, 127, 0, 127, 0, 127,
	2079, 2081, 0, 0, 0, 0, 2485, 0, 0, 0,
	0, 0, 0, 0, 4006, 2342, 3784, 3785, 0, 3802,
	3803, 3804, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 2066, 2067, 0, 0, 0, 314, 0, 2102,
	0, 0, 2489, 0, 2421, 1716, 2072, 0, 0, 2434,
	0, 0, 0, 0, 1248, 127, 127, 0, 0, 3784,
	3785, 0, 3802, 3803, 3804, 0, 0, 2072, 0, 896,
	0, 127, 0, 127, 0, 0, 3784, 3785, 0, 3802,
	3803, 3804, 4305, 0, 0, 2289, 2836, 127, 0, 127,
	1778, 0, 2285, 0, 2422, 0, 0, 3799, 0, 4304,
	0, 0, 0, 0, 0, 0, 0, 903, 0, 903,
	3363, 2430, 0, 0, 0, 2477, 0, 0, 0, 903,
	903, 0, 0, 0, 0, 3801, 2487, 0, 2102, 0,
	0, 2289, 2289, 0, 0, 0, 0, 0, 2285, 2285,
	3799, 0, 0, 2483, 1861, 0, 0, 0, 0, 2102,
	0, 0, 3364, 0, 0, 0, 0, 3799, 127, 0,
	1876, 0, 0, 2289, 2289, 0, 0, 0, 0, 0,
	2285, 2285, 0, 0, 2480, 0, 0, 0, 0, 2978,
	0, 2478, 0, 0, 0, 0, 0, 0, 0, 2488,
	0, 2430, 0, 0, 0, 0, 2289, 0, 0, 0,
	3790, 0, 0, 2285, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 0, 2073, 0, 0, 1429, 0, 1429,
	0, 0, 1906, 1428, 0, 1428, 1430, 0, 1430, 0,
	0, 0, 0, 0, 0, 2073, 0, 0, 0, 0,
	0, 0, 0, 3790, 0, 0, 0, 3807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3790, 0, 1226, 0, 4920, 2481, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 3806, 314, 0,
	3179, 0, 2104, 0, 0, 2119, 0, 3796, 3797, 3798,
	0, 0, 0, 0, 3795, 3793, 3794, 3786, 3787, 3788,
	3789, 3791, 3792, 2104, 2125, 0, 2289, 2289, 2131, 2289,
	0, 0, 0, 2285, 2285, 0, 2285, 0, 0, 314,
	3806, 3800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3806, 314, 4982,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 4996,
	0, 0, 0, 0, 3800, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 314, 0, 0, 0, 806, 0,
	314, 3800, 0, 5020, 1430, 0, 2053, 2054, 2055, 2056,
	2058, 2059, 896, 0, 0, 0, 1053, 0, 0, 1430,
	0, 2069, 2065, 2102, 2062, 2060, 2061, 2053, 2054, 2055,
	2056, 2058, 2059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 314,
	0, 2223, 0, 2226, 0, 127, 0, 0, 0, 0,
	3282, 0, 0, 0, 0, 896, 2102, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	2708, 0, 1430, 2102, 1430, 314, 0, 314, 0, 314,
	0, 314, 0, 314, 0, 314, 0, 0, 0, 0,
	0, 1430, 0, 0, 1430, 0, 1732, 1732, 0, 3801,
	0, 0, 1263, 0, 0, 0, 0, 0, 0, 0,
	2746, 0, 0, 2747, 0, 2748, 0, 2749, 0, 0,
	3077, 3077, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 314, 314, 314, 2289, 0, 314, 0,
	0, 0, 3801, 2285, 5106, 0, 4296, 4297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3801,
	0, 0, 0, 0, 0, 876, 0, 0, 0, 896,
	0, 2328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1732,
	1732, 1732, 1732, 1732, 1732, 1732, 1732, 1732, 1732, 1732,
	1732, 1732, 1732, 1732, 1732, 1732, 1732, 1732, 1732, 0,
	1732, 0, 0, 3077, 3077, 3077, 3077, 3077, 3077, 3077,
	3077, 3077, 3077, 3077, 3077, 3077, 3077, 3077, 3077, 3077,
	3077, 3077, 3077, 0, 3077, 0, 0, 0, 0, 4361,
	4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371,
	4372, 4373, 4374, 4375, 4376, 4377, 4378, 4379, 4380, 0,
	4384, 3796, 3797, 3798, 2912, 0, 0, 0, 3795, 3793,
	3794, 3786, 3787, 3788, 3789, 3791, 3792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2289, 0, 0, 0, 0, 0, 0, 2285, 0, 0,
	0, 0, 0, 0, 3796, 3797, 3798, 0, 0, 0,
	0, 3795, 3793, 3794, 3786, 3787, 3788, 3789, 3791, 3792,
	0, 3796, 3797, 3798, 0, 0, 0, 0, 3795, 3793,
	3794, 3786, 3787, 3788, 3789, 3791, 3792, 0, 0, 806,
	0, 0, 3103, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 2922, 2923,
	2924, 2941, 2942, 2943, 806, 0, 0, 0, 2049, 2050,
	0, 314, 0, 806, 0, 0, 0, 0, 0, 2944,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 2080, 0, 0, 0, 0, 0, 0, 0,
	2052, 0, 0, 0, 0, 314, 1519, 0, 0, 0,
	0, 2289, 314, 0, 314, 1753, 2105, 314, 2285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2105,
	0, 0, 0, 1430, 0, 1430, 2934, 0, 2051, 0,
	0, 0, 0, 0, 0, 0, 2930, 0, 0, 2071,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2068,
	0, 314, 1519, 0, 314, 823, 0, 823, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 314, 1248, 5334,
	1248, 3248, 0, 0, 0, 1778, 0, 314, 314, 0,
	0, 0, 314, 0, 314, 0, 0, 0, 0, 1510,
	0, 314, 314, 0, 1519, 1519, 3264, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 2618, 0, 4294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2935,
	2936, 2937, 2938, 0, 0, 0, 0, 5376, 0, 2929,
	5378, 0, 2074, 2075, 2076, 2077, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 903, 903, 0, 0, 903,
	903, 0, 0, 0, 0, 2655, 0, 0, 3307, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	314, 0, 0, 2668, 2670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 2674, 0, 0,
	0, 0, 0, 0, 0, 0, 2079, 2081, 314, 2289,
	0, 0, 2686, 2687, 2688, 2689, 2285, 0, 0, 0,
	0, 0, 0, 0, 0, 2939, 2940, 0, 0, 0,
	0, 3377, 0, 0, 0, 0, 0, 0, 2066, 2067,
	896, 0, 0, 0, 0, 896, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2932, 1226, 0, 0, 1226, 1226, 0, 0, 0, 0,
	0, 314, 0, 2072, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5481, 0, 5482, 0, 0, 0,
	0, 3437, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2897, 314, 3493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2125, 3841, 1753, 2102, 2125, 314, 0, 0,
	3437, 0, 0, 2289, 0, 0, 0, 0, 314, 0,
	2285, 0, 0, 0, 0, 0, 0, 0, 0, 3539,
	0, 2049, 2050, 0, 0, 0, 0, 0, 0, 3307,
	0, 806, 0, 0, 0, 0, 0, 0, 0, 0,
	1053, 3307, 0, 0, 0, 2080, 0, 3870, 0, 0,
	0, 0, 0, 2052, 0, 2078, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 3886, 0, 0, 2933, 0,
	0, 0, 0, 0, 1418, 0, 0, 0, 0, 0,
	0, 2073, 2105, 0, 314, 1510, 314, 0, 0, 0,
	2226, 2051, 0, 0, 0, 0, 3613, 314, 0, 3913,
	0, 1510, 2071, 1510, 0, 1510, 0, 0, 0, 0,
	0, 0, 2068, 0, 2289, 0, 0, 0, 0, 0,
	0, 2285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2104, 0, 0, 0,
	127, 0, 314, 0, 0, 0, 0, 0, 0, 2104,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 314,
	314, 314, 1510, 0, 0, 1510, 0, 0, 314, 0,
	0, 4293, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2074, 2075, 2076, 2077, 0,
	0, 0, 0, 0, 314, 2057, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2919, 2920, 2921, 2945, 2931, 2925, 0, 2927, 2928, 2926,
	2913, 2914, 2915, 2916, 2917, 2918, 0, 2069, 2065, 0,
	2062, 2060, 2061, 2053, 2054, 2055, 2056, 2058, 2059, 2079,
	2081, 0, 0, 0, 0, 0, 0, 0, 86, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 2066, 2067, 0, 0, 0, 0, 2289, 0, 0,
	0, 0, 0, 0, 2285, 92, 0, 2049, 2050, 0,
	2082, 2083, 2084, 2093, 2094, 2095, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2072, 0, 0, 0,
	2086, 2080, 0, 0, 0, 0, 0, 0, 0, 2052,
	1753, 0, 0, 0, 0, 0, 0, 0, 102, 0,
	2099, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2105, 0,
	0, 0, 0, 0, 0, 0, 0, 2051, 0, 3886,
	0, 0, 0, 0, 0, 0, 0, 0, 2071, 0,
	0, 1047, 0, 0, 0, 0, 0, 0, 2068, 0,
	0, 0, 0, 0, 56, 0, 125, 0, 2102, 0,
	0, 0, 109, 122, 1732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2289,
	0, 0, 0, 0, 0, 0, 2285, 0, 3077, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 127,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5066, 0, 0, 0, 2078, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	0, 2074, 2075, 2076, 2077, 0, 3429, 0, 0, 0,
	314, 2057, 0, 0, 2073, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 127, 0, 0, 127, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3077, 0, 314, 4273, 0,
	0, 1601, 806, 0, 2090, 0, 0, 806, 2100, 0,
	806, 0, 0, 806, 806, 2079, 2081, 0, 0, 806,
	0, 5122, 806, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 2104, 0, 0, 0, 0, 0, 2096, 0,
	2097, 0, 314, 0, 0, 0, 0, 2066, 2067, 0,
	0, 0, 0, 314, 0, 0, 1753, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 2088, 2085, 0,
	0, 3784, 3785, 0, 3802, 3803, 3804, 0, 0, 0,
	4317, 823, 2072, 0, 0, 0, 0, 3582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4333, 3589, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	314, 314, 0, 114, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2069, 2065, 2098, 2062, 2060, 2061, 2053, 2054, 2055, 2056,
	2058, 2059, 0, 0, 3307, 3307, 314, 0, 3963, 3966,
	0, 0, 3799, 2087, 0, 3307, 0, 2256, 0, 0,
	0, 0, 0, 0, 2102, 0, 3307, 2256, 0, 3307,
	2256, 0, 213, 2256, 117, 0, 3963, 121, 0, 0,
	1732, 0, 0, 0, 3641, 0, 0, 0, 314, 314,
	3966, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3784, 3785, 3077, 3802, 3803, 3804, 0, 276,
	2897, 3966, 0, 314, 0, 0, 0, 1048, 4036, 3966,
	0, 0, 0, 171, 2078, 0, 0, 0, 0, 0,
	5269, 2125, 4047, 0, 4047, 0, 1732, 0, 0, 0,
	4431, 0, 0, 0, 1510, 0, 0, 0, 0, 0,
	2073, 0, 0, 0, 0, 3790, 0, 0, 0, 0,
	3077, 1732, 0, 278, 0, 0, 0, 0, 3307, 0,
	3307, 0, 4083, 3307, 3966, 0, 0, 3307, 0, 0,
	0, 0, 2091, 3799, 0, 3077, 5304, 0, 0, 0,
	0, 176, 0, 0, 3966, 0, 0, 896, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 5326, 0, 0, 0, 0, 277, 0, 2104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	0, 0, 3806, 0, 0, 270, 314, 0, 0, 0,
	0, 2085, 0, 0, 271, 0, 0, 0, 214, 0,
	0, 0, 0, 218, 314, 0, 0, 4138, 0, 0,
	4143, 3307, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 1519, 0, 217, 0, 3800, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3790, 0, 314, 0,
	0, 0, 0, 3539, 0, 0, 1510, 0, 314, 0,
	2089, 3307, 0, 806, 0, 0, 0, 0, 0, 0,
	3307, 0, 2063, 2064, 2070, 2092, 2069, 2065, 0, 2062,
	2060, 2061, 2053, 2054, 2055, 2056, 2058, 2059, 0, 0,
	0, 0, 0, 3756, 0, 0, 0, 3757, 0, 1418,
	0, 2049, 2050, 0, 0, 0, 0, 2093, 2094, 2095,
	0, 0, 0, 0, 0, 2049, 2050, 0, 2102, 0,
	4259, 0, 0, 0, 0, 2080, 0, 0, 0, 0,
	0, 0, 0, 2052, 0, 0, 1418, 0, 0, 2080,
	0, 0, 0, 4266, 2099, 4267, 0, 2052, 1753, 0,
	0, 314, 0, 0, 0, 0, 0, 1510, 314, 0,
	314, 0, 2105, 0, 0, 0, 1510, 3800, 0, 1510,
	0, 2051, 0, 0, 0, 2085, 2105, 0, 0, 0,
	0, 0, 2071, 0, 0, 2051, 3463, 0, 0, 0,
	0, 0, 2068, 0, 0, 0, 2071, 0, 314, 0,
	0, 2085, 0, 0, 3801, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3453, 3451, 0, 0, 0, 0, 0, 2085, 3455,
	3457, 3447, 0, 0, 2085, 0, 0, 0, 0, 0,
	2085, 0, 0, 0, 0, 0, 0, 0, 0, 2102,
	0, 0, 0, 0, 0, 0, 0, 4338, 0, 0,
	0, 0, 0, 0, 0, 3696, 0, 0, 0, 0,
	0, 0, 0, 0, 3473, 2074, 2075, 2076, 2077, 0,
	0, 0, 0, 0, 0, 2057, 0, 0, 0, 2074,
	2075, 2076, 2077, 0, 0, 0, 0, 0, 0, 2057,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	127, 0, 127, 0, 0, 0, 0, 0, 2090, 0,
	0, 0, 2100, 0, 0, 3801, 0, 2085, 0, 2079,
	2081, 0, 2085, 0, 4397, 0, 0, 0, 0, 0,
	0, 0, 0, 2079, 2081, 0, 2085, 0, 0, 314,
	314, 2085, 0, 0, 0, 0, 3796, 3797, 3798, 0,
	0, 2066, 2067, 3795, 3793, 3794, 3786, 3787, 3788, 3789,
	3791, 3792, 0, 0, 806, 2066, 2067, 4422, 806, 0,
	0, 2088, 0, 0, 0, 0, 806, 127, 127, 0,
	127, 0, 0, 0, 0, 0, 2072, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2072, 0, 0, 0, 0, 0, 0, 0, 0, 2085,
	0, 3449, 4792, 0, 314, 2085, 0, 0, 0, 0,
	0, 0, 3465, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5464, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3464, 3454, 3452, 3456,
	3458, 3448, 3450, 3466, 3468, 4822, 0, 0, 0, 0,
	0, 0, 0, 2476, 0, 3460, 3462, 3470, 2102, 0,
	0, 0, 0, 0, 0, 0, 0, 3796, 3797, 3798,
	0, 0, 2102, 0, 3795, 3793, 3794, 3786, 3787, 3788,
	3789, 3791, 3792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3474, 0, 0, 2486, 896, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1418, 0, 0,
	1248, 0, 0, 0, 0, 0, 0, 2209, 2078, 0,
	0, 0, 0, 0, 127, 127, 0, 0, 0, 0,
	0, 4547, 2078, 0, 4549, 0, 0, 4552, 0, 0,
	0, 0, 0, 0, 2073, 4047, 0, 4136, 4137, 2085,
	2085, 2085, 2085, 2085, 2085, 2085, 2085, 0, 2073, 0,
	0, 314, 0, 0, 2482, 0, 0, 0, 0, 2085,
	0, 0, 0, 0, 0, 0, 2091, 0, 0, 0,
	0, 0, 2085, 0, 0, 3437, 0, 0, 0, 0,
	0, 0, 2049, 2050, 0, 0, 0, 0, 0, 0,
	3966, 0, 314, 0, 0, 0, 823, 823, 1519, 0,
	4217, 0, 2104, 0, 0, 0, 2080, 0, 3467, 0,
	0, 0, 4243, 0, 2052, 0, 2104, 2479, 0, 0,
	0, 3081, 0, 0, 0, 0, 314, 0, 4632, 0,
	0, 3539, 2256, 0, 0, 0, 2085, 314, 0, 0,
	0, 0, 2085, 2105, 4653, 0, 3437, 0, 0, 314,
	0, 0, 2051, 314, 0, 314, 0, 0, 0, 0,
	314, 0, 0, 2071, 0, 5465, 0, 0, 0, 0,
	0, 0, 0, 2068, 2484, 0, 0, 0, 0, 3307,
	314, 0, 0, 3475, 2089, 0, 0, 0, 0, 0,
	0, 1053, 3307, 3459, 3461, 0, 0, 3469, 1601, 2092,
	2069, 2065, 0, 2062, 2060, 2061, 2053, 2054, 2055, 2056,
	2058, 2059, 0, 0, 2069, 2065, 0, 2062, 2060, 2061,
	2053, 2054, 2055, 2056, 2058, 2059, 314, 1255, 5058, 0,
	3966, 0, 3689, 3264, 0, 0, 0, 0, 0, 0,
	2485, 0, 0, 0, 3052, 3053, 3054, 3055, 3048, 3049,
	3050, 3051, 0, 0, 0, 0, 2074, 2075, 2076, 2077,
	0, 0, 0, 0, 0, 0, 2057, 0, 0, 0,
	0, 0, 0, 5058, 0, 0, 2489, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1418, 1418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2079, 2081, 0, 0, 0, 2836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3028, 3029, 3030,
	3031, 0, 0, 0, 0, 0, 0, 0, 0, 2477,
	0, 0, 2066, 2067, 0, 0, 0, 0, 0, 0,
	2487, 3040, 3041, 3042, 3043, 3036, 3037, 3038, 3039, 3044,
	3045, 3046, 3047, 0, 0, 314, 0, 2483, 0, 0,
	0, 1753, 0, 314, 0, 0, 3364, 2072, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 2836, 0, 0, 0, 2480, 0,
	0, 0, 0, 0, 0, 2478, 0, 0, 0, 0,
	0, 0, 0, 2488, 1519, 1519, 1519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 1519, 1519,
	0, 314, 1519, 0, 0, 0, 3024, 3025, 3026, 3027,
	3032, 3033, 3034, 3035, 0, 5466, 0, 3307, 3307, 0,
	3963, 0, 0, 4047, 3307, 0, 0, 0, 0, 2102,
	0, 0, 4872, 0, 4872, 1753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3307, 0, 2256, 0,
	0, 0, 3963, 0, 1753, 1753, 314, 3966, 0, 2481,
	0, 0, 0, 5467, 0, 0, 0, 0, 0, 0,
	3966, 0, 314, 3966, 0, 314, 4908, 0, 0, 0,
	0, 4047, 0, 0, 4047, 0, 0, 0, 4047, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 0, 0, 0, 0, 0, 0, 3307, 0, 3307,
	314, 0, 0, 0, 0, 2073, 0, 0, 0, 0,
	0, 0, 3437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3307,
	3307, 0, 0, 0, 4872, 0, 3539, 0, 4980, 0,
	0, 0, 0, 0, 3963, 0, 0, 0, 0, 932,
	0, 0, 0, 2104, 0, 0, 0, 4580, 0, 0,
	0, 0, 314, 127, 0, 0, 0, 0, 4593, 4594,
	0, 0, 0, 314, 0, 0, 0, 0, 4596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1418,
	0, 0, 0, 0, 0, 0, 2085, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2049, 2050, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2085, 127, 0, 0, 0, 0, 2080, 0, 0, 0,
	0, 0, 0, 0, 2052, 0, 0, 0, 0, 0,
	0, 2069, 2065, 0, 2062, 2060, 2061, 2053, 2054, 2055,
	2056, 2058, 2059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2085, 2105, 0, 0, 2085, 0, 0, 0,
	0, 4689, 2051, 0, 0, 0, 2668, 4695, 4696, 0,
	2085, 0, 0, 2071, 0, 0, 0, 4422, 0, 0,
	0, 2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085,
	2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085,
	2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085,
	2085, 2085, 2085, 2085, 2085, 2085, 2085, 0, 0, 0,
	0, 0, 2085, 0, 2085, 2085, 2085, 2085, 3307, 2256,
	0, 2256, 0, 0, 4653, 0, 3081, 3081, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 2085, 0, 5138, 0, 5138, 0, 127, 0, 0,
	0, 0, 0, 0, 1418, 0, 2074, 2075, 2076, 2077,
	0, 0, 1418, 0, 0, 0, 2057, 0, 0, 0,
	896, 0, 0, 0, 1528, 0, 0, 0, 0, 0,
	0, 0, 0, 4047, 1753, 0, 0, 0, 1753, 0,
	1510, 0, 2085, 0, 0, 0, 0, 0, 0, 0,
	0, 1255, 1255, 1255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3966, 0, 314,
	2079, 2081, 2085, 0, 0, 2085, 0, 0, 2085, 0,
	0, 2085, 0, 0, 0, 0, 0, 2085, 2085, 2085,
	2085, 2085, 2085, 2085, 0, 0, 4653, 0, 0, 0,
	4872, 0, 4872, 0, 1753, 1702, 0, 0, 3307, 0,
	0, 1728, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 4801, 4802, 0, 0, 0, 0, 5233,
	0, 0, 0, 0, 0, 0, 0, 2072, 0, 0,
	1755, 1753, 1761, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2085, 0, 0, 3805,
	0, 3081, 3081, 3081, 3081, 127, 0, 2085, 0, 2085,
	0, 314, 314, 0, 2085, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 0, 0,
	0, 0, 0, 0, 0, 4338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 1869, 2102,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 0,
	4047, 5295, 1883, 0, 1888, 0, 0, 0, 4653, 0,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4872, 0,
	127, 0, 0, 0, 0, 0, 0, 102, 0, 0,
	0, 0, 0, 4872, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 2668, 0, 0, 0, 2073, 1956, 0, 0, 1962,
	1047, 0, 0, 0, 0, 0, 0, 0, 0, 823,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 109, 122, 0, 0, 0, 4872, 0, 4872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4872, 0, 314, 4872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2256, 0,
	0, 0, 0, 2104, 0, 0, 0, 0, 0, 1753,
	0, 1753, 0, 0, 5028, 0, 5030, 5031, 5032, 0,
	5034, 0, 0, 0, 0, 0, 0, 0, 110, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1519, 1519, 2106, 2107, 2108, 2109,
	2110, 2111, 2112, 2113, 0, 0, 0, 0, 0, 5425,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5138, 0, 0, 314, 0,
	2126, 0, 0, 0, 0, 0, 2139, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3307, 0, 2062, 2060, 2061, 2053, 2054, 2055,
	2056, 2058, 2059, 0, 0, 5086, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 1471,
	4338, 0, 0, 0, 0, 0, 0, 86, 0, 53,
	52, 3208, 0, 0, 0, 0, 0, 1494, 0, 1494,
	1494, 0, 0, 932, 0, 0, 87, 1753, 0, 0,
	80, 0, 114, 0, 2203, 2203, 2203, 0, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 2085,
	2085, 0, 2085, 0, 0, 74, 0, 0, 0, 0,
	0, 0, 55, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 0, 0, 102, 0, 0,
	5178, 213, 0, 117, 2897, 0, 121, 0, 0, 0,
	0, 0, 0, 0, 1696, 1471, 0, 4653, 1712, 932,
	0, 0, 0, 0, 0, 57, 75, 0, 0, 0,
	0, 0, 0, 0, 0, 58, 0, 0, 276, 0,
	64, 0, 0, 0, 0, 81, 1048, 0, 0, 0,
	0, 0, 171, 56, 0, 125, 0, 0, 0, 0,
	0, 109, 122, 0, 0, 3307, 0, 0, 0, 0,
	0, 76, 0, 0, 0, 0, 0, 4872, 0, 4872,
	0, 0, 1753, 0, 0, 0, 0, 2085, 0, 0,
	0, 0, 278, 932, 932, 0, 0, 0, 0, 0,
	1255, 0, 0, 0, 0, 0, 0, 59, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 1305, 0, 110, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 3307, 0,
	127, 0, 0, 2085, 2085, 0, 3081, 3081, 0, 0,
	2085, 0, 0, 0, 270, 3437, 0, 0, 0, 0,
	3805, 3805, 0, 271, 2085, 2085, 0, 214, 0, 313,
	313, 313, 218, 3307, 2085, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3437, 2085, 0,
	0, 0, 0, 217, 0, 0, 313, 0, 127, 0,
	2085, 127, 0, 77, 974, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 974, 0, 0, 0, 0, 3081,
	3081, 3081, 3081, 3081, 3081, 3081, 3081, 3081, 3081, 3081,
	3081, 3081, 3081, 3081, 3081, 3081, 3081, 3081, 3081, 0,
	3081, 3805, 3805, 3805, 3805, 0, 0, 0, 0, 2049,
	2050, 0, 2082, 2083, 2084, 2093, 2094, 2095, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2086, 2080, 0, 0, 0, 0, 2085, 0,
	60, 2052, 0, 0, 2668, 0, 0, 0, 0, 0,
	0, 0, 2099, 0, 0, 0, 0, 63, 0, 0,
	0, 0, 66, 0, 0, 0, 0, 0, 0, 0,
	2105, 0, 78, 0, 0, 0, 0, 0, 0, 2051,
	65, 213, 0, 117, 0, 127, 121, 127, 0, 0,
	2071, 0, 61, 0, 0, 0, 179, 0, 0, 0,
	2068, 0, 0, 0, 62, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 69, 0, 0, 0,
	0, 0, 171, 0, 0, 1431, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2074, 2075, 2076, 2077, 0, 0, 2085,
	0, 0, 0, 2057, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 2733, 0, 277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2090, 0, 0, 0,
	2100, 0, 0, 1712, 270, 0, 0, 2079, 2081, 0,
	0, 0, 0, 271, 0, 0, 0, 214, 2085, 2085,
	0, 0, 218, 0, 0, 0, 2767, 0, 0, 0,
	2096, 0, 2097, 0, 0, 0, 0, 0, 0, 2066,
	2067, 0, 0, 217, 0, 0, 3, 0, 0, 0,
	0, 0, 0, 0, 0, 1494, 0, 0, 0, 2088,
	0, 0, 0, 2809, 1712, 2813, 0, 0, 0, 0,
	0, 0, 2827, 0, 2072, 1255, 0, 0, 0, 0,
	0, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846,
	2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856,
	2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866,
	2867, 2868, 2869, 2870, 2871, 2872, 2873, 0, 2879, 0,
	2881, 2882, 2883, 2884, 2098, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 2908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2102, 0, 2126, 0,
	0, 0, 2959, 0, 0, 0, 0, 0, 1343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2989, 2992,
	2995, 2998, 0, 0, 3004, 3005, 3006, 3007, 3008, 3009,
	3010, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3073, 2078, 3084, 3086, 3091,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2073, 0, 2085, 2085, 0, 0, 2085, 3805,
	3805, 2085, 0, 0, 0, 2085, 0, 0, 0, 0,
	0, 0, 2085, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2091, 2085, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 2085,
	2085, 2085, 2085, 0, 0, 0, 0, 0, 0, 2085,
	2104, 2085, 0, 0, 3805, 3805, 3805, 3805, 3805, 3805,
	3805, 3805, 3805, 3805, 3805, 3805, 3805, 3805, 3805, 3805,
	3805, 3805, 3805, 3805, 0, 0, 0, 3805, 0, 0,
	2085, 2085, 0, 0, 0, 0, 2599, 0, 0, 0,
	0, 0, 0, 2085, 0, 0, 0, 0, 0, 0,
	0, 0, 2085, 0, 86, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2624, 0, 0, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 2089, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 2063, 2064, 2070, 2092, 2069, 2065,
	0, 2062, 2060, 2061, 2053, 2054, 2055, 2056, 2058, 2059,
	0, 0, 0, 0, 0, 2955, 0, 0, 0, 2956,
	0, 0, 0, 2085, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 1435, 0, 0,
	0, 2085, 0, 0, 0, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 313, 313, 0, 0,
	313, 0, 2085, 0, 0, 0, 0, 1047, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 940, 0,
	56, 0, 125, 0, 0, 0, 0, 0, 109, 122,
	0, 0, 0, 0, 2085, 2085, 0, 0, 0, 0,
	0, 0, 0, 0, 952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 950, 0, 0, 0, 0,
	0, 2624, 2758, 0, 0, 2761, 0, 0, 313, 0,
	313, 313, 313, 0, 0, 313, 313, 0, 0, 953,
	0, 0, 0, 0, 0, 110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3496, 3497, 0, 3499, 0, 0, 0,
	0, 0, 0, 0, 946, 0, 0, 0, 0, 0,
	0, 961, 0, 0, 0, 0, 0, 0, 0, 2085,
	313, 313, 0, 0, 0, 0, 0, 951, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 313, 0,
	0, 86, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2085, 2085, 0, 0,
	87, 2085, 2085, 0, 0, 2085, 2085, 0, 0, 0,
	2085, 0, 945, 0, 2085, 0, 0, 0, 92, 2085,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 871,
	0, 0, 0, 0, 3081, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 0, 0, 0, 948, 0, 0,
	0, 102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3624, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1047, 0, 0, 0, 213, 86,
	117, 0, 0, 121, 0, 0, 313, 56, 0, 125,
	0, 3081, 0, 0, 960, 109, 122, 0, 87, 0,
	0, 0, 932, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1471, 276, 92, 0, 0, 0,
	0, 0, 0, 1048, 2106, 2107, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2085, 0, 0, 0, 932, 102,
	0, 0, 110, 0, 0, 0, 0, 0, 0, 278,
	0, 1471, 0, 0, 1471, 0, 0, 0, 942, 0,
	0, 0, 3690, 3691, 1494, 3251, 0, 0, 3697, 1494,
	0, 1494, 0, 0, 2085, 2085, 0, 176, 932, 932,
	0, 0, 1047, 0, 0, 0, 0, 3711, 3712, 0,
	0, 947, 0, 2959, 219, 0, 0, 125, 0, 0,
	0, 0, 277, 109, 122, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 870, 214, 0, 0, 0, 3721, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 956,
	0, 0, 0, 0, 3735, 0, 0, 0, 944, 0,
	1858, 0, 0, 0, 0, 0, 2085, 2085, 2085, 0,
	110, 3747, 0, 0, 0, 0, 0, 2085, 2085, 3805,
	3081, 0, 0, 0, 0, 1696, 2085, 0, 0, 2085,
	0, 0, 0, 0, 0, 0, 2225, 0, 1431, 0,
	0, 0, 313, 0, 0, 0, 114, 0, 0, 0,
	0, 941, 0, 0, 0, 0, 0, 954, 313, 2225,
	313, 0, 0, 0, 0, 0, 0, 0, 974, 0,
	0, 0, 0, 0, 0, 3805, 3081, 974, 0, 0,
	0, 949, 0, 0, 0, 0, 0, 0, 1712, 0,
	0, 0, 2085, 0, 0, 0, 0, 872, 0, 0,
	2085, 3081, 0, 0, 0, 213, 0, 117, 2085, 943,
	121, 1435, 313, 0, 0, 3091, 3091, 3091, 0, 1435,
	2085, 313, 2085, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2085, 0, 2203, 0, 0, 958, 959, 0,
	955, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	1048, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 3845, 1435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1435, 0, 0, 0, 0, 0, 0, 1435, 0,
	0, 0, 3805, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 213, 1435, 117, 0, 0, 121, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 2085, 3805, 0, 0,
	2085, 0, 0, 1712, 0, 0, 0, 0, 270, 0,
	276, 0, 0, 0, 932, 0, 0, 271, 1048, 3805,
	0, 214, 0, 0, 171, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1435, 1255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 0, 1255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1712, 0, 1712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3996, 0, 176, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 974, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 0,
	0, 1494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 313, 0, 271, 0, 0, 0, 214,
	0, 0, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	4065, 4066, 0, 313, 0, 217, 0, 0, 0, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 313, 0,
	2085, 0, 0, 0, 313, 0, 0, 2049, 2050, 0,
	2082, 2083, 2084, 2093, 2094, 2095, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2085, 0, 0, 0,
	2086, 2080, 0, 0, 0, 0, 0, 0, 0, 2052,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2099, 0, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2105, 0,
	0, 0, 0, 0, 0, 0, 313, 2051, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2071, 974,
	0, 313, 0, 313, 0, 313, 0, 313, 2068, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2085, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1435, 0,
	1435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1435, 313, 313, 313, 313,
	0, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2293, 0,
	0, 0, 0, 0, 0, 1435, 0, 0, 2085, 0,
	0, 2074, 2075, 2076, 2077, 0, 0, 0, 0, 0,
	0, 2057, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 0, 0, 2100, 0,
	0, 0, 0, 0, 0, 2079, 2081, 0, 0, 2827,
	0, 0, 0, 0, 0, 0, 4291, 4292, 0, 0,
	4295, 0, 0, 0, 4298, 0, 0, 0, 2096, 0,
	2097, 0, 0, 4302, 0, 0, 0, 2066, 2067, 1435,
	0, 0, 4309, 0, 0, 0, 0, 3845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2088, 0, 0,
	0, 0, 4322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4345, 4346, 0, 4347, 4348, 4349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4356, 0, 0, 0,
	4358, 0, 0, 1494, 0, 0, 0, 1712, 1712, 0,
	0, 0, 2098, 0, 0, 0, 0, 0, 0, 1431,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4387, 4388, 1431, 0, 0, 0, 0,
	0, 0, 0, 0, 2102, 0, 0, 0, 0, 313,
	0, 0, 0, 4400, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4409, 313,
	0, 0, 0, 0, 0, 0, 974, 0, 974, 0,
	0, 313, 0, 0, 0, 0, 1712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1435, 1435, 2078, 0, 0, 0, 0, 0,
	2624, 0, 0, 1435, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 974, 0,
	2073, 0, 0, 0, 0, 0, 0, 0, 313, 1435,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 313, 0, 0, 0, 313, 0, 313, 0,
	0, 0, 2091, 0, 0, 313, 313, 0, 4480, 0,
	1435, 0, 0, 0, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4498, 0, 2104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1435, 0, 1435, 0, 1435,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4529, 0, 0, 0, 0, 0, 0, 1435, 1435, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 0, 0,
	0, 1435, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 0, 1435, 0, 0, 1435, 1435, 1435, 1435,
	0, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	2089, 4561, 4562, 0, 0, 932, 0, 0, 0, 0,
	0, 0, 2063, 2064, 2070, 2092, 2069, 2065, 0, 2062,
	2060, 2061, 2053, 2054, 2055, 2056, 2058, 2059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2049, 2050, 0, 2082, 2083,
	2084, 2093, 2094, 2095, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2086, 2080,
	0, 0, 0, 0, 0, 0, 0, 2052, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2105, 974, 0, 0,
	2203, 0, 0, 0, 0, 2051, 0, 1712, 0, 0,
	0, 0, 0, 0, 0, 0, 2071, 0, 2293, 2293,
	1435, 0, 0, 0, 0, 0, 2068, 2203, 0, 0,
	0, 313, 0, 0, 0, 0, 4686, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2074,
	2075, 2076, 2077, 1435, 0, 0, 0, 0, 313, 2057,
	313, 4733, 4734, 0, 0, 0, 0, 4738, 4739, 0,
	0, 313, 4742, 4743, 0, 0, 0, 0, 0, 0,
	4747, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2090, 0, 0, 0, 2100, 4756, 0, 0,
	0, 0, 0, 2079, 2081, 0, 313, 0, 0, 0,
	0, 1435, 0, 0, 0, 0, 0, 0, 1435, 0,
	0, 0, 313, 313, 313, 313, 2096, 1435, 2097, 0,
	0, 0, 313, 0, 0, 2066, 2067, 313, 0, 0,
	0, 0, 0, 0, 1435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	2072, 0, 0, 0, 0, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	2098, 86, 0, 53, 52, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 2087, 0, 0, 0, 0, 1255, 0, 0, 0,
	0, 0, 2102, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 74,
	0, 0, 0, 0, 0, 0, 55, 0, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 54, 0,
	0, 102, 0, 0, 1435, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4921, 0, 0, 0, 0, 0, 0, 57,
	75, 0, 0, 0, 0, 0, 0, 0, 2073, 58,
	0, 0, 0, 0, 64, 0, 0, 0, 0, 5696,
	0, 0, 0, 2293, 0, 0, 0, 56, 0, 125,
	0, 0, 0, 0, 0, 109, 122, 0, 932, 0,
	2091, 0, 0, 0, 0, 76, 0, 0, 0, 4961,
	4962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2104, 0, 0, 0,
	0, 59, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1435, 0,
	0, 0, 110, 0, 0, 0, 0, 0, 0, 0,
	1435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1431, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2089, 0,
	0, 1431, 0, 5053, 5054, 5055, 0, 0, 0, 0,
	2063, 2064, 2070, 2092, 2069, 2065, 0, 2062, 2060, 2061,
	2053, 2054, 2055, 2056, 2058, 2059, 2827, 77, 0, 5064,
	5065, 0, 0, 0, 2225, 4761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 5073, 5076, 0,
	0, 0, 0, 0, 0, 0, 0, 974, 0, 0,
	0, 1435, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1435, 0, 1435, 0, 0, 0, 0,
	0, 1435, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1435, 1435, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 114, 0, 0, 0,
	313, 0, 0, 0, 313, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 60, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5139,
	0, 63, 0, 0, 0, 0, 66, 0, 5147, 0,
	313, 0, 0, 0, 0, 0, 78, 0, 0, 0,
	0, 0, 0, 5155, 65, 213, 1255, 117, 0, 0,
	121, 0, 5554, 0, 0, 0, 61, 0, 1435, 0,
	179, 0, 0, 0, 0, 0, 0, 5167, 62, 0,
	5169, 0, 313, 313, 0, 0, 313, 0, 0, 0,
	0, 0, 276, 2225, 5179, 0, 0, 0, 0, 0,
	69, 0, 0, 0, 3110, 0, 171, 313, 0, 0,
	0, 2049, 2050, 0, 2082, 2083, 2084, 2093, 2094, 2095,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2086, 2080, 0, 0, 0, 3108,
	0, 0, 0, 2052, 3112, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 2099, 0, 0, 0, 932, 0,
	0, 0, 0, 0, 0, 0, 3113, 0, 0, 0,
	0, 0, 2105, 0, 176, 0, 0, 0, 0, 0,
	0, 2051, 0, 0, 79, 0, 0, 0, 0, 0,
	0, 219, 2071, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 2068, 0, 0, 0, 0, 0, 3114, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	313, 214, 2624, 0, 0, 0, 218, 3115, 0, 0,
	0, 0, 0, 0, 3116, 0, 0, 0, 974, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3117, 0, 5303,
	0, 0, 313, 5307, 0, 2074, 2075, 2076, 2077, 0,
	0, 0, 1431, 0, 0, 2057, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2090, 0,
	3118, 0, 2100, 0, 0, 0, 0, 0, 0, 2079,
	2081, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3119, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3120, 2096, 0, 2097, 0, 0, 0, 0, 0,
	0, 2066, 2067, 0, 0, 313, 0, 0, 0, 0,
	0, 0, 313, 0, 313, 0, 0, 3121, 0, 0,
	0, 2088, 0, 0, 0, 0, 1435, 1435, 0, 0,
	0, 0, 0, 0, 0, 0, 2072, 0, 0, 0,
	0, 0, 0, 0, 2827, 0, 0, 0, 0, 0,
	0, 0, 313, 5076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1435, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1435, 0, 0, 0, 0, 2098, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1435, 0, 0, 1435,
	0, 0, 0, 0, 0, 0, 0, 2087, 0, 0,
	1255, 0, 0, 0, 0, 856, 0, 0, 2102, 3122,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2293,
	0, 0, 0, 1435, 0, 0, 840, 0, 0, 0,
	0, 841, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2078, 5507,
	5507, 5507, 0, 0, 842, 0, 0, 0, 0, 0,
	0, 3123, 3124, 0, 0, 843, 0, 0, 0, 0,
	0, 0, 0, 0, 2073, 0, 0, 1320, 0, 0,
	0, 0, 0, 1431, 1431, 0, 0, 0, 844, 5533,
	3125, 0, 0, 0, 2293, 0, 0, 0, 0, 0,
	3130, 0, 0, 0, 0, 0, 2091, 0, 0, 0,
	0, 862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3126, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 315, 315, 0, 845, 0, 3127, 0, 0, 0,
	0, 0, 2104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5507, 0, 0, 0, 0, 315, 974, 846,
	838, 0, 0, 0, 0, 315, 0, 0, 3128, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 847, 0, 0, 0, 0, 839,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 1435,
	0, 0, 5621, 0, 0, 0, 871, 0, 0, 0,
	0, 0, 3129, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2089, 0, 0, 0, 0, 1712,
	0, 0, 0, 0, 861, 0, 2063, 2064, 2070, 2092,
	2069, 2065, 0, 2062, 2060, 2061, 2053, 2054, 2055, 2056,
	2058, 2059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1435, 0, 1435,
	0, 0, 0, 1435, 0, 0, 0, 0, 0, 0,
	0, 1435, 1435, 0, 0, 0, 0, 0, 5507, 5685,
	0, 858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 2049, 2050, 0,
	2082, 2083, 2084, 2093, 2094, 2095, 0, 0, 0, 0,
	0, 0, 0, 0, 1435, 0, 0, 0, 0, 0,
	2086, 2080, 0, 0, 0, 0, 0, 0, 0, 2052,
	0, 0, 0, 0, 1435, 0, 313, 932, 0, 0,
	2099, 0, 0, 0, 0, 0, 1435, 0, 1435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2105, 868,
	0, 849, 0, 0, 0, 0, 0, 2051, 0, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 2071, 0,
	0, 313, 0, 0, 0, 0, 0, 0, 2068, 0,
	0, 0, 869, 313, 850, 0, 0, 313, 0, 313,
	0, 0, 0, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 1435, 0, 0, 1435, 0, 0, 0, 0,
	0, 0, 0, 0, 1431, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	870, 0, 0, 0, 0, 0, 0, 0, 851, 0,
	0, 0, 0, 866, 867, 0, 864, 0, 0, 0,
	0, 0, 0, 0, 0, 859, 0, 0, 852, 0,
	313, 2074, 2075, 2076, 2077, 2293, 0, 0, 0, 0,
	0, 2057, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1435, 0, 0, 0, 0, 853, 0, 860, 0,
	0, 2293, 2293, 0, 2090, 0, 0, 854, 2100, 0,
	0, 0, 0, 0, 0, 2079, 2081, 0, 0, 0,
	0, 0, 0, 855, 0, 0, 0, 0, 863, 0,
	0, 0, 0, 2293, 2293, 0, 0, 0, 2096, 0,
	2097, 0, 0, 0, 872, 0, 0, 2066, 2067, 0,
	0, 0, 0, 0, 0, 0, 857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2293, 2088, 2049, 2050,
	0, 2082, 2083, 2084, 2093, 2094, 2095, 0, 0, 0,
	0, 0, 2072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2080, 0, 0, 1435, 1435, 0, 0, 1431,
	2052, 0, 0, 0, 0, 319, 0, 1431, 0, 0,
	0, 2099, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2225, 0, 0, 0, 2105,
	0, 0, 2098, 0, 1435, 0, 0, 0, 2051, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2071,
	0, 0, 0, 2087, 0, 0, 0, 0, 0, 2068,
	0, 0, 0, 0, 2102, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2293, 0, 2293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 966, 0, 0, 2225, 0, 2225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 966, 2078, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 313,
	0, 0, 2074, 2075, 2076, 2077, 0, 0, 0, 0,
	2073, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 2091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2090, 0, 0, 0, 2100,
	0, 0, 0, 0, 0, 0, 2079, 2081, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2066, 2067,
	0, 1435, 1435, 0, 0, 0, 0, 0, 0, 1435,
	0, 0, 1435, 1435, 0, 0, 313, 0, 2088, 0,
	0, 0, 1435, 0, 0, 0, 0, 313, 0, 0,
	0, 0, 0, 2072, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 2293, 315, 315, 0,
	2089, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2063, 2064, 2070, 2092, 2069, 2065, 0, 2062,
	2060, 2061, 2053, 2054, 2055, 2056, 2058, 2059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4307, 0, 0,
	0, 0, 1435, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2102, 1435, 0, 0, 0,
	0, 0, 0, 0, 0, 1435, 0, 0, 0, 0,
	1435, 1435, 1435, 0, 0, 0, 0, 0, 0, 315,
	1607, 315, 315, 315, 0, 0, 315, 315, 1607, 0,
	0, 0, 0, 0, 0, 1435, 0, 1435, 0, 0,
	0, 0, 0, 1435, 0, 1435, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 2078, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1607, 0, 0, 0, 0, 0, 1435,
	0, 2073, 0, 0, 0, 0, 0, 0, 0, 0,
	2293, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 315, 315, 0, 0, 0, 0, 1310, 0, 0,
	0, 0, 0, 2091, 0, 0, 0, 0, 0, 0,
	1607, 0, 0, 1424, 0, 0, 0, 1607, 315, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1607, 0, 0, 0, 0, 0, 2104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 309, 802, 0,
	0, 0, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 1435, 0, 0, 856, 0, 0, 0, 0, 1435,
	0, 0, 0, 1435, 1435, 1607, 1435, 0, 0, 0,
	0, 2293, 0, 0, 2225, 840, 2225, 1435, 0, 0,
	841, 0, 0, 0, 0, 0, 0, 1435, 1435, 313,
	0, 2089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 2063, 2064, 2070, 2092, 2069, 2065, 1435,
	2062, 2060, 2061, 2053, 2054, 2055, 2056, 2058, 2059, 0,
	0, 0, 0, 842, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 843, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 313, 0, 1435, 0,
	1435, 0, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	862, 0, 0, 0, 0, 1435, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 846, 838,
	0, 0, 2225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2225, 0, 0,
	0, 0, 0, 847, 0, 0, 0, 0, 839, 0,
	0, 0, 0, 0, 0, 1435, 1435, 0, 0, 0,
	0, 0, 0, 0, 313, 871, 0, 0, 0, 0,
	1435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 861, 0, 0, 0, 0, 0, 0,
	2225, 0, 2225, 0, 0, 0, 0, 0, 1435, 0,
	0, 0, 0, 1435, 0, 0, 0, 0, 0, 2225,
	0, 313, 2225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1435, 1435,
	1435, 1435, 1435, 1435, 1435, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	858, 0, 1435, 0, 1607, 0, 0, 0, 0, 315,
	315, 315, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 1435, 0, 1607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 2293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 0, 0, 1435, 1604, 1435,
	849, 0, 0, 0, 0, 0, 1724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	997, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 869, 0, 850, 0, 0, 0, 0, 0, 0,
	0, 1001, 0, 0, 0, 0, 1002, 0, 0, 1435,
	0, 1724, 0, 0, 0, 0, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 870,
	0, 0, 0, 0, 2293, 0, 0, 851, 0, 1003,
	0, 1017, 866, 867, 0, 864, 0, 0, 1724, 0,
	0, 0, 0, 0, 859, 1724, 0, 852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1004, 0,
	0, 1724, 0, 1005, 0, 0, 0, 0, 1435, 0,
	0, 0, 0, 0, 1435, 0, 0, 1435, 1435, 0,
	0, 0, 0, 0, 0, 0, 1026, 0, 0, 0,
	0, 0, 0, 1006, 0, 853, 0, 860, 0, 0,
	0, 0, 0, 0, 0, 0, 854, 0, 0, 1024,
	0, 0, 0, 0, 0, 0, 1435, 0, 1435, 0,
	0, 0, 855, 1724, 0, 0, 0, 863, 0, 0,
	0, 0, 0, 0, 999, 996, 0, 0, 0, 0,
	0, 0, 0, 872, 0, 0, 0, 0, 1435, 0,
	0, 1435, 0, 0, 0, 857, 0, 0, 0, 1007,
	0, 2225, 0, 2225, 0, 0, 0, 0, 0, 315,
	0, 1607, 1607, 315, 0, 0, 1028, 0, 0, 0,
	0, 871, 1607, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2293, 1607, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 1607,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1027, 315, 0, 315,
	0, 0, 0, 0, 1435, 315, 1022, 0, 0, 0,
	0, 0, 0, 0, 1607, 0, 1607, 0, 1607, 1435,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1607, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1607, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 1607, 0, 0, 1607, 1607, 1607, 1607, 2293,
	0, 0, 0, 0, 0, 1021, 0, 315, 0, 0,
	0, 0, 1435, 0, 1435, 0, 1008, 0, 0, 0,
	315, 0, 315, 0, 315, 0, 315, 0, 315, 0,
	315, 1435, 0, 0, 1435, 0, 0, 0, 1435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1435, 1009,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1605, 0, 0, 0, 0, 0, 0, 0, 1725, 0,
	0, 0, 0, 0, 0, 1598, 0, 315, 315, 315,
	315, 0, 1710, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 1604, 0, 0, 870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2266, 995, 0,
	0, 1018, 0, 1725, 0, 0, 2266, 0, 0, 0,
	0, 0, 1724, 1010, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1435, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1016, 0, 0, 0, 0, 0, 0, 0,
	1725, 0, 0, 0, 0, 0, 0, 1725, 0, 0,
	0, 1011, 0, 0, 0, 1012, 1031, 0, 1030, 998,
	0, 0, 1013, 1725, 1862, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1014, 0,
	0, 0, 0, 1023, 0, 0, 0, 0, 0, 1032,
	0, 0, 1029, 0, 0, 0, 0, 0, 0, 872,
	0, 0, 0, 0, 0, 0, 1604, 0, 0, 0,
	0, 0, 1607, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1988, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 1607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 315, 0, 315,
	0, 0, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1435, 0, 1435, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1724,
	1724, 0, 0, 0, 0, 0, 315, 0, 0, 315,
	1604, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 315, 0, 1607, 0, 0, 0, 0, 0,
	0, 0, 315, 315, 0, 0, 1724, 315, 0, 315,
	0, 0, 0, 0, 0, 0, 315, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1724, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1724, 0, 1724, 0, 1724, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 1724, 1724, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 1724, 0,
	0, 0, 0, 315, 1605, 0, 0, 0, 0, 2241,
	1724, 0, 0, 1724, 1724, 1724, 1724, 0, 0, 0,
	0, 0, 0, 0, 0, 2251, 0, 1710, 0, 0,
	0, 0, 0, 0, 1725, 0, 0, 0, 2266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 1710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 0, 0, 1604, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1607, 0, 1607, 0, 0, 0, 0, 0,
	1607, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 1607, 1607, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	1604, 0, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2049, 2050, 0, 2082,
	2083, 2084, 2093, 2094, 2095, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2086,
	2080, 0, 0, 0, 0, 0, 0, 315, 2052, 0,
	0, 0, 0, 0, 0, 0, 0, 1607, 0, 2099,
	0, 1725, 1725, 315, 315, 315, 315, 0, 0, 0,
	0, 0, 1605, 315, 0, 1604, 0, 2105, 315, 0,
	0, 0, 0, 0, 0, 0, 2051, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2071, 1725, 0,
	0, 1604, 0, 0, 0, 0, 0, 2068, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1725,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2608,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2643, 1725, 2643, 1725, 0, 1725, 0,
	0, 2650, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 2075, 2076, 2077, 0, 0, 1725, 1725, 0, 0,
	2057, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1725, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1725, 0, 0, 1725, 1725, 1725, 1725, 0,
	2678, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2090, 0, 0, 0, 2100, 0, 0,
	0, 0, 0, 2700, 2079, 2081, 0, 0, 0, 0,
	0, 1604, 0, 0, 0, 0, 0, 0, 2717, 0,
	2719, 0, 2721, 0, 2723, 0, 2724, 2096, 0, 2097,
	0, 0, 0, 0, 0, 0, 2066, 2067, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2072, 0, 2754, 2755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1605,
	0, 2098, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1604, 0, 0, 0, 0,
	0, 0, 2087, 0, 0, 0, 1607, 1724, 0, 0,
	0, 0, 0, 2102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1605, 2078, 0, 0, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1607, 0, 0, 0, 0, 0, 1724, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1724, 2091, 1724, 0, 0, 1607, 0, 0, 1724, 0,
	0, 0, 0, 0, 0, 0, 0, 1605, 0, 1724,
	1724, 315, 0, 0, 0, 315, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2104, 0, 0,
	0, 0, 0, 1605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3176, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 315, 1724, 0, 315, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 2089,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 2063, 2064, 2070, 2092, 2069, 2065, 0, 2062, 2060,
	2061, 2053, 2054, 2055, 2056, 2058, 2059, 2049, 2050, 0,
	2082, 2083, 2084, 2093, 2094, 2095, 3759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2086, 2080, 0, 0, 0, 0, 0, 0, 1607, 2052,
	0, 0, 2631, 0, 0, 0, 0, 0, 0, 0,
	2099, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1605, 0, 0, 0, 0, 2105, 0,
	0, 0, 0, 0, 0, 0, 0, 2051, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2071, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2068, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 1607, 0, 1607, 0,
	0, 0, 1607, 0, 0, 0, 0, 0, 0, 315,
	1607, 1607, 0, 0, 1607, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2074, 2075, 2076, 2077, 0, 0, 1605, 0, 0,
	0, 2057, 0, 1607, 0, 0, 0, 0, 0, 1725,
	0, 0, 1710, 0, 0, 1607, 0, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 0, 0, 2100, 0,
	0, 0, 0, 0, 0, 2079, 2081, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 0, 2096, 0,
	2097, 1607, 0, 315, 1607, 315, 0, 2066, 2067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3515, 0,
	0, 0, 0, 0, 0, 0, 0, 2088, 0, 2631,
	0, 0, 0, 0, 1604, 0, 0, 0, 0, 0,
	1725, 0, 2072, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 1725, 0, 1725, 0, 0, 0, 0, 0,
	1725, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1725, 1725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1607, 3587, 0, 0, 0, 1604, 0,
	0, 0, 2098, 0, 0, 0, 0, 0, 0, 0,
	1607, 0, 0, 0, 0, 3600, 1604, 3603, 0, 0,
	0, 0, 0, 2087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1604, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1725, 0, 0,
	0, 0, 0, 3637, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3648,
	1710, 3650, 1710, 0, 2078, 0, 0, 0, 0, 3657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2073, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3686, 0, 0, 0, 0, 0, 0,
	0, 0, 2091, 1607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2104, 315,
	0, 0, 0, 0, 0, 1607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1604, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2063, 2064, 2070, 2092, 2069, 2065, 0, 2062,
	2060, 2061, 2053, 2054, 2055, 2056, 2058, 2059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1724, 0, 1724, 0, 0, 0,
	1604, 0, 0, 0, 0, 0, 0, 966, 1724, 1724,
	0, 0, 0, 0, 0, 0, 315, 0, 1121, 0,
	1175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1607, 1607, 0, 0, 0, 0, 0, 0, 1607, 0,
	0, 1607, 1607, 0, 0, 1129, 0, 0, 0, 0,
	0, 1607, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 1145, 0, 1127, 1126, 0, 0, 0,
	0, 1724, 0, 0, 0, 0, 1605, 0, 0, 0,
	0, 0, 0, 1724, 0, 1724, 0, 0, 0, 1147,
	0, 315, 0, 0, 0, 1128, 0, 0, 0, 0,
	1131, 0, 315, 0, 0, 1187, 0, 1158, 0, 0,
	0, 0, 0, 0, 315, 0, 1142, 1143, 315, 0,
	315, 0, 0, 0, 0, 315, 1163, 0, 0, 0,
	1605, 1607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1176, 1133, 0, 0, 1605, 1604,
	0, 1134, 1604, 0, 1607, 0, 0, 0, 0, 1607,
	1607, 1607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3896, 0, 0, 1135, 0, 0, 0,
	0, 0, 1605, 0, 1607, 1173, 1607, 0, 0, 0,
	0, 315, 1607, 0, 1607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1174, 0, 1154, 0, 0, 0, 0, 1607, 0,
	0, 1604, 0, 0, 0, 0, 0, 1137, 0, 0,
	0, 1710, 1710, 0, 0, 0, 1125, 0, 1604, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1139, 1140, 0,
	0, 0, 0, 0, 0, 0, 0, 3959, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1148, 1146, 0, 0, 0, 0, 0, 0,
	1141, 0, 0, 0, 0, 1159, 0, 0, 1181, 1180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4015,
	4017, 0, 0, 2631, 1184, 1172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1607, 1607, 0, 1607, 0, 1177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1607, 1607, 1605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1604, 0, 0, 0, 0, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1132,
	0, 0, 1186, 0, 0, 0, 0, 2266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1130, 0, 0, 0,
	0, 1167, 1168, 0, 0, 0, 1725, 0, 1725, 0,
	0, 315, 1605, 0, 0, 1170, 0, 0, 0, 0,
	1725, 1725, 0, 0, 1607, 0, 0, 315, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1178, 1165, 4166, 0, 0, 0, 0,
	0, 0, 1185, 1160, 0, 1607, 1151, 1149, 0, 0,
	0, 1155, 0, 0, 0, 315, 0, 0, 0, 1156,
	0, 0, 1123, 0, 1179, 0, 0, 0, 0, 0,
	0, 0, 0, 1725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1725, 0, 1725, 0, 0,
	1124, 0, 0, 0, 1607, 1607, 0, 0, 1607, 0,
	0, 1171, 0, 0, 1169, 0, 1157, 1138, 0, 0,
	0, 0, 1153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1183, 0, 0, 0, 0, 0, 0,
	0, 1161, 0, 1162, 0, 0, 0, 315, 1724, 1724,
	0, 0, 1136, 1182, 0, 0, 1724, 1607, 315, 1724,
	1724, 1605, 1607, 0, 1605, 0, 0, 0, 1164, 1724,
	0, 0, 4270, 0, 0, 0, 0, 0, 0, 4275,
	0, 1710, 0, 0, 0, 0, 0, 1607, 1607, 1607,
	1607, 1607, 1607, 1607, 0, 0, 0, 0, 0, 1166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1607, 0, 0, 0, 0, 0, 0, 0, 4289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1607, 0, 1605, 0, 0, 0, 0, 0, 1724,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1724, 0, 0, 0, 0, 1724, 1724, 1724,
	0, 0, 0, 0, 0, 0, 1607, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1724, 0, 1724, 0, 0, 0, 0, 0,
	1724, 0, 1604, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 1604, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2049, 2050, 0, 2082,
	2083, 2084, 2093, 2094, 2095, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2086,
	2080, 0, 0, 1605, 0, 0, 0, 0, 2052, 0,
	0, 0, 0, 0, 0, 0, 0, 1607, 0, 2099,
	0, 0, 0, 1607, 0, 0, 1607, 1607, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 2105, 0, 0,
	0, 0, 0, 0, 0, 0, 2051, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2071, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2068, 0, 0,
	1604, 1604, 0, 1604, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1724, 1724, 0, 1607, 0, 0,
	1607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1604, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 2075, 2076, 2077, 0, 0, 0, 0, 0, 0,
	2057, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1604, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2090, 0, 0, 0, 2100, 0, 0,
	1725, 1725, 0, 0, 2079, 2081, 0, 0, 1725, 0,
	0, 1725, 1725, 1604, 0, 0, 0, 0, 0, 0,
	0, 1725, 0, 0, 0, 0, 0, 2096, 0, 2097,
	0, 0, 0, 0, 0, 0, 2066, 2067, 0, 0,
	0, 0, 0, 2631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 2088, 0, 0, 0,
	0, 0, 1724, 1724, 0, 0, 0, 0, 0, 0,
	0, 2072, 0, 0, 0, 0, 0, 4630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1725, 0, 0, 2631, 0, 2631, 0, 0, 0,
	0, 4668, 315, 0, 0, 1604, 0, 1607, 0, 0,
	1724, 2098, 0, 0, 1725, 0, 0, 1607, 0, 1725,
	1725, 1725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2087, 0, 0, 1724, 1724, 1724, 1724, 1724,
	1724, 1724, 0, 2102, 1725, 0, 1725, 0, 0, 0,
	0, 0, 1725, 0, 1605, 0, 0, 0, 0, 1604,
	0, 0, 0, 0, 0, 0, 0, 4713, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1605, 1604,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2078, 0, 0, 0, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2073,
	0, 0, 0, 0, 1604, 0, 1724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2091, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1604, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1605, 1605, 0, 1605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1607, 0, 0, 1725, 1725, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1605, 0,
	0, 0, 0, 0, 0, 1604, 0, 0, 0, 0,
	0, 1724, 0, 0, 1724, 1724, 0, 0, 0, 2089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2063, 2064, 2070, 2092, 2069, 2065, 0, 2062, 2060,
	2061, 2053, 2054, 2055, 2056, 2058, 2059, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1605, 0, 0, 4892, 0, 0,
	0, 0, 0, 0, 0, 1604, 0, 0, 1724, 0,
	0, 0, 0, 2631, 0, 2049, 2050, 0, 2082, 2083,
	2084, 2093, 2094, 2095, 0, 1605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2086, 2080,
	0, 0, 0, 0, 0, 0, 0, 2052, 0, 0,
	0, 0, 0, 0, 0, 0, 2049, 2050, 2099, 2082,
	2083, 2084, 2093, 2094, 2095, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1725, 1725, 2105, 0, 0, 2086,
	2080, 0, 0, 0, 0, 2051, 0, 0, 2052, 0,
	0, 0, 0, 0, 0, 0, 2071, 0, 0, 2099,
	0, 0, 0, 0, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2105, 0, 0,
	0, 0, 0, 0, 0, 0, 2051, 1605, 0, 0,
	0, 0, 1725, 2631, 0, 0, 0, 2071, 0, 0,
	0, 0, 0, 0, 5008, 0, 0, 2068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1725, 1725, 1725,
	1725, 1725, 1725, 1725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1605, 0, 0, 0, 0, 0, 0, 0, 2074,
	2075, 2076, 2077, 0, 0, 0, 0, 0, 0, 2057,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1605, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 2075, 2076, 2077, 0, 1724, 0, 0, 0, 0,
	2057, 0, 2090, 0, 0, 1724, 2100, 0, 0, 0,
	0, 0, 0, 2079, 2081, 0, 1605, 0, 1725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2096, 0, 2097, 0,
	0, 0, 0, 2090, 0, 2066, 2067, 2100, 0, 0,
	0, 0, 0, 0, 2079, 2081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2088, 0, 0, 1605, 0,
	0, 0, 0, 0, 0, 0, 0, 2096, 0, 2097,
	2072, 0, 0, 0, 0, 0, 2066, 2067, 0, 0,
	0, 0, 0, 0, 5124, 1724, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2072, 0, 0, 0, 0, 0, 0, 0, 0,
	2098, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1605, 0, 0,
	0, 2087, 0, 1725, 0, 0, 1725, 1725, 0, 0,
	0, 0, 2102, 0, 0, 0, 0, 0, 0, 0,
	0, 2098, 0, 0, 0, 0, 0, 0, 0, 0,
	2631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1724, 2078, 0, 0, 0, 2643, 1605, 0, 0,
	1725, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2091, 0, 5259, 1710, 0, 0, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2104, 0, 0, 0,
	0, 2091, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2089, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2063, 2064, 2070, 2092, 2069, 2065, 0, 2062, 2060, 2061,
	2053, 2054, 2055, 2056, 2058, 2059, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3754, 0, 0, 0, 2089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2063, 2064, 2070, 2092, 2069, 2065, 1725, 2062, 2060,
	2061, 2053, 2054, 2055, 2056, 2058, 2059, 1725, 5381, 0,
	0, 0, 0, 0, 0, 0, 3753, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1725, 0, 5439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1602, 0, 5489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	1608, 333, 334, 1609, 1610, 1611, 0, 1612, 746, 1613,
	1614, 1615, 335, 1616, 336, 337, 338, 1374, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 1617, 751, 348, 349, 350, 351, 352, 353,
	354, 1618, 1619, 1725, 355, 752, 753, 754, 1620, 356,
	357, 755, 1621, 1688, 1622, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 1623, 367, 368, 369, 366, 370,
	371, 1624, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 1625, 380, 381, 382, 1375, 383, 384, 385, 1626,
	1627, 1629, 1628, 1630, 1631, 1632, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 1633, 396, 398, 392,
	394, 1634, 397, 395, 399, 400, 1635, 401, 402, 403,
	1636, 1637, 404, 405, 406, 1638, 407, 408, 409, 1639,
	410, 411, 412, 1640, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 1641, 320, 1642, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 1643, 433,
	434, 435, 1644, 436, 437, 1645, 1376, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 1646, 450, 764, 1647, 765, 451, 1648, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 1378,
	459, 460, 461, 1649, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 1650, 322, 321, 323,
	1377, 769, 471, 555, 472, 770, 771, 1651, 772, 1652,
	473, 474, 476, 1379, 773, 1380, 475, 477, 478, 1381,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 1653, 487, 489, 488, 1654, 491, 774, 490, 1382,
	492, 493, 1383, 1655, 494, 495, 496, 497, 498, 499,
	502, 1656, 1657, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 1384, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 1385, 547, 534, 1658, 535, 324, 1386, 549, 550,
	551, 552, 1659, 775, 553, 776, 556, 557, 1660, 0,
	558, 0, 559, 1661, 1662, 561, 562, 563, 1663, 1664,
	564, 565, 777, 1387, 566, 1388, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	1665, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 1666, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 1667, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 1668, 625, 626, 624, 627, 628, 1389, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 1669, 655, 656, 654, 657, 658, 659, 1670,
	660, 785, 661, 641, 642, 662, 663, 1390, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 1671, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	1672, 692, 693, 0, 687, 678, 1673, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 1674, 702, 789, 790,
	791, 792, 1675, 714, 1676, 703, 705, 706, 707, 708,
	793, 709, 794, 1677, 710, 711, 712, 713, 704, 715,
	716, 1678, 1679, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 1680, 726, 1681, 0, 727, 728, 729, 795,
	796, 797, 1682, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 1683, 1684, 1685, 1686, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1602, 0,
	0, 0, 0, 0, 0, 3151, 0, 0, 0, 0,
	0, 0, 0, 0, 3152, 325, 326, 328, 327, 329,
	330, 331, 332, 1608, 333, 334, 1609, 1610, 1611, 0,
	1612, 746, 1613, 1614, 1615, 335, 1616, 336, 337, 338,
	1374, 339, 340, 341, 342, 343, 344, 345, 747, 748,
	0, 346, 749, 347, 750, 1617, 751, 348, 349, 350,
	351, 352, 353, 354, 1618, 1619, 0, 355, 752, 753,
	754, 1620, 356, 357, 755, 1621, 1688, 1622, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 1623, 367, 368,
	369, 366, 370, 371, 1624, 372, 0, 373, 374, 375,
	376, 377, 378, 379, 1625, 380, 381, 382, 1375, 383,
	384, 385, 1626, 1627, 1629, 1628, 1630, 1631, 1632, 386,
	387, 388, 389, 390, 0, 391, 393, 756, 757, 1633,
	396, 398, 392, 394, 1634, 397, 395, 399, 400, 1635,
	401, 402, 403, 1636, 1637, 404, 405, 406, 1638, 407,
	408, 409, 1639, 410, 411, 412, 1640, 413, 414, 758,
	415, 416, 417, 419, 421, 418, 420, 422, 423, 424,
	425, 426, 759, 760, 427, 428, 1641, 320, 1642, 0,
	0, 0, 0, 429, 430, 431, 761, 0, 0, 0,
	432, 1643, 433, 434, 435, 1644, 436, 437, 1645, 1376,
	438, 439, 440, 762, 763, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 1646, 450, 764, 1647, 765, 451,
	1648, 452, 453, 454, 455, 456, 457, 458, 766, 767,
	768, 554, 1378, 459, 460, 461, 1649, 462, 463, 464,
	465, 466, 0, 0, 0, 467, 468, 469, 470, 1650,
	322, 321, 323, 1377, 769, 471, 555, 472, 770, 771,
	1651, 772, 1652, 473, 474, 476, 1379, 773, 1380, 475,
	477, 478, 1381, 479, 0, 0, 0, 480, 481, 482,
	483, 484, 485, 486, 1653, 487, 489, 488, 1654, 491,
	774, 490, 1382, 492, 493, 1383, 1655, 494, 495, 496,
	497, 498, 499, 502, 1656, 1657, 500, 501, 503, 504,
	0, 505, 506, 508, 511, 507, 509, 510, 512, 525,
	526, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 528, 0, 527, 1384, 529, 530, 531,
	532, 533, 541, 543, 544, 539, 540, 542, 545, 546,
	548, 536, 537, 538, 1385, 547, 534, 1658, 535, 324,
	1386, 549, 550, 551, 552, 1659, 775, 553, 776, 556,
	557, 1660, 0, 558, 0, 559, 1661, 1662, 561, 562,
	563, 1663, 1664, 564, 565, 777, 1387, 566, 1388, 778,
	567, 568, 560, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 1665, 579, 580, 779, 581, 582, 583,
	780, 584, 585, 586, 781, 587, 782, 588, 589, 1666,
	590, 591, 592, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 783, 601, 602, 604, 603, 605, 1667, 606,
	0, 607, 608, 609, 0, 0, 0, 0, 0, 610,
	611, 613, 0, 614, 615, 616, 617, 612, 618, 619,
	620, 621, 622, 623, 1668, 625, 626, 624, 627, 628,
	1389, 629, 630, 631, 632, 633, 784, 634, 0, 635,
	636, 644, 645, 646, 637, 638, 640, 647, 639, 648,
	649, 650, 651, 653, 652, 1669, 655, 656, 654, 657,
	658, 659, 1670, 660, 785, 661, 641, 642, 662, 663,
	1390, 664, 665, 666, 667, 668, 669, 670, 786, 0,
	671, 1671, 672, 673, 674, 675, 676, 677, 679, 643,
	680, 685, 686, 787, 681, 682, 683, 684, 788, 688,
	689, 690, 691, 1672, 692, 693, 0, 687, 678, 1673,
	694, 695, 696, 697, 698, 699, 0, 700, 701, 1674,
	702, 789, 790, 791, 792, 1675, 714, 1676, 703, 705,
	706, 707, 708, 793, 709, 794, 1677, 710, 711, 712,
	713, 704, 715, 716, 1678, 1679, 717, 718, 719, 721,
	723, 724, 720, 722, 725, 1680, 726, 1681, 0, 727,
	728, 729, 795, 796, 797, 1682, 731, 732, 730, 733,
	734, 737, 735, 736, 798, 738, 739, 740, 1683, 1684,
	1685, 1686, 741, 742, 799, 743, 744, 745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1602, 0,
	0, 0, 4316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4318, 325, 326, 328, 327, 329,
	330, 331, 332, 1608, 333, 334, 1609, 1610, 1611, 0,
	1612, 746, 1613, 1614, 1615, 335, 1616, 336, 337, 338,
	1374, 339, 340, 341, 342, 343, 344, 345, 747, 748,
	0, 346, 749, 347, 750, 1617, 751, 348, 349, 350,
	351, 352, 353, 354, 1618, 1619, 0, 355, 752, 753,
	754, 1620, 356, 357, 755, 1621, 1688, 1622, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 1623, 367, 368,
	369, 366, 370, 371, 1624, 372, 0, 373, 374, 375,
	376, 377, 378, 379, 1625, 380, 381, 382, 1375, 383,
	384, 385, 1626, 1627, 1629, 1628, 1630, 1631, 1632, 386,
	387, 388, 389, 390, 0, 391, 393, 756, 757, 1633,
	396, 398, 392, 394, 1634, 397, 395, 399, 400, 1635,
	401, 402, 403, 1636, 1637, 404, 405, 406, 1638, 407,
	408, 409, 1639, 410, 411, 412, 1640, 413, 414, 758,
	415, 416, 417, 419, 421, 418, 420, 422, 423, 424,
	425, 426, 759, 760, 427, 428, 1641, 320, 1642, 0,
	0, 0, 0, 429, 430, 431, 761, 0, 0, 0,
	432, 1643, 433, 434, 435, 1644, 436, 437, 1645, 1376,
	438, 439, 440, 762, 763, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 1646, 450, 764, 1647, 765, 451,
	1648, 452, 453, 454, 455, 456, 457, 458, 766, 767,
	768, 554, 1378, 459, 460, 461, 1649, 462, 463, 464,
	465, 466, 0, 0, 0, 467, 468, 469, 470, 1650,
	322, 321, 323, 1377, 769, 471, 555, 472, 770, 771,
	1651, 772, 1652, 473, 474, 476, 1379, 773, 1380, 475,
	477, 478, 1381, 479, 0, 0, 0, 480, 481, 482,
	483, 484, 485, 486, 1653, 487, 489, 488, 1654, 491,
	774, 490, 1382, 492, 493, 1383, 1655, 494, 495, 496,
	497, 498, 499, 502, 1656, 1657, 500, 501, 503, 504,
	0, 505, 506, 508, 511, 507, 509, 510, 512, 525,
	526, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 528, 0, 527, 1384, 529, 530, 531,
	532, 533, 541, 543, 544, 539, 540, 542, 545, 546,
	548, 536, 537, 538, 1385, 547, 534, 1658, 535, 324,
	1386, 549, 550, 551, 552, 1659, 775, 553, 776, 556,
	557, 1660, 0, 558, 0, 559, 1661, 1662, 561, 562,
	563, 1663, 1664, 564, 565, 777, 1387, 566, 1388, 778,
	567, 568, 560, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 1665, 579, 580, 779, 581, 582, 583,
	780, 584, 585, 586, 781, 587, 782, 588, 589, 1666,
	590, 591, 592, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 783, 601, 602, 604, 603, 605, 1667, 606,
	0, 607, 608, 609, 0, 0, 0, 0, 0, 610,
	611, 613, 0, 614, 615, 616, 617, 612, 618, 619,
	620, 621, 622, 623, 1668, 625, 626, 624, 627, 628,
	1389, 629, 630, 631, 632, 633, 784, 634, 0, 635,
	636, 644, 645, 646, 637, 638, 640, 647, 639, 648,
	649, 650, 651, 653, 652, 1669, 655, 656, 654, 657,
	658, 659, 1670, 660, 785, 661, 641, 642, 662, 663,
	1390, 664, 665, 666, 667, 668, 669, 670, 786, 0,
	671, 1671, 672, 673, 674, 675, 676, 677, 679, 643,
	680, 685, 686, 787, 681, 682, 683, 684, 788, 688,
	689, 690, 691, 1672, 692, 693, 0, 687, 678, 1673,
	694, 695, 696, 697, 698, 699, 0, 700, 701, 1674,
	702, 789, 790, 791, 792, 1675, 714, 1676, 703, 705,
	706, 707, 708, 793, 709, 794, 1677, 710, 711, 712,
	713, 704, 715, 716, 1678, 1679, 717, 718, 719, 721,
	723, 724, 720, 722, 725, 1680, 726, 1681, 0, 727,
	728, 729, 795, 796, 797, 1682, 731, 732, 730, 733,
	734, 737, 735, 736, 798, 738, 739, 740, 1683, 1684,
	1685, 1686, 741, 742, 799, 743, 744, 745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4791, 325,
	326, 328, 327, 329, 330, 331, 332, 1608, 333, 334,
	1609, 1610, 1611, 0, 1612, 746, 1613, 1614, 1615, 335,
	1616, 336, 337, 338, 1374, 339, 340, 341, 342, 343,
	344, 345, 747, 748, 0, 346, 749, 347, 750, 1617,
	751, 348, 349, 350, 351, 352, 353, 354, 1618, 1619,
	0, 355, 752, 753, 754, 1620, 356, 357, 755, 1621,
	1688, 1622, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 1623, 367, 368, 369, 366, 370, 371, 1624, 372,
	0, 373, 374, 375, 376, 377, 378, 379, 1625, 380,
	381, 382, 1375, 383, 384, 385, 1626, 1627, 1629, 1628,
	1630, 1631, 1632, 386, 387, 388, 389, 390, 0, 391,
	393, 756, 757, 1633, 396, 398, 392, 394, 1634, 397,
	395, 399, 400, 1635, 401, 402, 403, 1636, 1637, 404,
	405, 406, 1638, 407, 408, 409, 1639, 410, 411, 412,
	1640, 413, 414, 758, 415, 416, 417, 419, 421, 418,
	420, 422, 423, 424, 425, 426, 759, 760, 427, 428,
	1641, 320, 1642, 0, 0, 0, 0, 429, 430, 431,
	761, 0, 0, 0, 432, 1643, 433, 434, 435, 1644,
	436, 437, 1645, 1376, 438, 439, 440, 762, 763, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 1646, 450,
	764, 1647, 765, 451, 1648, 452, 453, 454, 455, 456,
	457, 458, 766, 767, 768, 554, 1378, 459, 460, 461,
	1649, 462, 463, 464, 465, 466, 0, 0, 0, 467,
	468, 469, 470, 1650, 322, 321, 323, 1377, 769, 471,
	555, 472, 770, 771, 1651, 772, 1652, 473, 474, 476,
	1379, 773, 1380, 475, 477, 478, 1381, 479, 0, 0,
	0, 480, 481, 482, 483, 484, 485, 486, 1653, 487,
	489, 488, 1654, 491, 774, 490, 1382, 492, 493, 1383,
	1655, 494, 495, 496, 497, 498, 499, 502, 1656, 1657,
	500, 501, 503, 504, 0, 505, 506, 508, 511, 507,
	509, 510, 512, 525, 526, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 528, 0, 527,
	1384, 529, 530, 531, 532, 533, 541, 543, 544, 539,
	540, 542, 545, 546, 548, 536, 537, 538, 1385, 547,
	534, 1658, 535, 324, 1386, 549, 550, 551, 552, 1659,
	775, 553, 776, 556, 557, 1660, 0, 558, 0, 559,
	1661, 1662, 561, 562, 563, 1663, 1664, 564, 565, 777,
	1387, 566, 1388, 778, 567, 568, 560, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 1665, 579, 580,
	779, 581, 582, 583, 780, 584, 585, 586, 781, 587,
	782, 588, 589, 1666, 590, 591, 592, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 783, 601, 602, 604,
	603, 605, 1667, 606, 0, 607, 608, 609, 0, 0,
	0, 0, 0, 610, 611, 613, 0, 614, 615, 616,
	617, 612, 618, 619, 620, 621, 622, 623, 1668, 625,
	626, 624, 627, 628, 1389, 629, 630, 631, 632, 633,
	784, 634, 0, 635, 636, 644, 645, 646, 637, 638,
	640, 647, 639, 648, 649, 650, 651, 653, 652, 1669,
	655, 656, 654, 657, 658, 659, 1670, 660, 785, 661,
	641, 642, 662, 663, 1390, 664, 665, 666, 667, 668,
	669, 670, 786, 0, 671, 1671, 672, 673, 674, 675,
	676, 677, 679, 643, 680, 685, 686, 787, 681, 682,
	683, 684, 788, 688, 689, 690, 691, 1672, 692, 693,
	0, 687, 678, 1673, 694, 695, 696, 697, 698, 699,
	0, 700, 701, 1674, 702, 789, 790, 791, 792, 1675,
	714, 1676, 703, 705, 706, 707, 708, 793, 709, 794,
	1677, 710, 711, 712, 713, 704, 715, 716, 1678, 1679,
	717, 718, 719, 721, 723, 724, 720, 722, 725, 1680,
	726, 1681, 0, 727, 728, 729, 795, 796, 797, 1682,
	731, 732, 730, 733, 734, 737, 735, 736, 798, 738,
	739, 740, 1683, 1684, 1685, 1686, 741, 742, 799, 743,
	744, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4789, 325, 326, 328, 327, 329, 330, 331,
	332, 1608, 333, 334, 1609, 1610, 1611, 0, 1612, 746,
	1613, 1614, 1615, 335, 1616, 336, 337, 338, 1374, 339,
	340, 341, 342, 343, 344, 345, 747, 748, 0, 346,
	749, 347, 750, 1617, 751, 348, 349, 350, 351, 352,
	353, 354, 1618, 1619, 0, 355, 752, 753, 754, 1620,
	356, 357, 755, 1621, 1688, 1622, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 1623, 367, 368, 369, 366,
	370, 371, 1624, 372, 0, 373, 374, 375, 376, 377,
	378, 379, 1625, 380, 381, 382, 1375, 383, 384, 385,
	1626, 1627, 1629, 1628, 1630, 1631, 1632, 386, 387, 388,
	389, 390, 0, 391, 393, 756, 757, 1633, 396, 398,
	392, 394, 1634, 397, 395, 399, 400, 1635, 401, 402,
	403, 1636, 1637, 404, 405, 406, 1638, 407, 408, 409,
	1639, 410, 411, 412, 1640, 413, 414, 758, 415, 416,
	417, 419, 421, 418, 420, 422, 423, 424, 425, 426,
	759, 760, 427, 428, 1641, 320, 1642, 0, 0, 0,
	0, 429, 430, 431, 761, 0, 0, 0, 432, 1643,
	433, 434, 435, 1644, 436, 437, 1645, 1376, 438, 439,
	440, 762, 763, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 1646, 450, 764, 1647, 765, 451, 1648, 452,
	453, 454, 455, 456, 457, 458, 766, 767, 768, 554,
	1378, 459, 460, 461, 1649, 462, 463, 464, 465, 466,
	0, 0, 0, 467, 468, 469, 470, 1650, 322, 321,
	323, 1377, 769, 471, 555, 472, 770, 771, 1651, 772,
	1652, 473, 474, 476, 1379, 773, 1380, 475, 477, 478,
	1381, 479, 0, 0, 0, 480, 481, 482, 483, 484,
	485, 486, 1653, 487, 489, 488, 1654, 491, 774, 490,
	1382, 492, 493, 1383, 1655, 494, 495, 496, 497, 498,
	499, 502, 1656, 1657, 500, 501, 503, 504, 0, 505,
	506, 508, 511, 507, 509, 510, 512, 525, 526, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 528, 0, 527, 1384, 529, 530, 531, 532, 533,
	541, 543, 544, 539, 540, 542, 545, 546, 548, 536,
	537, 538, 1385, 547, 534, 1658, 535, 324, 1386, 549,
	550, 551, 552, 1659, 775, 553, 776, 556, 557, 1660,
	0, 558, 0, 559, 1661, 1662, 561, 562, 563, 1663,
	1664, 564, 565, 777, 1387, 566, 1388, 778, 567, 568,
	560, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 1665, 579, 580, 779, 581, 582, 583, 780, 584,
	585, 586, 781, 587, 782, 588, 589, 1666, 590, 591,
	592, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	783, 601, 602, 604, 603, 605, 1667, 606, 0, 607,
	608, 609, 0, 0, 0, 0, 0, 610, 611, 613,
	0, 614, 615, 616, 617, 612, 618, 619, 620, 621,
	622, 623, 1668, 625, 626, 624, 627, 628, 1389, 629,
	630, 631, 632, 633, 784, 634, 0, 635, 636, 644,
	645, 646, 637, 638, 640, 647, 639, 648, 649, 650,
	651, 653, 652, 1669, 655, 656, 654, 657, 658, 659,
	1670, 660, 785, 661, 641, 642, 662, 663, 1390, 664,
	665, 666, 667, 668, 669, 670, 786, 0, 671, 1671,
	672, 673, 674, 675, 676, 677, 679, 643, 680, 685,
	686, 787, 681, 682, 683, 684, 788, 688, 689, 690,
	691, 1672, 692, 693, 0, 687, 678, 1673, 694, 695,
	696, 697, 698, 699, 0, 700, 701, 1674, 702, 789,
	790, 791, 792, 1675, 714, 1676, 703, 705, 706, 707,
	708, 793, 709, 794, 1677, 710, 711, 712, 713, 704,
	715, 716, 1678, 1679, 717, 718, 719, 721, 723, 724,
	720, 722, 725, 1680, 726, 1681, 0, 727, 728, 729,
	795, 796, 797, 1682, 731, 732, 730, 733, 734, 737,
	735, 736, 798, 738, 739, 740, 1683, 1684, 1685, 1686,
	741, 742, 799, 743, 744, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 1602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5059, 325, 326, 328, 327, 329, 330, 331, 332, 1608,
	333, 334, 1609, 1610, 1611, 0, 1612, 746, 1613, 1614,
	1615, 335, 1616, 336, 337, 338, 1374, 339, 340, 341,
	342, 343, 344, 345, 747, 748, 0, 346, 749, 347,
	750, 1617, 751, 348, 349, 350, 351, 352, 353, 354,
	1618, 1619, 0, 355, 752, 753, 754, 1620, 356, 357,
	755, 1621, 1688, 1622, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 1623, 367, 368, 369, 366, 370, 371,
	1624, 372, 0, 373, 374, 375, 376, 377, 378, 379,
	1625, 380, 381, 382, 1375, 383, 384, 385, 1626, 1627,
	1629, 1628, 1630, 1631, 1632, 386, 387, 388, 389, 390,
	0, 391, 393, 756, 757, 1633, 396, 398, 392, 394,
	1634, 397, 395, 399, 400, 1635, 401, 402, 403, 1636,
	1637, 404, 405, 406, 1638, 407, 408, 409, 1639, 410,
	411, 412, 1640, 413, 414, 758, 415, 416, 417, 419,
	421, 418, 420, 422, 423, 424, 425, 426, 759, 760,
	427, 428, 1641, 320, 1642, 0, 0, 0, 0, 429,
	430, 431, 761, 0, 0, 0, 432, 1643, 433, 434,
	435, 1644, 436, 437, 1645, 1376, 438, 439, 440, 762,
	763, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	1646, 450, 764, 1647, 765, 451, 1648, 452, 453, 454,
	455, 456, 457, 458, 766, 767, 768, 554, 1378, 459,
	460, 461, 1649, 462, 463, 464, 465, 466, 0, 0,
	0, 467, 468, 469, 470, 1650, 322, 321, 323, 1377,
	769, 471, 555, 472, 770, 771, 1651, 772, 1652, 473,
	474, 476, 1379, 773, 1380, 475, 477, 478, 1381, 479,
	0, 0, 0, 480, 481, 482, 483, 484, 485, 486,
	1653, 487, 489, 488, 1654, 491, 774, 490, 1382, 492,
	493, 1383, 1655, 494, 495, 496, 497, 498, 499, 502,
	1656, 1657, 500, 501, 503, 504, 0, 505, 506, 508,
	511, 507, 509, 510, 512, 525, 526, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 528,
	0, 527, 1384, 529, 530, 531, 532, 533, 541, 543,
	544, 539, 540, 542, 545, 546, 548, 536, 537, 538,
	1385, 547, 534, 1658, 535, 324, 1386, 549, 550, 551,
	552, 1659, 775, 553, 776, 556, 557, 1660, 0, 558,
	0, 559, 1661, 1662, 561, 562, 563, 1663, 1664, 564,
	565, 777, 1387, 566, 1388, 778, 567, 568, 560, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 1665,
	579, 580, 779, 581, 582, 583, 780, 584, 585, 586,
	781, 587, 782, 588, 589, 1666, 590, 591, 592, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 783, 601,
	602, 604, 603, 605, 1667, 606, 0, 607, 608, 609,
	0, 0, 0, 0, 0, 610, 611, 613, 0, 614,
	615, 616, 617, 612, 618, 619, 620, 621, 622, 623,
	1668, 625, 626, 624, 627, 628, 1389, 629, 630, 631,
	632, 633, 784, 634, 0, 635, 636, 644, 645, 646,
	637, 638, 640, 647, 639, 648, 649, 650, 651, 653,
	652, 1669, 655, 656, 654, 657, 658, 659, 1670, 660,
	785, 661, 641, 642, 662, 663, 1390, 664, 665, 666,
	667, 668, 669, 670, 786, 0, 671, 1671, 672, 673,
	674, 675, 676, 677, 679, 643, 680, 685, 686, 787,
	681, 682, 683, 684, 788, 688, 689, 690, 691, 1672,
	692, 693, 0, 687, 678, 1673, 694, 695, 696, 697,
	698, 699, 0, 700, 701, 1674, 702, 789, 790, 791,
	792, 1675, 714, 1676, 703, 705, 706, 707, 708, 793,
	709, 794, 1677, 710, 711, 712, 713, 704, 715, 716,
	1678, 1679, 717, 718, 719, 721, 723, 724, 720, 722,
	725, 1680, 726, 1681, 0, 727, 728, 729, 795, 796,
	797, 1682, 731, 732, 730, 733, 734, 737, 735, 736,
	798, 738, 739, 740, 1683, 1684, 1685, 1686, 741, 742,
	799, 743, 744, 745, 0, 0, 0, 0, 0, 0,
	0, 0, 1602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4901, 325,
	326, 328, 327, 329, 330, 331, 332, 1608, 333, 334,
	1609, 1610, 1611, 0, 1612, 746, 1613, 1614, 1615, 335,
	1616, 336, 337, 338, 1374, 339, 340, 341, 342, 343,
	344, 345, 747, 748, 0, 346, 749, 347, 750, 1617,
	751, 348, 349, 350, 351, 352, 353, 354, 1618, 1619,
	0, 355, 752, 753, 754, 1620, 356, 357, 755, 1621,
	1688, 1622, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 1623, 367, 368, 369, 366, 370, 371, 1624, 372,
	0, 373, 374, 375, 376, 377, 378, 379, 1625, 380,
	381, 382, 1375, 383, 384, 385, 1626, 1627, 1629, 1628,
	1630, 1631, 1632, 386, 387, 388, 389, 390, 0, 391,
	393, 756, 757, 1633, 396, 398, 392, 394, 1634, 397,
	395, 399, 400, 1635, 401, 402, 403, 1636, 1637, 404,
	405, 406, 1638, 407, 408, 409, 1639, 410, 411, 412,
	1640, 413, 414, 758, 415, 416, 417, 419, 421, 418,
	420, 422, 423, 424, 425, 426, 759, 760, 427, 428,
	1641, 320, 1642, 0, 0, 0, 0, 429, 430, 431,
	761, 0, 0, 0, 432, 1643, 433, 434, 435, 1644,
	436, 437, 1645, 1376, 438, 439, 440, 762, 763, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 1646, 450,
	764, 1647, 765, 451, 1648, 452, 453, 454, 455, 456,
	457, 458, 766, 767, 768, 554, 1378, 459, 460, 461,
	1649, 462, 463, 464, 465, 466, 0, 0, 0, 467,
	468, 469, 470, 1650, 322, 321, 323, 1377, 769, 471,
	555, 472, 770, 771, 1651, 772, 1652, 473, 474, 476,
	1379, 773, 1380, 475, 477, 478, 1381, 479, 0, 0,
	0, 480, 481, 482, 483, 484, 485, 486, 1653, 487,
	489, 488, 1654, 491, 774, 490, 1382, 492, 493, 1383,
	1655, 494, 495, 496, 497, 498, 499, 502, 1656, 1657,
	500, 501, 503, 504, 0, 505, 506, 508, 511, 507,
	509, 510, 512, 525, 526, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 528, 0, 527,
	1384, 529, 530, 531, 532, 533, 541, 543, 544, 539,
	540, 542, 545, 546, 548, 536, 537, 538, 1385, 547,
	534, 1658, 535, 324, 1386, 549, 550, 551, 552, 1659,
	775, 553, 776, 556, 557, 1660, 0, 558, 0, 559,
	1661, 1662, 561, 562, 563, 1663, 1664, 564, 565, 777,
	1387, 566, 1388, 778, 567, 568, 560, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 1665, 579, 580,
	779, 581, 582, 583, 780, 584, 585, 586, 781, 587,
	782, 588, 589, 1666, 590, 591, 592, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 783, 601, 602, 604,
	603, 605, 1667, 606, 0, 607, 608, 609, 0, 0,
	0, 0, 0, 610, 611, 613, 0, 614, 615, 616,
	617, 612, 618, 619, 620, 621, 622, 623, 1668, 625,
	626, 624, 627, 628, 1389, 629, 630, 631, 632, 633,
	784, 634, 0, 635, 636, 644, 645, 646, 637, 638,
	640, 647, 639, 648, 649, 650, 651, 653, 652, 1669,
	655, 656, 654, 657, 658, 659, 1670, 660, 785, 661,
	641, 642, 662, 663, 1390, 664, 665, 666, 667, 668,
	669, 670, 786, 0, 671, 1671, 672, 673, 674, 675,
	676, 677, 679, 643, 680, 685, 686, 787, 681, 682,
	683, 684, 788, 688, 689, 690, 691, 1672, 692, 693,
	0, 687, 678, 1673, 694, 695, 696, 697, 698, 699,
	0, 700, 701, 1674, 702, 789, 790, 791, 792, 1675,
	714, 1676, 703, 705, 706, 707, 708, 793, 709, 794,
	1677, 710, 711, 712, 713, 704, 715, 716, 1678, 1679,
	717, 718, 719, 721, 723, 724, 720, 722, 725, 1680,
	726, 1681, 0, 727, 728, 729, 795, 796, 797, 1682,
	731, 732, 730, 733, 734, 737, 735, 736, 798, 738,
	739, 740, 1683, 1684, 1685, 1686, 741, 742, 799, 743,
	744, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	1602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4715, 325, 326, 328,
	327, 329, 330, 331, 332, 1608, 333, 334, 1609, 1610,
	1611, 0, 1612, 746, 1613, 1614, 1615, 335, 1616, 336,
	337, 338, 1374, 339, 340, 341, 342, 343, 344, 345,
	747, 748, 0, 346, 749, 347, 750, 1617, 751, 348,
	349, 350, 351, 352, 353, 354, 1618, 1619, 0, 355,
	752, 753, 754, 1620, 356, 357, 755, 1621, 1688, 1622,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 1623,
	367, 368, 369, 366, 370, 371, 1624, 372, 0, 373,
	374, 375, 376, 377, 378, 379, 1625, 380, 381, 382,
	1375, 383, 384, 385, 1626, 1627, 1629, 1628, 1630, 1631,
	1632, 386, 387, 388, 389, 390, 0, 391, 393, 756,
	757, 1633, 396, 398, 392, 394, 1634, 397, 395, 399,
	400, 1635, 401, 402, 403, 1636, 1637, 404, 405, 406,
	1638, 407, 408, 409, 1639, 410, 411, 412, 1640, 413,
	414, 758, 415, 416, 417, 419, 421, 418, 420, 422,
	423, 424, 425, 426, 759, 760, 427, 428, 1641, 320,
	1642, 0, 0, 0, 0, 429, 430, 431, 761, 0,
	0, 0, 432, 1643, 433, 434, 435, 1644, 436, 437,
	1645, 1376, 438, 439, 440, 762, 763, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 1646, 450, 764, 1647,
	765, 451, 1648, 452, 453, 454, 455, 456, 457, 458,
	766, 767, 768, 554, 1378, 459, 460, 461, 1649, 462,
	463, 464, 465, 466, 0, 0, 0, 467, 468, 469,
	470, 1650, 322, 321, 323, 1377, 769, 471, 555, 472,
	770, 771, 1651, 772, 1652, 473, 474, 476, 1379, 773,
	1380, 475, 477, 478, 1381, 479, 0, 0, 0, 480,
	481, 482, 483, 484, 485, 486, 1653, 487, 489, 488,
	1654, 491, 774, 490, 1382, 492, 493, 1383, 1655, 494,
	495, 496, 497, 498, 499, 502, 1656, 1657, 500, 501,
	503, 504, 0, 505, 506, 508, 511, 507, 509, 510,
	512, 525, 526, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 528, 0, 527, 1384, 529,
	530, 531, 532, 533, 541, 543, 544, 539, 540, 542,
	545, 546, 548, 536, 537, 538, 1385, 547, 534, 1658,
	535, 324, 1386, 549, 550, 551, 552, 1659, 775, 553,
	776, 556, 557, 1660, 0, 558, 0, 559, 1661, 1662,
	561, 562, 563, 1663, 1664, 564, 565, 777, 1387, 566,
	1388, 778, 567, 568, 560, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 1665, 579, 580, 779, 581,
	582, 583, 780, 584, 585, 586, 781, 587, 782, 588,
	589, 1666, 590, 591, 592, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 783, 601, 602, 604, 603, 605,
	1667, 606, 0, 607, 608, 609, 0, 0, 0, 0,
	0, 610, 611, 613, 0, 614, 615, 616, 617, 612,
	618, 619, 620, 621, 622, 623, 1668, 625, 626, 624,
	627, 628, 1389, 629, 630, 631, 632, 633, 784, 634,
	0, 635, 636, 644, 645, 646, 637, 638, 640, 647,
	639, 648, 649, 650, 651, 653, 652, 1669, 655, 656,
	654, 657, 658, 659, 1670, 660, 785, 661, 641, 642,
	662, 663, 1390, 664, 665, 666, 667, 668, 669, 670,
	786, 0, 671, 1671, 672, 673, 674, 675, 676, 677,
	679, 643, 680, 685, 686, 787, 681, 682, 683, 684,
	788, 688, 689, 690, 691, 1672, 692, 693, 0, 687,
	678, 1673, 694, 695, 696, 697, 698, 699, 0, 700,
	701, 1674, 702, 789, 790, 791, 792, 1675, 714, 1676,
	703, 705, 706, 707, 708, 793, 709, 794, 1677, 710,
	711, 712, 713, 704, 715, 716, 1678, 1679, 717, 718,
	719, 721, 723, 724, 720, 722, 725, 1680, 726, 1681,
	0, 727, 728, 729, 795, 796, 797, 1682, 731, 732,
	730, 733, 734, 737, 735, 736, 798, 738, 739, 740,
	1683, 1684, 1685, 1686, 741, 742, 799, 743, 744, 745,
	0, 0, 0, 0, 0, 0, 0, 0, 1602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4334, 325, 326, 328, 327, 329,
	330, 331, 332, 1608, 333, 334, 1609, 1610, 1611, 0,
	1612, 746, 1613, 1614, 1615, 335, 1616, 336, 337, 338,
	1374, 339, 340, 341, 342, 343, 344, 345, 747, 748,
	0, 346, 749, 347, 750, 1617, 751, 348, 349, 350,
	351, 352, 353, 354, 1618, 1619, 0, 355, 752, 753,
	754, 1620, 356, 357, 755, 1621, 1688, 1622, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 1623, 367, 368,
	369, 366, 370, 371, 1624, 372, 0, 373, 374, 375,
	376, 377, 378, 379, 1625, 380, 381, 382, 1375, 383,
	384, 385, 1626, 1627, 1629, 1628, 1630, 1631, 1632, 386,
	387, 388, 389, 390, 0, 391, 393, 756, 757, 1633,
	396, 398, 392, 394, 1634, 397, 395, 399, 400, 1635,
	401, 402, 403, 1636, 1637, 404, 405, 406, 1638, 407,
	408, 409, 1639, 410, 411, 412, 1640, 413, 414, 758,
	415, 416, 417, 419, 421, 418, 420, 422, 423, 424,
	425, 426, 759, 760, 427, 428, 1641, 320, 1642, 0,
	0, 0, 0, 429, 430, 431, 761, 0, 0, 0,
	432, 1643, 433, 434, 435, 1644, 436, 437, 1645, 1376,
	438, 439, 440, 762, 763, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 1646, 450, 764, 1647, 765, 451,
	1648, 452, 453, 454, 455, 456, 457, 458, 766, 767,
	768, 554, 1378, 459, 460, 461, 1649, 462, 463, 464,
	465, 466, 0, 0, 0, 467, 468, 469, 470, 1650,
	322, 321, 323, 1377, 769, 471, 555, 472, 770, 771,
	1651, 772, 1652, 473, 474, 476, 1379, 773, 1380, 475,
	477, 478, 1381, 479, 0, 0, 0, 480, 481, 482,
	483, 484, 485, 486, 1653, 487, 489, 488, 1654, 491,
	774, 490, 1382, 492, 493, 1383, 1655, 494, 495, 496,
	497, 498, 499, 502, 1656, 1657, 500, 501, 503, 504,
	0, 505, 506, 508, 511, 507, 509, 510, 512, 525,
	526, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 528, 0, 527, 1384, 529, 530, 531,
	532, 533, 541, 543, 544, 539, 540, 542, 545, 546,
	548, 536, 537, 538, 1385, 547, 534, 1658, 535, 324,
	1386, 549, 550, 551, 552, 1659, 775, 553, 776, 556,
	557, 1660, 0, 558, 0, 559, 1661, 1662, 561, 562,
	563, 1663, 1664, 564, 565, 777, 1387, 566, 1388, 778,
	567, 568, 560, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 1665, 579, 580, 779, 581, 582, 583,
	780, 584, 585, 586, 781, 587, 782, 588, 589, 1666,
	590, 591, 592, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 783, 601, 602, 604, 603, 605, 1667, 606,
	0, 607, 608, 609, 0, 0, 0, 0, 0, 610,
	611, 613, 0, 614, 615, 616, 617, 612, 618, 619,
	620, 621, 622, 623, 1668, 625, 626, 624, 627, 628,
	1389, 629, 630, 631, 632, 633, 784, 634, 0, 635,
	636, 644, 645, 646, 637, 638, 640, 647, 639, 648,
	649, 650, 651, 653, 652, 1669, 655, 656, 654, 657,
	658, 659, 1670, 660, 785, 661, 641, 642, 662, 663,
	1390, 664, 665, 666, 667, 668, 669, 670, 786, 0,
	671, 1671, 672, 673, 674, 675, 676, 677, 679, 643,
	680, 685, 686, 787, 681, 682, 683, 684, 788, 688,
	689, 690, 691, 1672, 692, 693, 0, 687, 678, 1673,
	694, 695, 696, 697, 698, 699, 0, 700, 701, 1674,
	702, 789, 790, 791, 792, 1675, 714, 1676, 703, 705,
	706, 707, 708, 793, 709, 794, 1677, 710, 711, 712,
	713, 704, 715, 716, 1678, 1679, 717, 718, 719, 721,
	723, 724, 720, 722, 725, 1680, 726, 1681, 0, 727,
	728, 729, 795, 796, 797, 1682, 731, 732, 730, 733,
	734, 737, 735, 736, 798, 738, 739, 740, 1683, 1684,
	1685, 1686, 741, 742, 799, 743, 744, 745, 0, 0,
	0, 0, 0, 0, 0, 0, 1602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4134, 325, 326, 328, 327, 329, 330, 331,
	332, 1608, 333, 334, 1609, 1610, 1611, 0, 1612, 746,
	1613, 1614, 1615, 335, 1616, 336, 337, 338, 1374, 339,
	340, 341, 342, 343, 344, 345, 747, 748, 0, 346,
	749, 347, 750, 1617, 751, 348, 349, 350, 351, 352,
	353, 354, 1618, 1619, 0, 355, 752, 753, 754, 1620,
	356, 357, 755, 1621, 1688, 1622, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 1623, 367, 368, 369, 366,
	370, 371, 1624, 372, 0, 373, 374, 375, 376, 377,
	378, 379, 1625, 380, 381, 382, 1375, 383, 384, 385,
	1626, 1627, 1629, 1628, 1630, 1631, 1632, 386, 387, 388,
	389, 390, 0, 391, 393, 756, 757, 1633, 396, 398,
	392, 394, 1634, 397, 395, 399, 400, 1635, 401, 402,
	403, 1636, 1637, 404, 405, 406, 1638, 407, 408, 409,
	1639, 410, 411, 412, 1640, 413, 414, 758, 415, 416,
	417, 419, 421, 418, 420, 422, 423, 424, 425, 426,
	759, 760, 427, 428, 1641, 320, 1642, 0, 0, 0,
	0, 429, 430, 431, 761, 0, 0, 0, 432, 1643,
	433, 434, 435, 1644, 436, 437, 1645, 1376, 438, 439,
	440, 762, 763, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 1646, 450, 764, 1647, 765, 451, 1648, 452,
	453, 454, 455, 456, 457, 458, 766, 767, 768, 554,
	1378, 459, 460, 461, 1649, 462, 463, 464, 465, 466,
	0, 0, 0, 467, 468, 469, 470, 1650, 322, 321,
	323, 1377, 769, 471, 555, 472, 770, 771, 1651, 772,
	1652, 473, 474, 476, 1379, 773, 1380, 475, 477, 478,
	1381, 479, 0, 0, 0, 480, 481, 482, 483, 484,
	485, 486, 1653, 487, 489, 488, 1654, 491, 774, 490,
	1382, 492, 493, 1383, 1655, 494, 495, 496, 497, 498,
	499, 502, 1656, 1657, 500, 501, 503, 504, 0, 505,
	506, 508, 511, 507, 509, 510, 512, 525, 526, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 528, 0, 527, 1384, 529, 530, 531, 532, 533,
	541, 543, 544, 539, 540, 542, 545, 546, 548, 536,
	537, 538, 1385, 547, 534, 1658, 535, 324, 1386, 549,
	550, 551, 552, 1659, 775, 553, 776, 556, 557, 1660,
	0, 558, 0, 559, 1661, 1662, 561, 562, 563, 1663,
	1664, 564, 565, 777, 1387, 566, 1388, 778, 567, 568,
	560, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 1665, 579, 580, 779, 581, 582, 583, 780, 584,
	585, 586, 781, 587, 782, 588, 589, 1666, 590, 591,
	592, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	783, 601, 602, 604, 603, 605, 1667, 606, 0, 607,
	608, 609, 0, 0, 0, 0, 0, 610, 611, 613,
	0, 614, 615, 616, 617, 612, 618, 619, 620, 621,
	622, 623, 1668, 625, 626, 624, 627, 628, 1389, 629,
	630, 631, 632, 633, 784, 634, 0, 635, 636, 644,
	645, 646, 637, 638, 640, 647, 639, 648, 649, 650,
	651, 653, 652, 1669, 655, 656, 654, 657, 658, 659,
	1670, 660, 785, 661, 641, 642, 662, 663, 1390, 664,
	665, 666, 667, 668, 669, 670, 786, 0, 671, 1671,
	672, 673, 674, 675, 676, 677, 679, 643, 680, 685,
	686, 787, 681, 682, 683, 684, 788, 688, 689, 690,
	691, 1672, 692, 693, 0, 687, 678, 1673, 694, 695,
	696, 697, 698, 699, 0, 700, 701, 1674, 702, 789,
	790, 791, 792, 1675, 714, 1676, 703, 705, 706, 707,
	708, 793, 709, 794, 1677, 710, 711, 712, 713, 704,
	715, 716, 1678, 1679, 717, 718, 719, 721, 723, 724,
	720, 722, 725, 1680, 726, 1681, 0, 727, 728, 729,
	795, 796, 797, 1682, 731, 732, 730, 733, 734, 737,
	735, 736, 798, 738, 739, 740, 1683, 1684, 1685, 1686,
	741, 742, 799, 743, 744, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 1602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2979, 325, 326, 328, 327, 329, 330, 331, 332, 1608,
	333, 334, 1609, 1610, 1611, 0, 1612, 746, 1613, 1614,
	1615, 335, 1616, 336, 337, 338, 1374, 339, 340, 341,
	342, 343, 344, 345, 747, 748, 0, 346, 749, 347,
	750, 1617, 751, 348, 349, 350, 351, 352, 353, 354,
	1618, 1619, 0, 355, 752, 753, 754, 1620, 356, 357,
	755, 1621, 1688, 1622, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 1623, 367, 368, 369, 366, 370, 371,
	1624, 372, 0, 373, 374, 375, 376, 377, 378, 379,
	1625, 380, 381, 382, 1375, 383, 384, 385, 1626, 1627,
	1629, 1628, 1630, 1631, 1632, 386, 387, 388, 389, 390,
	0, 391, 393, 756, 757, 1633, 396, 398, 392, 394,
	1634, 397, 395, 399, 400, 1635, 401, 402, 403, 1636,
	1637, 404, 405, 406, 1638, 407, 408, 409, 1639, 410,
	411, 412, 1640, 413, 414, 758, 415, 416, 417, 419,
	421, 418, 420, 422, 423, 424, 425, 426, 759, 760,
	427, 428, 1641, 320, 1642, 0, 0, 0, 0, 429,
	430, 431, 761, 0, 0, 0, 432, 1643, 433, 434,
	435, 1644, 436, 437, 1645, 1376, 438, 439, 440, 762,
	763, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	1646, 450, 764, 1647, 765, 451, 1648, 452, 453, 454,
	455, 456, 457, 458, 766, 767, 768, 554, 1378, 459,
	460, 461, 1649, 462, 463, 464, 465, 466, 0, 0,
	0, 467, 468, 469, 470, 1650, 322, 321, 323, 1377,
	769, 471, 555, 472, 770, 771, 1651, 772, 1652, 473,
	474, 476, 1379, 773, 1380, 475, 477, 478, 1381, 479,
	0, 0, 0, 480, 481, 482, 483, 484, 485, 486,
	1653, 487, 489, 488, 1654, 491, 774, 490, 1382, 492,
	493, 1383, 1655, 494, 495, 496, 497, 498, 499, 502,
	1656, 1657, 500, 501, 503, 504, 0, 505, 506, 508,
	511, 507, 509, 510, 512, 525, 526, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 528,
	0, 527, 1384, 529, 530, 531, 532, 533, 541, 543,
	544, 539, 540, 542, 545, 546, 548, 536, 537, 538,
	1385, 547, 534, 1658, 535, 324, 1386, 549, 550, 551,
	552, 1659, 775, 553, 776, 556, 557, 1660, 0, 558,
	0, 559, 1661, 1662, 561, 562, 563, 1663, 1664, 564,
	565, 777, 1387, 566, 1388, 778, 567, 568, 560, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 1665,
	579, 580, 779, 581, 582, 583, 780, 584, 585, 586,
	781, 587, 782, 588, 589, 1666, 590, 591, 592, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 783, 601,
	602, 604, 603, 605, 1667, 606, 0, 607, 608, 609,
	0, 0, 0, 0, 0, 610, 611, 613, 0, 614,
	615, 616, 617, 612, 618, 619, 620, 621, 622, 623,
	1668, 625, 626, 624, 627, 628, 1389, 629, 630, 631,
	632, 633, 784, 634, 0, 635, 636, 644, 645, 646,
	637, 638, 640, 647, 639, 648, 649, 650, 651, 653,
	652, 1669, 655, 656, 654, 657, 658, 659, 1670, 660,
	785, 661, 641, 642, 662, 663, 1390, 664, 665, 666,
	667, 668, 669, 670, 786, 0, 671, 1671, 672, 673,
	674, 675, 676, 677, 679, 643, 680, 685, 686, 787,
	681, 682, 683, 684, 788, 688, 689, 690, 691, 1672,
	692, 693, 0, 687, 678, 1673, 694, 695, 696, 697,
	698, 699, 0, 700, 701, 1674, 702, 789, 790, 791,
	792, 1675, 714, 1676, 703, 705, 706, 707, 708, 793,
	709, 794, 1677, 710, 711, 712, 713, 704, 715, 716,
	1678, 1679, 717, 718, 719, 721, 723, 724, 720, 722,
	725, 1680, 726, 1681, 0, 727, 728, 729, 795, 796,
	797, 1682, 731, 732, 730, 733, 734, 737, 735, 736,
	798, 738, 739, 740, 1683, 1684, 1685, 1686, 741, 742,
	799, 743, 744, 745, 0, 0, 0, 0, 0, 0,
	1599, 0, 1602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2583, 325,
	326, 328, 327, 329, 330, 331, 332, 1608, 333, 334,
	1609, 1610, 1611, 0, 1612, 746, 1613, 1614, 1615, 335,
	1616, 336, 337, 338, 1374, 339, 340, 341, 342, 343,
	344, 345, 747, 748, 0, 346, 749, 347, 750, 1617,
	751, 348, 349, 350, 351, 352, 353, 354, 1618, 1619,
	0, 355, 752, 753, 754, 1620, 356, 357, 755, 1621,
	1688, 1622, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 1623, 367, 368, 369, 366, 370, 371, 1624, 372,
	0, 373, 374, 375, 376, 377, 378, 379, 1625, 380,
	381, 382, 1375, 383, 384, 385, 1626, 1627, 1629, 1628,
	1630, 1631, 1632, 386, 387, 388, 389, 390, 0, 391,
	393, 756, 757, 1633, 396, 398, 392, 394, 1634, 397,
	395, 399, 400, 1635, 401, 402, 403, 1636, 1637, 404,
	405, 406, 1638, 407, 408, 409, 1639, 410, 411, 412,
	1640, 413, 414, 758, 415, 416, 417, 419, 421, 418,
	420, 422, 423, 424, 425, 426, 759, 760, 427, 428,
	1641, 320, 1642, 0, 0, 0, 0, 429, 430, 431,
	761, 0, 0, 0, 432, 1643, 433, 434, 435, 1644,
	436, 437, 1645, 1376, 438, 439, 440, 762, 763, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 1646, 450,
	764, 1647, 765, 451, 1648, 452, 453, 454, 455, 456,
	457, 458, 766, 767, 768, 554, 1378, 459, 460, 461,
	1649, 462, 463, 464, 465, 466, 0, 0, 0, 467,
	468, 469, 470, 1650, 322, 321, 323, 1377, 769, 471,
	555, 472, 770, 771, 1651, 772, 1652, 473, 474, 476,
	1379, 773, 1380, 475, 477, 478, 1381, 479, 0, 0,
	0, 480, 481, 482, 483, 484, 485, 486, 1653, 487,
	489, 488, 1654, 491, 774, 490, 1382, 492, 493, 1383,
	1655, 494, 495, 496, 497, 498, 499, 502, 1656, 1657,
	500, 501, 503, 504, 0, 505, 506, 508, 511, 507,
	509, 510, 512, 525, 526, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 528, 0, 527,
	1384, 529, 530, 531, 532, 533, 541, 543, 544, 539,
	540, 542, 545, 546, 548, 536, 537, 538, 1385, 547,
	534, 1658, 535, 324, 1386, 549, 550, 551, 552, 1659,
	775, 553, 776, 556, 557, 1660, 0, 558, 0, 559,
	1661, 1662, 561, 562, 563, 1663, 1664, 564, 565, 777,
	1387, 566, 1388, 778, 567, 568, 560, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 1665, 579, 580,
	779, 581, 582, 583, 780, 584, 585, 586, 781, 587,
	782, 588, 589, 1666, 590, 591, 592, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 783, 601, 602, 604,
	603, 605, 1667, 606, 0, 607, 608, 609, 0, 0,
	0, 0, 0, 610, 611, 613, 0, 614, 615, 616,
	617, 612, 618, 619, 620, 621, 622, 623, 1668, 625,
	626, 624, 627, 628, 1389, 629, 630, 631, 632, 633,
	784, 634, 0, 635, 636, 644, 645, 646, 637, 638,
	640, 647, 639, 648, 649, 650, 651, 653, 652, 1669,
	655, 656, 654, 657, 658, 659, 1670, 660, 785, 661,
	641, 642, 662, 663, 1390, 664, 665, 666, 667, 668,
	669, 670, 786, 0, 671, 1671, 672, 673, 674, 675,
	676, 677, 679, 643, 680, 685, 686, 787, 681, 682,
	683, 684, 788, 688, 689, 690, 691, 1672, 692, 693,
	0, 687, 678, 1673, 694, 695, 696, 697, 698, 699,
	0, 700, 701, 1674, 702, 789, 790, 791, 792, 1675,
	714, 1676, 703, 705, 706, 707, 708, 793, 709, 794,
	1677, 710, 711, 712, 713, 704, 715, 716, 1678, 1679,
	717, 718, 719, 721, 723, 724, 720, 722, 725, 1680,
	726, 1681, 0, 727, 728, 729, 795, 796, 797, 1682,
	731, 732, 730, 733, 734, 737, 735, 736, 798, 738,
	739, 740, 1683, 1684, 1685, 1686, 741, 742, 799, 743,
	744, 745, 1602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 328, 327, 329, 330, 331, 332, 1608, 333, 334,
	1609, 1610, 1611, 0, 1612, 746, 1613, 1614, 1615, 335,
	1616, 336, 337, 338, 1374, 339, 340, 341, 342, 343,
	344, 345, 747, 748, 0, 346, 749, 347, 750, 1617,
	751, 348, 349, 350, 351, 352, 353, 354, 1618, 1619,
	0, 355, 752, 753, 754, 1620, 356, 357, 755, 1621,
	1688, 1622, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 1623, 367, 368, 369, 366, 370, 371, 1624, 372,
	0, 373, 374, 375, 376, 377, 378, 379, 1625, 380,
	381, 382, 1375, 383, 384, 385, 1626, 1627, 1629, 1628,
	1630, 1631, 1632, 386, 387, 388, 389, 390, 0, 391,
	393, 756, 757, 1633, 396, 398, 392, 394, 1634, 397,
	395, 399, 400, 1635, 401, 402, 403, 1636, 1637, 404,
	405, 406, 1638, 407, 408, 409, 1639, 410, 411, 412,
	1640, 413, 414, 758, 415, 416, 417, 419, 421, 418,
	420, 422, 423, 424, 425, 426, 759, 760, 427, 428,
	1641, 320, 1642, 0, 0, 0, 0, 429, 430, 431,
	761, 0, 0, 0, 432, 1643, 433, 434, 435, 1644,
	436, 437, 1645, 1376, 438, 439, 440, 762, 763, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 1646, 450,
	764, 1647, 765, 451, 1648, 452, 453, 454, 455, 456,
	457, 458, 766, 767, 768, 554, 1378, 459, 460, 461,
	1649, 462, 463, 464, 465, 466, 0, 0, 0, 467,
	468, 469, 470, 1650, 322, 321, 323, 1377, 769, 471,
	555, 472, 770, 771, 1651, 772, 1652, 473, 474, 476,
	1379, 773, 1380, 475, 477, 478, 1381, 479, 0, 0,
	0, 480, 481, 482, 483, 484, 485, 486, 1653, 487,
	489, 488, 1654, 491, 774, 490, 1382, 492, 493, 1383,
	1655, 494, 495, 496, 497, 498, 499, 502, 1656, 1657,
	500, 501, 503, 504, 0, 505, 506, 508, 511, 507,
	509, 510, 512, 525, 526, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 528, 0, 527,
	1384, 529, 530, 531, 532, 533, 541, 543, 544, 539,
	540, 542, 545, 546, 548, 536, 537, 538, 1385, 547,
	534, 1658, 535, 324, 1386, 549, 550, 551, 552, 1659,
	775, 553, 776, 556, 557, 1660, 0, 558, 0, 559,
	1661, 1662, 561, 562, 563, 1663, 1664, 564, 565, 777,
	1387, 566, 1388, 778, 567, 568, 560, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 1665, 579, 580,
	779, 581, 582, 583, 780, 584, 585, 586, 781, 587,
	782, 588, 589, 1666, 590, 591, 592, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 783, 601, 602, 604,
	603, 605, 1667, 606, 0, 607, 608, 609, 0, 0,
	0, 0, 0, 610, 611, 613, 0, 614, 615, 616,
	617, 612, 618, 619, 620, 621, 622, 623, 1668, 625,
	626, 624, 627, 628, 1389, 629, 630, 631, 632, 633,
	784, 634, 0, 635, 636, 644, 645, 646, 637, 638,
	640, 647, 639, 648, 649, 650, 651, 653, 652, 1669,
	655, 656, 654, 657, 658, 659, 1670, 660, 785, 661,
	641, 642, 662, 663, 1390, 664, 665, 666, 667, 668,
	669, 670, 786, 0, 671, 1671, 672, 673, 674, 675,
	676, 677, 679, 643, 680, 685, 686, 787, 681, 682,
	683, 684, 788, 688, 689, 690, 691, 1672, 692, 693,
	0, 687, 678, 1673, 694, 695, 696, 697, 698, 699,
	0, 700, 701, 1674, 702, 789, 790, 791, 792, 1675,
	714, 1676, 703, 705, 706, 707, 708, 793, 709, 794,
	1677, 710, 711, 712, 713, 704, 715, 716, 1678, 1679,
	717, 718, 719, 721, 723, 724, 720, 722, 725, 1680,
	726, 1681, 0, 727, 728, 729, 795, 796, 797, 1682,
	731, 732, 730, 733, 734, 737, 735, 736, 798, 738,
	739, 740, 1683, 1684, 1685, 1686, 741, 742, 799, 743,
	744, 745, 2954, 0, 1308, 1280, 1281, 1282, 1278, 1279,
	1291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 328, 327, 329, 330, 331, 332, 2951,
	333, 334, 0, 0, 0, 0, 0, 1334, 1296, 0,
	0, 335, 0, 336, 337, 338, 1374, 339, 340, 341,
	342, 343, 344, 345, 747, 1347, 0, 346, 1354, 347,
	1353, 0, 1364, 348, 349, 350, 351, 352, 353, 354,
	1298, 1333, 1262, 355, 1394, 1395, 754, 0, 356, 357,
	1340, 0, 1321, 0, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 0, 367, 368, 369, 366, 370, 371,
	0, 372, 0, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 382, 1375, 383, 384, 385, 1324, 1322,
	1323, 1330, 1326, 1325, 1329, 386, 387, 388, 389, 390,
	1357, 391, 393, 1351, 1350, 1267, 396, 398, 392, 394,
	0, 397, 395, 399, 400, 0, 401, 402, 403, 2952,
	0, 404, 1342, 406, 0, 407, 408, 409, 0, 410,
	411, 412, 0, 413, 414, 1273, 415, 416, 417, 419,
	421, 418, 420, 422, 423, 424, 425, 426, 1365, 1366,
	427, 428, 1287, 320, 0, 0, 0, 0, 0, 429,
	430, 431, 1349, 0, 0, 0, 432, 0, 433, 434,
	435, 0, 436, 437, 0, 1376, 438, 439, 440, 1362,
	1363, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	0, 450, 1372, 0, 1297, 451, 0, 452, 453, 454,
	455, 456, 457, 458, 1335, 1336, 1339, 554, 1378, 459,
	460, 461, 0, 462, 463, 464, 465, 466, 0, 0,
	0, 467, 468, 469, 470, 0, 1277, 321, 323, 1377,
	769, 471, 555, 472, 1344, 1345, 0, 1303, 0, 473,
	474, 476, 1379, 1337, 1380, 475, 477, 478, 1381, 479,
	0, 0, 0, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 489, 488, 0, 491, 1373, 490, 1382, 492,
	493, 1383, 0, 494, 495, 496, 497, 498, 499, 502,
	1328, 1327, 500, 501, 503, 504, 0, 505, 506, 508,
	511, 507, 509, 510, 512, 525, 526, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 528,
	0, 527, 1384, 529, 530, 531, 532, 533, 541, 543,
	544, 539, 540, 542, 545, 546, 548, 536, 537, 538,
	1385, 547, 534, 1264, 535, 324, 1386, 549, 550, 551,
	552, 1288, 1338, 553, 1352, 556, 557, 0, 0, 558,
	0, 559, 0, 0, 561, 562, 563, 0, 0, 564,
	565, 777, 1387, 566, 1388, 1367, 567, 568, 1274, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 779, 581, 582, 583, 780, 584, 585, 586,
	1368, 587, 782, 588, 589, 0, 590, 591, 592, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 1348, 601,
	602, 604, 603, 605, 0, 606, 0, 607, 608, 609,
	0, 0, 0, 0, 0, 610, 611, 613, 0, 614,
	615, 616, 617, 612, 618, 619, 620, 621, 622, 623,
	0, 625, 626, 624, 627, 628, 1389, 629, 630, 631,
	632, 633, 1275, 634, 0, 635, 636, 644, 645, 646,
	637, 638, 640, 647, 639, 648, 649, 650, 651, 653,
	652, 0, 655, 656, 654, 657, 658, 659, 1331, 660,
	785, 661, 641, 642, 662, 663, 1390, 664, 665, 666,
	667, 668, 669, 670, 1346, 0, 671, 0, 672, 673,
	674, 675, 676, 677, 679, 643, 680, 685, 686, 1393,
	681, 682, 683, 684, 1369, 688, 689, 690, 691, 0,
	692, 693, 1261, 687, 678, 0, 694, 695, 696, 697,
	698, 699, 0, 700, 701, 0, 702, 1358, 1359, 1360,
	1361, 0, 714, 0, 703, 705, 706, 707, 708, 1370,
	709, 1371, 1286, 710, 711, 712, 713, 704, 715, 716,
	0, 1268, 717, 718, 719, 721, 723, 724, 720, 722,
	725, 1332, 726, 0, 0, 727, 728, 729, 795, 1355,
	1392, 2950, 731, 732, 730, 733, 734, 737, 735, 736,
	798, 738, 739, 740, 0, 0, 0, 0, 741, 742,
	799, 743, 744, 745, 1265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1260,
	0, 0, 0, 0, 0, 0, 1258, 1259, 2953, 0,
	0, 0, 0, 0, 0, 0, 1292, 2949, 0, 1249,
	1290, 1308, 1280, 1281, 1282, 1278, 1279, 1291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	328, 327, 329, 330, 331, 332, 0, 333, 334, 0,
	0, 0, 0, 0, 1334, 1296, 0, 0, 335, 0,
	336, 337, 338, 1374, 339, 340, 341, 342, 343, 344,
	345, 747, 1347, 0, 346, 1354, 347, 1353, 0, 1364,
	348, 349, 350, 351, 352, 353, 354, 1298, 1333, 1262,
	355, 1394, 1395, 754, 0, 356, 357, 1340, 0, 1321,
	0, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	0, 367, 368, 369, 366, 370, 371, 0, 372, 0,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	382, 1375, 383, 384, 385, 1324, 1322, 1323, 1330, 1326,
	1325, 1329, 386, 387, 388, 389, 390, 1357, 391, 393,
	1351, 1350, 1267, 396, 398, 392, 394, 0, 397, 395,
	399, 400, 0, 401, 402, 403, 0, 0, 404, 1342,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	413, 414, 1273, 415, 416, 417, 419, 421, 418, 420,
	422, 423, 424, 425, 426, 1365, 1366, 427, 428, 1287,
	320, 0, 0, 0, 0, 0, 429, 430, 431, 1349,
	0, 0, 0, 432, 0, 433, 434, 435, 0, 436,
	437, 0, 1376, 438, 439, 440, 1362, 1363, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 1372,
	0, 1297, 451, 0, 452, 453, 454, 455, 456, 457,
	458, 1335, 1336, 1339, 554, 1378, 459, 460, 461, 0,
	462, 463, 464, 465, 466, 0, 0, 0, 467, 468,
	469, 470, 0, 1277, 321, 323, 1377, 769, 471, 555,
	472, 1344, 1345, 0, 1303, 0, 473, 474, 476, 1379,
	1337, 1380, 475, 477, 478, 1381, 479, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 489,
	488, 0, 491, 1373, 490, 1382, 492, 493, 1383, 0,
	494, 495, 496, 497, 498, 499, 502, 1328, 1327, 500,
	501, 503, 504, 0, 505, 506, 508, 511, 507, 509,
	510, 512, 525, 526, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 528, 0, 527, 1384,
	529, 530, 531, 532, 533, 541, 543, 544, 539, 540,
	542, 545, 546, 548, 536, 537, 538, 1385, 547, 534,
	1264, 535, 324, 1386, 549, 550, 551, 552, 1288, 1338,
	553, 1352, 556, 557, 0, 0, 558, 0, 559, 0,
	0, 561, 562, 563, 0, 0, 564, 565, 777, 1387,
	566, 1388, 1367, 567, 568, 1274, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 779,
	581, 582, 583, 780, 584, 585, 586, 1368, 587, 782,
	588, 589, 0, 590, 591, 592, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 1348, 601, 602, 604, 603,
	605, 0, 606, 0, 607, 608, 609, 0, 0, 0,
	0, 0, 610, 611, 613, 0, 614, 615, 616, 617,
	612, 618, 619, 620, 621, 622, 623, 0, 625, 626,
	624, 627, 628, 1389, 629, 630, 631, 632, 633, 1275,
	634, 0, 635, 636, 644, 645, 646, 637, 638, 640,
	647, 639, 648, 649, 650, 651, 653, 652, 276, 655,
	656, 654, 657, 658, 659, 1331, 660, 785, 661, 641,
	642, 662, 663, 1390, 664, 665, 666, 667, 668, 669,
	670, 1346, 0, 671, 0, 672, 673, 674, 675, 676,
	677, 679, 643, 680, 685, 686, 1393, 681, 682, 683,
	684, 1369, 688, 689, 690, 691, 0, 692, 693, 1261,
	687, 678, 278, 694, 695, 696, 697, 698, 699, 0,
	700, 701, 0, 702, 1358, 1359, 1360, 1361, 0, 714,
	0, 703, 705, 706, 707, 708, 1370, 709, 1371, 1286,
	710, 711, 712, 713, 704, 715, 716, 0, 1268, 717,
	718, 719, 721, 723, 724, 720, 722, 725, 1332, 726,
	0, 0, 727, 728, 729, 1854, 1355, 1392, 0, 731,
	732, 730, 733, 734, 737, 735, 736, 798, 738, 739,
	740, 0, 0, 0, 270, 741, 742, 799, 743, 744,
	745, 1265, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1260, 0, 0, 0,
	0, 0, 0, 1258, 1259, 1308, 1280, 1281, 1282, 1278,
	1279, 1291, 0, 2130, 2128, 0, 0, 1290, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 1334, 1296,
	0, 0, 335, 0, 336, 337, 338, 1374, 339, 340,
	341, 342, 343, 344, 345, 747, 1347, 0, 346, 1354,
	347, 1353, 0, 1364, 348, 349, 350, 351, 352, 353,
	354, 1298, 1333, 1262, 355, 1394, 1395, 754, 0, 356,
	357, 1340, 0, 1321, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 1375, 383, 384, 385, 1324,
	1322, 1323, 1330, 1326, 1325, 1329, 386, 387, 388, 389,
	390, 1357, 391, 393, 1351, 1350, 1267, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 1342, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 1273, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 1365,
	1366, 427, 428, 1287, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 1349, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 1376, 438, 439, 440,
	1362, 1363, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 1372, 0, 1297, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 1335, 1336, 1339, 554, 1378,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 1277, 321, 323,
	1377, 769, 471, 555, 472, 1344, 1345, 0, 1303, 0,
	473, 474, 476, 1379, 1337, 1380, 475, 477, 478, 1381,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 1373, 490, 1382,
	492, 493, 1383, 0, 494, 495, 496, 497, 498, 499,
	502, 1328, 1327, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 1384, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 1385, 547, 534, 1264, 535, 324, 1386, 549, 550,
	551, 552, 1288, 1338, 553, 1352, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 1387, 566, 1388, 1367, 567, 568, 1274,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 1368, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 1348,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 1389, 629, 630,
	631, 632, 633, 1275, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 276, 655, 656, 654, 657, 658, 659, 1331,
	660, 785, 661, 641, 642, 662, 663, 1390, 664, 665,
	666, 667, 668, 669, 670, 1346, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	1393, 681, 682, 683, 684, 1369, 688, 689, 690, 691,
	0, 692, 693, 1261, 687, 678, 278, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 1358, 1359,
	1360, 1361, 0, 714, 0, 703, 705, 706, 707, 708,
	1370, 709, 1371, 1286, 710, 711, 712, 713, 704, 715,
	716, 0, 1268, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 1332, 726, 0, 0, 727, 728, 729, 1854,
	1355, 1392, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 0, 0, 0, 270, 741,
	742, 799, 743, 744, 745, 1265, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1260, 0, 0, 0, 0, 0, 0, 1258, 1259, 1308,
	1280, 1281, 1282, 1278, 1279, 1291, 0, 2130, 3709, 0,
	0, 1290, 0, 0, 0, 0, 325, 326, 328, 327,
	329, 330, 331, 332, 0, 333, 334, 0, 0, 0,
	0, 0, 1334, 1296, 0, 0, 335, 0, 336, 337,
	338, 1374, 339, 340, 341, 342, 343, 344, 345, 747,
	1347, 0, 346, 1354, 347, 1353, 0, 1364, 348, 349,
	350, 351, 352, 353, 354, 1298, 1333, 1262, 355, 1394,
	1395, 754, 0, 356, 357, 1340, 0, 1321, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 382, 1375,
	383, 384, 385, 1324, 1322, 1323, 1330, 1326, 1325, 1329,
	386, 387, 388, 389, 390, 1357, 391, 393, 1351, 1350,
	1267, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 1342, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	1273, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 1365, 1366, 427, 428, 1287, 320, 0,
	0, 0, 0, 0, 429, 430, 431, 1349, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	1376, 438, 439, 440, 1362, 1363, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 1372, 0, 1297,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 1335,
	1336, 1339, 554, 1378, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 1277, 321, 323, 1377, 769, 471, 555, 472, 1344,
	1345, 0, 1303, 0, 473, 474, 476, 1379, 1337, 1380,
	475, 477, 478, 1381, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 1373, 490, 1382, 492, 493, 1383, 0, 494, 495,
	496, 497, 498, 499, 502, 1328, 1327, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 1384, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 1385, 547, 534, 1264, 535,
	324, 1386, 549, 550, 551, 552, 1288, 1338, 553, 1352,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 1387, 566, 1388,
	1367, 567, 568, 1274, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 1368, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 1348, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 1389, 629, 630, 631, 632, 633, 1275, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 651, 653, 652, 276, 655, 656, 654,
	657, 658, 659, 1331, 660, 785, 661, 641, 642, 662,
	663, 1390, 664, 665, 666, 667, 668, 669, 670, 1346,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 1393, 681, 682, 683, 684, 1369,
	688, 689, 690, 691, 0, 692, 693, 1261, 687, 678,
	278, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 1358, 1359, 1360, 1361, 0, 714, 0, 703,
	705, 706, 707, 708, 1370, 709, 1371, 1286, 710, 711,
	712, 713, 704, 715, 716, 0, 1268, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 1332, 726, 0, 0,
	727, 728, 729, 1854, 1355, 1392, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 0,
	0, 0, 270, 741, 742, 799, 743, 744, 745, 1265,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1260, 0, 0, 0, 0, 0,
	0, 1258, 1259, 1308, 1280, 1281, 1282, 1278, 1279, 1291,
	0, 2130, 2128, 0, 0, 1290, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 1334, 1296, 0, 0,
	335, 0, 336, 337, 338, 1374, 339, 340, 341, 342,
	343, 344, 345, 747, 1347, 0, 346, 1354, 347, 1353,
	3087, 1364, 348, 349, 350, 351, 352, 353, 354, 1298,
	1333, 1262, 355, 1394, 1395, 754, 0, 356, 357, 1340,
	0, 1321, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 1375, 383, 384, 385, 1324, 1322, 1323,
	1330, 1326, 1325, 1329, 386, 387, 388, 389, 390, 1357,
	391, 393, 1351, 1350, 1267, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 1342, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 1273, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 1365, 1366, 427,
	428, 1287, 320, 0, 0, 0, 0, 0, 429, 430,
	431, 1349, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 3092, 1376, 438, 439, 440, 1362, 1363,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 1372, 0, 1297, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 1335, 1336, 1339, 554, 1378, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 1277, 321, 323, 1377, 769,
	471, 555, 472, 1344, 1345, 0, 1303, 0, 473, 474,
	476, 1379, 1337, 1380, 475, 477, 478, 1381, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 3088, 491, 1373, 490, 1382, 492, 493,
	1383, 0, 494, 495, 496, 497, 498, 499, 502, 1328,
	1327, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 1384, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 1385,
	547, 534, 1264, 535, 324, 1386, 549, 550, 551, 552,
	1288, 1338, 553, 1352, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 1387, 566, 1388, 1367, 567, 568, 1274, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 1368,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 1348, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 1389, 629, 630, 631, 632,
	633, 1275, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 1331, 660, 785,
	661, 641, 642, 662, 663, 1390, 664, 665, 666, 667,
	668, 669, 670, 1346, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 1393, 681,
	682, 683, 684, 1369, 688, 689, 690, 691, 0, 692,
	693, 1261, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 1358, 1359, 1360, 1361,
	0, 714, 3089, 703, 705, 706, 707, 708, 1370, 709,
	1371, 1286, 710, 711, 712, 713, 704, 715, 716, 0,
	1268, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	1332, 726, 0, 0, 727, 728, 729, 795, 1355, 1392,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 0, 0, 0, 0, 741, 742, 799,
	743, 744, 745, 1265, 0, 0, 0, 0, 2999, 0,
	1308, 1280, 1281, 1282, 1278, 1279, 1291, 0, 1260, 0,
	0, 0, 0, 0, 0, 1258, 1259, 325, 326, 328,
	327, 329, 330, 331, 332, 1292, 333, 334, 0, 1290,
	0, 0, 0, 1334, 1296, 0, 0, 335, 0, 336,
	337, 338, 1374, 339, 340, 341, 342, 343, 344, 345,
	747, 1347, 0, 346, 1354, 347, 1353, 0, 1364, 348,
	349, 350, 351, 352, 353, 354, 1298, 1333, 1262, 355,
	1394, 1395, 754, 0, 356, 357, 1340, 0, 1321, 0,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 0,
	367, 368, 369, 366, 370, 371, 0, 372, 0, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 382,
	1375, 383, 384, 385, 1324, 1322, 1323, 1330, 1326, 1325,
	1329, 386, 387, 388, 389, 390, 1357, 391, 393, 1351,
	1350, 1267, 396, 398, 392, 394, 0, 397, 395, 399,
	400, 0, 401, 402, 403, 0, 0, 404, 1342, 406,
	0, 407, 408, 409, 0, 410, 411, 412, 0, 413,
	414, 1273, 415, 416, 417, 419, 421, 418, 420, 422,
	423, 424, 425, 426, 1365, 1366, 427, 428, 1287, 320,
	0, 0, 0, 0, 0, 429, 430, 431, 1349, 0,
	0, 0, 432, 0, 433, 434, 435, 0, 436, 437,
	0, 1376, 438, 439, 440, 1362, 1363, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 0, 450, 1372, 0,
	1297, 451, 0, 452, 453, 454, 455, 456, 457, 458,
	1335, 1336, 1339, 554, 1378, 459, 460, 461, 0, 462,
	463, 464, 465, 466, 0, 0, 0, 467, 468, 469,
	470, 0, 1277, 321, 323, 1377, 769, 471, 555, 472,
	1344, 1345, 0, 1303, 0, 473, 474, 476, 1379, 1337,
	1380, 475, 477, 478, 1381, 479, 0, 0, 0, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 489, 488,
	0, 491, 1373, 490, 1382, 492, 493, 1383, 0, 494,
	495, 496, 497, 498, 499, 502, 1328, 1327, 500, 501,
	503, 504, 0, 505, 506, 508, 511, 507, 509, 510,
	512, 525, 526, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 528, 0, 527, 1384, 529,
	530, 531, 532, 533, 541, 543, 544, 539, 540, 542,
	545, 546, 548, 536, 537, 538, 1385, 547, 534, 1264,
	535, 324, 1386, 549, 550, 551, 552, 1288, 1338, 553,
	1352, 556, 557, 0, 0, 558, 0, 559, 0, 0,
	561, 562, 563, 0, 0, 564, 565, 777, 1387, 566,
	1388, 1367, 567, 568, 1274, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 779, 581,
	582, 583, 780, 584, 585, 586, 1368, 587, 782, 588,
	589, 0, 590, 591, 592, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 1348, 601, 602, 604, 603, 605,
	0, 606, 0, 607, 608, 609, 0, 0, 0, 0,
	0, 610, 611, 613, 0, 614, 615, 616, 617, 612,
	618, 619, 620, 621, 622, 623, 0, 625, 626, 624,
	627, 628, 1389, 629, 630, 631, 632, 633, 1275, 634,
	0, 635, 636, 644, 645, 646, 637, 638, 640, 647,
	639, 648, 649, 650, 651, 653, 652, 0, 655, 656,
	654, 657, 658, 659, 1331, 660, 785, 661, 641, 642,
	662, 663, 1390, 664, 665, 666, 667, 668, 669, 670,
	1346, 0, 671, 0, 672, 673, 674, 675, 676, 677,
	679, 643, 680, 685, 686, 1393, 681, 682, 683, 684,
	1369, 688, 689, 690, 691, 0, 692, 693, 1261, 687,
	678, 0, 694, 695, 696, 697, 698, 699, 0, 700,
	701, 0, 702, 1358, 1359, 1360, 1361, 0, 714, 0,
	703, 705, 706, 707, 708, 1370, 709, 1371, 1286, 710,
	711, 712, 713, 704, 715, 716, 0, 1268, 717, 718,
	719, 721, 723, 724, 720, 722, 725, 1332, 726, 0,
	0, 727, 728, 729, 795, 1355, 1392, 0, 731, 732,
	730, 733, 734, 737, 735, 736, 798, 738, 739, 740,
	0, 0, 0, 0, 741, 742, 799, 743, 744, 745,
	1265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1260, 0, 0, 0, 0,
	0, 0, 1258, 1259, 0, 0, 0, 0, 0, 0,
	0, 0, 1292, 2997, 0, 2996, 1290, 1308, 1280, 1281,
	1282, 1278, 1279, 1291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 328, 327, 329, 330,
	331, 332, 0, 333, 334, 0, 0, 0, 0, 0,
	1334, 1296, 0, 0, 335, 0, 336, 337, 338, 1374,
	339, 340, 341, 342, 343, 344, 345, 747, 1347, 0,
	346, 1354, 347, 1353, 0, 1364, 348, 349, 350, 351,
	352, 353, 354, 1298, 1333, 1262, 355, 1394, 1395, 754,
	0, 356, 357, 1340, 0, 1321, 0, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 0, 367, 368, 369,
	366, 370, 371, 0, 372, 0, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 382, 1375, 383, 384,
	385, 1324, 1322, 1323, 1330, 1326, 1325, 1329, 386, 387,
	388, 389, 390, 1357, 391, 393, 1351, 1350, 1267, 396,
	398, 392, 394, 0, 397, 395, 399, 400, 0, 401,
	402, 403, 0, 0, 404, 1342, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 413, 414, 1273, 415,
	416, 417, 419, 421, 418, 420, 422, 423, 424, 425,
	426, 1365, 1366, 427, 428, 1287, 320, 0, 0, 0,
	0, 0, 429, 430, 431, 1349, 0, 0, 0, 432,
	0, 433, 434, 435, 0, 436, 437, 0, 1376, 438,
	439, 440, 1362, 1363, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 1372, 0, 1297, 451, 0,
	452, 453, 454, 455, 456, 457, 458, 1335, 1336, 1339,
	554, 1378, 459, 460, 461, 0, 462, 463, 464, 465,
	466, 0, 0, 0, 467, 468, 469, 470, 0, 1277,
	321, 323, 1377, 769, 471, 555, 472, 1344, 1345, 0,
	1303, 0, 473, 474, 476, 1379, 1337, 1380, 475, 477,
	478, 1381, 479, 0, 0, 0, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 489, 488, 0, 491, 1373,
	490, 1382, 492, 493, 1383, 0, 494, 495, 496, 497,
	498, 499, 502, 1328, 1327, 500, 501, 503, 504, 0,
	505, 506, 508, 511, 507, 509, 510, 512, 525, 526,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 528, 0, 527, 1384, 529, 530, 531, 532,
	533, 541, 543, 544, 539, 540, 542, 545, 546, 548,
	536, 537, 538, 1385, 547, 534, 1264, 535, 324, 1386,
	549, 550, 551, 552, 1288, 1338, 553, 1352, 556, 557,
	0, 0, 558, 0, 559, 0, 0, 561, 562, 563,
	0, 0, 564, 565, 777, 1387, 566, 1388, 1367, 567,
	568, 1274, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 779, 581, 582, 583, 780,
	584, 585, 586, 1368, 587, 782, 588, 589, 0, 590,
	591, 592, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 1348, 601, 602, 604, 603, 605, 0, 606, 0,
	607, 608, 609, 0, 0, 0, 0, 0, 610, 611,
	613, 0, 614, 615, 616, 617, 612, 618, 619, 620,
	621, 622, 623, 0, 625, 626, 624, 627, 628, 1389,
	629, 630, 631, 632, 633, 1275, 634, 0, 635, 636,
	644, 645, 646, 637, 638, 640, 647, 639, 648, 649,
	650, 651, 653, 652, 0, 655, 656, 654, 657, 658,
	659, 1331, 660, 785, 661, 641, 642, 662, 663, 1390,
	664, 665, 666, 667, 668, 669, 670, 1346, 0, 671,
	0, 672, 673, 674, 675, 676, 677, 679, 643, 680,
	685, 686, 1393, 681, 682, 683, 684, 1369, 688, 689,
	690, 691, 0, 692, 693, 1261, 687, 678, 0, 694,
	695, 696, 697, 698, 699, 0, 700, 701, 0, 702,
	1358, 1359, 1360, 1361, 0, 714, 0, 703, 705, 706,
	707, 708, 1370, 709, 1371, 1286, 710, 711, 712, 713,
	704, 715, 716, 0, 1268, 717, 718, 719, 721, 723,
	724, 720, 722, 725, 1332, 726, 0, 0, 727, 728,
	729, 795, 1355, 1392, 0, 731, 732, 730, 733, 734,
	737, 735, 736, 798, 738, 739, 740, 0, 0, 0,
	0, 741, 742, 799, 743, 744, 745, 1265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1260, 0, 0, 0, 0, 0, 0, 1258,
	1259, 0, 0, 0, 0, 0, 0, 0, 0, 1292,
	2994, 0, 2993, 1290, 1308, 1280, 1281, 1282, 1278, 1279,
	1291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 328, 327, 329, 330, 331, 332, 0,
	333, 334, 0, 0, 0, 0, 0, 1334, 1296, 0,
	0, 335, 0, 336, 337, 338, 1374, 339, 340, 341,
	342, 343, 344, 345, 747, 1347, 0, 346, 1354, 347,
	1353, 0, 1364, 348, 349, 350, 351, 352, 353, 354,
	1298, 1333, 1262, 355, 1394, 1395, 754, 0, 356, 357,
	1340, 0, 1321, 0, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 0, 367, 368, 369, 366, 370, 371,
	0, 372, 0, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 382, 1375, 383, 384, 385, 1324, 1322,
	1323, 1330, 1326, 1325, 1329, 386, 387, 388, 389, 390,
	1357, 391, 393, 1351, 1350, 1267, 396, 398, 392, 394,
	0, 397, 395, 399, 400, 0, 401, 402, 403, 0,
	0, 404, 1342, 406, 0, 407, 408, 409, 0, 410,
	411, 412, 0, 413, 414, 1273, 415, 416, 417, 419,
	421, 418, 420, 422, 423, 424, 425, 426, 1365, 1366,
	427, 428, 1287, 320, 0, 0, 0, 0, 0, 429,
	430, 431, 1349, 0, 0, 0, 432, 0, 433, 434,
	435, 0, 436, 437, 0, 1376, 438, 439, 440, 1362,
	1363, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	0, 450, 1372, 0, 1297, 451, 0, 452, 453, 454,
	455, 456, 457, 458, 1335, 1336, 1339, 554, 1378, 459,
	460, 461, 0, 462, 463, 464, 465, 466, 0, 0,
	0, 467, 468, 469, 470, 0, 1277, 321, 323, 1377,
	769, 471, 555, 472, 1344, 1345, 0, 1303, 0, 473,
	474, 476, 1379, 1337, 1380, 475, 477, 478, 1381, 479,
	0, 0, 0, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 489, 488, 0, 491, 1373, 490, 1382, 492,
	493, 1383, 0, 494, 495, 496, 497, 498, 499, 502,
	1328, 1327, 500, 501, 503, 504, 0, 505, 506, 508,
	511, 507, 509, 510, 512, 525, 526, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 528,
	0, 527, 1384, 529, 530, 531, 532, 533, 541, 543,
	544, 539, 540, 542, 545, 546, 548, 536, 537, 538,
	1385, 547, 534, 1264, 535, 324, 1386, 549, 550, 551,
	552, 1288, 1338, 553, 1352, 556, 557, 0, 0, 558,
	0, 559, 0, 0, 561, 562, 563, 0, 0, 564,
	565, 777, 1387, 566, 1388, 1367, 567, 568, 1274, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 779, 581, 582, 583, 780, 584, 585, 586,
	1368, 587, 782, 588, 589, 0, 590, 591, 592, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 1348, 601,
	602, 604, 603, 605, 0, 606, 0, 607, 608, 609,
	0, 0, 0, 0, 0, 610, 611, 613, 0, 614,
	615, 616, 617, 612, 618, 619, 620, 621, 622, 623,
	0, 625, 626, 624, 627, 628, 1389, 629, 630, 631,
	632, 633, 1275, 634, 0, 635, 636, 644, 645, 646,
	637, 638, 640, 647, 639, 648, 649, 650, 651, 653,
	652, 0, 655, 656, 654, 657, 658, 659, 1331, 660,
	785, 661, 641, 642, 662, 663, 1390, 664, 665, 666,
	667, 668, 669, 670, 1346, 0, 671, 0, 672, 673,
	674, 675, 676, 677, 679, 643, 680, 685, 686, 1393,
	681, 682, 683, 684, 1369, 688, 689, 690, 691, 0,
	692, 693, 1261, 687, 678, 0, 694, 695, 696, 697,
	698, 699, 0, 700, 701, 0, 702, 1358, 1359, 1360,
	1361, 0, 714, 0, 703, 705, 706, 707, 708, 1370,
	709, 1371, 1286, 710, 711, 712, 713, 704, 715, 716,
	0, 1268, 717, 718, 719, 721, 723, 724, 720, 722,
	725, 1332, 726, 0, 0, 727, 728, 729, 795, 1355,
	1392, 0, 731, 732, 730, 733, 734, 737, 735, 736,
	798, 738, 739, 740, 0, 0, 0, 0, 741, 742,
	799, 743, 744, 745, 1265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1260,
	0, 0, 0, 0, 0, 0, 1258, 1259, 0, 0,
	0, 0, 0, 0, 0, 0, 1292, 2991, 0, 2990,
	1290, 1308, 1280, 1281, 1282, 1278, 1279, 1291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	328, 327, 329, 330, 331, 332, 0, 333, 334, 0,
	0, 0, 0, 0, 1334, 1296, 0, 0, 335, 0,
	336, 337, 338, 1374, 339, 340, 341, 342, 343, 344,
	345, 747, 1347, 0, 346, 1354, 347, 1353, 0, 1364,
	348, 349, 350, 351, 352, 353, 354, 1298, 1333, 1262,
	355, 1394, 1395, 754, 0, 356, 357, 1340, 0, 1321,
	0, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	0, 367, 368, 369, 366, 370, 371, 0, 372, 0,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	382, 1375, 383, 384, 385, 1324, 1322, 1323, 1330, 1326,
	1325, 1329, 386, 387, 388, 389, 390, 1357, 391, 393,
	1351, 1350, 1267, 396, 398, 392, 394, 0, 397, 395,
	399, 400, 0, 401, 402, 403, 0, 0, 404, 1342,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	413, 414, 1273, 415, 416, 417, 419, 421, 418, 420,
	422, 423, 424, 425, 426, 1365, 1366, 427, 428, 1287,
	320, 0, 0, 0, 0, 0, 429, 430, 431, 1349,
	0, 0, 0, 432, 0, 433, 434, 435, 0, 436,
	437, 0, 1376, 438, 439, 440, 1362, 1363, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 1372,
	0, 1297, 451, 0, 452, 453, 454, 455, 456, 457,
	458, 1335, 1336, 1339, 554, 1378, 459, 460, 461, 0,
	462, 463, 464, 465, 466, 0, 0, 0, 467, 468,
	469, 470, 0, 1277, 321, 323, 1377, 769, 471, 555,
	472, 1344, 1345, 0, 1303, 0, 473, 474, 476, 1379,
	1337, 1380, 475, 477, 478, 1381, 479, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 489,
	488, 0, 491, 1373, 490, 1382, 492, 493, 1383, 0,
	494, 495, 496, 497, 498, 499, 502, 1328, 1327, 500,
	501, 503, 504, 0, 505, 506, 508, 511, 507, 509,
	510, 512, 525, 526, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 528, 0, 527, 1384,
	529, 530, 531, 532, 533, 541, 543, 544, 539, 540,
	542, 545, 546, 548, 536, 537, 538, 1385, 547, 534,
	1264, 535, 324, 1386, 549, 550, 551, 552, 1288, 1338,
	553, 1352, 556, 557, 0, 0, 558, 0, 559, 0,
	0, 561, 562, 563, 0, 0, 564, 565, 777, 1387,
	566, 1388, 1367, 567, 568, 1274, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 779,
	581, 582, 583, 780, 584, 585, 586, 1368, 587, 782,
	588, 589, 0, 590, 591, 592, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 1348, 601, 602, 604, 603,
	605, 0, 606, 0, 607, 608, 609, 0, 0, 0,
	0, 0, 610, 611, 613, 0, 614, 615, 616, 617,
	612, 618, 619, 620, 621, 622, 623, 0, 625, 626,
	624, 627, 628, 1389, 629, 630, 631, 632, 633, 1275,
	634, 0, 635, 636, 644, 645, 646, 637, 638, 640,
	647, 639, 648, 649, 650, 651, 653, 652, 0, 655,
	656, 654, 657, 658, 659, 1331, 660, 785, 661, 641,
	642, 662, 663, 1390, 664, 665, 666, 667, 668, 669,
	670, 1346, 0, 671, 0, 672, 673, 674, 675, 676,
	677, 679, 643, 680, 685, 686, 1393, 681, 682, 683,
	684, 1369, 688, 689, 690, 691, 0, 692, 693, 1261,
	687, 678, 0, 694, 695, 696, 697, 698, 699, 0,
	700, 701, 0, 702, 1358, 1359, 1360, 1361, 0, 714,
	0, 703, 705, 706, 707, 708, 1370, 709, 1371, 1286,
	710, 711, 712, 713, 704, 715, 716, 0, 1268, 717,
	718, 719, 721, 723, 724, 720, 722, 725, 1332, 726,
	0, 0, 727, 728, 729, 795, 1355, 1392, 0, 731,
	732, 730, 733, 734, 737, 735, 736, 798, 738, 739,
	740, 0, 0, 0, 0, 741, 742, 799, 743, 744,
	745, 1265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1260, 0, 0, 0,
	0, 0, 0, 1258, 1259, 0, 0, 0, 0, 0,
	0, 0, 0, 1292, 2988, 0, 1958, 1290, 1308, 1280,
	1281, 1282, 1278, 1279, 1291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 328, 327, 329,
	330, 331, 332, 0, 333, 334, 0, 0, 0, 0,
	0, 1334, 1296, 0, 0, 335, 0, 336, 337, 338,
	1374, 339, 340, 341, 342, 343, 344, 345, 747, 1347,
	0, 346, 1354, 347, 1353, 0, 1364, 348, 349, 350,
	351, 352, 353, 354, 1298, 1333, 1262, 355, 1394, 1395,
	754, 0, 356, 357, 1340, 0, 1321, 0, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 0, 367, 368,
	369, 366, 370, 371, 0, 372, 0, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 381, 382, 1375, 383,
	384, 385, 1324, 1322, 1323, 1330, 1326, 1325, 1329, 386,
	387, 388, 389, 390, 1357, 391, 393, 1351, 1350, 1267,
	396, 398, 392, 394, 0, 397, 395, 399, 400, 0,
	401, 402, 403, 0, 0, 404, 1342, 406, 0, 407,
	408, 409, 0, 410, 411, 412, 0, 413, 414, 1273,
	415, 416, 417, 419, 421, 418, 420, 422, 423, 424,
	425, 426, 1365, 1366, 427, 428, 1287, 320, 0, 0,
	0, 0, 0, 429, 430, 431, 1349, 0, 0, 0,
	432, 0, 433, 434, 435, 0, 436, 437, 0, 1376,
	438, 439, 440, 1362, 1363, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 1372, 0, 1297, 451,
	0, 452, 453, 454, 455, 456, 457, 458, 1335, 1336,
	1339, 554, 1378, 459, 460, 461, 0, 462, 463, 464,
	465, 466, 0, 0, 0, 467, 468, 469, 470, 0,
	1277, 321, 323, 1377, 769, 471, 555, 472, 1344, 1345,
	0, 1303, 0, 473, 474, 476, 1379, 1337, 1380, 475,
	477, 478, 1381, 479, 0, 0, 0, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 489, 488, 0, 491,
	1373, 490, 1382, 492, 493, 1383, 0, 494, 495, 496,
	497, 498, 499, 502, 1328, 1327, 500, 501, 503, 504,
	0, 505, 506, 508, 511, 507, 509, 510, 512, 525,
	526, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 528, 0, 527, 1384, 529, 530, 531,
	532, 533, 541, 543, 544, 539, 540, 542, 545, 546,
	548, 536, 537, 538, 1385, 547, 534, 1264, 535, 324,
	1386, 549, 550, 551, 552, 1288, 1338, 553, 1352, 556,
	557, 0, 0, 558, 0, 559, 0, 0, 561, 562,
	563, 0, 0, 564, 565, 777, 1387, 566, 1388, 1367,
	567, 568, 1274, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 779, 581, 582, 583,
	780, 584, 585, 586, 1368, 587, 782, 588, 589, 0,
	590, 591, 592, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 1348, 601, 602, 604, 603, 605, 0, 606,
	0, 607, 608, 609, 0, 0, 0, 0, 0, 610,
	611, 613, 0, 614, 615, 616, 617, 612, 618, 619,
	620, 621, 622, 623, 0, 625, 626, 624, 627, 628,
	1389, 629, 630, 631, 632, 633, 1275, 634, 0, 635,
	636, 644, 645, 646, 637, 638, 640, 647, 639, 648,
	649, 650, 651, 653, 652, 0, 655, 656, 654, 657,
	658, 659, 1331, 660, 785, 661, 641, 642, 662, 663,
	1390, 664, 665, 666, 667, 668, 669, 670, 1346, 0,
	671, 0, 672, 673, 674, 675, 676, 677, 679, 643,
	680, 685, 686, 1393, 681, 682, 683, 684, 1369, 688,
	689, 690, 691, 0, 692, 693, 1261, 687, 678, 0,
	694, 695, 696, 697, 698, 699, 0, 700, 701, 0,
	702, 1358, 1359, 1360, 1361, 0, 714, 0, 703, 705,
	706, 707, 708, 1370, 709, 1371, 1286, 710, 711, 712,
	713, 704, 715, 716, 0, 1268, 717, 718, 719, 721,
	723, 724, 720, 722, 725, 1332, 726, 0, 0, 727,
	728, 729, 795, 1355, 1392, 0, 731, 732, 730, 733,
	734, 737, 735, 736, 798, 738, 739, 740, 1957, 0,
	0, 0, 741, 742, 799, 743, 744, 745, 1265, 0,
	0, 0, 0, 1254, 0, 1308, 1280, 1281, 1282, 1278,
	1279, 1291, 0, 1260, 0, 0, 0, 0, 0, 0,
	1258, 1259, 325, 326, 328, 327, 329, 330, 331, 332,
	1292, 333, 334, 0, 1290, 0, 0, 0, 1334, 1296,
	0, 0, 335, 0, 336, 337, 338, 1374, 339, 340,
	341, 342, 343, 344, 345, 747, 1347, 0, 346, 1354,
	347, 1353, 0, 1364, 348, 349, 350, 351, 352, 353,
	354, 1298, 1333, 1262, 355, 1394, 1395, 754, 0, 356,
	357, 1340, 0, 1321, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 1375, 383, 384, 385, 1324,
	1322, 1323, 1330, 1326, 1325, 1329, 386, 387, 388, 389,
	390, 1357, 391, 393, 1351, 1350, 1267, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 1342, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 1273, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 1365,
	1366, 427, 428, 1287, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 1349, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 1376, 438, 439, 440,
	1362, 1363, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 1372, 0, 1297, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 1335, 1336, 1339, 554, 1378,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 1277, 321, 323,
	1377, 769, 471, 555, 472, 1344, 1345, 0, 1303, 0,
	473, 474, 476, 1379, 1337, 1380, 475, 477, 478, 1381,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 1373, 490, 1382,
	492, 493, 1383, 0, 494, 495, 496, 497, 498, 499,
	502, 1328, 1327, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 1384, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 1385, 547, 534, 1264, 535, 324, 1386, 549, 550,
	551, 552, 1288, 1338, 553, 1352, 556, 557, 0, 0,
	558, 0, 559, 1269, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 1387, 566, 1388, 1367, 567, 568, 1274,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 1368, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 1348,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 1389, 629, 630,
	631, 632, 633, 1275, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 1331,
	660, 785, 661, 641, 642, 662, 663, 1390, 664, 665,
	666, 667, 668, 669, 670, 1346, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	1393, 681, 682, 683, 684, 1369, 688, 689, 690, 691,
	0, 692, 693, 1261, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 1358, 1359,
	1360, 1361, 0, 714, 0, 703, 705, 706, 707, 708,
	1370, 709, 1371, 1286, 710, 711, 712, 713, 704, 715,
	716, 0, 1268, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 1332, 726, 0, 0, 727, 728, 729, 795,
	1355, 1392, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 0, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 1265, 0, 0, 0, 0,
	0, 0, 1308, 1280, 1281, 1282, 1278, 1279, 1291, 0,
	1260, 0, 0, 0, 0, 0, 0, 1258, 1259, 325,
	326, 328, 327, 329, 330, 331, 332, 1292, 333, 334,
	0, 1290, 0, 0, 0, 1334, 1296, 0, 0, 335,
	0, 336, 337, 338, 1374, 339, 340, 341, 342, 343,
	344, 345, 747, 1347, 0, 346, 1354, 347, 1353, 0,
	1364, 348, 349, 350, 351, 352, 353, 354, 1298, 1333,
	1262, 355, 1394, 1395, 754, 0, 356, 357, 1340, 0,
	1321, 0, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 0, 367, 368, 369, 366, 370, 371, 0, 372,
	0, 373, 374, 375, 376, 5451, 378, 379, 0, 380,
	381, 382, 1375, 383, 384, 385, 1324, 1322, 1323, 1330,
	1326, 1325, 1329, 386, 387, 388, 389, 390, 1357, 391,
	393, 1351, 1350, 1267, 396, 398, 392, 394, 0, 397,
	395, 399, 400, 0, 401, 402, 403, 0, 0, 404,
	1342, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 413, 414, 1273, 415, 416, 417, 419, 421, 418,
	420, 422, 423, 424, 425, 426, 1365, 1366, 427, 428,
	1287, 320, 0, 0, 0, 0, 0, 429, 430, 431,
	1349, 0, 0, 0, 432, 0, 433, 434, 435, 0,
	436, 437, 0, 1376, 438, 439, 440, 1362, 1363, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	1372, 0, 1297, 451, 0, 452, 453, 454, 455, 456,
	457, 458, 1335, 1336, 1339, 554, 1378, 459, 460, 461,
	0, 462, 463, 464, 465, 466, 0, 0, 0, 467,
	468, 469, 470, 0, 1277, 321, 323, 1377, 769, 471,
	555, 472, 1344, 1345, 0, 1303, 0, 473, 474, 476,
	1379, 1337, 1380, 475, 477, 478, 1381, 479, 0, 0,
	0, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	489, 488, 0, 491, 1373, 490, 1382, 492, 493, 1383,
	0, 494, 495, 496, 497, 498, 499, 502, 1328, 1327,
	500, 501, 503, 504, 0, 505, 506, 508, 511, 507,
	509, 510, 512, 525, 526, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 528, 0, 527,
	1384, 529, 530, 531, 532, 533, 541, 543, 544, 539,
	540, 542, 545, 546, 548, 536, 537, 538, 1385, 547,
	534, 1264, 535, 324, 1386, 549, 550, 551, 552, 1288,
	1338, 553, 1352, 556, 557, 0, 0, 558, 0, 559,
	1269, 0, 561, 562, 563, 0, 0, 564, 565, 777,
	1387, 566, 1388, 1367, 567, 568, 1274, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	779, 581, 582, 583, 780, 584, 585, 586, 1368, 587,
	782, 588, 589, 0, 590, 591, 592, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 1348, 601, 602, 604,
	603, 605, 0, 606, 0, 607, 608, 609, 0, 0,
	0, 0, 0, 610, 611, 613, 0, 614, 615, 616,
	617, 612, 618, 619, 620, 621, 622, 623, 0, 625,
	626, 624, 627, 628, 1389, 629, 630, 631, 632, 633,
	1275, 634, 0, 635, 636, 644, 645, 646, 637, 638,
	640, 647, 639, 648, 649, 650, 651, 653, 652, 0,
	655, 656, 654, 657, 658, 659, 1331, 660, 785, 661,
	641, 642, 662, 663, 1390, 664, 665, 666, 667, 668,
	669, 670, 1346, 0, 671, 0, 672, 673, 674, 675,
	676, 677, 679, 643, 680, 685, 686, 1393, 681, 682,
	683, 684, 1369, 688, 689, 690, 691, 0, 692, 693,
	1261, 687, 678, 0, 694, 695, 696, 697, 698, 699,
	0, 700, 701, 0, 702, 1358, 1359, 1360, 1361, 0,
	714, 0, 703, 705, 706, 707, 708, 1370, 709, 1371,
	1286, 710, 711, 712, 713, 704, 715, 716, 0, 1268,
	717, 718, 719, 721, 723, 724, 720, 722, 725, 1332,
	726, 0, 0, 727, 728, 729, 795, 1355, 1392, 0,
	731, 732, 730, 733, 734, 737, 735, 736, 798, 738,
	739, 740, 0, 0, 0, 0, 741, 742, 799, 743,
	744, 745, 1265, 0, 0, 0, 0, 0, 0, 1308,
	1280, 1281, 1282, 1278, 1279, 1291, 0, 1260, 0, 0,
	0, 0, 0, 0, 1258, 1259, 325, 326, 328, 327,
	329, 330, 331, 332, 1292, 333, 334, 0, 1290, 0,
	0, 0, 1334, 1296, 0, 0, 335, 0, 336, 337,
	338, 1374, 339, 340, 341, 342, 343, 344, 345, 747,
	1347, 0, 346, 1354, 347, 1353, 0, 1364, 348, 349,
	350, 351, 352, 353, 354, 1298, 1333, 1262, 355, 1394,
	1395, 754, 0, 356, 357, 1340, 0, 1321, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 382, 1375,
	383, 384, 385, 1324, 1322, 1323, 1330, 1326, 1325, 1329,
	386, 387, 388, 389, 390, 1357, 391, 393, 1351, 1350,
	1267, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 1342, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	1273, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 1365, 1366, 427, 428, 1287, 320, 0,
	0, 0, 0, 0, 429, 430, 431, 1349, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	1376, 438, 439, 440, 1362, 1363, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 1372, 0, 1297,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 1335,
	1336, 1339, 554, 1378, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 1277, 321, 2829, 1377, 769, 471, 555, 472, 1344,
	1345, 0, 1303, 0, 473, 474, 476, 1379, 1337, 1380,
	475, 477, 478, 1381, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 1373, 490, 1382, 492, 493, 1383, 0, 494, 495,
	496, 497, 498, 499, 502, 1328, 1327, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 1384, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 1385, 547, 534, 1264, 535,
	324, 1386, 549, 550, 551, 552, 1288, 1338, 553, 1352,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 1387, 566, 1388,
	1367, 567, 568, 1274, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 1368, 587, 782, 588, 589,
	2828, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 1348, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 1389, 629, 630, 631, 632, 633, 1275, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 651, 653, 652, 0, 655, 656, 654,
	657, 658, 659, 1331, 660, 785, 661, 641, 642, 662,
	663, 1390, 664, 665, 666, 667, 668, 669, 670, 1346,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 1393, 681, 682, 683, 684, 1369,
	688, 689, 690, 691, 0, 692, 693, 1261, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 1358, 1359, 1360, 1361, 0, 714, 0, 703,
	705, 706, 707, 708, 1370, 709, 1371, 1286, 710, 711,
	712, 713, 704, 715, 716, 0, 1268, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 1332, 726, 0, 0,
	727, 728, 729, 795, 1355, 1392, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 0,
	0, 0, 0, 741, 742, 799, 743, 744, 745, 1265,
	0, 0, 0, 0, 0, 0, 1308, 1280, 1281, 1282,
	1278, 1279, 1291, 0, 1260, 0, 0, 0, 0, 0,
	0, 1258, 1259, 325, 326, 328, 327, 329, 330, 331,
	332, 1292, 333, 334, 0, 1290, 0, 0, 0, 1334,
	1296, 0, 0, 335, 0, 336, 337, 338, 1374, 339,
	340, 341, 342, 343, 344, 345, 747, 1347, 0, 346,
	1354, 347, 1353, 0, 1364, 348, 349, 350, 351, 352,
	353, 354, 1298, 1333, 1262, 355, 1394, 1395, 754, 0,
	356, 357, 1340, 0, 1321, 0, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 0, 367, 368, 369, 366,
	370, 371, 0, 372, 0, 373, 374, 375, 376, 5158,
	378, 379, 0, 380, 381, 382, 1375, 383, 384, 385,
	1324, 1322, 1323, 1330, 1326, 1325, 1329, 386, 387, 388,
	389, 390, 1357, 391, 393, 1351, 1350, 1267, 396, 398,
	392, 394, 0, 397, 395, 399, 400, 0, 401, 402,
	403, 0, 0, 404, 1342, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 413, 414, 1273, 415, 416,
	417, 419, 421, 418, 420, 422, 423, 424, 425, 426,
	1365, 1366, 427, 428, 1287, 320, 0, 0, 0, 0,
	0, 429, 430, 431, 1349, 0, 0, 0, 432, 0,
	433, 434, 435, 0, 436, 437, 0, 1376, 438, 439,
	440, 1362, 1363, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 1372, 0, 1297, 451, 0, 452,
	453, 454, 455, 456, 457, 458, 1335, 1336, 1339, 554,
	1378, 459, 460, 461, 0, 462, 463, 464, 465, 466,
	0, 0, 0, 467, 468, 469, 470, 0, 1277, 321,
	323, 1377, 769, 471, 555, 472, 1344, 1345, 0, 1303,
	0, 473, 474, 476, 1379, 1337, 1380, 475, 477, 478,
	1381, 479, 0, 0, 0, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 489, 488, 0, 491, 1373, 490,
	1382, 492, 493, 1383, 0, 494, 495, 496, 497, 498,
	499, 502, 1328, 1327, 500, 501, 503, 504, 0, 505,
	506, 508, 511, 507, 509, 510, 512, 525, 526, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 528, 0, 527, 1384, 529, 530, 531, 532, 533,
	541, 543, 544, 539, 540, 542, 545, 546, 548, 536,
	537, 538, 1385, 547, 534, 1264, 535, 324, 1386, 549,
	550, 551, 552, 1288, 1338, 553, 1352, 556, 557, 0,
	0, 558, 0, 559, 1269, 0, 561, 562, 563, 0,
	0, 564, 565, 777, 1387, 566, 1388, 1367, 567, 568,
	1274, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 779, 581, 582, 583, 780, 584,
	585, 586, 1368, 587, 782, 588, 589, 0, 590, 591,
	592, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	1348, 601, 602, 604, 603, 605, 0, 606, 0, 607,
	608, 609, 0, 0, 0, 0, 0, 610, 611, 613,
	0, 614, 615, 616, 617, 612, 618, 619, 620, 621,
	622, 623, 0, 625, 626, 624, 627, 628, 1389, 629,
	630, 631, 632, 633, 1275, 634, 0, 635, 636, 644,
	645, 646, 637, 638, 640, 647, 639, 648, 649, 650,
	651, 653, 652, 0, 655, 656, 654, 657, 658, 659,
	1331, 660, 785, 661, 641, 642, 662, 663, 1390, 664,
	665, 666, 667, 668, 669, 670, 1346, 0, 671, 0,
	672, 673, 674, 675, 676, 677, 679, 643, 680, 685,
	686, 1393, 681, 682, 683, 684, 1369, 688, 689, 690,
	691, 0, 692, 693, 1261, 687, 678, 0, 694, 695,
	696, 697, 698, 699, 0, 700, 701, 0, 702, 1358,
	1359, 1360, 1361, 0, 714, 0, 703, 705, 706, 707,
	708, 1370, 709, 1371, 1286, 710, 711, 712, 713, 704,
	715, 716, 0, 1268, 717, 718, 719, 721, 723, 724,
	720, 722, 725, 1332, 726, 0, 0, 727, 728, 729,
	795, 1355, 1392, 0, 731, 732, 730, 733, 734, 737,
	735, 736, 798, 738, 739, 740, 0, 0, 0, 0,
	741, 742, 799, 743, 744, 745, 1265, 0, 0, 0,
	0, 0, 0, 1308, 1280, 1281, 1282, 1278, 1279, 1291,
	0, 1260, 0, 0, 0, 0, 0, 0, 1258, 1259,
	325, 326, 328, 327, 329, 330, 331, 332, 1292, 333,
	334, 0, 1290, 0, 0, 0, 1334, 1296, 0, 0,
	335, 0, 336, 337, 338, 1374, 339, 340, 341, 342,
	343, 344, 345, 747, 1347, 0, 346, 1354, 347, 1353,
	0, 1364, 348, 349, 350, 351, 352, 353, 354, 1298,
	1333, 1262, 355, 1394, 1395, 754, 0, 356, 357, 1340,
	0, 1321, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 1375, 383, 384, 385, 1324, 1322, 1323,
	1330, 1326, 1325, 1329, 386, 387, 388, 389, 390, 1357,
	391, 393, 1351, 1350, 1267, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 1342, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 1273, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 1365, 1366, 427,
	428, 1287, 320, 0, 0, 0, 0, 0, 429, 430,
	431, 1349, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 1376, 438, 439, 440, 1362, 1363,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 1372, 0, 1297, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 1335, 1336, 1339, 554, 1378, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 1277, 321, 323, 1377, 769,
	471, 555, 472, 1344, 1345, 0, 1303, 0, 473, 474,
	476, 1379, 1337, 1380, 475, 477, 478, 1381, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 1373, 490, 1382, 492, 493,
	1383, 0, 494, 495, 496, 497, 498, 499, 502, 1328,
	1327, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 1384, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 1385,
	547, 534, 1264, 535, 324, 1386, 549, 550, 551, 552,
	1288, 1338, 553, 1352, 556, 557, 0, 0, 558, 0,
	559, 1269, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 1387, 566, 1388, 1367, 567, 568, 1274, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 1368,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 1348, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 1389, 629, 630, 631, 632,
	633, 1275, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 1331, 660, 785,
	661, 641, 642, 662, 663, 1390, 664, 665, 666, 667,
	668, 669, 670, 1346, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 1393, 681,
	682, 683, 684, 1369, 688, 689, 690, 691, 0, 692,
	693, 1261, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 1358, 1359, 1360, 1361,
	0, 714, 0, 703, 705, 706, 707, 708, 1370, 709,
	1371, 1286, 710, 711, 712, 713, 704, 715, 716, 0,
	1268, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	1332, 726, 0, 0, 727, 728, 729, 795, 1355, 1392,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 0, 0, 0, 0, 741, 742, 799,
	743, 744, 745, 1265, 0, 0, 0, 0, 0, 0,
	1308, 1280, 1281, 1282, 1278, 1279, 1291, 0, 1260, 0,
	0, 0, 0, 0, 0, 1258, 1259, 325, 326, 328,
	327, 329, 330, 331, 332, 1292, 333, 334, 0, 1290,
	0, 0, 0, 1334, 1296, 0, 0, 335, 0, 336,
	337, 338, 1374, 339, 340, 341, 342, 343, 344, 345,
	747, 1347, 0, 346, 1354, 347, 1353, 0, 1364, 348,
	349, 350, 351, 352, 353, 354, 1298, 1333, 1262, 355,
	1394, 1395, 754, 0, 356, 357, 1340, 0, 1321, 0,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 0,
	367, 368, 369, 366, 370, 371, 0, 372, 0, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 382,
	1375, 383, 384, 385, 1324, 1322, 1323, 1330, 1326, 1325,
	1329, 386, 387, 388, 389, 390, 1357, 391, 393, 1351,
	1350, 1267, 396, 398, 392, 394, 0, 397, 395, 399,
	400, 0, 401, 402, 403, 0, 0, 404, 1342, 406,
	0, 407, 408, 409, 0, 410, 411, 412, 0, 413,
	414, 1273, 415, 416, 417, 419, 421, 418, 420, 422,
	423, 424, 425, 426, 1365, 1366, 427, 428, 1287, 320,
	0, 0, 0, 0, 0, 429, 430, 431, 1349, 0,
	0, 0, 432, 0, 433, 434, 435, 0, 436, 437,
	0, 1376, 438, 439, 440, 1362, 1363, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 0, 450, 1372, 0,
	1297, 451, 0, 452, 453, 454, 455, 456, 457, 458,
	1335, 1336, 1339, 554, 1378, 459, 460, 461, 0, 462,
	463, 464, 465, 466, 0, 0, 0, 467, 468, 469,
	470, 0, 1277, 321, 323, 1377, 769, 471, 555, 472,
	1344, 1345, 0, 1303, 0, 473, 474, 476, 1379, 1337,
	1380, 475, 477, 478, 1381, 479, 0, 0, 0, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 489, 488,
	0, 491, 1373, 490, 1382, 492, 493, 1383, 0, 494,
	495, 496, 497, 498, 499, 502, 1328, 1327, 500, 501,
	503, 504, 0, 505, 506, 508, 511, 507, 509, 510,
	512, 525, 526, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 528, 0, 527, 1384, 529,
	530, 531, 532, 533, 541, 543, 544, 539, 540, 542,
	545, 546, 548, 536, 537, 538, 1385, 547, 534, 1264,
	535, 4680, 1386, 549, 550, 551, 552, 1288, 1338, 553,
	1352, 556, 557, 0, 0, 558, 0, 559, 0, 0,
	561, 562, 563, 0, 0, 564, 565, 777, 1387, 566,
	1388, 1367, 567, 568, 1274, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 779, 581,
	582, 583, 780, 584, 585, 586, 1368, 587, 782, 588,
	589, 0, 590, 591, 592, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 1348, 601, 602, 604, 603, 605,
	0, 606, 0, 607, 608, 609, 0, 0, 0, 0,
	0, 610, 611, 613, 0, 614, 615, 616, 617, 612,
	618, 619, 620, 621, 622, 623, 0, 625, 626, 624,
	627, 628, 1389, 629, 630, 631, 632, 633, 1275, 634,
	0, 635, 636, 644, 645, 646, 637, 638, 640, 647,
	639, 648, 649, 650, 651, 653, 652, 0, 655, 656,
	654, 657, 658, 659, 1331, 660, 785, 661, 641, 642,
	662, 663, 1390, 664, 665, 666, 667, 668, 669, 670,
	1346, 0, 671, 0, 672, 673, 674, 675, 676, 677,
	679, 643, 680, 685, 686, 1393, 681, 682, 683, 684,
	1369, 688, 689, 690, 691, 0, 692, 693, 1261, 687,
	678, 0, 694, 695, 696, 697, 698, 699, 0, 700,
	701, 0, 702, 1358, 1359, 1360, 1361, 0, 714, 0,
	703, 705, 706, 707, 708, 1370, 709, 1371, 1286, 710,
	711, 712, 713, 704, 715, 716, 0, 1268, 717, 718,
	719, 721, 723, 724, 720, 722, 725, 1332, 726, 0,
	0, 727, 728, 729, 795, 1355, 1392, 0, 731, 732,
	730, 733, 734, 737, 735, 736, 798, 738, 739, 740,
	0, 0, 0, 0, 741, 742, 799, 743, 744, 745,
	1265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1260, 0, 0, 0, 0,
	0, 0, 1258, 1259, 2204, 1308, 1280, 1281, 1282, 1278,
	1279, 1291, 1292, 0, 0, 0, 1290, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 1334, 1296,
	0, 0, 335, 0, 336, 337, 338, 1374, 339, 340,
	341, 342, 343, 344, 345, 747, 1347, 0, 346, 1354,
	347, 1353, 0, 1364, 348, 349, 350, 351, 352, 353,
	354, 1298, 1333, 1262, 355, 1394, 1395, 754, 0, 356,
	357, 1340, 0, 1321, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 1375, 383, 384, 385, 1324,
	1322, 1323, 1330, 1326, 1325, 1329, 386, 387, 388, 389,
	390, 1357, 391, 393, 1351, 1350, 1267, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 1342, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 1273, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 1365,
	1366, 427, 428, 1287, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 1349, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 1376, 438, 439, 440,
	1362, 1363, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 1372, 0, 1297, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 1335, 1336, 1339, 554, 1378,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 1277, 321, 323,
	1377, 769, 471, 555, 472, 1344, 1345, 0, 1303, 0,
	473, 474, 476, 1379, 1337, 1380, 475, 477, 478, 1381,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 1373, 490, 1382,
	492, 493, 1383, 0, 494, 495, 496, 497, 498, 499,
	502, 1328, 1327, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 1384, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 1385, 547, 534, 1264, 535, 324, 1386, 549, 550,
	551, 552, 1288, 1338, 553, 1352, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 1387, 566, 1388, 1367, 567, 568, 1274,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 1368, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 1348,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 1389, 629, 630,
	631, 632, 633, 1275, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 1331,
	660, 785, 661, 641, 642, 662, 663, 1390, 664, 665,
	666, 667, 668, 669, 670, 1346, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	1393, 681, 682, 683, 684, 1369, 688, 689, 690, 691,
	0, 692, 693, 1261, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 1358, 1359,
	1360, 1361, 0, 714, 0, 703, 705, 706, 707, 708,
	1370, 709, 1371, 1286, 710, 711, 712, 713, 704, 715,
	716, 0, 1268, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 1332, 726, 0, 0, 727, 728, 729, 795,
	1355, 1392, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 0, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 1265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1260, 0, 0, 0, 0, 0, 0, 1258, 1259, 2204,
	1308, 1280, 1281, 1282, 1278, 1279, 1291, 1292, 0, 0,
	0, 1290, 0, 0, 0, 0, 0, 325, 326, 328,
	327, 329, 330, 331, 332, 0, 333, 334, 0, 0,
	0, 0, 0, 1334, 1296, 0, 0, 335, 0, 336,
	337, 338, 1374, 339, 340, 341, 342, 343, 344, 345,
	747, 1347, 0, 346, 1354, 347, 1353, 0, 1364, 348,
	349, 350, 351, 352, 353, 354, 1298, 1333, 1262, 355,
	1394, 1395, 754, 0, 356, 357, 1340, 0, 1321, 0,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 0,
	367, 368, 369, 366, 370, 371, 0, 372, 0, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 382,
	1375, 383, 384, 385, 1324, 1322, 1323, 1330, 1326, 1325,
	1329, 386, 387, 388, 389, 390, 1357, 391, 393, 1351,
	1350, 1267, 396, 398, 392, 394, 0, 397, 395, 399,
	400, 0, 401, 402, 403, 0, 0, 404, 1342, 406,
	0, 407, 408, 409, 0, 410, 411, 412, 0, 413,
	414, 1273, 415, 416, 417, 419, 421, 418, 420, 422,
	423, 424, 425, 426, 1365, 1366, 427, 428, 1287, 320,
	0, 0, 0, 0, 0, 429, 430, 431, 1349, 0,
	0, 0, 432, 0, 433, 434, 435, 0, 436, 437,
	0, 1376, 438, 439, 440, 1362, 1363, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 0, 450, 1372, 0,
	1297, 451, 0, 452, 453, 454, 455, 456, 457, 458,
	1335, 1336, 1339, 554, 1378, 459, 460, 461, 0, 462,
	463, 464, 465, 466, 0, 0, 0, 467, 468, 469,
	470, 0, 1277, 321, 323, 1377, 769, 471, 555, 472,
	1344, 1345, 0, 1303, 0, 473, 474, 476, 1379, 1337,
	1380, 475, 477, 478, 1381, 479, 0, 0, 0, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 489, 488,
	0, 491, 1373, 490, 1382, 492, 493, 1383, 0, 494,
	495, 496, 497, 498, 499, 502, 1328, 1327, 500, 501,
	503, 504, 0, 505, 506, 508, 511, 507, 509, 510,
	512, 525, 526, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 528, 0, 527, 1384, 529,
	530, 531, 532, 533, 541, 543, 544, 539, 540, 542,
	545, 546, 548, 536, 537, 538, 1385, 547, 534, 1264,
	535, 324, 1386, 549, 550, 551, 552, 1288, 1338, 553,
	1352, 556, 557, 0, 0, 558, 0, 559, 0, 0,
	561, 562, 563, 0, 0, 564, 565, 777, 1387, 566,
	1388, 1367, 567, 568, 1274, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 779, 581,
	582, 583, 780, 584, 585, 586, 1368, 587, 782, 588,
	589, 0, 590, 591, 592, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 1348, 601, 602, 604, 603, 605,
	0, 606, 0, 607, 608, 609, 0, 0, 0, 0,
	0, 610, 611, 613, 0, 614, 615, 616, 617, 612,
	618, 619, 620, 621, 622, 623, 0, 625, 626, 624,
	627, 628, 1389, 629, 630, 631, 632, 633, 1275, 634,
	0, 635, 636, 644, 645, 646, 637, 638, 640, 647,
	639, 648, 649, 650, 651, 653, 652, 0, 655, 656,
	654, 657, 658, 659, 1331, 660, 785, 661, 641, 642,
	662, 663, 1390, 664, 665, 666, 667, 668, 669, 670,
	1346, 0, 671, 0, 672, 673, 674, 675, 676, 677,
	679, 643, 680, 685, 686, 1393, 681, 682, 683, 684,
	1369, 688, 689, 690, 691, 0, 692, 693, 1261, 687,
	678, 0, 694, 695, 696, 697, 698, 699, 0, 700,
	701, 0, 702, 1358, 1359, 1360, 1361, 0, 714, 0,
	703, 705, 706, 707, 708, 1370, 709, 1371, 1286, 710,
	711, 712, 713, 704, 715, 716, 0, 1268, 717, 718,
	719, 721, 723, 724, 720, 722, 725, 1332, 726, 0,
	0, 727, 728, 729, 795, 1355, 1392, 4312, 731, 732,
	730, 733, 734, 737, 735, 736, 798, 738, 739, 740,
	0, 0, 0, 0, 741, 742, 799, 743, 744, 745,
	1265, 0, 0, 0, 0, 0, 0, 1308, 1280, 1281,
	1282, 1278, 1279, 1291, 0, 1260, 0, 0, 0, 0,
	0, 0, 1258, 1259, 325, 326, 328, 327, 329, 330,
	331, 332, 1292, 333, 334, 0, 1290, 0, 0, 0,
	1334, 1296, 0, 0, 335, 0, 336, 337, 338, 1374,
	339, 340, 341, 342, 343, 344, 345, 747, 1347, 0,
	346, 1354, 347, 1353, 0, 1364, 348, 349, 350, 351,
	352, 353, 354, 1298, 1333, 1262, 355, 1394, 1395, 754,
	0, 356, 357, 1340, 0, 1321, 0, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 0, 367, 368, 369,
	366, 370, 371, 0, 372, 0, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 382, 1375, 383, 384,
	385, 1324, 1322, 1323, 1330, 1326, 1325, 1329, 386, 387,
	388, 389, 390, 1357, 391, 393, 1351, 1350, 1267, 396,
	398, 392, 394, 0, 397, 395, 399, 400, 0, 401,
	402, 403, 0, 0, 404, 1342, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 413, 414, 1273, 415,
	416, 417, 419, 421, 418, 420, 422, 423, 424, 425,
	426, 1365, 1366, 427, 428, 1287, 320, 0, 0, 0,
	0, 0, 429, 430, 431, 1349, 0, 0, 0, 432,
	0, 433, 434, 435, 0, 436, 437, 3092, 1376, 438,
	439, 440, 1362, 1363, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 1372, 0, 1297, 451, 0,
	452, 453, 454, 455, 456, 457, 458, 1335, 1336, 1339,
	554, 1378, 459, 460, 461, 0, 462, 463, 464, 465,
	466, 0, 0, 0, 467, 468, 469, 470, 0, 1277,
	321, 323, 1377, 769, 471, 555, 472, 1344, 1345, 0,
	1303, 0, 473, 474, 476, 1379, 1337, 1380, 475, 477,
	478, 1381, 479, 0, 0, 0, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 489, 488, 0, 491, 1373,
	490, 1382, 492, 493, 1383, 0, 494, 495, 496, 497,
	498, 499, 502, 1328, 1327, 500, 501, 503, 504, 0,
	505, 506, 508, 511, 507, 509, 510, 512, 525, 526,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 528, 0, 527, 1384, 529, 530, 531, 532,
	533, 541, 543, 544, 539, 540, 542, 545, 546, 548,
	536, 537, 538, 1385, 547, 534, 1264, 535, 324, 1386,
	549, 550, 551, 552, 1288, 1338, 553, 1352, 556, 557,
	0, 0, 558, 0, 559, 0, 0, 561, 562, 563,
	0, 0, 564, 565, 777, 1387, 566, 1388, 1367, 567,
	568, 1274, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 779, 581, 582, 583, 780,
	584, 585, 586, 1368, 587, 782, 588, 589, 0, 590,
	591, 592, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 1348, 601, 602, 604, 603, 605, 0, 606, 0,
	607, 608, 609, 0, 0, 0, 0, 0, 610, 611,
	613, 0, 614, 615, 616, 617, 612, 618, 619, 620,
	621, 622, 623, 0, 625, 626, 624, 627, 628, 1389,
	629, 630, 631, 632, 633, 1275, 634, 0, 635, 636,
	644, 645, 646, 637, 638, 640, 647, 639, 648, 649,
	650, 651, 653, 652, 0, 655, 656, 654, 657, 658,
	659, 1331, 660, 785, 661, 641, 642, 662, 663, 1390,
	664, 665, 666, 667, 668, 669, 670, 1346, 0, 671,
	0, 672, 673, 674, 675, 676, 677, 679, 643, 680,
	685, 686, 1393, 681, 682, 683, 684, 1369, 688, 689,
	690, 691, 0, 692, 693, 1261, 687, 678, 0, 694,
	695, 696, 697, 698, 699, 0, 700, 701, 0, 702,
	1358, 1359, 1360, 1361, 0, 714, 0, 703, 705, 706,
	707, 708, 1370, 709, 1371, 1286, 710, 711, 712, 713,
	704, 715, 716, 0, 1268, 717, 718, 719, 721, 723,
	724, 720, 722, 725, 1332, 726, 0, 0, 727, 728,
	729, 795, 1355, 1392, 0, 731, 732, 730, 733, 734,
	737, 735, 736, 798, 738, 739, 740, 0, 0, 0,
	0, 741, 742, 799, 743, 744, 745, 1265, 0, 0,
	0, 0, 0, 0, 1308, 1280, 1281, 1282, 1278, 1279,
	1291, 0, 1260, 0, 0, 0, 0, 0, 0, 1258,
	1259, 325, 326, 328, 327, 329, 330, 331, 332, 1292,
	333, 334, 0, 1290, 0, 0, 0, 1334, 1296, 0,
	0, 335, 0, 336, 337, 338, 1374, 339, 340, 341,
	342, 343, 344, 345, 747, 1347, 0, 346, 1354, 347,
	1353, 0, 1364, 348, 349, 350, 351, 352, 353, 354,
	1298, 1333, 1262, 355, 1394, 1395, 754, 0, 356, 357,
	1340, 0, 1321, 0, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 0, 367, 368, 369, 366, 370, 371,
	0, 372, 0, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 382, 1375, 383, 384, 385, 1324, 1322,
	1323, 1330, 1326, 1325, 1329, 386, 387, 388, 389, 390,
	1357, 391, 393, 1351, 1350, 1267, 396, 398, 392, 394,
	0, 397, 395, 399, 400, 0, 401, 402, 403, 0,
	0, 404, 1342, 406, 0, 407, 408, 409, 0, 410,
	411, 412, 0, 413, 414, 1273, 415, 416, 417, 419,
	421, 418, 420, 422, 423, 424, 425, 426, 1365, 1366,
	427, 428, 1287, 320, 0, 0, 0, 0, 0, 429,
	430, 431, 1349, 0, 0, 0, 432, 0, 433, 434,
	435, 0, 436, 437, 0, 1376, 438, 439, 440, 1362,
	1363, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	0, 450, 1372, 0, 1297, 451, 0, 452, 453, 454,
	455, 456, 457, 458, 1335, 1336, 1339, 554, 1378, 459,
	460, 461, 0, 462, 463, 464, 465, 466, 0, 0,
	0, 467, 468, 469, 470, 0, 1277, 321, 323, 1377,
	769, 471, 555, 472, 1344, 1345, 0, 1303, 0, 473,
	474, 476, 1379, 1337, 1380, 475, 477, 478, 1381, 479,
	0, 0, 0, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 489, 488, 0, 491, 1373, 490, 1382, 492,
	493, 1383, 0, 494, 495, 496, 497, 498, 499, 502,
	1328, 1327, 500, 501, 503, 504, 0, 505, 506, 508,
	511, 507, 509, 510, 512, 525, 526, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 528,
	0, 527, 1384, 529, 530, 531, 532, 533, 541, 543,
	544, 539, 540, 542, 545, 546, 548, 536, 537, 538,
	1385, 547, 534, 1264, 535, 324, 1386, 549, 550, 551,
	552, 1288, 1338, 553, 1352, 556, 557, 0, 0, 558,
	0, 559, 0, 0, 561, 562, 563, 0, 0, 564,
	565, 777, 1387, 566, 1388, 1367, 567, 568, 1274, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 779, 581, 582, 583, 780, 584, 585, 586,
	1368, 587, 782, 588, 589, 0, 590, 591, 592, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 1348, 601,
	602, 604, 603, 605, 0, 606, 0, 607, 608, 609,
	0, 0, 0, 0, 0, 610, 611, 613, 0, 614,
	615, 616, 617, 612, 618, 619, 620, 621, 622, 623,
	0, 625, 626, 624, 627, 628, 1389, 629, 630, 631,
	632, 633, 1275, 634, 0, 635, 636, 644, 645, 646,
	637, 638, 640, 647, 639, 648, 649, 650, 651, 653,
	652, 0, 655, 656, 654, 657, 658, 659, 1331, 660,
	785, 661, 641, 642, 662, 663, 1390, 664, 665, 666,
	667, 668, 669, 670, 1346, 0, 671, 0, 672, 673,
	674, 675, 676, 677, 679, 643, 680, 685, 686, 1393,
	681, 682, 683, 684, 1369, 688, 689, 690, 691, 0,
	692, 693, 1261, 687, 678, 0, 694, 695, 696, 697,
	698, 699, 0, 700, 701, 0, 702, 1358, 1359, 1360,
	1361, 0, 714, 0, 703, 705, 706, 707, 708, 1370,
	709, 1371, 1286, 710, 711, 712, 713, 704, 715, 716,
	0, 1268, 717, 718, 719, 721, 723, 724, 720, 722,
	725, 1332, 726, 0, 0, 727, 728, 729, 795, 1355,
	1392, 0, 731, 732, 730, 733, 734, 737, 735, 736,
	798, 738, 739, 740, 0, 0, 0, 0, 741, 742,
	799, 743, 744, 745, 1265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1260,
	0, 0, 0, 0, 0, 0, 1258, 1259, 0, 0,
	0, 0, 0, 0, 0, 0, 1292, 2128, 0, 3097,
	1290, 1308, 1280, 1281, 1282, 1278, 1279, 1291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	328, 327, 329, 330, 331, 332, 0, 333, 334, 0,
	0, 0, 0, 0, 1334, 1296, 0, 0, 335, 0,
	336, 337, 338, 1374, 339, 340, 341, 342, 343, 344,
	345, 747, 1347, 0, 346, 1354, 347, 1353, 0, 1364,
	348, 349, 350, 351, 352, 353, 354, 1298, 1333, 1262,
	355, 1394, 1395, 754, 0, 356, 357, 1340, 0, 1321,
	0, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	0, 367, 368, 369, 366, 370, 371, 0, 372, 0,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	382, 1375, 383, 384, 385, 1324, 1322, 1323, 1330, 1326,
	1325, 1329, 386, 387, 388, 389, 390, 1357, 391, 393,
	1351, 1350, 1267, 396, 398, 392, 394, 0, 397, 395,
	399, 400, 0, 401, 402, 403, 0, 0, 404, 1342,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	413, 414, 1273, 415, 416, 417, 419, 421, 418, 420,
	422, 423, 424, 425, 426, 1365, 1366, 427, 428, 1287,
	320, 0, 0, 0, 0, 0, 429, 430, 431, 1349,
	0, 0, 0, 432, 0, 433, 434, 435, 0, 436,
	437, 0, 1376, 438, 439, 440, 1362, 1363, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 1372,
	0, 1297, 451, 0, 452, 453, 454, 455, 456, 457,
	458, 1335, 1336, 1339, 554, 1378, 459, 460, 461, 0,
	462, 463, 464, 465, 466, 0, 0, 0, 467, 468,
	469, 470, 0, 1277, 321, 323, 1377, 769, 471, 555,
	472, 1344, 1345, 0, 1303, 0, 473, 474, 476, 1379,
	1337, 1380, 475, 477, 478, 1381, 479, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 489,
	488, 0, 491, 1373, 490, 1382, 492, 493, 1383, 0,
	494, 495, 496, 497, 498, 499, 502, 1328, 1327, 500,
	501, 503, 504, 0, 505, 506, 508, 511, 507, 509,
	510, 512, 525, 526, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 528, 0, 527, 1384,
	529, 530, 531, 532, 533, 541, 543, 544, 539, 540,
	542, 545, 546, 548, 536, 537, 538, 1385, 547, 534,
	1264, 535, 324, 1386, 549, 550, 551, 552, 1288, 1338,
	553, 1352, 556, 557, 0, 0, 558, 0, 559, 0,
	0, 561, 562, 563, 0, 0, 564, 565, 777, 1387,
	566, 1388, 1367, 567, 568, 1274, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 779,
	581, 582, 583, 780, 584, 585, 586, 1368, 587, 782,
	588, 589, 0, 590, 591, 592, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 1348, 601, 602, 604, 603,
	605, 0, 606, 0, 607, 608, 609, 0, 0, 0,
	0, 0, 610, 611, 613, 0, 614, 615, 616, 617,
	612, 618, 619, 620, 621, 622, 623, 0, 625, 626,
	624, 627, 628, 1389, 629, 630, 631, 632, 633, 1275,
	634, 0, 635, 636, 644, 645, 646, 637, 638, 640,
	647, 639, 648, 649, 650, 651, 653, 652, 0, 655,
	656, 654, 657, 658, 659, 1331, 660, 785, 661, 641,
	642, 662, 663, 1390, 664, 665, 666, 667, 668, 669,
	670, 1346, 0, 671, 0, 672, 673, 674, 675, 676,
	677, 679, 643, 680, 685, 686, 1393, 681, 682, 683,
	684, 1369, 688, 689, 690, 691, 0, 692, 693, 1261,
	687, 678, 0, 694, 695, 696, 697, 698, 699, 0,
	700, 701, 0, 702, 1358, 1359, 1360, 1361, 0, 714,
	0, 703, 705, 706, 707, 708, 1370, 709, 1371, 1286,
	710, 711, 712, 713, 704, 715, 716, 0, 1268, 717,
	718, 719, 721, 723, 724, 720, 722, 725, 1332, 726,
	0, 0, 727, 728, 729, 795, 1355, 1392, 0, 731,
	732, 730, 733, 734, 737, 735, 736, 798, 738, 739,
	740, 0, 0, 0, 0, 741, 742, 799, 743, 744,
	745, 1265, 0, 0, 0, 0, 3095, 0, 1308, 1280,
	1281, 1282, 1278, 1279, 1291, 0, 1260, 0, 0, 0,
	0, 0, 0, 1258, 1259, 325, 326, 328, 327, 329,
	330, 331, 332, 1292, 333, 334, 0, 1290, 0, 0,
	0, 1334, 1296, 0, 0, 335, 0, 336, 337, 338,
	1374, 339, 340, 341, 342, 343, 344, 345, 747, 1347,
	0, 346, 1354, 347, 1353, 0, 1364, 348, 349, 350,
	351, 352, 353, 354, 1298, 1333, 1262, 355, 1394, 1395,
	754, 0, 356, 357, 1340, 0, 1321, 0, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 0, 367, 368,
	369, 366, 370, 371, 0, 372, 0, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 381, 382, 1375, 383,
	384, 385, 1324, 1322, 1323, 1330, 1326, 1325, 1329, 386,
	387, 388, 389, 390, 1357, 391, 393, 1351, 1350, 1267,
	396, 398, 392, 394, 0, 397, 395, 399, 400, 0,
	401, 402, 403, 0, 0, 404, 1342, 406, 0, 407,
	408, 409, 0, 410, 411, 412, 0, 413, 414, 1273,
	415, 416, 417, 419, 421, 418, 420, 422, 423, 424,
	425, 426, 1365, 1366, 427, 428, 1287, 320, 0, 0,
	0, 0, 0, 429, 430, 431, 1349, 0, 0, 0,
	432, 0, 433, 434, 435, 0, 436, 437, 0, 1376,
	438, 439, 440, 1362, 1363, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 1372, 0, 1297, 451,
	0, 452, 453, 454, 455, 456, 457, 458, 1335, 1336,
	1339, 554, 1378, 459, 460, 461, 0, 462, 463, 464,
	465, 466, 0, 0, 0, 467, 468, 469, 470, 0,
	1277, 321, 323, 1377, 769, 471, 555, 472, 1344, 1345,
	0, 1303, 0, 473, 474, 476, 1379, 1337, 1380, 475,
	477, 478, 1381, 479, 0, 0, 0, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 489, 488, 0, 491,
	1373, 490, 1382, 492, 493, 1383, 0, 494, 495, 496,
	497, 498, 499, 502, 1328, 1327, 500, 501, 503, 504,
	0, 505, 506, 508, 511, 507, 509, 510, 512, 525,
	526, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 528, 0, 527, 1384, 529, 530, 531,
	532, 533, 541, 543, 544, 539, 540, 542, 545, 546,
	548, 536, 537, 538, 1385, 547, 534, 1264, 535, 324,
	1386, 549, 550, 551, 552, 1288, 1338, 553, 1352, 556,
	557, 0, 0, 558, 0, 559, 0, 0, 561, 562,
	563, 0, 0, 564, 565, 777, 1387, 566, 1388, 1367,
	567, 568, 1274, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 779, 581, 582, 583,
	780, 584, 585, 586, 1368, 587, 782, 588, 589, 0,
	590, 591, 592, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 1348, 601, 602, 604, 603, 605, 0, 606,
	0, 607, 608, 609, 0, 0, 0, 0, 0, 610,
	611, 613, 0, 614, 615, 616, 617, 612, 618, 619,
	620, 621, 622, 623, 0, 625, 626, 624, 627, 628,
	1389, 629, 630, 631, 632, 633, 1275, 634, 0, 635,
	636, 644, 645, 646, 637, 638, 640, 647, 639, 648,
	649, 650, 651, 653, 652, 0, 655, 656, 654, 657,
	658, 659, 1331, 660, 785, 661, 641, 642, 662, 663,
	1390, 664, 665, 666, 667, 668, 669, 670, 1346, 0,
	671, 0, 672, 673, 674, 675, 676, 677, 679, 643,
	680, 685, 686, 1393, 681, 682, 683, 684, 1369, 688,
	689, 690, 691, 0, 692, 693, 1261, 687, 678, 0,
	694, 695, 696, 697, 698, 699, 0, 700, 701, 0,
	702, 1358, 1359, 1360, 1361, 0, 714, 0, 703, 705,
	706, 707, 708, 1370, 709, 1371, 1286, 710, 711, 712,
	713, 704, 715, 716, 0, 1268, 717, 718, 719, 721,
	723, 724, 720, 722, 725, 1332, 726, 0, 0, 727,
	728, 729, 795, 1355, 1392, 0, 731, 732, 730, 733,
	734, 737, 735, 736, 798, 738, 739, 740, 0, 0,
	0, 0, 741, 742, 799, 743, 744, 745, 1265, 0,
	0, 0, 0, 3083, 0, 1308, 1280, 1281, 1282, 1278,
	1279, 1291, 0, 1260, 0, 0, 0, 0, 0, 0,
	1258, 1259, 325, 326, 328, 327, 329, 330, 331, 332,
	1292, 333, 334, 0, 1290, 0, 0, 0, 1334, 1296,
	0, 0, 335, 0, 336, 337, 338, 1374, 339, 340,
	341, 342, 343, 344, 345, 747, 1347, 0, 346, 1354,
	347, 1353, 0, 1364, 348, 349, 350, 351, 352, 353,
	354, 1298, 1333, 1262, 355, 1394, 1395, 754, 0, 356,
	357, 1340, 0, 1321, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 1375, 383, 384, 385, 1324,
	1322, 1323, 1330, 1326, 1325, 1329, 386, 387, 388, 389,
	390, 1357, 391, 393, 1351, 1350, 1267, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 1342, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 1273, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 1365,
	1366, 427, 428, 1287, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 1349, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 1376, 438, 439, 440,
	1362, 1363, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 1372, 0, 1297, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 1335, 1336, 1339, 554, 1378,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 1277, 321, 323,
	1377, 769, 471, 555, 472, 1344, 1345, 0, 1303, 0,
	473, 474, 476, 1379, 1337, 1380, 475, 477, 478, 1381,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 1373, 490, 1382,
	492, 493, 1383, 0, 494, 495, 496, 497, 498, 499,
	502, 1328, 1327, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 1384, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 1385, 547, 534, 1264, 535, 324, 1386, 549, 550,
	551, 552, 1288, 1338, 553, 1352, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 1387, 566, 1388, 1367, 567, 568, 1274,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 1368, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 1348,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 1389, 629, 630,
	631, 632, 633, 1275, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 1331,
	660, 785, 661, 641, 642, 662, 663, 1390, 664, 665,
	666, 667, 668, 669, 670, 1346, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	1393, 681, 682, 683, 684, 1369, 688, 689, 690, 691,
	0, 692, 693, 1261, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 1358, 1359,
	1360, 1361, 0, 714, 0, 703, 705, 706, 707, 708,
	1370, 709, 1371, 1286, 710, 711, 712, 713, 704, 715,
	716, 0, 1268, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 1332, 726, 0, 0, 727, 728, 729, 795,
	1355, 1392, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 0, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 1265, 0, 0, 0, 0,
	3072, 0, 1308, 1280, 1281, 1282, 1278, 1279, 1291, 0,
	1260, 0, 0, 0, 0, 0, 0, 1258, 1259, 325,
	326, 328, 327, 329, 330, 331, 332, 1292, 333, 334,
	0, 1290, 0, 0, 0, 1334, 1296, 0, 0, 335,
	0, 336, 337, 338, 1374, 339, 340, 341, 342, 343,
	344, 345, 747, 1347, 0, 346, 1354, 347, 1353, 0,
	1364, 348, 349, 350, 351, 352, 353, 354, 1298, 1333,
	1262, 355, 1394, 1395, 754, 0, 356, 357, 1340, 0,
	1321, 0, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 0, 367, 368, 369, 366, 370, 371, 0, 372,
	0, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 382, 1375, 383, 384, 385, 1324, 1322, 1323, 1330,
	1326, 1325, 1329, 386, 387, 388, 389, 390, 1357, 391,
	393, 1351, 1350, 1267, 396, 398, 392, 394, 0, 397,
	395, 399, 400, 0, 401, 402, 403, 0, 0, 404,
	1342, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 413, 414, 1273, 415, 416, 417, 419, 421, 418,
	420, 422, 423, 424, 425, 426, 1365, 1366, 427, 428,
	1287, 320, 0, 0, 0, 0, 0, 429, 430, 431,
	1349, 0, 0, 0, 432, 0, 433, 434, 435, 0,
	436, 437, 0, 1376, 438, 439, 440, 1362, 1363, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	1372, 0, 1297, 451, 0, 452, 453, 454, 455, 456,
	457, 458, 1335, 1336, 1339, 554, 1378, 459, 460, 461,
	0, 462, 463, 464, 465, 466, 0, 0, 0, 467,
	468, 469, 470, 0, 1277, 321, 323, 1377, 769, 471,
	555, 472, 1344, 1345, 0, 1303, 0, 473, 474, 476,
	1379, 1337, 1380, 475, 477, 478, 1381, 479, 0, 0,
	0, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	489, 488, 0, 491, 1373, 490, 1382, 492, 493, 1383,
	0, 494, 495, 496, 497, 498, 499, 502, 1328, 1327,
	500, 501, 503, 504, 0, 505, 506, 508, 511, 507,
	509, 510, 512, 525, 526, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 528, 0, 527,
	1384, 529, 530, 531, 532, 533, 541, 543, 544, 539,
	540, 542, 545, 546, 548, 536, 537, 538, 1385, 547,
	534, 1264, 535, 324, 1386, 549, 550, 551, 552, 1288,
	1338, 553, 1352, 556, 557, 0, 0, 558, 0, 559,
	0, 0, 561, 562, 563, 0, 0, 564, 565, 777,
	1387, 566, 1388, 1367, 567, 568, 1274, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	779, 581, 582, 583, 780, 584, 585, 586, 1368, 587,
	782, 588, 589, 0, 590, 591, 592, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 1348, 601, 602, 604,
	603, 605, 0, 606, 0, 607, 608, 609, 0, 0,
	0, 0, 0, 610, 611, 613, 0, 614, 615, 616,
	617, 612, 618, 619, 620, 621, 622, 623, 0, 625,
	626, 624, 627, 628, 1389, 629, 630, 631, 632, 633,
	1275, 634, 0, 635, 636, 644, 645, 646, 637, 638,
	640, 647, 639, 648, 649, 650, 651, 653, 652, 0,
	655, 656, 654, 657, 658, 659, 1331, 660, 785, 661,
	641, 642, 662, 663, 1390, 664, 665, 666, 667, 668,
	669, 670, 1346, 0, 671, 0, 672, 673, 674, 675,
	676, 677, 679, 643, 680, 685, 686, 1393, 681, 682,
	683, 684, 1369, 688, 689, 690, 691, 0, 692, 693,
	1261, 687, 678, 0, 694, 695, 696, 697, 698, 699,
	0, 700, 701, 0, 702, 1358, 1359, 1360, 1361, 0,
	714, 0, 703, 705, 706, 707, 708, 1370, 709, 1371,
	1286, 710, 711, 712, 713, 704, 715, 716, 0, 1268,
	717, 718, 719, 721, 723, 724, 720, 722, 725, 1332,
	726, 0, 0, 727, 728, 729, 795, 1355, 1392, 0,
	731, 732, 730, 733, 734, 737, 735, 736, 798, 738,
	739, 740, 0, 0, 0, 0, 741, 742, 799, 743,
	744, 745, 1265, 0, 0, 0, 0, 3070, 0, 3061,
	3068, 1281, 1282, 1278, 1279, 1291, 0, 1260, 0, 0,
	0, 0, 0, 0, 1258, 1259, 325, 326, 328, 327,
	329, 330, 331, 332, 1292, 333, 334, 0, 1290, 0,
	0, 0, 1334, 1296, 0, 0, 335, 0, 336, 337,
	338, 1374, 339, 340, 341, 342, 343, 344, 345, 747,
	1347, 0, 346, 1354, 347, 1353, 0, 1364, 348, 349,
	350, 351, 352, 353, 354, 1298, 1333, 1262, 355, 1394,
	1395, 754, 0, 356, 357, 1340, 0, 1321, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 382, 1375,
	383, 384, 385, 1324, 1322, 1323, 1330, 1326, 1325, 1329,
	386, 387, 388, 389, 390, 1357, 3064, 393, 1351, 1350,
	1267, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 1342, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	1273, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 1365, 1366, 427, 428, 1287, 320, 0,
	0, 0, 0, 0, 429, 430, 431, 1349, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	1376, 438, 439, 440, 1362, 1363, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 1372, 0, 1297,
	451, 0, 452, 453, 454, 455, 456, 3065, 458, 1335,
	1336, 1339, 554, 1378, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 1277, 321, 323, 1377, 769, 471, 555, 472, 1344,
	1345, 0, 1303, 0, 473, 474, 476, 1379, 1337, 1380,
	475, 477, 478, 1381, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 1373, 490, 1382, 492, 493, 1383, 0, 494, 495,
	496, 497, 498, 499, 502, 1328, 1327, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 3066, 512,
	3063, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 1384, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 1385, 547, 534, 1264, 535,
	324, 1386, 549, 550, 551, 552, 1288, 1338, 553, 1352,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 1387, 566, 1388,
	1367, 567, 568, 1274, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 1368, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 1348, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 1389, 629, 630, 631, 632, 633, 1275, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 3067, 653, 652, 0, 655, 656, 654,
	657, 658, 659, 1331, 660, 785, 661, 641, 642, 662,
	663, 1390, 664, 665, 666, 667, 668, 669, 670, 1346,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 1393, 681, 682, 683, 684, 1369,
	688, 689, 690, 691, 0, 692, 693, 1261, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 1358, 1359, 1360, 1361, 0, 714, 0, 703,
	705, 706, 707, 708, 1370, 709, 1371, 1286, 710, 711,
	712, 713, 704, 715, 716, 0, 1268, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 1332, 726, 0, 0,
	727, 728, 729, 795, 1355, 1392, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 0,
	0, 0, 0, 741, 742, 799, 743, 3062, 745, 1265,
	0, 0, 0, 0, 3058, 0, 3061, 3068, 1281, 1282,
	1278, 1279, 1291, 0, 1260, 0, 0, 0, 0, 0,
	0, 1258, 1259, 325, 326, 328, 327, 329, 330, 331,
	332, 1292, 333, 334, 0, 1290, 0, 0, 0, 1334,
	1296, 0, 0, 335, 0, 336, 337, 338, 1374, 339,
	340, 341, 342, 343, 344, 345, 747, 1347, 0, 346,
	1354, 347, 1353, 0, 1364, 348, 349, 350, 351, 352,
	353, 354, 1298, 1333, 1262, 355, 1394, 1395, 754, 0,
	356, 357, 1340, 0, 1321, 0, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 0, 367, 368, 369, 366,
	370, 371, 0, 372, 0, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 382, 1375, 383, 384, 385,
	1324, 1322, 1323, 1330, 1326, 1325, 1329, 386, 387, 388,
	389, 390, 1357, 3064, 393, 1351, 1350, 1267, 396, 398,
	392, 394, 0, 397, 395, 399, 400, 0, 401, 402,
	403, 0, 0, 404, 1342, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 413, 414, 1273, 415, 416,
	417, 419, 421, 418, 420, 422, 423, 424, 425, 426,
	1365, 1366, 427, 428, 1287, 320, 0, 0, 0, 0,
	0, 429, 430, 431, 1349, 0, 0, 0, 432, 0,
	433, 434, 435, 0, 436, 437, 0, 1376, 438, 439,
	440, 1362, 1363, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 1372, 0, 1297, 451, 0, 452,
	453, 454, 455, 456, 3065, 458, 1335, 1336, 1339, 554,
	1378, 459, 460, 461, 0, 462, 463, 464, 465, 466,
	0, 0, 0, 467, 468, 469, 470, 0, 1277, 321,
	323, 1377, 769, 471, 555, 472, 1344, 1345, 0, 1303,
	0, 473, 474, 476, 1379, 1337, 1380, 475, 477, 478,
	1381, 479, 0, 0, 0, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 489, 488, 0, 491, 1373, 490,
	1382, 492, 493, 1383, 0, 494, 495, 496, 497, 498,
	499, 502, 1328, 1327, 500, 501, 503, 504, 0, 505,
	506, 508, 511, 507, 509, 3066, 512, 3063, 526, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 528, 0, 527, 1384, 529, 530, 531, 532, 533,
	541, 543, 544, 539, 540, 542, 545, 546, 548, 536,
	537, 538, 1385, 547, 534, 1264, 535, 324, 1386, 549,
	550, 551, 552, 1288, 1338, 553, 1352, 556, 557, 0,
	0, 558, 0, 559, 0, 0, 561, 562, 563, 0,
	0, 564, 565, 777, 1387, 566, 1388, 1367, 567, 568,
	1274, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 779, 581, 582, 583, 780, 584,
	585, 586, 1368, 587, 782, 588, 589, 0, 590, 591,
	592, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	1348, 601, 602, 604, 603, 605, 0, 606, 0, 607,
	608, 609, 0, 0, 0, 0, 0, 610, 611, 613,
	0, 614, 615, 616, 617, 612, 618, 619, 620, 621,
	622, 623, 0, 625, 626, 624, 627, 628, 1389, 629,
	630, 631, 632, 633, 1275, 634, 0, 635, 636, 644,
	645, 646, 637, 638, 640, 647, 639, 648, 649, 650,
	3067, 653, 652, 0, 655, 656, 654, 657, 658, 659,
	1331, 660, 785, 661, 641, 642, 662, 663, 1390, 664,
	665, 666, 667, 668, 669, 670, 1346, 0, 671, 0,
	672, 673, 674, 675, 676, 677, 679, 643, 680, 685,
	686, 1393, 681, 682, 683, 684, 1369, 688, 689, 690,
	691, 0, 692, 693, 1261, 687, 678, 0, 694, 695,
	696, 697, 698, 699, 0, 700, 701, 0, 702, 1358,
	1359, 1360, 1361, 0, 714, 0, 703, 705, 706, 707,
	708, 1370, 709, 1371, 1286, 710, 711, 712, 713, 704,
	715, 716, 0, 1268, 717, 718, 719, 721, 723, 724,
	720, 722, 725, 1332, 726, 0, 0, 727, 728, 729,
	795, 1355, 1392, 0, 731, 732, 730, 733, 734, 737,
	735, 736, 798, 738, 739, 740, 0, 0, 0, 0,
	741, 742, 799, 743, 3062, 745, 1265, 0, 0, 0,
	0, 0, 0, 1308, 1280, 1281, 1282, 1278, 1279, 1291,
	0, 1260, 0, 0, 0, 0, 0, 0, 1258, 1259,
	325, 326, 328, 327, 329, 330, 331, 332, 1292, 333,
	334, 0, 1290, 0, 0, 0, 1334, 1296, 0, 0,
	335, 0, 336, 337, 338, 1374, 339, 340, 341, 342,
	343, 344, 345, 747, 1347, 0, 346, 1354, 347, 1353,
	0, 1364, 348, 349, 350, 351, 352, 353, 354, 1298,
	1333, 1262, 355, 1394, 1395, 754, 0, 356, 357, 1340,
	0, 1321, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 1375, 383, 384, 385, 1324, 1322, 1323,
	1330, 1326, 1325, 1329, 386, 387, 388, 389, 390, 1357,
	391, 393, 1351, 1350, 1267, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 1342, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 1273, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 1365, 1366, 427,
	428, 1287, 320, 0, 0, 0, 0, 0, 429, 430,
	431, 1349, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 1376, 438, 439, 440, 1362, 1363,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 1372, 0, 1297, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 1335, 1336, 1339, 554, 1378, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 1277, 321, 323, 1377, 769,
	471, 555, 472, 1344, 1345, 0, 1303, 0, 473, 474,
	476, 1379, 1337, 1380, 475, 477, 478, 1381, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 1373, 490, 1382, 492, 493,
	1383, 0, 494, 495, 496, 497, 498, 499, 502, 1328,
	1327, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 1384, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 1385,
	547, 534, 1264, 535, 324, 1386, 549, 550, 551, 552,
	1288, 1338, 553, 1352, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 1387, 566, 1388, 1367, 567, 568, 1274, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 1368,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 1348, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 1389, 629, 630, 631, 632,
	633, 1275, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 1331, 660, 785,
	661, 641, 642, 662, 663, 1390, 664, 665, 666, 667,
	668, 669, 670, 1346, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 1393, 681,
	682, 683, 684, 1369, 688, 689, 690, 691, 0, 692,
	693, 1261, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 1358, 1359, 1360, 1361,
	0, 714, 0, 703, 705, 706, 707, 708, 1370, 709,
	1371, 1286, 710, 711, 712, 713, 704, 715, 716, 0,
	1268, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	1332, 726, 0, 0, 727, 728, 729, 795, 1355, 1392,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 0, 0, 0, 0, 741, 742, 799,
	743, 744, 745, 1265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1260, 0,
	0, 0, 0, 0, 0, 1258, 1259, 0, 0, 0,
	0, 0, 0, 2136, 0, 1292, 0, 0, 0, 1290,
	1308, 1280, 1281, 1282, 1278, 1279, 1291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 328,
	327, 329, 330, 331, 332, 2808, 333, 334, 0, 0,
	0, 0, 0, 1334, 1296, 0, 0, 335, 0, 336,
	337, 338, 1374, 339, 340, 341, 342, 343, 344, 345,
	747, 1347, 0, 346, 1354, 347, 1353, 0, 1364, 348,
	349, 350, 351, 352, 353, 354, 1298, 1333, 1262, 355,
	1394, 1395, 754, 0, 356, 357, 1340, 0, 1321, 0,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 0,
	367, 368, 369, 366, 370, 371, 0, 372, 0, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 382,
	1375, 383, 384, 385, 1324, 1322, 1323, 1330, 1326, 1325,
	1329, 386, 387, 388, 389, 390, 1357, 391, 393, 1351,
	1350, 1267, 396, 398, 392, 394, 0, 397, 395, 399,
	400, 0, 401, 402, 403, 0, 0, 404, 1342, 406,
	0, 407, 408, 409, 0, 410, 411, 412, 0, 413,
	414, 1273, 415, 416, 417, 419, 421, 418, 420, 422,
	423, 424, 425, 426, 1365, 1366, 427, 428, 1287, 320,
	0, 0, 0, 0, 0, 429, 430, 431, 1349, 0,
	0, 0, 432, 0, 433, 434, 435, 0, 436, 437,
	0, 1376, 438, 439, 440, 1362, 1363, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 0, 450, 1372, 0,
	1297, 451, 0, 452, 453, 454, 455, 456, 457, 458,
	1335, 1336, 1339, 554, 1378, 459, 460, 461, 0, 462,
	463, 464, 465, 466, 0, 0, 0, 467, 468, 469,
	470, 0, 1277, 321, 323, 1377, 769, 471, 555, 472,
	1344, 1345, 0, 1303, 0, 473, 474, 476, 1379, 1337,
	1380, 475, 477, 478, 1381, 479, 0, 0, 0, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 489, 488,
	0, 491, 1373, 490, 1382, 492, 493, 1383, 0, 494,
	495, 496, 497, 498, 499, 502, 1328, 1327, 500, 501,
	503, 504, 0, 505, 506, 508, 511, 507, 509, 510,
	512, 525, 526, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 528, 0, 527, 1384, 529,
	530, 531, 532, 533, 541, 543, 544, 539, 540, 542,
	545, 546, 548, 536, 537, 538, 1385, 547, 534, 1264,
	535, 324, 1386, 549, 550, 551, 552, 1288, 1338, 553,
	1352, 556, 557, 0, 0, 558, 0, 559, 0, 0,
	561, 562, 563, 0, 0, 564, 565, 777, 1387, 566,
	1388, 1367, 567, 568, 1274, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 779, 581,
	582, 583, 780, 584, 585, 586, 1368, 587, 782, 588,
	589, 0, 590, 591, 592, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 1348, 601, 602, 604, 603, 605,
	0, 606, 0, 607, 608, 609, 0, 0, 0, 0,
	0, 610, 611, 613, 0, 614, 615, 616, 617, 612,
	618, 619, 620, 621, 622, 623, 0, 625, 626, 624,
	627, 628, 1389, 629, 630, 631, 632, 633, 1275, 634,
	0, 635, 636, 644, 645, 646, 637, 638, 640, 647,
	639, 648, 649, 650, 651, 653, 652, 0, 655, 656,
	654, 657, 658, 659, 1331, 660, 785, 661, 641, 642,
	662, 663, 1390, 664, 665, 666, 667, 668, 669, 670,
	1346, 0, 671, 0, 672, 673, 674, 675, 676, 677,
	679, 643, 680, 685, 686, 1393, 681, 682, 683, 684,
	1369, 688, 689, 690, 691, 0, 692, 693, 1261, 687,
	678, 0, 694, 695, 696, 697, 698, 699, 0, 700,
	701, 0, 702, 1358, 1359, 1360, 1361, 0, 714, 0,
	703, 705, 706, 707, 708, 1370, 709, 1371, 1286, 710,
	711, 712, 713, 704, 715, 716, 0, 1268, 717, 718,
	719, 721, 723, 724, 720, 722, 725, 1332, 726, 0,
	0, 727, 728, 729, 795, 1355, 1392, 0, 731, 732,
	730, 733, 734, 737, 735, 736, 798, 738, 739, 740,
	0, 0, 0, 0, 741, 742, 799, 743, 744, 745,
	1265, 0, 0, 0, 0, 2768, 0, 1308, 1280, 1281,
	1282, 1278, 1279, 1291, 0, 1260, 0, 0, 0, 0,
	0, 0, 1258, 1259, 325, 326, 328, 327, 329, 330,
	331, 332, 1292, 333, 334, 0, 1290, 0, 0, 0,
	1334, 1296, 0, 0, 335, 0, 336, 337, 338, 1374,
	339, 340, 341, 342, 343, 344, 345, 747, 1347, 0,
	346, 1354, 347, 1353, 0, 1364, 348, 349, 350, 351,
	352, 353, 354, 1298, 1333, 1262, 355, 1394, 1395, 754,
	0, 356, 357, 1340, 0, 1321, 0, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 0, 367, 368, 369,
	366, 370, 371, 0, 372, 0, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 382, 1375, 383, 384,
	385, 1324, 1322, 1323, 1330, 1326, 1325, 1329, 386, 387,
	388, 389, 390, 1357, 391, 393, 1351, 1350, 1267, 396,
	398, 392, 394, 0, 397, 395, 399, 400, 0, 401,
	402, 403, 0, 0, 404, 1342, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 413, 414, 1273, 415,
	416, 417, 419, 421, 418, 420, 422, 423, 424, 425,
	426, 1365, 1366, 427, 428, 1287, 320, 0, 0, 0,
	0, 0, 429, 430, 431, 1349, 0, 0, 0, 432,
	0, 433, 434, 435, 0, 436, 437, 0, 1376, 438,
	439, 440, 1362, 1363, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 1372, 0, 1297, 451, 0,
	452, 453, 454, 455, 456, 457, 458, 1335, 1336, 1339,
	554, 1378, 459, 460, 461, 0, 462, 463, 464, 465,
	466, 0, 0, 0, 467, 468, 469, 470, 0, 1277,
	321, 323, 1377, 769, 471, 555, 472, 1344, 1345, 0,
	1303, 0, 473, 474, 476, 1379, 1337, 1380, 475, 477,
	478, 1381, 479, 0, 0, 0, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 489, 488, 0, 491, 1373,
	490, 1382, 492, 493, 1383, 0, 494, 495, 496, 497,
	498, 499, 502, 1328, 1327, 500, 501, 503, 504, 0,
	505, 506, 508, 511, 507, 509, 510, 512, 525, 526,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 528, 0, 527, 1384, 529, 530, 531, 532,
	533, 541, 543, 544, 539, 540, 542, 545, 546, 548,
	536, 537, 538, 1385, 547, 534, 1264, 535, 324, 1386,
	549, 550, 551, 552, 1288, 1338, 553, 1352, 556, 557,
	0, 0, 558, 0, 559, 0, 0, 561, 562, 563,
	0, 0, 564, 565, 777, 1387, 566, 1388, 1367, 567,
	568, 1274, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 779, 581, 582, 583, 780,
	584, 585, 586, 1368, 587, 782, 588, 589, 0, 590,
	591, 592, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 1348, 601, 602, 604, 603, 605, 0, 606, 0,
	607, 608, 609, 0, 0, 0, 0, 0, 610, 611,
	613, 0, 614, 615, 616, 617, 612, 618, 619, 620,
	621, 622, 623, 0, 625, 626, 624, 627, 628, 1389,
	629, 630, 631, 632, 633, 1275, 634, 0, 635, 636,
	644, 645, 646, 637, 638, 640, 647, 639, 648, 649,
	650, 651, 653, 652, 0, 655, 656, 654, 657, 658,
	659, 1331, 660, 785, 661, 641, 642, 662, 663, 1390,
	664, 665, 666, 667, 668, 669, 670, 1346, 0, 671,
	0, 672, 673, 674, 675, 676, 677, 679, 643, 680,
	685, 686, 1393, 681, 682, 683, 684, 1369, 688, 689,
	690, 691, 0, 692, 693, 1261, 687, 678, 0, 694,
	695, 696, 697, 698, 699, 0, 700, 701, 0, 702,
	1358, 1359, 1360, 1361, 0, 714, 0, 703, 705, 706,
	707, 708, 1370, 709, 1371, 1286, 710, 711, 712, 713,
	704, 715, 716, 0, 1268, 717, 718, 719, 721, 723,
	724, 720, 722, 725, 1332, 726, 0, 0, 727, 728,
	729, 795, 1355, 1392, 0, 731, 732, 730, 733, 734,
	737, 735, 736, 798, 738, 739, 740, 0, 0, 0,
	0, 741, 742, 799, 743, 744, 745, 1265, 0, 0,
	0, 0, 2734, 0, 1308, 1280, 1281, 1282, 1278, 1279,
	1291, 0, 1260, 0, 0, 0, 0, 0, 0, 1258,
	1259, 325, 326, 328, 327, 329, 330, 331, 332, 1292,
	333, 334, 0, 1290, 0, 0, 0, 1334, 1296, 0,
	0, 335, 0, 336, 337, 338, 1374, 339, 340, 341,
	342, 343, 344, 345, 747, 1347, 0, 346, 1354, 347,
	1353, 0, 1364, 348, 349, 350, 351, 352, 353, 354,
	1298, 1333, 1262, 355, 1394, 1395, 754, 0, 356, 357,
	1340, 0, 1321, 0, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 0, 367, 368, 369, 366, 370, 371,
	0, 372, 0, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 382, 1375, 383, 384, 385, 1324, 1322,
	1323, 1330, 1326, 1325, 1329, 386, 387, 388, 389, 390,
	1357, 391, 393, 1351, 1350, 1267, 396, 398, 392, 394,
	0, 397, 395, 399, 400, 0, 401, 402, 403, 0,
	0, 404, 1342, 406, 0, 407, 408, 409, 0, 410,
	411, 412, 0, 413, 414, 1273, 415, 416, 417, 419,
	421, 418, 420, 422, 423, 424, 425, 426, 1365, 1366,
	427, 428, 1287, 320, 0, 0, 0, 0, 0, 429,
	430, 431, 1349, 0, 0, 0, 432, 0, 433, 434,
	435, 0, 436, 437, 0, 1376, 438, 439, 440, 1362,
	1363, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	0, 450, 1372, 0, 1297, 451, 0, 452, 453, 454,
	455, 456, 457, 458, 1335, 1336, 1339, 554, 1378, 459,
	460, 461, 0, 462, 463, 464, 465, 466, 0, 0,
	0, 467, 468, 469, 470, 0, 1277, 321, 323, 1377,
	769, 471, 555, 472, 1344, 1345, 0, 1303, 0, 473,
	474, 476, 1379, 1337, 1380, 475, 477, 478, 1381, 479,
	0, 0, 0, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 489, 488, 0, 491, 1373, 490, 1382, 492,
	493, 1383, 0, 494, 495, 496, 497, 498, 499, 502,
	1328, 1327, 500, 501, 503, 504, 0, 505, 506, 508,
	511, 507, 509, 510, 512, 525, 526, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 528,
	0, 527, 1384, 529, 530, 531, 532, 533, 541, 543,
	544, 539, 540, 542, 545, 546, 548, 536, 537, 538,
	1385, 547, 534, 1264, 535, 324, 1386, 549, 550, 551,
	552, 1288, 1338, 553, 1352, 556, 557, 0, 0, 558,
	0, 559, 0, 0, 561, 562, 563, 0, 0, 564,
	565, 777, 1387, 566, 1388, 1367, 567, 568, 1274, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 779, 581, 582, 583, 780, 584, 585, 586,
	1368, 587, 782, 588, 589, 0, 590, 591, 592, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 1348, 601,
	602, 604, 603, 605, 0, 606, 0, 607, 608, 609,
	0, 0, 0, 0, 0, 610, 611, 613, 0, 614,
	615, 616, 617, 612, 618, 619, 620, 621, 622, 623,
	0, 625, 626, 624, 627, 628, 1389, 629, 630, 631,
	632, 633, 1275, 634, 0, 635, 636, 644, 645, 646,
	637, 638, 640, 647, 639, 648, 649, 650, 651, 653,
	652, 0, 655, 656, 654, 657, 658, 659, 1331, 660,
	785, 661, 641, 642, 662, 663, 1390, 664, 665, 666,
	667, 668, 669, 670, 1346, 0, 671, 0, 672, 673,
	674, 675, 676, 677, 679, 643, 680, 685, 686, 1393,
	681, 682, 683, 684, 1369, 688, 689, 690, 691, 0,
	692, 693, 1261, 687, 678, 0, 694, 695, 696, 697,
	698, 699, 0, 700, 701, 0, 702, 1358, 1359, 1360,
	1361, 0, 714, 0, 703, 705, 706, 707, 708, 1370,
	709, 1371, 1286, 710, 711, 712, 713, 704, 715, 716,
	0, 1268, 717, 718, 719, 721, 723, 724, 720, 722,
	725, 1332, 726, 0, 0, 727, 728, 729, 795, 1355,
	1392, 0, 731, 732, 730, 733, 734, 737, 735, 736,
	798, 738, 739, 740, 0, 0, 0, 0, 741, 742,
	799, 743, 744, 745, 1265, 0, 0, 0, 0, 1963,
	0, 1308, 1280, 1281, 1282, 1278, 1279, 1291, 0, 1260,
	0, 0, 0, 0, 0, 0, 1258, 1259, 325, 326,
	328, 327, 329, 330, 331, 332, 1292, 333, 334, 0,
	1290, 0, 0, 0, 1334, 1296, 0, 0, 335, 0,
	336, 337, 338, 1374, 339, 340, 341, 342, 343, 344,
	345, 747, 1347, 0, 346, 1354, 347, 1353, 0, 1364,
	348, 349, 350, 351, 352, 353, 354, 1298, 1333, 1262,
	355, 1394, 1395, 754, 0, 356, 357, 1340, 0, 1321,
	0, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	0, 367, 368, 369, 366, 370, 371, 0, 372, 0,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	382, 1375, 383, 384, 385, 1324, 1322, 1323, 1330, 1326,
	1325, 1329, 386, 387, 388, 389, 390, 1357, 391, 393,
	1351, 1350, 1267, 396, 398, 392, 394, 0, 397, 395,
	399, 400, 0, 401, 402, 403, 0, 0, 404, 1342,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	413, 414, 1273, 415, 416, 417, 419, 421, 418, 420,
	422, 423, 424, 425, 426, 1365, 1366, 427, 428, 1287,
	320, 0, 0, 0, 0, 0, 429, 430, 431, 1349,
	0, 0, 0, 432, 0, 433, 434, 435, 0, 436,
	437, 0, 1376, 438, 439, 440, 1362, 1363, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 1372,
	0, 1297, 451, 0, 452, 453, 454, 455, 456, 457,
	458, 1335, 1336, 1339, 554, 1378, 459, 460, 461, 0,
	462, 463, 464, 465, 466, 0, 0, 0, 467, 468,
	469, 470, 0, 1277, 321, 323, 1377, 769, 471, 555,
	472, 1344, 1345, 0, 1303, 0, 473, 474, 476, 1379,
	1337, 1380, 475, 477, 478, 1381, 479, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 489,
	488, 0, 491, 1373, 490, 1382, 492, 493, 1383, 0,
	494, 495, 496, 497, 498, 499, 502, 1328, 1327, 500,
	501, 503, 504, 0, 505, 506, 508, 511, 507, 509,
	510, 512, 525, 526, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 528, 0, 527, 1384,
	529, 530, 531, 532, 533, 541, 543, 544, 539, 540,
	542, 545, 546, 548, 536, 537, 538, 1385, 547, 534,
	1264, 535, 324, 1386, 549, 550, 551, 552, 1288, 1338,
	553, 1352, 556, 557, 0, 0, 558, 0, 559, 0,
	0, 561, 562, 563, 0, 0, 564, 565, 777, 1387,
	566, 1388, 1367, 567, 568, 1274, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 779,
	581, 582, 583, 780, 584, 585, 586, 1368, 587, 782,
	588, 589, 0, 590, 591, 592, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 1348, 601, 602, 604, 603,
	605, 0, 606, 0, 607, 608, 609, 0, 0, 0,
	0, 0, 610, 611, 613, 0, 614, 615, 616, 617,
	612, 618, 619, 620, 621, 622, 623, 0, 625, 626,
	624, 627, 628, 1389, 629, 630, 631, 632, 633, 1275,
	634, 0, 635, 636, 644, 645, 646, 637, 638, 640,
	647, 639, 648, 649, 650, 651, 653, 652, 0, 655,
	656, 654, 657, 658, 659, 1331, 660, 785, 661, 641,
	642, 662, 663, 1390, 664, 665, 666, 667, 668, 669,
	670, 1346, 0, 671, 0, 672, 673, 674, 675, 676,
	677, 679, 643, 680, 685, 686, 1393, 681, 682, 683,
	684, 1369, 688, 689, 690, 691, 0, 692, 693, 1261,
	687, 678, 0, 694, 695, 696, 697, 698, 699, 0,
	700, 701, 0, 702, 1358, 1359, 1360, 1361, 0, 714,
	0, 703, 705, 706, 707, 708, 1370, 709, 1371, 1286,
	710, 711, 712, 713, 704, 715, 716, 0, 1268, 717,
	718, 719, 721, 723, 724, 720, 722, 725, 1332, 726,
	0, 0, 727, 728, 729, 795, 1355, 1392, 0, 731,
	732, 730, 733, 734, 737, 735, 736, 798, 738, 739,
	740, 0, 0, 0, 0, 741, 742, 799, 743, 744,
	745, 1265, 0, 0, 0, 0, 1889, 0, 1308, 1280,
	1281, 1282, 1278, 1279, 1291, 0, 1260, 0, 0, 0,
	0, 0, 0, 1258, 1259, 325, 326, 328, 327, 329,
	330, 331, 332, 1292, 333, 334, 0, 1290, 0, 0,
	0, 1334, 1296, 0, 0, 335, 0, 336, 337, 338,
	1374, 339, 340, 341, 342, 343, 344, 345, 747, 1347,
	0, 346, 1354, 347, 1353, 0, 1364, 348, 349, 350,
	351, 352, 353, 354, 1298, 1333, 1262, 355, 1394, 1395,
	754, 0, 356, 357, 1340, 0, 1321, 0, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 0, 367, 368,
	369, 366, 370, 371, 0, 372, 0, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 381, 382, 1375, 383,
	384, 385, 1324, 1322, 1323, 1330, 1326, 1325, 1329, 386,
	387, 388, 389, 390, 1357, 391, 393, 1351, 1350, 1267,
	396, 398, 392, 394, 0, 397, 395, 399, 400, 0,
	401, 402, 403, 0, 0, 404, 1342, 406, 0, 407,
	408, 409, 0, 410, 411, 412, 0, 413, 414, 1273,
	415, 416, 417, 419, 421, 418, 420, 422, 423, 424,
	425, 426, 1365, 1366, 427, 428, 1287, 320, 0, 0,
	0, 0, 0, 429, 430, 431, 1349, 0, 0, 0,
	432, 0, 433, 434, 435, 0, 436, 437, 0, 1376,
	438, 439, 440, 1362, 1363, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 1372, 0, 1297, 451,
	0, 452, 453, 454, 455, 456, 457, 458, 1335, 1336,
	1339, 554, 1378, 459, 460, 461, 0, 462, 463, 464,
	465, 466, 0, 0, 0, 467, 468, 469, 470, 0,
	1277, 321, 323, 1377, 769, 471, 555, 472, 1344, 1345,
	0, 1303, 0, 473, 474, 476, 1379, 1337, 1380, 475,
	477, 478, 1381, 479, 0, 0, 0, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 489, 488, 0, 491,
	1373, 490, 1382, 492, 493, 1383, 0, 494, 495, 496,
	497, 498, 499, 502, 1328, 1327, 500, 501, 503, 504,
	0, 505, 506, 508, 511, 507, 509, 510, 512, 525,
	526, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 528, 0, 527, 1384, 529, 530, 531,
	532, 533, 541, 543, 544, 539, 540, 542, 545, 546,
	548, 536, 537, 538, 1385, 547, 534, 1264, 535, 324,
	1386, 549, 550, 551, 552, 1288, 1338, 553, 1352, 556,
	557, 0, 0, 558, 0, 559, 0, 0, 561, 562,
	563, 0, 0, 564, 565, 777, 1387, 566, 1388, 1367,
	567, 568, 1274, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 779, 581, 582, 583,
	780, 584, 585, 586, 1368, 587, 782, 588, 589, 0,
	590, 591, 592, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 1348, 601, 602, 604, 603, 605, 0, 606,
	0, 607, 608, 609, 0, 0, 0, 0, 0, 610,
	611, 613, 0, 614, 615, 616, 617, 612, 618, 619,
	620, 621, 622, 623, 0, 625, 626, 624, 627, 628,
	1389, 629, 630, 631, 632, 633, 1275, 634, 0, 635,
	636, 644, 645, 646, 637, 638, 640, 647, 639, 648,
	649, 650, 651, 653, 652, 0, 655, 656, 654, 657,
	658, 659, 1331, 660, 785, 661, 641, 642, 662, 663,
	1390, 664, 665, 666, 667, 668, 669, 670, 1346, 0,
	671, 0, 672, 673, 674, 675, 676, 677, 679, 643,
	680, 685, 686, 1393, 681, 682, 683, 684, 1369, 688,
	689, 690, 691, 0, 692, 693, 1261, 687, 678, 0,
	694, 695, 696, 697, 698, 699, 0, 700, 701, 0,
	702, 1358, 1359, 1360, 1361, 0, 714, 0, 703, 705,
	706, 707, 708, 1370, 709, 1371, 1286, 710, 711, 712,
	713, 704, 715, 716, 0, 1268, 717, 718, 719, 721,
	723, 724, 720, 722, 725, 1332, 726, 0, 0, 727,
	728, 729, 795, 1355, 1392, 0, 731, 732, 730, 733,
	734, 737, 735, 736, 798, 738, 739, 740, 0, 0,
	0, 0, 741, 742, 799, 743, 744, 745, 1265, 0,
	0, 0, 0, 1884, 0, 1308, 1280, 1281, 1282, 1278,
	1279, 1291, 0, 1260, 0, 0, 0, 0, 0, 0,
	1258, 1259, 325, 326, 328, 327, 329, 330, 331, 332,
	1292, 333, 334, 0, 1290, 0, 0, 0, 1334, 1296,
	0, 0, 335, 0, 336, 337, 338, 1374, 339, 340,
	341, 342, 343, 344, 345, 747, 1347, 0, 346, 1354,
	347, 1353, 0, 1364, 348, 349, 350, 351, 352, 353,
	354, 1298, 1333, 1262, 355, 1394, 1395, 754, 0, 356,
	357, 1340, 0, 1321, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 1375, 383, 384, 385, 1324,
	1322, 1323, 1330, 1326, 1325, 1329, 386, 387, 388, 389,
	390, 1357, 391, 393, 1351, 1350, 1267, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 1342, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 1273, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 1365,
	1366, 427, 428, 1287, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 1349, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 1376, 438, 439, 440,
	1362, 1363, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 1372, 0, 1297, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 1335, 1336, 1339, 554, 1378,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 1277, 321, 323,
	1377, 769, 471, 555, 472, 1344, 1345, 0, 1303, 0,
	473, 474, 476, 1379, 1337, 1380, 475, 477, 478, 1381,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 1373, 490, 1382,
	492, 493, 1383, 0, 494, 495, 496, 497, 498, 499,
	502, 1328, 1327, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 1384, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 1385, 547, 534, 1264, 535, 324, 1386, 549, 550,
	551, 552, 1288, 1338, 553, 1352, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 1387, 566, 1388, 1367, 567, 568, 1274,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 1368, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 1348,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 1389, 629, 630,
	631, 632, 633, 1275, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 1331,
	660, 785, 661, 641, 642, 662, 663, 1390, 664, 665,
	666, 667, 668, 669, 670, 1346, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	1393, 681, 682, 683, 684, 1369, 688, 689, 690, 691,
	0, 692, 693, 1261, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 1358, 1359,
	1360, 1361, 0, 714, 0, 703, 705, 706, 707, 708,
	1370, 709, 1371, 1286, 710, 711, 712, 713, 704, 715,
	716, 0, 1268, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 1332, 726, 0, 0, 727, 728, 729, 795,
	1355, 1392, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 0, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 1265, 0, 0, 0, 0,
	1870, 0, 1308, 1280, 1281, 1282, 1278, 1279, 1291, 0,
	1260, 0, 0, 0, 0, 0, 0, 1258, 1259, 325,
	326, 328, 327, 329, 330, 331, 332, 1292, 333, 334,
	0, 1290, 0, 0, 0, 1334, 1296, 0, 0, 335,
	0, 336, 337, 338, 1374, 339, 340, 341, 342, 343,
	344, 345, 747, 1347, 0, 346, 1354, 347, 1353, 0,
	1364, 348, 349, 350, 351, 352, 353, 354, 1298, 1333,
	1262, 355, 1394, 1395, 754, 0, 356, 357, 1340, 0,
	1321, 0, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 0, 367, 368, 369, 366, 370, 371, 0, 372,
	0, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 382, 1375, 383, 384, 385, 1324, 1322, 1323, 1330,
	1326, 1325, 1329, 386, 387, 388, 389, 390, 1357, 391,
	393, 1351, 1350, 1267, 396, 398, 392, 394, 0, 397,
	395, 399, 400, 0, 401, 402, 403, 0, 0, 404,
	1342, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 413, 414, 1273, 415, 416, 417, 419, 421, 418,
	420, 422, 423, 424, 425, 426, 1365, 1366, 427, 428,
	1287, 320, 0, 0, 0, 0, 0, 429, 430, 431,
	1349, 0, 0, 0, 432, 0, 433, 434, 435, 0,
	436, 437, 0, 1376, 438, 439, 440, 1362, 1363, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	1372, 0, 1297, 451, 0, 452, 453, 454, 455, 456,
	457, 458, 1335, 1336, 1339, 554, 1378, 459, 460, 461,
	0, 462, 463, 464, 465, 466, 0, 0, 0, 467,
	468, 469, 470, 0, 1277, 321, 323, 1377, 769, 471,
	555, 472, 1344, 1345, 0, 1303, 0, 473, 474, 476,
	1379, 1337, 1380, 475, 477, 478, 1381, 479, 0, 0,
	0, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	489, 488, 0, 491, 1373, 490, 1382, 492, 493, 1383,
	0, 494, 495, 496, 497, 498, 499, 502, 1328, 1327,
	500, 501, 503, 504, 0, 505, 506, 508, 511, 507,
	509, 510, 512, 525, 526, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 528, 0, 527,
	1384, 529, 530, 531, 532, 533, 541, 543, 544, 539,
	540, 542, 545, 546, 548, 536, 537, 538, 1385, 547,
	534, 1264, 535, 324, 1386, 549, 550, 551, 552, 1288,
	1338, 553, 1352, 556, 557, 0, 0, 558, 0, 559,
	0, 0, 561, 562, 563, 0, 0, 564, 565, 777,
	1387, 566, 1388, 1367, 567, 568, 1274, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	779, 581, 582, 583, 780, 584, 585, 586, 1368, 587,
	782, 588, 589, 0, 590, 591, 592, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 1348, 601, 602, 604,
	603, 605, 0, 606, 0, 607, 608, 609, 0, 0,
	0, 0, 0, 610, 611, 613, 0, 614, 615, 616,
	617, 612, 618, 619, 620, 621, 622, 623, 0, 625,
	626, 624, 627, 628, 1389, 629, 630, 631, 632, 633,
	1275, 634, 0, 635, 636, 644, 645, 646, 637, 638,
	640, 647, 639, 648, 649, 650, 651, 653, 652, 0,
	655, 656, 654, 657, 658, 659, 1331, 660, 785, 661,
	641, 642, 662, 663, 1390, 664, 665, 666, 667, 668,
	669, 670, 1346, 0, 671, 0, 672, 673, 674, 675,
	676, 677, 679, 643, 680, 685, 686, 1393, 681, 682,
	683, 684, 1369, 688, 689, 690, 691, 0, 692, 693,
	1261, 687, 678, 0, 694, 695, 696, 697, 698, 699,
	0, 700, 701, 0, 702, 1358, 1359, 1360, 1361, 0,
	714, 0, 703, 705, 706, 707, 708, 1370, 709, 1371,
	1286, 710, 711, 712, 713, 704, 715, 716, 0, 1268,
	717, 718, 719, 721, 723, 724, 720, 722, 725, 1332,
	726, 0, 0, 727, 728, 729, 795, 1355, 1392, 0,
	731, 732, 730, 733, 734, 737, 735, 736, 798, 738,
	739, 740, 0, 0, 0, 0, 741, 742, 799, 743,
	744, 745, 1265, 0, 0, 0, 0, 1865, 0, 1308,
	1280, 1281, 1282, 1278, 1279, 1291, 0, 1260, 0, 0,
	0, 0, 0, 0, 1258, 1259, 325, 326, 328, 327,
	329, 330, 331, 332, 1292, 333, 334, 0, 1290, 0,
	0, 0, 1334, 1296, 0, 0, 335, 0, 336, 337,
	338, 1374, 339, 340, 341, 342, 343, 344, 345, 747,
	1347, 0, 346, 1354, 347, 1353, 0, 1364, 348, 349,
	350, 351, 352, 353, 354, 1298, 1333, 1262, 355, 1394,
	1395, 754, 0, 356, 357, 1340, 0, 1321, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 382, 1375,
	383, 384, 385, 1324, 1322, 1323, 1330, 1326, 1325, 1329,
	386, 387, 388, 389, 390, 1357, 391, 393, 1351, 1350,
	1267, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 1342, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	1273, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 1365, 1366, 427, 428, 1287, 320, 0,
	0, 0, 0, 0, 429, 430, 431, 1349, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	1376, 438, 439, 440, 1362, 1363, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 1372, 0, 1297,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 1335,
	1336, 1339, 554, 1378, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 1277, 321, 323, 1377, 769, 471, 555, 472, 1344,
	1345, 0, 1303, 0, 473, 474, 476, 1379, 1337, 1380,
	475, 477, 478, 1381, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 1373, 490, 1382, 492, 493, 1383, 0, 494, 495,
	496, 497, 498, 499, 502, 1328, 1327, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 1384, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 1385, 547, 534, 1264, 535,
	324, 1386, 549, 550, 551, 552, 1288, 1338, 553, 1352,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 1387, 566, 1388,
	1367, 567, 568, 1274, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 1368, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 1348, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 1389, 629, 630, 631, 632, 633, 1275, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 651, 653, 652, 0, 655, 656, 654,
	657, 658, 659, 1331, 660, 785, 661, 641, 642, 662,
	663, 1390, 664, 665, 666, 667, 668, 669, 670, 1346,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 1393, 681, 682, 683, 684, 1369,
	688, 689, 690, 691, 0, 692, 693, 1261, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 1358, 1359, 1360, 1361, 0, 714, 0, 703,
	705, 706, 707, 708, 1370, 709, 1371, 1286, 710, 711,
	712, 713, 704, 715, 716, 0, 1268, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 1332, 726, 0, 0,
	727, 728, 729, 795, 1355, 1392, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 0,
	0, 0, 0, 741, 742, 799, 743, 744, 745, 1265,
	0, 0, 0, 0, 1769, 0, 1308, 1280, 1281, 1282,
	1278, 1279, 1291, 0, 1260, 0, 0, 0, 0, 0,
	0, 1258, 1259, 325, 326, 328, 327, 329, 330, 331,
	332, 1292, 333, 334, 0, 1290, 0, 0, 0, 1334,
	1296, 0, 0, 335, 0, 336, 337, 338, 1374, 339,
	340, 341, 342, 343, 344, 345, 747, 1347, 0, 346,
	1354, 347, 1353, 0, 1364, 348, 349, 350, 351, 352,
	353, 354, 1298, 1333, 1262, 355, 1394, 1395, 754, 0,
	356, 357, 1340, 0, 1321, 0, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 0, 367, 368, 369, 366,
	370, 371, 0, 372, 0, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 382, 1375, 383, 384, 385,
	1324, 1322, 1323, 1330, 1326, 1325, 1329, 386, 387, 388,
	389, 390, 1357, 391, 393, 1351, 1350, 1267, 396, 398,
	392, 394, 0, 397, 395, 399, 400, 0, 401, 402,
	403, 0, 0, 404, 1342, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 413, 414, 1273, 415, 416,
	417, 419, 421, 418, 420, 422, 423, 424, 425, 426,
	1365, 1366, 427, 428, 1287, 320, 0, 0, 0, 0,
	0, 429, 430, 431, 1349, 0, 0, 0, 432, 0,
	433, 434, 435, 0, 436, 437, 0, 1376, 438, 439,
	440, 1362, 1363, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 1372, 0, 1297, 451, 0, 452,
	453, 454, 455, 456, 457, 458, 1768, 1336, 1339, 554,
	1378, 459, 460, 461, 0, 462, 463, 464, 465, 466,
	0, 0, 0, 467, 468, 469, 470, 0, 1277, 321,
	323, 1377, 769, 471, 555, 472, 1344, 1345, 0, 1303,
	0, 473, 474, 476, 1379, 1337, 1380, 475, 477, 478,
	1381, 479, 0, 0, 0, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 489, 488, 0, 491, 1373, 490,
	1382, 492, 493, 1383, 0, 494, 495, 496, 497, 498,
	499, 502, 1328, 1327, 500, 501, 503, 504, 0, 505,
	506, 508, 511, 507, 509, 510, 512, 525, 526, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 528, 0, 527, 1384, 529, 530, 531, 532, 533,
	541, 543, 544, 539, 540, 542, 545, 546, 548, 536,
	537, 538, 1385, 547, 534, 1264, 535, 324, 1386, 549,
	550, 551, 552, 1288, 1338, 553, 1352, 556, 557, 0,
	0, 558, 0, 559, 0, 0, 561, 562, 563, 0,
	0, 564, 565, 777, 1387, 566, 1388, 1367, 567, 568,
	1274, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 779, 581, 582, 583, 780, 584,
	585, 586, 1368, 587, 782, 588, 589, 0, 590, 591,
	592, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	1348, 601, 602, 604, 603, 605, 0, 606, 0, 607,
	608, 609, 0, 0, 0, 0, 0, 610, 611, 613,
	0, 614, 615, 616, 617, 612, 618, 619, 620, 621,
	622, 623, 0, 625, 626, 624, 627, 628, 1389, 629,
	630, 631, 632, 633, 1275, 634, 0, 635, 636, 644,
	645, 646, 637, 638, 640, 647, 639, 648, 649, 650,
	651, 653, 652, 0, 655, 656, 654, 657, 658, 659,
	1331, 660, 785, 661, 641, 642, 662, 663, 1390, 664,
	665, 666, 667, 668, 669, 670, 1346, 0, 671, 0,
	672, 673, 674, 675, 676, 677, 679, 643, 680, 685,
	686, 1393, 681, 682, 683, 684, 1369, 688, 689, 690,
	691, 0, 692, 693, 1261, 687, 678, 0, 694, 695,
	696, 697, 698, 699, 0, 700, 701, 0, 702, 1358,
	1359, 1360, 1361, 0, 714, 0, 703, 705, 706, 707,
	708, 1370, 709, 1371, 1286, 710, 711, 712, 713, 704,
	715, 716, 0, 1268, 717, 718, 719, 721, 723, 724,
	720, 722, 725, 1332, 726, 0, 0, 727, 728, 729,
	795, 1355, 1392, 0, 731, 732, 730, 733, 734, 737,
	735, 736, 798, 738, 739, 740, 0, 0, 0, 0,
	741, 742, 799, 743, 744, 745, 1265, 0, 0, 0,
	0, 1763, 0, 1308, 1280, 1281, 1282, 1278, 1279, 1291,
	0, 1260, 0, 0, 0, 0, 0, 0, 1258, 1259,
	325, 326, 328, 327, 329, 330, 331, 332, 1292, 333,
	334, 0, 1290, 0, 0, 0, 1334, 1296, 0, 0,
	335, 0, 336, 337, 338, 1374, 339, 340, 341, 342,
	343, 344, 345, 747, 1347, 0, 346, 1354, 347, 1353,
	0, 1364, 348, 349, 350, 351, 352, 353, 354, 1298,
	1333, 1262, 355, 1394, 1395, 754, 0, 356, 357, 1340,
	0, 1321, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 1375, 383, 384, 385, 1324, 1322, 1323,
	1330, 1326, 1325, 1329, 386, 387, 388, 389, 390, 1357,
	391, 393, 1351, 1350, 1267, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 1342, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 1273, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 1365, 1366, 427,
	428, 1287, 320, 0, 0, 0, 0, 0, 429, 430,
	431, 1349, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 1376, 438, 439, 440, 1362, 1363,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 1372, 0, 1297, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 1762, 1336, 1339, 554, 1378, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 1277, 321, 323, 1377, 769,
	471, 555, 472, 1344, 1345, 0, 1303, 0, 473, 474,
	476, 1379, 1337, 1380, 475, 477, 478, 1381, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 1373, 490, 1382, 492, 493,
	1383, 0, 494, 495, 496, 497, 498, 499, 502, 1328,
	1327, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 1384, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 1385,
	547, 534, 1264, 535, 324, 1386, 549, 550, 551, 552,
	1288, 1338, 553, 1352, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 1387, 566, 1388, 1367, 567, 568, 1274, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 1368,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 1348, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 1389, 629, 630, 631, 632,
	633, 1275, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 1331, 660, 785,
	661, 641, 642, 662, 663, 1390, 664, 665, 666, 667,
	668, 669, 670, 1346, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 1393, 681,
	682, 683, 684, 1369, 688, 689, 690, 691, 0, 692,
	693, 1261, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 1358, 1359, 1360, 1361,
	0, 714, 0, 703, 705, 706, 707, 708, 1370, 709,
	1371, 1286, 710, 711, 712, 713, 704, 715, 716, 0,
	1268, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	1332, 726, 0, 0, 727, 728, 729, 795, 1355, 1392,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 0, 0, 0, 0, 741, 742, 799,
	743, 744, 745, 1265, 0, 0, 0, 0, 1756, 0,
	1308, 1280, 1281, 1282, 1278, 1279, 1291, 0, 1260, 0,
	0, 0, 0, 0, 0, 1258, 1259, 325, 326, 328,
	327, 329, 330, 331, 332, 1292, 333, 334, 0, 1290,
	0, 0, 0, 1334, 1296, 0, 0, 335, 0, 336,
	337, 338, 1374, 339, 340, 341, 342, 343, 344, 345,
	747, 1347, 0, 346, 1354, 347, 1353, 0, 1364, 348,
	349, 350, 351, 352, 353, 354, 1298, 1333, 1262, 355,
	1394, 1395, 754, 0, 356, 357, 1340, 0, 1321, 0,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 0,
	367, 368, 369, 366, 370, 371, 0, 372, 0, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 382,
	1375, 383, 384, 385, 1324, 1322, 1323, 1330, 1326, 1325,
	1329, 386, 387, 388, 389, 390, 1357, 391, 393, 1351,
	1350, 1267, 396, 398, 392, 394, 0, 397, 395, 399,
	400, 0, 401, 402, 403, 0, 0, 404, 1342, 406,
	0, 407, 408, 409, 0, 410, 411, 412, 0, 413,
	414, 1273, 415, 416, 417, 419, 421, 418, 420, 422,
	423, 424, 425, 426, 1365, 1366, 427, 428, 1287, 320,
	0, 0, 0, 0, 0, 429, 430, 431, 1349, 0,
	0, 0, 432, 0, 433, 434, 435, 0, 436, 437,
	0, 1376, 438, 439, 440, 1362, 1363, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 0, 450, 1372, 0,
	1297, 451, 0, 452, 453, 454, 455, 456, 457, 458,
	1335, 1336, 1339, 554, 1378, 459, 460, 461, 0, 462,
	463, 464, 465, 466, 0, 0, 0, 467, 468, 469,
	470, 0, 1277, 321, 323, 1377, 769, 471, 555, 472,
	1344, 1345, 0, 1303, 0, 473, 474, 476, 1379, 1337,
	1380, 475, 477, 478, 1381, 479, 0, 0, 0, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 489, 488,
	0, 491, 1373, 490, 1382, 492, 493, 1383, 0, 494,
	495, 496, 497, 498, 499, 502, 1328, 1327, 500, 501,
	503, 504, 0, 505, 506, 508, 511, 507, 509, 510,
	512, 525, 526, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 528, 0, 527, 1384, 529,
	530, 531, 532, 533, 541, 543, 544, 539, 540, 542,
	545, 546, 548, 536, 537, 538, 1385, 547, 534, 1264,
	535, 324, 1386, 549, 550, 551, 552, 1288, 1338, 553,
	1352, 556, 557, 0, 0, 558, 0, 559, 0, 0,
	561, 562, 563, 0, 0, 564, 565, 777, 1387, 566,
	1388, 1367, 567, 568, 1274, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 779, 581,
	582, 583, 780, 584, 585, 586, 1368, 587, 782, 588,
	589, 0, 590, 591, 592, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 1348, 601, 602, 604, 603, 605,
	0, 606, 0, 607, 608, 609, 0, 0, 0, 0,
	0, 610, 611, 613, 0, 614, 615, 616, 617, 612,
	618, 619, 620, 621, 622, 623, 0, 625, 626, 624,
	627, 628, 1389, 629, 630, 631, 632, 633, 1275, 634,
	0, 635, 636, 644, 645, 646, 637, 638, 640, 647,
	639, 648, 649, 650, 651, 653, 652, 0, 655, 656,
	654, 657, 658, 659, 1331, 660, 785, 661, 641, 642,
	662, 663, 1390, 664, 665, 666, 667, 668, 669, 670,
	1346, 0, 671, 0, 672, 673, 674, 675, 676, 677,
	679, 643, 680, 685, 686, 1393, 681, 682, 683, 684,
	1369, 688, 689, 690, 691, 0, 692, 693, 1261, 687,
	678, 0, 694, 695, 696, 697, 698, 699, 0, 700,
	701, 0, 702, 1358, 1359, 1360, 1361, 0, 714, 0,
	703, 705, 706, 707, 708, 1370, 709, 1371, 1286, 710,
	711, 712, 713, 704, 715, 716, 0, 1268, 717, 718,
	719, 721, 723, 724, 720, 722, 725, 1332, 726, 0,
	0, 727, 728, 729, 795, 1355, 1392, 0, 731, 732,
	730, 733, 734, 737, 735, 736, 798, 738, 739, 740,
	0, 0, 0, 0, 741, 742, 799, 743, 744, 745,
	1265, 0, 0, 0, 0, 1729, 0, 1308, 1280, 1281,
	1282, 1278, 1279, 1291, 0, 1260, 0, 0, 0, 0,
	0, 0, 1258, 1259, 325, 326, 328, 327, 329, 330,
	331, 332, 1292, 333, 334, 0, 1290, 0, 0, 0,
	1334, 1296, 0, 0, 335, 0, 336, 337, 338, 1374,
	339, 340, 341, 342, 343, 344, 345, 747, 1347, 0,
	346, 1354, 347, 1353, 0, 1364, 348, 349, 350, 351,
	352, 353, 354, 1298, 1333, 1262, 355, 1394, 1395, 754,
	0, 356, 357, 1340, 0, 1321, 0, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 0, 367, 368, 369,
	366, 370, 371, 0, 372, 0, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 382, 1375, 383, 384,
	385, 1324, 1322, 1323, 1330, 1326, 1325, 1329, 386, 387,
	388, 389, 390, 1357, 391, 393, 1351, 1350, 1267, 396,
	398, 392, 394, 0, 397, 395, 399, 400, 0, 401,
	402, 403, 0, 0, 404, 1342, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 413, 414, 1273, 415,
	416, 417, 419, 421, 418, 420, 422, 423, 424, 425,
	426, 1365, 1366, 427, 428, 1287, 320, 0, 0, 0,
	0, 0, 429, 430, 431, 1349, 0, 0, 0, 432,
	0, 433, 434, 435, 0, 436, 437, 0, 1376, 438,
	439, 440, 1362, 1363, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 1372, 0, 1297, 451, 0,
	452, 453, 454, 455, 456, 457, 458, 1335, 1336, 1339,
	554, 1378, 459, 460, 461, 0, 462, 463, 464, 465,
	466, 0, 0, 0, 467, 468, 469, 470, 0, 1277,
	321, 323, 1377, 769, 471, 555, 472, 1344, 1345, 0,
	1303, 0, 473, 474, 476, 1379, 1337, 1380, 475, 477,
	478, 1381, 479, 0, 0, 0, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 489, 488, 0, 491, 1373,
	490, 1382, 492, 493, 1383, 0, 494, 495, 496, 497,
	498, 499, 502, 1328, 1327, 500, 501, 503, 504, 0,
	505, 506, 508, 511, 507, 509, 510, 512, 525, 526,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 528, 0, 527, 1384, 529, 530, 531, 532,
	533, 541, 543, 544, 539, 540, 542, 545, 546, 548,
	536, 537, 538, 1385, 547, 534, 1264, 535, 324, 1386,
	549, 550, 551, 552, 1288, 1338, 553, 1352, 556, 557,
	0, 0, 558, 0, 559, 0, 0, 561, 562, 563,
	0, 0, 564, 565, 777, 1387, 566, 1388, 1367, 567,
	568, 1274, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 779, 581, 582, 583, 780,
	584, 585, 586, 1368, 587, 782, 588, 589, 0, 590,
	591, 592, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 1348, 601, 602, 604, 603, 605, 0, 606, 0,
	607, 608, 609, 0, 0, 0, 0, 0, 610, 611,
	613, 0, 614, 615, 616, 617, 612, 618, 619, 620,
	621, 622, 623, 0, 625, 626, 624, 627, 628, 1389,
	629, 630, 631, 632, 633, 1275, 634, 0, 635, 636,
	644, 645, 646, 637, 638, 640, 647, 639, 648, 649,
	650, 651, 653, 652, 0, 655, 656, 654, 657, 658,
	659, 1331, 660, 785, 661, 641, 642, 662, 663, 1390,
	664, 665, 666, 667, 668, 669, 670, 1346, 0, 671,
	0, 672, 673, 674, 675, 676, 677, 679, 643, 680,
	685, 686, 1393, 681, 682, 683, 684, 1369, 688, 689,
	690, 691, 0, 692, 693, 1261, 687, 678, 0, 694,
	695, 696, 697, 698, 699, 0, 700, 701, 0, 702,
	1358, 1359, 1360, 1361, 0, 714, 0, 703, 705, 706,
	707, 708, 1370, 709, 1371, 1286, 710, 711, 712, 713,
	704, 715, 716, 0, 1268, 717, 718, 719, 721, 723,
	724, 720, 722, 725, 1332, 726, 0, 0, 727, 728,
	729, 795, 1355, 1392, 0, 731, 732, 730, 733, 734,
	737, 735, 736, 798, 738, 739, 740, 0, 0, 0,
	0, 741, 742, 799, 743, 744, 745, 1265, 0, 0,
	0, 0, 1701, 0, 1308, 1280, 1281, 1282, 1278, 1279,
	1291, 0, 1260, 0, 0, 0, 0, 0, 0, 1258,
	1259, 325, 326, 328, 327, 329, 330, 331, 332, 1292,
	333, 334, 0, 1290, 0, 0, 0, 1334, 1296, 0,
	0, 335, 0, 336, 337, 338, 1374, 339, 340, 341,
	342, 343, 344, 345, 747, 1347, 0, 346, 1354, 347,
	1353, 0, 1364, 348, 349, 350, 351, 352, 353, 354,
	1298, 1333, 1262, 355, 1394, 1395, 754, 0, 356, 357,
	1340, 0, 1321, 0, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 0, 367, 368, 369, 366, 370, 371,
	0, 372, 0, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 382, 1375, 383, 384, 385, 1324, 1322,
	1323, 1330, 1326, 1325, 1329, 386, 387, 388, 389, 390,
	1357, 391, 393, 1351, 1350, 1267, 396, 398, 392, 394,
	0, 397, 395, 399, 400, 0, 401, 402, 403, 0,
	0, 404, 1342, 406, 0, 407, 408, 409, 0, 410,
	411, 412, 0, 413, 414, 1273, 415, 416, 417, 419,
	421, 418, 1705, 422, 423, 424, 425, 426, 1365, 1366,
	427, 428, 1287, 320, 0, 0, 0, 0, 0, 429,
	430, 431, 1349, 0, 0, 0, 432, 0, 433, 434,
	435, 0, 436, 437, 0, 1376, 438, 439, 440, 1362,
	1363, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	0, 450, 1372, 0, 1297, 451, 0, 452, 453, 454,
	455, 456, 457, 458, 1335, 1336, 1339, 554, 1378, 459,
	460, 461, 0, 462, 463, 464, 465, 466, 0, 0,
	0, 467, 468, 469, 470, 0, 1277, 321, 323, 1377,
	769, 471, 555, 472, 1344, 1345, 0, 1303, 0, 473,
	474, 476, 1379, 1337, 1380, 475, 477, 478, 1381, 479,
	0, 0, 0, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 489, 488, 0, 491, 1373, 490, 1382, 492,
	493, 1383, 0, 494, 495, 496, 497, 498, 499, 502,
	1328, 1327, 500, 501, 503, 504, 0, 505, 506, 508,
	511, 507, 509, 510, 512, 525, 526, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 528,
	0, 527, 1384, 529, 530, 531, 532, 533, 541, 543,
	544, 539, 540, 542, 545, 546, 548, 536, 537, 538,
	1385, 547, 534, 1264, 535, 324, 1386, 549, 550, 551,
	552, 1288, 1338, 553, 1352, 556, 557, 0, 0, 558,
	0, 559, 0, 0, 561, 562, 563, 0, 0, 564,
	565, 777, 1387, 566, 1388, 1367, 567, 568, 1274, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 779, 581, 582, 583, 780, 584, 585, 586,
	1368, 587, 782, 588, 589, 0, 590, 591, 592, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 1348, 601,
	602, 604, 603, 605, 0, 606, 0, 607, 608, 609,
	0, 0, 0, 0, 0, 610, 611, 1706, 0, 614,
	615, 616, 617, 612, 618, 619, 620, 621, 622, 623,
	0, 625, 626, 624, 627, 628, 1389, 629, 630, 631,
	632, 633, 1275, 634, 0, 635, 636, 644, 645, 646,
	637, 638, 640, 647, 639, 648, 649, 650, 651, 653,
	652, 0, 655, 656, 654, 657, 658, 659, 1331, 660,
	785, 661, 641, 642, 662, 663, 1390, 664, 665, 666,
	667, 668, 669, 670, 1346, 0, 671, 0, 672, 673,
	674, 675, 676, 677, 679, 643, 680, 685, 686, 1393,
	681, 682, 683, 684, 1369, 688, 689, 690, 691, 0,
	692, 693, 1261, 687, 678, 0, 694, 695, 696, 697,
	698, 699, 0, 1704, 701, 0, 702, 1358, 1359, 1360,
	1361, 0, 714, 0, 703, 705, 706, 707, 708, 1370,
	709, 1371, 1286, 710, 711, 712, 713, 704, 715, 716,
	0, 1268, 717, 718, 719, 721, 723, 724, 720, 722,
	725, 1332, 726, 0, 0, 727, 728, 729, 795, 1355,
	1392, 0, 731, 732, 730, 733, 734, 737, 735, 736,
	798, 738, 739, 740, 0, 0, 0, 0, 741, 742,
	799, 743, 744, 745, 1265, 0, 0, 0, 0, 1529,
	0, 1308, 1280, 1281, 1282, 1278, 1279, 1291, 0, 1260,
	0, 0, 0, 0, 0, 0, 1258, 1259, 325, 326,
	328, 327, 329, 330, 331, 332, 1292, 333, 334, 0,
	1290, 0, 0, 0, 1334, 1296, 0, 0, 335, 0,
	336, 337, 338, 1374, 339, 340, 341, 342, 343, 344,
	345, 747, 1347, 0, 346, 1354, 347, 1353, 0, 1364,
	348, 349, 350, 351, 352, 353, 354, 1298, 1333, 1262,
	355, 1394, 1395, 754, 0, 356, 357, 1340, 0, 1321,
	0, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	0, 367, 368, 369, 366, 370, 371, 0, 372, 0,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	382, 1375, 383, 384, 385, 1324, 1322, 1323, 1330, 1326,
	1325, 1329, 386, 387, 388, 389, 390, 1357, 391, 393,
	1351, 1350, 1267, 396, 398, 392, 394, 0, 397, 395,
	399, 400, 0, 401, 402, 403, 0, 0, 404, 1342,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	413, 414, 1273, 415, 416, 417, 419, 421, 418, 420,
	422, 423, 424, 425, 426, 1365, 1366, 427, 428, 1287,
	320, 0, 0, 0, 0, 0, 429, 430, 431, 1349,
	0, 0, 0, 432, 0, 433, 434, 435, 0, 436,
	437, 0, 1376, 438, 439, 440, 1362, 1363, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 1372,
	0, 1297, 451, 0, 452, 453, 454, 455, 456, 457,
	458, 1335, 1336, 1339, 554, 1378, 459, 460, 461, 0,
	462, 463, 464, 465, 466, 0, 0, 0, 467, 468,
	469, 470, 0, 1277, 321, 323, 1377, 769, 471, 555,
	472, 1344, 1345, 0, 1303, 0, 473, 474, 476, 1379,
	1337, 1380, 475, 477, 478, 1381, 479, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 489,
	488, 0, 491, 1373, 490, 1382, 492, 493, 1383, 0,
	494, 495, 496, 497, 498, 499, 502, 1328, 1327, 500,
	501, 503, 504, 0, 505, 506, 508, 511, 507, 509,
	510, 512, 525, 526, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 528, 0, 527, 1384,
	529, 530, 531, 532, 533, 541, 543, 544, 539, 540,
	542, 545, 546, 548, 536, 537, 538, 1385, 547, 534,
	1264, 535, 324, 1386, 549, 550, 551, 552, 1288, 1338,
	553, 1352, 556, 557, 0, 0, 558, 0, 559, 0,
	0, 561, 562, 563, 0, 0, 564, 565, 777, 1387,
	566, 1388, 1367, 567, 568, 1274, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 779,
	581, 582, 583, 780, 584, 585, 586, 1368, 587, 782,
	588, 589, 0, 590, 591, 592, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 1348, 601, 602, 604, 603,
	605, 0, 606, 0, 607, 608, 609, 0, 0, 0,
	0, 0, 610, 611, 613, 0, 614, 615, 616, 617,
	612, 618, 619, 620, 621, 622, 623, 0, 625, 626,
	624, 627, 628, 1389, 629, 630, 631, 632, 633, 1275,
	634, 0, 635, 636, 644, 645, 646, 637, 638, 640,
	647, 639, 648, 649, 650, 651, 653, 652, 0, 655,
	656, 654, 657, 658, 659, 1331, 660, 785, 661, 641,
	642, 662, 663, 1390, 664, 665, 666, 667, 668, 669,
	670, 1346, 0, 671, 0, 672, 673, 674, 675, 676,
	677, 679, 643, 680, 685, 686, 1393, 681, 682, 683,
	684, 1369, 688, 689, 690, 691, 0, 692, 693, 1261,
	687, 678, 0, 694, 695, 696, 697, 698, 699, 0,
	700, 701, 0, 702, 1358, 1359, 1360, 1361, 0, 714,
	0, 703, 705, 706, 707, 708, 1370, 709, 1371, 1286,
	710, 711, 712, 713, 704, 715, 716, 0, 1268, 717,
	718, 719, 721, 723, 724, 720, 722, 725, 1332, 726,
	0, 0, 727, 728, 729, 795, 1355, 1392, 0, 731,
	732, 730, 733, 734, 737, 735, 736, 798, 738, 739,
	740, 0, 0, 0, 0, 741, 742, 799, 743, 744,
	745, 1265, 0, 0, 0, 0, 0, 0, 1308, 1280,
	1281, 1282, 1278, 1279, 1291, 0, 1260, 0, 0, 0,
	0, 0, 0, 1258, 1259, 325, 326, 328, 327, 329,
	330, 331, 332, 1292, 333, 334, 0, 1290, 0, 0,
	0, 1334, 1296, 0, 0, 335, 0, 336, 337, 338,
	1374, 339, 340, 341, 342, 343, 344, 345, 747, 1347,
	0, 346, 1354, 347, 1353, 0, 1364, 348, 349, 350,
	351, 352, 353, 354, 1298, 1333, 1262, 355, 1394, 1395,
	754, 0, 356, 357, 1340, 0, 1321, 0, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 0, 367, 368,
	369, 366, 370, 371, 0, 372, 0, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 381, 382, 1375, 383,
	384, 385, 1324, 1322, 1323, 1330, 1326, 1325, 1329, 386,
	387, 388, 389, 390, 1357, 391, 393, 1351, 1350, 1267,
	396, 398, 392, 394, 0, 397, 395, 399, 400, 0,
	401, 402, 403, 0, 0, 404, 1342, 406, 0, 407,
	408, 409, 0, 410, 411, 412, 0, 413, 414, 1273,
	415, 416, 417, 419, 421, 418, 420, 422, 423, 424,
	425, 426, 1365, 1366, 427, 428, 1287, 320, 0, 0,
	0, 0, 0, 429, 430, 431, 1349, 0, 0, 0,
	432, 0, 433, 434, 435, 0, 436, 437, 0, 1376,
	438, 439, 440, 1362, 1363, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 1372, 0, 1297, 451,
	0, 452, 453, 454, 455, 456, 457, 458, 1335, 1336,
	1339, 554, 1378, 459, 460, 461, 0, 462, 463, 464,
	465, 466, 0, 0, 0, 467, 468, 469, 470, 0,
	1277, 321, 323, 1377, 769, 471, 555, 472, 1344, 1345,
	0, 1303, 0, 473, 474, 476, 1379, 1337, 1380, 475,
	477, 478, 1381, 479, 0, 0, 0, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 489, 488, 0, 491,
	1373, 490, 1382, 492, 493, 1383, 0, 494, 495, 496,
	497, 498, 499, 502, 1328, 1327, 500, 501, 503, 504,
	0, 505, 506, 508, 511, 507, 509, 510, 512, 525,
	526, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 528, 0, 527, 1384, 529, 530, 531,
	532, 533, 541, 543, 544, 539, 540, 542, 545, 546,
	548, 536, 537, 538, 1385, 547, 534, 1264, 535, 324,
	1386, 549, 550, 551, 552, 1288, 1338, 553, 1352, 556,
	557, 0, 0, 558, 0, 559, 0, 0, 561, 562,
	563, 0, 0, 564, 565, 777, 1387, 566, 1388, 1367,
	567, 568, 1274, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 779, 581, 582, 583,
	780, 584, 585, 586, 1368, 587, 782, 588, 589, 0,
	590, 591, 592, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 1348, 601, 602, 604, 603, 605, 0, 606,
	0, 607, 608, 609, 0, 0, 0, 0, 0, 610,
	611, 613, 0, 614, 615, 616, 617, 612, 618, 619,
	620, 621, 622, 623, 0, 625, 626, 624, 627, 628,
	1389, 629, 630, 631, 632, 633, 1275, 634, 0, 635,
	636, 644, 645, 646, 637, 638, 640, 647, 639, 648,
	649, 650, 651, 653, 652, 0, 655, 656, 654, 657,
	658, 659, 1331, 660, 785, 661, 641, 642, 662, 663,
	1390, 664, 665, 666, 667, 668, 669, 670, 1346, 0,
	671, 0, 672, 673, 674, 675, 676, 677, 679, 643,
	680, 685, 686, 1393, 681, 682, 683, 684, 1369, 688,
	689, 690, 691, 0, 692, 693, 1261, 687, 678, 0,
	694, 695, 696, 697, 698, 699, 0, 700, 701, 0,
	702, 1358, 1359, 1360, 1361, 0, 714, 0, 703, 705,
	706, 707, 708, 1370, 709, 1371, 1286, 710, 711, 712,
	713, 704, 715, 716, 0, 1268, 717, 718, 719, 721,
	723, 724, 720, 722, 725, 1332, 726, 0, 0, 727,
	728, 729, 795, 1355, 1392, 0, 731, 732, 730, 733,
	734, 737, 735, 736, 798, 738, 739, 740, 0, 0,
	0, 0, 741, 742, 799, 743, 744, 745, 1265, 0,
	0, 0, 0, 0, 0, 1308, 1280, 1281, 1282, 1278,
	1279, 1291, 0, 1260, 0, 0, 0, 0, 0, 0,
	1258, 1259, 325, 326, 328, 327, 329, 330, 331, 332,
	1292, 333, 334, 0, 1290, 0, 0, 0, 1334, 1296,
	0, 0, 335, 0, 336, 337, 338, 1374, 339, 340,
	341, 342, 343, 344, 345, 747, 1347, 0, 346, 1354,
	347, 1353, 0, 1364, 348, 349, 350, 351, 352, 353,
	354, 1298, 1333, 1262, 355, 1394, 1395, 754, 0, 356,
	357, 1340, 0, 1321, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 1375, 383, 384, 5506, 1324,
	1322, 1323, 1330, 1326, 1325, 1329, 386, 387, 388, 389,
	390, 1357, 391, 393, 1351, 1350, 1267, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 1342, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 1273, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 1365,
	1366, 427, 428, 1287, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 1349, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 1376, 438, 439, 440,
	1362, 1363, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 1372, 0, 1297, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 1335, 1336, 1339, 554, 1378,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 1277, 321, 323,
	1377, 769, 471, 555, 472, 1344, 1345, 0, 1303, 0,
	473, 474, 476, 1379, 1337, 1380, 475, 477, 478, 1381,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 1373, 490, 1382,
	492, 493, 1383, 0, 494, 495, 496, 497, 498, 499,
	502, 1328, 1327, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 1384, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 1385, 547, 534, 1264, 535, 324, 1386, 549, 550,
	551, 552, 1288, 1338, 553, 1352, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 1387, 566, 1388, 1367, 567, 568, 1274,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 1368, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 1348,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 1389, 629, 630,
	631, 632, 633, 1275, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 1331,
	660, 785, 661, 641, 642, 662, 663, 1390, 664, 665,
	666, 667, 668, 669, 670, 1346, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	1393, 681, 682, 683, 684, 1369, 688, 689, 690, 691,
	0, 692, 693, 1261, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 1358, 1359,
	1360, 1361, 0, 714, 0, 703, 705, 706, 707, 708,
	1370, 709, 1371, 1286, 710, 711, 712, 713, 704, 5505,
	716, 0, 1268, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 1332, 726, 0, 0, 727, 728, 729, 795,
	1355, 1392, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 0, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 1265, 0, 0, 0, 0,
	0, 0, 1308, 1280, 1281, 1282, 1278, 1279, 1291, 0,
	1260, 0, 0, 0, 0, 0, 0, 1258, 1259, 325,
	326, 328, 327, 329, 330, 331, 332, 1292, 333, 334,
	0, 1290, 0, 0, 0, 1334, 1296, 0, 0, 335,
	0, 336, 337, 338, 1374, 339, 340, 341, 342, 343,
	344, 345, 5504, 1347, 0, 346, 1354, 347, 1353, 0,
	1364, 348, 349, 350, 351, 352, 353, 354, 1298, 1333,
	1262, 355, 1394, 1395, 754, 0, 356, 357, 1340, 0,
	1321, 0, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 0, 367, 368, 369, 366, 370, 371, 0, 372,
	0, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 382, 1375, 383, 384, 5506, 1324, 1322, 1323, 1330,
	1326, 1325, 1329, 386, 387, 388, 389, 390, 1357, 391,
	393, 1351, 1350, 1267, 396, 398, 392, 394, 0, 397,
	395, 399, 400, 0, 401, 402, 403, 0, 0, 404,
	1342, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 413, 414, 1273, 415, 416, 417, 419, 421, 418,
	420, 422, 423, 424, 425, 426, 1365, 1366, 427, 428,
	1287, 320, 0, 0, 0, 0, 0, 429, 430, 431,
	1349, 0, 0, 0, 432, 0, 433, 434, 435, 0,
	436, 437, 0, 1376, 438, 439, 440, 1362, 1363, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	1372, 0, 1297, 451, 0, 452, 453, 454, 455, 456,
	457, 458, 1335, 1336, 1339, 554, 1378, 459, 460, 461,
	0, 462, 463, 464, 465, 466, 0, 0, 0, 467,
	468, 469, 470, 0, 1277, 321, 323, 1377, 769, 471,
	555, 472, 1344, 1345, 0, 1303, 0, 473, 474, 476,
	1379, 1337, 1380, 475, 477, 478, 1381, 479, 0, 0,
	0, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	489, 488, 0, 491, 1373, 490, 1382, 492, 493, 1383,
	0, 494, 495, 496, 497, 498, 499, 502, 1328, 1327,
	500, 501, 503, 504, 0, 505, 506, 508, 511, 507,
	509, 510, 512, 525, 526, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 528, 0, 527,
	1384, 529, 530, 531, 532, 533, 541, 543, 544, 539,
	540, 542, 545, 546, 548, 536, 537, 538, 1385, 547,
	534, 1264, 535, 324, 1386, 549, 550, 551, 552, 1288,
	1338, 553, 1352, 556, 557, 0, 0, 558, 0, 559,
	0, 0, 561, 562, 563, 0, 0, 564, 565, 777,
	1387, 566, 1388, 1367, 567, 568, 1274, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	779, 581, 582, 583, 780, 584, 585, 586, 1368, 587,
	782, 588, 589, 0, 590, 591, 592, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 1348, 601, 602, 604,
	603, 605, 0, 606, 0, 607, 608, 609, 0, 0,
	0, 0, 0, 610, 611, 613, 0, 614, 615, 616,
	617, 612, 618, 619, 620, 621, 622, 623, 0, 625,
	626, 624, 627, 628, 1389, 629, 630, 631, 632, 633,
	1275, 634, 0, 635, 636, 644, 645, 646, 637, 638,
	640, 647, 639, 648, 649, 650, 651, 653, 652, 0,
	655, 656, 654, 657, 658, 659, 1331, 660, 785, 661,
	641, 642, 662, 663, 1390, 664, 665, 666, 667, 668,
	669, 670, 1346, 0, 671, 0, 672, 673, 674, 675,
	676, 677, 679, 643, 680, 685, 686, 1393, 681, 682,
	683, 684, 1369, 688, 689, 690, 691, 0, 692, 693,
	1261, 687, 678, 0, 694, 695, 696, 697, 698, 699,
	0, 700, 701, 0, 702, 1358, 1359, 1360, 1361, 0,
	714, 0, 703, 705, 706, 707, 708, 1370, 709, 1371,
	1286, 710, 711, 712, 713, 704, 5505, 716, 0, 1268,
	717, 718, 719, 721, 723, 724, 720, 722, 725, 1332,
	726, 0, 0, 727, 728, 729, 795, 1355, 1392, 0,
	731, 732, 730, 733, 734, 737, 735, 736, 798, 738,
	739, 740, 0, 0, 0, 0, 741, 742, 799, 743,
	744, 745, 1265, 0, 0, 0, 0, 0, 0, 1308,
	1280, 1281, 1282, 1278, 1279, 1291, 0, 1260, 0, 0,
	0, 0, 0, 0, 1258, 1259, 325, 326, 328, 327,
	329, 330, 331, 332, 1292, 333, 334, 0, 1290, 0,
	0, 0, 1334, 1296, 0, 0, 335, 0, 336, 337,
	338, 1374, 339, 340, 341, 342, 343, 344, 345, 747,
	1347, 0, 346, 1354, 347, 1353, 0, 1364, 348, 349,
	350, 351, 352, 353, 354, 1298, 1333, 1262, 355, 1394,
	1395, 754, 0, 356, 357, 1340, 0, 1321, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 382, 1375,
	383, 5078, 385, 1324, 1322, 1323, 1330, 1326, 1325, 1329,
	386, 387, 388, 389, 390, 1357, 391, 393, 1351, 1350,
	1267, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 1342, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	1273, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 1365, 1366, 427, 428, 1287, 320, 0,
	0, 0, 0, 0, 429, 430, 431, 1349, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	1376, 438, 439, 440, 1362, 1363, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 1372, 0, 5079,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 1335,
	1336, 1339, 554, 1378, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 1277, 321, 323, 1377, 769, 471, 555, 472, 1344,
	1345, 0, 1303, 0, 473, 474, 476, 1379, 1337, 1380,
	475, 477, 478, 1381, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 1373, 490, 1382, 492, 493, 1383, 0, 494, 495,
	496, 497, 498, 499, 502, 1328, 1327, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 1384, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 1385, 547, 534, 1264, 535,
	324, 1386, 549, 550, 551, 552, 1288, 1338, 553, 1352,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 1387, 566, 1388,
	1367, 567, 568, 1274, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 1368, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 1348, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 1389, 629, 630, 631, 5077, 633, 1275, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 651, 653, 652, 0, 655, 656, 654,
	657, 658, 659, 1331, 660, 785, 661, 641, 642, 662,
	663, 1390, 664, 665, 666, 667, 668, 669, 670, 1346,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 1393, 681, 682, 683, 684, 1369,
	688, 689, 690, 691, 0, 692, 693, 1261, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 1358, 1359, 1360, 1361, 0, 714, 0, 703,
	705, 706, 707, 708, 1370, 709, 1371, 1286, 710, 711,
	712, 713, 704, 715, 716, 0, 1268, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 1332, 726, 0, 0,
	727, 728, 729, 795, 1355, 1392, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 0,
	0, 0, 0, 741, 742, 799, 743, 744, 745, 1265,
	0, 0, 0, 0, 0, 0, 1308, 1280, 1281, 1282,
	3675, 3676, 1291, 0, 1260, 0, 0, 0, 0, 0,
	0, 1258, 1259, 325, 326, 328, 327, 329, 330, 331,
	332, 1292, 333, 334, 0, 1290, 0, 0, 0, 1334,
	1296, 0, 0, 335, 0, 336, 337, 338, 1374, 339,
	340, 341, 342, 343, 344, 345, 747, 1347, 0, 346,
	1354, 347, 1353, 0, 1364, 348, 349, 350, 351, 352,
	353, 354, 1298, 1333, 1262, 355, 1394, 1395, 754, 0,
	356, 357, 1340, 0, 1321, 0, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 0, 367, 368, 369, 366,
	370, 371, 0, 372, 0, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 382, 1375, 383, 384, 385,
	1324, 1322, 1323, 1330, 1326, 1325, 1329, 386, 387, 388,
	389, 390, 1357, 391, 393, 1351, 1350, 1267, 396, 398,
	392, 394, 0, 397, 395, 399, 400, 0, 401, 402,
	403, 0, 0, 404, 1342, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 413, 414, 1273, 415, 416,
	417, 419, 421, 418, 420, 422, 423, 424, 425, 426,
	1365, 1366, 427, 428, 1287, 320, 0, 0, 0, 0,
	0, 429, 430, 431, 1349, 0, 0, 0, 432, 0,
	433, 434, 435, 0, 436, 437, 0, 1376, 438, 439,
	440, 1362, 1363, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 1372, 0, 1297, 451, 0, 452,
	453, 454, 455, 456, 457, 458, 1335, 1336, 1339, 554,
	1378, 459, 460, 461, 0, 462, 463, 464, 465, 466,
	0, 0, 0, 467, 468, 469, 470, 0, 1277, 321,
	323, 1377, 769, 471, 555, 472, 1344, 1345, 0, 1303,
	0, 473, 474, 476, 1379, 1337, 1380, 475, 477, 478,
	1381, 479, 0, 0, 0, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 489, 488, 0, 491, 1373, 490,
	1382, 492, 493, 1383, 0, 494, 495, 496, 497, 498,
	499, 502, 1328, 1327, 500, 501, 503, 504, 0, 505,
	506, 508, 511, 507, 509, 510, 512, 525, 526, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 528, 0, 527, 1384, 529, 530, 531, 532, 533,
	541, 543, 544, 539, 540, 542, 545, 546, 548, 536,
	537, 538, 1385, 547, 534, 1264, 535, 324, 1386, 549,
	550, 551, 552, 1288, 1338, 553, 1352, 556, 557, 0,
	0, 558, 0, 559, 0, 0, 561, 562, 563, 0,
	0, 564, 565, 777, 1387, 566, 1388, 1367, 567, 568,
	1274, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 779, 581, 582, 583, 780, 584,
	585, 586, 1368, 587, 782, 588, 589, 0, 590, 591,
	592, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	1348, 601, 602, 604, 603, 605, 0, 606, 0, 607,
	608, 609, 0, 0, 0, 0, 0, 610, 611, 613,
	0, 614, 615, 616, 617, 612, 618, 619, 620, 621,
	622, 623, 0, 625, 626, 624, 627, 628, 1389, 629,
	630, 631, 632, 633, 1275, 634, 0, 635, 636, 644,
	645, 646, 637, 638, 640, 647, 639, 648, 649, 650,
	651, 653, 652, 0, 655, 656, 654, 657, 658, 659,
	1331, 660, 785, 661, 641, 642, 662, 663, 1390, 664,
	665, 666, 667, 668, 669, 670, 1346, 0, 671, 0,
	672, 673, 674, 675, 676, 677, 679, 643, 680, 685,
	686, 1393, 681, 682, 683, 684, 1369, 688, 689, 690,
	691, 0, 692, 693, 1261, 687, 678, 0, 694, 695,
	696, 697, 698, 699, 0, 700, 701, 0, 702, 1358,
	1359, 1360, 1361, 0, 714, 0, 703, 705, 706, 707,
	708, 1370, 709, 1371, 1286, 710, 711, 712, 713, 704,
	715, 716, 0, 1268, 717, 718, 719, 721, 723, 724,
	720, 722, 725, 1332, 726, 0, 0, 727, 728, 729,
	795, 1355, 1392, 0, 731, 732, 730, 733, 734, 737,
	735, 736, 798, 738, 739, 740, 0, 0, 0, 0,
	741, 742, 799, 743, 744, 745, 1265, 0, 0, 0,
	0, 0, 0, 1308, 1280, 1281, 1282, 3673, 3674, 1291,
	0, 1260, 0, 0, 0, 0, 0, 0, 1258, 1259,
	325, 326, 328, 327, 329, 330, 331, 332, 1292, 333,
	334, 0, 1290, 0, 0, 0, 1334, 1296, 0, 0,
	335, 0, 336, 337, 338, 1374, 339, 340, 341, 342,
	343, 344, 345, 747, 1347, 0, 346, 1354, 347, 1353,
	0, 1364, 348, 349, 350, 351, 352, 353, 354, 1298,
	1333, 1262, 355, 1394, 1395, 754, 0, 356, 357, 1340,
	0, 1321, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 1375, 383, 384, 385, 1324, 1322, 1323,
	1330, 1326, 1325, 1329, 386, 387, 388, 389, 390, 1357,
	391, 393, 1351, 1350, 1267, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 1342, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 1273, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 1365, 1366, 427,
	428, 1287, 320, 0, 0, 0, 0, 0, 429, 430,
	431, 1349, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 1376, 438, 439, 440, 1362, 1363,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 1372, 0, 1297, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 1335, 1336, 1339, 554, 1378, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 1277, 321, 323, 1377, 769,
	471, 555, 472, 1344, 1345, 0, 1303, 0, 473, 474,
	476, 1379, 1337, 1380, 475, 477, 478, 1381, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 1373, 490, 1382, 492, 493,
	1383, 0, 494, 495, 496, 497, 498, 499, 502, 1328,
	1327, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 1384, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 1385,
	547, 534, 1264, 535, 324, 1386, 549, 550, 551, 552,
	1288, 1338, 553, 1352, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 1387, 566, 1388, 1367, 567, 568, 1274, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 1368,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 1348, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 1389, 629, 630, 631, 632,
	633, 1275, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 1331, 660, 785,
	661, 641, 642, 662, 663, 1390, 664, 665, 666, 667,
	668, 669, 670, 1346, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 1393, 681,
	682, 683, 684, 1369, 688, 689, 690, 691, 0, 692,
	693, 1261, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 1358, 1359, 1360, 1361,
	0, 714, 0, 703, 705, 706, 707, 708, 1370, 709,
	1371, 1286, 710, 711, 712, 713, 704, 715, 716, 0,
	1268, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	1332, 726, 0, 0, 727, 728, 729, 795, 1355, 1392,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 0, 0, 0, 0, 741, 742, 799,
	743, 744, 745, 1265, 0, 0, 0, 0, 0, 0,
	1308, 1280, 1281, 1282, 1278, 1279, 1291, 0, 1260, 0,
	0, 0, 0, 0, 0, 1258, 1259, 325, 326, 328,
	327, 329, 330, 331, 332, 1292, 333, 334, 0, 1290,
	0, 0, 0, 1334, 1296, 0, 0, 335, 0, 336,
	337, 338, 1374, 339, 340, 341, 342, 343, 344, 345,
	747, 1347, 0, 346, 1354, 347, 1353, 0, 1364, 348,
	349, 350, 351, 352, 353, 354, 1298, 1333, 1262, 355,
	1394, 1395, 754, 0, 356, 357, 1340, 0, 1321, 0,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 0,
	367, 368, 369, 366, 370, 371, 0, 372, 0, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 382,
	1375, 383, 384, 385, 1324, 1322, 1323, 1330, 1326, 1325,
	1329, 386, 387, 388, 389, 390, 1357, 391, 393, 1351,
	1350, 1267, 396, 398, 392, 394, 0, 397, 395, 399,
	400, 0, 401, 402, 403, 0, 0, 404, 1342, 406,
	0, 407, 408, 409, 0, 410, 411, 412, 0, 413,
	414, 1273, 415, 416, 417, 419, 421, 418, 420, 422,
	423, 424, 425, 426, 1365, 1366, 427, 428, 1287, 320,
	0, 0, 0, 0, 0, 429, 430, 431, 1349, 0,
	0, 0, 432, 0, 433, 434, 435, 0, 436, 437,
	0, 1376, 438, 439, 440, 1362, 1363, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 0, 450, 1372, 0,
	1297, 451, 0, 452, 453, 454, 455, 456, 457, 458,
	1335, 1336, 1339, 554, 1378, 459, 460, 461, 0, 462,
	463, 464, 465, 466, 0, 0, 0, 467, 468, 469,
	470, 0, 1277, 321, 323, 1377, 769, 471, 555, 472,
	1344, 1345, 0, 1303, 0, 473, 474, 476, 1379, 1337,
	1380, 475, 477, 478, 1381, 479, 0, 0, 0, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 489, 488,
	0, 491, 1373, 490, 1382, 492, 493, 1383, 0, 494,
	495, 496, 497, 498, 499, 502, 1328, 1327, 500, 501,
	503, 504, 0, 505, 506, 508, 511, 507, 509, 510,
	512, 525, 526, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 528, 0, 527, 1384, 529,
	530, 531, 532, 533, 541, 543, 544, 539, 540, 542,
	545, 546, 548, 536, 537, 538, 1385, 547, 534, 1264,
	535, 324, 1386, 549, 550, 551, 552, 1288, 1338, 553,
	1352, 556, 557, 0, 0, 558, 0, 559, 0, 0,
	561, 562, 563, 0, 0, 564, 565, 777, 1387, 566,
	1388, 1367, 567, 568, 1274, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 779, 581,
	582, 583, 780, 584, 585, 586, 1368, 587, 782, 588,
	589, 0, 590, 591, 592, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 1348, 601, 602, 604, 603, 605,
	0, 606, 0, 607, 608, 609, 0, 0, 0, 0,
	0, 610, 611, 613, 0, 614, 615, 616, 617, 612,
	618, 619, 620, 621, 622, 623, 0, 625, 626, 624,
	627, 628, 1389, 629, 630, 631, 632, 633, 1275, 634,
	0, 635, 636, 644, 645, 646, 637, 638, 640, 647,
	639, 648, 649, 650, 651, 653, 652, 0, 655, 656,
	654, 657, 658, 659, 1331, 660, 785, 661, 641, 642,
	662, 663, 1390, 664, 665, 666, 667, 668, 669, 670,
	1346, 0, 671, 0, 672, 673, 674, 675, 676, 677,
	679, 643, 680, 685, 686, 1393, 681, 682, 683, 684,
	1369, 688, 689, 690, 691, 0, 692, 693, 1261, 687,
	678, 0, 694, 695, 696, 697, 698, 699, 0, 700,
	701, 0, 702, 1358, 1359, 1360, 1361, 0, 714, 0,
	703, 705, 706, 707, 708, 1370, 709, 1371, 1286, 710,
	711, 712, 713, 704, 715, 716, 0, 1268, 717, 718,
	719, 721, 723, 724, 720, 722, 725, 1332, 726, 0,
	0, 727, 728, 729, 795, 1355, 1392, 0, 731, 732,
	730, 733, 734, 737, 735, 736, 798, 738, 739, 740,
	0, 0, 0, 0, 741, 742, 799, 743, 744, 745,
	1265, 0, 0, 0, 0, 0, 0, 1308, 1280, 1281,
	1282, 1278, 1279, 1291, 0, 1260, 0, 0, 0, 0,
	0, 0, 2816, 2817, 325, 326, 328, 327, 329, 330,
	331, 332, 1292, 333, 334, 0, 1290, 0, 0, 0,
	1334, 1296, 0, 0, 335, 0, 336, 337, 338, 1374,
	339, 340, 341, 342, 343, 344, 345, 747, 1347, 0,
	346, 1354, 347, 1353, 0, 1364, 348, 349, 350, 351,
	352, 353, 354, 1298, 1333, 0, 355, 1394, 1395, 754,
	0, 356, 357, 1340, 0, 1321, 0, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 0, 367, 368, 369,
	366, 370, 371, 0, 372, 0, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 382, 1375, 383, 384,
	385, 1324, 1322, 1323, 1330, 1326, 1325, 1329, 386, 387,
	388, 389, 390, 1357, 391, 393, 1351, 1350, 0, 396,
	398, 392, 394, 0, 397, 395, 399, 400, 0, 401,
	402, 403, 0, 0, 404, 1342, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 413, 414, 1273, 415,
	416, 417, 419, 421, 418, 420, 422, 423, 424, 425,
	426, 1365, 1366, 427, 428, 1287, 320, 0, 0, 0,
	0, 0, 429, 430, 431, 1349, 0, 0, 0, 432,
	0, 433, 434, 435, 0, 436, 437, 0, 1376, 438,
	439, 440, 1362, 1363, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 1372, 0, 1297, 451, 0,
	452, 453, 454, 455, 456, 457, 458, 1335, 1336, 1339,
	554, 1378, 459, 460, 461, 0, 462, 463, 464, 465,
	466, 0, 0, 0, 467, 468, 469, 470, 0, 1277,
	321, 323, 1377, 769, 471, 555, 472, 1344, 1345, 0,
	1303, 0, 473, 474, 476, 1379, 1337, 1380, 475, 477,
	478, 1381, 479, 0, 0, 0, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 489, 488, 0, 491, 1373,
	490, 1382, 492, 493, 1383, 0, 494, 495, 496, 497,
	498, 499, 502, 1328, 1327, 500, 501, 503, 504, 0,
	505, 506, 508, 511, 507, 509, 510, 512, 525, 526,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 528, 0, 527, 1384, 529, 530, 531, 532,
	533, 541, 543, 544, 539, 540, 542, 545, 546, 548,
	536, 537, 538, 1385, 547, 534, 0, 535, 324, 1386,
	549, 550, 551, 552, 1288, 1338, 553, 1352, 556, 557,
	0, 0, 558, 0, 559, 0, 0, 561, 562, 563,
	0, 0, 564, 565, 777, 1387, 566, 1388, 1367, 567,
	568, 1274, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 779, 581, 582, 583, 780,
	584, 585, 586, 1368, 587, 782, 588, 589, 0, 590,
	591, 592, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 1348, 601, 602, 604, 603, 605, 0, 606, 0,
	607, 608, 609, 0, 0, 0, 0, 0, 610, 611,
	613, 0, 614, 615, 616, 617, 612, 618, 619, 620,
	621, 622, 623, 0, 625, 626, 624, 627, 628, 1389,
	629, 630, 631, 632, 633, 1275, 634, 0, 635, 636,
	644, 645, 646, 637, 638, 640, 647, 639, 648, 649,
	650, 651, 653, 652, 0, 655, 656, 654, 657, 658,
	659, 1331, 660, 785, 661, 641, 642, 662, 663, 1390,
	664, 665, 666, 667, 668, 669, 670, 1346, 0, 671,
	0, 672, 673, 674, 675, 676, 677, 679, 643, 680,
	685, 686, 1393, 681, 682, 683, 684, 1369, 688, 689,
	690, 691, 0, 692, 693, 0, 687, 678, 0, 694,
	695, 696, 697, 698, 699, 0, 700, 701, 0, 702,
	1358, 1359, 1360, 1361, 0, 714, 0, 703, 705, 706,
	707, 708, 1370, 709, 1371, 1286, 710, 711, 712, 713,
	704, 715, 716, 0, 0, 717, 718, 719, 721, 723,
	724, 720, 722, 725, 1332, 726, 0, 0, 727, 728,
	729, 795, 1355, 1392, 0, 731, 732, 730, 733, 734,
	737, 735, 736, 798, 738, 739, 740, 0, 0, 0,
	0, 741, 742, 799, 743, 744, 745, 0, 0, 0,
	0, 0, 0, 0, 1308, 1280, 1281, 1282, 1278, 1279,
	1291, 0, 3080, 0, 0, 0, 0, 0, 0, 3078,
	3079, 325, 326, 328, 327, 329, 330, 331, 332, 1292,
	333, 334, 0, 1290, 0, 0, 0, 1334, 1296, 0,
	0, 335, 0, 336, 337, 338, 1374, 339, 340, 341,
	342, 343, 344, 345, 747, 1347, 0, 346, 1354, 347,
	1353, 0, 1364, 348, 349, 350, 351, 352, 353, 354,
	1298, 1333, 0, 355, 1394, 1395, 754, 0, 356, 357,
	1340, 0, 1321, 0, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 0, 367, 368, 369, 366, 370, 371,
	0, 372, 0, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 382, 1375, 383, 384, 385, 1324, 1322,
	1323, 1330, 1326, 1325, 1329, 386, 387, 388, 389, 390,
	1357, 391, 393, 1351, 1350, 0, 396, 398, 392, 394,
	0, 397, 395, 399, 400, 0, 401, 402, 403, 0,
	0, 404, 1342, 406, 0, 407, 408, 409, 0, 410,
	411, 412, 0, 413, 414, 1273, 415, 416, 417, 419,
	421, 418, 420, 422, 423, 424, 425, 426, 1365, 1366,
	427, 428, 1287, 320, 0, 0, 0, 0, 0, 429,
	430, 431, 1349, 0, 0, 0, 432, 0, 433, 434,
	435, 0, 436, 437, 0, 1376, 438, 439, 440, 1362,
	1363, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	0, 450, 1372, 0, 1297, 451, 0, 452, 453, 454,
	455, 456, 457, 458, 1335, 1336, 1339, 554, 1378, 459,
	460, 461, 0, 462, 463, 464, 465, 466, 0, 0,
	0, 467, 468, 469, 470, 0, 1277, 321, 323, 1377,
	769, 471, 555, 472, 1344, 1345, 0, 1303, 0, 473,
	474, 476, 1379, 1337, 1380, 475, 477, 478, 1381, 479,
	0, 0, 0, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 489, 488, 0, 491, 1373, 490, 1382, 492,
	493, 1383, 0, 494, 495, 496, 497, 498, 499, 502,
	1328, 1327, 500, 501, 503, 504, 0, 505, 506, 508,
	511, 507, 509, 510, 512, 525, 526, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 528,
	0, 527, 1384, 529, 530, 531, 532, 533, 541, 543,
	544, 539, 540, 542, 545, 546, 548, 536, 537, 538,
	1385, 547, 534, 0, 535, 324, 1386, 549, 550, 551,
	552, 1288, 1338, 553, 1352, 556, 557, 0, 0, 558,
	0, 559, 0, 0, 561, 562, 563, 0, 0, 564,
	565, 777, 1387, 566, 1388, 1367, 567, 568, 560, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 779, 581, 582, 583, 780, 584, 585, 586,
	1368, 587, 782, 588, 589, 0, 590, 591, 592, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 1348, 601,
	602, 604, 603, 605, 0, 606, 0, 607, 608, 609,
	0, 0, 0, 0, 0, 610, 611, 613, 0, 614,
	615, 616, 617, 612, 618, 619, 620, 621, 622, 623,
	0, 625, 626, 624, 627, 628, 1389, 629, 630, 631,
	632, 633, 3668, 3669, 0, 635, 636, 644, 645, 646,
	637, 638, 640, 647, 639, 648, 649, 650, 651, 653,
	652, 0, 655, 656, 654, 657, 658, 659, 1331, 660,
	785, 661, 641, 642, 662, 663, 1390, 664, 665, 666,
	667, 668, 669, 670, 1346, 0, 671, 0, 672, 673,
	674, 675, 676, 677, 679, 643, 680, 685, 686, 1393,
	681, 682, 683, 684, 1369, 688, 689, 690, 691, 0,
	692, 693, 0, 687, 678, 0, 694, 695, 696, 697,
	698, 699, 0, 700, 701, 0, 702, 1358, 1359, 1360,
	1361, 0, 714, 0, 703, 705, 706, 707, 708, 1370,
	709, 1371, 1286, 710, 711, 712, 713, 704, 715, 716,
	0, 0, 717, 718, 719, 721, 723, 724, 720, 722,
	725, 1332, 726, 0, 0, 727, 728, 729, 795, 1355,
	1392, 0, 731, 732, 730, 733, 734, 737, 735, 736,
	798, 738, 739, 740, 0, 0, 0, 0, 741, 742,
	799, 743, 744, 745, 0, 0, 0, 0, 0, 0,
	0, 1308, 1280, 1281, 1282, 1278, 1279, 1291, 0, 0,
	0, 0, 0, 0, 0, 0, 2400, 2401, 325, 326,
	328, 327, 329, 330, 331, 332, 1292, 333, 334, 0,
	1290, 0, 0, 0, 1334, 1296, 0, 0, 335, 0,
	336, 337, 338, 1374, 339, 340, 341, 342, 343, 344,
	345, 0, 1347, 0, 346, 1354, 347, 1353, 0, 1364,
	348, 349, 350, 351, 352, 353, 354, 1298, 1333, 1262,
	355, 1394, 1395, 754, 0, 356, 357, 1340, 0, 1321,
	0, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	0, 367, 368, 369, 366, 370, 371, 0, 372, 0,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	382, 1375, 383, 384, 5506, 1324, 1322, 1323, 1330, 1326,
	1325, 1329, 386, 387, 388, 389, 390, 1357, 391, 393,
	1351, 1350, 1267, 396, 398, 392, 394, 0, 397, 395,
	399, 400, 0, 401, 402, 403, 0, 0, 404, 1342,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	413, 414, 1273, 415, 416, 417, 419, 421, 418, 420,
	422, 423, 424, 425, 426, 1365, 1366, 427, 428, 1287,
	320, 0, 0, 0, 0, 0, 429, 430, 431, 1349,
	0, 0, 0, 432, 0, 433, 434, 435, 0, 436,
	437, 0, 1376, 438, 439, 440, 1362, 1363, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 1372,
	0, 1297, 451, 0, 452, 453, 454, 455, 456, 457,
	458, 1335, 1336, 1339, 554, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 466, 0, 0, 0, 467, 468,
	469, 470, 0, 1277, 321, 323, 1377, 769, 471, 555,
	472, 1344, 1345, 0, 1303, 0, 473, 474, 476, 0,
	1337, 0, 475, 477, 478, 1381, 479, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 489,
	488, 0, 491, 1373, 490, 1382, 492, 493, 0, 0,
	494, 495, 496, 497, 498, 499, 502, 1328, 1327, 500,
	501, 503, 504, 0, 505, 506, 508, 511, 507, 509,
	510, 512, 525, 526, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 528, 0, 527, 1384,
	529, 530, 531, 532, 533, 541, 543, 544, 539, 540,
	542, 545, 546, 548, 536, 537, 538, 1385, 547, 534,
	1264, 535, 324, 0, 549, 550, 551, 552, 1288, 1338,
	553, 1352, 556, 557, 0, 0, 558, 0, 559, 0,
	0, 561, 562, 563, 0, 0, 564, 565, 777, 1387,
	566, 1388, 1367, 567, 568, 1274, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 779,
	581, 582, 583, 780, 584, 585, 586, 1368, 587, 782,
	588, 589, 0, 590, 591, 592, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 1348, 601, 602, 604, 603,
	605, 0, 606, 0, 607, 608, 609, 0, 0, 0,
	0, 0, 610, 611, 613, 0, 614, 615, 616, 617,
	612, 618, 619, 620, 621, 622, 623, 0, 625, 626,
	624, 627, 628, 1389, 629, 630, 631, 632, 633, 1275,
	634, 0, 635, 636, 644, 645, 646, 637, 638, 640,
	647, 639, 648, 649, 650, 651, 653, 652, 0, 655,
	656, 654, 657, 658, 659, 1331, 660, 785, 661, 641,
	642, 662, 663, 0, 664, 665, 666, 667, 668, 669,
	670, 1346, 0, 671, 0, 672, 673, 674, 675, 676,
	677, 679, 643, 680, 685, 686, 1393, 681, 682, 683,
	684, 1369, 688, 689, 690, 691, 0, 692, 693, 1261,
	687, 678, 0, 694, 695, 696, 697, 698, 699, 0,
	700, 701, 0, 702, 1358, 1359, 1360, 1361, 0, 714,
	0, 703, 705, 706, 707, 708, 1370, 709, 1371, 1286,
	710, 711, 712, 713, 704, 5505, 716, 0, 1268, 717,
	718, 719, 721, 723, 724, 720, 722, 725, 1332, 726,
	0, 0, 727, 728, 729, 795, 1355, 1392, 0, 731,
	732, 730, 733, 734, 737, 735, 736, 798, 738, 739,
	740, 0, 0, 0, 0, 741, 742, 799, 743, 744,
	745, 0, 0, 0, 0, 0, 3099, 0, 1308, 1280,
	1281, 1282, 1278, 1279, 1291, 0, 0, 0, 0, 0,
	0, 0, 0, 1258, 1259, 325, 326, 328, 327, 329,
	330, 331, 332, 1292, 333, 334, 0, 1290, 0, 0,
	0, 1334, 1296, 0, 0, 335, 0, 336, 337, 338,
	1374, 339, 340, 341, 342, 343, 344, 345, 747, 1347,
	0, 346, 1354, 347, 1353, 0, 1364, 348, 349, 350,
	351, 352, 353, 354, 0, 1333, 0, 355, 1394, 1395,
	754, 0, 356, 357, 1340, 0, 1321, 0, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 0, 367, 368,
	369, 366, 370, 371, 0, 372, 0, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 381, 382, 1375, 383,
	384, 385, 1324, 1322, 1323, 1330, 1326, 1325, 1329, 386,
	387, 388, 389, 390, 1357, 391, 393, 1351, 1350, 0,
	396, 398, 392, 394, 0, 397, 395, 399, 400, 0,
	401, 402, 403, 0, 0, 404, 1342, 406, 0, 407,
	408, 409, 0, 410, 411, 412, 0, 413, 414, 758,
	415, 416, 417, 419, 421, 418, 420, 422, 423, 424,
	425, 426, 1365, 1366, 427, 428, 1287, 320, 0, 0,
	0, 0, 0, 429, 430, 431, 1349, 0, 0, 0,
	432, 0, 433, 434, 435, 0, 436, 437, 0, 1376,
	438, 439, 440, 1362, 1363, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 1372, 0, 1297, 451,
	0, 452, 453, 454, 455, 456, 457, 458, 1335, 1336,
	1339, 554, 1378, 459, 460, 461, 0, 462, 463, 464,
	465, 466, 0, 0, 0, 467, 468, 469, 470, 0,
	1277, 321, 323, 1377, 769, 471, 555, 472, 1344, 1345,
	0, 1303, 0, 473, 474, 476, 1379, 1337, 1380, 475,
	477, 478, 1381, 479, 0, 0, 0, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 489, 488, 0, 491,
	1373, 490, 1382, 492, 493, 1383, 0, 494, 495, 496,
	497, 498, 499, 502, 1328, 1327, 500, 501, 503, 504,
	0, 505, 506, 508, 511, 507, 509, 510, 512, 525,
	526, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 528, 0, 527, 1384, 529, 530, 531,
	532, 533, 541, 543, 544, 539, 540, 542, 545, 546,
	548, 536, 537, 538, 1385, 547, 534, 0, 535, 324,
	1386, 549, 550, 551, 552, 1288, 1338, 553, 1352, 556,
	557, 0, 0, 558, 0, 559, 0, 0, 561, 562,
	563, 0, 0, 564, 565, 777, 1387, 566, 1388, 1367,
	567, 568, 560, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 779, 581, 582, 583,
	780, 584, 585, 586, 1368, 587, 782, 588, 589, 0,
	590, 591, 592, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 1348, 601, 602, 604, 603, 605, 0, 606,
	0, 607, 608, 609, 0, 0, 0, 0, 0, 610,
	611, 613, 0, 614, 615, 616, 617, 612, 618, 619,
	620, 621, 622, 623, 0, 625, 626, 624, 627, 628,
	1389, 629, 630, 631, 632, 633, 1275, 634, 0, 635,
	636, 644, 645, 646, 637, 638, 640, 647, 639, 648,
	649, 650, 651, 653, 652, 0, 655, 656, 654, 657,
	658, 659, 1331, 660, 785, 661, 641, 642, 662, 663,
	1390, 664, 665, 666, 667, 668, 669, 670, 1346, 0,
	671, 0, 672, 673, 674, 675, 676, 677, 679, 643,
	680, 685, 686, 1393, 681, 682, 683, 684, 1369, 688,
	689, 690, 691, 0, 692, 693, 0, 687, 678, 0,
	694, 695, 696, 697, 698, 699, 0, 700, 701, 0,
	702, 1358, 1359, 1360, 1361, 0, 714, 0, 703, 705,
	706, 707, 708, 1370, 709, 1371, 1286, 710, 711, 712,
	713, 704, 715, 716, 0, 0, 717, 718, 719, 721,
	723, 724, 720, 722, 725, 1332, 726, 0, 0, 727,
	728, 729, 795, 1355, 1392, 0, 731, 732, 730, 733,
	734, 737, 735, 736, 798, 738, 739, 740, 0, 0,
	0, 0, 741, 742, 799, 743, 744, 745, 0, 0,
	1731, 0, 1308, 1280, 1281, 1282, 1278, 1279, 1291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 328, 327, 329, 330, 331, 332, 0, 333, 334,
	1292, 0, 0, 0, 1290, 1334, 1296, 0, 0, 335,
	0, 336, 337, 338, 1374, 339, 340, 341, 342, 343,
	344, 345, 747, 1347, 0, 346, 1354, 347, 1353, 0,
	1364, 348, 349, 350, 351, 352, 353, 354, 0, 1333,
	0, 355, 1394, 1395, 754, 0, 356, 357, 1340, 0,
	1321, 0, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 0, 367, 368, 369, 366, 370, 371, 0, 372,
	0, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 382, 1375, 383, 384, 385, 1324, 1322, 1323, 1330,
	1326, 1325, 1329, 386, 387, 388, 389, 390, 1357, 391,
	393, 1351, 1350, 0, 396, 398, 392, 394, 0, 397,
	395, 399, 400, 0, 401, 402, 403, 0, 0, 404,
	1342, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 413, 414, 758, 415, 416, 417, 419, 421, 418,
	420, 422, 423, 424, 425, 426, 1365, 1366, 427, 428,
	1287, 320, 0, 0, 0, 0, 0, 429, 430, 431,
	1349, 0, 0, 0, 432, 0, 433, 434, 435, 0,
	436, 437, 0, 1376, 438, 439, 440, 1362, 1363, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	1372, 0, 1297, 451, 0, 452, 453, 454, 455, 456,
	457, 458, 1335, 1336, 1339, 554, 1378, 459, 460, 461,
	0, 462, 463, 464, 465, 466, 0, 0, 0, 467,
	468, 469, 470, 0, 1277, 321, 323, 1377, 769, 471,
	555, 472, 1344, 1345, 0, 1303, 0, 473, 474, 476,
	1379, 1337, 1380, 475, 477, 478, 1381, 479, 0, 0,
	0, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	489, 488, 0, 491, 1373, 490, 1382, 492, 493, 1383,
	0, 494, 495, 496, 497, 498, 499, 502, 1328, 1327,
	500, 501, 503, 504, 0, 505, 506, 508, 511, 507,
	509, 510, 512, 525, 526, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 528, 0, 527,
	1384, 529, 530, 531, 532, 533, 541, 543, 544, 539,
	540, 542, 545, 546, 548, 536, 537, 538, 1385, 547,
	534, 0, 535, 324, 1386, 549, 550, 551, 552, 1288,
	1338, 553, 1352, 556, 557, 0, 0, 558, 0, 559,
	0, 0, 561, 562, 563, 0, 0, 564, 565, 777,
	1387, 566, 1388, 1367, 567, 568, 560, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	779, 581, 582, 583, 780, 584, 585, 586, 1368, 587,
	782, 588, 589, 0, 590, 591, 592, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 1348, 601, 602, 604,
	603, 605, 0, 606, 0, 607, 608, 609, 0, 0,
	0, 0, 0, 610, 611, 613, 0, 614, 615, 616,
	617, 612, 618, 619, 620, 621, 622, 623, 0, 625,
	626, 624, 627, 628, 1389, 629, 630, 631, 632, 633,
	1275, 634, 0, 635, 636, 644, 645, 646, 637, 638,
	640, 647, 639, 648, 649, 650, 651, 653, 652, 0,
	655, 656, 654, 657, 658, 659, 1331, 660, 785, 661,
	641, 642, 662, 663, 1390, 664, 665, 666, 667, 668,
	669, 670, 1346, 0, 671, 0, 672, 673, 674, 675,
	676, 677, 679, 643, 680, 685, 686, 1393, 681, 682,
	683, 684, 1369, 688, 689, 690, 691, 0, 692, 693,
	0, 687, 678, 0, 694, 695, 696, 697, 698, 699,
	0, 700, 701, 0, 702, 1358, 1359, 1360, 1361, 0,
	714, 0, 703, 705, 706, 707, 708, 1370, 709, 1371,
	1286, 710, 711, 712, 713, 704, 715, 716, 0, 0,
	717, 718, 719, 721, 723, 724, 720, 722, 725, 1332,
	726, 0, 0, 727, 728, 729, 795, 1355, 1392, 0,
	731, 732, 730, 733, 734, 737, 735, 736, 798, 738,
	739, 740, 0, 0, 0, 0, 741, 742, 799, 743,
	744, 745, 1249, 0, 1433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 328, 327, 329, 330, 331, 332, 0,
	333, 334, 0, 0, 1292, 0, 0, 1334, 1290, 0,
	0, 335, 0, 336, 337, 338, 1374, 339, 340, 341,
	342, 343, 344, 345, 747, 748, 0, 346, 749, 347,
	750, 0, 751, 348, 349, 350, 351, 352, 353, 354,
	0, 1333, 0, 355, 752, 753, 754, 0, 356, 357,
	1340, 0, 1321, 0, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 0, 367, 368, 369, 366, 370, 371,
	0, 372, 0, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 382, 1375, 383, 384, 385, 1324, 1322,
	1323, 1330, 1326, 1325, 1329, 386, 387, 388, 389, 390,
	0, 391, 393, 756, 757, 0, 396, 398, 392, 394,
	0, 397, 395, 399, 400, 0, 401, 402, 403, 0,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 412, 0, 413, 414, 758, 415, 416, 417, 419,
	421, 418, 420, 422, 423, 424, 425, 426, 1365, 1366,
	427, 428, 0, 320, 0, 0, 0, 0, 0, 429,
	430, 431, 761, 0, 0, 0, 432, 0, 433, 434,
	435, 0, 436, 437, 0, 1376, 438, 439, 440, 762,
	763, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	0, 450, 1372, 0, 765, 451, 0, 452, 453, 454,
	455, 456, 457, 458, 1335, 1336, 1339, 554, 1378, 459,
	460, 461, 0, 462, 463, 464, 465, 466, 0, 0,
	0, 467, 468, 469, 470, 0, 1277, 321, 323, 1377,
	769, 471, 555, 472, 770, 771, 0, 772, 0, 473,
	474, 476, 1379, 1337, 1380, 475, 477, 478, 1381, 479,
	0, 0, 0, 480, 481, 482, 483, 484, 485, 486,
	1419, 487, 489, 488, 0, 491, 1373, 490, 1382, 492,
	493, 1383, 0, 494, 495, 496, 497, 498, 499, 502,
	1328, 1327, 500, 501, 503, 504, 0, 505, 506, 508,
	511, 507, 509, 510, 512, 525, 526, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 528,
	0, 527, 1384, 529, 530, 531, 532, 533, 541, 543,
	544, 539, 540, 542, 545, 546, 548, 536, 537, 538,
	1385, 547, 534, 0, 535, 324, 1386, 549, 550, 551,
	552, 0, 1338, 553, 776, 556, 557, 0, 0, 558,
	0, 559, 0, 1425, 561, 562, 563, 0, 0, 564,
	565, 777, 1387, 566, 1388, 1367, 567, 568, 560, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 779, 581, 582, 583, 780, 584, 585, 586,
	1368, 587, 782, 588, 589, 0, 590, 591, 592, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 783, 601,
	602, 604, 603, 605, 0, 606, 0, 607, 608, 609,
	0, 0, 0, 0, 0, 610, 611, 613, 0, 614,
	615, 616, 617, 612, 618, 619, 620, 621, 622, 623,
	0, 625, 626, 624, 627, 628, 1389, 629, 630, 631,
	632, 633, 784, 1427, 0, 635, 636, 644, 645, 646,
	637, 638, 640, 647, 639, 648, 649, 650, 651, 653,
	652, 276, 655, 656, 654, 657, 658, 659, 1331, 660,
	785, 661, 641, 642, 662, 663, 1390, 664, 665, 666,
	667, 668, 669, 670, 786, 0, 671, 0, 672, 673,
	674, 675, 676, 677, 679, 643, 680, 685, 686, 787,
	681, 682, 683, 684, 1369, 688, 689, 690, 691, 0,
	692, 693, 0, 687, 678, 278, 694, 695, 696, 697,
	698, 699, 0, 700, 701, 0, 702, 789, 790, 791,
	792, 0, 714, 0, 703, 705, 706, 707, 708, 1370,
	709, 1371, 0, 710, 711, 712, 713, 704, 715, 716,
	0, 0, 717, 718, 719, 721, 723, 724, 720, 722,
	725, 1332, 726, 0, 0, 727, 728, 729, 1854, 796,
	797, 0, 731, 732, 730, 733, 734, 737, 735, 736,
	798, 738, 739, 740, 0, 0, 0, 270, 741, 742,
	799, 743, 744, 745, 1433, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 328, 327, 329, 330, 331, 332, 0,
	333, 334, 0, 0, 1423, 0, 2228, 1334, 0, 0,
	0, 335, 0, 336, 337, 338, 1374, 339, 340, 341,
	342, 343, 344, 345, 747, 748, 0, 346, 749, 347,
	750, 0, 751, 348, 349, 350, 351, 352, 353, 354,
	0, 1333, 0, 355, 752, 753, 754, 0, 356, 357,
	1340, 0, 1321, 0, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 0, 367, 368, 369, 366, 370, 371,
	0, 372, 0, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 382, 1375, 383, 384, 385, 1324, 1322,
	1323, 1330, 1326, 1325, 1329, 386, 387, 388, 389, 390,
	0, 391, 393, 756, 757, 0, 396, 398, 392, 394,
	0, 397, 395, 399, 400, 0, 401, 402, 403, 0,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 412, 0, 413, 414, 758, 415, 416, 417, 419,
	421, 418, 420, 422, 423, 424, 425, 426, 1365, 1366,
	427, 428, 0, 320, 0, 0, 0, 0, 0, 429,
	430, 431, 761, 0, 0, 0, 432, 0, 433, 434,
	435, 0, 436, 437, 0, 1376, 438, 439, 440, 762,
	763, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	0, 450, 1372, 0, 765, 451, 0, 452, 453, 454,
	455, 456, 457, 458, 1335, 1336, 1339, 554, 1378, 459,
	460, 461, 0, 462, 463, 464, 465, 466, 0, 0,
	0, 467, 468, 469, 470, 0, 1277, 321, 323, 1377,
	769, 471, 555, 472, 770, 771, 0, 772, 0, 473,
	474, 476, 1379, 1337, 1380, 475, 477, 478, 1381, 479,
	0, 0, 0, 480, 481, 482, 483, 484, 485, 486,
	1419, 487, 489, 488, 0, 491, 1373, 490, 1382, 492,
	493, 1383, 0, 494, 495, 496, 497, 498, 499, 502,
	1328, 1327, 500, 501, 503, 504, 0, 505, 506, 508,
	511, 507, 509, 510, 512, 525, 526, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 528,
	0, 527, 1384, 529, 530, 531, 532, 533, 541, 543,
	544, 539, 540, 542, 545, 546, 548, 536, 537, 538,
	1385, 547, 534, 0, 535, 324, 1386, 549, 550, 551,
	552, 0, 1338, 553, 776, 556, 557, 0, 0, 558,
	0, 559, 0, 1425, 561, 562, 563, 0, 0, 564,
	565, 777, 1387, 566, 1388, 1367, 567, 568, 560, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 779, 581, 582, 583, 780, 584, 585, 586,
	1368, 587, 782, 588, 589, 0, 590, 591, 592, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 783, 601,
	602, 604, 603, 605, 0, 606, 0, 607, 608, 609,
	0, 0, 0, 0, 0, 610, 611, 613, 0, 614,
	615, 616, 617, 612, 618, 619, 620, 621, 622, 623,
	0, 625, 626, 624, 627, 628, 1389, 629, 630, 631,
	632, 633, 784, 1427, 0, 635, 636, 644, 645, 646,
	637, 638, 640, 647, 639, 648, 649, 650, 651, 653,
	652, 276, 655, 656, 654, 657, 658, 659, 1331, 660,
	785, 661, 641, 642, 662, 663, 1390, 664, 665, 666,
	667, 668, 669, 670, 786, 0, 671, 0, 672, 673,
	674, 675, 676, 677, 679, 643, 680, 685, 686, 787,
	681, 682, 683, 684, 1369, 688, 689, 690, 691, 0,
	692, 693, 0, 687, 678, 278, 694, 695, 696, 697,
	698, 699, 0, 700, 701, 0, 702, 789, 790, 791,
	792, 0, 714, 0, 703, 705, 706, 707, 708, 1370,
	709, 1371, 0, 710, 711, 712, 713, 704, 715, 716,
	0, 0, 717, 718, 719, 721, 723, 724, 720, 722,
	725, 1332, 726, 0, 0, 727, 728, 729, 1854, 796,
	797, 0, 731, 732, 730, 733, 734, 737, 735, 736,
	798, 738, 739, 740, 0, 0, 0, 270, 741, 742,
	799, 743, 744, 745, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3838, 0,
	1433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1423, 0, 2228, 325, 326, 328,
	327, 329, 330, 331, 332, 0, 333, 334, 0, 0,
	0, 0, 0, 1334, 0, 0, 0, 335, 0, 336,
	337, 338, 1374, 339, 340, 341, 342, 343, 344, 345,
	747, 748, 0, 346, 749, 347, 750, 0, 751, 348,
	349, 350, 351, 352, 353, 354, 0, 1333, 0, 355,
	752, 753, 754, 0, 356, 357, 1340, 0, 1321, 0,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 0,
	367, 368, 369, 366, 370, 371, 0, 372, 0, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 382,
	1375, 383, 384, 385, 1324, 1322, 1323, 1330, 1326, 1325,
	1329, 386, 387, 388, 389, 390, 0, 391, 393, 756,
	757, 0, 396, 398, 392, 394, 0, 397, 395, 399,
	400, 0, 401, 402, 403, 0, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 412, 0, 413,
	414, 758, 415, 416, 417, 419, 421, 418, 420, 422,
	423, 424, 425, 426, 1365, 1366, 427, 428, 0, 320,
	0, 0, 0, 0, 0, 429, 430, 431, 761, 0,
	0, 0, 432, 0, 433, 434, 435, 0, 436, 437,
	0, 1376, 438, 439, 440, 762, 763, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 0, 450, 1372, 0,
	765, 451, 0, 452, 453, 454, 455, 456, 457, 458,
	1335, 1336, 1339, 554, 1378, 459, 460, 461, 0, 462,
	463, 464, 465, 466, 0, 0, 0, 467, 468, 469,
	470, 0, 1277, 321, 323, 1377, 769, 471, 555, 472,
	770, 771, 0, 772, 0, 473, 474, 476, 1379, 1337,
	1380, 475, 477, 478, 1381, 479, 0, 0, 0, 480,
	481, 482, 483, 484, 485, 486, 1419, 487, 489, 488,
	0, 491, 1373, 490, 1382, 492, 493, 1383, 0, 494,
	495, 496, 497, 498, 499, 502, 1328, 1327, 500, 501,
	503, 504, 0, 505, 506, 508, 511, 507, 509, 510,
	512, 525, 526, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 528, 0, 527, 1384, 529,
	530, 531, 532, 533, 541, 543, 544, 539, 540, 542,
	545, 546, 548, 536, 537, 538, 1385, 547, 534, 0,
	535, 324, 1386, 549, 550, 551, 552, 0, 1338, 553,
	776, 556, 557, 0, 0, 558, 0, 559, 0, 1425,
	561, 562, 563, 0, 0, 564, 565, 777, 1387, 566,
	1388, 1367, 567, 568, 560, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 779, 581,
	582, 583, 780, 584, 585, 586, 1368, 587, 782, 588,
	589, 0, 590, 591, 592, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 783, 601, 602, 604, 603, 605,
	0, 606, 0, 607, 608, 609, 0, 0, 0, 0,
	0, 610, 611, 613, 0, 614, 615, 616, 617, 612,
	618, 619, 620, 621, 622, 623, 0, 625, 626, 624,
	627, 628, 1389, 629, 630, 631, 632, 633, 784, 1427,
	0, 635, 636, 644, 645, 646, 637, 638, 640, 647,
	639, 648, 649, 650, 651, 653, 652, 0, 655, 656,
	654, 657, 658, 659, 1331, 660, 785, 661, 641, 642,
	662, 663, 1390, 664, 665, 666, 667, 668, 669, 670,
	786, 0, 671, 0, 672, 673, 674, 675, 676, 677,
	679, 643, 680, 685, 686, 787, 681, 682, 683, 684,
	1369, 688, 689, 690, 691, 0, 692, 693, 0, 687,
	678, 0, 694, 695, 696, 697, 698, 699, 0, 700,
	701, 0, 702, 789, 790, 791, 792, 0, 714, 0,
	703, 705, 706, 707, 708, 1370, 709, 1371, 0, 710,
	711, 712, 713, 704, 715, 716, 0, 0, 717, 718,
	719, 721, 723, 724, 720, 722, 725, 1332, 726, 0,
	0, 727, 728, 729, 795, 796, 797, 0, 731, 732,
	730, 733, 734, 737, 735, 736, 798, 738, 739, 740,
	0, 0, 0, 0, 741, 742, 799, 743, 744, 745,
	1415, 0, 1433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 328, 327, 329, 330, 331, 332, 0, 333, 334,
	1423, 0, 1421, 0, 0, 1334, 0, 0, 0, 335,
	0, 336, 337, 338, 1374, 339, 340, 341, 342, 343,
	344, 345, 747, 748, 0, 346, 749, 347, 750, 0,
	751, 348, 349, 350, 351, 352, 353, 354, 0, 1333,
	0, 355, 752, 753, 754, 0, 356, 357, 1340, 0,
	1321, 0, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 0, 367, 368, 369, 366, 370, 371, 0, 372,
	0, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 382, 1375, 383, 384, 385, 1324, 1322, 1323, 1330,
	1326, 1325, 1329, 386, 387, 388, 389, 390, 0, 391,
	393, 756, 757, 0, 396, 398, 392, 394, 0, 397,
	395, 399, 400, 0, 401, 402, 403, 0, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 413, 414, 758, 415, 416, 417, 419, 421, 418,
	420, 422, 423, 424, 425, 426, 1365, 1366, 427, 428,
	0, 320, 0, 0, 0, 0, 0, 429, 430, 431,
	761, 0, 0, 0, 432, 0, 433, 434, 435, 0,
	436, 437, 0, 1376, 438, 439, 440, 762, 763, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	1372, 0, 765, 451, 0, 452, 453, 454, 455, 456,
	457, 458, 1335, 1336, 1339, 554, 1378, 459, 460, 461,
	0, 462, 463, 464, 465, 466, 0, 0, 0, 467,
	468, 469, 470, 0, 1277, 321, 323, 1377, 769, 471,
	555, 472, 770, 771, 0, 772, 0, 473, 474, 476,
	1379, 1337, 1380, 475, 477, 478, 1381, 479, 0, 0,
	0, 480, 481, 482, 483, 484, 485, 486, 1419, 487,
	489, 488, 0, 491, 1373, 490, 1382, 492, 493, 1383,
	0, 494, 495, 496, 497, 498, 499, 502, 1328, 1327,
	500, 501, 503, 504, 0, 505, 506, 508, 511, 507,
	509, 510, 512, 525, 526, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 528, 0, 527,
	1384, 529, 530, 531, 532, 533, 541, 543, 544, 539,
	540, 542, 545, 546, 548, 536, 537, 538, 1385, 547,
	534, 0, 535, 324, 1386, 549, 550, 551, 552, 0,
	1338, 553, 776, 556, 557, 0, 0, 558, 0, 559,
	0, 1425, 561, 562, 563, 0, 0, 564, 565, 777,
	1387, 566, 1388, 1367, 567, 568, 560, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	779, 581, 582, 583, 780, 584, 585, 586, 1368, 587,
	782, 588, 589, 0, 590, 591, 592, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 783, 601, 602, 604,
	603, 605, 0, 606, 0, 607, 608, 609, 0, 0,
	0, 0, 0, 610, 611, 613, 0, 614, 615, 616,
	617, 612, 618, 619, 620, 621, 622, 623, 0, 625,
	626, 624, 627, 628, 1389, 629, 630, 631, 632, 633,
	784, 1427, 0, 635, 636, 644, 645, 646, 637, 638,
	640, 647, 639, 648, 649, 650, 651, 653, 652, 0,
	655, 656, 654, 657, 658, 659, 1331, 660, 785, 661,
	641, 642, 662, 663, 1390, 664, 665, 666, 667, 668,
	669, 670, 786, 0, 671, 0, 672, 673, 674, 675,
	676, 677, 679, 643, 680, 685, 686, 787, 681, 682,
	683, 684, 1369, 688, 689, 690, 691, 0, 692, 693,
	0, 687, 678, 0, 694, 695, 696, 697, 698, 699,
	0, 700, 701, 0, 702, 789, 790, 791, 792, 0,
	714, 0, 703, 705, 706, 707, 708, 1370, 709, 1371,
	0, 710, 711, 712, 713, 704, 715, 716, 0, 0,
	717, 718, 719, 721, 723, 724, 720, 722, 725, 1332,
	726, 0, 0, 727, 728, 729, 795, 796, 797, 0,
	731, 732, 730, 733, 734, 737, 735, 736, 798, 738,
	739, 740, 0, 0, 0, 0, 741, 742, 799, 743,
	744, 745, 1433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 328, 327, 329, 330, 331, 332, 0, 333, 334,
	0, 0, 1423, 0, 1421, 1334, 0, 0, 0, 335,
	0, 336, 337, 338, 1374, 339, 340, 341, 342, 343,
	344, 345, 747, 748, 0, 346, 749, 347, 750, 0,
	751, 348, 349, 350, 351, 352, 353, 354, 0, 1333,
	0, 355, 752, 753, 754, 0, 356, 357, 1340, 0,
	1321, 0, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 0, 367, 368, 369, 366, 370, 371, 0, 372,
	0, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 382, 1375, 383, 384, 385, 1324, 1322, 1323, 1330,
	1326, 1325, 1329, 386, 387, 388, 389, 390, 0, 391,
	393, 756, 757, 0, 396, 398, 392, 394, 0, 397,
	395, 399, 400, 0, 401, 402, 403, 0, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 413, 414, 758, 415, 416, 417, 419, 421, 418,
	420, 422, 423, 424, 425, 426, 1365, 1366, 427, 428,
	0, 320, 0, 0, 0, 0, 0, 429, 430, 431,
	761, 0, 0, 0, 432, 0, 433, 434, 435, 0,
	436, 437, 0, 1376, 438, 439, 440, 762, 763, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	1372, 0, 765, 451, 0, 452, 453, 454, 455, 456,
	457, 458, 1335, 1336, 1339, 554, 1378, 459, 460, 461,
	0, 462, 463, 464, 465, 466, 0, 0, 0, 467,
	468, 469, 470, 0, 1277, 321, 323, 1377, 769, 471,
	555, 472, 770, 771, 0, 772, 0, 473, 474, 476,
	1379, 1337, 1380, 475, 477, 478, 1381, 479, 0, 0,
	0, 480, 481, 482, 483, 484, 485, 486, 1419, 487,
	489, 488, 0, 491, 1373, 490, 1382, 492, 493, 1383,
	0, 494, 495, 496, 497, 498, 499, 502, 1328, 1327,
	500, 501, 503, 504, 0, 505, 506, 508, 511, 507,
	509, 510, 512, 525, 526, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 528, 0, 527,
	1384, 529, 530, 531, 532, 533, 541, 543, 544, 539,
	540, 542, 545, 546, 548, 536, 537, 538, 1385, 547,
	534, 0, 535, 324, 1386, 549, 550, 551, 552, 0,
	1338, 553, 776, 556, 557, 0, 0, 558, 0, 559,
	0, 1425, 561, 562, 563, 0, 0, 564, 565, 777,
	1387, 566, 1388, 1367, 567, 568, 560, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	779, 581, 582, 583, 780, 584, 585, 586, 1368, 587,
	782, 588, 589, 0, 590, 591, 592, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 783, 601, 602, 604,
	603, 605, 0, 606, 0, 607, 608, 609, 0, 0,
	0, 0, 0, 610, 611, 613, 0, 614, 615, 616,
	617, 612, 618, 619, 620, 621, 622, 623, 0, 625,
	626, 624, 627, 628, 1389, 629, 630, 631, 632, 633,
	784, 1427, 0, 635, 636, 644, 645, 646, 637, 638,
	640, 647, 639, 648, 649, 650, 651, 653, 652, 0,
	655, 656, 654, 657, 658, 659, 1331, 660, 785, 661,
	641, 642, 662, 663, 1390, 664, 665, 666, 667, 668,
	669, 670, 786, 0, 671, 0, 672, 673, 674, 675,
	676, 677, 679, 643, 680, 685, 686, 787, 681, 682,
	683, 684, 1369, 688, 689, 690, 691, 0, 692, 693,
	0, 687, 678, 0, 694, 695, 696, 697, 698, 699,
	0, 700, 701, 0, 702, 789, 790, 791, 792, 0,
	714, 0, 703, 705, 706, 707, 708, 1370, 709, 1371,
	0, 710, 711, 712, 713, 704, 715, 716, 0, 0,
	717, 718, 719, 721, 723, 724, 720, 722, 725, 1332,
	726, 0, 0, 727, 728, 729, 795, 796, 797, 0,
	731, 732, 730, 733, 734, 737, 735, 736, 798, 738,
	739, 740, 0, 0, 0, 0, 741, 742, 799, 743,
	744, 745, 1433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 328, 327, 329, 330, 331, 332, 0, 333, 334,
	0, 0, 1423, 0, 1421, 1334, 0, 0, 0, 335,
	0, 336, 337, 338, 1374, 339, 340, 341, 342, 343,
	344, 345, 747, 748, 0, 346, 749, 347, 750, 0,
	751, 348, 349, 350, 351, 352, 353, 354, 0, 1333,
	0, 355, 752, 753, 754, 0, 356, 357, 1340, 0,
	1321, 0, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 0, 367, 368, 369, 366, 370, 371, 0, 372,
	0, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 382, 1375, 383, 384, 385, 1324, 1322, 1323, 1330,
	1326, 1325, 1329, 386, 387, 388, 389, 390, 0, 391,
	393, 756, 757, 0, 396, 398, 392, 394, 0, 397,
	395, 399, 400, 0, 401, 402, 403, 0, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 413, 414, 758, 415, 416, 417, 419, 421, 418,
	420, 422, 423, 424, 425, 426, 1365, 1366, 427, 428,
	0, 320, 0, 0, 0, 0, 0, 429, 430, 431,
	761, 0, 0, 0, 432, 0, 433, 434, 435, 0,
	436, 437, 0, 1376, 438, 439, 440, 762, 763, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	1372, 0, 765, 451, 0, 452, 453, 454, 455, 456,
	457, 458, 1335, 1336, 1339, 554, 1378, 459, 460, 461,
	0, 462, 463, 464, 465, 466, 0, 0, 0, 467,
	468, 469, 470, 0, 1277, 321, 323, 1377, 769, 471,
	555, 472, 770, 771, 0, 772, 0, 473, 474, 476,
	1379, 1337, 1380, 475, 477, 478, 1381, 479, 0, 0,
	0, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	489, 488, 0, 491, 1373, 490, 1382, 492, 493, 1383,
	0, 494, 495, 496, 497, 498, 499, 502, 1328, 1327,
	500, 501, 503, 504, 0, 505, 506, 508, 511, 507,
	509, 510, 512, 525, 526, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 528, 0, 527,
	1384, 529, 530, 531, 532, 533, 541, 543, 544, 539,
	540, 542, 545, 546, 548, 536, 537, 538, 1385, 547,
	534, 0, 535, 324, 1386, 549, 550, 551, 552, 0,
	1338, 553, 776, 556, 557, 0, 0, 558, 0, 559,
	0, 0, 561, 562, 563, 0, 0, 564, 565, 777,
	1387, 566, 1388, 1367, 567, 568, 560, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	779, 581, 582, 583, 780, 584, 585, 586, 1368, 587,
	782, 588, 589, 0, 590, 591, 592, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 783, 601, 602, 604,
	603, 605, 0, 606, 0, 607, 608, 609, 0, 0,
	0, 0, 0, 610, 611, 613, 0, 614, 615, 616,
	617, 612, 618, 619, 620, 621, 622, 623, 0, 625,
	626, 624, 627, 628, 1389, 629, 630, 631, 632, 633,
	784, 634, 0, 635, 636, 644, 645, 646, 637, 638,
	640, 647, 639, 648, 649, 650, 651, 653, 652, 0,
	655, 656, 654, 657, 658, 659, 1331, 660, 785, 661,
	641, 642, 662, 663, 1390, 664, 665, 666, 667, 668,
	669, 670, 786, 0, 671, 0, 672, 673, 674, 675,
	676, 677, 679, 643, 680, 685, 686, 787, 681, 682,
	683, 684, 1369, 688, 689, 690, 691, 0, 692, 693,
	0, 687, 678, 0, 694, 695, 696, 697, 698, 699,
	0, 700, 701, 0, 702, 789, 790, 791, 792, 0,
	714, 0, 703, 705, 706, 707, 708, 1370, 709, 1371,
	0, 710, 711, 712, 713, 704, 715, 716, 0, 0,
	717, 718, 719, 721, 723, 724, 720, 722, 725, 1332,
	726, 0, 0, 727, 728, 729, 795, 796, 797, 0,
	731, 732, 730, 733, 734, 737, 735, 736, 798, 738,
	739, 740, 0, 0, 0, 0, 741, 742, 799, 743,
	744, 745, 1433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 328, 327, 329, 330, 331, 332, 0, 333, 334,
	0, 0, 0, 0, 4871, 1334, 0, 0, 0, 335,
	0, 336, 337, 338, 1374, 339, 340, 341, 342, 343,
	344, 345, 747, 748, 0, 346, 749, 347, 750, 0,
	751, 348, 349, 350, 351, 352, 353, 354, 0, 1333,
	0, 355, 752, 753, 754, 0, 356, 357, 1340, 0,
	1321, 0, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 0, 367, 368, 369, 366, 370, 371, 0, 372,
	0, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 382, 1375, 383, 384, 385, 1324, 1322, 1323, 1330,
	1326, 1325, 1329, 386, 387, 388, 389, 390, 0, 391,
	393, 756, 757, 0, 396, 398, 392, 394, 0, 397,
	395, 399, 400, 0, 401, 402, 403, 0, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 413, 414, 758, 415, 416, 417, 419, 421, 418,
	420, 422, 423, 424, 425, 426, 1365, 1366, 427, 428,
	0, 320, 0, 0, 0, 0, 0, 429, 430, 431,
	761, 0, 0, 0, 432, 0, 433, 434, 435, 0,
	436, 437, 0, 1376, 438, 439, 440, 762, 763, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	1372, 0, 765, 451, 0, 452, 453, 454, 455, 456,
	457, 458, 1335, 1336, 1339, 554, 1378, 459, 460, 461,
	0, 462, 463, 464, 465, 466, 0, 0, 0, 467,
	468, 469, 470, 0, 1277, 321, 323, 1377, 769, 471,
	555, 472, 770, 771, 0, 772, 0, 473, 474, 476,
	1379, 1337, 1380, 475, 477, 478, 1381, 479, 0, 0,
	0, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	489, 488, 0, 491, 1373, 490, 1382, 492, 493, 1383,
	0, 494, 495, 496, 497, 498, 499, 502, 1328, 1327,
	500, 501, 503, 504, 0, 505, 506, 508, 511, 507,
	509, 510, 512, 525, 526, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 528, 0, 527,
	1384, 529, 530, 531, 532, 533, 541, 543, 544, 539,
	540, 542, 545, 546, 548, 536, 537, 538, 1385, 547,
	534, 0, 535, 324, 1386, 549, 550, 551, 552, 0,
	1338, 553, 776, 556, 557, 0, 0, 558, 0, 559,
	0, 0, 561, 562, 563, 0, 0, 564, 565, 777,
	1387, 566, 1388, 1367, 567, 568, 560, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	779, 581, 582, 583, 780, 584, 585, 586, 1368, 587,
	782, 588, 589, 0, 590, 591, 592, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 783, 601, 602, 604,
	603, 605, 0, 606, 0, 607, 608, 609, 0, 0,
	0, 0, 0, 610, 611, 613, 0, 614, 615, 616,
	617, 612, 618, 619, 620, 621, 622, 623, 0, 625,
	626, 624, 627, 628, 1389, 629, 630, 631, 632, 633,
	784, 1427, 0, 635, 636, 644, 645, 646, 637, 638,
	640, 647, 639, 648, 649, 650, 651, 653, 652, 0,
	655, 656, 654, 657, 658, 659, 1331, 660, 785, 661,
	641, 642, 662, 663, 1390, 664, 665, 666, 667, 668,
	669, 670, 786, 0, 671, 0, 672, 673, 674, 675,
	676, 677, 679, 643, 680, 685, 686, 787, 681, 682,
	683, 684, 1369, 688, 689, 690, 691, 0, 692, 693,
	0, 687, 678, 0, 694, 695, 696, 697, 698, 699,
	0, 700, 701, 0, 702, 789, 790, 791, 792, 0,
	714, 0, 703, 705, 706, 707, 708, 1370, 709, 1371,
	0, 710, 711, 712, 713, 704, 715, 716, 0, 0,
	717, 718, 719, 721, 723, 724, 720, 722, 725, 1332,
	726, 0, 0, 727, 728, 729, 795, 796, 797, 0,
	731, 732, 730, 733, 734, 737, 735, 736, 798, 738,
	739, 740, 317, 0, 0, 0, 741, 742, 799, 743,
	744, 745, 2922, 2923, 2924, 2941, 2942, 2943, 0, 325,
	326, 328, 327, 329, 330, 331, 332, 0, 333, 334,
	0, 0, 0, 2944, 0, 746, 0, 0, 0, 335,
	0, 336, 337, 338, 2120, 339, 340, 341, 342, 343,
	344, 345, 747, 748, 0, 346, 749, 347, 750, 0,
	751, 348, 349, 350, 351, 352, 353, 354, 0, 0,
	2105, 355, 752, 753, 754, 0, 356, 357, 755, 0,
	0, 0, 358, 359, 360, 361, 362, 363, 364, 365,
	2934, 0, 367, 368, 369, 366, 370, 371, 0, 372,
	2930, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 382, 0, 383, 384, 385, 0, 0, 0, 0,
	0, 0, 0, 386, 387, 388, 389, 390, 0, 391,
	393, 756, 757, 0, 396, 398, 392, 394, 0, 397,
	395, 399, 400, 0, 401, 402, 403, 0, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 413, 414, 758, 415, 416, 417, 419, 421, 418,
	420, 422, 423, 424, 425, 426, 759, 760, 427, 428,
	0, 0, 0, 2935, 2936, 2937, 2938, 429, 430, 431,
	761, 0, 0, 2929, 432, 0, 433, 434, 435, 0,
	436, 437, 0, 0, 438, 439, 440, 762, 763, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	764, 0, 765, 451, 0, 452, 453, 454, 455, 456,
	457, 458, 766, 767, 768, 554, 0, 459, 460, 461,
	0, 462, 463, 464, 465, 466, 0, 0, 0, 467,
	468, 469, 470, 0, 0, 0, 0, 0, 769, 471,
	555, 472, 770, 771, 0, 772, 0, 473, 474, 476,
	0, 773, 0, 475, 477, 478, 0, 479, 0, 2939,
	2940, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	489, 488, 0, 491, 774, 490, 0, 492, 493, 0,
	0, 494, 495, 496, 497, 498, 499, 502, 0, 0,
	500, 501, 503, 504, 2932, 505, 506, 508, 511, 507,
	509, 510, 512, 525, 526, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 528, 0, 527,
	0, 529, 530, 531, 532, 533, 541, 543, 544, 539,
	540, 542, 545, 546, 548, 536, 537, 538, 0, 547,
	534, 0, 535, 0, 0, 549, 550, 551, 552, 0,
	775, 553, 776, 556, 557, 0, 0, 558, 0, 559,
	0, 0, 561, 562, 563, 0, 0, 564, 565, 777,
	0, 566, 0, 778, 567, 568, 560, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	779, 581, 582, 583, 780, 584, 585, 586, 781, 587,
	782, 588, 589, 0, 590, 591, 592, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 783, 601, 602, 604,
	603, 605, 0, 606, 0, 607, 608, 609, 0, 0,
	0, 0, 0, 610, 611, 613, 0, 614, 615, 616,
	617, 612, 618, 619, 620, 621, 622, 623, 0, 625,
	626, 624, 627, 628, 0, 629, 630, 631, 632, 633,
	784, 634, 2933, 635, 636, 644, 645, 646, 637, 638,
	640, 647, 639, 648, 649, 650, 651, 653, 652, 0,
	655, 656, 654, 657, 658, 659, 0, 660, 785, 661,
	641, 642, 662, 663, 0, 664, 665, 666, 667, 668,
	669, 670, 786, 0, 671, 0, 672, 673, 674, 675,
	676, 677, 679, 643, 680, 685, 686, 787, 681, 682,
	683, 684, 788, 688, 689, 690, 691, 0, 692, 693,
	2104, 687, 678, 0, 694, 695, 696, 697, 698, 699,
	0, 700, 701, 0, 702, 789, 790, 791, 792, 0,
	714, 0, 703, 705, 706, 707, 708, 793, 709, 794,
	0, 710, 711, 712, 713, 704, 715, 716, 0, 0,
	717, 718, 719, 721, 723, 724, 720, 722, 725, 0,
	726, 0, 0, 727, 728, 729, 795, 796, 797, 0,
	731, 732, 730, 733, 734, 737, 735, 736, 798, 738,
	739, 740, 0, 0, 0, 0, 741, 742, 799, 743,
	744, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1249, 0, 1722, 2919, 2920, 2921, 2945, 2931, 2925,
	0, 2927, 2928, 2926, 2913, 2914, 2915, 2916, 2917, 2918,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 1374, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 1688, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 1375, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 320, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 1376, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 1378, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 1377, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 1379, 773, 1380, 475, 477, 478, 1381, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 1382, 492, 493,
	1383, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 1384, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 1385,
	547, 534, 0, 535, 0, 1386, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 1387, 566, 1388, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 1389, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	276, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 1390, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 278, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 1854, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 0, 0, 0, 270, 741, 742, 799,
	743, 744, 745, 0, 1851, 271, 1722, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 328, 327, 329, 330, 331,
	332, 0, 333, 334, 0, 217, 0, 0, 0, 746,
	0, 0, 0, 335, 0, 336, 337, 338, 1374, 339,
	340, 341, 342, 343, 344, 345, 747, 748, 0, 346,
	749, 347, 750, 0, 751, 348, 349, 350, 351, 352,
	353, 354, 0, 0, 0, 355, 752, 753, 754, 0,
	356, 357, 755, 0, 1688, 0, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 0, 367, 368, 369, 366,
	370, 371, 0, 372, 0, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 382, 1375, 383, 384, 385,
	0, 0, 0, 0, 0, 0, 0, 386, 387, 388,
	389, 390, 0, 391, 393, 756, 757, 0, 396, 398,
	392, 394, 0, 397, 395, 399, 400, 0, 401, 402,
	403, 0, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 413, 414, 758, 415, 416,
	417, 419, 421, 418, 420, 422, 423, 424, 425, 426,
	759, 760, 427, 428, 0, 320, 0, 0, 0, 0,
	0, 429, 430, 431, 761, 0, 0, 0, 432, 0,
	433, 434, 435, 0, 436, 437, 0, 1376, 438, 439,
	440, 762, 763, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 764, 0, 765, 451, 0, 452,
	453, 454, 455, 456, 457, 458, 766, 767, 768, 554,
	1378, 459, 460, 461, 0, 462, 463, 464, 465, 466,
	0, 0, 0, 467, 468, 469, 470, 0, 0, 0,
	0, 1377, 769, 471, 555, 472, 770, 771, 0, 772,
	0, 473, 474, 476, 1379, 773, 1380, 475, 477, 478,
	1381, 479, 0, 0, 0, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 489, 488, 0, 491, 774, 490,
	1382, 492, 493, 1383, 0, 494, 495, 496, 497, 498,
	499, 502, 0, 0, 500, 501, 503, 504, 0, 505,
	506, 508, 511, 507, 509, 510, 512, 525, 526, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 528, 0, 527, 1384, 529, 530, 531, 532, 533,
	541, 543, 544, 539, 540, 542, 545, 546, 548, 536,
	537, 538, 1385, 547, 534, 0, 535, 0, 1386, 549,
	550, 551, 552, 0, 775, 553, 776, 556, 557, 0,
	0, 558, 0, 559, 0, 0, 561, 562, 563, 0,
	0, 564, 565, 777, 1387, 566, 1388, 778, 567, 568,
	560, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 779, 581, 582, 583, 780, 584,
	585, 586, 781, 587, 782, 588, 589, 0, 590, 591,
	592, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	783, 601, 602, 604, 603, 605, 0, 606, 0, 607,
	608, 609, 0, 0, 0, 0, 0, 610, 611, 613,
	0, 614, 615, 616, 617, 612, 618, 619, 620, 621,
	622, 623, 0, 625, 626, 624, 627, 628, 1389, 629,
	630, 631, 632, 633, 784, 634, 0, 635, 636, 644,
	645, 646, 637, 638, 640, 647, 639, 648, 649, 650,
	651, 653, 652, 276, 655, 656, 654, 657, 658, 659,
	0, 660, 785, 661, 641, 642, 662, 663, 1390, 664,
	665, 666, 667, 668, 669, 670, 786, 0, 671, 0,
	672, 673, 674, 675, 676, 677, 679, 643, 680, 685,
	686, 787, 681, 682, 683, 684, 788, 688, 689, 690,
	691, 0, 692, 693, 0, 687, 678, 278, 694, 695,
	696, 697, 698, 699, 0, 700, 701, 0, 702, 789,
	790, 791, 792, 0, 714, 0, 703, 705, 706, 707,
	708, 793, 709, 794, 0, 710, 711, 712, 713, 704,
	715, 716, 0, 0, 717, 718, 719, 721, 723, 724,
	720, 722, 725, 0, 726, 0, 0, 727, 728, 729,
	1854, 796, 797, 0, 731, 732, 730, 733, 734, 737,
	735, 736, 798, 738, 739, 740, 0, 0, 0, 270,
	741, 742, 799, 743, 744, 745, 1722, 1721, 271, 0,
	0, 0, 1719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 328, 327, 329, 330, 331,
	332, 0, 333, 334, 0, 0, 0, 0, 217, 746,
	0, 0, 0, 335, 0, 336, 337, 338, 1374, 339,
	340, 341, 342, 343, 344, 345, 747, 748, 0, 346,
	749, 347, 750, 0, 751, 348, 349, 350, 351, 352,
	353, 354, 0, 0, 0, 355, 752, 753, 754, 0,
	356, 357, 755, 0, 1688, 0, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 0, 367, 368, 369, 366,
	370, 371, 0, 372, 0, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 382, 1375, 383, 384, 385,
	0, 0, 0, 0, 0, 0, 0, 386, 387, 388,
	389, 390, 0, 391, 393, 756, 757, 0, 396, 398,
	392, 394, 0, 397, 395, 399, 400, 0, 401, 402,
	403, 0, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 413, 414, 758, 415, 416,
	417, 419, 421, 418, 420, 422, 423, 424, 425, 426,
	759, 760, 427, 428, 0, 320, 0, 0, 0, 0,
	0, 429, 430, 431, 761, 0, 0, 0, 432, 0,
	433, 434, 435, 0, 436, 437, 0, 1376, 438, 439,
	440, 762, 763, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 764, 0, 765, 451, 0, 452,
	453, 454, 455, 456, 457, 458, 766, 767, 768, 554,
	1378, 459, 460, 461, 0, 462, 463, 464, 465, 466,
	0, 0, 0, 467, 468, 469, 470, 0, 0, 0,
	0, 1377, 769, 471, 555, 472, 770, 771, 0, 772,
	0, 473, 474, 476, 1379, 773, 1380, 475, 477, 478,
	1381, 479, 0, 0, 0, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 489, 488, 0, 491, 774, 490,
	1382, 492, 493, 1383, 0, 494, 495, 496, 497, 498,
	499, 502, 0, 0, 500, 501, 503, 504, 0, 505,
	506, 508, 511, 507, 509, 510, 512, 525, 526, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 528, 0, 527, 1384, 529, 530, 531, 532, 533,
	541, 543, 544, 539, 540, 542, 545, 546, 548, 536,
	537, 538, 1385, 547, 534, 0, 535, 0, 1386, 549,
	550, 551, 552, 0, 775, 553, 776, 556, 557, 0,
	0, 558, 0, 559, 0, 0, 561, 562, 563, 0,
	0, 564, 565, 777, 1387, 566, 1388, 778, 567, 568,
	560, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 779, 581, 582, 583, 780, 584,
	585, 586, 781, 587, 782, 588, 589, 0, 590, 591,
	592, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	783, 601, 602, 604, 603, 605, 0, 606, 0, 607,
	608, 609, 0, 0, 0, 0, 0, 610, 611, 613,
	0, 614, 615, 616, 617, 612, 618, 619, 620, 621,
	622, 623, 0, 625, 626, 624, 627, 628, 1389, 629,
	630, 631, 632, 633, 784, 634, 0, 635, 636, 644,
	645, 646, 637, 638, 640, 647, 639, 648, 649, 650,
	651, 653, 652, 0, 655, 656, 654, 657, 658, 659,
	0, 660, 785, 661, 641, 642, 662, 663, 1390, 664,
	665, 666, 667, 668, 669, 670, 786, 0, 671, 0,
	672, 673, 674, 675, 676, 677, 679, 643, 680, 685,
	686, 787, 681, 682, 683, 684, 788, 688, 689, 690,
	691, 0, 692, 693, 0, 687, 678, 0, 694, 695,
	696, 697, 698, 699, 0, 700, 701, 0, 702, 789,
	790, 791, 792, 0, 714, 0, 703, 705, 706, 707,
	708, 793, 709, 794, 0, 710, 711, 712, 713, 704,
	715, 716, 0, 0, 717, 718, 719, 721, 723, 724,
	720, 722, 725, 0, 726, 0, 0, 727, 728, 729,
	795, 796, 797, 0, 731, 732, 730, 733, 734, 737,
	735, 736, 798, 738, 739, 740, 0, 0, 0, 0,
	741, 742, 799, 743, 744, 745, 1722, 1721, 0, 0,
	0, 0, 1719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 328, 327, 329, 330, 331,
	332, 0, 333, 334, 0, 0, 0, 0, 1878, 746,
	0, 0, 0, 335, 0, 336, 337, 338, 1374, 339,
	340, 341, 342, 343, 344, 345, 747, 748, 0, 346,
	749, 347, 750, 0, 751, 348, 349, 350, 351, 352,
	353, 354, 0, 0, 0, 355, 752, 753, 754, 0,
	356, 357, 755, 0, 1688, 0, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 0, 367, 368, 369, 366,
	370, 371, 0, 372, 0, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 382, 1375, 383, 384, 385,
	0, 0, 0, 0, 0, 0, 0, 386, 387, 388,
	389, 390, 0, 391, 393, 756, 757, 0, 396, 398,
	392, 394, 0, 397, 395, 399, 400, 0, 401, 402,
	403, 0, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 413, 414, 758, 415, 416,
	417, 419, 421, 418, 420, 422, 423, 424, 425, 426,
	759, 760, 427, 428, 0, 320, 0, 0, 0, 0,
	0, 429, 430, 431, 761, 0, 0, 0, 432, 0,
	433, 434, 435, 0, 436, 437, 0, 1376, 438, 439,
	440, 762, 763, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 764, 0, 765, 451, 0, 452,
	453, 454, 455, 456, 457, 458, 766, 767, 768, 554,
	1378, 459, 460, 461, 0, 462, 463, 464, 465, 466,
	0, 0, 0, 467, 468, 469, 470, 0, 0, 0,
	0, 1377, 769, 471, 555, 472, 770, 771, 0, 772,
	0, 473, 474, 476, 1379, 773, 1380, 475, 477, 478,
	1381, 479, 0, 0, 0, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 489, 488, 0, 491, 774, 490,
	1382, 492, 493, 1383, 0, 494, 495, 496, 497, 498,
	499, 502, 0, 0, 500, 501, 503, 504, 0, 505,
	506, 508, 511, 507, 509, 510, 512, 525, 526, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 528, 0, 527, 1384, 529, 530, 531, 532, 533,
	541, 543, 544, 539, 540, 542, 545, 546, 548, 536,
	537, 538, 1385, 547, 534, 0, 535, 0, 1386, 549,
	550, 551, 552, 0, 775, 553, 776, 556, 557, 0,
	0, 558, 0, 559, 0, 0, 561, 562, 563, 0,
	0, 564, 565, 777, 1387, 566, 1388, 778, 567, 568,
	560, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 779, 581, 582, 583, 780, 584,
	585, 586, 781, 587, 782, 588, 589, 0, 590, 591,
	592, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	783, 601, 602, 604, 603, 605, 0, 606, 0, 607,
	608, 609, 0, 0, 0, 0, 0, 610, 611, 613,
	0, 614, 615, 616, 617, 612, 618, 619, 620, 621,
	622, 623, 0, 625, 626, 624, 627, 628, 1389, 629,
	630, 631, 632, 633, 784, 634, 0, 635, 636, 644,
	645, 646, 637, 638, 640, 647, 639, 648, 649, 650,
	651, 653, 652, 0, 655, 656, 654, 657, 658, 659,
	0, 660, 785, 661, 641, 642, 662, 663, 1390, 664,
	665, 666, 667, 668, 669, 670, 786, 0, 671, 0,
	672, 673, 674, 675, 676, 677, 679, 643, 680, 685,
	686, 787, 681, 682, 683, 684, 788, 688, 689, 690,
	691, 0, 692, 693, 0, 687, 678, 0, 694, 695,
	696, 697, 698, 699, 0, 700, 701, 0, 702, 789,
	790, 791, 792, 0, 714, 0, 703, 705, 706, 707,
	708, 793, 709, 794, 0, 710, 711, 712, 713, 704,
	715, 716, 0, 0, 717, 718, 719, 721, 723, 724,
	720, 722, 725, 0, 726, 0, 0, 727, 728, 729,
	795, 796, 797, 0, 731, 732, 730, 733, 734, 737,
	735, 736, 798, 738, 739, 740, 0, 0, 0, 0,
	741, 742, 799, 743, 744, 745, 1722, 1721, 0, 0,
	0, 0, 1719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 328, 327, 329, 330, 331,
	332, 0, 333, 334, 0, 0, 0, 0, 4216, 746,
	0, 0, 0, 335, 0, 336, 337, 338, 1374, 339,
	340, 341, 342, 343, 344, 345, 747, 748, 0, 346,
	749, 347, 750, 0, 751, 348, 349, 350, 351, 352,
	353, 354, 0, 0, 0, 355, 752, 753, 754, 0,
	356, 357, 755, 0, 1688, 0, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 0, 367, 368, 369, 366,
	370, 371, 0, 372, 0, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 382, 1375, 383, 384, 385,
	0, 0, 0, 0, 0, 0, 0, 386, 387, 388,
	389, 390, 0, 391, 393, 756, 757, 0, 396, 398,
	392, 394, 0, 397, 395, 399, 400, 0, 401, 402,
	403, 0, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 413, 414, 758, 415, 416,
	417, 419, 421, 418, 420, 422, 423, 424, 425, 426,
	759, 760, 427, 428, 0, 320, 0, 0, 0, 0,
	0, 429, 430, 431, 761, 0, 0, 0, 432, 0,
	433, 434, 435, 0, 436, 437, 0, 1376, 438, 439,
	440, 762, 763, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 764, 0, 765, 451, 0, 452,
	453, 454, 455, 456, 457, 458, 766, 767, 768, 554,
	1378, 459, 460, 461, 0, 462, 463, 464, 465, 466,
	0, 0, 0, 467, 468, 469, 470, 0, 0, 0,
	0, 1377, 769, 471, 555, 472, 770, 771, 0, 772,
	0, 473, 474, 476, 1379, 773, 1380, 475, 477, 478,
	1381, 479, 0, 0, 0, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 489, 488, 0, 491, 774, 490,
	1382, 492, 493, 1383, 0, 494, 495, 496, 497, 498,
	499, 502, 0, 0, 500, 501, 503, 504, 0, 505,
	506, 508, 511, 507, 509, 510, 512, 525, 526, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 528, 0, 527, 1384, 529, 530, 531, 532, 533,
	541, 543, 544, 539, 540, 542, 545, 546, 548, 536,
	537, 538, 1385, 547, 534, 0, 535, 0, 1386, 549,
	550, 551, 552, 0, 775, 553, 776, 556, 557, 0,
	0, 558, 0, 559, 0, 0, 561, 562, 563, 0,
	0, 564, 565, 777, 1387, 566, 1388, 778, 567, 568,
	560, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 779, 581, 582, 583, 780, 584,
	585, 586, 781, 587, 782, 588, 589, 0, 590, 591,
	592, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	783, 601, 602, 604, 603, 605, 0, 606, 0, 607,
	608, 609, 0, 0, 0, 0, 0, 610, 611, 613,
	0, 614, 615, 616, 2671, 612, 618, 619, 620, 621,
	622, 623, 0, 625, 626, 624, 627, 628, 1389, 629,
	630, 631, 632, 633, 784, 634, 0, 635, 636, 644,
	645, 646, 637, 638, 640, 647, 639, 648, 649, 650,
	651, 653, 652, 0, 655, 656, 654, 657, 658, 659,
	0, 660, 785, 661, 641, 642, 662, 663, 1390, 664,
	665, 666, 667, 668, 669, 670, 786, 0, 671, 0,
	672, 673, 674, 675, 676, 677, 679, 643, 680, 685,
	686, 787, 681, 682, 683, 684, 788, 688, 689, 690,
	691, 0, 692, 693, 0, 687, 678, 0, 694, 695,
	696, 697, 698, 699, 0, 700, 701, 0, 702, 789,
	790, 791, 792, 0, 714, 0, 703, 705, 706, 707,
	708, 793, 709, 794, 0, 710, 711, 712, 713, 704,
	715, 716, 0, 0, 717, 718, 719, 721, 723, 724,
	720, 722, 725, 0, 726, 0, 0, 727, 728, 729,
	795, 796, 797, 0, 731, 732, 730, 733, 734, 737,
	735, 736, 798, 738, 739, 740, 0, 0, 0, 0,
	741, 742, 799, 743, 744, 745, 1722, 2575, 0, 0,
	0, 0, 2576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 328, 327, 329, 330, 331,
	332, 0, 333, 334, 0, 0, 0, 0, 1878, 746,
	0, 0, 0, 335, 0, 336, 337, 338, 1374, 339,
	340, 341, 342, 343, 344, 345, 747, 748, 0, 346,
	749, 347, 750, 0, 751, 348, 349, 350, 351, 352,
	353, 354, 0, 0, 0, 355, 752, 753, 754, 0,
	356, 357, 755, 0, 1688, 0, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 0, 367, 368, 369, 366,
	370, 371, 0, 372, 0, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 382, 1375, 383, 384, 385,
	0, 0, 0, 0, 0, 0, 0, 386, 387, 388,
	389, 390, 0, 391, 393, 756, 757, 0, 396, 398,
	392, 394, 0, 397, 395, 399, 400, 0, 401, 402,
	403, 0, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 413, 414, 758, 415, 416,
	417, 419, 421, 418, 420, 422, 423, 424, 425, 426,
	759, 760, 427, 428, 0, 320, 0, 0, 0, 0,
	0, 429, 430, 431, 761, 0, 0, 0, 432, 0,
	433, 434, 435, 0, 436, 437, 0, 1376, 438, 439,
	440, 762, 763, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 764, 0, 765, 451, 0, 452,
	453, 454, 455, 456, 457, 458, 766, 767, 768, 554,
	1378, 459, 460, 461, 0, 462, 463, 464, 465, 466,
	0, 0, 0, 467, 468, 469, 470, 0, 0, 0,
	0, 1377, 769, 471, 555, 472, 770, 771, 0, 772,
	0, 473, 474, 476, 1379, 773, 1380, 475, 477, 478,
	1381, 479, 0, 0, 0, 480, 481, 482, 483, 484,
	485, 486, 0, 2574, 489, 488, 0, 491, 774, 490,
	1382, 492, 493, 1383, 0, 494, 495, 496, 497, 498,
	499, 502, 0, 0, 500, 501, 503, 504, 0, 505,
	506, 508, 511, 507, 509, 510, 512, 525, 526, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 528, 0, 527, 1384, 529, 530, 531, 532, 533,
	541, 543, 544, 539, 540, 542, 545, 546, 548, 536,
	537, 538, 1385, 547, 534, 0, 535, 0, 1386, 549,
	550, 551, 552, 0, 775, 553, 776, 556, 557, 0,
	0, 558, 0, 559, 0, 0, 561, 562, 563, 0,
	0, 564, 565, 777, 1387, 566, 1388, 778, 567, 568,
	560, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 779, 581, 582, 583, 780, 584,
	585, 586, 781, 587, 782, 588, 589, 0, 590, 591,
	592, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	783, 601, 602, 604, 603, 605, 0, 606, 0, 607,
	608, 609, 0, 0, 0, 0, 0, 610, 611, 613,
	0, 614, 615, 616, 617, 612, 618, 619, 620, 621,
	622, 623, 0, 625, 626, 624, 627, 628, 1389, 629,
	630, 631, 632, 633, 784, 634, 0, 635, 636, 644,
	645, 646, 637, 638, 640, 647, 639, 648, 649, 650,
	651, 653, 652, 0, 655, 656, 654, 657, 658, 659,
	0, 660, 785, 661, 641, 642, 662, 663, 1390, 664,
	665, 666, 667, 668, 669, 670, 786, 0, 671, 0,
	672, 673, 674, 675, 676, 677, 679, 643, 680, 685,
	686, 787, 681, 682, 683, 684, 788, 688, 689, 690,
	691, 0, 692, 693, 0, 687, 678, 0, 694, 695,
	696, 697, 698, 699, 0, 700, 701, 0, 702, 789,
	790, 791, 792, 0, 714, 0, 703, 705, 706, 707,
	708, 793, 709, 794, 0, 710, 711, 712, 713, 704,
	715, 716, 0, 0, 717, 718, 719, 721, 723, 724,
	720, 722, 725, 0, 726, 0, 0, 727, 728, 729,
	795, 796, 797, 0, 731, 732, 730, 733, 734, 737,
	735, 736, 798, 738, 739, 740, 0, 0, 0, 0,
	741, 742, 799, 743, 744, 745, 1722, 1721, 0, 0,
	0, 0, 1719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 328, 327, 329, 330, 331,
	332, 0, 333, 334, 0, 0, 0, 0, 1878, 746,
	0, 0, 0, 335, 0, 336, 337, 338, 1374, 339,
	340, 341, 342, 343, 344, 345, 747, 748, 0, 346,
	749, 347, 750, 0, 751, 348, 349, 350, 351, 352,
	353, 354, 0, 0, 0, 355, 752, 753, 754, 0,
	356, 357, 755, 0, 1688, 0, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 0, 367, 368, 369, 366,
	370, 371, 0, 372, 0, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 382, 1375, 383, 384, 385,
	0, 0, 0, 0, 0, 0, 0, 386, 387, 388,
	389, 390, 0, 391, 393, 756, 757, 0, 396, 398,
	392, 394, 0, 397, 395, 399, 400, 0, 401, 402,
	403, 0, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 413, 414, 758, 415, 416,
	417, 419, 421, 418, 420, 422, 423, 424, 425, 426,
	759, 760, 427, 428, 0, 320, 0, 0, 0, 0,
	0, 429, 430, 431, 761, 0, 0, 0, 432, 0,
	433, 434, 435, 0, 436, 437, 0, 1376, 438, 439,
	440, 762, 763, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 764, 0, 765, 451, 0, 452,
	453, 454, 455, 456, 457, 458, 766, 767, 768, 554,
	1378, 459, 460, 461, 0, 462, 463, 464, 465, 466,
	0, 0, 0, 467, 468, 469, 470, 0, 0, 0,
	0, 1377, 769, 471, 555, 472, 770, 771, 0, 772,
	0, 473, 474, 476, 1379, 773, 1380, 475, 477, 478,
	1381, 479, 0, 0, 0, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 489, 488, 0, 491, 774, 490,
	1382, 492, 493, 1383, 0, 494, 495, 496, 497, 498,
	499, 502, 0, 0, 500, 501, 503, 504, 0, 505,
	506, 508, 511, 507, 509, 510, 512, 525, 526, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 528, 0, 527, 1384, 529, 530, 531, 532, 533,
	541, 543, 544, 539, 540, 542, 545, 546, 548, 536,
	537, 538, 1385, 547, 534, 0, 535, 0, 1386, 549,
	550, 551, 552, 0, 775, 553, 776, 556, 557, 0,
	0, 558, 0, 559, 0, 0, 561, 562, 563, 0,
	0, 564, 565, 777, 1387, 566, 1388, 778, 567, 568,
	560, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 779, 581, 582, 583, 780, 584,
	585, 586, 781, 587, 782, 588, 589, 0, 590, 591,
	592, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	783, 601, 602, 604, 603, 605, 0, 606, 0, 607,
	608, 609, 0, 0, 0, 0, 0, 610, 611, 613,
	0, 614, 615, 616, 617, 612, 618, 619, 620, 621,
	622, 623, 0, 625, 626, 624, 627, 628, 1389, 629,
	630, 631, 632, 633, 784, 634, 0, 635, 636, 644,
	645, 646, 637, 638, 640, 647, 639, 648, 649, 650,
	651, 653, 652, 0, 655, 656, 654, 657, 658, 659,
	0, 660, 785, 661, 641, 642, 662, 663, 1390, 664,
	665, 666, 667, 668, 669, 670, 786, 0, 671, 0,
	672, 673, 674, 675, 676, 677, 679, 643, 680, 685,
	686, 787, 681, 682, 683, 684, 788, 688, 689, 690,
	691, 0, 692, 693, 0, 687, 678, 0, 694, 695,
	696, 697, 698, 699, 0, 700, 701, 0, 702, 789,
	790, 791, 792, 0, 714, 0, 703, 705, 706, 707,
	708, 793, 709, 794, 0, 710, 711, 712, 713, 704,
	715, 716, 0, 0, 717, 718, 719, 721, 723, 724,
	720, 722, 725, 0, 726, 0, 0, 727, 728, 729,
	795, 796, 797, 0, 731, 732, 730, 733, 734, 737,
	735, 736, 798, 738, 739, 740, 0, 0, 0, 0,
	741, 742, 799, 743, 744, 745, 1249, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 328, 327, 329,
	330, 331, 332, 0, 333, 334, 0, 0, 1860, 0,
	0, 746, 0, 0, 0, 335, 0, 336, 337, 338,
	0, 339, 340, 341, 342, 343, 344, 345, 747, 748,
	0, 346, 749, 347, 750, 0, 751, 348, 349, 350,
	351, 352, 353, 354, 0, 0, 0, 355, 752, 753,
	754, 0, 356, 357, 755, 0, 0, 0, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 0, 367, 368,
	369, 366, 370, 371, 0, 372, 0, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 381, 382, 0, 383,
	384, 385, 0, 0, 0, 0, 0, 0, 0, 386,
	387, 388, 389, 390, 0, 391, 393, 756, 757, 0,
	396, 398, 392, 394, 0, 397, 395, 399, 400, 0,
	401, 402, 403, 0, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 412, 0, 413, 414, 758,
	415, 416, 417, 419, 421, 418, 420, 422, 423, 424,
	425, 426, 759, 760, 427, 428, 0, 0, 0, 0,
	0, 0, 0, 429, 430, 431, 761, 0, 0, 0,
	432, 0, 433, 434, 435, 0, 436, 437, 0, 0,
	438, 439, 440, 762, 763, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 764, 0, 765, 451,
	0, 452, 453, 454, 455, 456, 457, 458, 766, 767,
	768, 554, 0, 459, 460, 461, 0, 462, 463, 464,
	465, 466, 0, 0, 0, 467, 468, 469, 470, 0,
	0, 0, 0, 0, 769, 471, 555, 472, 770, 771,
	0, 772, 0, 473, 474, 476, 0, 773, 0, 475,
	477, 478, 0, 479, 0, 0, 0, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 489, 488, 0, 491,
	774, 490, 0, 492, 493, 0, 0, 494, 495, 496,
	497, 498, 499, 502, 0, 0, 500, 501, 503, 504,
	0, 505, 506, 508, 511, 507, 509, 510, 512, 525,
	526, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 528, 0, 527, 0, 529, 530, 531,
	532, 533, 541, 543, 544, 539, 540, 542, 545, 546,
	548, 536, 537, 538, 0, 547, 534, 0, 535, 0,
	0, 549, 550, 551, 552, 0, 775, 553, 776, 556,
	557, 0, 0, 558, 0, 559, 0, 0, 561, 562,
	563, 0, 0, 564, 565, 777, 0, 566, 0, 778,
	567, 568, 560, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 779, 581, 582, 583,
	780, 584, 585, 586, 781, 587, 782, 588, 589, 0,
	590, 591, 592, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 783, 601, 602, 604, 603, 605, 0, 606,
	0, 607, 608, 609, 0, 0, 0, 0, 0, 610,
	611, 613, 0, 614, 615, 616, 617, 612, 618, 619,
	620, 621, 622, 623, 0, 625, 626, 624, 627, 628,
	0, 629, 630, 631, 632, 633, 784, 634, 0, 635,
	636, 644, 645, 646, 637, 638, 640, 647, 639, 648,
	649, 650, 651, 653, 652, 276, 655, 656, 654, 657,
	658, 659, 0, 660, 785, 661, 641, 642, 662, 663,
	0, 664, 665, 666, 667, 668, 669, 670, 786, 0,
	671, 0, 672, 673, 674, 675, 676, 677, 679, 643,
	680, 685, 686, 787, 681, 682, 683, 684, 788, 688,
	689, 690, 691, 0, 692, 693, 0, 687, 678, 278,
	694, 695, 696, 697, 698, 699, 0, 700, 701, 0,
	702, 789, 790, 791, 792, 0, 714, 0, 703, 705,
	706, 707, 708, 793, 709, 794, 0, 710, 711, 712,
	713, 704, 715, 716, 0, 0, 717, 718, 719, 721,
	723, 724, 720, 722, 725, 0, 726, 0, 0, 727,
	728, 729, 1854, 796, 797, 0, 731, 732, 730, 733,
	734, 737, 735, 736, 798, 738, 739, 740, 317, 0,
	0, 270, 741, 742, 799, 743, 744, 745, 0, 0,
	271, 0, 0, 0, 0, 325, 326, 328, 327, 329,
	330, 331, 332, 0, 333, 334, 0, 0, 0, 0,
	0, 746, 0, 0, 0, 335, 0, 336, 337, 338,
	217, 339, 340, 341, 342, 343, 344, 345, 747, 748,
	0, 346, 749, 347, 750, 0, 751, 348, 349, 350,
	351, 352, 353, 354, 0, 0, 0, 355, 752, 753,
	754, 0, 356, 357, 755, 0, 0, 0, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 0, 367, 368,
	369, 366, 370, 371, 0, 372, 0, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 381, 382, 0, 383,
	384, 385, 0, 0, 0, 0, 0, 0, 0, 386,
	387, 388, 389, 390, 0, 391, 393, 756, 757, 0,
	396, 398, 392, 394, 0, 397, 395, 399, 400, 0,
	401, 402, 403, 0, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 412, 0, 413, 414, 758,
	415, 416, 417, 419, 421, 418, 420, 422, 423, 424,
	425, 426, 759, 760, 427, 428, 0, 320, 0, 0,
	0, 0, 0, 429, 430, 431, 761, 0, 0, 0,
	432, 0, 433, 434, 435, 0, 436, 437, 0, 0,
	438, 439, 440, 762, 763, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 764, 0, 765, 451,
	0, 452, 453, 454, 455, 456, 457, 458, 766, 767,
	768, 554, 0, 459, 460, 461, 0, 462, 463, 464,
	465, 466, 0, 0, 0, 467, 468, 469, 470, 0,
	322, 321, 323, 0, 769, 471, 555, 472, 770, 771,
	0, 772, 0, 473, 474, 476, 0, 773, 0, 475,
	477, 478, 0, 479, 0, 0, 0, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 489, 488, 0, 491,
	774, 490, 0, 492, 493, 0, 0, 494, 495, 496,
	497, 498, 499, 502, 0, 0, 500, 501, 503, 504,
	0, 505, 506, 508, 511, 507, 509, 510, 512, 525,
	526, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 528, 0, 527, 0, 529, 530, 531,
	532, 533, 541, 543, 544, 539, 540, 542, 545, 546,
	548, 536, 537, 538, 0, 547, 534, 0, 535, 324,
	0, 549, 550, 551, 552, 0, 775, 553, 776, 556,
	557, 0, 0, 558, 0, 559, 0, 0, 561, 562,
	563, 0, 0, 564, 565, 777, 0, 566, 0, 778,
	567, 568, 560, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 779, 581, 582, 583,
	780, 584, 585, 586, 781, 587, 782, 588, 589, 0,
	590, 591, 592, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 783, 601, 602, 604, 603, 605, 0, 606,
	0, 607, 608, 609, 0, 0, 0, 0, 0, 610,
	611, 613, 0, 614, 615, 616, 617, 612, 618, 619,
	620, 621, 622, 623, 0, 625, 626, 624, 627, 628,
	0, 629, 630, 631, 632, 633, 784, 634, 0, 635,
	636, 644, 645, 646, 637, 638, 640, 647, 639, 648,
	649, 650, 651, 653, 652, 0, 655, 656, 654, 657,
	658, 659, 0, 660, 785, 661, 641, 642, 662, 663,
	0, 664, 665, 666, 667, 668, 669, 670, 786, 0,
	671, 0, 672, 673, 674, 675, 676, 677, 679, 643,
	680, 685, 686, 787, 681, 682, 683, 684, 788, 688,
	689, 690, 691, 0, 692, 693, 0, 687, 678, 0,
	694, 695, 696, 697, 698, 699, 0, 700, 701, 0,
	702, 789, 790, 791, 792, 0, 714, 0, 703, 705,
	706, 707, 708, 793, 709, 794, 0, 710, 711, 712,
	713, 704, 715, 716, 0, 0, 717, 718, 719, 721,
	723, 724, 720, 722, 725, 0, 726, 0, 0, 727,
	728, 729, 795, 796, 797, 0, 731, 732, 730, 733,
	734, 737, 735, 736, 798, 738, 739, 740, 317, 0,
	0, 0, 741, 742, 799, 743, 744, 745, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 328, 327, 329,
	330, 331, 332, 0, 333, 334, 0, 0, 0, 0,
	0, 746, 0, 0, 0, 335, 0, 336, 337, 338,
	2242, 339, 340, 341, 342, 343, 344, 345, 747, 748,
	0, 346, 749, 347, 750, 0, 751, 348, 349, 350,
	351, 352, 353, 354, 0, 0, 0, 355, 752, 753,
	754, 0, 356, 357, 755, 0, 0, 0, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 0, 367, 368,
	369, 366, 370, 371, 0, 372, 0, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 381, 382, 0, 383,
	384, 385, 0, 0, 0, 0, 0, 0, 0, 386,
	387, 388, 389, 390, 0, 391, 393, 756, 757, 0,
	396, 398, 392, 394, 0, 397, 395, 399, 400, 0,
	401, 402, 403, 0, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 412, 0, 413, 414, 758,
	415, 416, 417, 419, 421, 418, 420, 422, 423, 424,
	425, 426, 759, 760, 427, 428, 0, 320, 0, 0,
	0, 0, 0, 429, 430, 431, 761, 0, 0, 0,
	432, 0, 433, 434, 435, 0, 436, 437, 0, 0,
	438, 439, 440, 762, 763, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 764, 0, 765, 451,
	0, 452, 453, 454, 455, 456, 457, 458, 766, 767,
	768, 554, 0, 459, 460, 461, 0, 462, 463, 464,
	465, 466, 0, 0, 0, 467, 468, 469, 470, 0,
	322, 321, 323, 0, 769, 471, 555, 472, 770, 771,
	0, 772, 0, 473, 474, 476, 0, 773, 0, 475,
	477, 478, 0, 479, 0, 0, 0, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 489, 488, 0, 491,
	774, 490, 0, 492, 493, 0, 0, 494, 495, 496,
	497, 498, 499, 502, 0, 0, 500, 501, 503, 504,
	0, 505, 506, 508, 511, 507, 509, 510, 512, 525,
	526, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 528, 0, 527, 0, 529, 530, 531,
	532, 533, 541, 543, 544, 539, 540, 542, 545, 546,
	548, 536, 537, 538, 0, 547, 534, 0, 535, 324,
	0, 549, 550, 551, 552, 0, 775, 553, 776, 556,
	557, 0, 0, 558, 0, 559, 0, 0, 561, 562,
	563, 0, 0, 564, 565, 777, 0, 566, 0, 778,
	567, 568, 560, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 779, 581, 582, 583,
	780, 584, 585, 586, 781, 587, 782, 588, 589, 0,
	590, 591, 592, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 783, 601, 602, 604, 603, 605, 0, 606,
	0, 607, 608, 609, 0, 0, 0, 0, 0, 610,
	611, 613, 0, 614, 615, 616, 617, 612, 618, 619,
	620, 621, 622, 623, 0, 625, 626, 624, 627, 628,
	0, 629, 630, 631, 632, 633, 784, 634, 0, 635,
	636, 644, 645, 646, 637, 638, 640, 647, 639, 648,
	649, 650, 651, 653, 652, 0, 655, 656, 654, 657,
	658, 659, 0, 660, 785, 661, 641, 642, 662, 663,
	0, 664, 665, 666, 667, 668, 669, 670, 786, 0,
	671, 0, 672, 673, 674, 675, 676, 677, 679, 643,
	680, 685, 686, 787, 681, 682, 683, 684, 788, 688,
	689, 690, 691, 0, 692, 693, 0, 687, 678, 0,
	694, 695, 696, 697, 698, 699, 0, 700, 701, 0,
	702, 789, 790, 791, 792, 0, 714, 0, 703, 705,
	706, 707, 708, 793, 709, 794, 0, 710, 711, 712,
	713, 704, 715, 716, 0, 0, 717, 718, 719, 721,
	723, 724, 720, 722, 725, 0, 726, 0, 0, 727,
	728, 729, 795, 796, 797, 0, 731, 732, 730, 733,
	734, 737, 735, 736, 798, 738, 739, 740, 0, 0,
	317, 0, 741, 742, 799, 743, 744, 745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 328,
	327, 329, 330, 331, 332, 0, 333, 334, 0, 0,
	0, 0, 0, 746, 0, 0, 0, 335, 1848, 336,
	337, 338, 0, 339, 340, 341, 342, 343, 344, 345,
	747, 748, 0, 346, 749, 347, 750, 0, 751, 348,
	349, 350, 351, 352, 353, 354, 0, 0, 0, 355,
	752, 753, 754, 0, 356, 357, 755, 0, 0, 0,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 0,
	367, 368, 369, 366, 370, 371, 0, 372, 0, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 382,
	0, 383, 384, 385, 0, 0, 0, 0, 0, 0,
	0, 386, 387, 388, 389, 390, 0, 391, 393, 756,
	757, 0, 396, 398, 392, 394, 0, 397, 395, 399,
	400, 0, 401, 402, 403, 0, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 412, 0, 413,
	414, 758, 415, 416, 417, 419, 421, 418, 420, 422,
	423, 424, 425, 426, 759, 760, 427, 428, 0, 320,
	0, 0, 0, 0, 0, 429, 430, 431, 761, 0,
	0, 0, 432, 0, 433, 434, 435, 0, 436, 437,
	0, 0, 438, 439, 440, 762, 763, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 0, 450, 764, 0,
	765, 451, 0, 452, 453, 454, 455, 456, 457, 458,
	766, 767, 768, 554, 0, 459, 460, 461, 0, 462,
	463, 464, 465, 466, 0, 0, 0, 467, 468, 469,
	470, 0, 322, 321, 323, 0, 769, 471, 555, 472,
	770, 771, 0, 772, 0, 473, 474, 476, 0, 773,
	0, 475, 477, 478, 0, 479, 0, 0, 0, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 489, 488,
	0, 491, 774, 490, 0, 492, 493, 0, 0, 494,
	495, 496, 497, 498, 499, 502, 0, 0, 500, 501,
	503, 504, 0, 505, 506, 508, 511, 507, 509, 510,
	512, 525, 526, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 528, 0, 527, 0, 529,
	530, 531, 532, 533, 541, 543, 544, 539, 540, 542,
	545, 546, 548, 536, 537, 538, 0, 547, 534, 0,
	535, 324, 0, 549, 550, 551, 552, 0, 775, 553,
	776, 556, 557, 0, 0, 558, 0, 559, 0, 0,
	561, 562, 563, 0, 0, 564, 565, 777, 0, 566,
	0, 778, 567, 568, 560, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 779, 581,
	582, 583, 780, 584, 585, 586, 781, 587, 782, 588,
	589, 0, 590, 591, 592, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 783, 601, 602, 604, 603, 605,
	0, 606, 0, 607, 608, 609, 0, 0, 0, 0,
	0, 610, 611, 613, 0, 614, 615, 616, 617, 612,
	618, 619, 620, 621, 622, 623, 0, 625, 626, 624,
	627, 628, 0, 629, 630, 631, 632, 633, 784, 634,
	0, 635, 636, 644, 645, 646, 637, 638, 640, 647,
	639, 648, 649, 650, 651, 653, 652, 0, 655, 656,
	654, 657, 658, 659, 0, 660, 785, 661, 641, 642,
	662, 663, 0, 664, 665, 666, 667, 668, 669, 670,
	786, 0, 671, 0, 672, 673, 674, 675, 676, 677,
	679, 643, 680, 685, 686, 787, 681, 682, 683, 684,
	788, 688, 689, 690, 691, 0, 692, 693, 0, 687,
	678, 0, 694, 695, 696, 697, 698, 699, 0, 700,
	701, 0, 702, 789, 790, 791, 792, 0, 714, 0,
	703, 705, 706, 707, 708, 793, 709, 794, 0, 710,
	711, 712, 713, 704, 715, 716, 0, 0, 717, 718,
	719, 721, 723, 724, 720, 722, 725, 0, 726, 0,
	0, 727, 728, 729, 795, 796, 797, 0, 731, 732,
	730, 733, 734, 737, 735, 736, 798, 738, 739, 740,
	0, 0, 317, 3438, 741, 742, 799, 743, 744, 745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 328, 327, 329, 330, 331, 332, 0, 333, 334,
	0, 0, 0, 0, 0, 746, 0, 0, 0, 335,
	4167, 336, 337, 338, 0, 339, 340, 341, 342, 343,
	344, 345, 747, 748, 0, 346, 749, 347, 750, 0,
	751, 348, 349, 350, 351, 352, 353, 354, 0, 0,
	0, 355, 752, 753, 754, 0, 356, 357, 755, 0,
	0, 0, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 0, 367, 368, 369, 366, 370, 371, 0, 372,
	0, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 382, 0, 383, 384, 385, 0, 0, 0, 0,
	0, 0, 0, 386, 387, 388, 389, 390, 0, 391,
	393, 756, 757, 0, 396, 398, 392, 394, 0, 397,
	395, 399, 400, 0, 401, 402, 403, 0, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 413, 414, 758, 415, 416, 417, 419, 421, 418,
	420, 422, 423, 424, 425, 426, 759, 760, 427, 428,
	0, 0, 0, 0, 0, 0, 0, 429, 430, 431,
	761, 0, 0, 0, 432, 0, 433, 434, 435, 0,
	436, 437, 0, 0, 438, 439, 440, 762, 763, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	764, 0, 765, 451, 0, 452, 453, 454, 455, 456,
	457, 458, 766, 767, 768, 554, 0, 459, 460, 461,
	0, 462, 463, 464, 465, 466, 0, 0, 0, 467,
	468, 469, 470, 0, 0, 0, 0, 0, 769, 471,
	555, 472, 770, 771, 0, 772, 0, 473, 474, 476,
	0, 773, 0, 475, 477, 478, 0, 479, 0, 0,
	0, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	489, 488, 0, 491, 774, 490, 0, 492, 493, 0,
	0, 494, 495, 496, 497, 498, 499, 502, 0, 0,
	500, 501, 503, 504, 0, 505, 506, 508, 511, 507,
	509, 510, 512, 525, 526, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 528, 0, 527,
	0, 529, 530, 531, 532, 533, 541, 543, 544, 539,
	540, 542, 545, 546, 548, 536, 537, 538, 0, 547,
	534, 0, 535, 0, 0, 549, 550, 551, 552, 0,
	775, 553, 776, 556, 557, 0, 0, 558, 0, 559,
	0, 0, 561, 562, 563, 0, 0, 564, 565, 777,
	0, 566, 0, 778, 567, 568, 560, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	779, 581, 582, 583, 780, 584, 585, 586, 781, 587,
	782, 588, 589, 0, 590, 591, 592, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 783, 601, 602, 604,
	603, 605, 0, 606, 0, 607, 608, 609, 0, 0,
	0, 0, 0, 610, 611, 613, 0, 614, 615, 616,
	617, 612, 618, 619, 620, 621, 622, 623, 0, 625,
	626, 624, 627, 628, 0, 629, 630, 631, 632, 633,
	784, 634, 0, 635, 636, 644, 645, 646, 637, 638,
	640, 647, 639, 648, 649, 650, 651, 653, 652, 0,
	655, 656, 654, 657, 658, 659, 0, 660, 785, 661,
	641, 642, 662, 663, 0, 664, 665, 666, 667, 668,
	669, 670, 786, 0, 671, 0, 672, 673, 674, 675,
	676, 677, 679, 643, 680, 685, 686, 787, 681, 682,
	683, 684, 788, 688, 689, 690, 691, 0, 692, 693,
	0, 687, 678, 0, 694, 695, 696, 697, 698, 699,
	0, 700, 701, 0, 702, 789, 790, 791, 792, 0,
	714, 0, 703, 705, 706, 707, 708, 793, 709, 794,
	0, 710, 711, 712, 713, 704, 715, 716, 0, 0,
	717, 718, 719, 721, 723, 724, 720, 722, 725, 0,
	726, 0, 0, 727, 728, 729, 795, 796, 797, 0,
	731, 732, 730, 733, 734, 737, 735, 736, 798, 738,
	739, 740, 0, 0, 0, 0, 741, 742, 799, 743,
	744, 745, 1433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 328, 327, 329, 330, 331, 332, 0, 333, 334,
	0, 0, 0, 0, 5694, 1334, 0, 0, 0, 335,
	0, 336, 337, 338, 1374, 339, 340, 341, 342, 343,
	344, 345, 747, 748, 0, 346, 749, 347, 750, 0,
	751, 348, 349, 350, 351, 352, 353, 354, 0, 1333,
	0, 355, 752, 753, 754, 0, 356, 357, 1340, 0,
	1321, 0, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 0, 367, 368, 369, 366, 370, 371, 0, 372,
	0, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 382, 1375, 383, 384, 385, 1324, 1322, 1323, 1330,
	1326, 1325, 1329, 386, 387, 388, 389, 390, 0, 391,
	393, 756, 757, 0, 396, 398, 392, 394, 0, 397,
	395, 399, 400, 0, 401, 402, 403, 0, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 413, 414, 758, 415, 416, 417, 419, 421, 418,
	420, 422, 423, 424, 425, 426, 1365, 1366, 427, 428,
	0, 320, 0, 0, 0, 0, 0, 429, 430, 431,
	761, 0, 0, 0, 432, 0, 433, 434, 435, 0,
	436, 437, 0, 1376, 438, 439, 440, 762, 763, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	1372, 0, 765, 451, 0, 452, 453, 454, 455, 456,
	457, 458, 1335, 1336, 1339, 554, 1378, 459, 460, 461,
	0, 462, 463, 464, 465, 466, 0, 0, 0, 467,
	468, 469, 470, 0, 1277, 321, 323, 1377, 769, 471,
	555, 472, 770, 771, 0, 772, 0, 473, 474, 476,
	1379, 1337, 1380, 475, 477, 478, 1381, 479, 0, 0,
	0, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	489, 488, 0, 491, 1373, 490, 1382, 492, 493, 1383,
	0, 494, 495, 496, 497, 498, 499, 502, 1328, 1327,
	500, 501, 503, 504, 0, 505, 506, 508, 511, 507,
	509, 510, 512, 525, 526, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 528, 0, 527,
	1384, 529, 530, 531, 532, 533, 541, 543, 544, 539,
	540, 542, 545, 546, 548, 536, 537, 538, 1385, 547,
	534, 0, 535, 324, 1386, 549, 550, 551, 552, 0,
	1338, 553, 776, 556, 557, 0, 0, 558, 0, 559,
	0, 0, 561, 562, 563, 0, 0, 564, 565, 777,
	1387, 566, 1388, 1367, 567, 568, 560, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	779, 581, 582, 583, 780, 584, 585, 586, 1368, 587,
	782, 588, 589, 0, 590, 591, 592, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 783, 601, 602, 604,
	603, 605, 0, 606, 0, 607, 608, 609, 0, 0,
	0, 0, 0, 610, 611, 613, 0, 614, 615, 616,
	617, 612, 618, 619, 620, 621, 622, 623, 0, 625,
	626, 624, 627, 628, 1389, 629, 630, 631, 632, 633,
	784, 634, 0, 635, 636, 644, 645, 646, 637, 638,
	640, 647, 639, 648, 649, 650, 651, 653, 652, 0,
	655, 656, 654, 657, 658, 659, 1331, 660, 785, 661,
	641, 642, 662, 663, 1390, 664, 665, 666, 667, 668,
	669, 670, 786, 0, 671, 0, 672, 673, 674, 675,
	676, 677, 679, 643, 680, 685, 686, 787, 681, 682,
	683, 684, 1369, 688, 689, 690, 691, 0, 692, 693,
	0, 687, 678, 0, 694, 695, 696, 697, 698, 699,
	0, 700, 701, 0, 702, 789, 790, 791, 792, 0,
	714, 0, 703, 705, 706, 707, 708, 1370, 709, 1371,
	0, 710, 711, 712, 713, 704, 715, 716, 0, 0,
	717, 718, 719, 721, 723, 724, 720, 722, 725, 1332,
	726, 0, 0, 727, 728, 729, 795, 796, 797, 0,
	731, 732, 730, 733, 734, 737, 735, 736, 798, 738,
	739, 740, 3246, 0, 0, 0, 741, 742, 799, 743,
	744, 745, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 328, 327, 329, 330, 331, 332, 0, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 335,
	0, 336, 337, 338, 1374, 339, 340, 341, 342, 343,
	344, 345, 0, 2297, 0, 346, 2304, 347, 2303, 0,
	2312, 348, 349, 350, 351, 352, 353, 354, 0, 0,
	0, 355, 2315, 2316, 0, 0, 356, 357, 0, 0,
	1688, 0, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 0, 367, 368, 369, 366, 370, 371, 0, 372,
	0, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 382, 1375, 383, 384, 385, 0, 0, 0, 0,
	0, 0, 0, 386, 387, 388, 389, 390, 1357, 391,
	393, 2301, 2300, 0, 396, 398, 392, 394, 0, 397,
	395, 399, 400, 0, 401, 402, 403, 0, 0, 404,
	1342, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 413, 414, 0, 415, 416, 417, 419, 421, 418,
	420, 422, 423, 424, 425, 426, 0, 0, 427, 428,
	0, 320, 0, 0, 0, 0, 0, 429, 430, 431,
	2299, 0, 0, 0, 432, 0, 433, 434, 435, 0,
	436, 437, 0, 1376, 438, 439, 440, 2310, 2311, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	0, 0, 0, 451, 0, 452, 453, 454, 455, 456,
	457, 458, 0, 0, 0, 554, 1378, 459, 460, 461,
	3240, 462, 463, 464, 465, 466, 0, 0, 0, 467,
	468, 469, 470, 0, 0, 0, 0, 1377, 3242, 471,
	555, 472, 2294, 2295, 0, 2290, 0, 473, 474, 476,
	1379, 0, 1380, 475, 477, 478, 1381, 479, 0, 0,
	0, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	489, 488, 0, 491, 0, 490, 1382, 492, 493, 1383,
	0, 494, 495, 496, 497, 498, 499, 502, 0, 0,
	500, 501, 503, 504, 0, 505, 506, 508, 511, 507,
	509, 510, 512, 525, 526, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 528, 0, 527,
	1384, 529, 530, 531, 532, 533, 541, 543, 544, 539,
	540, 542, 545, 546, 548, 536, 537, 538, 1385, 547,
	534, 0, 535, 0, 1386, 549, 550, 551, 552, 0,
	0, 553, 2302, 556, 557, 0, 0, 558, 0, 559,
	0, 0, 561, 562, 563, 0, 0, 564, 565, 3241,
	1387, 566, 1388, 0, 567, 568, 560, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	2287, 581, 582, 583, 2288, 584, 585, 586, 0, 587,
	0, 588, 589, 0, 590, 591, 592, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 2298, 601, 602, 604,
	603, 605, 0, 606, 0, 607, 608, 609, 0, 0,
	0, 0, 0, 610, 611, 613, 0, 614, 615, 616,
	617, 612, 618, 619, 620, 621, 622, 623, 0, 625,
	626, 624, 627, 628, 1389, 629, 630, 631, 632, 633,
	0, 634, 0, 635, 636, 644, 645, 646, 637, 638,
	640, 647, 639, 648, 649, 650, 651, 653, 652, 0,
	655, 656, 654, 657, 658, 659, 0, 660, 0, 661,
	641, 642, 662, 663, 1390, 664, 665, 666, 667, 668,
	669, 670, 2296, 0, 671, 0, 672, 673, 674, 675,
	676, 677, 679, 643, 680, 685, 686, 2314, 681, 682,
	683, 684, 0, 688, 689, 690, 691, 0, 692, 693,
	0, 687, 678, 0, 694, 695, 696, 697, 698, 699,
	0, 700, 701, 0, 702, 2306, 2307, 2308, 2309, 0,
	714, 0, 703, 705, 706, 707, 708, 0, 709, 0,
	0, 710, 711, 712, 713, 704, 715, 716, 0, 0,
	717, 718, 719, 721, 723, 724, 720, 722, 725, 0,
	726, 0, 0, 727, 728, 729, 0, 2305, 2313, 3243,
	731, 732, 730, 733, 734, 737, 735, 736, 0, 738,
	739, 740, 0, 0, 0, 0, 741, 742, 0, 743,
	744, 745, 0, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 3235, 746, 0, 2283, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 0, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 0, 0, 0, 0, 741, 742, 799,
	743, 744, 745, 3246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 3557, 0, 0, 0, 0,
	335, 0, 336, 337, 338, 1374, 339, 340, 341, 342,
	343, 344, 345, 0, 2297, 0, 346, 2304, 347, 2303,
	0, 2312, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 2315, 2316, 0, 0, 356, 357, 0,
	0, 1688, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 1375, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 1357,
	391, 393, 2301, 2300, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 1342, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 0, 0, 427,
	428, 0, 320, 0, 0, 0, 0, 0, 429, 430,
	431, 2299, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 1376, 438, 439, 440, 2310, 2311,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 0, 0, 0, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 0, 0, 0, 554, 1378, 459, 460,
	461, 3240, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 1377, 3242,
	471, 555, 472, 2294, 2295, 0, 2290, 0, 473, 474,
	476, 1379, 0, 1380, 475, 477, 478, 1381, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 0, 490, 1382, 492, 493,
	1383, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 1384, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 1385,
	547, 534, 0, 535, 0, 1386, 549, 550, 551, 552,
	0, 0, 553, 2302, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	3241, 1387, 566, 1388, 0, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 2287, 581, 582, 583, 2288, 584, 585, 586, 0,
	587, 0, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 2298, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 1389, 629, 630, 631, 632,
	633, 0, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 0,
	661, 641, 642, 662, 663, 1390, 664, 665, 666, 667,
	668, 669, 670, 2296, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 2314, 681,
	682, 683, 684, 0, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 2306, 2307, 2308, 2309,
	0, 714, 0, 703, 705, 706, 707, 708, 0, 709,
	0, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 0, 2305, 2313,
	3243, 731, 732, 730, 733, 734, 737, 735, 736, 0,
	738, 739, 740, 0, 0, 0, 0, 741, 742, 0,
	743, 744, 745, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 2283,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 0, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 317, 0, 0, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 4337, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 0, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 0, 0, 0, 0, 741, 742, 799,
	743, 744, 745, 1068, 0, 965, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 2658, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 972,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 1065, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 322, 321, 323,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 324, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 1067, 0, 687, 678, 970, 694, 695, 696,
	697, 698, 971, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 2265, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	4470, 333, 334, 0, 0, 0, 0, 0, 746, 975,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 2272,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 2273, 759,
	760, 427, 428, 0, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 2274, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 322, 321, 323,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 324, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 4469, 639, 648, 649, 650, 651,
	653, 652, 0, 2269, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 2271, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 4468, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 2291, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 0, 975,
	0, 0, 335, 0, 336, 337, 338, 1374, 339, 340,
	341, 342, 343, 344, 345, 0, 2297, 0, 346, 2304,
	347, 2303, 0, 2312, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 2315, 2316, 0, 0, 356,
	357, 0, 0, 1688, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 1375, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 1357, 391, 393, 2301, 2300, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 1342, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 0,
	0, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 2299, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 1376, 438, 439, 440,
	2310, 2311, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 0, 0, 0, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 0, 0, 0, 554, 1378,
	459, 460, 461, 3240, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	1377, 3242, 471, 555, 472, 2294, 2295, 0, 2290, 0,
	473, 474, 476, 1379, 0, 1380, 475, 477, 478, 1381,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 0, 490, 1382,
	492, 493, 1383, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 1384, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 1385, 547, 534, 0, 535, 0, 1386, 549, 550,
	551, 552, 0, 0, 553, 2302, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 3241, 1387, 566, 1388, 0, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 2287, 581, 582, 583, 2288, 584, 585,
	586, 0, 587, 0, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 2298,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 1389, 629, 630,
	631, 632, 633, 0, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 0, 661, 641, 642, 662, 663, 1390, 664, 665,
	666, 667, 668, 669, 670, 2296, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	2314, 681, 682, 683, 684, 0, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 2306, 2307,
	2308, 2309, 0, 714, 0, 703, 705, 706, 707, 708,
	0, 709, 0, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 0,
	2305, 2313, 3243, 731, 732, 730, 733, 734, 737, 735,
	736, 0, 738, 739, 740, 0, 0, 0, 0, 741,
	742, 0, 743, 744, 745, 2265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	2320, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 2283, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 2272,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 2273, 759,
	760, 427, 428, 0, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 2274, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 322, 321, 323,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 324, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 2319, 639, 648, 649, 650, 651,
	653, 652, 0, 2321, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 2271, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 2318, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 2265, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	2264, 333, 334, 0, 0, 0, 0, 0, 746, 975,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 2272,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 2273, 759,
	760, 427, 428, 0, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 2274, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 322, 321, 323,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 324, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 2263, 639, 648, 649, 650, 651,
	653, 652, 0, 2269, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 2271, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 2262, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 963, 0, 965, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 328, 327, 329, 330,
	331, 332, 0, 333, 334, 0, 0, 0, 0, 975,
	746, 0, 0, 0, 335, 0, 336, 337, 338, 0,
	339, 340, 341, 342, 343, 344, 345, 747, 748, 0,
	346, 749, 347, 750, 0, 751, 348, 349, 350, 351,
	352, 353, 354, 0, 0, 0, 355, 752, 753, 754,
	0, 356, 357, 755, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 0, 367, 368, 369,
	366, 370, 371, 0, 372, 0, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 382, 0, 383, 384,
	385, 0, 0, 0, 0, 0, 0, 0, 386, 387,
	388, 972, 390, 0, 391, 393, 756, 757, 0, 396,
	398, 392, 394, 0, 397, 395, 399, 400, 0, 401,
	402, 403, 0, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 413, 414, 758, 415,
	416, 417, 419, 421, 418, 420, 422, 423, 424, 425,
	426, 759, 760, 427, 428, 0, 320, 0, 0, 0,
	0, 0, 429, 430, 431, 761, 0, 0, 0, 432,
	0, 433, 434, 435, 0, 436, 437, 0, 0, 438,
	439, 440, 762, 763, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 764, 0, 765, 451, 0,
	452, 453, 454, 455, 456, 457, 458, 766, 767, 768,
	554, 0, 459, 460, 461, 0, 462, 463, 464, 465,
	466, 0, 0, 0, 467, 468, 469, 470, 0, 322,
	321, 323, 0, 769, 471, 555, 472, 770, 771, 0,
	772, 0, 473, 474, 476, 0, 773, 0, 475, 477,
	478, 0, 479, 0, 0, 0, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 489, 488, 0, 491, 774,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 497,
	498, 499, 502, 0, 0, 500, 501, 503, 504, 0,
	505, 506, 508, 511, 507, 509, 510, 512, 525, 526,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 528, 0, 527, 0, 529, 530, 531, 532,
	533, 541, 543, 544, 539, 540, 542, 545, 546, 548,
	536, 537, 538, 0, 547, 534, 0, 535, 324, 0,
	549, 550, 551, 552, 0, 775, 553, 776, 556, 557,
	0, 0, 558, 0, 559, 0, 0, 561, 562, 563,
	0, 0, 564, 565, 777, 0, 566, 0, 778, 567,
	568, 560, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 779, 581, 582, 583, 780,
	584, 585, 586, 781, 587, 782, 588, 589, 0, 590,
	591, 592, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 783, 601, 602, 604, 603, 605, 0, 606, 0,
	607, 608, 609, 0, 0, 0, 0, 0, 610, 611,
	613, 0, 614, 615, 616, 617, 612, 618, 619, 620,
	621, 622, 623, 0, 625, 626, 624, 627, 628, 0,
	629, 630, 631, 632, 633, 784, 634, 0, 635, 636,
	644, 645, 646, 637, 638, 640, 647, 639, 648, 649,
	650, 651, 653, 652, 0, 655, 656, 654, 657, 658,
	659, 0, 660, 785, 661, 641, 642, 662, 663, 0,
	664, 665, 666, 667, 668, 669, 670, 786, 0, 671,
	0, 672, 673, 674, 675, 676, 677, 679, 643, 680,
	685, 686, 787, 681, 682, 683, 684, 788, 688, 689,
	690, 691, 0, 692, 693, 0, 687, 678, 970, 694,
	695, 696, 697, 698, 971, 0, 700, 701, 0, 702,
	789, 790, 791, 792, 0, 714, 0, 703, 705, 706,
	707, 708, 793, 709, 794, 0, 710, 711, 712, 713,
	704, 715, 716, 0, 0, 717, 718, 719, 721, 723,
	724, 720, 722, 725, 0, 726, 0, 0, 727, 728,
	729, 795, 796, 797, 0, 731, 732, 730, 733, 734,
	737, 735, 736, 798, 738, 739, 740, 965, 0, 0,
	0, 741, 742, 799, 743, 744, 745, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 328, 327, 329, 330,
	331, 332, 0, 333, 334, 0, 0, 0, 0, 0,
	746, 975, 0, 0, 335, 0, 336, 337, 338, 0,
	339, 340, 341, 342, 343, 344, 345, 747, 748, 0,
	346, 749, 347, 750, 0, 751, 348, 349, 350, 351,
	352, 353, 354, 0, 0, 0, 355, 752, 753, 754,
	0, 356, 357, 755, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 0, 367, 368, 369,
	366, 370, 371, 0, 372, 0, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 382, 0, 383, 384,
	385, 0, 0, 0, 0, 0, 0, 0, 386, 387,
	388, 972, 390, 0, 391, 393, 756, 757, 0, 396,
	398, 392, 394, 0, 397, 395, 399, 400, 0, 401,
	402, 403, 0, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 413, 414, 758, 415,
	416, 417, 419, 421, 418, 420, 422, 423, 424, 425,
	426, 759, 760, 427, 428, 0, 320, 0, 0, 0,
	0, 0, 429, 430, 431, 761, 0, 0, 0, 432,
	0, 433, 434, 435, 0, 436, 437, 0, 0, 438,
	439, 440, 762, 763, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 764, 0, 765, 451, 0,
	452, 453, 454, 455, 456, 457, 458, 766, 767, 768,
	554, 0, 459, 460, 461, 0, 462, 463, 464, 465,
	466, 0, 0, 0, 467, 468, 469, 470, 0, 322,
	321, 323, 0, 769, 471, 555, 472, 770, 771, 0,
	772, 0, 473, 474, 476, 0, 773, 0, 475, 477,
	478, 0, 479, 0, 0, 0, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 489, 488, 0, 491, 774,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 497,
	498, 499, 502, 0, 0, 500, 501, 503, 504, 0,
	505, 506, 508, 511, 507, 509, 510, 512, 525, 526,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 528, 0, 527, 0, 529, 530, 531, 532,
	533, 541, 543, 544, 539, 540, 542, 545, 546, 548,
	536, 537, 538, 0, 547, 534, 0, 535, 324, 0,
	549, 550, 551, 552, 0, 775, 553, 776, 556, 557,
	0, 0, 558, 0, 559, 0, 0, 561, 562, 563,
	0, 0, 564, 565, 777, 0, 566, 0, 778, 567,
	568, 560, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 779, 581, 582, 583, 780,
	584, 585, 586, 781, 587, 782, 588, 589, 0, 590,
	591, 592, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 783, 601, 602, 604, 603, 605, 0, 606, 0,
	607, 608, 609, 0, 0, 0, 0, 0, 610, 611,
	613, 0, 614, 615, 616, 617, 612, 618, 619, 620,
	621, 622, 623, 0, 625, 626, 624, 627, 628, 0,
	629, 630, 631, 632, 633, 784, 634, 0, 635, 636,
	644, 645, 646, 637, 638, 640, 647, 639, 648, 649,
	650, 651, 653, 652, 0, 655, 656, 654, 657, 658,
	659, 0, 660, 785, 661, 641, 642, 662, 663, 0,
	664, 665, 666, 667, 668, 669, 670, 786, 0, 671,
	0, 672, 673, 674, 675, 676, 677, 679, 643, 680,
	685, 686, 787, 681, 682, 683, 684, 788, 688, 689,
	690, 691, 0, 692, 693, 0, 687, 678, 970, 694,
	695, 696, 697, 698, 971, 0, 700, 701, 0, 702,
	789, 790, 791, 792, 0, 714, 0, 703, 705, 706,
	707, 708, 793, 709, 794, 0, 710, 711, 712, 713,
	704, 715, 716, 0, 0, 717, 718, 719, 721, 723,
	724, 720, 722, 725, 0, 726, 0, 0, 727, 728,
	729, 795, 796, 797, 0, 731, 732, 730, 733, 734,
	737, 735, 736, 798, 738, 739, 740, 3226, 0, 317,
	0, 741, 742, 799, 743, 744, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 328, 327,
	329, 330, 331, 332, 0, 333, 334, 0, 0, 0,
	0, 975, 746, 0, 0, 0, 335, 0, 336, 337,
	338, 0, 339, 340, 341, 342, 343, 344, 345, 747,
	748, 0, 346, 749, 347, 750, 0, 751, 348, 349,
	350, 351, 352, 353, 354, 0, 0, 0, 355, 752,
	753, 754, 0, 356, 357, 755, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 382, 0,
	383, 384, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 389, 390, 0, 391, 393, 756, 757,
	0, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	758, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 759, 760, 427, 428, 0, 320, 0,
	0, 0, 0, 0, 429, 430, 431, 761, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	0, 438, 439, 440, 762, 763, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 764, 0, 765,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 766,
	767, 768, 554, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 322, 321, 323, 0, 769, 471, 555, 472, 770,
	771, 0, 772, 0, 473, 474, 476, 0, 773, 0,
	475, 477, 478, 0, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 774, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 497, 498, 499, 502, 0, 0, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 0, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 0, 547, 534, 0, 535,
	324, 0, 549, 550, 551, 552, 0, 775, 553, 776,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 0, 566, 0,
	778, 567, 568, 560, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 781, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 783, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 0, 629, 630, 631, 632, 633, 784, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 651, 653, 652, 0, 655, 656, 654,
	657, 658, 659, 0, 660, 785, 661, 641, 642, 662,
	663, 0, 664, 665, 666, 667, 668, 669, 670, 786,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 787, 681, 682, 683, 684, 788,
	688, 689, 690, 691, 0, 692, 693, 0, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 789, 790, 791, 792, 0, 714, 0, 703,
	705, 706, 707, 708, 793, 709, 794, 0, 710, 711,
	712, 713, 704, 715, 716, 0, 0, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 0, 726, 0, 0,
	727, 728, 729, 795, 796, 797, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 2265,
	0, 0, 0, 741, 742, 799, 743, 744, 745, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 328, 327,
	329, 330, 331, 332, 0, 333, 334, 0, 0, 0,
	0, 0, 746, 975, 0, 0, 335, 0, 336, 337,
	338, 0, 339, 340, 341, 342, 343, 344, 345, 747,
	748, 0, 346, 749, 347, 750, 0, 751, 348, 349,
	350, 351, 352, 353, 354, 0, 0, 0, 355, 752,
	753, 754, 0, 356, 357, 755, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 382, 0,
	383, 384, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 2272, 390, 0, 391, 393, 756, 757,
	0, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	758, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 2273, 759, 760, 427, 428, 0, 320, 0,
	0, 0, 0, 0, 429, 430, 431, 761, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	0, 2274, 439, 440, 762, 763, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 764, 0, 765,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 766,
	767, 768, 554, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 322, 321, 323, 0, 769, 471, 555, 472, 770,
	771, 0, 772, 0, 473, 474, 476, 0, 773, 0,
	475, 477, 478, 0, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 774, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 497, 498, 499, 502, 0, 0, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 0, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 0, 547, 534, 0, 535,
	324, 0, 549, 550, 551, 552, 0, 775, 553, 776,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 0, 566, 0,
	778, 567, 568, 560, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 781, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 783, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 0, 2712, 630, 631, 632, 633, 784, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 2713, 639,
	648, 649, 650, 651, 653, 652, 0, 2269, 656, 654,
	657, 658, 659, 0, 660, 785, 661, 641, 642, 662,
	663, 0, 664, 665, 666, 667, 668, 669, 670, 786,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 787, 681, 682, 683, 684, 788,
	688, 689, 690, 691, 0, 692, 693, 0, 687, 678,
	2271, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 789, 790, 791, 792, 0, 714, 0, 703,
	705, 706, 707, 708, 793, 709, 794, 0, 710, 711,
	2714, 713, 704, 715, 716, 0, 0, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 0, 726, 0, 0,
	727, 728, 729, 795, 796, 797, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 317,
	0, 0, 0, 741, 742, 799, 743, 744, 745, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 328, 327,
	329, 330, 331, 332, 0, 333, 334, 0, 0, 0,
	0, 0, 746, 975, 0, 0, 335, 0, 336, 337,
	338, 0, 339, 340, 341, 342, 343, 344, 345, 747,
	748, 0, 346, 749, 347, 750, 0, 751, 348, 349,
	350, 351, 352, 353, 354, 0, 0, 0, 355, 752,
	753, 754, 0, 356, 357, 755, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 382, 0,
	383, 384, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 389, 390, 0, 391, 393, 756, 757,
	0, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	758, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 759, 760, 427, 428, 0, 320, 0,
	0, 0, 0, 0, 429, 430, 431, 761, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	0, 438, 439, 440, 762, 763, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 764, 0, 765,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 766,
	767, 768, 554, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 322, 321, 323, 0, 769, 471, 555, 472, 770,
	771, 0, 772, 0, 473, 474, 476, 0, 773, 0,
	475, 477, 478, 0, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 774, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 497, 498, 499, 502, 0, 0, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 0, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 0, 547, 534, 0, 535,
	324, 0, 549, 550, 551, 552, 0, 775, 553, 776,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 0, 566, 0,
	778, 567, 568, 560, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 781, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 783, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 0, 629, 630, 631, 632, 633, 784, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 651, 653, 652, 0, 655, 656, 654,
	657, 658, 659, 0, 660, 785, 661, 641, 642, 662,
	663, 0, 664, 665, 666, 667, 668, 669, 670, 786,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 787, 681, 682, 683, 684, 788,
	688, 689, 690, 691, 0, 692, 693, 0, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 789, 790, 791, 792, 0, 714, 0, 703,
	705, 706, 707, 708, 793, 709, 794, 0, 710, 711,
	712, 713, 704, 715, 716, 0, 0, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 0, 726, 0, 0,
	727, 728, 729, 795, 796, 797, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 317,
	0, 0, 0, 741, 742, 799, 743, 744, 745, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 328, 327,
	329, 330, 331, 332, 0, 333, 334, 0, 0, 0,
	0, 0, 746, 975, 0, 0, 335, 0, 336, 337,
	338, 0, 339, 340, 341, 342, 343, 344, 345, 747,
	748, 0, 346, 749, 347, 750, 0, 751, 348, 349,
	350, 351, 352, 353, 354, 0, 0, 0, 355, 752,
	753, 754, 0, 356, 357, 755, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 382, 0,
	383, 384, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 389, 390, 0, 391, 393, 756, 757,
	0, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	758, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 759, 760, 427, 428, 0, 320, 0,
	0, 0, 0, 0, 429, 430, 431, 761, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	0, 438, 439, 440, 762, 763, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 764, 0, 765,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 766,
	767, 768, 554, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 322, 321, 323, 0, 769, 471, 555, 472, 770,
	771, 0, 772, 0, 473, 474, 476, 0, 773, 0,
	475, 477, 478, 0, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 774, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 497, 498, 499, 502, 0, 0, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 0, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 0, 547, 534, 0, 535,
	324, 0, 549, 550, 551, 552, 0, 775, 553, 776,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 0, 566, 0,
	778, 567, 568, 560, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 781, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 783, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 0, 629, 630, 631, 632, 633, 784, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 651, 653, 652, 0, 655, 656, 654,
	657, 658, 659, 0, 660, 785, 661, 641, 642, 662,
	663, 0, 664, 665, 666, 667, 668, 669, 670, 786,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 787, 681, 682, 683, 684, 788,
	688, 689, 690, 691, 0, 692, 693, 0, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 789, 790, 791, 792, 0, 714, 0, 703,
	705, 706, 707, 708, 793, 709, 794, 0, 710, 711,
	712, 713, 704, 715, 716, 0, 0, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 0, 726, 0, 0,
	727, 728, 729, 795, 796, 797, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 3246,
	0, 0, 0, 741, 742, 799, 743, 744, 745, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 328, 327,
	329, 330, 331, 332, 0, 333, 334, 0, 0, 0,
	0, 0, 0, 931, 0, 0, 335, 0, 336, 337,
	338, 1374, 339, 340, 341, 342, 343, 344, 345, 0,
	2297, 0, 346, 2304, 347, 2303, 0, 2312, 348, 349,
	350, 351, 352, 353, 354, 0, 0, 0, 355, 2315,
	2316, 0, 0, 356, 357, 0, 0, 1688, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 382, 1375,
	383, 384, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 389, 390, 1357, 391, 393, 2301, 2300,
	0, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 1342, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 0, 0, 427, 428, 0, 320, 0,
	0, 0, 0, 0, 429, 430, 431, 2299, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	1376, 438, 439, 440, 2310, 2311, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 0, 0, 0,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 0,
	0, 0, 554, 1378, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 0, 0, 0, 1377, 0, 471, 555, 472, 2294,
	2295, 0, 2290, 0, 473, 474, 476, 1379, 0, 1380,
	475, 477, 478, 1381, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 0, 490, 1382, 492, 493, 1383, 0, 494, 495,
	496, 497, 498, 499, 502, 0, 0, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 1384, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 1385, 547, 534, 0, 535,
	0, 1386, 549, 550, 551, 552, 0, 0, 553, 2302,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 0, 1387, 566, 1388,
	0, 567, 568, 560, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 2287, 581, 582,
	583, 2288, 584, 585, 586, 0, 587, 0, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 2298, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 1389, 629, 630, 631, 632, 633, 0, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 651, 653, 652, 0, 655, 656, 654,
	657, 658, 659, 0, 660, 0, 661, 641, 642, 662,
	663, 1390, 664, 665, 666, 667, 668, 669, 670, 2296,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 2314, 681, 682, 683, 684, 0,
	688, 689, 690, 691, 0, 692, 693, 0, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 2306, 2307, 2308, 2309, 0, 714, 0, 703,
	705, 706, 707, 708, 0, 709, 0, 0, 710, 711,
	712, 713, 704, 715, 716, 0, 0, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 0, 726, 0, 0,
	727, 728, 729, 0, 2305, 2313, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 2291, 738, 739, 740, 0,
	0, 0, 0, 741, 742, 0, 743, 744, 745, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 335, 0, 336, 337, 338, 1374, 339, 340,
	341, 342, 343, 344, 345, 2283, 2297, 0, 346, 2304,
	347, 2303, 0, 2312, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 2315, 2316, 0, 0, 356,
	357, 0, 0, 1688, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 1375, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 1357, 391, 393, 2301, 2300, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 1342, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 0,
	0, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 2299, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 1376, 438, 439, 440,
	2310, 2311, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 0, 0, 0, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 0, 0, 0, 554, 1378,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	1377, 0, 471, 555, 472, 2294, 2295, 0, 2290, 0,
	473, 474, 476, 1379, 0, 1380, 475, 477, 478, 1381,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 0, 490, 1382,
	492, 493, 1383, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 1384, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 1385, 547, 534, 0, 535, 0, 1386, 549, 550,
	551, 552, 0, 0, 553, 2302, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 0, 1387, 566, 1388, 0, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 2287, 581, 582, 583, 2288, 584, 585,
	586, 0, 587, 0, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 2298,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 1389, 629, 630,
	631, 632, 633, 0, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 0, 661, 641, 642, 662, 663, 1390, 664, 665,
	666, 667, 668, 669, 670, 2296, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	2314, 681, 682, 683, 684, 0, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 2306, 2307,
	2308, 2309, 0, 714, 0, 703, 705, 706, 707, 708,
	0, 709, 0, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 0,
	2305, 2313, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 0, 738, 739, 740, 0, 0, 0, 0, 741,
	742, 0, 743, 744, 745, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 2283, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 0, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 1722, 1721, 0, 0, 0, 0, 1719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4718,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 1374, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 1688, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 1375, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 320, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 1376, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 1378, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 1377, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 1379, 773, 1380, 475, 477, 478, 1381, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 1382, 492, 493,
	1383, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 1384, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 1385,
	547, 534, 0, 535, 0, 1386, 549, 550, 551, 552,
	4597, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 1387, 566, 1388, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 1389, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 1390, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 0, 0, 0, 0, 741, 742, 799,
	743, 744, 745, 3642, 0, 1722, 1721, 0, 0, 0,
	0, 1719, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 1374, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 1688, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 1375, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 1376, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 1378,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	1377, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 1379, 773, 1380, 475, 477, 478, 1381,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 1382,
	492, 493, 1383, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 1384, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 1385, 547, 534, 0, 535, 0, 1386, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 1387, 566, 1388, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 1389, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 1390, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 0, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 2594, 0, 1722, 1721, 0,
	0, 0, 0, 1719, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 328, 327, 329, 330,
	331, 332, 0, 333, 334, 0, 0, 0, 0, 0,
	746, 0, 0, 0, 335, 0, 336, 337, 338, 1374,
	339, 340, 341, 342, 343, 344, 345, 747, 748, 0,
	346, 749, 347, 750, 0, 751, 348, 349, 350, 351,
	352, 353, 354, 0, 0, 0, 355, 752, 753, 754,
	0, 356, 357, 755, 0, 1688, 0, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 0, 367, 368, 369,
	366, 370, 371, 0, 372, 0, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 382, 1375, 383, 384,
	385, 0, 0, 0, 0, 0, 0, 0, 386, 387,
	388, 389, 390, 0, 391, 393, 756, 757, 0, 396,
	398, 392, 394, 0, 397, 395, 399, 400, 0, 401,
	402, 403, 0, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 413, 414, 758, 415,
	416, 417, 419, 421, 418, 420, 422, 423, 424, 425,
	426, 759, 760, 427, 428, 0, 320, 0, 0, 0,
	0, 0, 429, 430, 431, 761, 0, 0, 0, 432,
	0, 433, 434, 435, 0, 436, 437, 0, 1376, 438,
	439, 440, 762, 763, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 764, 0, 765, 451, 0,
	452, 453, 454, 455, 456, 457, 458, 1779, 767, 768,
	554, 1378, 459, 460, 461, 0, 462, 463, 464, 465,
	466, 0, 0, 0, 467, 468, 469, 470, 0, 0,
	0, 0, 1377, 769, 471, 555, 472, 770, 771, 0,
	772, 0, 473, 474, 476, 1379, 773, 1380, 475, 477,
	478, 1381, 479, 0, 0, 0, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 489, 488, 0, 491, 774,
	490, 1382, 492, 493, 1383, 0, 494, 495, 496, 497,
	498, 499, 502, 0, 0, 500, 501, 503, 504, 0,
	505, 506, 508, 511, 507, 509, 510, 512, 525, 526,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 528, 0, 527, 1384, 529, 530, 531, 532,
	533, 541, 543, 544, 539, 540, 542, 545, 546, 548,
	536, 537, 538, 1385, 547, 534, 0, 535, 0, 1386,
	549, 550, 551, 552, 0, 775, 553, 776, 556, 557,
	0, 0, 558, 0, 559, 0, 0, 561, 562, 563,
	0, 0, 564, 565, 777, 1387, 566, 1388, 778, 567,
	568, 560, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 779, 581, 582, 583, 780,
	584, 585, 586, 781, 587, 782, 588, 589, 0, 590,
	591, 592, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 783, 601, 602, 604, 603, 605, 0, 606, 0,
	607, 608, 609, 0, 0, 0, 0, 0, 610, 611,
	613, 0, 614, 615, 616, 617, 612, 618, 619, 620,
	621, 622, 623, 0, 625, 626, 624, 627, 628, 1389,
	629, 630, 631, 632, 633, 784, 634, 0, 635, 636,
	644, 645, 646, 637, 638, 640, 647, 639, 648, 649,
	650, 651, 653, 652, 0, 655, 656, 654, 657, 658,
	659, 0, 660, 785, 661, 641, 642, 662, 663, 1390,
	664, 665, 666, 667, 668, 669, 670, 786, 0, 671,
	0, 672, 673, 674, 675, 676, 677, 679, 643, 680,
	685, 686, 787, 681, 682, 683, 684, 788, 688, 689,
	690, 691, 0, 692, 693, 0, 687, 678, 0, 694,
	695, 696, 697, 698, 699, 0, 700, 701, 0, 702,
	789, 790, 791, 792, 0, 714, 0, 703, 705, 706,
	707, 708, 793, 709, 794, 0, 710, 711, 712, 713,
	704, 715, 716, 0, 0, 717, 718, 719, 721, 723,
	724, 720, 722, 725, 0, 726, 0, 0, 727, 728,
	729, 795, 796, 797, 0, 731, 732, 730, 733, 734,
	737, 735, 736, 798, 738, 739, 740, 0, 0, 0,
	0, 741, 742, 799, 743, 744, 745, 2329, 0, 1722,
	1721, 0, 0, 0, 0, 1719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 328, 327,
	329, 330, 331, 332, 0, 333, 334, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 335, 0, 336, 337,
	338, 1374, 339, 340, 341, 342, 343, 344, 345, 747,
	748, 0, 346, 749, 347, 750, 0, 751, 348, 349,
	350, 351, 352, 353, 354, 0, 0, 0, 355, 752,
	753, 754, 0, 356, 357, 755, 0, 1688, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 382, 1375,
	383, 384, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 389, 390, 0, 391, 393, 756, 757,
	0, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	758, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 759, 760, 427, 428, 0, 320, 0,
	0, 0, 0, 0, 429, 430, 431, 761, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	1376, 438, 439, 440, 762, 763, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 764, 0, 765,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 766,
	767, 768, 554, 1378, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 0, 0, 0, 1377, 769, 471, 555, 472, 770,
	771, 0, 772, 0, 473, 474, 476, 1379, 773, 1380,
	475, 477, 478, 1381, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 774, 490, 1382, 492, 493, 1383, 0, 494, 495,
	496, 497, 498, 499, 502, 0, 0, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 1384, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 1385, 547, 534, 0, 535,
	0, 1386, 549, 550, 551, 552, 0, 775, 553, 776,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 1387, 566, 1388,
	778, 567, 568, 560, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 781, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 783, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 1389, 629, 630, 631, 632, 633, 784, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 651, 653, 652, 0, 655, 656, 654,
	657, 658, 659, 0, 660, 785, 661, 641, 642, 662,
	663, 1390, 664, 665, 666, 667, 668, 669, 670, 786,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 787, 681, 682, 683, 684, 788,
	688, 689, 690, 691, 0, 692, 693, 0, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 789, 790, 791, 792, 0, 714, 0, 703,
	705, 706, 707, 708, 793, 709, 794, 0, 710, 711,
	712, 713, 704, 715, 716, 0, 0, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 0, 726, 0, 0,
	727, 728, 729, 795, 796, 797, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 0,
	0, 0, 0, 741, 742, 799, 743, 744, 745, 1911,
	0, 1722, 1721, 0, 0, 0, 0, 1719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	328, 327, 329, 330, 331, 332, 0, 333, 334, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 335, 0,
	336, 337, 338, 1374, 339, 340, 341, 342, 343, 344,
	345, 747, 748, 0, 346, 749, 347, 750, 0, 751,
	348, 349, 350, 351, 352, 353, 354, 0, 0, 0,
	355, 752, 753, 754, 0, 356, 357, 755, 0, 1688,
	0, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	0, 367, 368, 369, 366, 370, 371, 0, 372, 0,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	382, 1375, 383, 384, 385, 0, 0, 0, 0, 0,
	0, 0, 386, 387, 388, 389, 390, 0, 391, 393,
	756, 757, 0, 396, 398, 392, 394, 0, 397, 395,
	399, 400, 0, 401, 402, 403, 0, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	413, 414, 758, 415, 416, 417, 419, 421, 418, 420,
	422, 423, 424, 425, 426, 759, 760, 427, 428, 0,
	320, 0, 0, 0, 0, 0, 1908, 430, 431, 761,
	0, 0, 0, 432, 0, 433, 434, 435, 0, 436,
	437, 0, 1376, 438, 439, 440, 762, 763, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 764,
	0, 765, 451, 0, 452, 453, 454, 455, 456, 457,
	458, 766, 767, 768, 554, 1378, 459, 460, 461, 0,
	462, 463, 464, 465, 466, 0, 0, 0, 467, 468,
	469, 470, 0, 0, 0, 0, 1377, 769, 471, 555,
	472, 770, 771, 0, 772, 0, 473, 474, 476, 1379,
	773, 1380, 475, 477, 478, 1381, 479, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 489,
	488, 0, 491, 774, 490, 1382, 492, 493, 1383, 0,
	494, 495, 496, 497, 498, 499, 502, 0, 0, 500,
	501, 503, 504, 0, 505, 506, 508, 511, 507, 509,
	510, 512, 525, 526, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 528, 0, 527, 1384,
	529, 530, 531, 532, 533, 541, 543, 544, 539, 540,
	542, 545, 546, 548, 536, 537, 538, 1385, 547, 534,
	0, 535, 0, 1386, 549, 550, 551, 552, 0, 775,
	553, 776, 556, 557, 0, 0, 558, 0, 559, 0,
	0, 561, 562, 563, 0, 0, 564, 565, 777, 1387,
	566, 1388, 778, 567, 568, 560, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 779,
	581, 582, 583, 780, 584, 585, 586, 781, 587, 782,
	588, 589, 0, 590, 591, 592, 0, 593, 594, 595,
	596, 597, 598, 1909, 600, 783, 601, 602, 604, 603,
	605, 0, 606, 0, 607, 608, 609, 0, 0, 0,
	0, 0, 610, 611, 613, 0, 614, 615, 616, 617,
	612, 618, 619, 620, 621, 622, 623, 0, 625, 626,
	624, 627, 628, 1389, 629, 630, 631, 632, 633, 784,
	634, 0, 635, 636, 644, 645, 646, 637, 638, 640,
	647, 639, 1907, 649, 650, 651, 653, 652, 0, 655,
	656, 654, 657, 658, 659, 0, 660, 785, 661, 641,
	642, 662, 663, 1390, 664, 665, 666, 667, 668, 669,
	670, 786, 0, 671, 0, 672, 673, 674, 675, 676,
	677, 679, 643, 680, 685, 686, 787, 681, 682, 683,
	684, 788, 688, 689, 690, 691, 0, 692, 693, 0,
	687, 678, 0, 694, 695, 696, 697, 698, 699, 0,
	700, 701, 0, 702, 789, 790, 791, 792, 0, 714,
	0, 703, 705, 706, 707, 708, 793, 709, 794, 0,
	710, 711, 712, 713, 704, 715, 716, 0, 0, 717,
	718, 719, 721, 723, 724, 720, 722, 725, 0, 726,
	0, 0, 727, 1910, 729, 795, 796, 797, 0, 731,
	732, 730, 733, 734, 737, 735, 736, 798, 738, 739,
	740, 0, 0, 0, 0, 741, 742, 799, 743, 744,
	745, 1776, 0, 1722, 1721, 0, 0, 0, 0, 1719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 1374, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 1688, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 1375, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 320, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 1376, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 1779, 767, 768, 554, 1378, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 1377, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 1379, 773, 1380, 475, 477, 478, 1381, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 1382, 492, 493,
	1383, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 1384, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 1385,
	547, 534, 0, 535, 0, 1386, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 1387, 566, 1388, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 1389, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 1390, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 0, 0, 0, 0, 741, 742, 799,
	743, 744, 745, 1717, 0, 1722, 1721, 0, 0, 0,
	0, 1719, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 1374, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 1688, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 1375, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 1376, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 1378,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	1377, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 1379, 773, 1380, 475, 477, 478, 1381,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 1382,
	492, 493, 1383, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 1384, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 1385, 547, 534, 0, 535, 0, 1386, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 1387, 566, 1388, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 1389, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 1715, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 1390, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 0, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 1722, 1721, 0, 0, 0,
	0, 1719, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 1374, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 1688, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 1375, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 1376, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 1378,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	1377, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 1379, 773, 1380, 475, 477, 478, 1381,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 1382,
	492, 493, 1383, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 1384, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 1385, 547, 534, 0, 535, 0, 1386, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 1387, 566, 1388, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 1389, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 1390, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 1722, 1721, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 1374, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 1688, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 1375, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 1376, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 1378,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	1377, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 1379, 773, 1380, 475, 477, 478, 1381,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 1382,
	492, 493, 1383, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 1384, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 1385, 547, 534, 0, 535, 0, 1386, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 1387, 566, 1388, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 1389, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 1390, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 1722, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 1374, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 1688, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 1375, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 1376, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 1378,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	1377, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 1379, 773, 1380, 475, 477, 478, 1381,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 1382,
	492, 493, 1383, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 1384, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 1385, 547, 534, 0, 535, 0, 1386, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 1387, 566, 1388, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 1389, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 1390, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 3308, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 4159, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 3312, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 4158, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 3311, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 4154, 4155, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 4157, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 4153, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 3310, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 4156, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 1997, 0, 317, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 328, 327, 329, 330,
	331, 332, 1996, 333, 334, 0, 0, 0, 0, 0,
	746, 0, 0, 0, 335, 0, 336, 337, 338, 0,
	339, 340, 341, 342, 343, 344, 345, 747, 748, 0,
	346, 749, 347, 750, 0, 751, 348, 349, 350, 351,
	352, 353, 354, 0, 0, 0, 355, 752, 753, 754,
	0, 356, 357, 755, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 0, 367, 368, 369,
	366, 370, 371, 0, 372, 0, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 382, 0, 383, 384,
	385, 0, 0, 0, 0, 0, 0, 0, 386, 387,
	388, 1992, 390, 0, 391, 393, 756, 757, 0, 396,
	398, 392, 394, 0, 397, 395, 399, 400, 0, 401,
	402, 403, 0, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 413, 414, 758, 415,
	416, 417, 419, 421, 418, 420, 422, 423, 424, 425,
	1999, 759, 760, 427, 428, 0, 320, 0, 0, 0,
	0, 0, 429, 430, 431, 761, 0, 0, 0, 432,
	0, 433, 434, 435, 0, 436, 437, 0, 0, 1995,
	439, 440, 762, 763, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 764, 0, 765, 451, 0,
	452, 453, 454, 455, 456, 457, 458, 766, 767, 768,
	554, 0, 459, 460, 461, 0, 462, 463, 464, 465,
	466, 0, 0, 0, 467, 1993, 469, 470, 0, 322,
	321, 323, 0, 769, 471, 555, 472, 770, 771, 0,
	772, 0, 473, 474, 476, 0, 773, 0, 475, 477,
	478, 0, 479, 0, 0, 0, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 489, 488, 0, 491, 774,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 497,
	498, 499, 502, 0, 0, 500, 501, 503, 504, 0,
	505, 506, 508, 511, 507, 509, 510, 512, 525, 526,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 528, 0, 527, 0, 529, 530, 531, 532,
	533, 541, 543, 544, 539, 540, 542, 545, 546, 548,
	536, 537, 538, 0, 547, 534, 0, 535, 324, 0,
	549, 550, 551, 552, 0, 775, 553, 776, 556, 557,
	0, 0, 558, 0, 559, 0, 0, 561, 562, 563,
	0, 0, 564, 565, 777, 0, 566, 0, 778, 567,
	568, 560, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 779, 581, 582, 583, 780,
	584, 585, 586, 781, 587, 782, 588, 589, 0, 590,
	591, 592, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 783, 601, 602, 604, 603, 605, 0, 606, 0,
	607, 608, 609, 0, 0, 0, 0, 0, 610, 611,
	613, 0, 614, 615, 616, 617, 612, 618, 619, 620,
	621, 622, 623, 0, 625, 626, 624, 627, 628, 0,
	629, 630, 631, 632, 633, 784, 634, 0, 635, 636,
	644, 645, 646, 1998, 638, 640, 647, 639, 648, 649,
	650, 651, 1994, 652, 0, 1991, 656, 654, 657, 658,
	659, 0, 660, 785, 661, 641, 642, 662, 663, 0,
	664, 665, 666, 667, 668, 669, 670, 786, 0, 671,
	0, 672, 673, 674, 675, 676, 677, 679, 643, 680,
	685, 686, 787, 681, 682, 683, 684, 788, 688, 689,
	690, 691, 0, 692, 693, 0, 687, 678, 1989, 694,
	695, 696, 697, 698, 699, 0, 700, 701, 0, 702,
	789, 790, 791, 792, 0, 714, 0, 703, 705, 706,
	707, 708, 793, 709, 794, 0, 710, 711, 712, 713,
	704, 715, 716, 0, 0, 717, 718, 719, 721, 723,
	724, 720, 722, 725, 0, 726, 0, 0, 727, 728,
	729, 795, 796, 797, 0, 731, 1990, 730, 733, 734,
	737, 735, 736, 798, 738, 739, 740, 1692, 0, 317,
	0, 741, 742, 799, 743, 744, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 328, 327,
	329, 330, 331, 332, 0, 333, 334, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 335, 0, 336, 337,
	338, 0, 339, 340, 341, 342, 343, 344, 345, 747,
	748, 0, 346, 749, 347, 750, 0, 751, 348, 349,
	350, 351, 352, 353, 354, 0, 0, 0, 355, 752,
	753, 754, 0, 356, 357, 755, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 382, 0,
	383, 384, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 389, 390, 0, 391, 393, 756, 757,
	0, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	758, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 759, 760, 427, 428, 0, 320, 0,
	0, 0, 0, 0, 429, 430, 431, 761, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	0, 438, 439, 440, 762, 763, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 764, 0, 765,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 1694,
	767, 768, 554, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 322, 321, 323, 0, 769, 471, 555, 472, 770,
	771, 0, 772, 0, 473, 474, 476, 0, 773, 0,
	475, 477, 478, 0, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 774, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 497, 498, 499, 502, 0, 0, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 0, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 0, 547, 534, 0, 535,
	324, 0, 549, 550, 551, 552, 0, 775, 553, 776,
	556, 557, 0, 0, 558, 0, 559, 0, 1425, 561,
	562, 563, 0, 0, 564, 565, 777, 0, 566, 0,
	778, 567, 568, 560, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 781, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 783, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 0, 629, 630, 631, 632, 633, 784, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 651, 653, 652, 0, 655, 656, 654,
	657, 658, 659, 0, 660, 785, 661, 641, 642, 662,
	663, 0, 664, 665, 666, 667, 668, 669, 670, 786,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 787, 681, 682, 683, 684, 788,
	688, 689, 690, 691, 0, 692, 693, 0, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 789, 790, 791, 792, 0, 714, 0, 703,
	705, 706, 707, 708, 793, 709, 794, 0, 710, 711,
	712, 713, 704, 715, 716, 0, 0, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 0, 726, 0, 0,
	727, 728, 729, 795, 796, 797, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 1689,
	0, 317, 0, 741, 742, 799, 743, 744, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	328, 327, 329, 330, 331, 332, 0, 333, 334, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 335, 0,
	336, 337, 338, 0, 339, 340, 341, 342, 343, 344,
	345, 747, 748, 0, 346, 749, 347, 750, 0, 751,
	348, 349, 350, 351, 352, 353, 354, 0, 0, 0,
	355, 752, 753, 754, 0, 356, 357, 755, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	0, 367, 368, 369, 366, 370, 371, 0, 372, 0,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	382, 0, 383, 384, 385, 0, 0, 0, 0, 0,
	0, 0, 386, 387, 388, 389, 390, 0, 391, 393,
	756, 757, 0, 396, 398, 392, 394, 0, 397, 395,
	399, 400, 0, 401, 402, 403, 0, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	413, 414, 758, 415, 416, 417, 419, 421, 418, 420,
	422, 423, 424, 425, 426, 759, 760, 427, 428, 0,
	320, 0, 0, 0, 0, 0, 429, 430, 431, 761,
	0, 0, 0, 432, 0, 433, 434, 435, 0, 436,
	437, 0, 0, 438, 439, 440, 762, 763, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 764,
	0, 765, 451, 0, 452, 453, 454, 455, 456, 457,
	458, 1691, 767, 768, 554, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 466, 0, 0, 0, 467, 468,
	469, 470, 0, 322, 321, 323, 0, 769, 471, 555,
	472, 770, 771, 0, 772, 0, 473, 474, 476, 0,
	773, 0, 475, 477, 478, 0, 479, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 489,
	488, 0, 491, 774, 490, 0, 492, 493, 0, 0,
	494, 495, 496, 497, 498, 499, 502, 0, 0, 500,
	501, 503, 504, 0, 505, 506, 508, 511, 507, 509,
	510, 512, 525, 526, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 528, 0, 527, 0,
	529, 530, 531, 532, 533, 541, 543, 544, 539, 540,
	542, 545, 546, 548, 536, 537, 538, 0, 547, 534,
	0, 535, 324, 0, 549, 550, 551, 552, 0, 775,
	553, 776, 556, 557, 0, 0, 558, 0, 559, 0,
	1425, 561, 562, 563, 0, 0, 564, 565, 777, 0,
	566, 0, 778, 567, 568, 560, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 779,
	581, 582, 583, 780, 584, 585, 586, 781, 587, 782,
	588, 589, 0, 590, 591, 592, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 783, 601, 602, 604, 603,
	605, 0, 606, 0, 607, 608, 609, 0, 0, 0,
	0, 0, 610, 611, 613, 0, 614, 615, 616, 617,
	612, 618, 619, 620, 621, 622, 623, 0, 625, 626,
	624, 627, 628, 0, 629, 630, 631, 632, 633, 784,
	634, 0, 635, 636, 644, 645, 646, 637, 638, 640,
	647, 639, 648, 649, 650, 651, 653, 652, 0, 655,
	656, 654, 657, 658, 659, 0, 660, 785, 661, 641,
	642, 662, 663, 0, 664, 665, 666, 667, 668, 669,
	670, 786, 0, 671, 0, 672, 673, 674, 675, 676,
	677, 679, 643, 680, 685, 686, 787, 681, 682, 683,
	684, 788, 688, 689, 690, 691, 0, 692, 693, 0,
	687, 678, 0, 694, 695, 696, 697, 698, 699, 0,
	700, 701, 0, 702, 789, 790, 791, 792, 0, 714,
	0, 703, 705, 706, 707, 708, 793, 709, 794, 0,
	710, 711, 712, 713, 704, 715, 716, 0, 0, 717,
	718, 719, 721, 723, 724, 720, 722, 725, 0, 726,
	0, 0, 727, 728, 729, 795, 796, 797, 0, 731,
	732, 730, 733, 734, 737, 735, 736, 798, 738, 739,
	740, 1595, 0, 317, 0, 741, 742, 799, 743, 744,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 320, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 1597, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 322, 321, 323, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 324, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 1425, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 317, 0, 0, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 320, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 322, 321, 323, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 324, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 1425, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 317, 0, 0, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 320, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 322, 321, 323, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 4024,
	547, 534, 0, 535, 324, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 3526, 0, 317, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 3525, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 322, 321, 323,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 324, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 3308, 356,
	357, 755, 0, 0, 3302, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 3304, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 3312, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 3311, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 3301, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 3310, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 3309, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 2679, 0, 317, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 328, 327, 329, 330,
	331, 332, 0, 333, 334, 0, 0, 0, 0, 0,
	746, 0, 0, 0, 335, 0, 336, 337, 338, 0,
	339, 340, 341, 342, 343, 344, 345, 747, 748, 0,
	346, 749, 347, 750, 0, 751, 348, 349, 350, 351,
	352, 353, 354, 0, 0, 0, 355, 752, 753, 754,
	0, 356, 357, 755, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 0, 367, 368, 369,
	366, 370, 371, 0, 372, 0, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 382, 0, 383, 384,
	385, 0, 0, 0, 0, 0, 0, 0, 386, 387,
	388, 389, 390, 0, 391, 393, 756, 757, 0, 396,
	398, 392, 394, 0, 397, 395, 399, 400, 0, 401,
	402, 403, 0, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 413, 414, 758, 415,
	416, 417, 419, 421, 418, 420, 422, 423, 424, 425,
	426, 759, 760, 427, 428, 0, 320, 0, 0, 0,
	0, 0, 429, 430, 431, 761, 0, 0, 0, 432,
	0, 433, 434, 435, 0, 436, 437, 0, 0, 438,
	439, 440, 762, 763, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 764, 0, 765, 451, 0,
	452, 453, 454, 455, 456, 457, 458, 766, 767, 768,
	554, 0, 459, 460, 461, 0, 462, 463, 464, 465,
	466, 0, 0, 0, 467, 468, 469, 470, 0, 322,
	321, 323, 0, 769, 471, 555, 472, 770, 771, 0,
	772, 0, 473, 474, 476, 0, 773, 0, 475, 477,
	478, 0, 479, 0, 0, 0, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 489, 488, 0, 491, 774,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 497,
	498, 499, 502, 0, 0, 500, 501, 503, 504, 0,
	505, 506, 508, 511, 507, 509, 510, 512, 525, 526,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 528, 0, 527, 0, 529, 530, 531, 532,
	533, 541, 543, 544, 539, 540, 542, 545, 546, 548,
	536, 537, 538, 0, 547, 534, 0, 535, 324, 0,
	549, 550, 551, 552, 0, 775, 553, 776, 556, 557,
	0, 0, 558, 0, 559, 0, 0, 561, 562, 563,
	0, 0, 564, 565, 777, 0, 566, 0, 778, 567,
	568, 560, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 779, 581, 582, 583, 780,
	584, 585, 586, 781, 587, 782, 588, 589, 0, 590,
	591, 592, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 783, 601, 602, 604, 603, 605, 0, 606, 0,
	607, 608, 609, 0, 0, 0, 0, 0, 610, 611,
	613, 0, 614, 615, 616, 617, 612, 618, 619, 620,
	621, 622, 623, 0, 625, 626, 624, 627, 628, 0,
	629, 630, 631, 632, 633, 784, 634, 0, 635, 636,
	644, 645, 646, 637, 638, 640, 647, 639, 648, 649,
	650, 651, 653, 652, 0, 655, 656, 654, 657, 658,
	659, 0, 660, 785, 661, 641, 642, 662, 663, 0,
	664, 665, 666, 667, 668, 669, 670, 786, 0, 671,
	0, 672, 673, 674, 675, 676, 677, 679, 643, 680,
	685, 686, 787, 681, 682, 683, 684, 788, 688, 689,
	690, 691, 0, 692, 693, 0, 687, 678, 0, 694,
	695, 696, 697, 698, 699, 0, 700, 701, 0, 702,
	789, 790, 791, 792, 0, 714, 0, 703, 705, 706,
	707, 708, 793, 709, 794, 0, 710, 711, 712, 713,
	704, 715, 716, 0, 0, 717, 718, 719, 721, 723,
	724, 720, 722, 725, 0, 726, 0, 0, 727, 728,
	729, 795, 796, 797, 0, 731, 732, 730, 733, 734,
	737, 735, 736, 798, 738, 739, 740, 2623, 0, 317,
	0, 741, 742, 799, 743, 744, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 328, 327,
	329, 330, 331, 332, 0, 333, 334, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 335, 0, 336, 337,
	338, 0, 339, 340, 341, 342, 343, 344, 345, 747,
	748, 0, 346, 749, 347, 750, 0, 751, 348, 349,
	350, 351, 352, 353, 354, 0, 0, 0, 355, 752,
	753, 754, 0, 356, 357, 755, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 382, 0,
	383, 384, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 389, 390, 0, 391, 393, 756, 757,
	0, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	758, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 759, 760, 427, 428, 0, 320, 0,
	0, 0, 0, 0, 429, 430, 431, 761, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	0, 438, 439, 440, 762, 763, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 764, 0, 765,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 2622,
	767, 768, 554, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 322, 321, 323, 0, 769, 471, 555, 472, 770,
	771, 0, 772, 0, 473, 474, 476, 0, 773, 0,
	475, 477, 478, 0, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 774, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 497, 498, 499, 502, 0, 0, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 0, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 0, 547, 534, 0, 535,
	324, 0, 549, 550, 551, 552, 0, 775, 553, 776,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 0, 566, 0,
	778, 567, 568, 560, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 781, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 783, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 0, 629, 630, 631, 632, 633, 784, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 651, 653, 652, 0, 655, 656, 654,
	657, 658, 659, 0, 660, 785, 661, 641, 642, 662,
	663, 0, 664, 665, 666, 667, 668, 669, 670, 786,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 787, 681, 682, 683, 684, 788,
	688, 689, 690, 691, 0, 692, 693, 0, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 789, 790, 791, 792, 0, 714, 0, 703,
	705, 706, 707, 708, 793, 709, 794, 0, 710, 711,
	712, 713, 704, 715, 716, 0, 0, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 0, 726, 0, 0,
	727, 728, 729, 795, 796, 797, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 2607,
	0, 317, 0, 741, 742, 799, 743, 744, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	328, 327, 329, 330, 331, 332, 0, 333, 334, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 335, 0,
	336, 337, 338, 0, 339, 340, 341, 342, 343, 344,
	345, 747, 748, 0, 346, 749, 347, 750, 0, 751,
	348, 349, 350, 351, 352, 353, 354, 0, 0, 0,
	355, 752, 753, 754, 0, 356, 357, 755, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	0, 367, 368, 369, 366, 370, 371, 0, 372, 0,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	382, 0, 383, 384, 385, 0, 0, 0, 0, 0,
	0, 0, 386, 387, 388, 389, 390, 0, 391, 393,
	756, 757, 0, 396, 398, 392, 394, 0, 397, 395,
	399, 400, 0, 401, 402, 403, 0, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	413, 414, 758, 415, 416, 417, 419, 421, 418, 420,
	422, 423, 424, 425, 426, 759, 760, 427, 428, 0,
	320, 0, 0, 0, 0, 0, 429, 430, 431, 761,
	0, 0, 0, 432, 0, 433, 434, 435, 0, 436,
	437, 0, 0, 438, 439, 440, 762, 763, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 764,
	0, 765, 451, 0, 452, 453, 454, 455, 456, 457,
	458, 2609, 767, 768, 554, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 466, 0, 0, 0, 467, 468,
	469, 470, 0, 322, 321, 323, 0, 769, 471, 555,
	472, 770, 771, 0, 772, 0, 473, 474, 476, 0,
	773, 0, 475, 477, 478, 0, 479, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 489,
	488, 0, 491, 774, 490, 0, 492, 493, 0, 0,
	494, 495, 496, 497, 498, 499, 502, 0, 0, 500,
	501, 503, 504, 0, 505, 506, 508, 511, 507, 509,
	510, 512, 525, 526, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 528, 0, 527, 0,
	529, 530, 531, 532, 533, 541, 543, 544, 539, 540,
	542, 545, 546, 548, 536, 537, 538, 0, 547, 534,
	0, 535, 324, 0, 549, 550, 551, 552, 0, 775,
	553, 776, 556, 557, 0, 0, 558, 0, 559, 0,
	0, 561, 562, 563, 0, 0, 564, 565, 777, 0,
	566, 0, 778, 567, 568, 560, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 779,
	581, 582, 583, 780, 584, 585, 586, 781, 587, 782,
	588, 589, 0, 590, 591, 592, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 783, 601, 602, 604, 603,
	605, 0, 606, 0, 607, 608, 609, 0, 0, 0,
	0, 0, 610, 611, 613, 0, 614, 615, 616, 617,
	612, 618, 619, 620, 621, 622, 623, 0, 625, 626,
	624, 627, 628, 0, 629, 630, 631, 632, 633, 784,
	634, 0, 635, 636, 644, 645, 646, 637, 638, 640,
	647, 639, 648, 649, 650, 651, 653, 652, 0, 655,
	656, 654, 657, 658, 659, 0, 660, 785, 661, 641,
	642, 662, 663, 0, 664, 665, 666, 667, 668, 669,
	670, 786, 0, 671, 0, 672, 673, 674, 675, 676,
	677, 679, 643, 680, 685, 686, 787, 681, 682, 683,
	684, 788, 688, 689, 690, 691, 0, 692, 693, 0,
	687, 678, 0, 694, 695, 696, 697, 698, 699, 0,
	700, 701, 0, 702, 789, 790, 791, 792, 0, 714,
	0, 703, 705, 706, 707, 708, 793, 709, 794, 0,
	710, 711, 712, 713, 704, 715, 716, 0, 0, 717,
	718, 719, 721, 723, 724, 720, 722, 725, 0, 726,
	0, 0, 727, 728, 729, 795, 796, 797, 0, 731,
	732, 730, 733, 734, 737, 735, 736, 798, 738, 739,
	740, 2598, 0, 317, 0, 741, 742, 799, 743, 744,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 320, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 322, 321, 323, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 324, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 317, 0, 0, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 320, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 2568, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 322, 321, 323, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 324, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 1425, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 1826, 0, 317, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 1825, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 322, 321, 323,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 324, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 1714, 0, 317, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 328, 327, 329, 330,
	331, 332, 0, 333, 334, 0, 0, 0, 0, 0,
	746, 0, 0, 0, 335, 0, 336, 337, 338, 0,
	339, 340, 341, 342, 343, 344, 345, 747, 748, 0,
	346, 749, 347, 750, 0, 751, 348, 349, 350, 351,
	352, 353, 354, 0, 0, 0, 355, 752, 753, 754,
	0, 356, 357, 755, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 0, 367, 368, 369,
	366, 370, 371, 0, 372, 0, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 382, 0, 383, 384,
	385, 0, 0, 0, 0, 0, 0, 0, 386, 387,
	388, 389, 390, 0, 391, 393, 756, 757, 0, 396,
	398, 392, 394, 0, 397, 395, 399, 400, 0, 401,
	402, 403, 0, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 413, 414, 758, 415,
	416, 417, 419, 421, 418, 420, 422, 423, 424, 425,
	426, 759, 760, 427, 428, 0, 320, 0, 0, 0,
	0, 0, 429, 430, 431, 761, 0, 0, 0, 432,
	0, 433, 434, 435, 0, 436, 437, 0, 0, 438,
	439, 440, 762, 763, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 764, 0, 765, 451, 0,
	452, 453, 454, 455, 456, 457, 458, 766, 767, 768,
	554, 0, 459, 460, 461, 0, 462, 463, 464, 465,
	466, 0, 0, 0, 467, 468, 469, 470, 0, 322,
	321, 323, 0, 769, 471, 555, 472, 770, 771, 0,
	772, 0, 473, 474, 476, 0, 773, 0, 475, 477,
	478, 0, 479, 0, 0, 0, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 489, 488, 0, 491, 774,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 497,
	498, 499, 502, 0, 0, 500, 501, 503, 504, 0,
	505, 506, 508, 511, 507, 509, 510, 512, 525, 526,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 528, 0, 527, 0, 529, 530, 531, 532,
	533, 541, 543, 544, 539, 540, 542, 545, 546, 548,
	536, 537, 538, 0, 547, 534, 0, 535, 324, 0,
	549, 550, 551, 552, 0, 775, 553, 776, 556, 557,
	0, 0, 558, 0, 559, 0, 0, 561, 562, 563,
	0, 0, 564, 565, 777, 0, 566, 0, 778, 567,
	568, 560, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 779, 581, 582, 583, 780,
	584, 585, 586, 781, 587, 782, 588, 589, 0, 590,
	591, 592, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 783, 601, 602, 604, 603, 605, 0, 606, 0,
	607, 608, 609, 0, 0, 0, 0, 0, 610, 611,
	613, 0, 614, 615, 616, 617, 612, 618, 619, 620,
	621, 622, 623, 0, 625, 626, 624, 627, 628, 0,
	629, 630, 631, 632, 633, 784, 634, 0, 635, 636,
	644, 645, 646, 637, 638, 640, 647, 639, 648, 649,
	650, 651, 653, 652, 0, 655, 656, 654, 657, 658,
	659, 0, 660, 785, 661, 641, 642, 662, 663, 0,
	664, 665, 666, 667, 668, 669, 670, 786, 0, 671,
	0, 672, 673, 674, 675, 676, 677, 679, 643, 680,
	685, 686, 787, 681, 682, 683, 684, 788, 688, 689,
	690, 691, 0, 692, 693, 0, 687, 678, 0, 694,
	695, 696, 697, 698, 699, 0, 700, 701, 0, 702,
	789, 790, 791, 792, 0, 714, 0, 703, 705, 706,
	707, 708, 793, 709, 794, 0, 710, 711, 712, 713,
	704, 715, 716, 0, 0, 717, 718, 719, 721, 723,
	724, 720, 722, 725, 0, 726, 0, 0, 727, 728,
	729, 795, 796, 797, 0, 731, 732, 730, 733, 734,
	737, 735, 736, 798, 738, 739, 740, 1707, 0, 317,
	0, 741, 742, 799, 743, 744, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 328, 327,
	329, 330, 331, 332, 0, 333, 334, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 335, 0, 336, 337,
	338, 0, 339, 340, 341, 342, 343, 344, 345, 747,
	748, 0, 346, 749, 347, 750, 0, 751, 348, 349,
	350, 351, 352, 353, 354, 0, 0, 0, 355, 752,
	753, 754, 0, 356, 357, 755, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 382, 0,
	383, 384, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 389, 390, 0, 391, 393, 756, 757,
	0, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	758, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 759, 760, 427, 428, 0, 320, 0,
	0, 0, 0, 0, 429, 430, 431, 761, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	0, 438, 439, 440, 762, 763, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 764, 0, 765,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 1709,
	767, 768, 554, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 322, 321, 323, 0, 769, 471, 555, 472, 770,
	771, 0, 772, 0, 473, 474, 476, 0, 773, 0,
	475, 477, 478, 0, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 774, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 497, 498, 499, 502, 0, 0, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 0, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 0, 547, 534, 0, 535,
	324, 0, 549, 550, 551, 552, 0, 775, 553, 776,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 0, 566, 0,
	778, 567, 568, 560, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 781, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 783, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 0, 629, 630, 631, 632, 633, 784, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 651, 653, 652, 0, 655, 656, 654,
	657, 658, 659, 0, 660, 785, 661, 641, 642, 662,
	663, 0, 664, 665, 666, 667, 668, 669, 670, 786,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 787, 681, 682, 683, 684, 788,
	688, 689, 690, 691, 0, 692, 693, 0, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 789, 790, 791, 792, 0, 714, 0, 703,
	705, 706, 707, 708, 793, 709, 794, 0, 710, 711,
	712, 713, 704, 715, 716, 0, 0, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 0, 726, 0, 0,
	727, 728, 729, 795, 796, 797, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 1697,
	0, 317, 0, 741, 742, 799, 743, 744, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	328, 327, 329, 330, 331, 332, 0, 333, 334, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 335, 0,
	336, 337, 338, 0, 339, 340, 341, 342, 343, 344,
	345, 747, 748, 0, 346, 749, 347, 750, 0, 751,
	348, 349, 350, 351, 352, 353, 354, 0, 0, 0,
	355, 752, 753, 754, 0, 356, 357, 755, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	0, 367, 368, 369, 366, 370, 371, 0, 372, 0,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	382, 0, 383, 384, 385, 0, 0, 0, 0, 0,
	0, 0, 386, 387, 388, 389, 390, 0, 391, 393,
	756, 757, 0, 396, 398, 392, 394, 0, 397, 395,
	399, 400, 0, 401, 402, 403, 0, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	413, 414, 758, 415, 416, 417, 419, 421, 418, 420,
	422, 423, 424, 425, 426, 759, 760, 427, 428, 0,
	320, 0, 0, 0, 0, 0, 429, 430, 431, 761,
	0, 0, 0, 432, 0, 433, 434, 435, 0, 436,
	437, 0, 0, 438, 439, 440, 762, 763, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 764,
	0, 765, 451, 0, 452, 453, 454, 455, 456, 457,
	458, 766, 767, 768, 554, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 466, 0, 0, 0, 467, 468,
	469, 470, 0, 322, 321, 323, 0, 769, 471, 555,
	472, 770, 771, 0, 772, 0, 473, 474, 476, 0,
	773, 0, 475, 477, 478, 0, 479, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 489,
	488, 0, 491, 774, 490, 0, 492, 493, 0, 0,
	494, 495, 496, 497, 498, 499, 502, 0, 0, 500,
	501, 503, 504, 0, 505, 506, 508, 511, 507, 509,
	510, 512, 525, 526, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 528, 0, 527, 0,
	529, 530, 531, 532, 533, 541, 543, 544, 539, 540,
	542, 545, 546, 548, 536, 537, 538, 0, 547, 534,
	0, 535, 324, 0, 549, 550, 551, 552, 0, 775,
	553, 776, 556, 557, 0, 0, 558, 0, 559, 0,
	0, 561, 562, 563, 0, 0, 564, 565, 777, 0,
	566, 0, 778, 567, 568, 560, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 779,
	581, 582, 583, 780, 584, 585, 586, 781, 587, 782,
	588, 589, 0, 590, 591, 592, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 783, 601, 602, 604, 603,
	605, 0, 606, 0, 607, 608, 609, 0, 0, 0,
	0, 0, 610, 611, 613, 0, 614, 615, 616, 617,
	612, 618, 619, 620, 621, 622, 623, 0, 625, 626,
	624, 627, 628, 0, 629, 630, 631, 632, 633, 784,
	634, 0, 635, 636, 644, 645, 646, 637, 638, 640,
	647, 639, 648, 649, 650, 651, 653, 652, 0, 655,
	656, 654, 657, 658, 659, 0, 660, 785, 661, 641,
	642, 662, 663, 0, 664, 665, 666, 667, 668, 669,
	670, 786, 0, 671, 0, 672, 673, 674, 675, 676,
	677, 679, 643, 680, 685, 686, 787, 681, 682, 683,
	684, 788, 688, 689, 690, 691, 0, 692, 693, 0,
	687, 678, 0, 694, 695, 696, 697, 698, 699, 0,
	700, 701, 0, 702, 789, 790, 791, 792, 0, 714,
	0, 703, 705, 706, 707, 708, 793, 709, 794, 0,
	710, 711, 712, 713, 704, 715, 716, 0, 0, 717,
	718, 719, 721, 723, 724, 720, 722, 725, 0, 726,
	0, 0, 727, 728, 729, 795, 796, 797, 0, 731,
	732, 730, 733, 734, 737, 735, 736, 798, 738, 739,
	740, 1513, 0, 317, 0, 741, 742, 799, 743, 744,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 320, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 1512, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 322, 321, 323, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 324, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 1502, 0, 317, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 1501, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 322, 321, 323,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 324, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 1498, 0, 317, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 328, 327, 329, 330,
	331, 332, 0, 333, 334, 0, 0, 0, 0, 0,
	746, 0, 0, 0, 335, 0, 336, 337, 338, 0,
	339, 340, 341, 342, 343, 344, 345, 747, 748, 0,
	346, 749, 347, 750, 0, 751, 348, 349, 350, 351,
	352, 353, 354, 0, 0, 0, 355, 752, 753, 754,
	0, 356, 357, 755, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 0, 367, 368, 369,
	366, 370, 371, 0, 372, 0, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 382, 0, 383, 384,
	385, 0, 0, 0, 0, 0, 0, 0, 386, 387,
	388, 389, 390, 0, 391, 393, 756, 757, 0, 396,
	398, 392, 394, 0, 397, 395, 399, 400, 0, 401,
	402, 403, 0, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 413, 414, 758, 415,
	416, 417, 419, 421, 418, 420, 422, 423, 424, 425,
	426, 759, 760, 427, 428, 0, 320, 0, 0, 0,
	0, 0, 429, 430, 431, 761, 0, 0, 0, 432,
	0, 433, 434, 435, 0, 436, 437, 0, 0, 438,
	439, 440, 762, 763, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 764, 0, 765, 451, 0,
	452, 453, 454, 455, 456, 457, 458, 1497, 767, 768,
	554, 0, 459, 460, 461, 0, 462, 463, 464, 465,
	466, 0, 0, 0, 467, 468, 469, 470, 0, 322,
	321, 323, 0, 769, 471, 555, 472, 770, 771, 0,
	772, 0, 473, 474, 476, 0, 773, 0, 475, 477,
	478, 0, 479, 0, 0, 0, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 489, 488, 0, 491, 774,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 497,
	498, 499, 502, 0, 0, 500, 501, 503, 504, 0,
	505, 506, 508, 511, 507, 509, 510, 512, 525, 526,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 528, 0, 527, 0, 529, 530, 531, 532,
	533, 541, 543, 544, 539, 540, 542, 545, 546, 548,
	536, 537, 538, 0, 547, 534, 0, 535, 324, 0,
	549, 550, 551, 552, 0, 775, 553, 776, 556, 557,
	0, 0, 558, 0, 559, 0, 0, 561, 562, 563,
	0, 0, 564, 565, 777, 0, 566, 0, 778, 567,
	568, 560, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 779, 581, 582, 583, 780,
	584, 585, 586, 781, 587, 782, 588, 589, 0, 590,
	591, 592, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 783, 601, 602, 604, 603, 605, 0, 606, 0,
	607, 608, 609, 0, 0, 0, 0, 0, 610, 611,
	613, 0, 614, 615, 616, 617, 612, 618, 619, 620,
	621, 622, 623, 0, 625, 626, 624, 627, 628, 0,
	629, 630, 631, 632, 633, 784, 634, 0, 635, 636,
	644, 645, 646, 637, 638, 640, 647, 639, 648, 649,
	650, 651, 653, 652, 0, 655, 656, 654, 657, 658,
	659, 0, 660, 785, 661, 641, 642, 662, 663, 0,
	664, 665, 666, 667, 668, 669, 670, 786, 0, 671,
	0, 672, 673, 674, 675, 676, 677, 679, 643, 680,
	685, 686, 787, 681, 682, 683, 684, 788, 688, 689,
	690, 691, 0, 692, 693, 0, 687, 678, 0, 694,
	695, 696, 697, 698, 699, 0, 700, 701, 0, 702,
	789, 790, 791, 792, 0, 714, 0, 703, 705, 706,
	707, 708, 793, 709, 794, 0, 710, 711, 712, 713,
	704, 715, 716, 0, 0, 717, 718, 719, 721, 723,
	724, 720, 722, 725, 0, 726, 0, 0, 727, 728,
	729, 795, 796, 797, 0, 731, 732, 730, 733, 734,
	737, 735, 736, 798, 738, 739, 740, 1492, 0, 317,
	0, 741, 742, 799, 743, 744, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 328, 327,
	329, 330, 331, 332, 0, 333, 334, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 335, 0, 336, 337,
	338, 0, 339, 340, 341, 342, 343, 344, 345, 747,
	748, 0, 346, 749, 347, 750, 0, 751, 348, 349,
	350, 351, 352, 353, 354, 0, 0, 0, 355, 752,
	753, 754, 0, 356, 357, 755, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 382, 0,
	383, 384, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 389, 390, 0, 391, 393, 756, 757,
	0, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	758, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 759, 760, 427, 428, 0, 320, 0,
	0, 0, 0, 0, 429, 430, 431, 761, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	0, 438, 439, 440, 762, 763, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 764, 0, 765,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 1491,
	767, 768, 554, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 322, 321, 323, 0, 769, 471, 555, 472, 770,
	771, 0, 772, 0, 473, 474, 476, 0, 773, 0,
	475, 477, 478, 0, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 774, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 497, 498, 499, 502, 0, 0, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 0, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 0, 547, 534, 0, 535,
	324, 0, 549, 550, 551, 552, 0, 775, 553, 776,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 0, 566, 0,
	778, 567, 568, 560, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 781, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 783, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 0, 629, 630, 631, 632, 633, 784, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 651, 653, 652, 0, 655, 656, 654,
	657, 658, 659, 0, 660, 785, 661, 641, 642, 662,
	663, 0, 664, 665, 666, 667, 668, 669, 670, 786,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 787, 681, 682, 683, 684, 788,
	688, 689, 690, 691, 0, 692, 693, 0, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 789, 790, 791, 792, 0, 714, 0, 703,
	705, 706, 707, 708, 793, 709, 794, 0, 710, 711,
	712, 713, 704, 715, 716, 0, 0, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 0, 726, 0, 0,
	727, 728, 729, 795, 796, 797, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 1469,
	0, 317, 0, 741, 742, 799, 743, 744, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	328, 327, 329, 330, 331, 332, 0, 333, 334, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 335, 0,
	336, 337, 338, 0, 339, 340, 341, 342, 343, 344,
	345, 747, 748, 0, 346, 749, 347, 750, 0, 751,
	348, 349, 350, 351, 352, 353, 354, 0, 0, 0,
	355, 752, 753, 754, 0, 356, 357, 755, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	0, 367, 368, 369, 366, 370, 371, 0, 372, 0,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	382, 0, 383, 384, 385, 0, 0, 0, 0, 0,
	0, 0, 386, 387, 388, 389, 390, 0, 391, 393,
	756, 757, 0, 396, 398, 392, 394, 0, 397, 395,
	399, 400, 0, 401, 402, 403, 0, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	413, 414, 758, 415, 416, 417, 419, 421, 418, 420,
	422, 423, 424, 425, 426, 759, 760, 427, 428, 0,
	320, 0, 0, 0, 0, 0, 429, 430, 431, 761,
	0, 0, 0, 432, 0, 433, 434, 435, 0, 436,
	437, 0, 0, 438, 439, 440, 762, 763, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 764,
	0, 765, 451, 0, 452, 453, 454, 455, 456, 457,
	458, 1468, 767, 768, 554, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 466, 0, 0, 0, 467, 468,
	469, 470, 0, 322, 321, 323, 0, 769, 471, 555,
	472, 770, 771, 0, 772, 0, 473, 474, 476, 0,
	773, 0, 475, 477, 478, 0, 479, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 489,
	488, 0, 491, 774, 490, 0, 492, 493, 0, 0,
	494, 495, 496, 497, 498, 499, 502, 0, 0, 500,
	501, 503, 504, 0, 505, 506, 508, 511, 507, 509,
	510, 512, 525, 526, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 528, 0, 527, 0,
	529, 530, 531, 532, 533, 541, 543, 544, 539, 540,
	542, 545, 546, 548, 536, 537, 538, 0, 547, 534,
	0, 535, 324, 0, 549, 550, 551, 552, 0, 775,
	553, 776, 556, 557, 0, 0, 558, 0, 559, 0,
	0, 561, 562, 563, 0, 0, 564, 565, 777, 0,
	566, 0, 778, 567, 568, 560, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 779,
	581, 582, 583, 780, 584, 585, 586, 781, 587, 782,
	588, 589, 0, 590, 591, 592, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 783, 601, 602, 604, 603,
	605, 0, 606, 0, 607, 608, 609, 0, 0, 0,
	0, 0, 610, 611, 613, 0, 614, 615, 616, 617,
	612, 618, 619, 620, 621, 622, 623, 0, 625, 626,
	624, 627, 628, 0, 629, 630, 631, 632, 633, 784,
	634, 0, 635, 636, 644, 645, 646, 637, 638, 640,
	647, 639, 648, 649, 650, 651, 653, 652, 0, 655,
	656, 654, 657, 658, 659, 0, 660, 785, 661, 641,
	642, 662, 663, 0, 664, 665, 666, 667, 668, 669,
	670, 786, 0, 671, 0, 672, 673, 674, 675, 676,
	677, 679, 643, 680, 685, 686, 787, 681, 682, 683,
	684, 788, 688, 689, 690, 691, 0, 692, 693, 0,
	687, 678, 0, 694, 695, 696, 697, 698, 699, 0,
	700, 701, 0, 702, 789, 790, 791, 792, 0, 714,
	0, 703, 705, 706, 707, 708, 793, 709, 794, 0,
	710, 711, 712, 713, 704, 715, 716, 0, 0, 717,
	718, 719, 721, 723, 724, 720, 722, 725, 0, 726,
	0, 0, 727, 728, 729, 795, 796, 797, 0, 731,
	732, 730, 733, 734, 737, 735, 736, 798, 738, 739,
	740, 801, 0, 317, 0, 741, 742, 799, 743, 744,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 320, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 322, 321, 323, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 324, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 308, 0, 317, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 322, 321, 323,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 324, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 322, 321, 323,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 324, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 2722,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 322, 321, 323,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 324, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 2720,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 322, 321, 323,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 324, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 2718,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 322, 321, 323,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 324, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 2630, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 322, 321, 323,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 324, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 2353, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 322, 321, 323,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 324, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 320, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 2347, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 322, 321, 323,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 324, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 834, 0, 317, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 328, 327, 329, 832,
	331, 332, 821, 333, 334, 0, 0, 0, 0, 0,
	746, 0, 0, 0, 335, 0, 336, 337, 338, 0,
	339, 340, 341, 342, 343, 344, 345, 747, 748, 0,
	346, 749, 347, 750, 0, 751, 348, 349, 350, 351,
	352, 353, 354, 0, 0, 0, 355, 752, 753, 754,
	0, 356, 357, 755, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 0, 367, 368, 369,
	366, 370, 371, 0, 372, 0, 373, 374, 375, 376,
	377, 378, 379, 824, 380, 381, 382, 0, 383, 384,
	385, 0, 0, 0, 0, 0, 0, 0, 386, 387,
	388, 389, 390, 0, 391, 393, 756, 757, 0, 396,
	398, 392, 394, 0, 397, 395, 399, 400, 0, 401,
	402, 403, 0, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 413, 414, 758, 415,
	416, 417, 419, 421, 418, 420, 422, 423, 424, 425,
	426, 759, 760, 427, 428, 0, 0, 0, 0, 0,
	0, 0, 429, 430, 431, 761, 0, 0, 0, 432,
	0, 433, 434, 435, 0, 436, 437, 0, 0, 438,
	439, 440, 762, 763, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 830, 450, 764, 0, 765, 451, 0,
	452, 453, 454, 455, 456, 457, 458, 766, 767, 768,
	554, 0, 459, 460, 461, 0, 462, 463, 464, 465,
	466, 0, 0, 0, 467, 468, 469, 470, 0, 0,
	0, 0, 0, 769, 471, 555, 472, 770, 771, 0,
	772, 0, 473, 474, 476, 0, 773, 0, 475, 477,
	478, 0, 479, 0, 0, 0, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 489, 488, 0, 491, 774,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 497,
	498, 499, 502, 0, 0, 500, 501, 503, 504, 0,
	505, 506, 508, 511, 507, 509, 510, 512, 525, 526,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 528, 0, 527, 0, 529, 530, 531, 532,
	533, 541, 543, 544, 539, 540, 542, 545, 546, 548,
	536, 537, 538, 0, 547, 534, 0, 535, 0, 0,
	549, 550, 551, 552, 0, 775, 553, 776, 556, 557,
	0, 0, 558, 0, 559, 0, 0, 561, 562, 563,
	0, 0, 564, 565, 777, 0, 566, 0, 778, 567,
	568, 560, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 779, 581, 582, 583, 780,
	584, 585, 586, 781, 587, 782, 588, 589, 0, 590,
	591, 592, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 783, 601, 602, 604, 603, 605, 0, 606, 0,
	607, 608, 609, 0, 0, 0, 0, 0, 610, 611,
	613, 0, 614, 615, 616, 617, 612, 618, 619, 620,
	621, 622, 623, 0, 625, 626, 624, 627, 628, 0,
	629, 630, 631, 632, 633, 784, 634, 0, 635, 636,
	644, 645, 646, 637, 638, 640, 647, 639, 648, 649,
	650, 651, 653, 652, 826, 655, 656, 654, 657, 658,
	659, 0, 660, 785, 661, 641, 642, 662, 663, 0,
	664, 665, 666, 667, 668, 669, 670, 786, 0, 671,
	0, 672, 673, 674, 675, 676, 677, 679, 643, 680,
	685, 686, 787, 681, 682, 683, 684, 788, 688, 689,
	690, 691, 0, 692, 833, 0, 687, 678, 0, 694,
	695, 696, 697, 698, 699, 0, 700, 701, 0, 702,
	789, 790, 791, 792, 0, 714, 0, 703, 705, 706,
	707, 708, 793, 709, 794, 0, 710, 711, 712, 713,
	704, 715, 716, 0, 0, 717, 718, 719, 721, 723,
	724, 720, 722, 725, 0, 726, 0, 0, 727, 728,
	729, 795, 796, 797, 0, 731, 732, 730, 733, 734,
	737, 735, 736, 798, 738, 739, 740, 820, 0, 317,
	0, 741, 742, 799, 743, 744, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 328, 327,
	329, 330, 331, 332, 821, 333, 334, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 335, 0, 336, 337,
	338, 0, 339, 340, 341, 342, 343, 344, 345, 747,
	748, 0, 346, 749, 347, 750, 0, 751, 348, 349,
	350, 351, 352, 353, 354, 0, 0, 0, 355, 752,
	753, 754, 0, 356, 357, 755, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 824, 380, 381, 382, 0,
	383, 384, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 389, 390, 0, 391, 393, 756, 757,
	0, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	758, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 759, 760, 427, 428, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 431, 761, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	0, 438, 439, 440, 762, 763, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 825, 450, 764, 0, 765,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 766,
	767, 768, 554, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 0, 0, 0, 0, 769, 471, 555, 472, 770,
	771, 0, 772, 0, 473, 474, 476, 0, 773, 0,
	475, 477, 478, 0, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 774, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 497, 498, 499, 502, 0, 0, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 0, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 0, 547, 534, 0, 535,
	0, 0, 549, 550, 551, 552, 0, 775, 553, 776,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 0, 566, 0,
	778, 567, 568, 560, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 781, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 783, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 0, 629, 630, 631, 632, 633, 784, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 651, 653, 652, 826, 655, 656, 654,
	657, 658, 659, 0, 660, 785, 661, 641, 642, 662,
	663, 0, 664, 665, 666, 667, 668, 669, 670, 786,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 787, 681, 682, 683, 684, 788,
	688, 689, 690, 691, 0, 692, 819, 0, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 789, 790, 791, 792, 0, 714, 0, 703,
	705, 706, 707, 708, 793, 709, 794, 0, 710, 711,
	712, 713, 704, 715, 716, 0, 0, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 0, 726, 0, 0,
	727, 728, 729, 795, 796, 797, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 317,
	0, 0, 0, 741, 742, 799, 743, 744, 745, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 328, 327,
	329, 330, 331, 332, 821, 333, 334, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 335, 0, 336, 337,
	338, 0, 339, 340, 341, 342, 343, 344, 345, 747,
	748, 0, 346, 749, 347, 750, 0, 751, 348, 349,
	350, 351, 352, 353, 354, 0, 0, 0, 355, 752,
	753, 754, 0, 356, 357, 755, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 824, 380, 381, 382, 0,
	383, 384, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 389, 390, 0, 391, 393, 756, 757,
	0, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	758, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 759, 760, 427, 428, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 431, 761, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	0, 438, 439, 440, 762, 763, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 825, 450, 764, 0, 765,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 766,
	767, 768, 554, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 0, 0, 0, 0, 769, 471, 555, 472, 770,
	771, 0, 772, 0, 473, 474, 476, 0, 773, 0,
	475, 477, 478, 0, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 774, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 497, 498, 499, 502, 0, 0, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 0, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 0, 547, 534, 0, 535,
	0, 0, 549, 550, 551, 552, 0, 775, 553, 776,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 0, 566, 0,
	778, 567, 568, 560, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 781, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 783, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 0, 629, 630, 631, 632, 633, 784, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 651, 653, 652, 826, 655, 656, 654,
	657, 658, 659, 0, 660, 785, 661, 641, 642, 662,
	663, 0, 664, 665, 666, 667, 668, 669, 670, 786,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 787, 681, 682, 683, 684, 788,
	688, 689, 690, 691, 0, 692, 693, 0, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 789, 790, 791, 792, 0, 714, 0, 703,
	705, 706, 707, 708, 793, 709, 794, 0, 710, 711,
	712, 713, 704, 715, 716, 0, 0, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 0, 726, 0, 0,
	727, 728, 729, 795, 796, 797, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 317,
	0, 0, 0, 741, 742, 799, 743, 744, 745, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 328, 327,
	329, 330, 331, 332, 821, 333, 334, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 335, 0, 336, 337,
	338, 0, 339, 340, 341, 342, 343, 344, 345, 747,
	748, 0, 346, 749, 347, 750, 0, 751, 348, 349,
	350, 351, 352, 353, 354, 0, 0, 0, 355, 752,
	753, 754, 0, 356, 357, 755, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 824, 380, 381, 382, 0,
	383, 384, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 389, 390, 0, 391, 393, 756, 757,
	0, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	758, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 759, 760, 427, 428, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 431, 761, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	0, 438, 439, 440, 762, 763, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 4607, 450, 764, 0, 765,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 766,
	767, 768, 554, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 0, 0, 0, 0, 769, 471, 555, 472, 770,
	771, 0, 772, 0, 473, 474, 476, 0, 773, 0,
	475, 477, 478, 0, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 774, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 497, 498, 499, 502, 0, 0, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 0, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 0, 547, 534, 0, 535,
	0, 0, 549, 550, 551, 552, 0, 775, 553, 776,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 0, 566, 0,
	778, 567, 568, 560, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 781, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 783, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 0, 629, 630, 631, 632, 633, 784, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 651, 653, 652, 826, 655, 656, 654,
	657, 658, 659, 0, 660, 785, 661, 641, 642, 662,
	663, 0, 664, 665, 666, 667, 668, 669, 670, 786,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 787, 681, 682, 683, 684, 788,
	688, 689, 690, 691, 0, 692, 693, 0, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 789, 790, 791, 792, 0, 714, 0, 703,
	705, 706, 707, 708, 793, 709, 794, 0, 710, 711,
	712, 713, 704, 715, 716, 0, 0, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 0, 726, 0, 0,
	727, 728, 729, 795, 796, 797, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 317,
	0, 0, 0, 741, 742, 799, 743, 744, 745, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 328, 327,
	329, 330, 331, 332, 821, 333, 334, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 335, 0, 336, 337,
	338, 0, 339, 340, 341, 342, 343, 344, 345, 747,
	748, 0, 346, 749, 347, 750, 0, 751, 348, 349,
	350, 351, 352, 353, 354, 0, 0, 0, 355, 752,
	753, 754, 0, 356, 357, 755, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 824, 380, 381, 382, 0,
	383, 384, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 389, 390, 0, 391, 393, 756, 757,
	0, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	758, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 759, 760, 427, 428, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 431, 761, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	0, 438, 439, 440, 762, 763, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 825, 450, 764, 0, 765,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 766,
	767, 768, 554, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 0, 0, 0, 0, 769, 471, 555, 472, 770,
	771, 0, 772, 0, 473, 474, 476, 0, 773, 0,
	475, 477, 478, 0, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 774, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 497, 498, 499, 502, 0, 0, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 0, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 0, 547, 534, 0, 535,
	0, 0, 549, 550, 551, 552, 0, 775, 553, 776,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 0, 566, 0,
	778, 567, 568, 560, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 781, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 783, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 0, 629, 630, 631, 632, 633, 784, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 651, 653, 652, 826, 655, 656, 654,
	657, 658, 659, 0, 660, 785, 661, 641, 642, 662,
	663, 0, 664, 665, 666, 667, 668, 669, 670, 786,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 787, 681, 682, 683, 684, 788,
	688, 689, 690, 691, 0, 692, 3228, 0, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 789, 790, 791, 792, 0, 714, 0, 703,
	705, 706, 707, 708, 793, 709, 794, 0, 710, 711,
	712, 713, 704, 715, 716, 0, 0, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 0, 726, 0, 0,
	727, 728, 729, 795, 796, 797, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 317,
	0, 0, 0, 741, 742, 799, 743, 744, 745, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 328, 327,
	329, 330, 331, 332, 0, 333, 334, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 335, 0, 336, 337,
	338, 0, 339, 340, 341, 342, 343, 344, 345, 747,
	748, 0, 346, 749, 347, 750, 0, 751, 348, 349,
	350, 351, 352, 353, 354, 0, 0, 0, 355, 752,
	753, 754, 0, 356, 357, 755, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 824, 380, 381, 382, 0,
	383, 384, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 389, 390, 0, 391, 393, 756, 757,
	0, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	758, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 759, 760, 427, 428, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 431, 761, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	0, 438, 439, 440, 762, 763, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 825, 450, 764, 0, 765,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 766,
	767, 768, 554, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 0, 0, 0, 0, 769, 471, 555, 472, 770,
	771, 0, 772, 0, 473, 474, 476, 0, 773, 0,
	475, 477, 478, 0, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 774, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 497, 498, 499, 502, 0, 0, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 0, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 0, 547, 534, 0, 535,
	0, 0, 549, 550, 551, 552, 0, 775, 553, 776,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 0, 566, 0,
	778, 567, 568, 560, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 781, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 783, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 0, 629, 630, 631, 632, 633, 784, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 651, 653, 652, 826, 655, 656, 654,
	657, 658, 659, 0, 660, 785, 661, 641, 642, 662,
	663, 0, 664, 665, 666, 667, 668, 669, 670, 786,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 787, 681, 682, 683, 684, 788,
	688, 689, 690, 691, 0, 692, 693, 0, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 789, 790, 791, 792, 0, 714, 0, 703,
	705, 706, 707, 708, 793, 709, 794, 0, 710, 711,
	712, 713, 704, 715, 716, 0, 0, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 0, 726, 0, 0,
	727, 728, 729, 795, 796, 797, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 1052,
	0, 317, 0, 741, 742, 799, 743, 744, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	328, 327, 329, 330, 331, 332, 0, 333, 334, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 335, 0,
	336, 337, 338, 0, 339, 340, 341, 342, 343, 344,
	345, 747, 748, 0, 346, 749, 347, 750, 0, 751,
	348, 349, 350, 351, 352, 353, 354, 0, 0, 0,
	355, 752, 753, 754, 0, 356, 357, 755, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	0, 367, 368, 369, 366, 370, 371, 0, 372, 0,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	382, 0, 383, 384, 385, 0, 0, 0, 0, 0,
	0, 0, 386, 387, 388, 389, 390, 0, 391, 393,
	756, 757, 0, 396, 398, 392, 394, 0, 397, 395,
	399, 400, 0, 401, 402, 403, 0, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	413, 414, 758, 415, 416, 417, 419, 421, 418, 420,
	422, 423, 424, 425, 426, 759, 760, 427, 428, 0,
	0, 0, 0, 0, 0, 0, 429, 430, 431, 761,
	0, 0, 0, 432, 0, 433, 434, 435, 0, 436,
	437, 0, 0, 438, 439, 440, 762, 763, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 764,
	0, 765, 451, 0, 452, 453, 454, 455, 456, 457,
	458, 766, 767, 768, 554, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 466, 0, 0, 0, 467, 468,
	469, 470, 0, 0, 0, 0, 0, 769, 471, 555,
	472, 770, 771, 0, 772, 1051, 473, 474, 476, 0,
	773, 0, 475, 477, 478, 0, 479, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 489,
	488, 0, 491, 774, 490, 0, 492, 493, 0, 0,
	494, 495, 496, 497, 498, 499, 502, 0, 0, 500,
	501, 503, 504, 0, 505, 506, 508, 511, 507, 509,
	510, 512, 525, 526, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 528, 0, 527, 0,
	529, 530, 531, 532, 533, 541, 543, 544, 539, 540,
	542, 545, 546, 548, 536, 537, 538, 0, 547, 534,
	0, 535, 0, 0, 549, 550, 551, 552, 0, 775,
	553, 776, 556, 557, 0, 0, 558, 0, 559, 0,
	0, 561, 562, 563, 0, 0, 564, 565, 777, 0,
	566, 0, 778, 567, 568, 560, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 779,
	581, 582, 583, 780, 584, 585, 586, 781, 587, 782,
	588, 589, 0, 590, 591, 592, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 783, 601, 602, 604, 603,
	605, 0, 606, 0, 607, 608, 609, 0, 0, 0,
	0, 0, 610, 611, 613, 0, 614, 615, 616, 617,
	612, 618, 619, 620, 621, 622, 623, 0, 625, 626,
	624, 627, 628, 0, 629, 630, 631, 632, 633, 784,
	634, 0, 635, 636, 644, 645, 646, 637, 638, 640,
	647, 639, 648, 649, 650, 651, 653, 652, 0, 655,
	656, 654, 657, 658, 659, 0, 660, 785, 661, 641,
	642, 662, 663, 0, 664, 665, 666, 667, 668, 669,
	670, 786, 0, 671, 0, 672, 673, 674, 675, 676,
	677, 679, 643, 680, 685, 686, 787, 681, 682, 683,
	684, 788, 688, 689, 690, 691, 0, 692, 693, 0,
	687, 678, 1050, 694, 695, 696, 697, 698, 699, 0,
	700, 701, 0, 702, 789, 790, 791, 792, 0, 714,
	0, 703, 705, 706, 707, 708, 793, 709, 794, 0,
	710, 711, 712, 713, 704, 715, 716, 0, 0, 717,
	718, 719, 721, 723, 724, 720, 722, 725, 0, 726,
	0, 0, 727, 728, 729, 795, 796, 797, 0, 731,
	732, 730, 733, 734, 737, 735, 736, 798, 738, 739,
	740, 924, 0, 317, 0, 741, 742, 799, 743, 744,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 913, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	922, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	915, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 921, 437, 917, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 0, 459, 460,
	461, 918, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 916, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 919, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 0, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 920, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 914, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 907, 0, 317, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 913, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 922, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 915, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 921, 437, 917, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 918, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	916, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 919, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 920, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 914, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 4158, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 4969, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 1540, 0, 317, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 328, 327, 329, 330,
	331, 332, 0, 333, 334, 0, 0, 0, 0, 0,
	746, 0, 0, 0, 335, 0, 336, 337, 338, 1543,
	339, 340, 341, 342, 343, 344, 345, 747, 748, 0,
	346, 749, 347, 750, 0, 751, 348, 349, 350, 351,
	352, 353, 354, 0, 0, 0, 355, 752, 753, 1541,
	0, 356, 357, 755, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 0, 367, 368, 369,
	366, 370, 371, 0, 372, 0, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 382, 0, 383, 384,
	385, 0, 0, 0, 0, 0, 0, 0, 386, 387,
	388, 389, 390, 0, 391, 393, 756, 757, 0, 396,
	398, 392, 394, 0, 397, 395, 399, 400, 0, 401,
	402, 403, 0, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 413, 414, 758, 415,
	416, 417, 419, 421, 418, 420, 422, 423, 424, 425,
	426, 759, 760, 427, 428, 0, 0, 0, 0, 0,
	0, 0, 429, 430, 431, 761, 0, 0, 0, 432,
	0, 433, 434, 435, 0, 436, 437, 0, 0, 438,
	439, 440, 762, 763, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 764, 0, 765, 451, 0,
	452, 453, 454, 455, 456, 457, 458, 766, 767, 768,
	554, 0, 459, 460, 461, 0, 462, 463, 464, 465,
	466, 0, 0, 0, 467, 468, 469, 470, 0, 0,
	0, 0, 0, 769, 471, 555, 472, 770, 771, 0,
	772, 0, 473, 474, 476, 0, 773, 0, 475, 477,
	478, 0, 479, 0, 0, 0, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 489, 488, 0, 491, 774,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 497,
	498, 499, 502, 0, 0, 500, 501, 503, 504, 0,
	505, 506, 508, 511, 507, 509, 510, 512, 525, 526,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 528, 0, 895, 0, 529, 530, 531, 532,
	533, 541, 543, 544, 539, 540, 542, 545, 546, 548,
	536, 537, 538, 0, 547, 534, 0, 535, 0, 0,
	549, 550, 551, 552, 0, 775, 553, 776, 556, 557,
	0, 0, 558, 0, 559, 0, 0, 561, 562, 563,
	0, 0, 564, 565, 777, 0, 566, 0, 778, 567,
	568, 560, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 779, 581, 582, 583, 780,
	584, 585, 586, 781, 587, 782, 588, 589, 0, 590,
	591, 592, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 783, 601, 602, 604, 603, 605, 0, 606, 0,
	607, 608, 609, 0, 0, 0, 0, 0, 610, 611,
	613, 0, 614, 615, 616, 617, 612, 618, 619, 620,
	621, 622, 623, 0, 625, 626, 624, 627, 628, 0,
	894, 630, 631, 632, 633, 784, 634, 0, 635, 636,
	644, 645, 646, 637, 638, 640, 893, 639, 648, 649,
	650, 651, 653, 652, 0, 655, 656, 654, 657, 1544,
	659, 0, 660, 785, 661, 641, 642, 662, 663, 0,
	664, 665, 666, 667, 668, 669, 670, 786, 0, 671,
	0, 672, 673, 674, 675, 676, 677, 679, 643, 680,
	685, 686, 787, 681, 682, 683, 684, 788, 688, 689,
	690, 691, 0, 692, 693, 0, 687, 678, 0, 694,
	695, 696, 697, 698, 699, 0, 700, 701, 0, 702,
	891, 790, 791, 792, 0, 714, 0, 703, 705, 706,
	707, 708, 793, 709, 794, 0, 710, 711, 712, 713,
	704, 715, 716, 0, 0, 717, 718, 719, 721, 723,
	724, 720, 722, 725, 0, 726, 0, 0, 727, 728,
	729, 795, 796, 797, 0, 731, 732, 730, 733, 734,
	737, 735, 736, 798, 738, 739, 740, 1540, 0, 317,
	0, 741, 742, 799, 743, 744, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 328, 327,
	329, 330, 331, 332, 0, 333, 334, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 335, 0, 336, 337,
	338, 1543, 339, 340, 341, 342, 343, 344, 345, 747,
	748, 0, 346, 749, 347, 750, 0, 751, 348, 349,
	350, 351, 352, 353, 354, 0, 0, 0, 355, 752,
	753, 1541, 0, 356, 357, 755, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 382, 0,
	383, 384, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 389, 390, 0, 391, 393, 756, 757,
	0, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	758, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 759, 760, 427, 428, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 431, 761, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	0, 438, 439, 440, 762, 763, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 764, 0, 765,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 766,
	767, 768, 554, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 0, 0, 0, 0, 769, 471, 555, 472, 770,
	771, 0, 772, 0, 473, 474, 476, 0, 773, 0,
	475, 477, 478, 0, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 774, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 497, 498, 499, 502, 0, 0, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 895, 0, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 0, 547, 534, 0, 535,
	0, 0, 549, 550, 551, 552, 0, 775, 553, 776,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 0, 566, 0,
	778, 567, 568, 560, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 781, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 783, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 0, 894, 630, 631, 632, 633, 784, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 893, 639,
	648, 649, 650, 651, 653, 652, 0, 655, 656, 654,
	657, 1544, 659, 0, 660, 785, 661, 641, 642, 662,
	663, 0, 664, 665, 666, 667, 668, 669, 670, 786,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 787, 681, 682, 683, 684, 788,
	688, 689, 690, 691, 0, 692, 693, 0, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 891, 790, 791, 792, 0, 714, 0, 703,
	1542, 706, 707, 708, 793, 709, 794, 0, 710, 711,
	712, 713, 704, 715, 716, 0, 0, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 0, 726, 0, 0,
	727, 728, 729, 795, 796, 797, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 902,
	0, 317, 0, 741, 742, 799, 743, 744, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	328, 327, 329, 330, 331, 332, 900, 333, 334, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 335, 0,
	336, 337, 338, 0, 339, 340, 341, 342, 343, 344,
	345, 747, 748, 0, 346, 749, 347, 750, 0, 751,
	348, 349, 350, 351, 352, 353, 354, 0, 0, 0,
	355, 752, 753, 754, 0, 356, 357, 755, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	0, 367, 368, 369, 366, 370, 371, 0, 372, 0,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	382, 0, 383, 384, 385, 0, 0, 0, 0, 0,
	0, 0, 386, 387, 388, 389, 390, 0, 391, 393,
	756, 757, 0, 396, 398, 392, 394, 0, 397, 395,
	399, 400, 0, 401, 402, 403, 0, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	413, 414, 758, 415, 416, 417, 419, 421, 418, 420,
	422, 423, 424, 425, 426, 759, 760, 427, 428, 0,
	0, 0, 0, 0, 0, 0, 429, 430, 431, 761,
	0, 0, 0, 432, 0, 433, 434, 435, 0, 436,
	437, 0, 0, 438, 439, 440, 762, 763, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 764,
	0, 765, 451, 0, 452, 453, 454, 455, 456, 457,
	458, 766, 767, 768, 554, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 466, 0, 0, 0, 467, 468,
	469, 470, 0, 0, 0, 0, 0, 769, 471, 555,
	472, 770, 771, 0, 772, 0, 473, 474, 476, 0,
	773, 0, 475, 477, 478, 0, 479, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 489,
	488, 0, 491, 774, 490, 0, 492, 493, 0, 0,
	494, 495, 496, 497, 498, 499, 502, 0, 0, 500,
	501, 503, 504, 0, 505, 506, 508, 511, 507, 509,
	510, 512, 525, 526, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 528, 0, 527, 0,
	529, 530, 531, 532, 533, 541, 543, 544, 539, 540,
	542, 545, 546, 548, 536, 537, 538, 0, 547, 534,
	0, 535, 0, 0, 549, 550, 551, 552, 0, 775,
	553, 776, 556, 557, 0, 0, 558, 0, 559, 0,
	0, 561, 562, 563, 0, 0, 564, 565, 777, 0,
	566, 0, 778, 567, 568, 560, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 779,
	581, 582, 583, 780, 584, 585, 586, 781, 587, 782,
	588, 589, 0, 590, 591, 592, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 783, 601, 602, 604, 603,
	605, 0, 606, 0, 607, 608, 609, 0, 0, 0,
	0, 0, 610, 611, 613, 0, 614, 615, 616, 617,
	612, 618, 619, 620, 621, 622, 623, 0, 625, 626,
	624, 627, 628, 0, 629, 630, 631, 632, 633, 784,
	634, 0, 635, 636, 644, 645, 646, 637, 638, 640,
	647, 639, 648, 649, 650, 651, 653, 652, 0, 655,
	656, 654, 657, 658, 659, 0, 660, 785, 661, 641,
	642, 662, 663, 0, 664, 665, 666, 667, 668, 669,
	670, 786, 0, 671, 0, 672, 673, 674, 675, 676,
	677, 679, 643, 680, 685, 686, 787, 681, 682, 683,
	684, 788, 688, 689, 690, 691, 0, 692, 693, 0,
	687, 678, 0, 694, 695, 696, 697, 698, 699, 0,
	700, 701, 0, 702, 789, 790, 791, 792, 0, 714,
	0, 703, 705, 706, 707, 708, 793, 709, 794, 0,
	710, 711, 712, 713, 704, 715, 716, 0, 0, 717,
	718, 719, 721, 723, 724, 720, 722, 725, 0, 726,
	0, 0, 727, 728, 729, 795, 796, 797, 0, 731,
	732, 730, 733, 734, 737, 735, 736, 798, 738, 739,
	740, 810, 0, 317, 0, 741, 742, 799, 743, 744,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 809, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 0, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 808, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 317, 3438, 0, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 0, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 317, 0, 0, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 0, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 5294, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 317, 3964, 0, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 0, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 317, 0, 0, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 0, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 4843, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 317, 0, 0, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 4531, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 0, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 317, 0, 0, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 3166, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 0, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 317, 0, 0, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 3157, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 0, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 317, 3438, 0, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 0, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 3518, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 317, 0, 0, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 0, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 2507, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 894, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 893, 639, 648, 649, 650, 651, 3387, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 891, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 317, 0, 0, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 2691, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 0, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 2677, 0, 317, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 1882, 0, 317, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 328, 327, 329, 330,
	331, 332, 0, 333, 334, 0, 0, 0, 0, 0,
	746, 0, 0, 0, 335, 0, 336, 337, 338, 0,
	339, 340, 341, 342, 343, 344, 345, 747, 748, 0,
	346, 749, 347, 750, 0, 751, 348, 349, 350, 351,
	352, 353, 354, 0, 0, 0, 355, 752, 753, 754,
	0, 356, 357, 755, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 0, 367, 368, 369,
	366, 370, 371, 0, 372, 0, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 382, 0, 383, 384,
	385, 0, 0, 0, 0, 0, 0, 0, 386, 387,
	388, 389, 390, 0, 391, 393, 756, 757, 0, 396,
	398, 392, 394, 0, 397, 395, 399, 400, 0, 401,
	402, 403, 0, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 413, 414, 758, 415,
	416, 417, 419, 421, 418, 420, 422, 423, 424, 425,
	426, 759, 760, 427, 428, 0, 0, 0, 0, 0,
	0, 0, 429, 430, 431, 761, 0, 0, 0, 432,
	0, 433, 434, 435, 0, 436, 437, 0, 0, 438,
	439, 440, 762, 763, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 764, 0, 765, 451, 0,
	452, 453, 454, 455, 456, 457, 458, 766, 767, 768,
	554, 0, 459, 460, 461, 0, 462, 463, 464, 465,
	466, 0, 0, 0, 467, 468, 469, 470, 0, 0,
	0, 0, 0, 769, 471, 555, 472, 770, 771, 0,
	772, 0, 473, 474, 476, 0, 773, 0, 475, 477,
	478, 0, 479, 0, 0, 0, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 489, 488, 0, 491, 774,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 497,
	498, 499, 502, 0, 0, 500, 501, 503, 504, 0,
	505, 506, 508, 511, 507, 509, 510, 512, 525, 526,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 528, 0, 527, 0, 529, 530, 531, 532,
	533, 541, 543, 544, 539, 540, 542, 545, 546, 548,
	536, 537, 538, 0, 547, 534, 0, 535, 0, 0,
	549, 550, 551, 552, 0, 775, 553, 776, 556, 557,
	0, 0, 558, 0, 559, 0, 0, 561, 562, 563,
	0, 0, 564, 565, 777, 0, 566, 0, 778, 567,
	568, 560, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 779, 581, 582, 583, 780,
	584, 585, 586, 781, 587, 782, 588, 589, 0, 590,
	591, 592, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 783, 601, 602, 604, 603, 605, 0, 606, 0,
	607, 608, 609, 0, 0, 0, 0, 0, 610, 611,
	613, 0, 614, 615, 616, 617, 612, 618, 619, 620,
	621, 622, 623, 0, 625, 626, 624, 627, 628, 0,
	629, 630, 631, 632, 633, 784, 634, 0, 635, 636,
	644, 645, 646, 637, 638, 640, 647, 639, 648, 649,
	650, 651, 653, 652, 0, 655, 656, 654, 657, 658,
	659, 0, 660, 785, 661, 641, 642, 662, 663, 0,
	664, 665, 666, 667, 668, 669, 670, 786, 0, 671,
	0, 672, 673, 674, 675, 676, 677, 679, 643, 680,
	685, 686, 787, 681, 682, 683, 684, 788, 688, 689,
	690, 691, 0, 692, 693, 0, 687, 678, 0, 694,
	695, 696, 697, 698, 699, 0, 700, 701, 0, 702,
	789, 790, 791, 792, 0, 714, 0, 703, 705, 706,
	707, 708, 793, 709, 794, 0, 710, 711, 712, 713,
	704, 715, 716, 0, 0, 717, 718, 719, 721, 723,
	724, 720, 722, 725, 0, 726, 0, 0, 727, 728,
	729, 795, 796, 797, 0, 731, 732, 730, 733, 734,
	737, 735, 736, 798, 738, 739, 740, 1874, 0, 317,
	0, 741, 742, 799, 743, 744, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 328, 327,
	329, 330, 331, 332, 0, 333, 334, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 335, 0, 336, 337,
	338, 0, 339, 340, 341, 342, 343, 344, 345, 747,
	748, 0, 346, 749, 347, 750, 0, 751, 348, 349,
	350, 351, 352, 353, 354, 0, 0, 0, 355, 752,
	753, 754, 0, 356, 357, 755, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 382, 0,
	383, 384, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 389, 390, 0, 391, 393, 756, 757,
	0, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	758, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 759, 760, 427, 428, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 431, 761, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	0, 438, 439, 440, 762, 763, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 764, 0, 765,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 766,
	767, 768, 554, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 0, 0, 0, 0, 769, 471, 555, 472, 770,
	771, 0, 772, 0, 473, 474, 476, 0, 773, 0,
	475, 477, 478, 0, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 774, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 497, 498, 499, 502, 0, 0, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 0, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 0, 547, 534, 0, 535,
	0, 0, 549, 550, 551, 552, 0, 775, 553, 776,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 0, 566, 0,
	778, 567, 568, 560, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 781, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 783, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 0, 629, 630, 631, 632, 633, 784, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 651, 653, 652, 0, 655, 656, 654,
	657, 658, 659, 0, 660, 785, 661, 641, 642, 662,
	663, 0, 664, 665, 666, 667, 668, 669, 670, 786,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 787, 681, 682, 683, 684, 788,
	688, 689, 690, 691, 0, 692, 693, 0, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 789, 790, 791, 792, 0, 714, 0, 703,
	705, 706, 707, 708, 793, 709, 794, 0, 710, 711,
	712, 713, 704, 715, 716, 0, 0, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 0, 726, 0, 0,
	727, 728, 729, 795, 796, 797, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 885,
	0, 317, 0, 741, 742, 799, 743, 744, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	328, 327, 329, 330, 331, 332, 0, 333, 334, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 335, 0,
	336, 337, 338, 0, 339, 340, 341, 342, 343, 344,
	345, 747, 748, 0, 346, 749, 347, 750, 0, 751,
	348, 349, 350, 351, 352, 353, 354, 0, 0, 0,
	355, 752, 753, 754, 0, 356, 881, 755, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	0, 367, 368, 369, 366, 370, 371, 0, 372, 0,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	382, 0, 383, 384, 385, 0, 0, 0, 0, 0,
	0, 0, 386, 387, 388, 389, 390, 0, 391, 393,
	756, 757, 0, 396, 398, 392, 394, 0, 397, 395,
	399, 400, 0, 401, 402, 403, 0, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	413, 414, 758, 415, 416, 417, 419, 421, 418, 420,
	422, 423, 424, 425, 426, 759, 760, 427, 428, 0,
	0, 0, 0, 0, 0, 0, 429, 430, 431, 761,
	0, 0, 0, 432, 0, 433, 434, 435, 0, 436,
	437, 0, 0, 438, 439, 440, 762, 763, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 764,
	0, 765, 451, 0, 452, 453, 454, 455, 456, 457,
	458, 766, 767, 768, 554, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 466, 0, 0, 0, 467, 468,
	469, 470, 0, 0, 0, 0, 0, 769, 471, 555,
	472, 770, 771, 0, 772, 0, 473, 474, 476, 0,
	773, 0, 475, 477, 478, 0, 479, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 489,
	488, 0, 491, 774, 490, 0, 492, 493, 0, 0,
	494, 495, 496, 497, 498, 886, 502, 0, 0, 500,
	501, 503, 504, 0, 505, 506, 508, 511, 507, 509,
	510, 512, 525, 526, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 528, 0, 895, 0,
	529, 530, 531, 532, 533, 541, 543, 544, 539, 540,
	542, 545, 546, 548, 536, 537, 538, 0, 547, 534,
	0, 535, 0, 0, 549, 550, 551, 552, 0, 775,
	553, 776, 556, 557, 0, 0, 558, 0, 559, 0,
	0, 561, 562, 563, 0, 0, 564, 565, 777, 0,
	566, 0, 778, 567, 568, 560, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 779,
	581, 582, 583, 780, 584, 585, 586, 781, 587, 782,
	588, 589, 0, 590, 591, 592, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 783, 601, 602, 604, 603,
	605, 0, 606, 0, 607, 608, 609, 0, 0, 0,
	0, 0, 610, 611, 613, 0, 614, 615, 616, 617,
	612, 618, 619, 620, 621, 622, 623, 0, 625, 626,
	624, 627, 628, 0, 894, 630, 631, 632, 633, 784,
	634, 0, 635, 636, 644, 645, 646, 637, 638, 640,
	893, 639, 648, 649, 650, 651, 653, 652, 0, 655,
	656, 654, 657, 1859, 659, 0, 660, 785, 661, 641,
	642, 662, 663, 0, 664, 665, 666, 667, 668, 669,
	670, 786, 0, 671, 0, 672, 673, 674, 675, 676,
	677, 679, 643, 680, 685, 686, 787, 681, 682, 683,
	684, 788, 688, 689, 690, 691, 0, 692, 693, 0,
	687, 678, 0, 694, 695, 696, 697, 698, 699, 0,
	700, 701, 0, 702, 891, 790, 791, 792, 0, 714,
	0, 703, 705, 706, 707, 708, 793, 709, 794, 0,
	710, 711, 712, 713, 704, 715, 716, 0, 0, 717,
	718, 719, 721, 723, 724, 720, 722, 725, 0, 726,
	0, 0, 727, 728, 729, 795, 796, 797, 0, 731,
	732, 730, 733, 734, 737, 735, 736, 798, 738, 739,
	740, 1832, 0, 317, 0, 741, 742, 799, 743, 744,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 1831, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 0, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 1815, 0, 317, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 1813, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 1807, 0, 317, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 328, 327, 329, 330,
	331, 332, 0, 333, 334, 0, 0, 0, 0, 0,
	746, 0, 0, 0, 335, 0, 336, 337, 338, 0,
	339, 340, 341, 342, 343, 344, 345, 747, 748, 0,
	346, 749, 347, 750, 0, 751, 348, 349, 350, 351,
	352, 353, 354, 0, 0, 0, 355, 752, 753, 754,
	0, 356, 357, 755, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 0, 367, 368, 369,
	366, 370, 371, 0, 372, 0, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 382, 0, 383, 384,
	385, 0, 0, 0, 0, 0, 0, 0, 386, 387,
	388, 389, 390, 0, 391, 393, 756, 757, 0, 396,
	398, 392, 394, 0, 397, 395, 399, 400, 0, 401,
	402, 403, 0, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 413, 414, 758, 415,
	416, 417, 419, 421, 418, 420, 422, 423, 424, 425,
	426, 759, 760, 427, 428, 0, 0, 0, 0, 0,
	0, 0, 429, 430, 431, 761, 0, 0, 0, 432,
	0, 433, 434, 435, 0, 436, 437, 0, 0, 438,
	439, 440, 762, 763, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 764, 0, 765, 451, 0,
	452, 453, 454, 455, 456, 457, 458, 766, 767, 768,
	554, 0, 459, 460, 461, 0, 462, 463, 464, 465,
	466, 0, 0, 0, 467, 468, 469, 470, 0, 0,
	0, 0, 0, 769, 471, 555, 472, 770, 771, 0,
	772, 0, 473, 474, 476, 0, 773, 0, 475, 477,
	478, 0, 479, 0, 0, 0, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 489, 488, 0, 491, 774,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 497,
	498, 499, 502, 0, 0, 500, 501, 503, 504, 0,
	505, 506, 508, 511, 507, 509, 510, 512, 525, 526,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 528, 0, 527, 0, 529, 530, 531, 532,
	533, 541, 543, 544, 539, 540, 542, 545, 546, 548,
	536, 537, 538, 0, 547, 534, 0, 535, 0, 0,
	549, 550, 551, 552, 0, 775, 553, 776, 556, 557,
	0, 0, 558, 0, 559, 0, 0, 561, 562, 563,
	0, 0, 564, 565, 777, 0, 566, 0, 778, 567,
	568, 560, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 779, 581, 582, 583, 780,
	584, 585, 586, 781, 587, 782, 588, 589, 0, 590,
	591, 592, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 783, 601, 602, 604, 603, 605, 0, 606, 0,
	607, 608, 609, 0, 0, 0, 0, 0, 610, 611,
	613, 0, 614, 615, 616, 617, 612, 618, 619, 620,
	621, 622, 623, 0, 625, 626, 624, 627, 628, 0,
	629, 630, 631, 632, 633, 784, 634, 0, 635, 636,
	644, 645, 646, 637, 638, 640, 647, 639, 648, 649,
	650, 651, 653, 652, 0, 655, 656, 654, 657, 658,
	659, 0, 660, 785, 661, 641, 642, 662, 663, 0,
	664, 665, 666, 667, 668, 669, 670, 786, 0, 671,
	0, 672, 673, 674, 675, 676, 677, 679, 643, 680,
	685, 686, 787, 681, 682, 683, 684, 788, 688, 689,
	690, 691, 0, 692, 693, 0, 687, 678, 0, 694,
	695, 696, 697, 698, 699, 0, 700, 701, 0, 702,
	789, 790, 791, 792, 0, 714, 0, 703, 705, 706,
	707, 708, 793, 709, 794, 0, 710, 711, 712, 713,
	704, 715, 716, 0, 0, 717, 718, 719, 721, 723,
	724, 720, 722, 725, 0, 726, 0, 0, 727, 728,
	729, 795, 796, 797, 0, 731, 732, 730, 733, 734,
	737, 735, 736, 798, 738, 739, 740, 1785, 0, 317,
	0, 741, 742, 799, 743, 744, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 328, 327,
	329, 330, 331, 332, 0, 333, 334, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 335, 0, 336, 337,
	338, 0, 339, 340, 341, 342, 343, 344, 345, 747,
	748, 0, 346, 749, 347, 750, 0, 751, 348, 349,
	350, 351, 352, 353, 354, 0, 0, 0, 355, 752,
	753, 754, 0, 356, 357, 755, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 382, 0,
	383, 384, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 389, 390, 0, 391, 393, 756, 757,
	0, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	758, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 759, 760, 427, 428, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 431, 761, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	0, 438, 439, 440, 762, 763, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 764, 0, 765,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 1783,
	767, 768, 554, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 0, 0, 0, 0, 769, 471, 555, 472, 770,
	771, 0, 772, 0, 473, 474, 476, 0, 773, 0,
	475, 477, 478, 0, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 774, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 497, 498, 499, 502, 0, 0, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 0, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 0, 547, 534, 0, 535,
	0, 0, 549, 550, 551, 552, 0, 775, 553, 776,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 0, 566, 0,
	778, 567, 568, 560, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 781, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 783, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 0, 629, 630, 631, 632, 633, 784, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 651, 653, 652, 0, 655, 656, 654,
	657, 658, 659, 0, 660, 785, 661, 641, 642, 662,
	663, 0, 664, 665, 666, 667, 668, 669, 670, 786,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 787, 681, 682, 683, 684, 788,
	688, 689, 690, 691, 0, 692, 693, 0, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 789, 790, 791, 792, 0, 714, 0, 703,
	705, 706, 707, 708, 793, 709, 794, 0, 710, 711,
	712, 713, 704, 715, 716, 0, 0, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 0, 726, 0, 0,
	727, 728, 729, 795, 796, 797, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 1782,
	0, 317, 0, 741, 742, 799, 743, 744, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	328, 327, 329, 330, 331, 332, 0, 333, 334, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 335, 0,
	336, 337, 338, 0, 339, 340, 341, 342, 343, 344,
	345, 747, 748, 0, 346, 749, 347, 750, 0, 751,
	348, 349, 350, 351, 352, 353, 354, 0, 0, 0,
	355, 752, 753, 754, 0, 356, 357, 755, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	0, 367, 368, 369, 366, 370, 371, 0, 372, 0,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	382, 0, 383, 384, 385, 0, 0, 0, 0, 0,
	0, 0, 386, 387, 388, 389, 390, 0, 391, 393,
	756, 757, 0, 396, 398, 392, 394, 0, 397, 395,
	399, 400, 0, 401, 402, 403, 0, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	413, 414, 758, 415, 416, 417, 419, 421, 418, 420,
	422, 423, 424, 425, 426, 759, 760, 427, 428, 0,
	0, 0, 0, 0, 0, 0, 429, 430, 431, 761,
	0, 0, 0, 432, 0, 433, 434, 435, 0, 436,
	437, 0, 0, 438, 439, 440, 762, 763, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 764,
	0, 765, 451, 0, 452, 453, 454, 455, 456, 457,
	458, 766, 767, 768, 554, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 466, 0, 0, 0, 467, 468,
	469, 470, 0, 0, 0, 0, 0, 769, 471, 555,
	472, 770, 771, 0, 772, 0, 473, 474, 476, 0,
	773, 0, 475, 477, 478, 0, 479, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 489,
	488, 0, 491, 774, 490, 0, 492, 493, 0, 0,
	494, 495, 496, 497, 498, 499, 502, 0, 0, 500,
	501, 503, 504, 0, 505, 506, 508, 511, 507, 509,
	510, 512, 525, 526, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 528, 0, 527, 0,
	529, 530, 531, 532, 533, 541, 543, 544, 539, 540,
	542, 545, 546, 548, 536, 537, 538, 0, 547, 534,
	0, 535, 0, 0, 549, 550, 551, 552, 0, 775,
	553, 776, 556, 557, 0, 0, 558, 0, 559, 0,
	0, 561, 562, 563, 0, 0, 564, 565, 777, 0,
	566, 0, 778, 567, 568, 560, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 779,
	581, 582, 583, 780, 584, 585, 586, 781, 587, 782,
	588, 589, 0, 590, 591, 592, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 783, 601, 602, 604, 603,
	605, 0, 606, 0, 607, 608, 609, 0, 0, 0,
	0, 0, 610, 611, 613, 0, 614, 615, 616, 617,
	612, 618, 619, 620, 621, 622, 623, 0, 625, 626,
	624, 627, 628, 0, 629, 630, 631, 632, 633, 784,
	634, 0, 635, 636, 644, 645, 646, 637, 638, 640,
	647, 639, 648, 649, 650, 651, 653, 652, 0, 655,
	656, 654, 657, 658, 659, 0, 660, 785, 661, 641,
	642, 662, 663, 0, 664, 665, 666, 667, 668, 669,
	670, 786, 0, 671, 0, 672, 673, 674, 675, 676,
	677, 679, 643, 680, 685, 686, 787, 681, 682, 683,
	684, 788, 688, 689, 690, 691, 0, 692, 693, 0,
	687, 678, 0, 694, 695, 696, 697, 698, 699, 0,
	700, 701, 0, 702, 789, 790, 791, 792, 0, 714,
	0, 703, 705, 706, 707, 708, 793, 709, 794, 0,
	710, 711, 712, 713, 704, 715, 716, 0, 0, 717,
	718, 719, 721, 723, 724, 720, 722, 725, 0, 726,
	0, 0, 727, 728, 729, 795, 796, 797, 0, 731,
	732, 730, 733, 734, 737, 735, 736, 798, 738, 739,
	740, 1774, 0, 317, 0, 741, 742, 799, 743, 744,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 0, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 1735, 0, 317, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 1699, 0, 317, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 328, 327, 329, 330,
	331, 332, 0, 333, 334, 0, 0, 0, 0, 0,
	746, 0, 0, 0, 335, 0, 336, 337, 338, 0,
	339, 340, 341, 342, 343, 344, 345, 747, 748, 0,
	346, 749, 347, 750, 0, 751, 348, 349, 350, 351,
	352, 353, 354, 0, 0, 0, 355, 752, 753, 754,
	0, 356, 357, 755, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 0, 367, 368, 369,
	366, 370, 371, 0, 372, 0, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 382, 0, 383, 384,
	385, 0, 0, 0, 0, 0, 0, 0, 386, 387,
	388, 389, 390, 0, 391, 393, 756, 757, 0, 396,
	398, 392, 394, 0, 397, 395, 399, 400, 0, 401,
	402, 403, 0, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 413, 414, 758, 415,
	416, 417, 419, 421, 418, 420, 422, 423, 424, 425,
	426, 759, 760, 427, 428, 0, 0, 0, 0, 0,
	0, 0, 429, 430, 431, 761, 0, 0, 0, 432,
	0, 433, 434, 435, 0, 436, 437, 0, 0, 438,
	439, 440, 762, 763, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 764, 0, 765, 451, 0,
	452, 453, 454, 455, 456, 457, 458, 766, 767, 768,
	554, 0, 459, 460, 461, 0, 462, 463, 464, 465,
	466, 0, 0, 0, 467, 468, 469, 470, 0, 0,
	0, 0, 0, 769, 471, 555, 472, 770, 771, 0,
	772, 0, 473, 474, 476, 0, 773, 0, 475, 477,
	478, 0, 479, 0, 0, 0, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 489, 488, 0, 491, 774,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 497,
	498, 499, 502, 0, 0, 500, 501, 503, 504, 0,
	505, 506, 508, 511, 507, 509, 510, 512, 525, 526,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 528, 0, 527, 0, 529, 530, 531, 532,
	533, 541, 543, 544, 539, 540, 542, 545, 546, 548,
	536, 537, 538, 0, 547, 534, 0, 535, 0, 0,
	549, 550, 551, 552, 0, 775, 553, 776, 556, 557,
	0, 0, 558, 0, 559, 0, 0, 561, 562, 563,
	0, 0, 564, 565, 777, 0, 566, 0, 778, 567,
	568, 560, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 779, 581, 582, 583, 780,
	584, 585, 586, 781, 587, 782, 588, 589, 0, 590,
	591, 592, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 783, 601, 602, 604, 603, 605, 0, 606, 0,
	607, 608, 609, 0, 0, 0, 0, 0, 610, 611,
	613, 0, 614, 615, 616, 617, 612, 618, 619, 620,
	621, 622, 623, 0, 625, 626, 624, 627, 628, 0,
	629, 630, 631, 632, 633, 784, 634, 0, 635, 636,
	644, 645, 646, 637, 638, 640, 647, 639, 648, 649,
	650, 651, 653, 652, 0, 655, 656, 654, 657, 658,
	659, 0, 660, 785, 661, 641, 642, 662, 663, 0,
	664, 665, 666, 667, 668, 669, 670, 786, 0, 671,
	0, 672, 673, 674, 675, 676, 677, 679, 643, 680,
	685, 686, 787, 681, 682, 683, 684, 788, 688, 689,
	690, 691, 0, 692, 693, 0, 687, 678, 0, 694,
	695, 696, 697, 698, 699, 0, 700, 701, 0, 702,
	789, 790, 791, 792, 0, 714, 0, 703, 705, 706,
	707, 708, 793, 709, 794, 0, 710, 711, 712, 713,
	704, 715, 716, 0, 0, 717, 718, 719, 721, 723,
	724, 720, 722, 725, 0, 726, 0, 0, 727, 728,
	729, 795, 796, 797, 0, 731, 732, 730, 733, 734,
	737, 735, 736, 798, 738, 739, 740, 1546, 0, 317,
	0, 741, 742, 799, 743, 744, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 328, 327,
	329, 330, 331, 332, 0, 333, 334, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 335, 0, 336, 337,
	338, 0, 339, 340, 341, 342, 343, 344, 345, 747,
	748, 0, 346, 749, 347, 750, 0, 751, 348, 349,
	350, 351, 352, 353, 354, 0, 0, 0, 355, 752,
	753, 754, 0, 356, 357, 755, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 382, 0,
	383, 384, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 389, 390, 0, 391, 393, 756, 757,
	0, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	758, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 759, 760, 427, 428, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 431, 761, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	0, 438, 439, 440, 762, 763, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 764, 0, 765,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 766,
	767, 768, 554, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 0, 0, 0, 0, 769, 471, 555, 472, 770,
	771, 0, 772, 0, 473, 474, 476, 0, 773, 0,
	475, 477, 478, 0, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 774, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 497, 498, 499, 502, 0, 0, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 0, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 0, 547, 534, 0, 535,
	0, 0, 549, 550, 551, 552, 0, 775, 553, 776,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 0, 566, 0,
	778, 567, 568, 560, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 781, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 783, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 0, 894, 630, 631, 632, 633, 784, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 893, 639,
	648, 649, 650, 651, 653, 652, 0, 655, 656, 654,
	657, 658, 659, 0, 660, 785, 661, 641, 642, 662,
	663, 0, 664, 665, 666, 667, 668, 669, 670, 786,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 787, 681, 682, 683, 684, 788,
	688, 689, 690, 691, 0, 692, 693, 0, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 891, 790, 791, 792, 0, 714, 0, 703,
	705, 706, 707, 708, 793, 709, 794, 0, 710, 711,
	712, 713, 704, 715, 716, 0, 0, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 0, 726, 0, 0,
	727, 728, 729, 795, 796, 797, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 1517,
	0, 317, 0, 741, 742, 799, 743, 744, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	328, 327, 329, 330, 331, 332, 0, 333, 334, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 335, 0,
	336, 337, 338, 0, 339, 340, 341, 342, 343, 344,
	345, 747, 748, 0, 346, 749, 347, 750, 0, 751,
	348, 349, 350, 351, 352, 353, 354, 0, 0, 0,
	355, 752, 753, 754, 0, 356, 357, 755, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	0, 367, 368, 369, 366, 370, 371, 0, 372, 0,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	382, 0, 383, 384, 385, 0, 0, 0, 0, 0,
	0, 0, 386, 387, 388, 389, 390, 0, 391, 393,
	756, 757, 0, 396, 398, 392, 394, 0, 397, 395,
	399, 400, 0, 401, 402, 403, 0, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	413, 414, 758, 415, 416, 417, 419, 421, 418, 420,
	422, 423, 424, 425, 426, 759, 760, 427, 428, 0,
	0, 0, 0, 0, 0, 0, 429, 430, 431, 761,
	0, 0, 0, 432, 0, 433, 434, 435, 0, 436,
	437, 0, 0, 438, 439, 440, 762, 763, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 764,
	0, 765, 451, 0, 452, 453, 454, 455, 456, 457,
	458, 1516, 767, 768, 554, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 466, 0, 0, 0, 467, 468,
	469, 470, 0, 0, 0, 0, 0, 769, 471, 555,
	472, 770, 771, 0, 772, 0, 473, 474, 476, 0,
	773, 0, 475, 477, 478, 0, 479, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 489,
	488, 0, 491, 774, 490, 0, 492, 493, 0, 0,
	494, 495, 496, 497, 498, 499, 502, 0, 0, 500,
	501, 503, 504, 0, 505, 506, 508, 511, 507, 509,
	510, 512, 525, 526, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 528, 0, 527, 0,
	529, 530, 531, 532, 533, 541, 543, 544, 539, 540,
	542, 545, 546, 548, 536, 537, 538, 0, 547, 534,
	0, 535, 0, 0, 549, 550, 551, 552, 0, 775,
	553, 776, 556, 557, 0, 0, 558, 0, 559, 0,
	0, 561, 562, 563, 0, 0, 564, 565, 777, 0,
	566, 0, 778, 567, 568, 560, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 779,
	581, 582, 583, 780, 584, 585, 586, 781, 587, 782,
	588, 589, 0, 590, 591, 592, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 783, 601, 602, 604, 603,
	605, 0, 606, 0, 607, 608, 609, 0, 0, 0,
	0, 0, 610, 611, 613, 0, 614, 615, 616, 617,
	612, 618, 619, 620, 621, 622, 623, 0, 625, 626,
	624, 627, 628, 0, 629, 630, 631, 632, 633, 784,
	634, 0, 635, 636, 644, 645, 646, 637, 638, 640,
	647, 639, 648, 649, 650, 651, 653, 652, 0, 655,
	656, 654, 657, 658, 659, 0, 660, 785, 661, 641,
	642, 662, 663, 0, 664, 665, 666, 667, 668, 669,
	670, 786, 0, 671, 0, 672, 673, 674, 675, 676,
	677, 679, 643, 680, 685, 686, 787, 681, 682, 683,
	684, 788, 688, 689, 690, 691, 0, 692, 693, 0,
	687, 678, 0, 694, 695, 696, 697, 698, 699, 0,
	700, 701, 0, 702, 789, 790, 791, 792, 0, 714,
	0, 703, 705, 706, 707, 708, 793, 709, 794, 0,
	710, 711, 712, 713, 704, 715, 716, 0, 0, 717,
	718, 719, 721, 723, 724, 720, 722, 725, 0, 726,
	0, 0, 727, 728, 729, 795, 796, 797, 0, 731,
	732, 730, 733, 734, 737, 735, 736, 798, 738, 739,
	740, 1509, 0, 317, 0, 741, 742, 799, 743, 744,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 1508, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 0, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 317, 0, 0, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 1450, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 0, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 905, 0, 317, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 885, 0, 317, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 328, 327, 329, 330,
	331, 332, 0, 333, 334, 0, 0, 0, 0, 0,
	746, 0, 0, 0, 335, 0, 336, 337, 338, 0,
	339, 340, 341, 342, 343, 344, 345, 747, 748, 0,
	346, 749, 347, 750, 0, 751, 348, 349, 350, 351,
	352, 353, 354, 0, 0, 0, 355, 752, 753, 754,
	0, 356, 881, 755, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 0, 367, 368, 369,
	366, 370, 371, 0, 880, 0, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 382, 0, 383, 384,
	385, 0, 0, 0, 0, 0, 0, 0, 386, 387,
	388, 389, 390, 0, 391, 393, 756, 757, 0, 396,
	398, 392, 394, 0, 397, 395, 399, 400, 0, 401,
	402, 403, 0, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 413, 414, 758, 415,
	416, 417, 419, 421, 418, 420, 422, 423, 424, 425,
	426, 759, 760, 427, 428, 0, 0, 0, 0, 0,
	0, 0, 429, 430, 431, 761, 0, 0, 0, 432,
	0, 433, 434, 435, 0, 436, 437, 0, 0, 438,
	439, 440, 762, 763, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 764, 0, 765, 451, 0,
	452, 453, 454, 455, 456, 457, 458, 766, 767, 768,
	554, 0, 459, 460, 461, 0, 462, 463, 464, 465,
	466, 0, 0, 0, 467, 468, 469, 470, 0, 0,
	0, 0, 0, 769, 471, 555, 472, 770, 771, 0,
	772, 0, 473, 474, 476, 0, 773, 0, 475, 477,
	478, 0, 479, 0, 0, 0, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 489, 488, 0, 491, 774,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 497,
	498, 886, 502, 0, 0, 500, 501, 503, 504, 0,
	505, 506, 508, 511, 507, 509, 510, 512, 525, 526,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 528, 0, 895, 0, 529, 530, 531, 532,
	533, 541, 543, 544, 539, 540, 542, 545, 546, 548,
	536, 537, 538, 0, 547, 534, 0, 535, 0, 0,
	549, 550, 551, 552, 0, 775, 553, 776, 556, 557,
	0, 0, 558, 0, 559, 0, 0, 561, 562, 563,
	0, 0, 564, 565, 777, 0, 566, 0, 778, 567,
	568, 560, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 779, 581, 582, 583, 780,
	584, 585, 586, 781, 587, 782, 588, 589, 0, 590,
	591, 592, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 783, 601, 602, 604, 603, 605, 0, 606, 0,
	607, 608, 609, 0, 0, 0, 0, 0, 610, 611,
	613, 0, 614, 615, 616, 617, 612, 618, 619, 620,
	621, 622, 623, 0, 625, 626, 624, 627, 628, 0,
	894, 630, 631, 632, 633, 882, 634, 0, 635, 636,
	644, 645, 646, 637, 638, 640, 893, 639, 648, 649,
	650, 651, 653, 652, 0, 655, 656, 654, 657, 883,
	659, 0, 660, 785, 661, 641, 642, 662, 663, 0,
	664, 665, 666, 667, 668, 669, 670, 786, 0, 671,
	0, 672, 673, 674, 675, 676, 677, 679, 643, 680,
	685, 686, 787, 681, 682, 683, 684, 788, 688, 689,
	690, 691, 0, 692, 693, 0, 687, 678, 0, 694,
	695, 696, 697, 698, 699, 0, 700, 701, 0, 702,
	891, 790, 791, 792, 0, 714, 0, 703, 887, 706,
	707, 708, 793, 709, 794, 0, 710, 711, 712, 713,
	704, 715, 716, 0, 0, 717, 718, 719, 721, 723,
	724, 720, 722, 725, 0, 726, 0, 0, 727, 728,
	729, 795, 796, 797, 0, 731, 732, 730, 733, 734,
	737, 735, 736, 798, 738, 739, 740, 874, 0, 317,
	0, 741, 742, 799, 743, 744, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 328, 327,
	329, 330, 331, 332, 0, 333, 334, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 335, 0, 336, 337,
	338, 0, 339, 340, 341, 342, 343, 344, 345, 747,
	748, 0, 346, 749, 347, 750, 0, 751, 348, 349,
	350, 351, 352, 353, 354, 0, 0, 0, 355, 752,
	753, 754, 0, 356, 357, 755, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 382, 0,
	383, 384, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 389, 390, 0, 391, 393, 756, 757,
	0, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	758, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 759, 760, 427, 428, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 431, 761, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	0, 438, 439, 440, 762, 763, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 764, 0, 765,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 766,
	767, 768, 554, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 0, 0, 0, 0, 769, 471, 555, 472, 770,
	771, 0, 772, 0, 473, 474, 476, 0, 773, 0,
	475, 477, 478, 0, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 774, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 497, 498, 499, 502, 0, 0, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 0, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 0, 547, 534, 0, 535,
	0, 0, 549, 550, 551, 552, 0, 775, 553, 776,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 777, 0, 566, 0,
	778, 567, 568, 560, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 779, 581, 582,
	583, 780, 584, 585, 586, 781, 587, 782, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 783, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 0, 629, 630, 631, 632, 633, 784, 634, 0,
	635, 636, 875, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 651, 653, 652, 0, 655, 656, 654,
	657, 658, 659, 0, 660, 785, 661, 641, 642, 662,
	663, 0, 664, 665, 666, 667, 668, 669, 670, 786,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 787, 681, 682, 683, 684, 788,
	688, 689, 690, 691, 0, 692, 693, 0, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 789, 790, 791, 792, 0, 714, 0, 703,
	705, 706, 707, 708, 793, 709, 794, 0, 710, 711,
	712, 713, 704, 715, 716, 0, 0, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 0, 726, 0, 0,
	727, 728, 729, 795, 796, 797, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 798, 738, 739, 740, 836,
	0, 317, 0, 741, 742, 799, 743, 744, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	328, 327, 329, 330, 331, 332, 0, 333, 334, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 335, 0,
	336, 337, 338, 0, 339, 340, 341, 342, 343, 344,
	345, 747, 748, 0, 346, 749, 347, 750, 0, 751,
	348, 349, 350, 351, 352, 353, 354, 0, 0, 0,
	355, 752, 753, 754, 0, 356, 357, 755, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	0, 367, 368, 369, 366, 370, 371, 0, 372, 0,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	382, 0, 383, 384, 385, 0, 0, 0, 0, 0,
	0, 0, 386, 387, 388, 389, 390, 0, 391, 393,
	756, 757, 0, 396, 398, 392, 394, 0, 397, 395,
	399, 400, 0, 401, 402, 403, 0, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	413, 414, 758, 415, 416, 417, 419, 421, 418, 420,
	422, 423, 424, 425, 426, 759, 760, 427, 428, 0,
	0, 0, 0, 0, 0, 0, 429, 430, 431, 761,
	0, 0, 0, 432, 0, 433, 434, 435, 0, 436,
	437, 0, 0, 438, 439, 440, 762, 763, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 764,
	0, 765, 451, 0, 452, 453, 454, 455, 456, 457,
	458, 766, 767, 768, 554, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 466, 0, 0, 0, 467, 468,
	469, 470, 0, 0, 0, 0, 0, 769, 471, 555,
	472, 770, 771, 0, 772, 0, 473, 474, 476, 0,
	773, 0, 475, 477, 478, 0, 479, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 489,
	488, 0, 491, 774, 490, 0, 492, 493, 0, 0,
	494, 495, 496, 497, 498, 499, 502, 0, 0, 500,
	501, 503, 504, 0, 505, 506, 508, 511, 507, 509,
	510, 512, 525, 526, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 528, 0, 527, 0,
	529, 530, 531, 532, 533, 541, 543, 544, 539, 540,
	542, 545, 546, 548, 536, 537, 538, 0, 547, 534,
	0, 535, 0, 0, 549, 550, 551, 552, 0, 775,
	553, 776, 556, 557, 0, 0, 558, 0, 559, 0,
	0, 561, 562, 563, 0, 0, 564, 565, 777, 0,
	566, 0, 778, 567, 568, 560, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 779,
	581, 582, 583, 780, 584, 585, 586, 781, 587, 782,
	588, 589, 0, 590, 591, 592, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 783, 601, 602, 604, 603,
	605, 0, 606, 0, 607, 608, 609, 0, 0, 0,
	0, 0, 610, 611, 613, 0, 614, 615, 616, 617,
	612, 618, 619, 620, 621, 622, 623, 0, 625, 626,
	624, 627, 628, 0, 629, 630, 631, 632, 633, 784,
	634, 0, 635, 636, 644, 645, 646, 637, 638, 640,
	647, 639, 648, 649, 650, 651, 653, 652, 0, 655,
	656, 654, 657, 658, 659, 0, 660, 785, 661, 641,
	642, 662, 663, 0, 664, 665, 666, 667, 668, 669,
	670, 786, 0, 671, 0, 672, 673, 674, 675, 676,
	677, 679, 643, 680, 685, 686, 787, 681, 682, 683,
	684, 788, 688, 689, 690, 691, 0, 692, 693, 0,
	687, 678, 0, 694, 695, 696, 697, 698, 699, 0,
	700, 701, 0, 702, 789, 790, 791, 792, 0, 714,
	0, 703, 705, 706, 707, 708, 793, 709, 794, 0,
	710, 711, 712, 713, 704, 715, 716, 0, 0, 717,
	718, 719, 721, 723, 724, 720, 722, 725, 0, 726,
	0, 0, 727, 728, 729, 795, 796, 797, 0, 731,
	732, 730, 733, 734, 737, 735, 736, 798, 738, 739,
	740, 828, 0, 317, 0, 741, 742, 799, 743, 744,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 747, 748, 0, 346, 749, 347, 750,
	0, 751, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 752, 753, 754, 0, 356, 357, 755,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 389, 390, 0,
	391, 393, 756, 757, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 758, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 759, 760, 427,
	428, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	431, 761, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 762, 763,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 764, 0, 765, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 766, 767, 768, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 0, 769,
	471, 555, 472, 770, 771, 0, 772, 0, 473, 474,
	476, 0, 773, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 774, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 0, 0, 549, 550, 551, 552,
	0, 775, 553, 776, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	777, 0, 566, 0, 778, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 779, 581, 582, 583, 780, 584, 585, 586, 781,
	587, 782, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 783, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 784, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 0, 660, 785,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 786, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 787, 681,
	682, 683, 684, 788, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 789, 790, 791, 792,
	0, 714, 0, 703, 705, 706, 707, 708, 793, 709,
	794, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 795, 796, 797,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 798,
	738, 739, 740, 805, 0, 317, 0, 741, 742, 799,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 4190, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 894, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 893, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 891, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 4081, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 4050, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 4046, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 3989, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 3987, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 3975, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 3972, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 3537, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 875, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	2648, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	0, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 1478, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 783,
	601, 602, 1398, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 317, 0, 0, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 747, 748, 0, 346, 749,
	347, 750, 0, 751, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 752, 753, 754, 0, 356,
	357, 755, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 389,
	390, 0, 391, 393, 756, 757, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 758, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 759,
	760, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 761, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	762, 763, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 764, 0, 765, 0, 0, 452, 453,
	454, 455, 456, 457, 458, 766, 767, 768, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 769, 471, 555, 472, 770, 771, 0, 772, 0,
	473, 474, 476, 0, 773, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 774, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 775, 553, 776, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 777, 0, 566, 0, 778, 567, 568, 560,
	569, 570, 571, 0, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 779, 581, 582, 583, 780, 584, 585,
	586, 781, 587, 782, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 0, 599, 600, 783,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 784, 0, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 0,
	660, 785, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 786, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	787, 681, 682, 683, 684, 788, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 789, 790,
	791, 792, 0, 714, 0, 703, 705, 706, 707, 708,
	793, 709, 794, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 795,
	796, 797, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 798, 738, 739, 740, 1821, 0, 1524, 0, 741,
	742, 799, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 328, 327, 329, 330,
	331, 332, 0, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 336, 337, 338, 0,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 0,
	346, 0, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 354, 0, 0, 0, 355, 0, 0, 0,
	0, 356, 357, 0, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 0, 367, 368, 369,
	366, 370, 371, 0, 372, 0, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 382, 0, 383, 384,
	385, 0, 0, 0, 0, 0, 0, 1526, 386, 387,
	388, 389, 390, 0, 391, 393, 0, 0, 0, 396,
	398, 392, 394, 0, 397, 395, 399, 400, 0, 401,
	402, 403, 0, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 415,
	416, 417, 419, 421, 418, 420, 422, 423, 424, 425,
	426, 0, 0, 427, 428, 0, 0, 0, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 0, 0, 432,
	0, 433, 434, 435, 0, 436, 437, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 0, 0, 0, 451, 0,
	452, 453, 454, 455, 456, 457, 458, 1820, 0, 0,
	554, 0, 459, 460, 461, 0, 462, 463, 464, 465,
	466, 0, 0, 0, 467, 468, 469, 470, 0, 0,
	0, 0, 0, 0, 471, 555, 472, 0, 0, 0,
	0, 0, 473, 474, 476, 0, 0, 0, 475, 477,
	478, 0, 479, 0, 0, 0, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 489, 488, 0, 491, 0,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 497,
	498, 499, 502, 0, 0, 500, 501, 503, 504, 0,
	505, 506, 508, 511, 507, 509, 510, 512, 525, 526,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 528, 0, 527, 0, 529, 530, 531, 532,
	533, 541, 543, 544, 539, 540, 542, 545, 546, 548,
	536, 537, 538, 0, 547, 534, 0, 535, 0, 0,
	549, 550, 551, 552, 0, 0, 553, 0, 556, 557,
	0, 0, 558, 0, 559, 0, 0, 561, 562, 563,
	0, 0, 564, 565, 0, 0, 566, 0, 0, 567,
	568, 560, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 0, 581, 582, 583, 0,
	584, 585, 586, 0, 587, 0, 588, 589, 0, 590,
	591, 592, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 0, 601, 602, 604, 603, 605, 0, 606, 0,
	607, 608, 609, 0, 0, 0, 0, 0, 610, 611,
	613, 0, 614, 615, 616, 617, 612, 618, 619, 620,
	621, 622, 623, 0, 625, 626, 624, 627, 628, 0,
	629, 630, 631, 632, 633, 0, 634, 0, 635, 636,
	644, 645, 646, 637, 638, 640, 647, 639, 648, 649,
	650, 651, 653, 652, 0, 655, 656, 654, 657, 658,
	659, 1527, 660, 0, 661, 641, 642, 662, 663, 0,
	664, 665, 666, 667, 668, 669, 670, 0, 0, 671,
	0, 672, 673, 674, 675, 676, 677, 679, 643, 680,
	685, 686, 0, 681, 682, 683, 684, 0, 688, 689,
	690, 691, 0, 692, 693, 0, 687, 678, 0, 694,
	695, 696, 697, 698, 699, 0, 700, 701, 0, 702,
	0, 0, 0, 0, 0, 714, 0, 703, 705, 706,
	707, 708, 0, 709, 0, 0, 710, 711, 712, 713,
	704, 715, 716, 0, 0, 717, 718, 719, 721, 723,
	724, 720, 722, 725, 0, 726, 0, 0, 727, 728,
	729, 0, 0, 0, 0, 731, 732, 730, 733, 734,
	737, 735, 736, 0, 738, 739, 740, 1738, 0, 1524,
	0, 741, 742, 0, 743, 744, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 328, 327,
	329, 330, 331, 332, 0, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 335, 0, 336, 337,
	338, 0, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 0, 346, 0, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 354, 0, 0, 0, 355, 0,
	0, 0, 0, 356, 357, 0, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 0, 367,
	368, 369, 366, 370, 371, 0, 372, 0, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 382, 0,
	383, 384, 385, 0, 0, 0, 0, 0, 0, 1526,
	386, 387, 388, 389, 390, 0, 391, 393, 0, 0,
	0, 396, 398, 392, 394, 0, 397, 395, 399, 400,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 415, 416, 417, 419, 421, 418, 420, 422, 423,
	424, 425, 426, 0, 0, 427, 428, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 0,
	0, 432, 0, 433, 434, 435, 0, 436, 437, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 0, 0, 0,
	451, 0, 452, 453, 454, 455, 456, 457, 458, 1737,
	0, 0, 554, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 466, 0, 0, 0, 467, 468, 469, 470,
	0, 0, 0, 0, 0, 0, 471, 555, 472, 0,
	0, 0, 0, 0, 473, 474, 476, 0, 0, 0,
	475, 477, 478, 0, 479, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 489, 488, 0,
	491, 0, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 497, 498, 499, 502, 0, 0, 500, 501, 503,
	504, 0, 505, 506, 508, 511, 507, 509, 510, 512,
	525, 526, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 528, 0, 527, 0, 529, 530,
	531, 532, 533, 541, 543, 544, 539, 540, 542, 545,
	546, 548, 536, 537, 538, 0, 547, 534, 0, 535,
	0, 0, 549, 550, 551, 552, 0, 0, 553, 0,
	556, 557, 0, 0, 558, 0, 559, 0, 0, 561,
	562, 563, 0, 0, 564, 565, 0, 0, 566, 0,
	0, 567, 568, 560, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 0, 581, 582,
	583, 0, 584, 585, 586, 0, 587, 0, 588, 589,
	0, 590, 591, 592, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 0, 601, 602, 604, 603, 605, 0,
	606, 0, 607, 608, 609, 0, 0, 0, 0, 0,
	610, 611, 613, 0, 614, 615, 616, 617, 612, 618,
	619, 620, 621, 622, 623, 0, 625, 626, 624, 627,
	628, 0, 629, 630, 631, 632, 633, 0, 634, 0,
	635, 636, 644, 645, 646, 637, 638, 640, 647, 639,
	648, 649, 650, 651, 653, 652, 0, 655, 656, 654,
	657, 658, 659, 1527, 660, 0, 661, 641, 642, 662,
	663, 0, 664, 665, 666, 667, 668, 669, 670, 0,
	0, 671, 0, 672, 673, 674, 675, 676, 677, 679,
	643, 680, 685, 686, 0, 681, 682, 683, 684, 0,
	688, 689, 690, 691, 0, 692, 693, 0, 687, 678,
	0, 694, 695, 696, 697, 698, 699, 0, 700, 701,
	0, 702, 0, 0, 0, 0, 0, 714, 0, 703,
	705, 706, 707, 708, 0, 709, 0, 0, 710, 711,
	712, 713, 704, 715, 716, 0, 0, 717, 718, 719,
	721, 723, 724, 720, 722, 725, 0, 726, 0, 0,
	727, 728, 729, 0, 0, 0, 0, 731, 732, 730,
	733, 734, 737, 735, 736, 0, 738, 739, 740, 1522,
	0, 1524, 0, 741, 742, 0, 743, 744, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	328, 327, 329, 330, 331, 332, 0, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	336, 337, 338, 0, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 0, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 354, 0, 0, 0,
	355, 0, 0, 0, 0, 356, 357, 0, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	0, 367, 368, 369, 366, 370, 371, 0, 372, 0,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	382, 0, 383, 384, 385, 0, 0, 0, 0, 0,
	0, 1526, 386, 387, 388, 389, 390, 0, 391, 393,
	0, 0, 0, 396, 398, 392, 394, 0, 397, 395,
	399, 400, 0, 401, 402, 403, 0, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 415, 416, 417, 419, 421, 418, 420,
	422, 423, 424, 425, 426, 0, 0, 427, 428, 0,
	0, 0, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 0, 0, 432, 0, 433, 434, 435, 0, 436,
	437, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 0,
	0, 0, 451, 0, 452, 453, 454, 455, 456, 457,
	458, 1521, 0, 0, 554, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 466, 0, 0, 0, 467, 468,
	469, 470, 0, 0, 0, 0, 0, 0, 471, 555,
	472, 0, 0, 0, 0, 0, 473, 474, 476, 0,
	0, 0, 475, 477, 478, 0, 479, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 489,
	488, 0, 491, 0, 490, 0, 492, 493, 0, 0,
	494, 495, 496, 497, 498, 499, 502, 0, 0, 500,
	501, 503, 504, 0, 505, 506, 508, 511, 507, 509,
	510, 512, 525, 526, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 528, 0, 527, 0,
	529, 530, 531, 532, 533, 541, 543, 544, 539, 540,
	542, 545, 546, 548, 536, 537, 538, 0, 547, 534,
	0, 535, 0, 0, 549, 550, 551, 552, 0, 0,
	553, 0, 556, 557, 0, 0, 558, 0, 559, 0,
	0, 561, 562, 563, 0, 0, 564, 565, 0, 0,
	566, 0, 0, 567, 568, 560, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 0,
	581, 582, 583, 0, 584, 585, 586, 0, 587, 0,
	588, 589, 0, 590, 591, 592, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 0, 601, 602, 604, 603,
	605, 0, 606, 0, 607, 608, 609, 0, 0, 0,
	0, 0, 610, 611, 613, 0, 614, 615, 616, 617,
	612, 618, 619, 620, 621, 622, 623, 0, 625, 626,
	624, 627, 628, 0, 629, 630, 631, 632, 633, 0,
	634, 0, 635, 636, 644, 645, 646, 637, 638, 640,
	647, 639, 648, 649, 650, 651, 653, 652, 0, 655,
	656, 654, 657, 658, 659, 1527, 660, 0, 661, 641,
	642, 662, 663, 0, 664, 665, 666, 667, 668, 669,
	670, 0, 0, 671, 0, 672, 673, 674, 675, 676,
	677, 679, 643, 680, 685, 686, 0, 681, 682, 683,
	684, 0, 688, 689, 690, 691, 0, 692, 693, 0,
	687, 678, 0, 694, 695, 696, 697, 698, 699, 0,
	700, 701, 0, 702, 0, 0, 0, 0, 0, 714,
	0, 703, 705, 706, 707, 708, 0, 709, 0, 0,
	710, 711, 712, 713, 704, 715, 716, 0, 0, 717,
	718, 719, 721, 723, 724, 720, 722, 725, 0, 726,
	0, 0, 727, 728, 729, 0, 0, 0, 0, 731,
	732, 730, 733, 734, 737, 735, 736, 0, 738, 739,
	740, 2367, 0, 1524, 0, 741, 742, 0, 743, 744,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 328, 327, 329, 330, 331, 332, 0, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 336, 337, 338, 0, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 0, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 354, 0,
	0, 0, 355, 0, 0, 0, 0, 356, 357, 0,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 367, 368, 369, 366, 370, 371, 0,
	372, 0, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 382, 0, 383, 384, 385, 0, 0, 0,
	0, 0, 0, 1526, 386, 387, 388, 389, 390, 0,
	391, 393, 0, 0, 0, 396, 398, 392, 394, 0,
	397, 395, 399, 400, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 415, 416, 417, 419, 421,
	418, 420, 422, 423, 424, 425, 426, 0, 0, 427,
	428, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 0, 0, 432, 0, 433, 434, 435,
	0, 436, 437, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 0, 0, 0, 451, 0, 452, 453, 454, 455,
	456, 457, 458, 0, 0, 0, 554, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 466, 0, 0, 0,
	467, 468, 469, 470, 0, 0, 0, 0, 0, 0,
	471, 555, 472, 0, 0, 0, 0, 0, 473, 474,
	476, 0, 0, 0, 475, 477, 478, 0, 479, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 489, 488, 0, 491, 0, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 497, 498, 499, 502, 0,
	0, 500, 501, 503, 504, 0, 505, 506, 508, 511,
	507, 509, 510, 512, 525, 526, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 528, 0,
	527, 0, 529, 530, 531, 532, 533, 541, 543, 544,
	539, 540, 542, 545, 546, 548, 536, 537, 538, 0,
	547, 534, 0, 535, 0, 0, 549, 550, 551, 552,
	0, 0, 553, 0, 556, 557, 0, 0, 558, 0,
	559, 0, 0, 561, 562, 563, 0, 0, 564, 565,
	0, 0, 566, 0, 0, 567, 568, 560, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 0, 581, 582, 583, 0, 584, 585, 586, 0,
	587, 0, 588, 589, 0, 590, 591, 592, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 0, 601, 602,
	604, 603, 605, 0, 606, 0, 607, 608, 609, 0,
	0, 0, 0, 0, 610, 611, 613, 0, 614, 615,
	616, 617, 612, 618, 619, 620, 621, 622, 623, 0,
	625, 626, 624, 627, 628, 0, 629, 630, 631, 632,
	633, 0, 634, 0, 635, 636, 644, 645, 646, 637,
	638, 640, 647, 639, 648, 649, 650, 651, 653, 652,
	0, 655, 656, 654, 657, 658, 659, 1527, 660, 0,
	661, 641, 642, 662, 663, 0, 664, 665, 666, 667,
	668, 669, 670, 0, 0, 671, 0, 672, 673, 674,
	675, 676, 677, 679, 643, 680, 685, 686, 0, 681,
	682, 683, 684, 0, 688, 689, 690, 691, 0, 692,
	693, 0, 687, 678, 0, 694, 695, 696, 697, 698,
	699, 0, 700, 701, 0, 702, 0, 0, 0, 0,
	0, 714, 0, 703, 705, 706, 707, 708, 0, 709,
	0, 0, 710, 711, 712, 713, 704, 715, 716, 0,
	0, 717, 718, 719, 721, 723, 724, 720, 722, 725,
	0, 726, 0, 0, 727, 728, 729, 0, 0, 0,
	0, 731, 732, 730, 733, 734, 737, 735, 736, 0,
	738, 739, 740, 2327, 0, 1524, 0, 741, 742, 0,
	743, 744, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 328, 327, 329, 330, 331, 332,
	0, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 335, 0, 336, 337, 338, 0, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 0, 346, 0,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 353,
	354, 0, 0, 0, 355, 0, 0, 0, 0, 356,
	357, 0, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 367, 368, 369, 366, 370,
	371, 0, 372, 0, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 382, 0, 383, 384, 385, 0,
	0, 0, 0, 0, 0, 1526, 386, 387, 388, 389,
	390, 0, 391, 393, 0, 0, 0, 396, 398, 392,
	394, 0, 397, 395, 399, 400, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 415, 416, 417,
	419, 421, 418, 420, 422, 423, 424, 425, 426, 0,
	0, 427, 428, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 0, 0, 432, 0, 433,
	434, 435, 0, 436, 437, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 0, 0, 0, 451, 0, 452, 453,
	454, 455, 456, 457, 458, 0, 0, 0, 554, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 466, 0,
	0, 0, 467, 468, 469, 470, 0, 0, 0, 0,
	0, 0, 471, 555, 472, 0, 0, 0, 0, 0,
	473, 474, 476, 0, 0, 0, 475, 477, 478, 0,
	479, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 489, 488, 0, 491, 0, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 497, 498, 499,
	502, 0, 0, 500, 501, 503, 504, 0, 505, 506,
	508, 511, 507, 509, 510, 512, 525, 526, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	528, 0, 527, 0, 529, 530, 531, 532, 533, 541,
	543, 544, 539, 540, 542, 545, 546, 548, 536, 537,
	538, 0, 547, 534, 0, 535, 0, 0, 549, 550,
	551, 552, 0, 0, 553, 0, 556, 557, 0, 0,
	558, 0, 559, 0, 0, 561, 562, 563, 0, 0,
	564, 565, 0, 0, 566, 0, 0, 567, 568, 560,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 0, 587, 0, 588, 589, 0, 590, 591, 592,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 0,
	601, 602, 604, 603, 605, 0, 606, 0, 607, 608,
	609, 0, 0, 0, 0, 0, 610, 611, 613, 0,
	614, 615, 616, 617, 612, 618, 619, 620, 621, 622,
	623, 0, 625, 626, 624, 627, 628, 0, 629, 630,
	631, 632, 633, 0, 634, 0, 635, 636, 644, 645,
	646, 637, 638, 640, 647, 639, 648, 649, 650, 651,
	653, 652, 0, 655, 656, 654, 657, 658, 659, 1527,
	660, 0, 661, 641, 642, 662, 663, 0, 664, 665,
	666, 667, 668, 669, 670, 0, 0, 671, 0, 672,
	673, 674, 675, 676, 677, 679, 643, 680, 685, 686,
	0, 681, 682, 683, 684, 0, 688, 689, 690, 691,
	0, 692, 693, 0, 687, 678, 0, 694, 695, 696,
	697, 698, 699, 0, 700, 701, 0, 702, 0, 0,
	0, 0, 0, 714, 0, 703, 705, 706, 707, 708,
	0, 709, 0, 0, 710, 711, 712, 713, 704, 715,
	716, 0, 0, 717, 718, 719, 721, 723, 724, 720,
	722, 725, 0, 726, 0, 0, 727, 728, 729, 0,
	0, 0, 0, 731, 732, 730, 733, 734, 737, 735,
	736, 1524, 738, 739, 740, 0, 0, 0, 0, 741,
	742, 0, 743, 744, 745, 0, 0, 0, 325, 326,
	328, 327, 329, 330, 331, 332, 0, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	336, 337, 338, 0, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 0, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 354, 0, 0, 0,
	355, 0, 0, 0, 0, 356, 357, 0, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	0, 367, 368, 369, 366, 370, 371, 0, 372, 0,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	382, 0, 383, 384, 385, 0, 0, 0, 0, 0,
	0, 1526, 386, 387, 388, 389, 390, 0, 391, 393,
	0, 0, 0, 396, 398, 392, 394, 0, 397, 395,
	399, 400, 0, 401, 402, 403, 0, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 415, 416, 417, 419, 421, 418, 420,
	422, 423, 424, 425, 426, 0, 0, 427, 428, 0,
	0, 0, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 0, 0, 432, 0, 433, 434, 435, 0, 436,
	437, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 0,
	0, 0, 451, 0, 452, 453, 454, 455, 456, 457,
	458, 0, 0, 0, 554, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 466, 0, 0, 0, 467, 468,
	469, 470, 0, 0, 0, 0, 0, 0, 471, 555,
	472, 0, 0, 0, 0, 0, 473, 474, 476, 0,
	0, 0, 475, 477, 478, 0, 479, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 489,
	488, 0, 491, 0, 490, 0, 492, 493, 0, 0,
	494, 495, 496, 497, 498, 499, 502, 0, 0, 500,
	501, 503, 504, 0, 505, 506, 508, 511, 507, 509,
	510, 512, 525, 526, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 528, 0, 527, 0,
	529, 530, 531, 532, 533, 541, 543, 544, 539, 540,
	542, 545, 546, 548, 536, 537, 538, 0, 547, 534,
	0, 535, 0, 0, 549, 550, 551, 552, 0, 0,
	553, 0, 556, 557, 0, 0, 558, 0, 559, 0,
	0, 561, 562, 563, 0, 0, 564, 565, 0, 0,
	566, 0, 0, 567, 568, 560, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 0,
	581, 582, 583, 0, 584, 585, 586, 0, 587, 0,
	588, 589, 0, 590, 591, 592, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 0, 601, 602, 604, 603,
	605, 0, 606, 0, 607, 608, 609, 0, 0, 0,
	0, 0, 610, 611, 613, 0, 614, 615, 616, 617,
	612, 618, 619, 620, 621, 622, 623, 0, 625, 626,
	624, 627, 628, 0, 629, 630, 631, 632, 633, 0,
	634, 0, 635, 636, 644, 645, 646, 637, 638, 640,
	647, 639, 648, 649, 650, 651, 653, 652, 0, 655,
	656, 654, 657, 658, 659, 1527, 660, 0, 661, 641,
	642, 662, 663, 0, 664, 665, 666, 667, 668, 669,
	670, 0, 0, 671, 0, 672, 673, 674, 675, 676,
	677, 679, 643, 680, 685, 686, 0, 681, 682, 683,
	684, 0, 688, 689, 690, 691, 0, 692, 693, 0,
	687, 678, 0, 694, 695, 696, 697, 698, 699, 0,
	700, 701, 0, 702, 0, 0, 0, 0, 0, 714,
	0, 703, 705, 706, 707, 708, 0, 709, 0, 0,
	710, 711, 712, 713, 704, 715, 716, 0, 0, 717,
	718, 719, 721, 723, 724, 720, 722, 725, 0, 726,
	0, 0, 727, 728, 729, 0, 0, 0, 0, 731,
	732, 730, 733, 734, 737, 735, 736, 0, 738, 739,
	740, 0, 0, 0, 0, 741, 742, 0, 743, 744,
	745, 2049, 2050, 0, 2082, 2083, 2084, 2093, 2094, 2095,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2086, 2080, 0, 0, 0, 0,
	0, 0, 0, 2052, 0, 0, 0, 0, 0, 0,
	0, 0, 2049, 2050, 2099, 2082, 2083, 2084, 2093, 2094,
	2095, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2105, 0, 0, 2086, 2080, 0, 0, 0,
	0, 2051, 0, 0, 2052, 0, 0, 0, 0, 0,
	0, 0, 2071, 0, 0, 2099, 0, 0, 0, 0,
	0, 0, 2068, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2105, 0, 0, 0, 0, 0, 0,
	0, 0, 2051, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2071, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2068, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2074, 2075, 2076, 2077, 0,
	0, 0, 0, 0, 0, 2057, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2074, 2075, 2076, 2077,
	0, 0, 0, 0, 0, 0, 2057, 0, 2090, 0,
	0, 0, 2100, 0, 0, 0, 0, 0, 0, 2079,
	2081, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2096, 0, 2097, 0, 0, 0, 0, 2090,
	0, 2066, 2067, 2100, 0, 0, 0, 0, 0, 0,
	2079, 2081, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2096, 0, 2097, 2072, 0, 0, 0,
	0, 0, 2066, 2067, 0, 0, 0, 2049, 2050, 0,
	2082, 2083, 2084, 2093, 2094, 2095, 0, 0, 0, 0,
	0, 0, 2088, 0, 0, 0, 0, 0, 0, 0,
	2086, 2080, 0, 0, 0, 0, 0, 2072, 0, 2052,
	0, 0, 0, 0, 0, 0, 2098, 0, 0, 0,
	2099, 0, 2049, 2050, 0, 2082, 2083, 2084, 2093, 2094,
	2095, 0, 0, 0, 0, 0, 0, 2087, 2105, 0,
	0, 0, 0, 0, 0, 2086, 2080, 2051, 2102, 0,
	0, 0, 0, 0, 2052, 0, 0, 2098, 2071, 0,
	0, 0, 0, 0, 0, 2099, 0, 0, 2068, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 2105, 0, 0, 0, 0, 0, 2102,
	0, 0, 2051, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2071, 0, 0, 0, 0, 2078, 0,
	0, 0, 0, 2068, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2078,
	0, 2074, 2075, 2076, 2077, 0, 0, 0, 0, 0,
	0, 2057, 0, 0, 0, 0, 2091, 0, 0, 0,
	0, 0, 0, 0, 0, 2073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2074, 2075, 2076, 2077,
	0, 0, 2104, 0, 2090, 0, 2057, 2091, 2100, 0,
	0, 0, 0, 0, 0, 2079, 2081, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2096, 0,
	2097, 0, 0, 2104, 0, 0, 0, 2066, 2067, 2090,
	0, 0, 0, 2100, 0, 0, 0, 0, 0, 0,
	2079, 2081, 0, 0, 0, 0, 0, 2088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2072, 2096, 2089, 2097, 0, 0, 0, 0,
	0, 0, 2066, 2067, 0, 0, 2063, 2064, 2070, 2092,
	2069, 2065, 0, 2062, 2060, 2061, 2053, 2054, 2055, 2056,
	2058, 2059, 2088, 0, 0, 0, 0, 0, 0, 0,
	0, 2956, 0, 0, 0, 2089, 0, 2072, 0, 0,
	0, 0, 2098, 0, 0, 0, 0, 2063, 2064, 2070,
	2092, 2069, 2065, 0, 2062, 2060, 2061, 2053, 2054, 2055,
	2056, 2058, 2059, 2087, 0, 0, 0, 0, 5426, 0,
	0, 0, 0, 0, 2102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2098, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2102,
	0, 0, 0, 2049, 2050, 0, 2082, 2083, 2084, 2093,
	2094, 2095, 0, 0, 2078, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2086, 2080, 0, 0,
	0, 0, 0, 0, 0, 2052, 0, 0, 0, 0,
	2073, 0, 0, 0, 2049, 2050, 2099, 2082, 2083, 2084,
	2093, 2094, 2095, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 0, 2105, 0, 0, 2086, 2080, 0,
	0, 0, 2091, 2051, 0, 0, 2052, 0, 0, 0,
	0, 0, 0, 0, 2071, 2073, 0, 2099, 0, 0,
	0, 0, 0, 0, 2068, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2105, 0, 0, 2104, 0,
	0, 0, 0, 0, 2051, 0, 0, 2091, 0, 0,
	0, 0, 0, 0, 0, 2071, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2068, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2074, 2075, 2076,
	2077, 0, 0, 0, 0, 0, 0, 2057, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2063, 2064, 2070, 2092, 2069, 2065, 0, 2062,
	2060, 2061, 2053, 2054, 2055, 2056, 2058, 2059, 2074, 2075,
	2076, 2077, 0, 5422, 0, 0, 0, 0, 2057, 0,
	2090, 0, 0, 0, 2100, 2089, 0, 0, 0, 0,
	0, 2079, 2081, 0, 0, 0, 0, 2063, 2064, 2070,
	2092, 2069, 2065, 0, 2062, 2060, 2061, 2053, 2054, 2055,
	2056, 2058, 2059, 0, 2096, 0, 2097, 0, 5322, 0,
	0, 2090, 0, 2066, 2067, 2100, 0, 0, 0, 0,
	0, 0, 2079, 2081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2096, 0, 2097, 2072, 0,
	0, 0, 0, 0, 2066, 2067, 0, 0, 0, 2049,
	2050, 0, 2082, 2083, 2084, 2093, 2094, 2095, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 0,
	0, 0, 2086, 2080, 0, 0, 0, 0, 0, 2072,
	0, 2052, 0, 0, 0, 0, 0, 0, 2098, 0,
	0, 0, 2099, 0, 2049, 2050, 0, 2082, 2083, 2084,
	2093, 2094, 2095, 0, 0, 0, 0, 0, 0, 2087,
	2105, 0, 0, 0, 0, 0, 0, 2086, 2080, 2051,
	2102, 0, 0, 0, 0, 0, 2052, 0, 0, 2098,
	2071, 0, 0, 0, 0, 0, 0, 2099, 0, 0,
	2068, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 2105, 0, 0, 0, 0,
	0, 2102, 0, 0, 2051, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2071, 0, 0, 0, 0,
	2078, 0, 0, 0, 0, 2068, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2073, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2078, 0, 2074, 2075, 2076, 2077, 0, 0, 0,
	0, 0, 0, 2057, 0, 0, 0, 0, 2091, 0,
	0, 0, 0, 0, 0, 0, 0, 2073, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2074, 2075,
	2076, 2077, 0, 0, 2104, 0, 2090, 0, 2057, 2091,
	2100, 0, 0, 0, 0, 0, 0, 2079, 2081, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2096, 0, 2097, 0, 0, 2104, 0, 0, 0, 2066,
	2067, 2090, 0, 0, 0, 2100, 0, 0, 0, 0,
	0, 0, 2079, 2081, 0, 0, 0, 0, 0, 2088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2072, 2096, 2089, 2097, 0, 0,
	0, 0, 0, 0, 2066, 2067, 0, 0, 2063, 2064,
	2070, 2092, 2069, 2065, 0, 2062, 2060, 2061, 2053, 2054,
	2055, 2056, 2058, 2059, 2088, 0, 0, 0, 0, 5268,
	0, 0, 0, 0, 0, 0, 0, 2089, 0, 2072,
	0, 0, 0, 0, 2098, 0, 0, 0, 0, 2063,
	2064, 2070, 2092, 2069, 2065, 0, 2062, 2060, 2061, 2053,
	2054, 2055, 2056, 2058, 2059, 2087, 0, 0, 0, 0,
	5267, 0, 0, 0, 0, 0, 2102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2098,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2102, 0, 0, 0, 2049, 2050, 0, 2082, 2083,
	2084, 2093, 2094, 2095, 0, 0, 2078, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2086, 2080,
	0, 0, 0, 0, 0, 0, 0, 2052, 0, 0,
	0, 0, 2073, 0, 0, 0, 2049, 2050, 2099, 2082,
	2083, 2084, 2093, 2094, 2095, 0, 0, 0, 0, 0,
	0, 2078, 0, 0, 0, 0, 2105, 0, 0, 2086,
	2080, 0, 0, 0, 2091, 2051, 0, 0, 2052, 0,
	0, 0, 0, 0, 0, 0, 2071, 2073, 0, 2099,
	0, 0, 0, 0, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2105, 0, 0,
	2104, 0, 0, 0, 0, 0, 2051, 0, 0, 2091,
	0, 0, 0, 0, 0, 0, 0, 2071, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2074,
	2075, 2076, 2077, 0, 0, 0, 0, 0, 0, 2057,
	0, 0, 2089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2063, 2064, 2070, 2092, 2069, 2065,
	0, 2062, 2060, 2061, 2053, 2054, 2055, 2056, 2058, 2059,
	2074, 2075, 2076, 2077, 0, 5062, 0, 0, 0, 0,
	2057, 0, 2090, 0, 0, 0, 2100, 2089, 0, 0,
	0, 0, 0, 2079, 2081, 0, 0, 0, 0, 2063,
	2064, 2070, 2092, 2069, 2065, 0, 2062, 2060, 2061, 2053,
	2054, 2055, 2056, 2058, 2059, 0, 2096, 0, 2097, 0,
	4867, 0, 0, 2090, 0, 2066, 2067, 2100, 0, 0,
	0, 0, 0, 0, 2079, 2081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2096, 0, 2097,
	2072, 0, 0, 0, 0, 0, 2066, 2067, 0, 0,
	0, 2049, 2050, 0, 2082, 2083, 2084, 2093, 2094, 2095,
	0, 0, 0, 0, 0, 0, 2088, 0, 0, 0,
	0, 0, 0, 0, 2086, 2080, 0, 0, 0, 0,
	0, 2072, 0, 2052, 0, 0, 0, 0, 0, 0,
	2098, 0, 0, 0, 2099, 0, 2049, 2050, 0, 2082,
	2083, 2084, 2093, 2094, 2095, 0, 0, 0, 0, 0,
	0, 2087, 2105, 0, 0, 0, 0, 0, 0, 2086,
	2080, 2051, 2102, 0, 0, 0, 0, 0, 2052, 0,
	0, 2098, 2071, 0, 0, 0, 0, 0, 0, 2099,
	0, 0, 2068, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2087, 0, 0, 0, 0, 2105, 0, 0,
	0, 0, 0, 2102, 0, 0, 2051, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2071, 0, 0,
	0, 0, 2078, 0, 0, 0, 0, 2068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2078, 0, 2074, 2075, 2076, 2077, 0,
	0, 0, 0, 0, 0, 2057, 0, 0, 0, 0,
	2091, 0, 0, 0, 0, 0, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 2075, 2076, 2077, 0, 0, 2104, 0, 2090, 0,
	2057, 2091, 2100, 0, 0, 0, 0, 0, 0, 2079,
	2081, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2096, 0, 2097, 0, 0, 2104, 0, 0,
	0, 2066, 2067, 2090, 0, 0, 0, 2100, 0, 0,
	0, 0, 0, 0, 2079, 2081, 0, 0, 0, 0,
	0, 2088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2072, 2096, 2089, 2097,
	0, 0, 0, 0, 0, 0, 2066, 2067, 0, 0,
	2063, 2064, 2070, 2092, 2069, 2065, 0, 2062, 2060, 2061,
	2053, 2054, 2055, 2056, 2058, 2059, 2088, 0, 0, 0,
	0, 4766, 0, 0, 0, 0, 0, 0, 0, 2089,
	0, 2072, 0, 0, 0, 0, 2098, 0, 0, 0,
	0, 2063, 2064, 2070, 2092, 2069, 2065, 0, 2062, 2060,
	2061, 2053, 2054, 2055, 2056, 2058, 2059, 2087, 0, 0,
	0, 0, 4765, 0, 0, 0, 0, 0, 2102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2098, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2102, 0, 0, 0, 2049, 2050, 0,
	2082, 2083, 2084, 2093, 2094, 2095, 0, 0, 2078, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2086, 2080, 0, 0, 0, 0, 0, 0, 0, 2052,
	0, 0, 0, 0, 2073, 0, 0, 0, 2049, 2050,
	2099, 2082, 2083, 2084, 2093, 2094, 2095, 0, 0, 0,
	0, 0, 0, 2078, 0, 0, 0, 0, 2105, 0,
	0, 2086, 2080, 0, 0, 0, 2091, 2051, 0, 0,
	2052, 0, 0, 0, 0, 0, 0, 0, 2071, 2073,
	0, 2099, 0, 0, 0, 0, 0, 0, 2068, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2105,
	0, 0, 2104, 0, 0, 0, 0, 0, 2051, 0,
	0, 2091, 0, 0, 0, 0, 0, 0, 0, 2071,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2068,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2074, 2075, 2076, 2077, 0, 0, 0, 0, 0,
	0, 2057, 0, 0, 2089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2063, 2064, 2070, 2092,
	2069, 2065, 0, 2062, 2060, 2061, 2053, 2054, 2055, 2056,
	2058, 2059, 2074, 2075, 2076, 2077, 0, 4764, 0, 0,
	0, 0, 2057, 0, 2090, 0, 0, 0, 2100, 2089,
	0, 0, 0, 0, 0, 2079, 2081, 0, 0, 0,
	0, 2063, 2064, 2070, 2092, 2069, 2065, 0, 2062, 2060,
	2061, 2053, 2054, 2055, 2056, 2058, 2059, 0, 2096, 0,
	2097, 0, 4342, 0, 0, 2090, 0, 2066, 2067, 2100,
	0, 0, 0, 0, 0, 0, 2079, 2081, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2096,
	0, 2097, 2072, 0, 0, 0, 0, 0, 2066, 2067,
	0, 0, 0, 2049, 2050, 0, 2082, 2083, 2084, 2093,
	2094, 2095, 0, 0, 0, 0, 0, 0, 2088, 0,
	0, 0, 0, 0, 0, 0, 2086, 2080, 0, 0,
	0, 0, 0, 2072, 0, 2052, 0, 0, 0, 0,
	0, 0, 2098, 0, 0, 0, 2099, 0, 2049, 2050,
	0, 2082, 2083, 2084, 2093, 2094, 2095, 0, 0, 0,
	0, 0, 0, 2087, 2105, 0, 0, 0, 0, 0,
	0, 2086, 2080, 2051, 2102, 0, 0, 0, 0, 0,
	2052, 0, 0, 2098, 2071, 0, 0, 0, 0, 0,
	0, 2099, 0, 0, 2068, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 2105,
	0, 0, 0, 0, 0, 2102, 0, 0, 2051, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2071,
	0, 0, 0, 0, 2078, 0, 0, 0, 0, 2068,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2073, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2078, 0, 2074, 2075, 2076,
	2077, 0, 0, 0, 0, 0, 0, 2057, 0, 0,
	0, 0, 2091, 0, 0, 0, 0, 0, 0, 0,
	0, 2073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2074, 2075, 2076, 2077, 0, 0, 2104, 0,
	2090, 0, 2057, 2091, 2100, 0, 0, 0, 0, 0,
	0, 2079, 2081, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2096, 0, 2097, 0, 0, 2104,
	0, 0, 0, 2066, 2067, 2090, 0, 0, 0, 2100,
	0, 0, 0, 0, 0, 0, 2079, 2081, 0, 0,
	0, 0, 0, 2088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2072, 2096,
	2089, 2097, 0, 0, 0, 0, 0, 0, 2066, 2067,
	0, 0, 2063, 2064, 2070, 2092, 2069, 2065, 0, 2062,
	2060, 2061, 2053, 2054, 2055, 2056, 2058, 2059, 2088, 0,
	0, 0, 0, 3751, 0, 0, 0, 0, 0, 0,
	0, 2089, 0, 2072, 0, 0, 0, 0, 2098, 0,
	0, 0, 0, 2063, 2064, 2070, 2092, 2069, 2065, 0,
	2062, 2060, 2061, 2053, 2054, 2055, 2056, 2058, 2059, 2087,
	0, 0, 0, 0, 3750, 0, 0, 0, 0, 0,
	2102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2098, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2102, 0, 0, 0, 2049,
	2050, 0, 2082, 2083, 2084, 2093, 2094, 2095, 0, 0,
	2078, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2086, 2080, 0, 0, 0, 0, 0, 0,
	0, 2052, 0, 0, 0, 0, 2073, 0, 0, 0,
	2049, 2050, 2099, 2082, 2083, 2084, 2093, 2094, 2095, 0,
	0, 0, 0, 0, 2546, 2078, 0, 0, 0, 0,
	2105, 0, 0, 2086, 2080, 0, 0, 0, 2091, 2051,
	0, 0, 2052, 0, 0, 0, 0, 0, 0, 0,
	2071, 2073, 0, 2099, 0, 0, 0, 0, 0, 0,
	2068, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2105, 0, 0, 2104, 0, 0, 0, 0, 0,
	2051, 0, 0, 2091, 0, 0, 0, 0, 0, 0,
	0, 2071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2068, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2074, 2075, 2076, 2077, 0, 0, 0,
	0, 0, 2547, 2057, 0, 0, 2089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2063, 2064,
	2070, 2092, 2069, 2065, 0, 2062, 2060, 2061, 2053, 2054,
	2055, 2056, 2058, 2059, 2074, 2075, 2076, 2077, 0, 3749,
	0, 0, 0, 0, 2057, 0, 2090, 0, 0, 0,
	2100, 2089, 0, 0, 0, 0, 0, 2079, 2081, 0,
	0, 0, 0, 2063, 2064, 2070, 2092, 2069, 2065, 0,
	2062, 2060, 2061, 2053, 2054, 2055, 2056, 2058, 2059, 0,
	2096, 0, 2097, 0, 3748, 0, 0, 2090, 0, 2066,
	2067, 2100, 0, 0, 0, 0, 0, 0, 2079, 2081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2096, 0, 2097, 2072, 0, 0, 0, 0, 0,
	2066, 2067, 0, 0, 0, 2049, 2050, 0, 2082, 2083,
	2084, 2093, 2094, 2095, 0, 0, 0, 0, 0, 0,
	2088, 0, 0, 0, 0, 0, 0, 0, 2086, 2080,
	0, 0, 0, 0, 0, 2072, 0, 2052, 0, 0,
	0, 0, 0, 0, 2098, 0, 0, 0, 2099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 2105, 0, 0, 0,
	0, 0, 0, 0, 0, 2051, 2102, 0, 0, 0,
	0, 0, 0, 0, 0, 2098, 2071, 0, 0, 0,
	2446, 0, 0, 0, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2078, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2073, 0, 0, 0, 2444, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2078, 0, 2074,
	2075, 2076, 2077, 0, 0, 0, 0, 0, 0, 2057,
	0, 0, 0, 0, 2091, 0, 0, 0, 0, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2548, 0,
	2104, 0, 2090, 0, 0, 2091, 2100, 0, 0, 0,
	0, 0, 0, 2079, 2081, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2096, 0, 2097, 0,
	0, 2104, 0, 0, 0, 2066, 2067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2072, 0, 2089, 0, 0, 0, 0, 2549, 0, 0,
	0, 0, 0, 0, 2063, 2064, 2070, 2092, 2069, 2065,
	0, 2062, 2060, 2061, 2053, 2054, 2055, 2056, 2058, 2059,
	0, 0, 0, 3713, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	2098, 0, 0, 0, 0, 2063, 2064, 2070, 2092, 2069,
	2065, 0, 2062, 2060, 2061, 2053, 2054, 2055, 2056, 2058,
	2059, 2087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2102, 0, 0, 2049, 2050, 0, 2082, 2083,
	2084, 2093, 2094, 2095, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2086, 2080,
	0, 0, 0, 0, 0, 0, 0, 2052, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2445, 2078, 0, 0, 0, 2105, 0, 0, 0,
	0, 0, 0, 0, 0, 2051, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2071, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 2049, 2050, 0, 2082, 2083,
	2084, 2093, 2094, 2095, 0, 0, 0, 0, 0, 0,
	2091, 0, 0, 0, 0, 0, 0, 0, 2086, 2080,
	0, 0, 0, 0, 0, 0, 0, 2052, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2099, 0,
	0, 0, 0, 0, 0, 0, 2104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2105, 2443, 0, 0,
	0, 0, 0, 0, 0, 2051, 0, 0, 0, 2074,
	2075, 2076, 2077, 0, 0, 0, 2071, 0, 0, 2057,
	5593, 0, 0, 0, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2090, 0, 0, 0, 2100, 0, 2089, 0,
	0, 0, 0, 2079, 2081, 0, 0, 0, 0, 0,
	2063, 2064, 2070, 2092, 2069, 2065, 0, 2062, 2060, 2061,
	2053, 2054, 2055, 2056, 2058, 2059, 2096, 0, 2097, 0,
	0, 0, 0, 0, 0, 2066, 2067, 0, 0, 2074,
	2075, 2076, 2077, 0, 0, 0, 0, 0, 0, 2057,
	0, 3816, 0, 0, 0, 2088, 0, 0, 3815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2072, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2090, 0, 0, 0, 2100, 0, 0, 0,
	0, 0, 0, 2079, 2081, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2098, 0, 0, 0, 0, 0, 2096, 0, 2097, 0,
	0, 0, 0, 0, 0, 2066, 2067, 0, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2102, 0, 0, 2088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2072, 0, 0, 0, 0, 5592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2049, 2050, 0, 2082, 2083, 2084, 2093, 2094, 2095, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 2086, 2080, 0, 0, 0, 0, 3683,
	2098, 0, 2052, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2099, 0, 0, 0, 0, 2073, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2105, 2102, 0, 0, 0, 0, 0, 0, 0,
	2051, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2091, 2071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2068, 0, 0, 0, 0, 0, 0, 0, 0,
	2049, 2050, 0, 2082, 2083, 2084, 2093, 2094, 2095, 0,
	0, 0, 0, 0, 0, 0, 2104, 0, 0, 0,
	0, 0, 2078, 2086, 2080, 0, 0, 0, 0, 0,
	0, 0, 2052, 0, 3684, 0, 0, 0, 0, 0,
	0, 0, 0, 2099, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2105, 0, 0, 0, 0, 0, 0, 0, 0,
	2051, 0, 0, 0, 2074, 2075, 2076, 2077, 0, 0,
	2091, 2071, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 2068, 0, 0, 0, 0, 0, 0, 2089, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2063, 2064, 2070, 2092, 2069, 2065, 2104, 2062, 2060, 2061,
	2053, 2054, 2055, 2056, 2058, 2059, 0, 2090, 0, 0,
	0, 2100, 0, 0, 0, 0, 0, 0, 2079, 2081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2096, 0, 2097, 0, 0, 0, 0, 0, 0,
	2066, 2067, 0, 0, 2074, 2075, 2076, 2077, 0, 0,
	0, 0, 0, 0, 2057, 0, 5168, 0, 0, 0,
	2088, 0, 0, 0, 0, 0, 0, 0, 2089, 0,
	0, 0, 0, 0, 0, 2072, 0, 0, 0, 0,
	2063, 2064, 2070, 2092, 2069, 2065, 0, 2062, 2060, 2061,
	2053, 2054, 2055, 2056, 2058, 2059, 0, 2090, 0, 0,
	0, 2100, 0, 0, 0, 0, 0, 0, 2079, 2081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2098, 0, 0, 0, 0,
	0, 2096, 0, 2097, 0, 0, 0, 0, 0, 0,
	2066, 2067, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2102, 0, 0,
	2088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2072, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2049, 2050, 0, 2082, 2083,
	2084, 2093, 2094, 2095, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2078, 2086, 2080,
	0, 0, 0, 0, 0, 2098, 0, 2052, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2099, 0,
	0, 0, 0, 2073, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2105, 2102, 0, 0,
	0, 0, 0, 0, 0, 2051, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2091, 2071, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 2049, 2050, 0, 2082, 2083,
	2084, 2093, 2094, 2095, 0, 0, 0, 0, 0, 0,
	0, 2104, 0, 0, 0, 0, 0, 2078, 2086, 2080,
	0, 0, 0, 0, 0, 0, 0, 2052, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2099, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2105, 0, 0, 0,
	0, 0, 0, 0, 0, 2051, 0, 0, 0, 2074,
	2075, 2076, 2077, 0, 0, 2091, 2071, 0, 0, 2057,
	0, 0, 0, 0, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 2064, 2070, 2092, 2069,
	2065, 2104, 2062, 2060, 2061, 2053, 2054, 2055, 2056, 2058,
	2059, 0, 2090, 0, 0, 0, 2100, 0, 0, 0,
	0, 0, 0, 2079, 2081, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2096, 0, 2097, 0,
	0, 0, 0, 0, 0, 2066, 2067, 0, 0, 2074,
	2075, 2076, 2077, 0, 0, 0, 0, 0, 0, 2057,
	0, 0, 0, 0, 0, 2088, 0, 0, 0, 0,
	0, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	2072, 0, 0, 0, 0, 2063, 2064, 2070, 2092, 2069,
	2065, 0, 2062, 2060, 2061, 2053, 2054, 2055, 2056, 2058,
	2059, 0, 2090, 0, 0, 0, 2100, 0, 0, 0,
	0, 0, 0, 2079, 2081, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2098, 0, 0, 0, 0, 0, 2096, 0, 2097, 0,
	0, 0, 0, 0, 0, 2066, 2067, 0, 0, 0,
	0, 2087, 1246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2102, 0, 0, 2088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2072, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2049, 2050, 0, 2082, 2083, 2084, 2093, 2094, 2095, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 2086, 2080, 0, 0, 0, 0, 0,
	2098, 0, 2052, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2099, 0, 0, 0, 0, 2073, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2105, 2102, 0, 0, 0, 0, 0, 0, 0,
	2051, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2091, 2071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2068, 0, 0, 0, 0, 0, 0, 0, 0,
	2049, 2050, 0, 2082, 2083, 2084, 2093, 2094, 2095, 0,
	0, 0, 0, 0, 0, 0, 2104, 0, 0, 0,
	0, 0, 2078, 2086, 2080, 0, 0, 0, 0, 0,
	0, 0, 2052, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2099, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2105, 0, 0, 0, 0, 0, 0, 0, 0,
	2051, 0, 0, 0, 2074, 2075, 2076, 2077, 0, 0,
	2091, 2071, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 2068, 0, 0, 0, 0, 0, 0, 2089, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2063, 2064, 2070, 2092, 2069, 2065, 2104, 2062, 2060, 2061,
	2053, 2054, 2055, 2056, 2058, 2059, 0, 2090, 0, 0,
	0, 2100, 0, 0, 0, 4919, 0, 0, 2079, 2081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2096, 0, 2097, 0, 0, 0, 0, 0, 0,
	2066, 2067, 0, 0, 2074, 2075, 2076, 2077, 0, 0,
	0, 0, 0, 0, 2057, 0, 4563, 0, 0, 0,
	2088, 0, 0, 0, 0, 0, 0, 0, 2089, 0,
	0, 0, 0, 0, 0, 2072, 0, 0, 0, 0,
	2063, 2064, 2070, 2092, 2069, 2065, 0, 2062, 2060, 2061,
	2053, 2054, 2055, 2056, 2058, 2059, 0, 2090, 0, 0,
	0, 2100, 0, 0, 0, 0, 0, 0, 2079, 2081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2098, 0, 0, 0, 0,
	0, 2096, 0, 2097, 0, 0, 0, 0, 0, 0,
	2066, 2067, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2102, 0, 0,
	2088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2072, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2049, 2050, 0, 2082, 2083,
	2084, 2093, 2094, 2095, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2078, 2086, 2080,
	0, 0, 0, 0, 0, 2098, 0, 2052, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2099, 0,
	0, 0, 0, 2073, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2105, 2102, 0, 0,
	0, 0, 0, 0, 0, 2051, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2091, 2071, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 2049, 2050, 0, 2082, 2083,
	2084, 2093, 2094, 2095, 0, 0, 0, 0, 0, 0,
	0, 2104, 0, 0, 0, 0, 0, 2078, 2086, 2080,
	0, 0, 0, 0, 0, 0, 0, 2052, 0, 0,
	4564, 0, 0, 0, 0, 0, 0, 0, 2099, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2105, 0, 0, 0,
	0, 0, 0, 0, 0, 2051, 0, 0, 0, 2074,
	2075, 2076, 2077, 0, 0, 2091, 2071, 0, 0, 2057,
	0, 0, 0, 0, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 2064, 2070, 2092, 2069,
	2065, 2104, 2062, 2060, 2061, 2053, 2054, 2055, 2056, 2058,
	2059, 0, 2090, 0, 0, 0, 2100, 0, 0, 0,
	0, 0, 0, 2079, 2081, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2096, 0, 2097, 0,
	0, 0, 0, 0, 0, 2066, 2067, 0, 0, 2074,
	2075, 2076, 2077, 0, 0, 0, 0, 0, 0, 2057,
	0, 0, 0, 0, 0, 2088, 0, 0, 3822, 0,
	0, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	2072, 0, 0, 0, 0, 2063, 2064, 2070, 2092, 2069,
	2065, 0, 2062, 2060, 2061, 2053, 2054, 2055, 2056, 2058,
	2059, 0, 2090, 0, 0, 0, 2100, 0, 0, 0,
	0, 0, 0, 2079, 2081, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2098, 0, 0, 0, 0, 0, 2096, 0, 2097, 0,
	0, 0, 0, 0, 0, 2066, 2067, 0, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2102, 0, 0, 2088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2072, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2049, 2050, 0, 2082, 2083, 2084, 2093, 2094, 2095, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 2086, 2080, 0, 0, 0, 3817, 0,
	2098, 0, 2052, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2099, 0, 0, 0, 0, 2073, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2105, 2102, 0, 0, 0, 0, 0, 0, 0,
	2051, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2091, 2071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2068, 0, 0, 0, 0, 0, 0, 0, 0,
	2049, 2050, 0, 2082, 2083, 2084, 2093, 2094, 2095, 0,
	0, 0, 0, 0, 0, 0, 2104, 0, 0, 0,
	0, 0, 2078, 2086, 2080, 0, 0, 0, 0, 4323,
	0, 0, 2052, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2099, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2105, 0, 0, 0, 0, 0, 0, 0, 0,
	2051, 0, 0, 0, 2074, 2075, 2076, 2077, 0, 0,
	2091, 2071, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 2068, 0, 0, 0, 0, 0, 0, 2089, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2063, 2064, 2070, 2092, 2069, 2065, 2104, 2062, 2060, 2061,
	2053, 2054, 2055, 2056, 2058, 2059, 0, 2090, 0, 0,
	0, 2100, 0, 0, 0, 0, 0, 0, 2079, 2081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2096, 0, 2097, 0, 0, 0, 0, 0, 0,
	2066, 2067, 0, 0, 2074, 2075, 2076, 2077, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 0, 0,
	2088, 0, 0, 0, 0, 0, 0, 0, 2089, 0,
	0, 0, 0, 0, 0, 2072, 0, 0, 0, 0,
	2063, 2064, 2070, 2092, 2069, 2065, 0, 2062, 2060, 2061,
	2053, 2054, 2055, 2056, 2058, 2059, 0, 2090, 0, 0,
	0, 2100, 0, 0, 0, 0, 0, 0, 2079, 2081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2098, 0, 0, 0, 0,
	0, 2096, 0, 2097, 0, 0, 0, 0, 0, 0,
	2066, 2067, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2102, 0, 0,
	2088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2072, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2049, 2050, 0, 2082, 2083,
	2084, 2093, 2094, 2095, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2078, 2086, 2080,
	0, 0, 0, 3752, 0, 2098, 0, 2052, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2099, 0,
	0, 0, 0, 2073, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2105, 2102, 0, 0,
	0, 0, 0, 0, 0, 2051, 0, 0, 3782, 0,
	0, 0, 0, 0, 0, 2091, 2071, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 2049, 2050, 0, 2082, 2083,
	2084, 2093, 2094, 2095, 0, 0, 0, 0, 0, 0,
	0, 2104, 0, 0, 0, 0, 0, 2078, 2086, 2080,
	0, 0, 0, 0, 0, 0, 0, 2052, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2099, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2105, 0, 0, 0,
	0, 0, 0, 0, 0, 2051, 0, 0, 0, 2074,
	2075, 2076, 2077, 0, 0, 2091, 2071, 0, 0, 2057,
	0, 0, 0, 0, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 2064, 2070, 2092, 2069,
	2065, 2104, 2062, 2060, 2061, 2053, 2054, 2055, 2056, 2058,
	2059, 0, 2090, 0, 0, 0, 2100, 0, 0, 0,
	0, 0, 0, 2079, 2081, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2096, 0, 2097, 0,
	0, 0, 0, 0, 0, 2066, 2067, 0, 0, 2074,
	2075, 2076, 2077, 0, 0, 0, 0, 0, 0, 2057,
	0, 0, 0, 0, 0, 2088, 0, 0, 0, 0,
	0, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	2072, 0, 0, 0, 0, 2063, 2064, 2070, 2092, 2069,
	2065, 0, 2062, 2060, 2061, 2053, 2054, 2055, 2056, 2058,
	2059, 0, 2090, 0, 0, 0, 2100, 0, 0, 0,
	0, 0, 0, 2079, 2081, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2098, 0, 0, 0, 0, 0, 2096, 0, 2097, 0,
	0, 0, 0, 0, 0, 2066, 2067, 0, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2102, 0, 0, 2088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2072, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2049, 2050, 0, 2082, 2083, 2084, 2093, 2094, 2095, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 2086, 2080, 0, 0, 0, 0, 0,
	2098, 0, 2052, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2099, 0, 0, 0, 0, 2073, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2105, 2102, 0, 0, 0, 0, 0, 0, 0,
	2051, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2091, 2071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2068, 0, 0, 0, 0, 0, 0, 0, 0,
	2049, 2050, 0, 2082, 2083, 2084, 2093, 2094, 2095, 0,
	0, 0, 0, 0, 0, 0, 2104, 0, 0, 0,
	0, 0, 2078, 0, 2080, 0, 0, 0, 0, 0,
	0, 0, 2052, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2099, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2105, 0, 0, 0, 0, 0, 0, 0, 0,
	2051, 0, 0, 0, 2074, 2075, 2076, 2077, 0, 0,
	2091, 2071, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 2068, 0, 0, 0, 0, 0, 0, 2089, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2063, 2064, 2070, 2092, 2069, 2065, 2104, 2062, 2060, 2061,
	2053, 2054, 2055, 2056, 2058, 2059, 0, 2090, 0, 0,
	0, 2100, 0, 0, 0, 0, 0, 0, 2079, 2081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2096, 0, 2097, 0, 0, 0, 0, 0, 0,
	2066, 2067, 0, 0, 2074, 2075, 2076, 2077, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 0, 0,
	2088, 2660, 0, 0, 0, 0, 0, 0, 2089, 0,
	0, 0, 0, 0, 0, 2072, 0, 0, 0, 0,
	2063, 2064, 2070, 2092, 2069, 2065, 0, 2062, 2060, 2061,
	2053, 2054, 2055, 2056, 2058, 2059, 0, 2090, 0, 0,
	0, 2100, 0, 0, 0, 0, 0, 0, 2079, 2081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2098, 0, 0, 0, 0,
	0, 2096, 0, 2097, 0, 0, 0, 0, 0, 0,
	2066, 2067, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2102, 0, 0,
	2088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2072, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2078, 0, 0,
	0, 0, 0, 0, 0, 2098, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2091, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2104, 0, 0, 0, 0, 0, 2078, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2091, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 2064, 2070, 2092, 2069,
	2065, 2104, 2062, 2060, 2061, 2053, 2054, 2055, 2056, 2058,
	2059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 2064, 2070, 2092, 2069,
	2065, 0, 2062, 2060, 2061, 2053, 2054, 2055, 2056, 2058,
	2059,
}

var sqlPact = [...]int32{
	10117, -1000, -1000, -1000, -1000, -1000, -1000, 207, -1000, -1000,
	206, 205, 204, 203, 202, 201, 195, 194, 192, 190,
	189, -1000, -1000, 188, 184, 176, 172, -1000, -1000, 170,
	169, -1000, 166, -1000, -1000, 163, -1000, 162, 160, 159,
	-1000, -1000, 157, -1000, 156, -1000, -1000, -1000, -1000, 154,
	151, 147, 109261, 108639, 109881, 2661, 142181, 122299, 2351, 114845,
	141559, 114223, 140937, 2471, 14103, 140315, 3151, 145, -1000, 139693,
	144, 143, 142, -1000, 121677, 139071, 119191, 118569, 2386, 85555,
	1865, 1863, -1000, 141, 138, -1000, 11236, 82453, 137, 136,
	134, 131, 3158, 130, -1000, 129, 128, -1000, 124, 122,
	121, -1000, 15728, 1687, -1000, 120, 119, 117, -1000, 694,
	117947, 115, 114, 113, 2927, 112, 111, 79341, 110, 109,
	108, 2790, 3261, -1000, -1000, 2435, -1000, -1000, 106, 105,
	104, 102, 99, 98, 97, 96, 95, 90, 81, 80,
	78, 75, -1000, 70, 66, 65, 64, 63, 61, -1000,
	59, 56, 54, -1000, 53, -1000, 52, 51, 49, 48,
	45, 44, 43, 42, 41, 40, 34, 33, 32, 31,
	30, 18276, -1000, -1000, 29, -1000, 2114, 1841, 1837, 1836,
	1082, 28, 26, 24, 23, 22, 21, 20, 19, 18,
	15, 14, 13, 10, 9, 8, 7, 6, 5, 4,
	2, -1, -2, -3, 164, -8, -13, -14, -15, -16,
	-17, -18, -21, 4376, 4005, -1000, 2046, 1130, 1319, 35511,
	3399, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	151481, 142801, -22, -83, -23, -1000, 3748, 1101, 64898, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 289, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 468, 2384, 746, -1000, -1000, -1000, 138449, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2658, -12, 115465,
	-1000, 2359, -1000, -1000, -1000, -1000, -1000, 745, -1000, 2656,
	2594, 347, 2590, 115465, -1000, -1000, -1000, 3868, 3767, 108017,
	2828, 4279, 4278, 4277, 4276, 4275, 150861, 1988, 2891, 4274,
	4272, 4271, 4270, 4269, 4267, 4266, -1000, 107395, 1149, 106773,
	106151, 3883, 137829, 105529, 137207, 153967, 54717, 1052, 3866, -1000,
	-1000, -1000, -1000, -1000, -1000, 142801, -1000, 1147, -1000, -1000,
	4263, 2311, 739, 121055, -1000, -1000, 136585, 2010, -1000, -1000,
	-1000, 1007, 1278, 38059, 38059, 38059, 288, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3881, -1000, -1000, -1000, -1000, 142801,
	3106, 3106, 1592, 1472, 1472, 3106, 3106, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 4262, 4261, 4256, 4252, 4251,
	-1000, -1000, -1000, 1996, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 96829, 27678, 96207, 95585, 104907, 135963, 54080, 104285, 103663,
	91851, 4249, 4248, 53443, 62358, 4004, 135341, 153345, 4001, 4000,
	1146, 2355, 1627, -1000, -1000, -1000, -1000, -1000, -1000, -39,
	84935, 4066, 142801, -1000, 264, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 52806, 736, 52169, 735, 51532, 734, 134719, -1000,
	-1000, -1000, -1000, -1000, -1000, 91219, 3756, -1000, 134097, 133475,
	1621, 2824, 4246, 4243, 1255, 4241, 3733, 1898, 4236, 4235,
	4234, 4233, 4231, 4229, 4228, 1600, 132853, 3049, 132231, 1958,
	152723, 2194, 1145, 103041, 109881, 2998, 131609, 1649, 1622, -1000,
	-1000, -1000, -1000, 3532, 3248, 3245, 1426, -1000, -1000, -1000,
	-1000, -1000, 68682, 11381, 11074, -1000, -1000, 15312, 130987, 71832,
	109881, 109881, -1000, -1000, -1000, -1000, -1000, -1000, 50895, 692,
	50258, 1040, 130365, -1000, -1000, 69312, 3358, 1200, -1000, -1000,
	-1000, -1000, -1000, 129743, 49621, 421, 48984, 924, 142801, -1000,
	3398, 2272, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2517, 1799, 4069, 3149, 90587, 2290, 1567,
	3819, 3530, 3529, 1672, 2349, 3525, 4227, 2993, 3209, 3524,
	3523, 3513, 3504, 3494, 1944, 2935, 714, 2929, 34874, 3387,
	2066, 48347, 1692, 1667, 3468, 3466, 3464, 4084, 3942, 2336,
	2226, 2241, 2288, 94963, 4226, 4225, 3778, 3449, 3447, 3214,
	3437, 2199, -1000, 3357, 1563, 260, -1000, -1000, -1000, -1000,
	-1000, -1000, 260, 1604, -1000, -1000, -1000, -1000, -1000, 97449,
	-1000, -1000, 1996, -1000, -1000, -1000, 1408, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2046, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3091, -1000, 2313, -1000,
	-1000, -1000, 2860, 3742, 3742, 3742, 3861, 449, 439, -1000,
	164, 913, 1239, -1000, -1000, 163139, -1000, -1000, 55354, 55354,
	55354, 55354, 55354, 55354, 55354, 55354, 2480, -1000, 737, -1000,
	-1000, 801, -1000, 733, 671, 610, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 732, -1000, -1000, -1000, -1000, -1000, -1000,
	4067, -1000, 30915, -1000, -1000, -1000, 448, 731, 55354, -1000,
	-1000, 4119, 4118, 933, -1000, 255, 1045, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3397, 730, 727, -1000, 726, 725, 723, 722, 721,
	-1000, 720, -1000, 719, 718, 713, 712, 710, 709, 708,
	707, -1000, 2367, -1000, -1000, -1000, -1000, -1000, -1000, 660,
	658, 658, 658, -1000, 1122, 654, 702, -1000, 311, 649,
	305, 648, 637, 635, -1000, 701, 700, 698, 693, 691,
	690, 689, 686, 683, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1123, -1000, -1000, -1000, -1000, 1448, -44, 142801, -1000,
	605, -44, -1000, -1000, 682, -1000, 39351, 39351, 39351, -1000,
	-1000, 2652, 55354, -1000, 2776, -1000, -34, -34, 968, 66788,
	-1000, 63620, 968, 490, 816, 73084, -1000, 3356, -1000, -1000,
	681, 253, -1000, -1000, -1000, -1000, 28308, 3355, 142801, 142801,
	142801, 109881, 109881, 109881, 142801, 4224, 4223, 3618, 55354, -1000,
	-1000, 81831, 155827, 117325, 1406, -42, -1000, -1000, 3985, 86791,
	81211, 3396, 155827, 3395, 3353, 155211, 89955, 279, 3584, -1000,
	-1000, 674, 4219, -1000, -1000, -1000, -1000, -1000, 3583, 4218,
	4217, 4216, 142801, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2570, 3581, -1000, -43, -1000, 113601, 2570, 3579, -1000, -43,
	2570, 3577, -1000, -43, 112981, -1000, -1000, 2570, 3576, -1000,
	-1000, 278, 3572, -1000, -1000, 275, 3567, -1000, -1000, 249,
	-95, 3566, -1000, -1000, -1000, -1000, -1000, -1000, 163139, -1000,
	-1000, -1000, 154589, -1000, 3785, -1000, 142801, -1000, 55354, -1000,
	-1000, 3982, 1868, 3823, 3921, -1000, -1000, -57, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2867, 2874, 1237, 2697, -1000,
	3636, 1647, 38059, 3718, -1000, -1000, -1000, -1000, -1000, 247,
	28308, 3221, -1000, -1000, 142801, -1000, 142801, 3106, 3106, -1000,
	-1000, -1000, 4077, 4076, 3106, 3106, 142801, 142801, -1000, -1000,
	-1000, -1000, -1000, -1000, -57, -1000, 5785, 3565, 1832, -1000,
	2695, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2369, 3558, -1000, 2593, 3557, 2357, -1000, -1000, 2676, -1000,
	3950, -1000, 159774, 1524, -1000, -1000, -1000, -1000, 2528, 3556,
	-33, -1000, -1000, 2511, -1000, 4065, 3278, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 159499, -1000,
	1892, -1000, -1000, 2462, 2262, -1000, 1465, 3554, -1000, 3144,
	3144, 102419, 3570, 71202, 69312, 84935, -55, -1000, -1000, -1000,
	-1000, -1000, -96, -1000, 27040, 163139, -1000, -1000, -1000, -1000,
	2073, 163139, 953, -1000, -1000, 3549, -1000, 163139, 946, -1000,
	-1000, 3545, -1000, 2932, -1000, 3391, -1000, -1000, -1000, 2769,
	89323, -1000, -1000, 2768, 1095, -1000, 101799, 2346, 4213, -1000,
	4212, -1000, -1000, 4211, -1000, 4210, 4209, 4208, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 101177, 2651, -1000, -1000, 1460,
	1055, 92481, -1000, 2766, 3915, -1000, 100555, 1141, -1000, 1073,
	2765, -1000, 1554, 112361, 1076, 2764, -1000, 4202, 3875, 3040,
	1073, 2763, -1000, -1000, -1000, -1000, -1000, 1067, -1000, 73704,
	-1000, 73704, -1000, 1879, -1000, 150241, -34, 109881, 4067, -1000,
	-84, -1000, -1000, -1000, 1101, -1000, 68049, -1000, 68049, 120433,
	92481, 1055, 3350, 78709, 162814, -1000, 1092, -1000, -1000, 163139,
	-1000, -1000, -1000, 2931, -1000, -210, 3138, -1000, 92481, 70572,
	3347, 2924, -1000, 163139, -1000, -1000, -1000, -1000, 163139, -1000,
	-1000, -1000, 92481, 1460, -1000, 129121, 99933, -1000, -1000, 1498,
	2918, -1000, -1000, -1000, 69312, 3346, 1474, 92481, 92481, 92481,
	92481, -1000, 128499, -1000, -1000, 2309, 1844, 3779, 2295, 109881,
	-1000, 2099, -1000, -1000, -1000, 3803, 3568, 142801, -1000, -1000,
	3388, -1000, 84315, 3388, 111741, -1000, 111121, -1000, 110501, -1000,
	109881, -1000, 109881, -1000, 4199, 4197, 4196, -1000, -1000, 4195,
	-1000, 4194, 3794, -1000, 923, 47710, 163139, 3793, -1000, 4193,
	2238, 3387, 163139, -1000, 3463, 1850, 1845, 142801, -1000, -1000,
	142801, -1000, 142801, -1000, 142801, -1000, -1000, -1000, 2686, 1748,
	-1000, -1000, 2865, -1000, -1000, -1000, 1090, -1000, -1000, 109881,
	109881, 109881, 109881, 3345, 3026, 109881, 1721, -1000, 47073, 3755,
	-1000, -1000, 3465, 4191, 1916, -1000, 2076, -1000, 3344, 3753,
	-1000, 3343, 1480, 2093, 235, 4123, 235, -1000, -1000, 281,
	-1000, -1000, 149621, -1000, 2860, -1000, 142801, -1000, 2866, 3378,
	3384, 1766, 2683, 2974, -1000, 46436, 2942, 59176, 2693, 164,
	-1000, -1000, 164, 164, 36785, -1000, -1000, 38059, 913, 86791,
	86791, 28308, 1438, 55354, 55354, 55354, 55354, 55354, 55354, 55354,
	55354, 55354, 55354, 55354, 55354, 55354, 55354, 55354, 55354, 55354,
	55354, 55354, 55354, 55354, 55354, 55354, 55354, 55354, 55354, 55354,
	55354, 55354, 55354, 55354, 55354, 55354, 55354, 55354, 55354, 2328,
	55354, 1404, 55354, 55354, 55354, 55354, 2068, -1000, -1000, 2169,
	530, 2358, 671, -1000, -1000, -1000, 4031, 4031, 4031, 1599,
	1599, 1599, 163239, 163239, 538, 4189, 801, -1000, 55354, -1000,
	149, 67408, 55354, 28940, -1000, 439, 10498, 2841, -1000, 438,
	29607, -1000, -1000, -1000, 30915, 610, 45769, 55354, 1085, 163139,
	-1000, -1000, 1699, 4073, 26402, 3407, 3204, 669, 912, 910,
	34207, 33540, 32873, 32206, 903, 902, 55354, 55354, 55354, 55354,
	55354, 55354, 55354, 55354, -1000, -1000, 4075, -1000, 4073, -1000,
	-1000, 667, -1000, 4073, 4073, -1000, 4073, 1413, 1374, 4073,
	-1000, 4073, 4073, 8794, 8794, 45132, 44495, 43858, 59813, 43221,
	55354, 31569, 42584, 41947, -1000, 61724, 142801, -44, 3979, 142801,
	55354, 324, -1000, 13710, -1000, 324, 324, 666, -86, 163139,
	2947, 2947, 65528, 2548, 2490, 2490, 2490, -1000, 968, 20621,
	968, 126639, 2535, 968, 968, 233, 270, 437, 62990, 2776,
	126019, 768, 665, -24, -25, -26, -1000, -1000, -27, -28,
	-1000, -1000, 109881, 663, 28940, 28308, 232, 2242, -89, 2968,
	2961, 2952, 2951, -1000, 2946, 2649, -1000, -1000, -1000, 2120,
	-94, 1399, 109881, 142801, 2019, -1000, -1000, -1000, -1000, 84935,
	-45, 84935, 142801, 3754, 109881, -87, -1000, 155827, 9767, -99,
	-1000, 1439, 230, 4073, -1000, -1000, -1000, 4188, 4187, -1000,
	499, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 660,
	658, 658, 658, -1000, 1122, 654, 311, 649, 305, 648,
	637, 635, -1000, -1000, -1000, -1000, -1000, 3341, 109881, 142801,
	1970, 83695, 116705, -95, 117325, 155827, -56, -1000, -1000, -1000,
	-1000, 109881, -1000, -1000, 109881, -1000, 76198, -1000, 142801, -1000,
	-1000, -1000, 4186, -1000, 109881, 109881, 2570, 3544, -1000, 109881,
	-1000, 109881, 274, 3540, -1000, -1000, 142801, -1000, 109881, 109881,
	-1000, 142801, 142801, 142801, 155827, 155827, 273, -1000, 109881, 913,
	-100, 1262, -57, -1000, -1000, -1000, -1000, 1996, -1000, 2072,
	-1000, -1000, -1000, -1000, -1000, -1000, 1468, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 933, -1000, -1000, -1000, -1000,
	4052, 4041, -54, -1000, -1000, 28308, -1000, 2214, -1000, -1000,
	-1000, -1000, 142801, 142801, -1000, -1000, 142801, 142801, -1000, -1000,
	-58, 1783, 590, 1397, -1000, 99311, 2705, 3766, 4185, 3034,
	3741, 1862, -1000, 1745, 632, -1000, 3873, 97449, 3941, 3949,
	1485, -1000, 3340, -1000, -1000, -1000, 1000, 1875, 2063, 1389,
	1387, 97449, 2593, -1000, 86791, -1000, 3035, 3859, 1472, 1568,
	1472, 1472, 1558, 1522, -1000, 97449, 2061, 1381, 1375, 5843,
	1373, 2059, 1372, 3629, -1000, -1000, 2647, 2728, -1000, -1000,
	-1000, -1000, 1908, 3088, -1000, 2869, 1519, 1519, 142801, -1000,
	1369, -1000, -1000, 1771, 1807, -1000, -1000, 127879, 1913, -1000,
	1368, 1367, 144041, 3999, 3091, 2506, 857, 2275, -1000, 1511,
	1366, 3339, -1000, -1000, -62, 3930, 3948, 1485, -1000, -1000,
	3338, 1364, -1000, 1114, -1000, -1000, -1000, 3851, 109881, 28308,
	1738, 1727, 1725, 2058, 1363, -47, -1000, 3926, 1852, -1000,
	4012, 92481, -1000, 2795, 1820, -1000, 1460, 1460, 122919, 142801,
	-1000, -1000, -1000, 3815, 3814, -1000, -1000, 1356, 1354, -1000,
	1094, 8338, 3684, -1000, 155827, 1094, 1094, 2347, 3539, 3080,
	1821, -1000, 3135, 944, 3134, -1000, -1000, -1000, 944, -55,
	84935, 142801, 229, -1000, 149, 55354, 55354, 149, 55354, 149,
	-1000, 3900, 3538, 3978, -1000, 3527, 4184, 630, -1000, -1000,
	2889, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 629, 2759,
	3337, 142801, 282, -1000, 109881, -1000, 3977, 127259, -1000, 3526,
	155827, 2593, 2758, -1000, -1000, 98691, -1000, 3522, 2284, 468,
	2756, -1000, 750, 4183, 3518, -1000, 149001, -1000, 3785, 1377,
	3508, 1197, 796, 3976, -1000, 796, 76829, -1000, 142801, -1000,
	-34, 7588, 93721, -101, -102, 435, -1000, 142801, 142801, 3699,
	2296, 2287, -1000, 1066, 69312, -1000, 69312, -107, -1000, -210,
	3131, 1686, 69312, -1000, 1055, -128, 944, -1000, 944, -1000,
	109881, 3382, -1000, 92481, 69312, -1000, 1055, 1055, 1055, 1055,
	-1000, -1000, -1000, -1000, 4182, 4181, 4180, 4178, -1000, -1000,
	1072, 109881, 142801, 109881, -1000, 3067, 1788, -1000, 224, -1000,
	155827, -1000, 155827, 142801, 109881, -1000, -1000, 1072, 142801, 1072,
	142801, 1072, 142801, 1072, 1072, -1000, -1000, -1000, -1000, -1000,
	149, -1000, -1000, 163139, -1000, 55354, -1000, -1000, 1719, 4174,
	1887, -1000, 3380, -1000, 3379, -1000, 12, 223, -1000, -1000,
	4074, 2158, -1000, 4115, -1000, -1000, -1000, -1000, -1000, 109881,
	3333, -1000, -1000, -1000, -1000, 4172, 3744, 163139, -1000, 88691,
	2123, -1000, -1000, -1000, -1000, 109881, 109881, 109881, 109881, 142801,
	3683, -1000, 142801, 3652, 3656, 109881, -1000, 4121, -1000, -1000,
	97449, -1000, 2866, 3378, -1000, -1000, -1000, -1000, -1000, -1000,
	1606, 2607, -1000, 2912, -1000, 1796, -1000, -1000, -1000, 163139,
	60450, -1000, -1000, 163139, 2101, -1000, 58539, 57902, -1000, -1000,
	1923, 109881, 2985, -1000, 2985, -82, -1000, 160589, 2911, 109881,
	-54, 38059, -1000, -1000, -1000, -1000, -1000, 997, 797, 797,
	1464, 1464, 1464, 1464, 3909, 2599, 5930, 784, 8310, 8310,
	9431, 9431, 9431, 9431, 9431, 8310, 436, 1599, 1599, 436,
	436, 436, 436, 436, 1599, 1599, 1599, 8310, 8310, 8310,
	1599, 163239, 12196, 8831, 55354, 55354, 1351, 2132, 530, 8324,
	55354, 1334, 1334, 1334, 1334, -1000, 2301, -1000, -1000, -1000,
	-1000, 3329, 626, 59813, 59813, -1000, -1000, -1000, -1000, 30261,
	55354, -1000, -1000, -1000, -1000, 41280, -1000, -1000, 159458, -335,
	415, -1000, 222, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 414, -81, 116, -1000,
	55354, 55354, 55354, 413, -1000, 220, 55354, 142801, -1000, 156450,
	766, -158, -1000, -109, 1571, -1000, 55354, -1000, -1000, 1350,
	-1000, 1349, 1347, 1344, -1000, 620, 412, -1000, 219, -1000,
	2524, 619, 618, 55354, -1000, -1000, -1000, -1000, -1000, 159067,
	-1000, -1000, 159022, -1000, -1000, 158747, -1000, -1000, 158706, -1000,
	-1000, -1000, -1000, -1000, 162714, 19815, 19774, 19075, 7646, 17566,
	16915, -110, 411, -115, 4073, 409, 407, 406, 995, 989,
	404, 403, 397, -118, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -125, 396, -1000, 3320,
	-81, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 395,
	-1000, 393, -1000, 162389, -81, 391, 6205, -1000, 59813, 59813,
	59813, 59813, 389, -1000, 160264, -1000, 162289, 40643, 40643, 40643,
	388, 161964, 55354, -81, -126, -1000, -138, -1000, -1000, -1000,
	-1000, 609, -141, -1000, -144, 1096, 39351, 64266, 28308, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1096, 1096, 55354, -1000, 55354, 2922, -1000, -1000, -1000,
	-1000, 2921, 2187, 2947, 65528, -1000, -1000, -1000, -1000, 126639,
	-1000, 4067, 3097, -1000, 126639, -1000, -1000, 142801, 605, -1000,
	126639, 126639, 28308, 968, -1000, -1000, 142801, 604, 968, 126639,
	885, -1000, -1000, -1000, -1000, -1000, 386, 75578, 116, 217,
	28308, 1073, -1000, -1000, 3073, 3073, 3073, 3073, 3073, 109881,
	-1000, -1000, 155827, 1341, -52, -127, 3125, 3123, 3122, -55,
	84935, -55, -96, 142801, -48, 4009, -255, -1000, 2388, -1000,
	86791, -1000, 800, 1226, 28308, -1000, -1000, -1000, -1000, 4073,
	155827, 3318, 290, 3109, 3098, 3093, -1000, 2637, 115465, 271,
	-95, 155827, -1000, 279, -146, -1000, -1000, 86175, 80581, -1000,
	2530, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4169, -1000,
	2570, -1000, -1000, 109881, 2570, 2570, -1000, 109881, 109881, 2570,
	-1000, 278, -1000, 275, -1000, -1000, -95, -1000, 1088, 38059,
	-1000, 1996, -1000, -1000, 1744, -1000, 2314, -1000, 1323, -1000,
	-1000, 38059, -1000, 3705, -1000, 1994, -1000, -1000, -1000, -1000,
	3510, 142801, 142801, 109881, -1000, 124159, 142801, -1000, 2520, 155827,
	-1000, 2754, 148381, 2738, 147761, 86791, -1000, -1000, 617, 1034,
	2909, 2908, 1195, 142801, 142801, 2907, 147141, 146521, -1000, 4165,
	142801, 2405, 55354, 124159, 3849, 2475, 5705, 149, 149, -1000,
	149, -1000, -1000, 616, 1358, 109881, 109881, 142801, 155827, 109881,
	2282, -1000, -1000, -1000, -1000, -1000, 98069, -1000, -1000, 1472,
	-1000, -1000, -1000, 1472, -1000, 1472, 2593, 2121, 142801, 155827,
	109881, -1000, -1000, -1000, -1000, 142801, 142801, 155827, 2633, 2727,
	2632, 3083, -1000, -1000, -1000, -1000, -1000, -1000, 155827, 145901,
	2267, 145281, 2265, 2236, -1000, -1000, -1000, 2223, 2235, 2439,
	2057, 142801, -1000, -1000, -1000, -1000, -1000, 1566, -1000, 857,
	1331, 3314, 55354, 55354, 2433, 149, 149, -1000, 149, 615,
	28308, -1000, 1361, -1000, 3392, 142801, 4112, 144661, 4110, 142801,
	142801, 142801, 155827, 3727, 142801, -50, -1000, 2081, -1000, 4012,
	-1000, 940, -1000, -128, -51, -214, -1000, 939, 938, -96,
	2311, 142801, 155827, -1000, 144041, 8338, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2425, 3082, 1205, 142801, 1465, -1000, -1000,
	2051, 1330, 1328, 97449, 2397, 2045, 2138, 155827, 69312, 1068,
	69312, 3047, -1000, -1000, 25764, -1000, 163139, 163139, -1000, 163139,
	-1000, 83073, 92481, 92481, 142801, -1000, 77459, 142801, 94341, 1035,
	3501, 74326, -96, 1055, 1460, 3415, 1895, -214, 614, 142801,
	-1000, -1000, 2593, 3492, 468, 2752, -1000, 155827, 1139, 3975,
	3491, 613, 4164, 4163, -1000, 109881, 2629, 2751, -1000, -1000,
	143421, 3457, 857, 142801, 1096, 65528, 2264, -1000, 72464, 1161,
	142801, 2157, 265, -1000, -1000, -1000, -10, 142801, -1000, 810,
	-1000, -1000, 7588, 7588, 1055, 69942, -147, -1000, 215, 612,
	932, 930, -1000, 2708, -1000, -210, -1000, 92481, 1066, 69312,
	3307, -210, 3087, 3306, -1000, -1000, 1087, 1055, 1459, 3084,
	1055, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -35, -1000, 2044, 2137, 142801, -95, -95,
	-67, -1000, -1000, 214, -52, -1000, 1072, -1000, 1072, -1000,
	1072, -1000, -1000, -1000, 163139, -1000, -1000, -1000, 1878, 1840,
	142801, -1000, 142801, 3377, -1000, 142801, -1000, -1000, 109881, -1000,
	4161, -1000, -1000, 28308, 142801, 109881, 28308, 109881, 3376, 3372,
	-1000, -1000, -1000, 142801, -1000, -1000, 142801, -1000, -1000, -1000,
	-1000, -1000, -1000, 1228, -1000, 2101, 2600, -1000, 610, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2844, -1000,
	-1000, 36785, 970, -1000, -1000, 109881, -36, -54, 55354, 55354,
	7360, 6947, 55354, 59813, 59813, -1000, 55354, 5951, -1000, -1000,
	-1000, -1000, -1000, 3295, 608, 55354, 86791, 6265, 6248, -1000,
	384, 14426, 436, -1000, 55354, -1000, 6934, -1000, 380, 40006,
	-1000, 161014, 89, -149, -1000, 21274, -81, -155, -1000, -1000,
	790, -1000, 3473, -1000, 55354, 161864, 2816, 2217, 2103, 1934,
	4073, 4108, 25126, -1000, 78089, 1098, 2544, 158315, -1000, -1000,
	-1000, -1000, 86791, 86791, 55354, 55354, -1000, 55354, 55354, 55354,
	-1000, -1000, -1000, 4073, 377, -1000, -1000, 972, -1000, -1000,
	-1000, 972, -1000, -1000, 1472, -1000, 1472, -1000, 55354, -1000,
	-1000, 3294, 55354, -1000, 86791, 86791, 59813, 59813, 59813, 59813,
	59813, 59813, 59813, 59813, 59813, 59813, 59813, 59813, 59813, 59813,
	59813, 59813, 59813, 59813, 59813, 59813, 2902, 59813, 4029, 4029,
	4029, 1128, -1000, 3368, 3294, 55354, 55354, 86791, 374, 373,
	372, -1000, 55354, -81, -1000, -1000, 11509, 607, -1000, 2836,
	-1000, 142801, -1000, 3199, -1000, 55354, -1000, -152, -1000, 2776,
	-1000, -1000, 3199, 3199, -157, 163139, 65528, 65528, -1000, 606,
	55354, 2920, -1000, -1000, 765, -338, -1000, 914, -1000, -1000,
	-1000, -1000, -1000, -1000, 909, -1000, 605, -1000, -1000, -1000,
	212, 126639, 604, -1000, 142801, 126639, 764, -1000, -162, -1000,
	-1000, -165, -1000, 126019, 370, 28308, -1000, 1096, 3129, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2944, -255, 155827, 155827,
	2038, 2024, 2017, -55, -96, 2584, -1000, 3216, 4107, -1000,
	4072, 787, 762, 209, 365, -95, 155827, 155827, 2011, 1998,
	1985, 79961, 3293, 155827, -1000, -1000, -1000, 77459, 86791, -1000,
	86791, -1000, -1000, -1000, -1000, 2570, -1000, -1000, -1000, 274,
	-1000, -1000, -1000, -1000, 3025, -1000, -57, -1000, -1000, -1000,
	55354, -1000, 1043, -1000, -1000, 3761, 601, 1325, 1321, -1000,
	-174, -1000, 908, -1000, -1000, -1000, -1000, -1000, 3237, -1000,
	3490, -1000, 2750, -1000, 1186, 2749, 1756, -1000, 55354, 592,
	3038, 591, 587, 4160, 2360, 4158, 1196, 3485, 2570, 3478,
	2570, -1000, -1000, -1000, 1010, -1000, 163139, -175, -1000, 2475,
	-1000, 585, 582, -1000, -58, 1777, 572, 1317, 1084, -1000,
	-1000, 55354, 55354, 125399, -1000, 514, 3768, -37, -1000, -1000,
	-1000, 1984, 1316, 1311, -1000, -1000, -1000, -1000, -1000, 2593,
	1976, 1310, 1305, -1000, -1000, -1000, -1000, -1000, -1000, 3431,
	3003, 2726, -1000, -1000, -1000, -1000, 2748, -1000, 142801, -1000,
	3472, 142801, 3164, 857, 142801, 3768, 3198, 1081, -1000, 3422,
	3421, 985, 142801, 55354, 55354, 161539, 161439, -1000, 1078, -1000,
	-1000, 55354, -1000, -62, -1000, 1303, 3918, 2743, 109881, -1000,
	2570, 3470, 1298, -1000, 1287, -1000, -1000, -1000, 3919, 3910,
	1322, 1852, 92481, 69312, 2839, -1000, 3899, 2569, 4042, 4012,
	69312, -1000, 122919, 92481, 92481, -1000, -1000, -1000, 4042, -1000,
	-1000, -1000, -1000, 88059, -1000, -1000, 1094, 142801, 155827, 109881,
	1993, -1000, -1000, 115465, 116085, 142801, 3080, -95, 944, -1000,
	2673, 944, 1068, 3290, -1000, 2973, -1000, -1000, 1074, 363,
	-63, -1000, 1359, 4157, 358, -176, -64, 86791, -1000, -1000,
	-1000, -1000, 2738, 109881, 580, 142801, 1392, 3029, 142801, 142801,
	3971, -1000, 2670, 652, 109881, 1022, -1000, 4067, -1000, -1000,
	-1000, 142801, 39351, 122919, -1000, 3908, 109881, 3969, 3462, 1073,
	109881, 149, 109881, 4083, -1000, -1000, 3968, 109881, 3460, 2628,
	2742, 2879, 857, 93101, 1073, 2537, -73, -1000, 2157, 38696,
	3762, -181, -1000, -1000, -1000, 1096, 76829, 65528, 55354, 4156,
	-184, -1000, -1000, -1000, -1000, -1000, 92481, 1055, 142801, 142801,
	4154, 92481, 92481, 92481, -65, 579, -1000, 906, 900, 896,
	-1000, -1000, -1000, -1000, -1000, -1000, 895, 894, 890, 887,
	-1000, -1000, 1066, -1000, -1000, -210, 69312, 1066, 69312, 149,
	-1000, 2552, -1000, 109881, 69312, -1000, 24488, 142801, 3067, -1000,
	87421, -1000, -1000, -1000, -1000, -1000, 1072, -1000, 4106, -96,
	-1000, -1000, -1000, -1000, -1000, 2445, 2689, 2445, 2131, 2130,
	-1000, -1000, -1000, 2567, -1000, -1000, -1000, -1000, 2984, 3635,
	28308, 3884, 1334, 55354, 55354, 568, 5841, 353, 1334, 55354,
	55354, 86791, 14717, -187, 55354, 55354, -1000, 55354, 756, 163139,
	-1000, 4105, 55354, 357, 355, -1000, -1000, -1000, 4071, -1000,
	-1000, -1000, 163139, 55354, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 352, -1000, 165, -1000, -1000, -1000, 152101, -1000, 55354,
	350, 3847, -1000, 349, 348, 12864, 520, 158270, 157995, 157954,
	336, -1000, -1000, -1000, 335, 331, 163139, 3368, 163139, -1000,
	-1000, 1342, 1342, 1461, 1461, 1461, 1461, 4029, 1118, 1370,
	843, 832, 832, 832, 651, 1128, 1128, 832, 832, 832,
	1128, 3288, 2904, 578, 7940, -1000, -1000, 163139, 163139, 327,
	-1000, -1000, -1000, -81, 326, 11509, -1000, -1000, 3195, 3846,
	163139, -1000, 65528, 3195, 3195, -1000, -1000, 2187, 142801, 163139,
	65528, -1000, 3097, -1000, 22568, 21924, -1000, 28308, -1000, -1000,
	-189, -1000, 86791, -1000, -1000, -1000, 4067, -1000, 75578, -1000,
	-1000, -11, -1000, 3129, -1000, 886, -1000, -1000, 92481, 92481,
	4153, 4152, -1000, 4104, 4103, 2489, 4102, 3073, -1000, -255,
	-160, 142801, 142801, 142801, -1000, 2560, -1000, 754, 4151, 782,
	28308, -1000, -95, -95, 142801, 142801, 142801, 3283, 109881, 142801,
	1825, 155827, -95, -1000, -1000, -1000, -1000, -1000, -1000, 3698,
	163139, 3367, 3181, 3177, 142801, 142801, -1000, 124159, 38059, 1664,
	124779, 142801, 3458, -1000, 3454, -1000, 1195, 2389, 157563, 66158,
	-1000, 66158, 142801, -1000, -1000, -1000, -1000, 2165, 1906, 4150,
	1249, -1000, 3805, 142801, -1000, 142801, -1000, -1000, -1000, 124159,
	-1000, 142801, 142801, 109881, 142801, -1000, 155827, 3436, -195, 163139,
	-66, -1000, 877, -1000, 1469, -1000, 23850, 142801, 155827, 109881,
	142801, 155827, 109881, 142801, -1000, 2992, 3453, 1157, 142801, -1000,
	3451, 142801, 1156, -1000, -1000, 142801, 2461, -1000, -1000, 3419,
	-1000, 163139, 161114, 149, 55354, 3435, -197, 28308, -1000, 4097,
	4093, 3450, 3811, -1000, 142801, 4092, 142801, 109881, 3694, -1000,
	-1000, -1000, -1000, 875, 870, 866, 865, 864, 4026, 122919,
	-1000, 1070, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1955, 1285, 1284, 2627, 2625, 2558, -67, 2397,
	1068, -69, 573, -1000, 1068, -1000, 92481, 69312, 4149, 2148,
	77459, 55354, 55354, -1000, 3030, -1000, 119811, 94341, 2596, -1000,
	-1000, 66158, 566, 142801, 565, 142801, 554, -1000, 149, -1000,
	4148, 124159, 551, -1000, 1041, 2549, -1000, 4060, -1000, 3424,
	-1000, 753, -1000, -1000, 258, -203, 155827, 2593, 149, 109881,
	-1000, 468, 1064, 468, 323, -71, -1000, 3455, 1192, 28308,
	109881, 3446, 2881, 857, 93101, -1000, 1377, 2974, -1000, -72,
	-1000, 531, 149, 2537, -1000, -73, 163139, -1000, 863, 319,
	-1000, 3693, -1000, -1000, -208, -1000, -1000, 4430, 4430, 92481,
	69312, 92481, 92481, 92481, 69312, 92481, -1000, 1066, 3967, -1000,
	-210, -1000, 2762, 1055, 1055, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 28308, 1759, -1000, 548, 547, -1000, -1000,
	-1000, -1000, 3635, 1334, 1334, 55354, 55354, 55354, 1334, 14717,
	-211, -1000, 1334, 1334, -81, -1000, -1000, 161014, -1000, -1000,
	-1000, 163139, -1000, 23212, 2455, -1000, 157518, -1000, 36785, -1000,
	-1000, 55354, 55354, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 59813, 3280, 545, 86791, -1000, -1000, 317, 1077, 55354,
	57265, 2776, 1077, 1077, -1000, -213, -1000, -1000, -1000, 4067,
	-1000, 4067, -11, -1000, 142801, -1000, -1000, -1000, 28308, -1000,
	92481, -1000, -1000, -1000, -1000, -1000, 4147, 4144, 2725, 4142,
	4141, -1000, -1000, -1000, 3429, -182, -183, -190, -1000, 771,
	-1000, 4140, -1000, 248, 239, 237, 155827, 3274, 208, 3066,
	3065, -95, -1000, 149, -1000, -1000, -1000, -1000, -1000, -1000,
	3063, 3966, -1000, 2230, -1000, 142801, 142801, -1000, 142801, -1000,
	28308, 142801, 3213, 1362, -1000, 1034, 2905, 544, 59813, 1227,
	109881, 987, 3167, 3166, -1000, 3958, 3845, 3127, -216, -1000,
	142801, 55354, 142801, -218, -221, 2714, -1000, -1000, 1215, 1355,
	55354, 1214, -1000, -1000, -1000, 86791, 542, 2570, 2570, -1000,
	-229, -231, -1000, -1000, -1000, 55354, 1277, 142801, 37422, -1000,
	4139, 3768, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	142801, 142801, -1000, -1000, -1000, 142801, 3768, 142801, -1000, 55354,
	-1000, 160689, 55354, 1273, -1000, -1000, -1000, 4086, 2570, 28308,
	2570, -1000, 2570, 3811, 1243, 92481, 55354, 1659, 69312, 69312,
	-1000, -1000, -1000, 2601, 142801, 155827, 109881, 2207, 2207, 3285,
	-1000, -1000, -1000, 2839, 2839, -1000, -74, 1068, -1000, 1833,
	-1000, 163139, 163139, 2449, 4138, -1000, -1000, -1000, -1000, 2901,
	-1000, -1000, -1000, 142801, 2900, 3157, -232, 66158, 541, 66158,
	540, 142801, 1062, -1000, -234, 94341, 1035, -1000, 1041, -1000,
	-1000, -1000, 73704, -1000, -1000, -1000, -1000, 468, 3965, -1000,
	3016, 3964, -1000, 4085, 539, 536, 142801, 2624, 532, 28308,
	3747, 857, 93101, -1000, 3457, 2157, -1000, 2736, 142801, 3740,
	-1000, 2974, 530, 1055, 526, 1055, -1000, -237, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1371, 1066, -75,
	-1000, 3996, 524, 951, -1000, -1000, -1000, -1000, 109881, 109881,
	55354, 55354, -1000, 1334, 1334, 1334, -1000, 308, -1000, -1000,
	2537, 3837, -1000, -76, 157243, 157202, 8071, 59813, 86791, -239,
	-1000, -1000, 142801, 163139, -77, -1000, 163139, 522, 517, 470,
	-1000, -1000, -1000, 752, 749, -1000, -1000, -1000, -1000, 4137,
	-1000, -1000, -1000, 155827, 155827, 155827, 4136, -1000, 155827, 155827,
	155827, -95, 155827, 155827, 1952, 1942, -1000, 123539, 142801, -1000,
	-1000, 1756, 2280, -1000, -1000, 142801, 2739, -1000, -1000, -1000,
	1065, 55354, 7940, 59813, 498, 55354, -1000, 496, 495, 3963,
	3643, -1000, 3019, 3254, 2154, 66158, -1000, 3635, -1000, 156811,
	-1000, 1190, 2279, -1000, -1000, -1000, -1000, 163139, 59813, 3811,
	66158, -1000, -1000, 491, 487, 163139, 485, 862, 3273, -1000,
	-1000, -1000, -1000, -96, -96, -1000, -1000, 163139, 149, 163139,
	481, 3918, -1000, -1000, -1000, -1000, 2570, 109881, -1000, 163139,
	-1000, -1000, -1000, -1000, 861, -1000, -1000, -1000, 1271, -1000,
	-1000, -1000, -1000, -1000, 4135, 3272, 115465, -1000, -245, 2219,
	86791, -1000, 1035, -1000, -1000, 2596, 477, -1000, 1054, 3638,
	3638, 1190, -246, 66158, -247, 66158, -252, 2618, 3011, -1000,
	307, 3962, 1041, 1096, -1000, 3957, 149, 3692, -1000, 149,
	-1000, 4083, 66158, -1000, 109881, 66158, 2622, 2361, 2862, 93101,
	-1000, 2879, -1000, -1000, -253, 142801, 2157, -1000, -1000, 92481,
	-1000, -1000, 4058, -1000, 2762, -1000, 142801, -1000, 142801, -1000,
	-1000, -254, -260, -1000, 2380, 55354, 36785, -1000, -1000, 8071,
	-262, -1000, -80, -1000, 3955, 57265, 4134, 4132, 4131, -1000,
	-1000, -1000, -255, -255, -255, -1000, -95, -95, -95, -95,
	-95, 142801, 142801, -1000, 2227, -1000, 2738, -1000, -1000, 3445,
	-1000, 3192, 475, 156766, 7940, 2838, 142801, 156491, 2593, 2593,
	-1000, 3947, 3251, -1000, -1000, 2433, 472, -1000, -1000, -1000,
	-1000, 970, 142801, 1054, 3189, 109881, 7940, 1194, -263, 2445,
	2445, 55354, 36148, 2441, -1000, 55354, -1000, -1000, 3811, 69312,
	155827, -1000, 155827, 2619, -1000, 3233, 8637, -1000, 2618, 142801,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2154, 1190, -265, 2433, -268, -1000, -1000, 3800,
	-1000, 3686, 3030, 149, -1000, 149, -1000, 4130, 1064, 306,
	-270, 1192, -271, 109881, 2249, -1000, 857, -1000, 2881, 1096,
	3601, -1000, -273, -1000, -1000, -1000, -276, -281, -1000, -1000,
	303, 56628, 56628, 56628, -81, -82, -1000, 142801, 471, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 181, 180, -1000, -1000,
	3406, 960, -1000, 948, 2178, 298, 1188, 292, 272, -1000,
	-1000, -1000, 3127, -1000, 142801, -1000, -1000, -1000, 960, 468,
	-1000, 55354, 1190, -288, -1000, 1135, -289, -1000, 1133, -291,
	-1000, 3259, -1000, -294, 2570, -1000, -255, 273, 2207, 1063,
	3895, 2565, 8637, -1000, 4082, 93101, -1000, -1000, -1000, 2848,
	-296, -1000, -1000, 2433, 2154, 1190, 1054, 2433, 2692, -1000,
	2449, 1062, -1000, -1000, -1000, -1000, 1190, 459, 2154, 458,
	1624, 857, -1000, -1000, 1472, 3747, 3483, 1509, 1055, -1000,
	-1000, -1000, 3496, -1000, 61087, 2605, 2125, 160164, 3496, 3496,
	-1000, -1000, 155827, 155827, 142801, 1054, 3876, -1000, 954, 949,
	1679, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1096,
	-297, -1000, 2838, 163139, 1054, -1000, 2445, 3062, -1000, 2445,
	3258, -1000, 2437, -1000, -1000, -1000, -1000, 3257, -1000, 2069,
	4022, -1000, -1000, 3928, 55354, -1000, -1000, -1000, -1000, -1000,
	-1000, 1054, 142801, 1054, 2433, 2154, 1096, 1054, 2110, 2108,
	4129, 1035, 2618, 2154, 66158, 2433, 66158, 2392, -1000, 142801,
	-1000, 2361, 1441, -1000, 1846, -1000, -1000, 2135, 3954, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -95, -95, -1000, -1000,
	860, -1000, 3633, -1000, 1211, 2438, 2438, -1000, -1000, 948,
	-1000, -1000, 457, -1000, 456, -1000, 155827, 2547, -1000, -1000,
	-1000, 163139, -1000, -1000, 1096, 1054, 2433, 1365, 1096, -1000,
	4126, -1000, 2618, -1000, 2433, -305, 1054, -308, 2467, -1000,
	-1000, -96, 2249, -1000, 1835, 76829, 2122, -1000, -1000, 2532,
	55991, 55354, -1000, 4015, -1000, -1000, 2941, -1000, 3127, 55354,
	55354, 273, 74948, 13201, 1365, 1096, 1054, -1000, 1108, -1000,
	1365, -1000, 2848, 1054, 1190, 1096, 2154, 1910, 857, 1624,
	76829, -279, -1000, -1000, -1000, 163139, -1000, -1000, -1000, -1000,
	-310, -311, -1000, -214, 122919, -317, -1000, -1000, -1000, -1000,
	1365, 1096, -1000, -1000, -1000, 1096, 2154, 1365, 2433, -1000,
	-1000, 2223, 155827, 2392, -279, -1000, 2433, 1269, -313, -1000,
	-1000, 1365, 1365, 2433, -1000, 1054, -1000, 1910, -1000, -1000,
	-1000, 453, -1000, -1000, -1000, 1054, 1096, -1000, 55354, 1096,
	1365, -318, 1365, -1000, 2433, -1000, -1000,
}

var sqlPgo = [...]int16{
	0, 5053, 5049, 22, 5048, 5047, 5046, 5045, 5044, 5043,
	5039, 5038, 5036, 5035, 5034, 5032, 166, 5031, 5029, 5028,
	5027, 5024, 5023, 5022, 5020, 5017, 5014, 5012, 5006, 5005,
	5002, 5001, 5000, 4998, 4997, 4996, 4995, 4992, 4990, 4988,
	4987, 4986, 4985, 4984, 4983, 4982, 4981, 4979, 4977, 4976,
	4975, 4974, 4973, 4972, 4970, 4966, 4964, 4962, 4961, 4959,
	4957, 4955, 4954, 4947, 4945, 4941, 4938, 4935, 4934, 4933,
	4931, 4929, 4927, 4926, 4925, 4918, 4917, 4916, 4913, 4912,
	4911, 4910, 4909, 4908, 73, 4907, 4905, 4904, 4902, 4898,
	4892, 4891, 4890, 4889, 4888, 4885, 4883, 4880, 4879, 4878,
	4877, 4876, 4874, 4873, 4871, 4870, 4869, 102, 81, 4868,
	327, 4867, 4865, 4863, 4862, 4861, 4858, 4857, 4856, 4855,
	4854, 4852, 4847, 4846, 4844, 326, 4842, 29, 198, 4841,
	4839, 20, 4838, 4836, 325, 4835, 4834, 4833, 4832, 4831,
	334, 4830, 4829, 4828, 4826, 4825, 312, 4823, 4821, 4818,
	4817, 4816, 4814, 227, 229, 4813, 4805, 1900, 4800, 4797,
	4791, 4788, 4784, 4783, 4782, 308, 313, 4779, 4773, 4771,
	305, 201, 4770, 324, 4768, 4766, 4761, 4760, 4751, 4750,
	4749, 4748, 4747, 4744, 4743, 4742, 4741, 4740, 4731, 4729,
	4728, 4722, 4714, 4713, 4712, 4711, 4710, 4709, 4708, 4698,
	4697, 4694, 4693, 4688, 4687, 4685, 4684, 4682, 4681, 4680,
	4678, 4674, 4672, 4667, 4666, 4665, 4664, 4662, 304, 259,
	156, 4661, 4658, 4656, 4653, 4649, 4648, 323, 322, 4646,
	4644, 4643, 4642, 4641, 3903, 4640, 4638, 4634, 4633, 4630,
	4627, 4624, 4620, 4619, 143, 7, 41, 4616, 4614, 119,
	110, 106, 95, 126, 116, 4613, 4612, 139, 4609, 154,
	140, 4607, 137, 127, 31, 71, 282, 298, 5211, 296,
	4603, 4602, 4600, 297, 236, 4599, 294, 4598, 4597, 4596,
	4594, 4592, 4591, 86, 65, 254, 4586, 169, 4585, 4584,
	162, 204, 214, 212, 208, 209, 186, 63, 134, 97,
	77, 58, 12, 98, 258, 18, 261, 6, 3, 319,
	4583, 315, 11, 172, 19, 40, 4580, 4579, 4578, 4576,
	4732, 160, 4575, 317, 300, 202, 4574, 4572, 4571, 1448,
	4569, 4564, 59, 276, 225, 108, 130, 96, 157, 4563,
	182, 222, 42, 4554, 194, 72, 4550, 4549, 125, 107,
	10356, 15243, 4548, 4540, 148, 85, 146, 9299, 223, 184,
	249, 114, 151, 193, 192, 4538, 66, 4535, 177, 174,
	211, 393, 4534, 112, 4530, 3946, 120, 215, 187, 6692,
	4528, 4526, 4525, 104, 4522, 124, 4521, 4517, 79, 39,
	5, 1, 168, 56, 43, 13, 4516, 34, 152, 61,
	26, 4515, 33, 4514, 4513, 4512, 4511, 60, 4510, 57,
	189, 4509, 4506, 330, 4505, 92, 64, 205, 4499, 44,
	275, 4498, 281, 153, 4496, 4495, 228, 247, 240, 217,
	269, 4494, 46, 284, 4493, 4492, 4491, 4487, 4486, 332,
	159, 4, 158, 4484, 4483, 179, 4480, 70, 293, 239,
	4479, 76, 4477, 4476, 210, 67, 173, 328, 241, 280,
	147, 278, 230, 289, 4475, 4473, 4471, 226, 4470, 4469,
	277, 203, 4468, 4467, 268, 339, 115, 62, 25, 207,
	99, 291, 103, 237, 197, 4466, 243, 171, 4465, 188,
	4464, 111, 4463, 331, 213, 266, 54, 8, 17, 123,
	129, 90, 38, 287, 191, 253, 145, 4462, 8767, 3042,
	3016, 285, 4460, 180, 149, 93, 155, 183, 316, 100,
	4458, 4457, 2992, 4456, 4454, 4452, 4451, 231, 4450, 4449,
	252, 176, 175, 4448, 170, 238, 4446, 128, 87, 69,
	35, 150, 109, 320, 141, 274, 200, 306, 4445, 4444,
	4443, 224, 4442, 94, 257, 246, 4441, 250, 309, 78,
	4438, 122, 4437, 181, 2585, 84, 185, 4436, 271, 4435,
	4434, 4433, 4432, 4431, 4428, 4427, 4426, 290, 4422, 4421,
	4420, 47, 235, 4417, 234, 195, 286, 74, 68, 233,
	121, 4234, 131, 2578, 245, 45, 2, 4413, 431, 4412,
	5294, 75, 4408, 0, 15227, 10908, 14197, 4407, 4406, 14765,
	4404, 190, 4401, 4400, 4398, 260, 91, 4397, 4396, 4395,
	138, 4393, 105, 4392, 4391, 89, 4390, 28, 15, 27,
	32, 36, 848, 842, 4387, 4385, 216, 167, 23, 4384,
	321, 283, 4383, 4382, 4381, 4379, 117, 4374, 55, 4371,
	52, 4370, 4369, 53, 14, 37, 4368, 4367, 248, 196,
	3842, 199, 178, 4366, 142, 4364, 4363, 301, 82, 161,
	4360, 4357, 314, 256, 263, 113, 4356, 307, 4353, 242,
	4352, 83, 48, 4351, 4350, 299, 136, 135, 101, 303,
	163, 50, 4346, 4345, 4344, 4342, 221, 4339, 4337, 4336,
	4335, 4334, 132, 164, 4333, 80, 4326, 4323, 4322, 49,
	267, 219, 4320, 16, 4318, 4317, 4315, 270, 273, 318,
	218, 264, 4314, 4312, 206, 4311, 4310, 4309, 310, 4307,
	4304, 3905, 338, 4299, 51, 4298, 4296, 4293, 10, 4292,
	4287, 244, 3688, 4286, 4284, 9, 4282, 232,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 4, 4, 4, 4,
	4, 4, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 14, 14, 10, 10, 10, 10, 11, 11, 11,
	11, 11, 63, 63, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	20, 20, 20, 20, 20, 20, 20, 42, 44, 43,
	37, 37, 38, 38, 39, 40, 40, 45, 47, 46,
	48, 49, 49, 50, 50, 50, 13, 13, 13, 9,
	9, 9, 9, 9, 9, 9, 9, 9, 23, 23,
	51, 51, 24, 24, 53, 53, 25, 25, 54, 54,
	672, 672, 672, 673, 673, 674, 674, 674, 28, 56,
	58, 58, 479, 479, 21, 22, 22, 22, 22, 675,
	675, 675, 675, 41, 29, 57, 34, 34, 34, 34,
	34, 247, 247, 247, 247, 27, 27, 52, 52, 293,
	293, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 671, 671, 295, 295, 294, 280, 280, 281, 281,
	282, 282, 676, 676, 296, 296, 296, 297, 297, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 565,
	565, 565, 596, 596, 596, 596, 598, 598, 723, 723,
	724, 724, 724, 724, 724, 156, 156, 453, 453, 453,
	72, 72, 72, 72, 72, 661, 661, 249, 249, 249,
	251, 251, 250, 250, 250, 250, 250, 250, 250, 250,
	96, 96, 97, 97, 288, 288, 287, 287, 287, 287,
	287, 287, 287, 682, 682, 681, 719, 719, 680, 680,
	683, 683, 683, 248, 248, 248, 93, 93, 115, 115,
	152, 152, 152, 152, 152, 152, 152, 152, 153, 153,
	154, 154, 692, 692, 692, 252, 252, 252, 254, 254,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 259, 19, 19, 135, 135,
	135, 135, 135, 135, 135, 130, 130, 600, 600, 601,
	601, 243, 243, 244, 244, 244, 244, 245, 245, 246,
	246, 246, 87, 87, 256, 256, 258, 258, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 75, 75, 75, 75, 75, 76, 76, 76, 76,
	76, 76, 77, 77, 77, 77, 77, 77, 78, 78,
	85, 85, 85, 85, 85, 85, 85, 85, 220, 220,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 101, 101, 92, 92,
	92, 92, 92, 104, 104, 693, 693, 694, 694, 712,
	698, 698, 699, 699, 702, 702, 702, 703, 703, 703,
	703, 703, 711, 711, 711, 711, 711, 705, 704, 706,
	706, 707, 707, 709, 709, 709, 709, 709, 710, 710,
	710, 710, 710, 710, 710, 710, 710, 710, 710, 710,
	710, 710, 710, 710, 710, 697, 713, 714, 714, 715,
	715, 716, 716, 716, 123, 123, 123, 718, 718, 717,
	717, 700, 700, 701, 701, 67, 708, 708, 726, 726,
	68, 69, 70, 71, 695, 695, 725, 725, 725, 725,
	725, 725, 725, 725, 725, 725, 725, 725, 725, 725,
	725, 725, 725, 727, 727, 728, 728, 729, 729, 729,
	729, 729, 729, 729, 729, 729, 729, 729, 729, 729,
	729, 729, 729, 729, 729, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 105, 105, 411, 411, 374, 374,
	106, 106, 106, 107, 107, 108, 108, 108, 108, 89,
	89, 89, 658, 658, 659, 665, 730, 730, 556, 556,
	555, 555, 110, 110, 452, 452, 111, 111, 111, 111,
	111, 111, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 121, 121, 121,
	121, 121, 122, 122, 122, 119, 119, 119, 116, 116,
	116, 114, 114, 114, 120, 120, 120, 664, 360, 360,
	118, 118, 118, 117, 117, 117, 427, 427, 428, 430,
	429, 124, 124, 124, 124, 375, 125, 125, 125, 125,
	125, 125, 125, 125, 128, 128, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 558,
	558, 5, 5, 286, 286, 285, 285, 285, 285, 6,
	6, 6, 291, 291, 290, 289, 126, 126, 126, 520,
	520, 131, 131, 131, 468, 468, 132, 132, 132, 132,
	132, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 668,
	668, 420, 420, 323, 323, 323, 323, 144, 144, 144,
	144, 145, 145, 145, 145, 146, 146, 229, 229, 162,
	162, 162, 162, 161, 161, 161, 161, 161, 161, 161,
	161, 79, 79, 79, 80, 80, 81, 81, 82, 82,
	83, 83, 84, 84, 84, 84, 84, 165, 165, 33,
	33, 33, 33, 166, 166, 720, 720, 168, 164, 164,
	164, 164, 164, 164, 164, 163, 163, 167, 167, 167,
	167, 169, 171, 171, 171, 171, 171, 170, 170, 170,
	170, 170, 172, 172, 590, 590, 438, 438, 588, 588,
	612, 612, 589, 589, 381, 381, 381, 381, 381, 382,
	382, 382, 599, 599, 599, 599, 599, 599, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 230, 230,
	230, 231, 231, 236, 236, 237, 237, 237, 238, 238,
	238, 235, 235, 235, 232, 232, 233, 233, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 241, 241,
	239, 239, 240, 240, 732, 732, 731, 731, 242, 242,
	242, 242, 242, 201, 201, 201, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 439,
	439, 204, 204, 204, 188, 188, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 255, 255, 255, 255, 255,
	180, 180, 180, 180, 180, 180, 180, 180, 181, 181,
	181, 175, 175, 190, 190, 190, 190, 190, 182, 182,
	183, 183, 183, 184, 184, 184, 184, 212, 212, 187,
	187, 187, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 176, 176, 176, 176, 192, 192, 192, 192, 475,
	475, 475, 218, 218, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	215, 215, 215, 215, 215, 215, 684, 684, 685, 685,
	685, 208, 208, 208, 208, 208, 208, 536, 536, 202,
	202, 202, 202, 207, 207, 207, 207, 186, 186, 186,
	186, 210, 210, 210, 210, 458, 458, 199, 199, 199,
	200, 200, 200, 205, 205, 217, 206, 412, 412, 203,
	203, 209, 209, 209, 209, 211, 211, 211, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	178, 178, 178, 178, 179, 179, 179, 179, 213, 213,
	198, 198, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 733, 733, 194, 194, 194, 193, 193,
	193, 193, 196, 196, 197, 197, 197, 197, 197, 197,
	197, 195, 185, 216, 666, 666, 662, 662, 662, 662,
	662, 662, 662, 662, 662, 662, 660, 660, 660, 660,
	660, 660, 660, 660, 660, 663, 663, 663, 663, 663,
	667, 667, 136, 136, 136, 136, 136, 136, 136, 147,
	147, 147, 147, 147, 147, 147, 150, 150, 137, 137,
	137, 137, 137, 137, 137, 140, 140, 138, 138, 138,
	138, 139, 139, 98, 98, 98, 98, 98, 18, 18,
	18, 99, 99, 314, 314, 264, 264, 264, 399, 399,
	265, 265, 389, 389, 389, 389, 260, 260, 261, 261,
	262, 263, 263, 100, 100, 734, 734, 734, 677, 677,
	677, 678, 678, 678, 678, 678, 678, 383, 383, 384,
	384, 500, 500, 500, 500, 500, 387, 387, 387, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 397, 398,
	398, 390, 390, 396, 395, 395, 394, 394, 393, 393,
	391, 392, 392, 392, 401, 401, 400, 403, 403, 402,
	499, 621, 621, 623, 623, 623, 623, 623, 623, 623,
	625, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	625, 625, 625, 625, 625, 625, 625, 476, 476, 735,
	735, 736, 737, 619, 619, 619, 619, 619, 620, 615,
	615, 616, 616, 616, 616, 616, 385, 385, 386, 386,
	386, 386, 617, 618, 418, 418, 540, 622, 622, 624,
	624, 626, 738, 738, 738, 738, 738, 738, 739, 739,
	739, 498, 498, 497, 497, 496, 496, 409, 409, 627,
	627, 627, 627, 628, 628, 628, 628, 628, 631, 630,
	629, 629, 629, 629, 629, 103, 103, 103, 455, 455,
	454, 454, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	225, 225, 326, 326, 326, 95, 95, 95, 15, 15,
	15, 15, 15, 15, 15, 341, 341, 16, 16, 16,
	16, 679, 679, 679, 102, 102, 102, 102, 102, 102,
	407, 407, 407, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 670,
	670, 669, 669, 327, 327, 741, 741, 109, 109, 109,
	109, 109, 109, 109, 109, 559, 559, 560, 560, 94,
	94, 94, 94, 94, 477, 477, 474, 474, 473, 473,
	417, 417, 538, 538, 538, 539, 331, 331, 332, 332,
	283, 283, 283, 478, 478, 478, 36, 35, 26, 26,
	30, 30, 31, 31, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 32, 32, 60, 60, 60, 60, 61,
	61, 61, 61, 64, 64, 65, 65, 59, 59, 59,
	59, 62, 62, 55, 55, 66, 66, 66, 66, 66,
	686, 688, 688, 687, 687, 691, 691, 691, 691, 691,
	691, 689, 689, 362, 362, 690, 690, 721, 721, 722,
	722, 143, 143, 148, 148, 148, 148, 148, 149, 149,
	149, 149, 151, 151, 151, 151, 160, 160, 221, 221,
	221, 221, 221, 221, 221, 73, 73, 86, 86, 158,
	743, 743, 743, 159, 159, 159, 222, 222, 222, 222,
	223, 223, 224, 224, 742, 742, 324, 324, 493, 493,
	494, 494, 744, 744, 495, 495, 495, 495, 495, 317,
	316, 318, 318, 319, 319, 91, 91, 91, 305, 305,
	304, 307, 307, 306, 308, 308, 309, 309, 302, 302,
	602, 602, 311, 311, 311, 312, 312, 298, 298, 299,
	299, 300, 300, 301, 301, 315, 315, 597, 597, 745,
	745, 134, 134, 134, 228, 228, 373, 373, 373, 486,
	486, 486, 410, 410, 338, 338, 492, 492, 492, 492,
	492, 451, 451, 451, 227, 227, 425, 425, 441, 441,
	442, 442, 552, 552, 443, 141, 141, 142, 142, 157,
	157, 268, 268, 266, 266, 266, 266, 266, 266, 266,
	266, 273, 273, 274, 274, 275, 275, 276, 277, 277,
	277, 277, 431, 431, 278, 278, 278, 267, 267, 267,
	269, 269, 269, 269, 269, 269, 269, 272, 272, 272,
	272, 279, 279, 279, 271, 271, 638, 638, 638, 640,
	640, 642, 642, 641, 641, 637, 637, 639, 639, 740,
	740, 457, 457, 457, 406, 408, 404, 404, 405, 405,
	415, 415, 413, 414, 414, 416, 416, 537, 537, 537,
	284, 284, 284, 448, 448, 448, 448, 449, 449, 482,
	482, 480, 480, 480, 480, 481, 481, 483, 483, 483,
	484, 484, 485, 485, 445, 445, 446, 446, 447, 447,
	447, 447, 516, 516, 270, 270, 270, 422, 422, 422,
	423, 423, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 507, 507, 505, 505, 505, 505, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 542, 543,
	543, 424, 424, 544, 489, 489, 490, 490, 487, 487,
	488, 488, 491, 491, 656, 656, 656, 657, 657, 535,
	535, 545, 545, 545, 545, 545, 545, 531, 531, 532,
	532, 533, 533, 534, 534, 553, 554, 554, 461, 461,
	461, 461, 459, 459, 462, 462, 462, 462, 462, 460,
	460, 546, 546, 546, 546, 450, 450, 226, 226, 547,
	547, 547, 547, 548, 549, 549, 550, 550, 501, 502,
	502, 561, 561, 561, 561, 563, 421, 421, 421, 421,
	421, 614, 613, 613, 562, 562, 562, 562, 562, 562,
	562, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 578, 578, 578, 578, 578, 578, 578,
	564, 564, 564, 564, 564, 564, 564, 568, 568, 568,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 569, 569, 574, 574, 575, 575, 575, 570, 571,
	576, 576, 576, 576, 746, 746, 580, 580, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 566, 566, 566,
	573, 573, 573, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 469, 469, 471, 471,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 510, 510, 510, 510, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	632, 632, 632, 632, 632, 632, 632, 632, 512, 512,
	635, 635, 636, 636, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 643, 643, 644, 644, 646,
	646, 647, 647, 648, 649, 649, 649, 650, 651, 651,
	645, 645, 652, 652, 652, 652, 653, 653, 654, 654,
	654, 654, 654, 655, 655, 655, 655, 655, 522, 522,
	523, 523, 529, 529, 529, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	380, 380, 379, 328, 328, 328, 328, 328, 328, 436,
	436, 434, 434, 434, 437, 437, 435, 435, 433, 433,
	432, 432, 519, 519, 517, 517, 521, 521, 463, 463,
	579, 579, 579, 579, 579, 579, 579, 579, 464, 464,
	464, 472, 465, 465, 466, 466, 466, 466, 466, 513,
	514, 467, 467, 467, 515, 515, 524, 528, 528, 527,
	526, 526, 525, 525, 503, 503, 504, 504, 444, 444,
	747, 747, 440, 440, 551, 551, 551, 551, 608, 608,
	377, 377, 426, 426, 376, 376, 368, 368, 369, 369,
	369, 369, 419, 419, 530, 530, 581, 581, 582, 582,
	583, 583, 584, 584, 585, 586, 587, 518, 518, 349,
	348, 335, 336, 347, 346, 345, 334, 337, 342, 343,
	344, 339, 340, 356, 355, 354, 303, 310, 361, 363,
	363, 366, 366, 367, 365, 364, 364, 351, 352, 353,
	557, 333, 370, 370, 371, 371, 371, 372, 372, 372,
	372, 329, 329, 329, 330, 330, 357, 357, 358, 359,
	359, 350, 350, 350, 320, 320, 320, 321, 321, 322,
	322, 595, 595, 592, 592, 592, 593, 593, 593, 696,
	594, 594, 594, 594, 591, 591, 591, 591, 591, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 604, 604, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 606, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 611, 611, 611, 611,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 9, 7, 9,
	5, 6, 8, 7, 7, 9, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 1, 1, 1, 0, 1, 6, 6,
	4, 6, 2, 1, 4, 8, 7, 10, 9, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 4, 4,
	6, 5, 6, 5, 6, 4, 8, 3, 8, 4,
	2, 3, 10, 3, 6, 4, 3, 1, 3, 4,
	4, 2, 1, 1, 3, 1, 3, 2, 4, 3,
	2, 3, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 6, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 1, 3, 1, 3,
	6, 4, 6, 7, 9, 6, 2, 2, 3, 0,
	8, 6, 8, 7, 2, 0, 1, 2, 5, 0,
	1, 3, 3, 1, 3, 1, 3, 3, 3, 3,
	12, 3, 5, 4, 1, 3, 3, 3, 3, 2,
	4, 4, 4, 1, 1, 2, 1, 4, 1, 0,
	3, 3, 0, 4, 6, 0, 6, 4, 4, 4,
	5, 7, 6, 8, 7, 9, 8, 2, 1, 3,
	1, 3, 3, 3, 0, 2, 5, 0, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 1, 1, 1, 3, 3, 6, 4,
	9, 7, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 2, 2, 1, 2, 3, 3, 4,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 4, 3,
	6, 6, 6, 6, 6, 8, 4, 4, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 3, 3, 6, 3,
	8, 5, 3, 12, 4, 2, 0, 1, 0, 1,
	1, 0, 1, 3, 1, 3, 3, 3, 3, 2,
	2, 1, 1, 1, 1, 2, 1, 1, 1, 1,
	0, 1, 2, 2, 2, 1, 1, 1, 4, 5,
	1, 1, 1, 1, 3, 3, 2, 2, 1, 2,
	2, 2, 2, 1, 1, 1, 2, 1, 1, 3,
	0, 1, 4, 0, 4, 6, 3, 1, 3, 2,
	1, 3, 2, 1, 3, 5, 1, 2, 1, 0,
	6, 6, 6, 8, 1, 0, 4, 3, 3, 4,
	3, 4, 4, 4, 7, 3, 3, 4, 3, 3,
	3, 3, 3, 1, 0, 1, 0, 4, 3, 3,
	3, 3, 3, 6, 4, 4, 4, 5, 3, 3,
	3, 3, 3, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 1, 2, 1, 2,
	1, 2, 1, 2, 7, 3, 2, 0, 1, 3,
	1, 3, 0, 1, 2, 2, 1, 2, 1, 6,
	10, 5, 1, 3, 3, 1, 1, 0, 2, 0,
	2, 0, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 1, 1, 3,
	4, 6, 3, 3, 5, 3, 1, 3, 1, 1,
	1, 2, 2, 2, 2, 1, 2, 2, 5, 3,
	3, 6, 6, 3, 1, 1, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	3, 4, 3, 1, 2, 3, 2, 2, 2, 4,
	6, 3, 1, 2, 2, 7, 5, 7, 2, 3,
	0, 3, 5, 2, 3, 0, 2, 3, 2, 3,
	2, 7, 4, 7, 8, 8, 9, 11, 11, 11,
	6, 2, 6, 9, 4, 7, 7, 10, 7, 10,
	10, 10, 13, 10, 13, 5, 8, 5, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 2, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 4,
	4, 3, 4, 1, 1, 1, 1, 5, 4, 5,
	3, 3, 2, 2, 6, 3, 3, 3, 3, 4,
	4, 3, 1, 3, 3, 2, 2, 1, 3, 3,
	3, 1, 2, 1, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 2, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 2, 1, 2, 2,
	2, 9, 2, 1, 0, 1, 1, 0, 1, 2,
	0, 2, 2, 0, 2, 2, 2, 2, 1, 2,
	3, 3, 4, 4, 4, 4, 3, 3, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	3, 3, 3, 2, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	3, 6, 8, 3, 3, 3, 4, 8, 6, 4,
	5, 5, 5, 5, 3, 0, 1, 1, 1, 1,
	4, 4, 3, 4, 4, 3, 4, 4, 1, 4,
	4, 5, 3, 5, 5, 5, 7, 3, 3, 3,
	5, 7, 4, 2, 6, 4, 3, 2, 3, 4,
	4, 3, 5, 3, 6, 5, 6, 3, 5, 6,
	3, 5, 3, 5, 3, 3, 4, 4, 5, 0,
	1, 1, 1, 1, 3, 2, 3, 4, 3, 4,
	3, 5, 3, 4, 4, 3, 4, 5, 3, 4,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	3, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 6, 4, 2,
	3, 3, 4, 4, 5, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 7, 5, 2, 0, 3,
	3, 4, 3, 3, 3, 5, 3, 3, 3, 4,
	4, 4, 4, 5, 6, 4, 4, 4, 4, 3,
	4, 5, 4, 4, 5, 6, 5, 5, 2, 3,
	2, 3, 6, 6, 7, 9, 7, 9, 4, 3,
	4, 4, 5, 1, 1, 10, 10, 3, 5, 5,
	5, 3, 5, 6, 4, 4, 5, 5, 2, 6,
	3, 2, 5, 4, 2, 0, 1, 1, 1, 1,
	2, 3, 2, 2, 3, 2, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 0, 1, 2, 1, 2, 1, 2, 2, 1,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 7,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 3, 3, 6, 5, 8, 3, 6, 6,
	3, 12, 15, 1, 0, 1, 2, 3, 0, 2,
	0, 4, 0, 4, 5, 4, 1, 1, 1, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 2, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	0, 1, 0, 1, 1, 0, 1, 4, 1, 0,
	3, 7, 7, 1, 1, 3, 7, 1, 3, 11,
	3, 2, 0, 3, 1, 2, 2, 3, 2, 6,
	2, 1, 2, 2, 3, 6, 4, 2, 3, 5,
	5, 5, 2, 5, 5, 2, 2, 2, 0, 1,
	1, 3, 4, 10, 11, 12, 9, 10, 5, 3,
	1, 5, 9, 7, 11, 3, 3, 0, 2, 4,
	3, 3, 1, 6, 1, 3, 1, 2, 0, 1,
	2, 3, 0, 1, 3, 3, 2, 2, 1, 1,
	1, 4, 0, 3, 0, 4, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 2, 3, 1,
	4, 2, 3, 2, 2, 4, 7, 3, 4, 6,
	5, 7, 5, 5, 3, 3, 0, 2, 2, 2,
	2, 1, 1, 1, 8, 10, 11, 8, 11, 5,
	4, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 11, 3,
	6, 6, 5, 3, 4, 1, 0, 1, 3, 17,
	20, 16, 19, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 2, 4, 2, 3, 1, 0, 2, 0,
	1, 1, 0, 2, 1, 0, 9, 6, 6, 8,
	6, 8, 5, 7, 2, 6, 7, 4, 4, 5,
	2, 4, 6, 6, 8, 6, 7, 8, 9, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 7, 8,
	9, 6, 8, 6, 8, 6, 6, 8, 8, 4,
	7, 3, 0, 7, 10, 1, 1, 1, 1, 1,
	2, 3, 0, 3, 0, 3, 0, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 2, 1, 2,
	3, 2, 2, 2, 1, 0, 2, 1, 1, 0,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 2,
	3, 2, 2, 1, 2, 15, 17, 3, 1, 0,
	4, 1, 0, 4, 1, 0, 2, 2, 3, 0,
	1, 1, 4, 4, 5, 1, 0, 3, 0, 3,
	0, 3, 0, 3, 0, 4, 0, 3, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 7,
	10, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 6, 4, 5, 4, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 1, 2, 6, 7, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	1, 0, 3, 3, 5, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 3, 1, 3,
	3, 3, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 3, 0, 1, 3, 0, 3,
	1, 3, 1, 2, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 3, 2, 1, 0, 5, 1, 0, 2, 2,
	2, 1, 1, 0, 1, 1, 1, 1, 0, 4,
	2, 1, 2, 2, 4, 1, 3, 2, 2, 1,
	2, 3, 2, 4, 1, 0, 1, 0, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 3, 5, 1, 2, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 6, 6,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 3, 0, 5, 4, 1, 2, 1, 4, 1,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 2,
	5, 1, 4, 2, 5, 1, 4, 3, 3, 0,
	1, 2, 4, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 1, 0, 1, 4,
	1, 3, 3, 3, 5, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 3, 3, 2, 2, 3, 5,
	4, 6, 3, 5, 4, 6, 4, 6, 5, 7,
	3, 3, 3, 3, 3, 4, 3, 2, 4, 2,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	1, 3, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 5, 6, 6,
	7, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 2, 1, 5,
	5, 6, 3, 1, 1, 1, 2, 2, 2, 4,
	3, 5, 6, 8, 6, 5, 4, 3, 2, 2,
	4, 1, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 6, 6, 8, 8,
	6, 4, 6, 6, 6, 4, 1, 3, 3, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 4, 3, 6, 5, 5, 5,
	4, 4, 3, 4, 3, 5, 0, 5, 0, 2,
	0, 1, 3, 3, 2, 2, 0, 6, 1, 0,
	3, 0, 3, 3, 3, 0, 1, 4, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 0, 4, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 1, 1, 1, 2, 1, 2, 2,
	3, 1, 2, 3, 2, 3, 2, 3, 1, 0,
	1, 3, 1, 3, 3, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	1, 2, 3, 0, 3, 3, 2, 2, 1, 2,
	2, 3, 2, 1, 1, 1, 5, 1, 2, 4,
	2, 0, 1, 0, 3, 5, 1, 0, 1, 2,
	1, 0, 1, 3, 3, 2, 1, 1, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 669, -3, -222, -127, -124, -87, -85,
	-131, -132, -111, -133, -126, -155, -160, -141, -142, -143,
	-156, -162, -221, -230, -231, -232, -233, -242, -226, -223,
	-224, -4, -72, -74, -88, -110, -112, -125, -135, -134,
	-136, -144, -152, -147, -130, -79, -157, -161, -173, -225,
	-227, -228, 33, 32, 107, 85, 166, 138, 148, 220,
	423, 475, 487, 440, 153, 463, 445, -167, -168, 509,
	-73, -86, -159, -158, 78, 139, 184, 326, 455, 593,
	53, 158, -7, -15, -33, -19, 30, 49, -75, -76,
	-77, -78, 67, -95, -90, -105, -96, -89, -92, -93,
	-101, -725, 110, -639, -113, -117, -151, -115, -729, 174,
	241, -137, -138, -139, 405, -145, -146, 466, -148, -149,
	-150, 469, 175, -81, -80, 168, -266, -268, -164, -163,
	-165, -229, -174, -175, -176, -177, -178, -179, -181, -182,
	-184, -212, -185, -186, -187, -188, -189, -190, -191, -195,
	-215, -192, -193, -194, -197, -196, -198, -203, -199, -200,
	-201, -202, -204, -205, -207, -208, -209, -210, -211, -213,
	-214, 515, -206, -216, -183, -217, 583, 532, 87, 479,
	21, -8, -9, -10, -11, -12, -13, -14, -18, -17,
	-66, -5, -6, -20, -97, -91, -94, -98, -99, -100,
	-109, -102, -103, -104, -638, -114, -116, -119, -121, -122,
	-118, -120, -123, 464, 640, -269, -267, 666, 645, 600,
	-180, -23, -28, -24, -25, -27, -29, -26, -30, -31,
	-32, -51, -56, -53, -54, -52, -55, -57, -58, -59,
	-60, -61, -62, -63, -64, -65, -35, -41, -42, -36,
	-37, -38, -39, -40, -43, -44, -45, -46, -47, -48,
	-49, -50, -21, -22, -34, -67, -68, -70, -69, -71,
	627, 636, -272, -270, -271, -279, 501, 608, 555, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 669, 669, 669, 669, 669, 669, -375, 2, -351,
	-357, -358, -359, -350, -320, -606, -611, 4, -603, -609,
	183, 257, 256, 258, 365, 21, 22, 24, 23, 25,
	26, 27, 28, 30, 31, 41, 43, 44, 45, 47,
	48, 49, 50, 51, 52, 53, 57, 59, 63, 64,
	65, 66, 67, 68, 69, 73, 78, 79, 84, 85,
	86, 87, 88, 89, 90, 91, 97, 94, 95, 96,
	98, 99, 101, 103, 104, 105, 106, 107, 108, 109,
	111, 112, 113, 115, 116, 117, 125, 126, 127, 128,
	129, 131, 138, 132, 139, 142, 136, 141, 137, 143,
	144, 146, 147, 148, 151, 152, 153, 155, 156, 157,
	159, 160, 161, 163, 164, 166, 167, 168, 171, 169,
	172, 170, 173, 174, 175, 176, 177, 180, 181, 189,
	190, 191, 196, 198, 199, 200, 202, 203, 206, 207,
	208, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	221, 225, 227, 228, 229, 230, 231, 232, 233, 239,
	240, 241, 243, 244, 245, 246, 247, 251, 252, 253,
	254, 261, 263, 269, 270, 275, 271, 276, 277, 279,
	283, 284, 285, 286, 287, 288, 289, 291, 293, 292,
	297, 295, 299, 300, 303, 304, 305, 306, 307, 308,
	312, 313, 309, 314, 315, 317, 318, 321, 319, 322,
	323, 320, 324, 327, 328, 329, 330, 331, 332, 333,
	334, 335, 336, 337, 338, 325, 326, 341, 339, 343,
	344, 345, 346, 347, 362, 364, 357, 358, 359, 351,
	352, 348, 353, 349, 350, 354, 355, 361, 356, 367,
	368, 369, 370, 373, 237, 262, 375, 376, 379, 381,
	398, 384, 385, 386, 389, 390, 393, 396, 397, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 410,
	411, 413, 414, 415, 417, 418, 419, 421, 423, 424,
	426, 427, 428, 430, 431, 432, 433, 434, 435, 436,
	437, 439, 440, 442, 441, 443, 445, 447, 448, 449,
	455, 456, 463, 457, 459, 460, 461, 462, 464, 465,
	466, 467, 468, 469, 473, 471, 472, 474, 475, 477,
	478, 479, 480, 481, 483, 485, 486, 490, 491, 494,
	492, 512, 513, 535, 487, 488, 489, 493, 495, 496,
	497, 498, 500, 499, 504, 502, 503, 505, 506, 507,
	509, 511, 514, 515, 517, 518, 519, 520, 521, 522,
	523, 526, 528, 529, 530, 531, 532, 533, 554, 534,
	536, 540, 541, 542, 543, 537, 538, 553, 545, 546,
	547, 548, 550, 551, 556, 557, 558, 559, 560, 561,
	563, 564, 566, 574, 587, 575, 576, 577, 578, 580,
	583, 584, 585, 586, 572, 588, 589, 592, 593, 594,
	598, 595, 599, 596, 597, 600, 602, 605, 606, 607,
	614, 612, 613, 615, 616, 618, 619, 617, 621, 622,
	623, 628, 629, 631, 632, 633, 37, 54, 55, 58,
	60, 62, 74, 75, 76, 80, 133, 134, 165, 178,
	179, 192, 209, 210, 222, 224, 234, 235, 236, 260,
	264, 265, 267, 273, 296, 372, 374, 391, 395, 412,
	416, 420, 422, 438, 482, 510, 524, 539, 544, 567,
	568, 569, 570, 579, 581, 608, 609, 610, 620, 630,
	-375, 2, -351, 382, -344, 2, -320, -320, 423, 29,
	2, 29, 411, 503, 558, 560, 2, -668, -420, 551,
	2, 29, -323, -320, 110, 220, 501, -344, 2, -668,
	220, -420, 26, 551, 2, -320, 2, 396, 177, 206,
	23, 28, 71, 82, 105, 151, 176, 201, -728, 398,
	431, 485, 505, 553, 564, 580, 2, 613, 318, 502,
	555, 251, 128, 585, 493, -679, 490, 491, 396, 429,
	477, 223, 601, -324, 2, 487, -320, 318, 2, 669,
	101, 79, 482, 506, -170, 2, 308, 575, -171, -172,
	-169, 567, -590, 493, 477, 341, -320, 669, 669, 669,
	29, -333, 2, -320, -333, 2, -234, 2, -333, -731,
	-241, -240, -239, 22, 456, 191, 289, 204, 242, 346,
	426, 202, 51, -234, 2, 555, 251, 493, 128, 551,
	-355, 658, -357, -742, 2, 575, -742, 2, 669, 669,
	2, 555, 402, 613, 502, 206, 128, 435, 251, 585,
	49, 151, 28, 73, 561, 644, 493, -679, 641, 642,
	318, 135, -661, 2, -660, 4, -609, -603, -369, -368,
	555, 561, 128, -359, -350, 658, -358, 669, 669, 669,
	669, 2, 276, 277, 433, 432, 506, 507, 29, 669,
	669, 669, 669, 669, 669, 490, 177, 2, 561, 176,
	-693, 23, 28, 71, 100, 105, 135, 201, 398, 431,
	505, 553, 557, 564, 580, -678, 534, 73, 493, -677,
	-679, 387, 318, 585, 151, -473, 128, 308, 218, 594,
	560, 558, 591, 142, 263, 597, 596, 669, 669, 669,
	-128, 2, 666, 33, 32, -127, -131, 153, 509, -259,
	555, 268, 2, -320, 669, 669, 669, 2, 276, 277,
	490, 491, 29, 669, 669, 204, -660, 551, 2, 669,
	669, 669, 2, 29, 276, 277, 490, 491, 268, 2,
	73, 496, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 2, -219, 506, 534, 230, 50, 49, 79, 29,
	430, 84, 403, 129, 135, 160, 586, 221, 551, 251,
	252, 284, 100, 101, -475, 47, 277, 73, 276, 491,
	-684, 490, -536, 556, 207, 495, 503, 550, 91, 289,
	487, 575, 577, 110, 602, 478, 633, 435, 436, 548,
	449, 545, 309, 169, 205, 4, 128, 341, 477, 508,
	293, 292, 587, 567, 308, 486, 406, 89, 669, -740,
	2, 555, 575, 2, -742, 2, -742, 2, -743, 575,
	630, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 669, 669, 669, -267, -269, -268, 669, 669, 669,
	669, 669, 669, 669, 669, -219, 506, 2, 79, 29,
	29, -413, -415, 590, 266, 162, 388, -266, -268, 2,
	-638, 587, 506, -588, 2, -508, -612, -510, 656, 657,
	649, 552, 72, -379, 363, 634, -522, 135, 591, 382,
	-611, -511, -524, 165, 398, 482, -437, 256, 8, 9,
	5, 6, 7, -329, -512, -518, 582, 182, 371, -372,
	670, 10, 666, -635, -268, -523, 38, 224, 70, -592,
	-371, -330, -564, 267, -370, -350, -632, -633, 4, -603,
	-604, -593, -567, -575, -574, -571, -570, -572, -578, -320,
	-606, 82, 119, 120, 118, 123, 122, 311, 310, 124,
	121, 508, 601, 71, 37, 234, 235, 273, 372, 236,
	80, -634, 152, -605, 264, 265, 524, 55, 438, 192,
	134, 133, 374, 60, 58, 609, -576, 130, 567, 568,
	569, 570, 209, 210, 62, 178, 179, 395, 420, 544,
	579, 581, 222, 296, 46, 114, 205, 259, 238, 272,
	274, 278, 298, 301, 342, 360, 366, 392, 394, 476,
	516, -746, 610, 539, 74, 75, 197, -640, 441, -641,
	-344, -640, 669, 669, 671, 669, -404, -406, -408, 2,
	29, 149, 666, 2, -541, 2, -542, -546, -268, 290,
	-545, 666, -543, 664, -351, 383, -636, 483, -632, -633,
	-329, -350, -371, 4, -603, -605, 668, -409, 666, 128,
	493, 555, 83, 251, 100, 176, 206, -468, 666, -320,
	29, 382, 571, 671, -668, -420, -405, 428, -520, 666,
	382, 385, 204, 385, -668, 64, 98, -718, 234, 2,
	-717, -357, 322, 2, 2, 2, 2, 2, 234, -320,
	555, 127, 288, 2, 2, 2, 2, 2, 2, 2,
	-429, 234, 2, -427, -357, 613, -430, 234, 2, -427,
	-428, 234, 2, -427, -474, 2, 93, -334, 234, 2,
	-320, -360, 234, 2, -355, -366, 234, 2, -363, -320,
	-598, 234, 2, -596, 4, -603, 124, 508, -508, 2,
	-157, 2, 64, -320, 613, 2, 512, 2, 666, -170,
	2, 76, 575, 46, 506, -171, 2, -494, 2, -495,
	-316, -317, -318, -553, -319, 275, 427, 437, 637, 140,
	363, 633, -720, 204, 648, 571, -588, -588, -588, -438,
	668, -236, 57, -333, -732, -731, -732, -586, 29, -581,
	8, -582, 656, 657, -586, -586, -732, -732, 2, 2,
	2, 2, 2, -493, -494, 2, -546, 234, -351, 2,
	-348, -591, 4, -603, -609, -604, -610, -606, 29, 32,
	33, 34, 36, 38, 39, 40, 42, 61, 70, 71,
	77, 81, 83, 93, 100, 110, 118, 119, 121, 120,
	122, 123, 124, 135, 140, 145, 149, 150, 154, 158,
	162, 182, 184, 197, 201, 204, 220, 223, 226, 242,
	255, 266, 268, 290, 294, 302, 310, 311, 363, 371,
	377, 382, 383, 387, 388, 409, 425, 444, 470, 501,
	508, 527, 549, 555, 565, 571, 573, 582, 590, 591,
	601, 603, 611, 624, 625, 626, 627, -611, 82, 2,
	-546, 234, 2, -354, 234, -546, -357, 2, -717, 2,
	-334, 2, -508, -672, 563, 172, 457, 2, -376, 234,
	-351, -353, -357, -355, 2, 490, -600, 2, -595, 10,
	-594, 5, 4, -603, -609, -604, 2, 2, -508, 2,
	-511, 2, -522, 29, -363, 2, -596, 234, 2, 29,
	29, 613, 428, 268, 571, 671, -426, -368, -369, -587,
	4, 8, -419, -320, 668, -508, 2, -157, -140, 2,
	197, -508, 234, 2, -157, 234, 2, -508, 234, 2,
	-157, 234, 2, -320, 2, -680, 2, -719, -600, 234,
	98, -320, 2, 234, -320, 2, 206, -727, 485, 584,
	322, 2, 2, 580, 2, 105, 555, 127, 2, 2,
	2, 2, 2, 2, 2, 555, -339, 2, -320, 197,
	-555, 268, -363, 234, -364, 2, 502, -741, 441, -596,
	234, 2, 461, 613, -355, 234, 2, -355, 251, 270,
	-334, 234, 2, 560, 558, 560, 558, 204, 2, 268,
	2, 268, 2, -547, 2, -548, -542, -549, 664, 383,
	-558, 2, -557, -594, 608, -128, 666, -128, 666, 506,
	666, -600, -351, -351, -508, 2, -157, -140, 2, -508,
	2, -157, 2, -320, 2, -154, -600, -153, 666, 204,
	602, -320, 2, -508, 2, -157, -140, 2, -508, 2,
	-157, 2, -259, 197, 2, 128, 555, -219, 2, 197,
	603, 2, 8, 2, 242, -255, -600, 495, 189, 436,
	606, 2, 512, 2, 513, 79, -475, 633, 79, 204,
	2, 204, 2, -458, 2, 627, 428, 204, 2, 2,
	-666, 2, 382, 221, 204, 2, 204, 2, 204, 2,
	204, 2, 204, 2, -218, 507, 576, 554, 432, 277,
	2, -157, 624, -140, 277, 276, -508, 624, 2, -685,
	197, 491, -508, 2, 574, 286, 170, 204, -458, 2,
	204, 2, 204, 2, 204, 2, 5, 2, 43, 433,
	535, 2, 275, 427, 535, 2, 533, 2, -351, 555,
	613, 502, 128, 252, 499, 206, 29, 2, 490, 177,
	2, 2, 94, 95, 204, 2, 204, 2, 219, 204,
	2, 449, 204, 555, -439, 668, -439, 633, 2, -450,
	-546, -493, 571, -413, -415, -219, 512, 2, -273, -448,
	-275, 197, -480, -481, -276, 302, 184, 377, -277, -457,
	29, 149, -457, -457, 64, 667, 667, -720, 587, 11,
	12, 81, 43, 656, 657, 658, 659, 195, 660, 661,
	654, 655, 653, 646, 647, 651, 281, 282, 102, 650,
	648, 92, 316, 484, 185, 186, 187, 188, 458, 249,
	35, 250, 14, 15, 16, -379, 34, 387, 301, 634,
	238, 516, 649, 17, 18, 19, 272, 274, 366, 54,
	242, -328, 398, -378, 552, 72, -508, -508, -508, -508,
	-508, -508, -508, -508, 394, 666, -444, -503, 664, -268,
	666, 666, 666, 666, -587, -268, -508, -522, 667, -435,
	666, -268, -522, -517, 666, 482, 664, 666, -525, -508,
	5, 5, 5, 666, 668, -643, 628, 197, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 422, -569, 666, -568, 666, -568,
	-568, -580, 614, 666, 666, -566, 666, 636, 629, 666,
	-566, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 614, 561, 671, -640, -489, 666,
	666, -440, -551, -508, 658, -440, -440, 382, -432, -508,
	114, -461, 278, 342, 205, 298, 476, 259, -505, 670,
	-505, -535, 636, -268, -543, -350, -268, -545, 666, -541,
	-535, -129, -587, -110, -125, -134, -157, -173, -227, -228,
	658, -351, 666, 204, 666, 668, -591, 204, -419, -334,
	-363, -351, -370, -371, -376, -345, -320, 2, 2, 148,
	-432, -662, 585, 493, 29, 4, -609, -603, -369, 502,
	-368, 555, 128, 177, 206, -598, -323, 571, 39, -519,
	-561, -562, -614, 670, -613, -564, -573, 412, 416, -593,
	267, 4, -603, -605, 264, 265, 524, 55, 438, 192,
	134, 133, 374, 60, 58, 609, 567, 568, 569, 570,
	209, 210, 62, 610, 539, 74, 75, -662, 585, 493,
	29, 502, 197, -598, 197, 204, -598, 2, -600, 2,
	-296, 671, 69, 467, 165, -700, 666, 2, 165, 2,
	2, 2, -320, -296, 165, 671, -429, 234, -296, 165,
	-296, 165, -377, 234, -376, -296, 165, -296, 671, 165,
	-296, 671, 165, 668, 671, 165, -598, 2, -474, -590,
	-432, 39, -494, 2, 135, 4, 5, -744, 671, 300,
	-382, 315, 362, 229, 383, 631, 375, 140, -599, 5,
	4, -518, -530, 135, 308, 267, -581, -583, 9, -584,
	656, 657, -589, -588, 117, 668, -591, -237, 262, 41,
	-333, -333, -732, -732, 8, 8, -732, -732, -333, -333,
	-293, 459, 509, 397, -292, 25, 30, 153, 253, 347,
	606, 171, -394, 254, 464, -391, 402, 165, 528, 595,
	-672, -675, 489, 563, 172, 457, 96, 375, 509, 397,
	459, 165, -454, -456, 39, 126, 347, 396, 65, 245,
	320, 321, 532, 465, 620, 165, 509, 397, 459, -708,
	459, 509, 397, -695, -710, 347, 66, 472, 538, 240,
	531, 622, 177, 500, 297, 363, 108, 483, 546, 399,
	397, -16, -309, 25, 153, -311, -304, 509, 30, -675,
	106, 459, 645, 640, 464, 408, 547, 425, -675, -672,
	295, -674, 623, 361, -295, 528, 595, -672, -479, -675,
	489, 459, -294, 363, 621, -396, -391, 402, 165, 670,
	25, 153, 459, 509, 397, -723, -724, 30, -587, 2,
	-291, 242, -290, 25, -286, -285, 25, 153, 509, 598,
	-166, -146, -165, 464, 509, -166, 2, 459, 397, -669,
	-341, -637, 242, 627, 165, -341, -341, -546, 234, -689,
	197, 2, -682, -153, 291, 5, 10, -600, -153, -426,
	671, 671, -591, 658, 491, 490, 165, 165, 165, 165,
	277, 197, 363, -719, 2, 363, 627, -712, 2, -357,
	-728, 2, 2, 2, 2, 2, 2, 2, -351, 234,
	-411, 382, -658, -659, -730, 555, -246, 627, -600, 363,
	46, -354, 234, 2, -357, 613, -669, 363, -677, -356,
	234, -351, 39, 666, 363, 2, -474, 2, 251, -637,
	363, -547, -373, -351, -542, -373, 509, -344, 39, -505,
	-351, 667, 671, -558, -558, -600, -246, 204, 666, -259,
	627, 627, 277, -554, 671, -553, 242, -601, -600, -154,
	-600, 462, 204, 277, -600, -658, -334, 2, -351, 2,
	555, 279, -153, 204, 242, -246, -600, -600, -600, -600,
	-590, 29, 513, 2, -218, 507, 576, 95, 513, 2,
	-351, 555, 128, 251, 85, -689, 197, 2, -320, -667,
	197, -663, 477, 493, 585, -662, -667, -351, 128, -351,
	128, -351, 128, -351, -351, 2, 2, 2, 2, 2,
	90, 2, -157, -508, 2, 90, 2, 49, 529, -685,
	197, 2, 574, 2, 574, 2, -320, -320, -320, -320,
	377, 534, 300, 627, -351, -351, -354, -352, -357, 204,
	252, -357, 495, 556, 586, 491, 177, -508, 2, 98,
	-733, 2, 204, 197, 2, 555, 251, 555, 251, 128,
	204, 79, 128, 29, 204, 555, 488, 668, 4, -296,
	671, -324, -273, -448, -590, -449, -448, -274, -273, -276,
	197, 437, 596, 347, 514, 283, -481, -480, 29, -508,
	-485, 191, 346, -508, -483, -510, 656, 657, -582, -584,
	-431, 375, -267, -267, -267, -416, -537, -508, 425, 258,
	-589, -720, -563, -561, -561, -349, -591, 567, -508, -508,
	-508, -508, -508, -508, -508, -508, -508, -508, -508, -508,
	-508, -508, -508, -508, -508, -508, -508, -508, -508, -508,
	-508, -508, -508, -508, -508, -508, -508, -508, -508, -508,
	-508, -508, -508, -508, 301, 238, 516, 54, 242, -508,
	571, -508, -508, -508, -508, 339, 363, 371, 582, 182,
	592, 149, 375, -747, 549, 42, -515, -268, -436, 666,
	-529, 36, 527, 29, -522, 666, 2, -503, -508, -504,
	-380, -378, -320, 656, 657, 658, 659, 660, 661, 646,
	647, 648, 14, 15, 16, 651, 655, 653, 654, 195,
	102, 650, 316, 484, 92, 185, 186, 187, 188, 281,
	282, 17, 18, 19, 35, 649, -433, -432, -432, 667,
	611, 29, 149, 658, 2, 667, 671, 39, 667, -508,
	-433, -521, -517, -432, -528, -527, 624, -469, -470, 632,
	325, 131, 232, 323, -471, 498, -585, 8, -591, 658,
	-644, 190, 223, 666, 667, 2, 667, 2, 667, -508,
	2, 667, -508, 2, 667, -508, 2, 667, -508, 2,
	667, 2, 667, 2, -508, -508, -508, -508, -508, -508,
	-508, -432, 8, -585, 666, -585, -585, -585, 567, 567,
	-585, -585, -585, -577, 412, 413, 414, 415, 303, 304,
	305, 306, 416, 417, 418, 419, 331, 332, 333, 334,
	327, 328, 329, 330, 335, 336, 337, 338, 214, 215,
	216, 217, 210, 211, 212, 213, -577, -463, 2, -579,
	-432, 4, 632, 325, 131, 232, 323, 498, 5, -463,
	2, -464, 2, -508, -432, -465, -509, -510, 656, 657,
	649, -379, -466, 2, -508, -433, -508, 61, 294, 573,
	-467, -508, 204, -432, -432, 2, -432, 2, -511, 2,
	-641, 39, -490, -320, -432, -422, 671, 204, 39, -608,
	4, -607, 44, 66, 108, 137, 144, 177, 240, 261,
	271, 297, 399, 471, 472, 500, 531, 546, 578, 622,
	510, -422, -422, 666, 667, 671, -462, 227, 319, 314,
	270, -462, -541, -461, 278, -459, 392, -459, -459, -535,
	-335, 664, 673, -591, -535, -532, -531, 39, -344, 389,
	-535, -535, 668, 667, -534, -533, 39, -344, 665, -656,
	666, 669, 669, 669, 669, 669, -351, 666, -432, -591,
	668, 536, 2, 667, 272, 272, 272, 272, 272, 382,
	483, 667, 571, -664, -360, -366, 503, 556, 207, -426,
	671, -426, -419, 98, -718, 627, -598, -127, 384, 667,
	671, -421, 38, 664, 668, -585, 2, 2, -470, 666,
	204, -664, -366, 556, 503, 207, 2, -668, 551, -420,
	-598, 571, -717, -718, -701, 667, -703, -711, -696, -705,
	242, 391, 260, 611, -592, -561, 4, -603, -320, 2,
	-429, -357, -296, 165, -430, -428, -296, 671, 165, -334,
	-355, -360, -363, -366, -320, -596, -598, -296, -356, -720,
	667, 575, -495, -381, 437, 526, 460, 504, 551, 9,
	9, 671, -591, -238, 492, 347, -333, -333, -333, -333,
	671, -721, 100, 571, 83, 666, 493, -313, 309, 571,
	-499, 234, 83, -615, 100, -337, -616, -320, 77, 591,
	425, 201, 163, -721, 100, 425, -721, 100, 2, 253,
	100, 509, 534, 666, 29, 64, -546, 43, 43, 29,
	-673, -674, 295, 204, 633, 555, 251, 493, 571, 571,
	-546, -456, -561, 126, 320, 321, 64, -586, -586, 64,
	-586, -586, -586, 627, -586, 627, -354, -546, 493, 571,
	571, -726, -710, 467, 509, 571, 493, 571, 144, 382,
	371, 500, 137, 271, 297, -530, -530, -320, 571, 447,
	545, 447, 545, 499, -304, -306, -171, 499, 545, 309,
	571, 571, -171, 29, -219, 468, 135, -745, 648, 447,
	295, -674, 571, 204, 671, 43, 43, 29, -673, 204,
	571, 621, -376, -335, 607, 45, 607, 45, 607, 571,
	45, 493, 571, 671, 45, -288, -287, 509, -290, -600,
	-289, 345, -285, -658, -658, -245, -244, -320, 5, -419,
	79, 571, 571, -16, 509, -670, -325, 113, 353, 313,
	354, 104, 350, 103, 349, 111, 351, 112, 352, 615,
	367, 616, 368, 68, 348, 324, 355, 530, 356, 619,
	369, -326, -327, 156, 404, 605, 128, -596, -16, -16,
	509, 397, 459, 165, -690, 242, 29, -679, 242, -554,
	242, -554, -368, -320, 668, -157, -508, -508, -157, -508,
	-157, 49, 165, 39, 165, 2, 666, 288, 666, -385,
	363, 204, -419, -555, 671, -351, 39, -245, 386, 165,
	-596, -455, -454, 363, -356, 234, 2, 165, -741, -409,
	363, 159, 666, 435, 2, 165, -336, 234, -321, -320,
	-474, -298, 559, 165, -452, 603, -486, -157, 666, 135,
	39, -486, -441, -442, -552, -443, -337, 666, -344, -505,
	-128, -557, 667, 667, 667, -259, -410, -338, -337, 127,
	439, 439, -252, 627, -153, -154, 667, 671, -554, 242,
	537, -154, -600, -246, -246, -554, -554, -351, 197, -600,
	-153, -246, -246, -246, -246, 2, 2, 2, 2, -458,
	-351, -334, -376, -351, -362, 242, 29, 668, -598, -598,
	-366, -367, -365, -320, -360, -458, -334, -458, -334, -458,
	-334, -458, -458, -157, -508, 534, 2, 506, 197, 197,
	668, -458, 668, 8, -412, 470, 5, -351, 204, 2,
	99, -600, 2, 435, 128, 555, 402, 251, -351, -376,
	-351, -376, -334, 128, -334, 129, 128, -351, 4, -546,
	-449, -274, 383, 283, 514, -483, -484, -510, 482, 483,
	-484, 482, 483, 8, 9, 8, 9, -278, 518, 370,
	-428, 671, -283, 40, 145, 283, -351, -589, 633, 161,
	-508, -508, 571, -747, 549, -515, 161, -508, 339, 371,
	582, 182, 592, 149, 375, 204, 666, -509, -509, 667,
	-434, -508, -508, 665, 675, 667, 668, 667, -415, 671,
	-413, -508, -432, -432, 667, 668, -432, -419, 665, 665,
	671, 667, -526, -527, 154, -508, 571, 571, 571, 571,
	666, 667, 668, -649, 393, 666, 666, -508, 667, 667,
	667, 667, 39, 671, 671, 671, 667, 671, 671, 671,
	667, 667, 667, 671, -585, 667, 667, 667, 633, 633,
	667, 667, 667, 667, 671, 667, 671, 667, 204, 667,
	667, -472, 409, 667, 11, 12, 656, 657, 658, 659,
	195, 660, 661, 654, 655, 653, 646, 647, 648, 92,
	316, 484, 14, 15, 16, -379, 272, 242, -509, -509,
	-509, -509, 667, -513, -514, 204, 197, 39, -467, -467,
	-467, 667, 204, -432, 667, 667, 666, -642, 318, 363,
	667, 671, 667, -502, -501, 625, -551, -423, 2, -541,
	-346, -591, -502, -502, -432, -508, 278, 278, -460, 603,
	382, -462, -541, -532, -587, -507, -506, 199, 40, 145,
	357, 358, 359, 237, 200, -532, -344, -489, -532, -532,
	-591, -535, -344, -487, 666, -535, -531, 667, -657, -587,
	667, -424, -544, -636, -415, 668, -591, -256, -637, -220,
	5, 371, -220, -220, -220, -220, -351, -598, 571, 571,
	242, 242, 242, -426, -419, 26, -688, 627, 410, -561,
	664, 665, 8, -591, -585, -598, 204, 204, 242, 242,
	242, 382, -668, 204, -596, -296, 667, 671, -696, -705,
	-711, -705, 391, 2, -296, -429, -296, -296, -376, -377,
	-296, -296, -296, -453, 627, -588, -494, 589, 88, 437,
	567, -588, 125, 492, -292, 459, 509, -337, -337, -351,
	-263, -262, -260, -320, 5, -361, -320, 218, 448, -596,
	363, -499, 234, -297, 363, 234, -345, -561, 666, -476,
	629, 283, 283, 603, -337, -345, 283, 234, -337, 234,
	-345, 2, -345, -671, 437, 376, -508, -261, -260, 64,
	-392, 307, 435, 364, -293, 459, 509, 397, -157, -157,
	-157, 666, -720, 603, 148, -351, -376, -351, -361, -596,
	-356, 509, 397, 459, 360, -370, -586, -586, -586, -454,
	509, 397, 459, -361, -596, -354, -320, -361, -596, 382,
	371, 382, 137, 271, -596, -303, 234, -320, 447, -303,
	234, 447, 447, 447, 447, 218, 448, 493, -334, 447,
	633, 48, -745, 571, 204, -508, -508, -294, -157, -157,
	-157, 666, -335, -295, -479, 459, 5, 234, -337, 5,
	-337, 234, 5, -320, -337, -361, -596, -724, 25, 153,
	-337, 671, 287, 268, 627, -681, 205, 490, 442, -291,
	648, -246, 671, 648, 648, -361, -596, -325, 404, -682,
	371, 5, 10, 599, -334, -669, -341, 493, 571, 571,
	-546, -686, -687, 220, 475, 493, 478, -598, -153, -249,
	627, -153, -243, 246, 658, -661, -600, -600, -320, -698,
	-699, -702, -703, -320, -383, -386, -384, -337, -500, -499,
	-619, -620, -615, 301, 256, 257, 591, 270, 183, 100,
	-264, -265, 629, 627, 165, -374, -351, 664, -246, -659,
	-556, 183, 501, 666, -363, -364, 165, -409, 363, -596,
	613, 39, 165, 666, 2, 2, -355, 382, 363, -336,
	234, -299, 155, -745, -334, -502, -423, -451, -492, 470,
	382, -410, 608, -344, -451, -425, 671, 204, 648, 668,
	-410, -550, 658, -128, -128, -246, 666, -600, 667, 671,
	668, 666, 648, 648, -254, 386, -253, 157, 285, 269,
	520, 521, 522, 523, 147, 519, 132, 344, 247, 561,
	494, 612, -554, -600, -252, -154, 204, -554, 242, 204,
	-82, 627, -246, 555, 242, -246, 670, 493, 478, -320,
	668, -458, -458, -458, 506, 506, -320, -320, 197, -419,
	-351, 2, -347, -591, -334, -351, -348, -376, 197, 197,
	-334, -334, 596, -484, 383, 312, -537, -284, 635, -351,
	670, -508, -508, 161, 161, -508, -509, -509, -508, 161,
	204, 666, -508, -519, 34, 34, 667, 671, -504, -508,
	-378, 667, 611, -415, -415, 667, 658, -591, 670, 667,
	-517, 158, -508, 565, 325, 232, 323, -471, 323, -471,
	-471, -585, 5, -591, 658, -650, -340, 666, -320, 625,
	-414, 388, 667, -563, -561, -508, -508, -508, -508, -508,
	-585, 667, -566, -566, -581, -581, -508, -513, -508, -563,
	-561, -509, -509, -509, -509, -509, -509, -509, -509, -509,
	-509, -509, -509, -509, -509, -509, -509, -509, -509, -509,
	-509, 149, 363, 375, -509, -514, -513, -508, -508, -561,
	667, 667, 667, -432, -127, 666, 318, -320, -445, 223,
	-508, -554, 671, -445, -445, 667, -541, -541, 666, -508,
	278, 665, 671, 674, 648, 648, -489, 668, -531, -487,
	-488, -491, -320, -532, 665, 667, 671, 667, 671, -534,
	667, -591, -502, -258, -257, 146, 57, 115, 143, 371,
	379, 203, 228, 434, 161, 198, 155, 272, -688, -598,
	-598, 493, 493, 493, 385, 220, 5, 8, 664, 665,
	668, 667, -598, -598, 493, 493, 493, -662, 585, 493,
	29, 204, -598, -703, -705, -705, -296, -296, 127, 347,
	-508, -235, 627, 629, 571, 571, 667, 671, 648, 64,
	242, 165, 363, 605, 363, -616, 163, -621, -508, 666,
	251, 666, 666, 2, -280, -281, -282, 153, 509, 25,
	-722, 2, 603, 165, -296, 165, -296, 631, 667, 671,
	-392, 666, 666, 571, 493, -313, 571, 627, -432, -508,
	-247, 135, -590, -675, 670, -675, 670, 493, 571, 571,
	493, 571, 571, 176, 261, 371, 363, -320, 165, -320,
	234, -745, -320, -675, -675, 242, 627, 181, 181, 633,
	-303, -508, -508, 197, 571, 627, -432, 571, -565, 52,
	27, 363, -355, -296, 165, 571, 571, 585, 509, -287,
	-600, -153, -250, 157, 474, 147, 285, 247, 49, 385,
	-682, -153, -244, -600, -600, -682, -600, 371, -16, -361,
	-596, -356, 509, 397, 459, -668, -668, 220, -366, -690,
	-554, -251, 386, -250, -554, -249, 204, 268, 627, 667,
	671, 135, 648, 2, 667, 667, 671, 671, -622, -297,
	-351, 666, -320, 251, 256, 257, -343, -321, 39, 379,
	379, 666, -351, -106, -107, 627, -108, 572, -553, 603,
	-501, -587, -342, -320, -440, -245, 46, -354, 39, 165,
	-669, -356, -157, -356, -559, -560, 5, 39, -351, 165,
	382, 363, -300, 293, -745, -595, -637, -415, -451, -440,
	365, 97, 667, -502, -442, -423, -508, 2, 667, -600,
	-246, -259, -338, 2, -601, -600, -600, 671, 666, 648,
	648, 648, 648, 648, 648, 648, -252, -554, -153, -252,
	-154, -157, 386, -351, -153, 658, -361, -362, 658, -458,
	5, -398, -397, 402, 375, -398, 482, 482, 383, 191,
	289, -283, -335, -508, -508, 161, 34, 34, -508, -508,
	-519, 667, -508, -508, -432, 665, 5, -508, 667, 667,
	8, -508, 667, 668, -651, -320, -508, 667, 64, 667,
	667, 671, 671, 667, 667, 667, 667, 667, 667, 667,
	-514, 204, 149, 375, 666, 667, 667, -127, -516, 226,
	64, -541, -516, -516, -460, -419, -541, -506, -335, 664,
	-335, 664, -591, 667, 671, -561, -587, -544, 668, -257,
	648, -600, -600, 2, 2, 5, 5, 434, 363, 371,
	5, -220, -688, -688, 627, -366, -366, -366, 385, 665,
	2, 664, -591, -366, -366, -366, 204, -664, -366, 556,
	207, -598, 127, 197, 231, 231, -337, -337, -262, -588,
	555, 482, -303, 425, -499, 165, 165, -623, 100, -625,
	81, 183, 110, 363, 371, 591, 425, 77, 135, 382,
	444, -735, -736, -737, 39, 638, 639, 667, -417, -538,
	-636, 666, -320, -417, -419, 363, 542, 135, 382, 363,
	135, 382, 621, 127, 2, 585, 84, -337, -345, -260,
	-419, -419, -351, -361, -596, 173, 667, 671, 648, 2,
	658, 658, -361, -596, -356, -361, -596, -354, -320, 261,
	165, 608, -303, 165, -303, 608, -303, 400, 181, 571,
	-157, -508, 173, 667, -335, 5, 5, 165, -332, 81,
	-337, 5, -337, -355, 127, 648, 648, 648, 648, 648,
	31, -682, -244, 627, 493, 571, 571, 382, 382, 385,
	-686, -687, -249, 671, 666, -249, -601, -153, 2, 472,
	-702, -508, -508, -399, 253, -337, -620, -617, -618, 425,
	-500, -624, -626, 183, 425, -387, -417, 666, -336, 666,
	-320, 666, -157, 2, -263, 666, -385, -108, 386, 9,
	180, 665, 204, 667, -596, -455, -157, -356, -409, -407,
	627, -409, 667, 671, 159, -477, 603, -335, -351, 165,
	-301, 292, -745, -595, -298, -482, -480, 150, 666, 382,
	-157, -415, 648, 667, 127, 667, -253, -254, -600, -153,
	-600, -600, -600, -153, -600, -252, -692, 39, -554, -83,
	-84, 251, 256, 100, 407, -246, -246, -348, 555, 251,
	666, 666, -283, -508, -508, -508, 667, -415, -591, 658,
	-645, 402, 667, -537, -508, -508, -509, 204, 666, -519,
	667, -646, 626, -508, -446, -447, -508, 480, 116, 224,
	-646, -646, 667, -587, -587, -491, -600, 2, 2, 371,
	2, 2, 2, 571, 571, 571, 664, 2, 204, 204,
	204, -598, 204, 204, 242, 242, -157, 242, 39, 447,
	-499, -345, -345, -349, -342, 183, 234, 371, 621, -476,
	283, 666, -509, 596, -351, 666, 2, 233, 233, 31,
	64, -738, 140, 255, 667, 671, -539, -331, -320, -508,
	-539, 667, 667, 371, 596, 371, 621, -508, 596, -561,
	666, -296, -296, 667, 667, -508, 571, -590, 107, -588,
	2, -675, -303, -419, -419, -675, -334, -508, 197, -508,
	571, 5, -296, -349, -296, -296, -332, 585, -600, -508,
	582, 182, -153, -153, 381, -361, -596, -356, -691, 556,
	503, 586, 495, 207, 481, -691, 197, -250, -251, -249,
	-694, 510, -393, -394, 2, -622, 283, -342, 283, 244,
	164, 667, -417, 666, -417, 666, -419, -734, 627, 667,
	-383, -264, -107, -665, -373, -409, 39, 347, 127, 39,
	5, 666, 666, -320, 382, 666, -335, -315, 98, -745,
	-595, -299, -451, 364, -419, 100, -482, -515, -246, 666,
	-246, 667, 561, -252, 671, 29, 666, 29, 666, -351,
	-376, -432, -432, 667, -415, 64, 671, 667, 667, -509,
	-519, 667, -647, -648, -340, 671, 666, 666, 511, 665,
	665, 2, -598, -598, -598, 2, -598, -598, -598, -598,
	-598, 493, 493, -303, 425, -320, -616, -625, -342, 363,
	-265, 603, 627, -508, -509, -322, 666, -508, 666, 666,
	39, 135, 255, 141, 239, -498, -739, 109, 543, 243,
	-538, -283, 667, -497, 603, 444, -509, -332, -417, 666,
	666, 666, 648, 204, -157, 666, -565, -296, -355, 648,
	571, 2, 204, -668, 667, -681, -704, -705, -264, 666,
	-265, -388, 86, 101, 136, 233, 208, 252, 534, 540,
	29, -388, -497, 667, -417, 667, -417, 667, -389, 382,
	127, 347, 667, 39, -502, 39, -157, 127, -157, -559,
	-417, -351, -417, 382, -305, -304, 302, -595, -300, 667,
	-345, -451, -601, -587, 4, -84, -419, -419, 667, 667,
	-652, 435, 483, 225, -432, -416, 667, 671, 39, -447,
	2, 2, 2, -688, -688, -688, -366, -366, 447, -297,
	165, 227, 667, -627, 317, -320, 667, -455, -455, 39,
	141, 239, -395, -391, 666, -284, -539, -265, 227, -351,
	-676, 603, 667, -401, -400, -397, -403, -402, -397, -432,
	-588, 107, 400, -432, -332, -153, -598, -598, 382, -683,
	205, -706, -707, -709, 39, 288, 578, 626, -710, -389,
	-418, -540, -337, -498, -497, 667, -395, 667, 87, 127,
	-399, -157, -157, 2, -407, 667, 667, -477, 667, -351,
	-302, -602, 447, 449, -745, -301, -502, 150, 667, 667,
	667, 667, -653, -654, 54, 588, 117, -508, -653, -653,
	-648, -650, 204, 204, 183, -496, 636, -628, -631, -630,
	643, 517, 205, 401, 667, 542, 620, 667, 667, -738,
	-419, -496, -409, -508, -497, 667, 671, 608, 667, 671,
	608, 667, 204, 667, -296, -688, -296, -691, -248, 627,
	49, -716, -713, 53, 471, -709, -697, 5, -595, -314,
	-313, 667, 671, -395, -498, -497, -265, -395, 424, 142,
	153, -393, -734, -497, 666, -498, 666, -312, -311, -745,
	-581, -315, 150, 364, 596, -246, -655, 163, -654, 421,
	196, 482, 421, 196, -655, -655, -598, -598, -342, -265,
	59, -630, 643, -631, 643, 596, 142, -502, 667, -627,
	-265, -400, 242, -402, 204, 400, 204, 490, -682, 31,
	44, -508, -265, -540, -265, -395, -498, -502, -265, 483,
	483, 2, -264, -389, -498, -417, -395, -417, -308, -309,
	-310, -419, -305, 364, 596, 509, 117, 223, 566, 347,
	34, 648, -629, 347, 467, 69, 509, -629, -628, 666,
	666, -598, 386, -715, -502, -265, -395, -478, 363, 621,
	-502, 2, -389, -395, 667, -265, 667, -597, 397, -302,
	509, -441, 482, 390, -654, -508, 24, 371, 135, -738,
	-432, -432, -296, -245, 666, -714, 158, -3, -713, -478,
	-502, -265, 621, -478, -314, -265, -497, -502, -498, -307,
	-306, 499, -745, -312, -441, -502, 667, 667, -245, 672,
	-478, -502, -502, -498, -478, -395, -596, -308, -502, -390,
	-391, 571, 667, -478, -478, -395, -265, -307, 666, -265,
	-502, -432, -502, -478, 667, -478, -390,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 44, 1766,
	1768, 736, 737, 739, 740, 741, 743, 744, 746, 748,
	750, 751, 752, 754, 755, 757, 758, 759, 760, 761,
	763, 765, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 859, 861, 0,
	1748, 1750, 1752, 1754, 0, 0, -2, -2, 0, 0,
	-2, -2, 45, 46, 48, 50, 0, -2, 422, 424,
	426, 428, 0, 460, 462, 463, 465, 467, 468, 470,
	472, 474, -2, 0, 662, 663, 665, 667, 669, -2,
	0, 1322, 1324, 1326, 0, 847, 849, 0, 1329, 1331,
	1333, 0, 0, 871, 872, 0, 1869, -2, 863, 865,
	867, 869, 948, 950, 952, 954, 956, 958, 960, 962,
	964, 966, 968, 969, 971, 973, 975, 977, 979, 981,
	982, 984, 986, 988, 989, 991, 992, 994, 996, 998,
	1000, 1002, 1004, 1006, 1008, 1010, 1012, 1014, 1016, 1018,
	1020, -2, 1023, 1024, 1025, 1027, -2, 0, -2, -2,
	1762, 52, 54, 56, 58, 60, 62, 64, 66, 68,
	70, 72, 74, 76, 78, 605, 607, 609, 611, 613,
	616, 618, 620, 622, 1927, 671, 673, 675, 677, 679,
	681, 683, 685, 0, 0, -2, 1941, 0, 0, 0,
	1118, 80, 81, 82, 83, 84, 85, 86, 87, 88,
	89, 149, 150, 151, 152, 153, 154, 155, 156, 93,
	94, 95, 97, 98, 99, 100, 104, 105, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 146, 147, 91, 120, 121, 122, 123, 124,
	0, 0, 1900, 1902, 1904, 1906, -2, 0, 0, 8,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	32, 36, 38, 40, 42, 1767, 1769, 738, 742, 745,
	747, 749, 753, 756, 762, 764, 766, 721, 722, 725,
	2657, 2676, 2677, 2678, 2681, 2682, 2683, 2684, 2685, 2686,
	3223, 3304, 3305, 3306, 3307, 2709, 2710, 2711, 2712, 2713,
	2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723,
	2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733,
	2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743,
	2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753,
	2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763,
	2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773,
	2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783,
	2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793,
	2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803,
	2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813,
	2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823,
	2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833,
	2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843,
	2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853,
	2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863,
	2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873,
	2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883,
	2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893,
	2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903,
	2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913,
	2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923,
	2924, 2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933,
	2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943,
	2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953,
	2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963,
	2964, 2965, 2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973,
	2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983,
	2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993,
	2994, 2995, 2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003,
	3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013,
	3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023,
	3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033,
	3034, 3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043,
	3044, 3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053,
	3054, 3055, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063,
	3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072, 3073,
	3074, 3075, 3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083,
	3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093,
	3094, 3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103,
	3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113,
	3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123,
	3124, 3125, 3126, 3127, 3128, 3129, 3149, 3150, 3151, 3152,
	3153, 3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162,
	3163, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172,
	3173, 3174, 3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182,
	3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192,
	3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200, 3201, 3202,
	723, 724, 1518, 0, 805, 803, 2640, 806, 2972, 808,
	810, 656, 657, 658, 659, 660, 661, 0, 840, 3077,
	821, 1939, 841, 843, 844, 845, 846, 800, 798, 0,
	845, 840, 2714, 3077, 838, 1746, 1747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 670, 0, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 585,
	1581, 1582, 1583, 1731, 1732, 3028, 1777, 0, 286, 860,
	-2, -2, 3187, -2, 902, 903, -2, -2, 917, 921,
	912, 3192, 0, 3031, 3013, -2, 924, 1749, 1751, 1753,
	1028, 1029, 1030, 2661, 1034, 1032, 1044, 1045, 1048, 0,
	1065, -2, 0, 2710, 2995, -2, -2, 1066, 1067, -2,
	-2, -2, -2, 1046, 1047, 0, 0, 0, 0, 0,
	2077, 2078, 2644, 1779, 1771, 1774, 1772, 1773, 47, 49,
	51, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 296, -2, -2, -2, -2, 0,
	0, 3083, 2773, 2608, 2678, 2611, 2606, 423, 425, 427,
	429, 430, 0, 0, 0, 0, 0, 0, 0, 461,
	464, 466, 469, 471, 473, -2, 0, 475, 0, 0,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 651, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1396,
	1388, 1389, 1648, 0, 0, 0, -2, 664, 666, 668,
	726, 727, 0, 1928, 1928, 734, 735, -2, 0, 0,
	0, 0, 384, 375, 1323, 1325, 1327, 1328, 0, 0,
	0, 0, 0, 848, 850, 0, 0, 3077, 347, 1330,
	1332, 1334, 1335, 0, 0, 0, 0, 0, 0, 386,
	0, 0, 864, 866, 868, 870, 949, 951, 953, 955,
	957, 959, 961, 963, 965, 967, 970, 972, 974, 976,
	978, 980, 983, 985, 987, 990, 993, 995, 997, 999,
	1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019,
	1021, 1022, 1073, 0, 0, 0, 0, -2, -2, -2,
	0, 0, 0, -2, 0, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 1188,
	0, 0, 0, -2, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	-2, 0, 1291, 0, 0, 1076, 1079, 1080, 1081, 1082,
	1083, 1084, 1085, 0, 1161, 1186, 1187, 1197, 1026, 0,
	1561, 1929, 1779, 1756, 1757, 1758, 1763, 1765, 1759, 1760,
	1761, 53, 55, 57, 59, 61, 63, 65, 67, 69,
	71, 73, 75, 77, 79, 606, 608, 610, 612, 614,
	617, 619, 621, 623, -2, 1898, 1899, 672, 674, 676,
	678, 680, 682, 684, 686, 851, 0, 854, 0, 1078,
	853, -2, 0, 1933, 1933, 1933, 0, 0, 1899, 1897,
	0, 0, 0, 857, 858, 928, 929, 2220, 0, 0,
	0, 0, 0, 0, 0, 0, 2480, 2308, 0, 930,
	-2, 2341, 2343, 3161, 2944, 3187, 2479, -2, 2345, 2346,
	2347, 2348, 2349, 0, 2351, 2352, 2353, 2354, 2355, 2356,
	0, 2358, 0, 2363, 2364, 2365, 0, 3168, 2583, 2671,
	-2, 0, 0, 3175, 2667, 0, 2446, 2381, -2, -2,
	2695, 2674, 2150, 2151, 2152, 2153, 2154, 2155, 2156, -2,
	-2, 3206, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392,
	2393, 2394, 2395, 0, 3149, 3169, 3170, 3176, 3178, 3171,
	3158, 2406, 2789, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 2179, 2188, -2, -2,
	-2, -2, -2, -2, -2, 3162, 3163, 3181, 3184, 3191,
	3196, 3197, 3167, 3177, 3205, 3207, 3208, 3209, 3210, 3211,
	3212, 3213, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3221,
	3222, 2180, -2, -2, -2, -2, 0, 1916, 2988, 1919,
	2025, 1917, 1901, 1903, 0, 1905, 0, 0, 0, 1910,
	1936, 1934, 0, 1985, 1914, 1915, 2008, 2008, 2040, 0,
	2013, 0, 2040, 1928, 2071, 0, 2019, 3018, 2382, 2383,
	0, 2678, 2672, -2, -2, 3203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 801, 0, 807,
	809, 0, 0, 0, 0, 840, 839, 1938, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 3169, 546,
	547, 550, 0, 588, 589, 590, 591, 592, 3169, 0,
	0, 0, 0, 598, 599, 600, 601, 602, 603, 604,
	256, 3169, 691, 720, 716, 0, 256, 3169, 694, 719,
	256, 3169, 697, 718, 0, 700, 1646, 256, 3169, 703,
	2636, 256, 3169, 706, 708, 256, 3169, 712, 2651, 2649,
	713, 0, 715, 276, 272, 273, 274, 275, 1742, 1743,
	1744, 1745, 0, 1776, 1647, 862, 0, 888, 0, 900,
	901, 3157, -2, 0, 3042, 905, 906, -2, 908, 1780,
	1784, 1785, 1786, 1787, 1788, 0, 0, 0, 0, 1793,
	0, 0, 0, 0, 895, 896, 915, 916, 922, 925,
	0, 1037, 1033, 1049, 0, 1064, 0, 1065, 1065, 2625,
	2616, 2617, 0, 0, 1065, 1065, 0, 0, 1068, 1069,
	1070, 1071, 1072, 1770, -2, 90, 0, 3169, 2071, 92,
	0, 2630, 2704, 2705, 2706, 2707, 2708, 3204, 3224, 3225,
	3226, 3227, 3228, 3229, 3230, 3231, 3232, 3233, 3234, 3235,
	3236, 3237, 3238, 3239, 3240, 3241, 3242, 3243, 3244, 3245,
	3246, 3247, 3248, 3249, 3250, 3251, 3252, 3253, 3254, 3255,
	3256, 3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 3265,
	3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273, 3274, 3275,
	3276, 3277, 3278, 3279, 3280, 3281, 3282, 3283, 3284, 3285,
	3286, 3287, 3288, 3289, 3290, 3291, 3292, 3293, 3294, 3295,
	3296, 3297, 3298, 3299, 3300, 3301, 3302, 3303, 3206, 96,
	0, 3169, 101, 0, 3169, 0, -2, 125, 565, 126,
	0, 148, 0, 176, -2, -2, -2, 157, 0, 3169,
	0, 2605, -2, 0, 268, -2, 0, 791, 387, 388,
	2691, 2692, 2700, 2701, 2702, 2703, 376, 377, 0, 782,
	0, 891, 2480, 0, 0, 1360, -2, 0, 1574, 1576,
	1576, 0, -2, 0, 0, 0, 1311, 2602, 2607, 1312,
	1313, 2626, 1314, 2612, 0, 431, 432, 433, 434, 435,
	0, 436, 3169, 438, 439, 0, 441, 442, 3169, 444,
	445, 0, 447, 0, 449, 0, 311, 328, 326, 3169,
	0, 476, 477, 3169, 479, 482, 0, 586, 0, 583,
	0, 567, 568, 0, 570, 0, 0, 0, 575, 576,
	578, 579, 580, 581, 582, 0, 627, 625, 2641, 647,
	401, 0, -2, 3169, 0, 1357, 0, 0, 1626, -2,
	0, 1567, -2, 0, 1633, 3169, 1629, 0, -2, 0,
	1926, 3169, 1797, 1392, 1393, 1394, 1395, 2085, 653, 0,
	1833, 0, 1835, 0, 1855, 2079, 2008, 0, 0, 2084,
	0, -2, 779, 2660, -2, 729, 0, 730, 0, -2,
	0, 401, 0, 0, 1338, 1340, 1341, 1343, 1344, 1347,
	1348, 1349, 1350, 0, 1352, 2057, 348, 350, 0, 0,
	0, 0, 1337, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 0, 647, 873, 0, 0, 1074, 1075, 0,
	0, 1093, 1094, 1095, 0, 0, 401, -2, -2, -2,
	-2, 1104, 0, 1112, 1115, -2, 0, 0, 0, 0,
	1122, 0, 1127, 1128, 1129, 0, -2, 0, 1136, 1138,
	1321, 1141, 0, 1321, 0, 1143, 0, 1147, 0, 1150,
	0, 1152, 0, 1154, -2, -2, -2, 1162, 1163, -2,
	1168, -2, 0, 1172, -2, 0, 1175, 0, 1178, -2,
	0, 1188, 1184, 1185, 0, 0, 0, 0, 1205, 1206,
	0, 1210, 0, 1219, 0, 1222, 1223, 1224, 0, 0,
	1229, 1230, 0, 1232, 1233, 1234, 1236, 1237, 1238, 0,
	3116, 3039, 2773, 2852, 3037, 2822, 0, 1249, -2, 2810,
	1259, 1261, 0, -2, 0, 1277, 0, 1281, 0, 0,
	1290, 0, 0, 0, 1077, 0, 1086, 1087, 1088, 256,
	2075, 1755, 0, -2, 0, 852, 0, 856, 1958, 1884,
	1881, 0, 1955, 1956, 1885, 0, 0, 0, 1892, 0,
	1931, 1932, 0, 0, 0, 1871, 1872, 0, 0, 0,
	0, 0, 0, 2485, 2486, 2487, 2488, 2501, 2489, 2490,
	2500, 2498, 2499, 2491, 2492, 2497, 2511, 2512, 2502, 2503,
	2493, 2506, 2504, 2505, 2507, 2508, 2509, 2510, 0, 0,
	2516, 0, 2494, 2495, 2496, 2524, 0, 0, 2525, 0,
	2527, 0, 2517, 2513, 2514, 2515, 0, 2287, 2289, 2591,
	0, 0, 0, 2523, 2518, 2519, 2225, 2226, 2227, 2228,
	2229, 2262, 2266, 2267, 0, 0, 2342, 2588, 2587, 2344,
	0, 0, 2539, 0, 2357, -2, 0, 2480, 2534, 0,
	0, 2366, 2367, 2368, 0, 0, 2539, 0, 0, 2582,
	2378, 2379, 2217, 0, 0, 2448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2166, 2165, 0, 2167, 0, 2168,
	2169, 0, -2, 0, 0, 2189, 0, 0, 0, 0,
	2193, 0, 0, 0, 0, 0, 0, 0, 2563, -2,
	0, 0, 0, 0, 2181, 0, 0, 1918, 0, 0,
	0, 1989, 2592, 2596, 2597, 1989, 1989, 0, 0, 2540,
	2068, 2068, 0, 0, 2063, 2063, 2063, 2061, 2040, 0,
	2040, 2050, 0, 2040, 2040, 0, -2, 2013, 0, 0,
	2054, 0, 2034, 767, 769, 771, 773, 774, 775, 777,
	2072, 2073, 0, 0, 0, 0, 2679, 0, 0, 0,
	0, 0, 0, 2663, 0, 0, 2635, 456, 457, 0,
	0, 0, 3096, 3031, 0, -2, -2, -2, -2, 3039,
	0, 0, 2773, 2810, 2822, 812, 842, 0, 1928, 0,
	2542, 2100, 2104, 0, 2106, 2107, 2108, 0, 0, 2101,
	2200, 2696, 2697, 2698, 2160, 2161, 2162, 2163, 2164, 2172,
	2159, 2159, 2159, 2170, -2, 2177, 2199, 2191, 2199, 2195,
	2143, 2144, 2145, 2182, 2183, 2184, 2185, 0, 3096, 3031,
	0, -2, 0, 824, 0, 0, 0, 1866, 338, 339,
	544, 0, 254, 255, 0, 549, 0, 587, 0, 594,
	595, 596, 0, 687, 0, 0, 256, 3169, 692, 0,
	695, 0, 256, 3169, 2600, 701, 0, 704, 0, 0,
	710, 0, 0, 0, 0, 0, 256, 1868, 0, 0,
	0, 0, -2, 910, 918, 919, 920, 0, 1782, 0,
	1789, 939, 940, 941, 1791, 1792, 0, 1794, 913, 942,
	943, 944, 945, 946, 947, 0, 2614, 2615, 2620, 2621,
	0, 0, 911, 932, 914, 0, 926, 1040, 1035, 1036,
	1050, 1051, 0, 0, 2618, 2619, 0, 0, 1056, 1057,
	158, 1728, 0, 0, 209, 0, 1728, 1728, 0, 0,
	0, 0, 237, 0, 0, 1426, 0, 0, 0, 0,
	176, 194, 205, 170, 171, 172, 0, 0, 0, 0,
	0, 0, 102, 1540, 0, 1543, 0, 0, 0, 0,
	0, 0, 0, 1556, 1559, 0, 0, 0, 0, 559,
	0, 533, 0, 0, 556, 564, 0, 0, 520, 521,
	522, 523, 0, 0, 528, 0, 0, 0, 0, 534,
	0, 128, 129, 0, 0, 134, 135, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 1830, 0, 184, 176,
	0, 0, 175, 177, 160, 0, 0, 176, 180, 195,
	207, 0, 243, 0, 183, 245, 1423, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 278, 0, 0, 313,
	789, 0, 792, 0, 781, 783, 647, 647, 0, 0,
	889, 893, 894, 0, 0, 890, 892, 0, 0, 1568,
	0, 0, 0, 1925, 0, 0, 0, 0, 3169, 1726,
	0, 1709, 0, 2057, 2871, -2, -2, 348, 2057, 1310,
	0, 0, 2679, 2610, 0, 0, 0, 0, 0, 0,
	448, 0, 0, 0, 337, 0, 0, 0, 484, 489,
	0, 577, 566, 569, 571, 572, 573, 615, 1487, 3169,
	0, 0, 651, 642, 0, 646, 0, 0, 650, 0,
	0, 1539, 3169, 1537, 2645, 0, 1565, 0, 1625, 1518,
	3169, 2643, 0, 0, 0, 1634, 2688, 1643, 1647, 1818,
	0, 655, 0, 1836, 1838, 0, 0, 2080, 0, 2082,
	2008, 1928, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 1351, 357, 0, 2056, 0, 0, 389, 2057,
	348, 3001, 0, 1336, 401, 401, 2057, 875, 2057, 877,
	0, 0, 1096, 0, 0, 1099, 401, 401, 401, 401,
	1110, 1111, 1113, 1114, -2, -2, -2, -2, 1116, 1117,
	1216, 0, 0, 0, 1215, 1724, 0, 1132, 1135, 1139,
	0, 1294, 3013, 3031, 3096, 1319, 1140, 1216, 2773, 1216,
	2773, 1216, 2773, 1216, 1216, 1156, 1200, 1212, 1167, 1174,
	0, 1169, 1173, 1176, 1179, 0, 1181, 1189, 0, -2,
	0, 1192, 0, 1194, 0, 1196, 1216, 1208, 1217, 1220,
	0, 1228, 1231, 0, 1239, 1240, 1241, 1242, 2658, 0,
	0, 1245, 1246, 1247, 1248, -2, 0, 1252, 1253, 0,
	0, 1268, 1273, 1274, 1270, 0, 0, 0, 0, 0,
	0, 1284, 1285, 0, 0, 0, 1293, 0, 1089, 1560,
	0, 1764, 1958, 1884, 855, 1875, 1957, 1876, 1883, 1886,
	0, 0, 1888, 0, 1890, 0, 1953, 1954, 1961, 1962,
	0, 1972, 1973, 1965, 0, -2, 0, 0, 1968, 1969,
	1894, 0, 1911, 1912, 1913, 1942, 1945, 1662, 0, 3306,
	898, 0, 2221, 2095, 2222, 2223, 2629, 0, 2230, 2231,
	2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, -2, -2,
	-2, -2, -2, -2, -2, -2, 2248, 2249, 2250, 2251,
	2252, 2253, 2254, 2255, 2256, 2257, 2258, -2, -2, -2,
	2263, 2264, 2265, -2, 2526, 2528, 0, 2591, 0, -2,
	0, -2, -2, -2, -2, 2284, 0, 2286, 2291, 2293,
	2295, 0, 0, 0, 0, 2590, 2305, 2574, 2575, 0,
	0, 2482, 2483, 2484, 2290, 0, 2309, 2589, 2586, 0,
	0, 2520, 0, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 0, 2538, 1941, 2370,
	0, 0, 0, 0, 2377, 2362, 2536, 0, 2535, 0,
	0, 0, 2546, 0, 2581, 2577, 0, 2627, 2216, 2203,
	2204, 2205, 2206, 2207, 2208, 2218, 0, 2624, 2664, 2670,
	2456, 0, 0, 0, 2407, 2408, 2409, 2410, 2411, 0,
	2413, 2414, 0, 2416, 2417, 0, 2419, 2420, 0, 2422,
	2423, 2424, 2425, 2426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2111, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 0, 0, 2428, 0,
	2549, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	2430, 0, 2432, 2540, 2560, 0, 0, 2310, 0, 0,
	0, 0, 0, 2435, 2540, 2568, 0, 0, 0, 0,
	0, 2540, 0, 2573, 0, 2442, 0, 2444, 1119, 1120,
	1920, 0, 0, 2026, 0, 2090, 0, 0, 0, 2595,
	2598, 2599, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137,
	3138, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147,
	3148, 2090, 2090, 0, 1984, 0, 0, 2064, 2065, 2066,
	2067, 0, 0, 2068, 0, 2058, 2062, 2059, 2060, 2050,
	2005, 0, 0, 2631, 2050, 2011, 2049, 0, 2025, 2039,
	2050, 2050, 0, -2, 2015, 2053, 0, 2028, 2040, 0,
	0, 768, 770, 772, 776, 778, 0, 0, 1941, -2,
	0, -2, 403, 1517, 0, 0, 0, 0, 0, 0,
	802, 804, 0, 0, 707, 0, 0, 0, 0, 1300,
	0, 1302, 1303, 0, 1305, 0, 1712, 796, 0, 799,
	0, 2091, 2094, 0, 0, 2105, 2109, 2110, 2201, 0,
	0, 0, 0, 0, 0, 0, 837, 0, 3077, 0,
	835, 0, 548, 256, 0, 552, 553, 0, 0, 501,
	502, 503, 504, 506, 2699, 507, -2, -2, 0, 597,
	256, 717, 689, 0, 256, 256, 698, 0, 0, 256,
	709, 256, 2652, 256, 2650, 277, 714, 1867, 289, 0,
	897, 0, 1781, 1790, 0, 936, 0, 938, 0, 2622,
	2623, 0, 927, 0, 1038, 0, 1052, 1053, 1054, 1055,
	0, 0, 0, 0, 1727, 0, 0, 1672, 0, 0,
	213, 3169, 0, 258, 0, 0, 1480, 2637, 0, 1468,
	0, 0, 2797, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 173, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 1541, 1542, 1544, 1551, 1553, 0, 1547, 1548, 0,
	1550, 1552, 1554, 0, 1557, 0, 0, 0, 0, 0,
	0, 555, 557, 558, 533, 0, 0, 0, 0, 0,
	0, 0, 526, 527, 529, 530, 531, 532, 0, 0,
	0, 0, 0, 0, 136, 140, 1577, 3037, 0, 0,
	0, 0, 1578, 1579, 1580, 1806, 1807, 0, 1829, 1830,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 182, 0, 2604, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 314, 0, 793, 0,
	794, 0, 784, 401, 786, 787, 397, 394, 396, 788,
	0, 0, 0, 1570, 0, 1621, 1619, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 0, 0, 0, 0, -2, 1572, 1573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	0, 392, 2603, 2613, 0, 1345, 1346, 437, 440, 443,
	446, 295, 0, 0, 0, 481, 491, 0, 1398, 1370,
	0, 0, 626, 401, 647, 649, 0, 399, 2947, 2656,
	1355, 1535, 1538, 0, 1518, 3169, 1589, 0, 0, 0,
	0, 0, 0, 0, 1632, 0, 0, 3169, 2632, 2687,
	2688, 1820, 1830, 0, 2090, 0, 1853, 1839, 0, 0,
	0, 1853, 1857, 1858, 1860, 1861, 0, 0, 2081, 2087,
	728, 780, 1928, 1928, 401, 0, 0, 1842, 1844, 0,
	0, 0, 340, 0, 351, 2057, 349, 0, 357, 0,
	0, 2057, 348, 0, 641, 874, 879, 401, 0, 0,
	401, 1100, 1101, 1102, 1103, 1158, 1202, 1214, 1272, 1121,
	1123, 1124, 1125, 0, 1130, 0, 0, 0, 1320, 1315,
	1316, 1317, 2653, 2649, 1318, 1142, 1216, 1145, 1216, 1148,
	1216, 1151, 1153, 1171, 1177, 1190, 1183, 1191, 0, 0,
	0, 1204, 0, 0, 1226, 0, 1235, 1243, 0, 1251,
	-2, 1256, 1257, 0, 0, 0, 0, 0, 0, 0,
	1278, 1279, 1280, 1282, 1287, 1286, 0, 1292, 1090, 2076,
	1879, 1880, 1882, 0, 1891, 0, 0, 1967, -2, -2,
	1966, 1970, 1971, -2, -2, -2, -2, 1887, 0, 1896,
	1893, 0, 1952, 1660, 1661, 0, 0, 899, 0, 0,
	-2, -2, 0, 0, 0, 2306, 0, -2, 2285, 2288,
	2292, 2294, 2296, 0, 0, 0, 0, 0, 0, 2529,
	0, 2531, 2307, 2584, 2587, 2522, 0, 2478, 0, 0,
	1940, 1941, 1941, 0, 2376, 0, 2537, 0, 2544, 2545,
	0, 2369, 0, 2578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2380, 0, 0, 0, 0, 2412, 2415,
	2418, 2421, 0, 0, 0, 0, 2401, 0, 0, 0,
	2405, 2171, 2157, 0, 0, 2174, 2178, 2199, 2197, 2198,
	2192, 2199, 2196, 2147, 0, 2146, 0, 2427, 0, 2429,
	2431, 0, 0, 2433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2313, 2314,
	2315, 2335, 2434, 2566, 2567, 0, 0, 0, 0, 0,
	0, 2440, 0, 2572, 2441, 2443, 1928, 0, 1921, 0,
	2024, 0, 1986, 1975, 2089, 0, 2593, 2057, 1988, 1990,
	2594, 2634, 1975, 1975, 0, 2541, 0, 0, 2044, 0,
	0, 0, 2046, 2009, 0, 0, 2003, 0, 1994, 1995,
	1996, 1997, 1998, 1999, 2000, 2010, 2025, 2048, 2012, 2016,
	2664, 0, 2028, 2052, 0, 2050, 0, 2035, 0, 2037,
	2074, 0, 2021, 2054, 0, 0, 2680, 2090, 0, 450,
	458, 459, 451, 452, 453, 454, 0, 1712, 0, 0,
	0, 0, 0, 1301, 1304, 0, 820, 0, 0, 2543,
	0, 2096, 0, 2102, 0, 822, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 545, 551, 0, 0, 500,
	0, 499, 505, 593, 688, 256, 693, 696, 2601, 256,
	702, 705, 711, 285, 0, 887, -2, 934, 935, 937,
	0, 933, 1043, 1039, 210, 1728, 0, 0, 0, 1668,
	0, 1381, 0, 1376, 1377, 1670, 2648, 1674, 1680, 1683,
	0, 215, 3169, 227, 0, 3169, 0, 1442, 0, 0,
	0, 0, 0, 0, 1730, 0, 0, 3169, 256, 3169,
	256, 231, 233, 236, 0, 242, 238, 0, 1378, 0,
	1430, 0, 0, 1433, 159, 1728, 0, 0, 162, 166,
	178, 0, 0, 0, 192, 0, 0, 0, 1685, 1689,
	1697, 0, 0, 0, 1545, 1546, 1549, 1555, 1558, 103,
	0, 0, 0, 1693, 1695, 1701, 560, 561, 562, 0,
	0, 0, 524, 525, 127, 130, 3169, 2646, 0, 132,
	3169, 0, 141, 1830, 0, 0, 0, 0, 1667, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 164, 168,
	179, 0, 1703, 161, 181, 0, 271, 0, 0, 261,
	256, 3169, 0, 263, 0, 264, 265, 279, 0, 0,
	0, 0, 0, 0, 0, 319, 0, 0, 0, 790,
	0, 785, 0, 0, 0, 1358, 1359, 1620, 0, 1563,
	1564, 323, 324, 0, 1575, 1569, 0, 0, 0, 0,
	0, 1705, 1706, 0, 0, 0, 1726, 1721, 2057, 291,
	0, 2057, 299, 0, 2609, 0, 327, 336, 478, 0,
	490, 492, 494, 0, 0, 0, 1397, 1498, 1399, 1401,
	1402, 1403, 258, 0, 0, 0, 1468, 2858, 2688, 0,
	0, 1365, 0, 0, 0, 632, 628, 0, 639, 643,
	644, 0, 0, 0, -2, 0, 0, 0, 0, -2,
	0, 0, 0, 1636, 1630, 1631, 0, 0, 0, 0,
	3169, 1822, 1830, 0, 1926, 1941, 654, 1831, 1853, 0,
	0, 0, 1841, 1837, 1834, 2090, 0, 0, 0, 0,
	0, 2083, 2086, 731, 732, 378, 0, 401, 0, 0,
	0, 0, 0, 0, 355, 0, 358, 0, 0, 0,
	363, 364, 365, 366, 367, 368, 0, 0, 0, 0,
	373, 374, 357, 390, 342, 2057, 0, 357, 0, 0,
	876, 0, 1091, 0, 0, 1098, 0, 0, 1724, 1134,
	0, 1144, 1146, 1149, 1193, 1195, 1216, 1207, 0, 1227,
	1244, 1255, 1262, 2633, 1263, 1420, 0, 1420, 0, 0,
	1283, 1289, 1889, 0, 1964, 1895, 1946, 1947, 0, 1662,
	0, 2224, 2269, 0, 0, -2, 0, 0, 2273, 0,
	0, 0, -2, 0, 0, 0, 2530, 2532, 0, 2586,
	2521, 2371, 0, 0, 0, 2375, 2359, 2360, 0, 2481,
	2547, 2576, 2580, 0, 2209, 2210, 2211, 2212, 2213, 2214,
	2215, 0, 2628, 2665, 2669, 2454, 2455, 2459, 2642, 0,
	0, 0, 2384, 0, 0, 0, 0, 0, 0, 0,
	0, 2173, 2190, 2194, 0, 0, 2548, 2559, 2561, 2311,
	2312, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324,
	2325, -2, -2, -2, 2329, 2330, 2331, -2, -2, -2,
	2336, 0, 0, 0, 2562, 2564, 2565, 2569, 2570, 0,
	2437, 2438, 2439, 2571, 0, 1928, 1922, 2027, 1983, 0,
	2088, 1987, 0, 1983, 1983, 1935, 2042, 0, 0, 2070,
	0, 2006, 0, 2007, 0, 0, 2047, 0, 2014, 2051,
	0, 2030, 2032, 2017, 2018, 2036, 0, 2020, 0, 2023,
	2371, -2, 402, 404, 406, 0, 409, 410, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 811, 1712,
	1712, 0, 0, 0, 813, 0, 797, 0, 0, 2098,
	0, 2202, 826, 828, 0, 0, 0, 0, 3096, 3031,
	0, 0, 825, 554, 497, 498, 690, 699, 287, 0,
	2055, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 257, 0, 1479, 0, 1440, 0, 0,
	1467, 0, 0, 1485, 217, 218, 219, 0, 0, 0,
	0, 229, 0, 0, 225, 0, 235, 241, 240, 0,
	1427, 0, 0, 0, 0, 1673, 0, 0, 0, 189,
	190, 191, 0, 196, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 518, 0, 0, 0, 0, 138,
	0, 0, 0, 143, 144, 0, 0, 1812, 1813, 0,
	1800, 186, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 1659, 281, 0, 0, 0, 0, 0, 315,
	316, 317, 318, 0, 303, 305, 0, 0, 0, 0,
	325, 0, 398, 393, 395, 1562, 1623, 1624, 1571, 1686,
	1690, 1698, 0, 0, 0, 0, 0, 845, 1725, 0,
	299, 297, 0, 300, 299, 293, 0, 0, 0, 0,
	0, 0, 0, 574, 1368, 1486, 0, 0, 1488, 1404,
	1408, 0, 0, 2688, 0, 0, 0, 2639, 0, 1366,
	0, 0, 1487, 624, 630, 0, 633, 0, 636, 0,
	638, 0, 648, 2638, 0, 0, 0, 1539, 0, 0,
	1566, 1518, 1592, 1518, 0, 1635, 1637, 0, 1645, 0,
	0, 0, 1824, 1830, 0, 1817, 1818, 1960, 1832, 1851,
	-2, 0, 0, 1941, 1859, 1856, 1862, 1863, 0, 0,
	381, 0, 1843, 1845, 0, 1339, 1342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 357, 354, 344,
	2057, 385, 0, 401, 401, 1126, 1723, 1131, 2654, 1203,
	1225, 1264, 1419, 0, 0, 1266, 0, 0, 1963, 1950,
	1951, 1948, 1662, 2271, 2275, 0, 0, 0, 2277, -2,
	0, 2299, -2, -2, 2533, 2585, 2350, 1941, 2372, 2374,
	2361, 2579, 2219, 0, 2461, 2458, 0, 2445, 0, 2396,
	2397, 0, 0, 2400, 2402, 2403, 2404, 2158, 2149, 2148,
	2558, 0, 0, 0, 0, 2436, 1923, 0, 2450, 0,
	0, 1991, 2450, 2450, 2043, 0, 2045, 2004, 1992, 0,
	2001, 0, 2665, 2029, 0, 2033, 2038, 2022, 0, 407,
	0, 411, 412, 413, 414, 416, 0, 0, 0, 0,
	0, 455, 814, 815, 0, 0, 0, 0, 1711, 2092,
	2097, 0, 2103, 0, 0, 0, 0, 0, 0, 0,
	0, 836, 288, 0, 1041, 1042, 211, 212, 1382, 1380,
	1677, 1681, 1678, 0, 214, 0, 0, 1441, 0, 1444,
	0, 0, 0, 0, 1451, 1468, 0, 0, 0, 0,
	0, 0, 1470, 0, 1469, 0, 0, 1502, 0, 1650,
	1657, 0, -2, 0, 0, 0, 221, 247, 0, 0,
	0, 0, 250, 1729, 223, 0, 0, 256, 256, 1379,
	0, 0, 1669, 1671, 1684, 0, 0, 0, 0, 199,
	0, 0, 1687, 1691, 1699, 1694, 1696, 1702, 563, 519,
	0, 0, 133, 142, 1803, 0, 0, 0, 1814, 0,
	185, 0, 0, 0, 1704, 269, 270, 0, 256, 0,
	256, 262, 256, 1659, 0, 0, 0, 0, 0, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	1707, 1708, 290, 0, 0, 292, 391, 299, 480, 488,
	493, 495, 496, 1429, 0, 1498, 1490, 1491, 1492, 0,
	1400, 1497, 1499, 0, 0, 1405, 0, 0, 0, 0,
	0, 0, 1385, 1367, 0, 1398, 1370, 634, 0, 635,
	637, 629, 0, 400, 1356, 1536, 1584, 1518, 0, 1587,
	0, 0, 1627, 0, 0, 0, 0, 0, 0, 0,
	1826, 1830, 0, 1819, 1820, 1853, 1959, 0, 0, 0,
	1840, 1960, 0, 401, 0, 401, 359, 0, 360, 361,
	362, 369, 370, 371, 372, 343, 346, 0, 357, 878,
	880, 0, 0, 0, 886, 1092, 1097, 1418, 0, 0,
	0, 0, 1949, 2279, -2, -2, 2300, 0, 2666, 2668,
	1941, 0, 2447, 1943, 0, 0, -2, 0, 0, 0,
	1924, 1907, 0, 1982, 1974, 1976, 1978, 3016, 2768, 3168,
	1908, 1909, 2069, 0, 0, 2031, 408, 417, 418, 0,
	420, 421, 816, 0, 0, 0, 0, 2099, 0, 0,
	0, 823, 0, 0, 0, 0, 1031, 0, 0, 1679,
	216, 0, 0, 1445, 1446, 1448, 0, 1450, 1452, 1453,
	1370, 0, 1457, 0, 2690, 0, 1462, 1465, 1466, 0,
	0, 1481, 1503, 0, 1512, 0, 1652, 1662, 1656, 0,
	1654, 1514, 0, 220, 249, 222, 251, 246, 0, 1659,
	0, 224, 234, 0, 0, 163, 0, 0, 2761, 202,
	200, 198, 131, 137, 139, 145, 1666, 188, 0, 165,
	0, 271, 280, 1658, 282, 266, 256, 0, 302, 304,
	306, 307, 308, 309, 0, 1688, 1692, 1700, 0, 1715,
	1716, 1717, 1718, 1719, 0, 0, 0, 301, 0, 0,
	0, 487, 1370, 1428, 1369, 1489, 0, 1500, 1370, 0,
	0, 1514, 0, 0, 0, 0, 0, 1372, 0, 1371,
	0, 0, 631, 2090, 645, 0, 0, 0, 1591, 0,
	1638, 1636, 0, 1644, 0, 0, 0, 1799, 0, 0,
	1821, 1822, 652, 1846, 0, 0, 1853, 1864, 380, 0,
	383, 356, 0, 345, 0, 882, 0, 884, 0, 1265,
	1267, 0, 0, 2373, 2465, 0, 0, 2398, 2399, -2,
	0, 2339, 2449, 2451, 0, 0, 0, 0, 0, 1993,
	2002, 419, 1712, 1712, 1712, 2093, 830, 831, 833, 827,
	829, 0, 0, 1675, 0, 1682, 258, 1443, 1447, 0,
	1454, 0, 0, 0, 1458, 1522, 0, 0, 1539, 1539,
	1471, 0, 0, 1506, 1507, 1425, 0, 1508, 1509, 1510,
	1651, 1952, 1657, 1370, 0, 0, 248, 253, 0, 0,
	0, 0, 0, 0, 187, 0, 260, 283, 1659, 0,
	0, 1720, 0, 0, 298, 332, 510, 508, 1372, 0,
	1501, 1406, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1407, 1512, 1514, 0, 1425, 0, 1478, 1383, 0,
	1386, 0, 1368, 0, 640, 0, 1585, 0, 1592, 0,
	0, 1645, 0, 0, 1809, 1798, 1830, 1823, 1824, 2090,
	0, 1854, 0, 352, 353, 881, 0, 0, 1275, 1276,
	0, 0, 0, 0, 2460, 1944, 2340, 0, 0, 1977,
	1979, 1980, 1981, 817, 818, 819, 0, 0, 1676, 228,
	0, 1516, 1456, 1527, 0, 0, 0, 0, 0, 1472,
	1504, 1505, 1502, 1424, 0, 1655, 1653, 1483, 1516, 1518,
	226, 0, 1514, 0, 1434, 0, 0, 1437, 0, 0,
	203, 2761, 201, 0, 256, 795, 1712, 256, 0, 335,
	0, 543, 509, 511, 0, 0, 515, 516, 517, 1364,
	0, 1494, 1496, 1425, 1512, 1514, 1370, 1425, 0, 1387,
	1429, 1385, 1586, 1590, 1588, 1628, 1514, 0, 1512, 0,
	1816, 1830, 1810, 1811, 0, 1826, 0, 0, 401, 883,
	885, 2457, 2477, 2466, -2, 3099, 2769, 0, 2477, 2477,
	2452, 2453, 0, 0, 0, 1370, 0, 1459, 1523, 1524,
	0, 1519, 1520, 1521, 2689, 1460, 1461, 1463, 1464, 2090,
	0, 1513, 1522, 252, 1370, 1431, 0, 0, 1432, 0,
	0, 206, 0, 208, 284, 1710, 1713, 0, 310, 0,
	0, 483, 541, 0, 0, 512, 513, 535, 514, 1361,
	1363, 1370, 0, 1370, 1425, 1512, 2090, 1370, 0, 0,
	0, 1370, 1372, 1512, 0, 1425, 0, 1805, 1815, 0,
	1825, 1799, 0, 1849, 0, 382, 2462, 0, 0, 2468,
	2469, 2470, 2471, 2472, 2463, 2464, 832, 834, 1449, 1455,
	0, 1525, 0, 1526, 0, 0, 0, 1482, 1511, 1527,
	232, 1435, 0, 1438, 0, 204, 0, 0, 330, 331,
	540, 536, 1493, 1495, 2090, 1370, 1425, 1665, 2090, 1373,
	0, 1375, 1372, 1384, 1425, 0, 1370, 0, 1828, 1804,
	1808, 2647, 1809, 1847, 0, 0, 0, 2474, 2475, 0,
	0, 0, 1528, 0, 1531, 1532, 0, 1529, 1502, 0,
	0, 256, 0, 1928, 1665, 2090, 1370, 1476, 0, 1664,
	1665, 1374, 1364, 1370, 1514, 2090, 1512, 1802, 1830, 1816,
	0, 2090, 2473, 2476, 2467, 1515, 1530, 1533, 1534, 1484,
	0, 0, 1714, 333, 0, 0, 542, 537, 538, 1473,
	1665, 2090, 1663, 1477, 1362, 2090, 1512, 1665, 1425, 1795,
	1801, 0, 0, 1805, 2090, 1850, 1422, 0, 0, 539,
	1474, 1665, 1665, 1425, 1641, 1370, 1827, 1802, 1848, 1436,
	1421, 0, 334, 1475, 1639, 1370, 2090, 1796, 0, 2090,
	1665, 0, 1665, 1642, 1422, 1640, 1439,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 654, 3, 660, 655, 3,
	666, 667, 658, 656, 671, 657, 668, 659, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 675, 672,
	646, 648, 647, 651, 670, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 664, 3, 665, 661, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 673, 653, 674, 649,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 633, 57976, 634, 57977, 635, 57978, 636, 57979, 637,
	57980, 638, 57981, 639, 57982, 640, 57983, 641, 57984, 642,
	57985, 643, 57986, 644, 57987, 645, 57988, 650, 57989, 652,
	57990, 662, 57991, 663, 57992, 669, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1665
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1670
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1674
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1680
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1684
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1685
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1686
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1687
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1688
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1689
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1690
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1691
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1692
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1696
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1697
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1698
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1699
		{
			return helpWith(sqllex, "MOVE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1708
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1709
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1711
		{
			return helpWith(sqllex, "ALTER")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1714
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1715
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1716
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1717
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1718
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1719
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1720
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1721
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1722
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1723
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1724
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1725
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1726
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1727
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 90:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1788
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1814
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1828
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1848
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1852
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1919
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1923
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1927
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1934
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1946
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1956
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1963
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1973
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1980
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1999
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2006
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2015
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2034
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2044
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2053
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     false,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2061
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     true,
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2070
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelGlobal,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2083
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2096
		{
			s := sqlDollar[9].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				RegionName:    tree.Name(sqlDollar[8].str),
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2132
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2166
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2174
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2190
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2199
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2210
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2214
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2220
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2228
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2242
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2264
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2269
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2275
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2287
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[3].union.tableIndexName(), NotVisible: sqlDollar[4].union.bool(), IfExists: false}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2302
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[5].union.tableIndexName(), NotVisible: sqlDollar[6].union.bool(), IfExists: true}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2308
		{
			sqlVAL.union.val = true
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2312
		{
			sqlVAL.union.val = false
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2328
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 185:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2348
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2357
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2368
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2377
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2390
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: sqlDollar[4].union.expr(),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2399
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					Options: sqlDollar[4].union.kvOptions(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2407
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: true,
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2416
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: tree.DNull,
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2426
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2434
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2445
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 196:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2455
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2465
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 198:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2474
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2485
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 200:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2491
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 204:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2517
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2522
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2537
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2543
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2547
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2554
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2559
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2564
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colTableDef()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2569
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colTableDef()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2574
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colTableDef()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2579
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colTableDef()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2584
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2589
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2594
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2604
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2613
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2618
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2627
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2657
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2667
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2670
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2676
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2682
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2698
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2707
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2721
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2728
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2735
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2741
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2749
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2753
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2757
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2763
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2771
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = nil
		}
	case 248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = true
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = false
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2805
		{
			sqlVAL.union.val = nil
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2812
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2816
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2830
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 259:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2866
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2877
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2886
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2896
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2905
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2923
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2927
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2930
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2934
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2941
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2948
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2954
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2968
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2974
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2982
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2986
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3007
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3014
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3026
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3102
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3111
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3119
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3127
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3131
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3135
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3142
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3146
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3179
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3183
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3265
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3276
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = &tree.AlterBackupSchedule{
				ScheduleID: uint64(sqlDollar[4].union.int64()),
				Cmds:       sqlDollar[5].union.alterBackupScheduleCmds(),
			}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3301
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = tree.AlterBackupScheduleCmds{sqlDollar[1].union.alterBackupScheduleCmd()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupScheduleCmds(), sqlDollar[3].union.alterBackupScheduleCmd())
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetLabel{
				Label: sqlDollar[3].union.expr(),
			}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3323
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetInto{
				Into: sqlDollar[3].union.stringOrPlaceholderOptList(),
			}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3329
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetWith{
				With: sqlDollar[3].union.backupOptions(),
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3335
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetRecurring{
				Recurrence: sqlDollar[2].union.expr(),
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3341
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{AlwaysFull: true},
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3347
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{Recurrence: sqlDollar[4].union.expr()},
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3353
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetScheduleOption{
				Option: sqlDollar[4].union.kvOption(),
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3366
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3376
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3386
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3392
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3396
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3419
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3423
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3427
		{
			sqlVAL.union.val = nil
		}
	case 336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3444
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3450
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3461
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3466
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3501
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3510
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3529
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3539
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3548
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3558
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.backupTargetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3565
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3573
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3583
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3590
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3598
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3612
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3616
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3627
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3631
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3640
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3644
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3676
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3692
		{
			sqlVAL.union.val = &tree.RestoreOptions{SchemaOnly: true}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = &tree.RestoreOptions{VerifyData: true}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3701
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3707
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3711
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3738
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3743
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3747
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3753
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3758
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3763
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3767
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3784
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3787
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3791
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3795
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3807
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3817
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3827
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3831
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3835
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3845
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3855
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3859
		{
			sqlVAL.union.val = nil
		}
	case 402:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3871
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3885
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3895
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3913
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3925
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3929
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3933
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3937
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3941
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3945
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3949
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3953
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3957
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3961
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3965
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3973
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3974
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3975
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3976
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3977
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3987
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3995
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4001
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4004
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4014
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4023
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4031
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4037
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4040
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4050
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4059
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4067
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4073
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4076
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4084
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4087
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4091
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4095
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4099
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4103
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4116
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4121
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4124
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4125
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4129
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4134
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4146
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4149
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4152
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4153
		{
			return helpWith(sqllex, "CREATE TENANT")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4154
		{
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4155
		{
			return helpWith(sqllex, "CREATE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = &tree.CreateTenant{Name: tree.Name(sqlDollar[3].str)}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4165
		{
			return helpWith(sqllex, "CREATE TENANT")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4172
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4179
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4182
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4185
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4203
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4218
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4221
		{
			sqlVAL.union.val = true
		}
	case 486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4222
		{
			sqlVAL.union.val = false
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4225
		{
			sqlVAL.union.val = true
		}
	case 488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4226
		{
			sqlVAL.union.val = false
		}
	case 490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4232
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4233
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4236
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4238
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4245
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4251
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4283
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4299
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4300
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4301
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4302
		{
			return unimplementedWithIssueDetail(sqllex, 88947, "variadic user-defined functions")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4311
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4312
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4317
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4323
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4327
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4334
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4335
		{
			return unimplemented(sqllex, "create window function")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4337
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 519:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4347
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4351
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4355
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4359
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4363
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4367
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4371
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4375
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4379
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4383
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4391
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4395
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4399
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4406
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4407
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 540:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4430
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4442
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = &tree.DropFunction{
				Functions:    sqlDollar[3].union.functionObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = &tree.DropFunction{
				IfExists:     true,
				Functions:    sqlDollar[5].union.functionObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4474
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4478
		{
			sqlVAL.union.val = tree.FuncObjs{sqlDollar[1].union.functionObj()}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionObjs(), sqlDollar[3].union.functionObj())
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4488
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
				Args:     sqlDollar[2].union.functionArgs(),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = sqlDollar[2].union.functionArgs()
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4513
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 555:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4523
		{
			sqlVAL.union.val = &tree.AlterFunctionOptions{
				Function: sqlDollar[3].union.functionObj(),
				Options:  sqlDollar[4].union.functionOptions(),
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4532
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4536
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4541
		{
		}
	case 559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4542
		{
		}
	case 560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4546
		{
			sqlVAL.union.val = &tree.AlterFunctionRename{
				Function: sqlDollar[3].union.functionObj(),
				NewName:  tree.Name(sqlDollar[6].str),
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4555
		{
			sqlVAL.union.val = &tree.AlterFunctionSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = &tree.AlterFunctionSetOwner{
				Function: sqlDollar[3].union.functionObj(),
				NewOwner: sqlDollar[6].union.roleSpec(),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4573
		{
			sqlVAL.union.val = &tree.AlterFunctionDepExtension{
				Function:  sqlDollar[3].union.functionObj(),
				Remove:    sqlDollar[4].union.bool(),
				Extension: tree.Name(sqlDollar[8].str),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = true
		}
	case 565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = false
		}
	case 566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4592
		{
			return unimplemented(sqllex, "create access method")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4593
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4594
		{
			return unimplemented(sqllex, "create cast")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4595
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4596
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4597
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4598
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4599
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4600
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4601
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4602
		{
			return unimplemented(sqllex, "create publication")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4603
		{
			return unimplemented(sqllex, "create rule")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4604
		{
			return unimplemented(sqllex, "create server")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4605
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4606
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4607
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4611
		{
		}
	case 584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4612
		{
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4615
		{
		}
	case 586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4616
		{
		}
	case 587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4619
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4620
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4621
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4622
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4623
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4625
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4626
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4627
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4628
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4629
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4630
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4631
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4632
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4633
		{
			return unimplemented(sqllex, "drop server")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4634
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4635
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4636
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4639
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4640
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4641
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4642
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4643
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4645
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4646
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4647
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4648
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4649
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4667
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4671
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 627:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4675
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4681
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4685
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4694
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4698
		{
			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4712
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4723
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4735
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4741
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				UsingExtremes: true,
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Where: tree.NewWhere(tree.AstWhere, sqlDollar[1].union.expr()),
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4762
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4771
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4789
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4799
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4820
		{
		}
	case 647:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4822
		{
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4826
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4830
		{
			sqlVAL.str = ""
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4836
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4840
		{

			sqlVAL.union.val = nil
		}
	case 652:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4855
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Using:     sqlDollar[5].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4866
		{
			return helpWith(sqllex, "DELETE")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4870
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4884
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4889
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeSequences}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4900
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4911
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4912
		{
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			return helpWith(sqllex, "DROP")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4916
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4917
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4918
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4919
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4920
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4921
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4922
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4923
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4931
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4948
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4956
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4964
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4971
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4983
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4986
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4994
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5003
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5011
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5019
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5027
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5034
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5041
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5049
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5056
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5060
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5066
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5070
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5079
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5087
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5094
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5102
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5106
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5109
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5113
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5118
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5140
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5145
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5147
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5152
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5156
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5179
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5186
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5188
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5196
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5204
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5212
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5220
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5231
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5239
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5242
		{
			return helpWith(sqllex, "DELETE")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5244
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5245
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5246
		{
			return helpWith(sqllex, "INSERT")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5251
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5259
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5260
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5261
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5266
		{
			return helpWith(sqllex, "DELETE")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5267
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5268
		{
			return helpWith(sqllex, "INSERT")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5270
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5274
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5275
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5293
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5299
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5303
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5307
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5328
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5334
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5360
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5367
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5375
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5381
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5389
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5402
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5410
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5418
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 800:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5443
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5451
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 805:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5459
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5469
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5473
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5477
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5484
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5512
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5524
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5535
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5539
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5551
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5563
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5575
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5585
		{
			return helpWith(sqllex, "GRANT")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5633
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5655
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5691
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5703
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[11].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5715
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5725
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5736
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5739
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5745
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5749
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5777
		{
			return helpWith(sqllex, "RESET")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5778
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5786
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5790
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5797
		{
			return helpWith(sqllex, "RESET")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5808
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5822
		{
			return helpWith(sqllex, "USE")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5826
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5827
		{
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5828
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5832
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5833
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5834
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5835
		{
			return helpWith(sqllex, "USE")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5851
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5869
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5895
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 879:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5909
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5913
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5919
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5927
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5931
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5935
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5946
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5949
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5959
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5967
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5974
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5975
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6005
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6011
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6020
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6022
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6025
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6028
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6042
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6047
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6067
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6072
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6088
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6092
		{
			return unimplemented(sqllex, "set from current")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6096
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6101
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6110
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6115
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6119
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6131
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6136
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6195
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6199
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6203
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6207
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6211
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = tree.Low
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = tree.Normal
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = tree.High
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6244
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6253
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6270
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6271
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6272
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6273
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6274
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6275
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6276
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6277
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6278
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6279
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6281
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6282
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6283
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6284
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6285
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6286
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6288
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6289
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6290
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6292
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6294
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6295
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6296
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6297
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6298
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6299
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6300
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6301
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6302
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6303
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6304
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6305
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6306
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6307
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6308
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6309
		{
			return helpWith(sqllex, "SHOW")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6312
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6321
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6327
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6332
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6352
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6356
		{
			sqlVAL.union.val = true
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = false
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6370
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6374
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = true
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = false
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = false
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6417
		{
			return helpWith(sqllex, "FETCH")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6430
		{
			return helpWith(sqllex, "MOVE")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6448
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6469
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6497
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6504
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = int64(1)
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = int64(1)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = int64(1)
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6524
		{
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6525
		{
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6528
		{
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6529
		{
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6533
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6538
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6543
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6548
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6553
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6564
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6565
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6580
		{
			sqlVAL.str = "client_encoding"
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6585
		{
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6587
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.str = "timezone"
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6593
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6597
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6601
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6621
		{
			sqlVAL.union.val = &tree.ShowTableStats{
				Table:   sqlDollar[5].union.unresolvedObjectName(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6628
		{

			sqlVAL.union.val = &tree.ShowTableStats{
				Table:     sqlDollar[7].union.unresolvedObjectName(),
				UsingJSON: true,
				Options:   sqlDollar[8].union.kvOptions(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6636
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6649
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6657
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6665
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6671
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6681
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6698
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6714
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6722
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupValidateDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6729
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6737
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = tree.BackupValidateDetails
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6761
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6765
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6768
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6770
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6773
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6775
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6782
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6786
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6788
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6802
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6813
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6836
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6847
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6859
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6865
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6876
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6895
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6905
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6918
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6927
		{
			sqlVAL.union.val = &tree.ShowGrants{
				Targets:  &tree.GrantTargetList{System: true},
				Grantees: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6933
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6941
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6944
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6946
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6950
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6957
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6966
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6974
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6977
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6979
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6982
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6993
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6998
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = true
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = true
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = false
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7023
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7027
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7034
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7035
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7036
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7038
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7042
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7050
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7053
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7055
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7071
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7079
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7080
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7090
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7096
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7104
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7112
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7116
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7126
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7134
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7145
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7148
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7150
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7153
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7155
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7159
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7162
		{
			sqlVAL.union.val = true
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7163
		{
			sqlVAL.union.val = false
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7171
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7174
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7179
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7207
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7210
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7217
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			}}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			}}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7235
		{
			sqlVAL.union.val = &tree.ShowFunctions{}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7238
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7248
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7250
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7253
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7256
		{
			sqlVAL.union.val = true
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = false
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7264
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7268
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7271
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7285
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7292
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7296
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7300
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7310
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7321
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7335
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7343
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7348
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7353
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7357
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7371
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7388
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7393
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7398
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7403
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7408
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeIndexes, Name: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7413
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSecondaryIndexes, Name: sqlDollar[6].union.unresolvedObjectName()}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7418
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7438
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7451
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7456
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7465
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7468
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{ConnectionLabel: sqlDollar[5].union.expr()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7473
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7481
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7484
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7492
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7495
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7505
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7513
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7521
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7542
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7547
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7552
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7556
		{
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7565
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7579
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7588
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7597
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7600
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7629
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7641
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7654
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7666
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7676
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7689
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7820
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7824
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7871
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7884
		{
			sqlVAL.union.val = tree.GrantTargetList{ExternalConnections: sqlDollar[3].union.nameList()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = tree.GrantTargetList{Functions: sqlDollar[2].union.functionObjs()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7906
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7916
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7921
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7927
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7935
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7957
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7986
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7987
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7988
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7989
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7995
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7996
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7997
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7998
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8009
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8037
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8050
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8082
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8090
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8098
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8101
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8137
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8148
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8165
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8201
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8216
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8244
		{

			sqlVAL.union.val = nil
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8250
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.str = ""
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8260
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = nil
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8270
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8283
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8287
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8297
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8301
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8313
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8323
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8336
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8350
		{
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8351
		{
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8352
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8377
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8385
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8401
		{
			sqlVAL.union.val = sqlDollar[1].union.colTableDef()
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8407
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8420
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8433
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8444
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8447
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8449
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8450
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8451
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.str = ""
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8497
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8525
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8532
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8539
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8545
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8589
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8600
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8604
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8614
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8684
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8696
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8731
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8735
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8741
		{

			sqlVAL.union.val = true
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = false
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8751
		{
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8755
		{
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8758
		{
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             "",
				Columns:          sqlDollar[3].union.idxElems(),
				Sharded:          sqlDollar[5].union.shardedIndexDef(),
				Storing:          sqlDollar[6].union.nameList(),
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
				NotVisible:       sqlDollar[11].union.bool(),
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8788
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
					NotVisible:       sqlDollar[12].union.bool(),
				},
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             "",
				Columns:          sqlDollar[4].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[6].union.partitionByIndex(),
				StorageParams:    sqlDollar[7].union.storageParams(),
				Predicate:        sqlDollar[8].union.expr(),
				NotVisible:       sqlDollar[9].union.bool(),
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8846
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8852
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8883
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8894
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8911
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8921
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8936
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9004
		{
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9005
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9006
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9007
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9008
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9009
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9091
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9176
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9185
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9193
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9201
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9204
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9222
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9232
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9234
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9236
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9238
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9240
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9241
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9244
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9246
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9249
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9251
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9265
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9269
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9296
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9330
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.str = ""
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9350
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = true
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9373
		{

			sqlVAL.union.val = true
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = false
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9390
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9404
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9416
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9428
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9439
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9450
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = false
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = true
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = true
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9468
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = nil
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9597
		{
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9598
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9623
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9625
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9627
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9629
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9631
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9633
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9647
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:9668
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[17].union.bool(),
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:9686
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[20].union.bool(),
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9705
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[16].union.bool(),
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9722
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[19].union.bool(),
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9739
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9743
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = false
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9764
		{
			sqlVAL.union.val = true
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = false
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = true
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = false
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9797
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9803
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9809
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9817
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.str = ""
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.str = ""
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9852
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = true
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = false
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = false
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9872
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9878
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9884
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9890
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9898
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9936
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9943
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10115
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10121
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10133
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10139
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10153
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10159
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10218
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = true
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = false
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = privilege.Functions
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10282
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.str = ""
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10317
		{
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10318
		{
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10321
		{
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10322
		{
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10333
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10351
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10360
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10381
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10389
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10410
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10418
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10429
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10433
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10434
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10435
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10454
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10467
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10476
		{
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10477
		{
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10478
		{
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10495
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10501
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10502
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10509
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10516
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10520
		{
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10521
		{
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10549
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10562
		{
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10564
		{
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10568
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10581
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[15].str),
			}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				SecondaryRegion: tree.Name(sqlDollar[17].str),
			}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10660
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.str = ""
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10677
		{
			sqlVAL.str = ""
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10695
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10700
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10711
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10717
		{

		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10724
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10732
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10747
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.str = ""
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10757
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10761
		{
			sqlVAL.str = ""
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.str = ""
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10777
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10781
		{
			sqlVAL.str = ""
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10787
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10812
		{
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10813
		{
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10842
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10860
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10864
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10873
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10922
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10967
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11005
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11017
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11021
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11037
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11052
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11058
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11073
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11172
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11201
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11217
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11252
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11253
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11254
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11315
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11359
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11375
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = true
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11400
		{
			sqlVAL.union.val = false
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11428
		{
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11429
		{
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = nil
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11442
		{
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11443
		{
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11447
		{
			sqlVAL.union.val = true
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11451
		{
			sqlVAL.union.val = false
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11455
		{
			sqlVAL.union.val = false
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11461
		{
			sqlVAL.union.val = true
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11472
		{
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11473
		{
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11476
		{
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11477
		{
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11491
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11497
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11501
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11518
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11530
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11535
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11551
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11555
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11561
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11570
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11582
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11586
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11594
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11608
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11612
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11620
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11627
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11649
		{
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11650
		{
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11653
		{
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11654
		{
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11680
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11681
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11687
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11688
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11689
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11690
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11720
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11722
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11734
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11737
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11739
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11745
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11749
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11759
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11764
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11769
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11785
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11790
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11806
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11818
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11837
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11879
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11889
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11899
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11907
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11916
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11920
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11924
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11935
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11965
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11988
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = tree.ColumnDefList{tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), tree.ColumnDef{Name: tree.Name(sqlDollar[3].str)})
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12019
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12023
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12029
		{
			sqlVAL.union.val = tree.ColumnDefList{sqlDollar[1].union.colDef()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12033
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), sqlDollar[3].union.colDef())
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12039
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12043
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str), Type: sqlDollar[2].union.typeReference()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = nil
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12049
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12054
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12064
		{
			sqlVAL.union.val = true
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12068
		{
			sqlVAL.union.val = false
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12088
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12092
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12100
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12104
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12114
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12118
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12125
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12135
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12155
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.str = tree.AstFull
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.str = tree.AstLeft
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.str = tree.AstRight
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.str = tree.AstInner
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12179
		{
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12180
		{
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12204
		{
			sqlVAL.str = tree.AstHash
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12208
		{
			sqlVAL.str = tree.AstMerge
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.str = tree.AstLookup
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.str = tree.AstInverted
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.str = ""
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12237
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12242
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12243
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12244
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12249
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12254
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12262
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: sqlDollar[2].union.unresolvedObjectName(), Star: false}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12266
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: nil, Star: true}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12280
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12284
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12290
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12296
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12306
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12316
		{
			sqlVAL.union.val = true
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12320
		{
			sqlVAL.union.val = false
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12326
		{
			sqlVAL.union.val = true
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12330
		{
			sqlVAL.union.val = false
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12336
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12343
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12355
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12368
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12376
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12377
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12387
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12394
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12395
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12397
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12405
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12406
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12418
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12425
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12434
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12474
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12479
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12484
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12485
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12488
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12489
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12491
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12492
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12493
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12494
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12495
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12496
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12497
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12498
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12499
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12500
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12501
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12502
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12503
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12504
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12505
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12506
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12507
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12508
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12509
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12510
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12511
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12512
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12513
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12514
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12515
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12516
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12517
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12518
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12519
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12522
		{
			sqlVAL.union.val = types.Geography
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12523
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12524
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12526
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12530
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12534
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12542
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12570
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12578
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12586
		{
			sqlVAL.union.val = nil
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12593
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12597
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12601
		{
			sqlVAL.union.val = types.Int2
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12605
		{
			sqlVAL.union.val = types.Int
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12609
		{
			sqlVAL.union.val = types.Float4
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12613
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12617
		{
			sqlVAL.union.val = types.Float
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12621
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12629
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12637
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12645
		{
			sqlVAL.union.val = types.Bool
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12651
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12664
		{
			sqlVAL.union.val = types.Float
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12670
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12676
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12684
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12688
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12692
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12698
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12710
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12716
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12720
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12724
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12728
		{
			sqlVAL.union.val = types.String
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12737
		{
			sqlVAL.union.val = true
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12738
		{
			sqlVAL.union.val = false
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12743
		{
			sqlVAL.union.val = types.Date
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12747
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12755
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12767
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12769
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12778
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12786
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12799
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12803
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12813
		{
			sqlVAL.union.val = true
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12814
		{
			sqlVAL.union.val = false
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12815
		{
			sqlVAL.union.val = false
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12819
		{
			sqlVAL.union.val = types.Interval
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12823
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12827
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12838
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12846
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12854
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12862
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12870
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12878
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12884
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12893
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12902
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12911
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12917
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12926
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12932
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12942
		{
			sqlVAL.union.val = nil
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12948
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12956
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12993
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12997
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13001
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13005
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13016
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13021
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13025
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13029
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13033
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13037
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13041
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13045
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13049
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13053
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13057
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13061
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13065
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13069
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13073
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13077
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13081
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13085
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13089
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13093
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13097
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13101
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13105
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13109
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13113
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13117
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13121
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13125
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13129
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13133
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13137
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13141
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13145
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13149
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13153
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13157
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13161
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13165
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13173
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13183
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13187
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13191
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13195
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13199
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13203
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13207
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13211
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13215
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13219
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13223
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13227
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13231
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13235
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13239
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13243
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13247
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13251
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13255
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13259
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13263
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13271
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13279
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13283
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13287
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13291
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13295
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13308
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13312
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13316
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13320
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13324
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13328
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13332
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13336
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13340
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13344
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13348
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13352
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13356
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13360
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13364
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13368
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13372
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13389
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13394
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13406
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13410
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13414
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13418
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13422
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13426
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13430
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13434
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13438
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13442
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13446
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13450
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13454
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13458
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13462
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13466
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13470
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13474
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13478
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13482
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13486
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13490
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13494
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13498
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13502
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13510
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13520
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13524
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13528
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13532
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13546
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13554
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13590
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13594
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13598
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13602
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13606
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13611
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13613
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13617
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13621
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13625
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13629
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13633
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13637
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13646
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13653
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13657
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13661
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13671
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13676
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13680
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13684
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13688
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13692
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13695
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13699
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13703
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13706
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13707
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13709
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13715
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13719
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13722
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13731
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							un, err := name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
							typ = &un
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13784
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13797
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13809
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13818
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13819
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13824
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13828
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13832
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13838
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13842
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13846
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13850
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13854
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13858
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13864
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13868
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13872
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13876
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13880
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13884
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13888
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13892
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13896
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13900
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13904
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13908
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13912
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13919
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13922
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13924
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13927
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13929
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13933
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13936
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13938
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13942
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13945
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13947
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13951
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13954
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13956
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13960
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13963
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13965
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13968
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13970
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13973
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13975
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13978
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13980
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13983
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13985
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13988
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13990
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13994
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13997
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13998
		{
			return unimplemented(sqllex, "treat")
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14000
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14004
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14008
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14019
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14021
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14024
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14030
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14034
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14040
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14044
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14051
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14055
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14061
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14065
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14071
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14079
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14083
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14087
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14094
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14114
		{
			sqlVAL.str = ""
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14120
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14124
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14130
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14138
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14146
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14154
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14160
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14173
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14201
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14205
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14209
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14213
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14220
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14229
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14233
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14237
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14241
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14246
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14259
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14263
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14270
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14282
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14286
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14290
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14306
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14307
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14308
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14309
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14310
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14311
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14312
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14313
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14314
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14315
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14316
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14317
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14319
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14320
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14321
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14322
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14323
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14324
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14325
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14326
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14327
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14328
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14329
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14330
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14331
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14332
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14333
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14334
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14335
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14336
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14337
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14338
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14339
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14340
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14341
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14346
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14362
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14369
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14370
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14371
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14372
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14395
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14399
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14405
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14409
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14413
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14424
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14428
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14434
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14438
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14445
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14451
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14455
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14461
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14465
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14471
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14475
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14481
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14485
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14491
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14495
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14518
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14522
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14526
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14532
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14539
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14543
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14560
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14564
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14568
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14572
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14576
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14582
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14588
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14594
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14598
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14602
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14608
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2576:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14620
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14627
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14631
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14637
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14643
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14647
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14654
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14660
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14664
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14671
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14677
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14681
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14686
		{
		}
	case 2591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14687
		{
		}
	case 2592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14691
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14695
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14701
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14710
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14714
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14718
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14730
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14734
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14740
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14744
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14763
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14771
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14794
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14803
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14807
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14811
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14815
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14821
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14825
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14840
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14844
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14856
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14860
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14869
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14880
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14889
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14897
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14914
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14999
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15007
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15011
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15017
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15021
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15027
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15033
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15040
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15067
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15074
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15078
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2666:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15082
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2668:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15096
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15100
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15104
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15117
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15122
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15130
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15148
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15161
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2680:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15168
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2688:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15193
		{
			sqlVAL.str = ""
		}
	case 2689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15199
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2690:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15203
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
