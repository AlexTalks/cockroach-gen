// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:78

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:724
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CURSOR = lex.CURSOR
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE = lex.FORCE
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NON_VOTERS = lex.NON_VOTERS
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCANS = lex.SCANS
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STREAM = lex.STREAM
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const VOTERS = lex.VOTERS
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12884

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1491,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	258, 395,
	-2, 0,
	-1, 74,
	240, 234,
	506, 234,
	-2, 0,
	-1, 87,
	228, 1251,
	242, 1251,
	258, 391,
	385, 391,
	395, 1021,
	431, 391,
	444, 1021,
	490, 1021,
	517, 391,
	543, 1021,
	-2, 0,
	-1, 93,
	132, 1491,
	235, 1491,
	528, 1491,
	529, 1491,
	-2, 0,
	-1, 109,
	150, 1462,
	169, 1462,
	182, 1462,
	238, 1462,
	271, 1462,
	337, 1462,
	347, 1462,
	523, 1462,
	-2, 1433,
	-1, 148,
	158, 878,
	257, 878,
	388, 845,
	449, 845,
	489, 845,
	509, 878,
	511, 845,
	-2, 0,
	-1, 151,
	4, 1493,
	21, 1493,
	22, 1493,
	23, 1493,
	24, 1493,
	25, 1493,
	26, 1493,
	27, 1493,
	29, 1493,
	30, 1493,
	36, 1493,
	41, 1493,
	42, 1493,
	44, 1493,
	45, 1493,
	46, 1493,
	47, 1493,
	48, 1493,
	49, 1493,
	50, 1493,
	51, 1493,
	53, 1493,
	54, 1493,
	55, 1493,
	56, 1493,
	58, 1493,
	59, 1493,
	60, 1493,
	61, 1493,
	62, 1493,
	63, 1493,
	64, 1493,
	68, 1493,
	69, 1493,
	70, 1493,
	71, 1493,
	73, 1493,
	74, 1493,
	75, 1493,
	79, 1493,
	80, 1493,
	81, 1493,
	82, 1493,
	83, 1493,
	84, 1493,
	85, 1493,
	88, 1493,
	89, 1493,
	90, 1493,
	91, 1493,
	92, 1493,
	94, 1493,
	96, 1493,
	97, 1493,
	98, 1493,
	99, 1493,
	100, 1493,
	101, 1493,
	103, 1493,
	104, 1493,
	105, 1493,
	107, 1493,
	108, 1493,
	109, 1493,
	117, 1493,
	118, 1493,
	119, 1493,
	120, 1493,
	121, 1493,
	123, 1493,
	124, 1493,
	125, 1493,
	127, 1493,
	128, 1493,
	129, 1493,
	131, 1493,
	132, 1493,
	133, 1493,
	135, 1493,
	136, 1493,
	137, 1493,
	140, 1493,
	141, 1493,
	142, 1493,
	144, 1493,
	145, 1493,
	147, 1493,
	148, 1493,
	149, 1493,
	151, 1493,
	152, 1493,
	153, 1493,
	154, 1493,
	155, 1493,
	156, 1493,
	157, 1493,
	158, 1493,
	159, 1493,
	160, 1493,
	161, 1493,
	162, 1493,
	163, 1493,
	164, 1493,
	165, 1493,
	166, 1493,
	168, 1493,
	174, 1493,
	175, 1493,
	176, 1493,
	177, 1493,
	181, 1493,
	183, 1493,
	184, 1493,
	188, 1493,
	189, 1493,
	190, 1493,
	191, 1493,
	192, 1493,
	193, 1493,
	194, 1493,
	195, 1493,
	196, 1493,
	197, 1493,
	198, 1493,
	199, 1493,
	200, 1493,
	202, 1493,
	203, 1493,
	205, 1493,
	206, 1493,
	208, 1493,
	209, 1493,
	210, 1493,
	211, 1493,
	212, 1493,
	213, 1493,
	214, 1493,
	215, 1493,
	216, 1493,
	218, 1493,
	219, 1493,
	221, 1493,
	222, 1493,
	223, 1493,
	224, 1493,
	228, 1493,
	229, 1493,
	230, 1493,
	231, 1493,
	232, 1493,
	235, 1493,
	236, 1493,
	237, 1493,
	239, 1493,
	241, 1493,
	242, 1493,
	244, 1493,
	246, 1493,
	247, 1493,
	248, 1493,
	250, 1493,
	254, 1493,
	255, 1493,
	256, 1493,
	257, 1493,
	258, 1493,
	259, 1493,
	261, 1493,
	262, 1493,
	263, 1493,
	265, 1493,
	266, 1493,
	268, 1493,
	269, 1493,
	272, 1493,
	276, 1493,
	277, 1493,
	278, 1493,
	281, 1493,
	282, 1493,
	283, 1493,
	284, 1493,
	286, 1493,
	287, 1493,
	288, 1493,
	289, 1493,
	290, 1493,
	291, 1493,
	292, 1493,
	293, 1493,
	294, 1493,
	295, 1493,
	296, 1493,
	297, 1493,
	298, 1493,
	299, 1493,
	300, 1493,
	301, 1493,
	302, 1493,
	303, 1493,
	304, 1493,
	305, 1493,
	306, 1493,
	307, 1493,
	309, 1493,
	311, 1493,
	312, 1493,
	313, 1493,
	314, 1493,
	315, 1493,
	316, 1493,
	317, 1493,
	318, 1493,
	319, 1493,
	320, 1493,
	321, 1493,
	322, 1493,
	324, 1493,
	325, 1493,
	327, 1493,
	329, 1493,
	330, 1493,
	332, 1493,
	333, 1493,
	334, 1493,
	335, 1493,
	336, 1493,
	339, 1493,
	342, 1493,
	343, 1493,
	344, 1493,
	345, 1493,
	348, 1493,
	349, 1493,
	350, 1493,
	352, 1493,
	354, 1493,
	355, 1493,
	356, 1493,
	357, 1493,
	358, 1493,
	359, 1493,
	360, 1493,
	361, 1493,
	362, 1493,
	363, 1493,
	364, 1493,
	365, 1493,
	367, 1493,
	368, 1493,
	369, 1493,
	370, 1493,
	371, 1493,
	372, 1493,
	373, 1493,
	374, 1493,
	375, 1493,
	376, 1493,
	377, 1493,
	378, 1493,
	379, 1493,
	380, 1493,
	381, 1493,
	383, 1493,
	384, 1493,
	386, 1493,
	387, 1493,
	388, 1493,
	389, 1493,
	390, 1493,
	391, 1493,
	392, 1493,
	393, 1493,
	394, 1493,
	395, 1493,
	396, 1493,
	397, 1493,
	399, 1493,
	401, 1493,
	402, 1493,
	403, 1493,
	408, 1493,
	410, 1493,
	411, 1493,
	412, 1493,
	413, 1493,
	414, 1493,
	415, 1493,
	416, 1493,
	417, 1493,
	418, 1493,
	420, 1493,
	421, 1493,
	422, 1493,
	424, 1493,
	425, 1493,
	426, 1493,
	427, 1493,
	428, 1493,
	429, 1493,
	431, 1493,
	432, 1493,
	433, 1493,
	434, 1493,
	435, 1493,
	436, 1493,
	437, 1493,
	438, 1493,
	439, 1493,
	440, 1493,
	441, 1493,
	442, 1493,
	444, 1493,
	445, 1493,
	446, 1493,
	447, 1493,
	448, 1493,
	449, 1493,
	451, 1493,
	452, 1493,
	453, 1493,
	454, 1493,
	455, 1493,
	456, 1493,
	458, 1493,
	459, 1493,
	460, 1493,
	461, 1493,
	462, 1493,
	463, 1493,
	464, 1493,
	466, 1493,
	468, 1493,
	469, 1493,
	470, 1493,
	471, 1493,
	472, 1493,
	473, 1493,
	474, 1493,
	475, 1493,
	476, 1493,
	477, 1493,
	478, 1493,
	479, 1493,
	480, 1493,
	481, 1493,
	482, 1493,
	483, 1493,
	485, 1493,
	486, 1493,
	488, 1493,
	489, 1493,
	491, 1493,
	492, 1493,
	493, 1493,
	494, 1493,
	495, 1493,
	496, 1493,
	497, 1493,
	498, 1493,
	499, 1493,
	501, 1493,
	502, 1493,
	503, 1493,
	504, 1493,
	505, 1493,
	507, 1493,
	509, 1493,
	510, 1493,
	511, 1493,
	512, 1493,
	513, 1493,
	514, 1493,
	516, 1493,
	517, 1493,
	518, 1493,
	519, 1493,
	521, 1493,
	522, 1493,
	525, 1493,
	526, 1493,
	527, 1493,
	528, 1493,
	529, 1493,
	530, 1493,
	531, 1493,
	533, 1493,
	536, 1493,
	537, 1493,
	538, 1493,
	539, 1493,
	540, 1493,
	541, 1493,
	543, 1493,
	544, 1493,
	545, 1493,
	546, 1493,
	548, 1493,
	553, 1493,
	554, 1493,
	555, 1493,
	556, 1493,
	557, 1493,
	558, 1493,
	-2, 0,
	-1, 152,
	1, 1348,
	130, 1348,
	246, 1348,
	326, 1348,
	383, 1348,
	392, 1348,
	562, 1348,
	586, 1348,
	-2, 0,
	-1, 154,
	1, 1348,
	586, 1348,
	-2, 0,
	-1, 155,
	1, 1348,
	586, 1348,
	-2, 0,
	-1, 156,
	1, 1348,
	506, 1348,
	586, 1348,
	-2, 0,
	-1, 184,
	150, 1461,
	169, 1461,
	182, 1461,
	238, 1461,
	271, 1461,
	337, 1461,
	347, 1461,
	523, 1461,
	-2, 1436,
	-1, 230,
	4, 1500,
	5, 1500,
	6, 1500,
	7, 1500,
	8, 1500,
	9, 1500,
	10, 1500,
	21, 1500,
	22, 1500,
	23, 1500,
	24, 1500,
	25, 1500,
	26, 1500,
	27, 1500,
	29, 1500,
	30, 1500,
	36, 1500,
	37, 1500,
	41, 1500,
	42, 1500,
	43, 1500,
	44, 1500,
	45, 1500,
	46, 1500,
	47, 1500,
	48, 1500,
	49, 1500,
	50, 1500,
	51, 1500,
	53, 1500,
	54, 1500,
	55, 1500,
	56, 1500,
	58, 1500,
	59, 1500,
	60, 1500,
	61, 1500,
	62, 1500,
	63, 1500,
	64, 1500,
	65, 1500,
	66, 1500,
	67, 1500,
	68, 1500,
	69, 1500,
	70, 1500,
	71, 1500,
	73, 1500,
	74, 1500,
	75, 1500,
	77, 1500,
	79, 1500,
	80, 1500,
	81, 1500,
	82, 1500,
	83, 1500,
	84, 1500,
	85, 1500,
	88, 1500,
	89, 1500,
	90, 1500,
	91, 1500,
	92, 1500,
	94, 1500,
	96, 1500,
	97, 1500,
	98, 1500,
	99, 1500,
	100, 1500,
	101, 1500,
	103, 1500,
	104, 1500,
	105, 1500,
	106, 1500,
	107, 1500,
	108, 1500,
	109, 1500,
	110, 1500,
	111, 1500,
	112, 1500,
	113, 1500,
	114, 1500,
	115, 1500,
	116, 1500,
	117, 1500,
	118, 1500,
	119, 1500,
	120, 1500,
	121, 1500,
	122, 1500,
	123, 1500,
	124, 1500,
	125, 1500,
	126, 1500,
	127, 1500,
	128, 1500,
	129, 1500,
	131, 1500,
	132, 1500,
	133, 1500,
	135, 1500,
	136, 1500,
	137, 1500,
	140, 1500,
	141, 1500,
	142, 1500,
	144, 1500,
	145, 1500,
	147, 1500,
	148, 1500,
	149, 1500,
	151, 1500,
	152, 1500,
	153, 1500,
	154, 1500,
	155, 1500,
	156, 1500,
	157, 1500,
	158, 1500,
	159, 1500,
	160, 1500,
	161, 1500,
	162, 1500,
	163, 1500,
	164, 1500,
	165, 1500,
	166, 1500,
	167, 1500,
	168, 1500,
	174, 1500,
	175, 1500,
	176, 1500,
	177, 1500,
	181, 1500,
	183, 1500,
	184, 1500,
	187, 1500,
	188, 1500,
	189, 1500,
	190, 1500,
	191, 1500,
	192, 1500,
	193, 1500,
	194, 1500,
	195, 1500,
	196, 1500,
	197, 1500,
	198, 1500,
	199, 1500,
	200, 1500,
	202, 1500,
	203, 1500,
	205, 1500,
	206, 1500,
	208, 1500,
	209, 1500,
	210, 1500,
	211, 1500,
	212, 1500,
	213, 1500,
	214, 1500,
	215, 1500,
	216, 1500,
	217, 1500,
	218, 1500,
	219, 1500,
	221, 1500,
	222, 1500,
	223, 1500,
	224, 1500,
	228, 1500,
	229, 1500,
	230, 1500,
	231, 1500,
	232, 1500,
	234, 1500,
	235, 1500,
	236, 1500,
	237, 1500,
	239, 1500,
	241, 1500,
	242, 1500,
	243, 1500,
	244, 1500,
	245, 1500,
	246, 1500,
	247, 1500,
	248, 1500,
	249, 1500,
	250, 1500,
	254, 1500,
	255, 1500,
	256, 1500,
	257, 1500,
	258, 1500,
	259, 1500,
	261, 1500,
	262, 1500,
	263, 1500,
	265, 1500,
	266, 1500,
	267, 1500,
	268, 1500,
	269, 1500,
	270, 1500,
	272, 1500,
	276, 1500,
	277, 1500,
	278, 1500,
	279, 1500,
	280, 1500,
	281, 1500,
	282, 1500,
	283, 1500,
	284, 1500,
	286, 1500,
	287, 1500,
	288, 1500,
	289, 1500,
	290, 1500,
	291, 1500,
	292, 1500,
	293, 1500,
	294, 1500,
	295, 1500,
	296, 1500,
	297, 1500,
	298, 1500,
	299, 1500,
	300, 1500,
	301, 1500,
	302, 1500,
	303, 1500,
	304, 1500,
	305, 1500,
	306, 1500,
	307, 1500,
	309, 1500,
	310, 1500,
	311, 1500,
	312, 1500,
	313, 1500,
	314, 1500,
	315, 1500,
	316, 1500,
	317, 1500,
	318, 1500,
	319, 1500,
	320, 1500,
	321, 1500,
	322, 1500,
	323, 1500,
	324, 1500,
	325, 1500,
	326, 1500,
	327, 1500,
	328, 1500,
	329, 1500,
	330, 1500,
	331, 1500,
	332, 1500,
	333, 1500,
	334, 1500,
	335, 1500,
	336, 1500,
	339, 1500,
	343, 1500,
	344, 1500,
	345, 1500,
	348, 1500,
	349, 1500,
	350, 1500,
	351, 1500,
	352, 1500,
	353, 1500,
	354, 1500,
	355, 1500,
	356, 1500,
	357, 1500,
	358, 1500,
	359, 1500,
	360, 1500,
	361, 1500,
	362, 1500,
	363, 1500,
	364, 1500,
	365, 1500,
	367, 1500,
	368, 1500,
	369, 1500,
	370, 1500,
	371, 1500,
	372, 1500,
	373, 1500,
	374, 1500,
	375, 1500,
	376, 1500,
	377, 1500,
	378, 1500,
	379, 1500,
	380, 1500,
	381, 1500,
	383, 1500,
	384, 1500,
	386, 1500,
	387, 1500,
	388, 1500,
	389, 1500,
	390, 1500,
	391, 1500,
	392, 1500,
	393, 1500,
	394, 1500,
	395, 1500,
	396, 1500,
	397, 1500,
	399, 1500,
	401, 1500,
	402, 1500,
	403, 1500,
	408, 1500,
	410, 1500,
	411, 1500,
	412, 1500,
	413, 1500,
	414, 1500,
	415, 1500,
	416, 1500,
	417, 1500,
	418, 1500,
	420, 1500,
	421, 1500,
	422, 1500,
	423, 1500,
	424, 1500,
	425, 1500,
	426, 1500,
	427, 1500,
	428, 1500,
	429, 1500,
	431, 1500,
	432, 1500,
	433, 1500,
	434, 1500,
	435, 1500,
	436, 1500,
	437, 1500,
	438, 1500,
	439, 1500,
	440, 1500,
	441, 1500,
	442, 1500,
	444, 1500,
	445, 1500,
	446, 1500,
	447, 1500,
	448, 1500,
	449, 1500,
	450, 1500,
	451, 1500,
	452, 1500,
	453, 1500,
	454, 1500,
	455, 1500,
	456, 1500,
	457, 1500,
	458, 1500,
	459, 1500,
	460, 1500,
	461, 1500,
	462, 1500,
	463, 1500,
	464, 1500,
	466, 1500,
	468, 1500,
	469, 1500,
	470, 1500,
	471, 1500,
	472, 1500,
	473, 1500,
	474, 1500,
	475, 1500,
	476, 1500,
	477, 1500,
	478, 1500,
	479, 1500,
	480, 1500,
	481, 1500,
	482, 1500,
	483, 1500,
	485, 1500,
	486, 1500,
	487, 1500,
	488, 1500,
	489, 1500,
	491, 1500,
	492, 1500,
	493, 1500,
	494, 1500,
	495, 1500,
	496, 1500,
	497, 1500,
	498, 1500,
	499, 1500,
	501, 1500,
	502, 1500,
	503, 1500,
	504, 1500,
	505, 1500,
	507, 1500,
	509, 1500,
	510, 1500,
	511, 1500,
	512, 1500,
	513, 1500,
	514, 1500,
	515, 1500,
	516, 1500,
	517, 1500,
	518, 1500,
	519, 1500,
	521, 1500,
	522, 1500,
	524, 1500,
	525, 1500,
	526, 1500,
	527, 1500,
	528, 1500,
	529, 1500,
	530, 1500,
	531, 1500,
	532, 1500,
	533, 1500,
	536, 1500,
	537, 1500,
	538, 1500,
	539, 1500,
	540, 1500,
	541, 1500,
	543, 1500,
	544, 1500,
	545, 1500,
	546, 1500,
	548, 1500,
	553, 1500,
	554, 1500,
	555, 1500,
	556, 1500,
	557, 1500,
	558, 1500,
	559, 1500,
	567, 1500,
	574, 1500,
	575, 1500,
	576, 1500,
	583, 1500,
	587, 1500,
	-2, 0,
	-1, 727,
	4, 1249,
	21, 1249,
	22, 1249,
	23, 1249,
	24, 1249,
	25, 1249,
	26, 1249,
	27, 1249,
	29, 1249,
	30, 1249,
	36, 1249,
	41, 1249,
	42, 1249,
	44, 1249,
	45, 1249,
	46, 1249,
	47, 1249,
	48, 1249,
	49, 1249,
	50, 1249,
	51, 1249,
	53, 1249,
	54, 1249,
	55, 1249,
	56, 1249,
	58, 1249,
	59, 1249,
	60, 1249,
	61, 1249,
	62, 1249,
	63, 1249,
	64, 1249,
	68, 1249,
	69, 1249,
	70, 1249,
	71, 1249,
	73, 1249,
	74, 1249,
	75, 1249,
	79, 1249,
	80, 1249,
	81, 1249,
	82, 1249,
	83, 1249,
	84, 1249,
	85, 1249,
	88, 1249,
	89, 1249,
	90, 1249,
	91, 1249,
	92, 1249,
	94, 1249,
	96, 1249,
	97, 1249,
	98, 1249,
	99, 1249,
	100, 1249,
	101, 1249,
	103, 1249,
	104, 1249,
	105, 1249,
	107, 1249,
	108, 1249,
	109, 1249,
	117, 1249,
	118, 1249,
	119, 1249,
	120, 1249,
	121, 1249,
	123, 1249,
	124, 1249,
	125, 1249,
	127, 1249,
	128, 1249,
	129, 1249,
	131, 1249,
	132, 1249,
	133, 1249,
	135, 1249,
	136, 1249,
	137, 1249,
	140, 1249,
	141, 1249,
	142, 1249,
	144, 1249,
	145, 1249,
	147, 1249,
	148, 1249,
	149, 1249,
	151, 1249,
	152, 1249,
	153, 1249,
	154, 1249,
	155, 1249,
	156, 1249,
	157, 1249,
	158, 1249,
	159, 1249,
	160, 1249,
	161, 1249,
	162, 1249,
	163, 1249,
	164, 1249,
	165, 1249,
	166, 1249,
	168, 1249,
	174, 1249,
	175, 1249,
	176, 1249,
	177, 1249,
	181, 1249,
	183, 1249,
	184, 1249,
	188, 1249,
	189, 1249,
	190, 1249,
	191, 1249,
	192, 1249,
	193, 1249,
	194, 1249,
	195, 1249,
	196, 1249,
	197, 1249,
	198, 1249,
	199, 1249,
	200, 1249,
	202, 1249,
	203, 1249,
	205, 1249,
	206, 1249,
	208, 1249,
	209, 1249,
	210, 1249,
	211, 1249,
	212, 1249,
	213, 1249,
	214, 1249,
	215, 1249,
	216, 1249,
	218, 1249,
	219, 1249,
	221, 1249,
	222, 1249,
	223, 1249,
	224, 1249,
	228, 1249,
	229, 1249,
	230, 1249,
	231, 1249,
	232, 1249,
	235, 1249,
	236, 1249,
	237, 1249,
	239, 1249,
	241, 1249,
	242, 1249,
	244, 1249,
	246, 1249,
	247, 1249,
	248, 1249,
	250, 1249,
	254, 1249,
	255, 1249,
	256, 1249,
	257, 1249,
	258, 1249,
	259, 1249,
	261, 1249,
	262, 1249,
	263, 1249,
	265, 1249,
	266, 1249,
	268, 1249,
	269, 1249,
	272, 1249,
	276, 1249,
	277, 1249,
	278, 1249,
	281, 1249,
	282, 1249,
	283, 1249,
	284, 1249,
	286, 1249,
	287, 1249,
	288, 1249,
	289, 1249,
	290, 1249,
	291, 1249,
	292, 1249,
	293, 1249,
	294, 1249,
	295, 1249,
	296, 1249,
	297, 1249,
	298, 1249,
	299, 1249,
	300, 1249,
	301, 1249,
	302, 1249,
	303, 1249,
	304, 1249,
	305, 1249,
	306, 1249,
	307, 1249,
	309, 1249,
	311, 1249,
	312, 1249,
	313, 1249,
	314, 1249,
	315, 1249,
	316, 1249,
	317, 1249,
	318, 1249,
	319, 1249,
	320, 1249,
	321, 1249,
	322, 1249,
	324, 1249,
	325, 1249,
	327, 1249,
	329, 1249,
	330, 1249,
	332, 1249,
	333, 1249,
	334, 1249,
	335, 1249,
	336, 1249,
	339, 1249,
	343, 1249,
	344, 1249,
	345, 1249,
	348, 1249,
	349, 1249,
	350, 1249,
	352, 1249,
	354, 1249,
	355, 1249,
	356, 1249,
	357, 1249,
	358, 1249,
	359, 1249,
	360, 1249,
	361, 1249,
	362, 1249,
	363, 1249,
	364, 1249,
	365, 1249,
	367, 1249,
	368, 1249,
	369, 1249,
	370, 1249,
	371, 1249,
	372, 1249,
	373, 1249,
	374, 1249,
	375, 1249,
	376, 1249,
	377, 1249,
	378, 1249,
	379, 1249,
	380, 1249,
	381, 1249,
	383, 1249,
	384, 1249,
	386, 1249,
	387, 1249,
	388, 1249,
	389, 1249,
	390, 1249,
	391, 1249,
	392, 1249,
	393, 1249,
	394, 1249,
	395, 1249,
	396, 1249,
	397, 1249,
	399, 1249,
	401, 1249,
	402, 1249,
	403, 1249,
	408, 1249,
	410, 1249,
	411, 1249,
	412, 1249,
	413, 1249,
	414, 1249,
	415, 1249,
	416, 1249,
	417, 1249,
	418, 1249,
	420, 1249,
	421, 1249,
	422, 1249,
	424, 1249,
	425, 1249,
	426, 1249,
	427, 1249,
	428, 1249,
	429, 1249,
	431, 1249,
	432, 1249,
	433, 1249,
	434, 1249,
	435, 1249,
	436, 1249,
	437, 1249,
	438, 1249,
	439, 1249,
	440, 1249,
	441, 1249,
	442, 1249,
	444, 1249,
	445, 1249,
	446, 1249,
	447, 1249,
	448, 1249,
	449, 1249,
	451, 1249,
	452, 1249,
	453, 1249,
	454, 1249,
	455, 1249,
	456, 1249,
	458, 1249,
	459, 1249,
	460, 1249,
	461, 1249,
	462, 1249,
	463, 1249,
	464, 1249,
	466, 1249,
	468, 1249,
	469, 1249,
	470, 1249,
	471, 1249,
	472, 1249,
	473, 1249,
	474, 1249,
	475, 1249,
	476, 1249,
	477, 1249,
	478, 1249,
	479, 1249,
	480, 1249,
	481, 1249,
	482, 1249,
	483, 1249,
	485, 1249,
	486, 1249,
	488, 1249,
	489, 1249,
	491, 1249,
	492, 1249,
	493, 1249,
	494, 1249,
	495, 1249,
	496, 1249,
	497, 1249,
	498, 1249,
	499, 1249,
	501, 1249,
	502, 1249,
	503, 1249,
	504, 1249,
	505, 1249,
	507, 1249,
	509, 1249,
	510, 1249,
	511, 1249,
	512, 1249,
	513, 1249,
	514, 1249,
	516, 1249,
	517, 1249,
	518, 1249,
	519, 1249,
	521, 1249,
	522, 1249,
	525, 1249,
	526, 1249,
	527, 1249,
	528, 1249,
	529, 1249,
	530, 1249,
	531, 1249,
	533, 1249,
	536, 1249,
	537, 1249,
	538, 1249,
	539, 1249,
	540, 1249,
	541, 1249,
	543, 1249,
	544, 1249,
	545, 1249,
	546, 1249,
	548, 1249,
	553, 1249,
	554, 1249,
	555, 1249,
	556, 1249,
	557, 1249,
	558, 1249,
	-2, 0,
	-1, 746,
	186, 2257,
	506, 2257,
	566, 2257,
	585, 2257,
	-2, 0,
	-1, 747,
	186, 2362,
	506, 2362,
	566, 2362,
	585, 2362,
	-2, 0,
	-1, 748,
	186, 2244,
	506, 2244,
	566, 2244,
	585, 2244,
	-2, 0,
	-1, 750,
	186, 2494,
	506, 2494,
	566, 2494,
	585, 2494,
	-2, 0,
	-1, 752,
	186, 2534,
	506, 2534,
	566, 2534,
	585, 2534,
	-2, 0,
	-1, 759,
	186, 2389,
	506, 2389,
	566, 2389,
	585, 2389,
	-2, 679,
	-1, 792,
	585, 2193,
	588, 2193,
	-2, 952,
	-1, 793,
	585, 2195,
	588, 2195,
	-2, 953,
	-1, 794,
	585, 2194,
	588, 2194,
	-2, 954,
	-1, 795,
	588, 2120,
	-2, 955,
	-1, 818,
	182, 248,
	-2, 0,
	-1, 842,
	43, 2167,
	-2, 0,
	-1, 843,
	543, 1227,
	-2, 1022,
	-1, 859,
	4, 1629,
	21, 1629,
	22, 1629,
	23, 1629,
	24, 1629,
	25, 1629,
	26, 1629,
	27, 1629,
	29, 1629,
	30, 1629,
	36, 1629,
	41, 1629,
	42, 1629,
	44, 1629,
	45, 1629,
	46, 1629,
	47, 1629,
	48, 1629,
	49, 1629,
	50, 1629,
	51, 1629,
	53, 1629,
	54, 1629,
	55, 1629,
	56, 1629,
	58, 1629,
	59, 1629,
	60, 1629,
	61, 1629,
	62, 1629,
	63, 1629,
	64, 1629,
	68, 1629,
	69, 1629,
	70, 1629,
	71, 1629,
	73, 1629,
	74, 1629,
	75, 1629,
	79, 1629,
	80, 1629,
	81, 1629,
	82, 1629,
	83, 1629,
	84, 1629,
	85, 1629,
	88, 1629,
	89, 1629,
	90, 1629,
	91, 1629,
	92, 1629,
	94, 1629,
	96, 1629,
	97, 1629,
	98, 1629,
	99, 1629,
	100, 1629,
	101, 1629,
	103, 1629,
	104, 1629,
	105, 1629,
	107, 1629,
	108, 1629,
	109, 1629,
	117, 1629,
	118, 1629,
	119, 1629,
	120, 1629,
	121, 1629,
	123, 1629,
	124, 1629,
	125, 1629,
	127, 1629,
	128, 1629,
	129, 1629,
	131, 1629,
	132, 1629,
	133, 1629,
	135, 1629,
	136, 1629,
	137, 1629,
	140, 1629,
	141, 1629,
	142, 1629,
	144, 1629,
	145, 1629,
	147, 1629,
	148, 1629,
	149, 1629,
	151, 1629,
	152, 1629,
	153, 1629,
	154, 1629,
	155, 1629,
	156, 1629,
	157, 1629,
	158, 1629,
	159, 1629,
	160, 1629,
	161, 1629,
	162, 1629,
	163, 1629,
	164, 1629,
	165, 1629,
	166, 1629,
	168, 1629,
	174, 1629,
	175, 1629,
	176, 1629,
	177, 1629,
	181, 1629,
	183, 1629,
	184, 1629,
	188, 1629,
	189, 1629,
	190, 1629,
	191, 1629,
	192, 1629,
	193, 1629,
	194, 1629,
	195, 1629,
	196, 1629,
	197, 1629,
	198, 1629,
	199, 1629,
	200, 1629,
	202, 1629,
	203, 1629,
	205, 1629,
	206, 1629,
	208, 1629,
	209, 1629,
	210, 1629,
	211, 1629,
	212, 1629,
	213, 1629,
	214, 1629,
	215, 1629,
	216, 1629,
	218, 1629,
	219, 1629,
	221, 1629,
	222, 1629,
	223, 1629,
	224, 1629,
	228, 1629,
	229, 1629,
	230, 1629,
	231, 1629,
	232, 1629,
	235, 1629,
	236, 1629,
	237, 1629,
	239, 1629,
	241, 1629,
	242, 1629,
	244, 1629,
	246, 1629,
	247, 1629,
	248, 1629,
	250, 1629,
	254, 1629,
	255, 1629,
	256, 1629,
	257, 1629,
	258, 1629,
	259, 1629,
	261, 1629,
	262, 1629,
	263, 1629,
	265, 1629,
	266, 1629,
	268, 1629,
	269, 1629,
	272, 1629,
	276, 1629,
	277, 1629,
	278, 1629,
	281, 1629,
	282, 1629,
	283, 1629,
	284, 1629,
	286, 1629,
	287, 1629,
	288, 1629,
	289, 1629,
	290, 1629,
	291, 1629,
	292, 1629,
	293, 1629,
	294, 1629,
	295, 1629,
	296, 1629,
	297, 1629,
	298, 1629,
	299, 1629,
	300, 1629,
	301, 1629,
	302, 1629,
	303, 1629,
	304, 1629,
	305, 1629,
	306, 1629,
	307, 1629,
	309, 1629,
	311, 1629,
	312, 1629,
	313, 1629,
	314, 1629,
	315, 1629,
	316, 1629,
	317, 1629,
	318, 1629,
	319, 1629,
	320, 1629,
	321, 1629,
	322, 1629,
	324, 1629,
	325, 1629,
	327, 1629,
	329, 1629,
	330, 1629,
	332, 1629,
	333, 1629,
	334, 1629,
	335, 1629,
	336, 1629,
	339, 1629,
	343, 1629,
	344, 1629,
	345, 1629,
	348, 1629,
	349, 1629,
	350, 1629,
	352, 1629,
	354, 1629,
	355, 1629,
	356, 1629,
	357, 1629,
	358, 1629,
	359, 1629,
	360, 1629,
	361, 1629,
	362, 1629,
	363, 1629,
	364, 1629,
	365, 1629,
	367, 1629,
	368, 1629,
	369, 1629,
	370, 1629,
	371, 1629,
	372, 1629,
	373, 1629,
	374, 1629,
	375, 1629,
	376, 1629,
	377, 1629,
	378, 1629,
	379, 1629,
	380, 1629,
	381, 1629,
	383, 1629,
	384, 1629,
	386, 1629,
	387, 1629,
	388, 1629,
	389, 1629,
	390, 1629,
	391, 1629,
	392, 1629,
	393, 1629,
	394, 1629,
	395, 1629,
	396, 1629,
	397, 1629,
	399, 1629,
	401, 1629,
	402, 1629,
	403, 1629,
	408, 1629,
	410, 1629,
	411, 1629,
	412, 1629,
	413, 1629,
	414, 1629,
	415, 1629,
	416, 1629,
	417, 1629,
	418, 1629,
	420, 1629,
	421, 1629,
	422, 1629,
	424, 1629,
	425, 1629,
	426, 1629,
	427, 1629,
	428, 1629,
	429, 1629,
	431, 1629,
	432, 1629,
	433, 1629,
	434, 1629,
	435, 1629,
	436, 1629,
	437, 1629,
	438, 1629,
	439, 1629,
	440, 1629,
	441, 1629,
	442, 1629,
	444, 1629,
	445, 1629,
	446, 1629,
	447, 1629,
	448, 1629,
	449, 1629,
	451, 1629,
	452, 1629,
	453, 1629,
	454, 1629,
	455, 1629,
	456, 1629,
	458, 1629,
	459, 1629,
	460, 1629,
	461, 1629,
	462, 1629,
	463, 1629,
	464, 1629,
	466, 1629,
	468, 1629,
	469, 1629,
	470, 1629,
	471, 1629,
	472, 1629,
	473, 1629,
	474, 1629,
	475, 1629,
	476, 1629,
	477, 1629,
	478, 1629,
	479, 1629,
	480, 1629,
	481, 1629,
	482, 1629,
	483, 1629,
	485, 1629,
	486, 1629,
	488, 1629,
	489, 1629,
	491, 1629,
	492, 1629,
	493, 1629,
	494, 1629,
	495, 1629,
	496, 1629,
	497, 1629,
	498, 1629,
	499, 1629,
	501, 1629,
	502, 1629,
	503, 1629,
	504, 1629,
	505, 1629,
	507, 1629,
	509, 1629,
	510, 1629,
	511, 1629,
	512, 1629,
	513, 1629,
	514, 1629,
	516, 1629,
	517, 1629,
	518, 1629,
	519, 1629,
	521, 1629,
	522, 1629,
	525, 1629,
	526, 1629,
	527, 1629,
	528, 1629,
	529, 1629,
	530, 1629,
	531, 1629,
	533, 1629,
	536, 1629,
	537, 1629,
	538, 1629,
	539, 1629,
	540, 1629,
	541, 1629,
	543, 1629,
	544, 1629,
	545, 1629,
	546, 1629,
	548, 1629,
	553, 1629,
	554, 1629,
	555, 1629,
	556, 1629,
	557, 1629,
	558, 1629,
	-2, 0,
	-1, 867,
	258, 395,
	-2, 0,
	-1, 938,
	388, 846,
	449, 846,
	489, 846,
	511, 846,
	-2, 0,
	-1, 939,
	388, 845,
	449, 845,
	489, 845,
	511, 845,
	-2, 785,
	-1, 943,
	1, 892,
	582, 892,
	584, 892,
	586, 892,
	-2, 0,
	-1, 944,
	1, 820,
	582, 820,
	584, 820,
	586, 820,
	-2, 0,
	-1, 945,
	1, 824,
	582, 824,
	584, 824,
	586, 824,
	-2, 0,
	-1, 946,
	1, 951,
	182, 951,
	582, 951,
	584, 951,
	586, 951,
	-2, 0,
	-1, 954,
	1, 851,
	582, 851,
	584, 851,
	586, 851,
	-2, 0,
	-1, 960,
	1, 892,
	582, 892,
	584, 892,
	586, 892,
	-2, 0,
	-1, 961,
	1, 894,
	582, 894,
	584, 894,
	586, 894,
	-2, 0,
	-1, 962,
	1, 897,
	582, 897,
	584, 897,
	586, 897,
	-2, 0,
	-1, 968,
	1, 915,
	582, 915,
	584, 915,
	586, 915,
	-2, 0,
	-1, 969,
	1, 917,
	582, 917,
	584, 917,
	586, 917,
	-2, 0,
	-1, 974,
	1, 945,
	582, 945,
	584, 945,
	586, 945,
	-2, 0,
	-1, 1021,
	169, 1504,
	182, 1504,
	271, 1504,
	337, 1504,
	-2, 1440,
	-1, 1036,
	169, 1503,
	182, 1503,
	271, 1503,
	337, 1503,
	-2, 1437,
	-1, 1062,
	585, 2192,
	-2, 687,
	-1, 1090,
	5, 2184,
	583, 2182,
	-2, 2173,
	-1, 1098,
	5, 2205,
	583, 2202,
	-2, 2193,
	-1, 1099,
	5, 2206,
	583, 2203,
	-2, 2194,
	-1, 1107,
	585, 2190,
	-2, 2172,
	-1, 1108,
	583, 2617,
	-2, 2191,
	-1, 1131,
	583, 2616,
	-2, 2207,
	-1, 1132,
	5, 1704,
	-2, 2587,
	-1, 1133,
	5, 1705,
	-2, 2588,
	-1, 1134,
	5, 1706,
	-2, 2602,
	-1, 1135,
	5, 1707,
	-2, 2566,
	-1, 1136,
	5, 1708,
	-2, 2600,
	-1, 1137,
	5, 1716,
	-2, 2579,
	-1, 1138,
	5, 1703,
	-2, 2575,
	-1, 1139,
	5, 1703,
	-2, 2574,
	-1, 1140,
	5, 1703,
	-2, 2593,
	-1, 1141,
	5, 1714,
	-2, 2568,
	-1, 1142,
	5, 1719,
	-2, 2567,
	-1, 1143,
	5, 1721,
	-2, 2612,
	-1, 1146,
	5, 1743,
	-2, 2605,
	-1, 1147,
	5, 1735,
	-2, 2606,
	-1, 1148,
	5, 1743,
	-2, 2607,
	-1, 1149,
	5, 1739,
	-2, 2608,
	-1, 1150,
	5, 1689,
	-2, 2580,
	-1, 1151,
	5, 1690,
	-2, 2581,
	-1, 1152,
	5, 1691,
	-2, 2569,
	-1, 1180,
	5, 1726,
	-2, 2613,
	-1, 1181,
	5, 1727,
	-2, 2603,
	-1, 1182,
	5, 1728,
	544, 1728,
	-2, 2570,
	-1, 1183,
	5, 1729,
	544, 1729,
	-2, 2571,
	-1, 1220,
	583, 2202,
	-2, 2193,
	-1, 1221,
	583, 2203,
	-2, 2194,
	-1, 1321,
	186, 2534,
	506, 2534,
	566, 2534,
	585, 2534,
	-2, 0,
	-1, 1324,
	1, 665,
	586, 665,
	-2, 1356,
	-1, 1452,
	356, 2168,
	410, 2168,
	451, 2168,
	576, 2168,
	-2, 2158,
	-1, 1463,
	587, 2168,
	-2, 2169,
	-1, 1472,
	1, 1224,
	582, 1224,
	584, 1224,
	586, 1224,
	-2, 1489,
	-1, 1520,
	395, 1021,
	543, 1021,
	-2, 390,
	-1, 1537,
	43, 2166,
	-2, 987,
	-1, 1544,
	1, 1224,
	582, 1224,
	584, 1224,
	586, 1224,
	-2, 1489,
	-1, 1552,
	4, 1249,
	21, 1249,
	22, 1249,
	23, 1249,
	24, 1249,
	25, 1249,
	26, 1249,
	27, 1249,
	29, 1249,
	30, 1249,
	36, 1249,
	41, 1249,
	42, 1249,
	44, 1249,
	45, 1249,
	46, 1249,
	47, 1249,
	48, 1249,
	49, 1249,
	50, 1249,
	51, 1249,
	53, 1249,
	54, 1249,
	55, 1249,
	56, 1249,
	58, 1249,
	59, 1249,
	60, 1249,
	61, 1249,
	62, 1249,
	63, 1249,
	64, 1249,
	68, 1249,
	69, 1249,
	70, 1249,
	71, 1249,
	73, 1249,
	74, 1249,
	75, 1249,
	79, 1249,
	80, 1249,
	81, 1249,
	82, 1249,
	83, 1249,
	84, 1249,
	85, 1249,
	88, 1249,
	89, 1249,
	90, 1249,
	91, 1249,
	92, 1249,
	94, 1249,
	96, 1249,
	97, 1249,
	98, 1249,
	99, 1249,
	100, 1249,
	101, 1249,
	103, 1249,
	104, 1249,
	105, 1249,
	107, 1249,
	108, 1249,
	109, 1249,
	117, 1249,
	118, 1249,
	119, 1249,
	120, 1249,
	121, 1249,
	123, 1249,
	124, 1249,
	125, 1249,
	127, 1249,
	128, 1249,
	129, 1249,
	131, 1249,
	132, 1249,
	133, 1249,
	135, 1249,
	136, 1249,
	137, 1249,
	140, 1249,
	141, 1249,
	142, 1249,
	144, 1249,
	145, 1249,
	147, 1249,
	148, 1249,
	149, 1249,
	151, 1249,
	152, 1249,
	153, 1249,
	154, 1249,
	155, 1249,
	156, 1249,
	157, 1249,
	158, 1249,
	159, 1249,
	160, 1249,
	161, 1249,
	162, 1249,
	163, 1249,
	164, 1249,
	165, 1249,
	166, 1249,
	174, 1249,
	175, 1249,
	176, 1249,
	177, 1249,
	181, 1249,
	183, 1249,
	184, 1249,
	188, 1249,
	189, 1249,
	190, 1249,
	191, 1249,
	192, 1249,
	193, 1249,
	194, 1249,
	195, 1249,
	196, 1249,
	197, 1249,
	198, 1249,
	199, 1249,
	200, 1249,
	202, 1249,
	203, 1249,
	205, 1249,
	206, 1249,
	208, 1249,
	209, 1249,
	210, 1249,
	211, 1249,
	212, 1249,
	213, 1249,
	214, 1249,
	215, 1249,
	216, 1249,
	218, 1249,
	219, 1249,
	221, 1249,
	222, 1249,
	223, 1249,
	224, 1249,
	229, 1249,
	230, 1249,
	231, 1249,
	232, 1249,
	235, 1249,
	236, 1249,
	237, 1249,
	239, 1249,
	241, 1249,
	242, 1249,
	244, 1249,
	246, 1249,
	247, 1249,
	248, 1249,
	250, 1249,
	254, 1249,
	255, 1249,
	256, 1249,
	257, 1249,
	258, 1249,
	259, 1249,
	261, 1249,
	262, 1249,
	263, 1249,
	265, 1249,
	266, 1249,
	268, 1249,
	269, 1249,
	272, 1249,
	276, 1249,
	277, 1249,
	278, 1249,
	281, 1249,
	282, 1249,
	283, 1249,
	284, 1249,
	286, 1249,
	287, 1249,
	288, 1249,
	289, 1249,
	290, 1249,
	291, 1249,
	292, 1249,
	293, 1249,
	294, 1249,
	295, 1249,
	296, 1249,
	297, 1249,
	298, 1249,
	299, 1249,
	300, 1249,
	301, 1249,
	302, 1249,
	303, 1249,
	304, 1249,
	305, 1249,
	306, 1249,
	307, 1249,
	309, 1249,
	311, 1249,
	312, 1249,
	313, 1249,
	314, 1249,
	315, 1249,
	316, 1249,
	317, 1249,
	318, 1249,
	319, 1249,
	320, 1249,
	321, 1249,
	322, 1249,
	324, 1249,
	325, 1249,
	329, 1249,
	330, 1249,
	332, 1249,
	333, 1249,
	334, 1249,
	335, 1249,
	336, 1249,
	339, 1249,
	341, 1249,
	343, 1249,
	344, 1249,
	345, 1249,
	348, 1249,
	349, 1249,
	350, 1249,
	352, 1249,
	354, 1249,
	355, 1249,
	356, 1249,
	357, 1249,
	358, 1249,
	359, 1249,
	360, 1249,
	361, 1249,
	362, 1249,
	363, 1249,
	364, 1249,
	365, 1249,
	367, 1249,
	368, 1249,
	369, 1249,
	370, 1249,
	371, 1249,
	372, 1249,
	373, 1249,
	374, 1249,
	375, 1249,
	376, 1249,
	377, 1249,
	378, 1249,
	379, 1249,
	380, 1249,
	381, 1249,
	383, 1249,
	384, 1249,
	386, 1249,
	387, 1249,
	388, 1249,
	389, 1249,
	390, 1249,
	391, 1249,
	392, 1249,
	393, 1249,
	394, 1249,
	395, 1249,
	396, 1249,
	397, 1249,
	399, 1249,
	401, 1249,
	402, 1249,
	403, 1249,
	408, 1249,
	410, 1249,
	411, 1249,
	412, 1249,
	413, 1249,
	414, 1249,
	415, 1249,
	416, 1249,
	417, 1249,
	418, 1249,
	420, 1249,
	421, 1249,
	422, 1249,
	424, 1249,
	425, 1249,
	426, 1249,
	427, 1249,
	428, 1249,
	429, 1249,
	431, 1249,
	432, 1249,
	433, 1249,
	434, 1249,
	435, 1249,
	436, 1249,
	437, 1249,
	438, 1249,
	439, 1249,
	440, 1249,
	441, 1249,
	442, 1249,
	444, 1249,
	445, 1249,
	446, 1249,
	447, 1249,
	448, 1249,
	449, 1249,
	451, 1249,
	452, 1249,
	453, 1249,
	454, 1249,
	455, 1249,
	456, 1249,
	458, 1249,
	459, 1249,
	460, 1249,
	461, 1249,
	462, 1249,
	463, 1249,
	464, 1249,
	466, 1249,
	468, 1249,
	469, 1249,
	470, 1249,
	471, 1249,
	472, 1249,
	473, 1249,
	474, 1249,
	475, 1249,
	476, 1249,
	477, 1249,
	478, 1249,
	479, 1249,
	480, 1249,
	481, 1249,
	482, 1249,
	483, 1249,
	485, 1249,
	486, 1249,
	488, 1249,
	489, 1249,
	491, 1249,
	492, 1249,
	493, 1249,
	494, 1249,
	495, 1249,
	496, 1249,
	497, 1249,
	498, 1249,
	499, 1249,
	501, 1249,
	502, 1249,
	503, 1249,
	504, 1249,
	505, 1249,
	507, 1249,
	509, 1249,
	510, 1249,
	511, 1249,
	512, 1249,
	513, 1249,
	514, 1249,
	516, 1249,
	517, 1249,
	518, 1249,
	519, 1249,
	521, 1249,
	522, 1249,
	525, 1249,
	526, 1249,
	527, 1249,
	528, 1249,
	529, 1249,
	530, 1249,
	531, 1249,
	533, 1249,
	536, 1249,
	537, 1249,
	538, 1249,
	539, 1249,
	540, 1249,
	541, 1249,
	543, 1249,
	544, 1249,
	545, 1249,
	546, 1249,
	548, 1249,
	553, 1249,
	554, 1249,
	555, 1249,
	556, 1249,
	557, 1249,
	558, 1249,
	-2, 0,
	-1, 1575,
	1, 535,
	582, 535,
	584, 535,
	586, 535,
	-2, 1460,
	-1, 1578,
	4, 2611,
	11, 2611,
	12, 2611,
	14, 2611,
	15, 2611,
	16, 2611,
	17, 2611,
	18, 2611,
	19, 2611,
	21, 2611,
	22, 2611,
	23, 2611,
	24, 2611,
	25, 2611,
	26, 2611,
	27, 2611,
	29, 2611,
	30, 2611,
	33, 2611,
	34, 2611,
	36, 2611,
	38, 2611,
	41, 2611,
	42, 2611,
	44, 2611,
	45, 2611,
	46, 2611,
	47, 2611,
	48, 2611,
	49, 2611,
	50, 2611,
	51, 2611,
	53, 2611,
	54, 2611,
	55, 2611,
	56, 2611,
	58, 2611,
	59, 2611,
	60, 2611,
	61, 2611,
	62, 2611,
	63, 2611,
	64, 2611,
	68, 2611,
	69, 2611,
	70, 2611,
	71, 2611,
	73, 2611,
	74, 2611,
	75, 2611,
	76, 2611,
	79, 2611,
	80, 2611,
	81, 2611,
	82, 2611,
	83, 2611,
	84, 2611,
	85, 2611,
	86, 2611,
	88, 2611,
	89, 2611,
	90, 2611,
	91, 2611,
	92, 2611,
	94, 2611,
	95, 2611,
	96, 2611,
	97, 2611,
	98, 2611,
	99, 2611,
	100, 2611,
	101, 2611,
	103, 2611,
	104, 2611,
	105, 2611,
	106, 2611,
	107, 2611,
	108, 2611,
	109, 2611,
	117, 2611,
	118, 2611,
	119, 2611,
	120, 2611,
	121, 2611,
	123, 2611,
	124, 2611,
	125, 2611,
	127, 2611,
	128, 2611,
	129, 2611,
	131, 2611,
	132, 2611,
	133, 2611,
	135, 2611,
	136, 2611,
	137, 2611,
	140, 2611,
	141, 2611,
	142, 2611,
	144, 2611,
	145, 2611,
	147, 2611,
	148, 2611,
	149, 2611,
	151, 2611,
	152, 2611,
	153, 2611,
	154, 2611,
	155, 2611,
	156, 2611,
	157, 2611,
	158, 2611,
	159, 2611,
	160, 2611,
	161, 2611,
	162, 2611,
	163, 2611,
	164, 2611,
	165, 2611,
	166, 2611,
	170, 2611,
	171, 2611,
	172, 2611,
	173, 2611,
	174, 2611,
	175, 2611,
	176, 2611,
	177, 2611,
	180, 2611,
	181, 2611,
	183, 2611,
	184, 2611,
	187, 2611,
	188, 2611,
	189, 2611,
	190, 2611,
	191, 2611,
	192, 2611,
	193, 2611,
	194, 2611,
	195, 2611,
	196, 2611,
	197, 2611,
	198, 2611,
	199, 2611,
	200, 2611,
	202, 2611,
	203, 2611,
	205, 2611,
	206, 2611,
	208, 2611,
	209, 2611,
	210, 2611,
	211, 2611,
	212, 2611,
	213, 2611,
	214, 2611,
	215, 2611,
	216, 2611,
	217, 2611,
	218, 2611,
	219, 2611,
	220, 2611,
	221, 2611,
	222, 2611,
	223, 2611,
	224, 2611,
	226, 2611,
	227, 2611,
	229, 2611,
	230, 2611,
	231, 2611,
	232, 2611,
	234, 2611,
	235, 2611,
	236, 2611,
	237, 2611,
	239, 2611,
	241, 2611,
	242, 2611,
	243, 2611,
	244, 2611,
	245, 2611,
	246, 2611,
	247, 2611,
	248, 2611,
	249, 2611,
	250, 2611,
	252, 2611,
	253, 2611,
	254, 2611,
	255, 2611,
	256, 2611,
	257, 2611,
	258, 2611,
	259, 2611,
	261, 2611,
	262, 2611,
	263, 2611,
	265, 2611,
	266, 2611,
	267, 2611,
	268, 2611,
	269, 2611,
	270, 2611,
	272, 2611,
	276, 2611,
	277, 2611,
	278, 2611,
	281, 2611,
	282, 2611,
	283, 2611,
	284, 2611,
	285, 2611,
	286, 2611,
	287, 2611,
	288, 2611,
	289, 2611,
	290, 2611,
	291, 2611,
	292, 2611,
	293, 2611,
	294, 2611,
	295, 2611,
	296, 2611,
	297, 2611,
	298, 2611,
	299, 2611,
	300, 2611,
	301, 2611,
	302, 2611,
	303, 2611,
	304, 2611,
	305, 2611,
	306, 2611,
	307, 2611,
	309, 2611,
	310, 2611,
	311, 2611,
	312, 2611,
	313, 2611,
	314, 2611,
	315, 2611,
	316, 2611,
	317, 2611,
	318, 2611,
	319, 2611,
	320, 2611,
	321, 2611,
	322, 2611,
	324, 2611,
	325, 2611,
	328, 2611,
	329, 2611,
	330, 2611,
	332, 2611,
	333, 2611,
	334, 2611,
	335, 2611,
	336, 2611,
	339, 2611,
	343, 2611,
	344, 2611,
	345, 2611,
	346, 2611,
	348, 2611,
	349, 2611,
	350, 2611,
	352, 2611,
	354, 2611,
	355, 2611,
	356, 2611,
	357, 2611,
	358, 2611,
	359, 2611,
	360, 2611,
	361, 2611,
	362, 2611,
	363, 2611,
	364, 2611,
	365, 2611,
	367, 2611,
	368, 2611,
	369, 2611,
	370, 2611,
	371, 2611,
	372, 2611,
	373, 2611,
	374, 2611,
	375, 2611,
	376, 2611,
	377, 2611,
	378, 2611,
	379, 2611,
	380, 2611,
	381, 2611,
	383, 2611,
	384, 2611,
	386, 2611,
	387, 2611,
	388, 2611,
	389, 2611,
	390, 2611,
	391, 2611,
	392, 2611,
	393, 2611,
	394, 2611,
	395, 2611,
	396, 2611,
	397, 2611,
	399, 2611,
	401, 2611,
	402, 2611,
	403, 2611,
	408, 2611,
	409, 2611,
	410, 2611,
	411, 2611,
	412, 2611,
	413, 2611,
	414, 2611,
	415, 2611,
	416, 2611,
	417, 2611,
	418, 2611,
	420, 2611,
	421, 2611,
	422, 2611,
	423, 2611,
	424, 2611,
	425, 2611,
	426, 2611,
	427, 2611,
	428, 2611,
	429, 2611,
	430, 2611,
	431, 2611,
	432, 2611,
	433, 2611,
	434, 2611,
	435, 2611,
	436, 2611,
	437, 2611,
	438, 2611,
	439, 2611,
	440, 2611,
	441, 2611,
	442, 2611,
	444, 2611,
	445, 2611,
	446, 2611,
	447, 2611,
	448, 2611,
	449, 2611,
	451, 2611,
	452, 2611,
	453, 2611,
	454, 2611,
	455, 2611,
	456, 2611,
	457, 2611,
	458, 2611,
	459, 2611,
	460, 2611,
	461, 2611,
	462, 2611,
	463, 2611,
	464, 2611,
	466, 2611,
	468, 2611,
	469, 2611,
	470, 2611,
	471, 2611,
	472, 2611,
	473, 2611,
	474, 2611,
	475, 2611,
	476, 2611,
	477, 2611,
	478, 2611,
	479, 2611,
	480, 2611,
	481, 2611,
	482, 2611,
	483, 2611,
	485, 2611,
	486, 2611,
	488, 2611,
	489, 2611,
	491, 2611,
	492, 2611,
	493, 2611,
	494, 2611,
	495, 2611,
	496, 2611,
	497, 2611,
	498, 2611,
	499, 2611,
	501, 2611,
	502, 2611,
	503, 2611,
	504, 2611,
	505, 2611,
	507, 2611,
	509, 2611,
	510, 2611,
	511, 2611,
	512, 2611,
	513, 2611,
	514, 2611,
	516, 2611,
	517, 2611,
	518, 2611,
	519, 2611,
	521, 2611,
	522, 2611,
	525, 2611,
	526, 2611,
	527, 2611,
	528, 2611,
	529, 2611,
	530, 2611,
	531, 2611,
	533, 2611,
	536, 2611,
	537, 2611,
	538, 2611,
	539, 2611,
	540, 2611,
	541, 2611,
	543, 2611,
	544, 2611,
	545, 2611,
	546, 2611,
	548, 2611,
	553, 2611,
	554, 2611,
	555, 2611,
	556, 2611,
	557, 2611,
	558, 2611,
	559, 2611,
	561, 2611,
	564, 2611,
	565, 2611,
	566, 2611,
	567, 2611,
	568, 2611,
	569, 2611,
	571, 2611,
	572, 2611,
	573, 2611,
	574, 2611,
	575, 2611,
	576, 2611,
	577, 2611,
	578, 2611,
	579, 2611,
	581, 2611,
	584, 2611,
	585, 2611,
	587, 2611,
	588, 2611,
	-2, 0,
	-1, 1583,
	186, 2494,
	506, 2494,
	566, 2494,
	585, 2494,
	-2, 0,
	-1, 1632,
	388, 846,
	449, 846,
	489, 846,
	511, 846,
	-2, 0,
	-1, 1659,
	1, 841,
	582, 841,
	584, 841,
	586, 841,
	-2, 0,
	-1, 1660,
	1, 879,
	582, 879,
	584, 879,
	586, 879,
	-2, 0,
	-1, 1661,
	1, 887,
	582, 887,
	584, 887,
	586, 887,
	-2, 0,
	-1, 1664,
	1, 850,
	582, 850,
	584, 850,
	586, 850,
	-2, 0,
	-1, 1666,
	1, 854,
	582, 854,
	584, 854,
	586, 854,
	-2, 0,
	-1, 1672,
	1, 861,
	582, 861,
	584, 861,
	586, 861,
	-2, 0,
	-1, 1701,
	1, 2556,
	582, 2556,
	584, 2556,
	585, 2556,
	586, 2556,
	-2, 913,
	-1, 1702,
	1, 2491,
	582, 2491,
	584, 2491,
	585, 2491,
	586, 2491,
	-2, 914,
	-1, 1706,
	1, 926,
	582, 926,
	584, 926,
	586, 926,
	-2, 0,
	-1, 1721,
	1, 1351,
	586, 1351,
	-2, 1356,
	-1, 1724,
	169, 1503,
	182, 1503,
	271, 1503,
	337, 1503,
	-2, 1441,
	-1, 1818,
	150, 1462,
	169, 1462,
	182, 1462,
	238, 1462,
	271, 1462,
	337, 1462,
	347, 1462,
	523, 1462,
	-2, 1904,
	-1, 1878,
	584, 2054,
	-2, 0,
	-1, 1913,
	150, 1462,
	169, 1462,
	182, 1462,
	238, 1462,
	271, 1462,
	337, 1462,
	347, 1462,
	523, 1462,
	-2, 1590,
	-1, 1947,
	506, 2491,
	585, 2491,
	588, 2491,
	-2, 0,
	-1, 1964,
	583, 1731,
	-2, 1719,
	-1, 1995,
	186, 2491,
	585, 2491,
	588, 2491,
	-2, 0,
	-1, 2043,
	1, 667,
	586, 667,
	-2, 1356,
	-1, 2169,
	220, 249,
	-2, 2201,
	-1, 2170,
	220, 250,
	-2, 298,
	-1, 2274,
	1, 843,
	582, 843,
	584, 843,
	586, 843,
	-2, 0,
	-1, 2275,
	1, 881,
	582, 881,
	584, 881,
	586, 881,
	-2, 0,
	-1, 2276,
	1, 889,
	582, 889,
	584, 889,
	586, 889,
	-2, 0,
	-1, 2277,
	1, 928,
	582, 928,
	584, 928,
	586, 928,
	-2, 0,
	-1, 2310,
	1, 863,
	582, 863,
	584, 863,
	586, 863,
	-2, 0,
	-1, 2366,
	428, 1530,
	429, 1530,
	-2, 1764,
	-1, 2397,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1784,
	-1, 2398,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1785,
	-1, 2399,
	95, 0,
	252, 0,
	253, 0,
	568, 0,
	569, 0,
	-2, 1786,
	-1, 2400,
	95, 0,
	252, 0,
	253, 0,
	568, 0,
	569, 0,
	-2, 1787,
	-1, 2401,
	95, 0,
	252, 0,
	253, 0,
	568, 0,
	569, 0,
	-2, 1788,
	-1, 2402,
	95, 0,
	252, 0,
	253, 0,
	568, 0,
	569, 0,
	-2, 1789,
	-1, 2403,
	95, 0,
	252, 0,
	253, 0,
	568, 0,
	569, 0,
	-2, 1790,
	-1, 2404,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1791,
	-1, 2416,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1803,
	-1, 2417,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1804,
	-1, 2418,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1805,
	-1, 2421,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1810,
	-1, 2427,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1814,
	-1, 2429,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1822,
	-1, 2430,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1823,
	-1, 2431,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1824,
	-1, 2432,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1825,
	-1, 2568,
	5, 2205,
	186, 2065,
	583, 2202,
	-2, 2193,
	-1, 2569,
	186, 2066,
	-2, 2562,
	-1, 2570,
	186, 2067,
	-2, 2388,
	-1, 2571,
	186, 2068,
	-2, 2275,
	-1, 2572,
	186, 2069,
	-2, 2329,
	-1, 2573,
	186, 2070,
	-2, 2373,
	-1, 2574,
	186, 2071,
	-2, 2489,
	-1, 2575,
	186, 2072,
	-2, 1887,
	-1, 2645,
	1, 1591,
	2, 1591,
	106, 1591,
	150, 1591,
	169, 1591,
	182, 1591,
	187, 1591,
	204, 1591,
	207, 1591,
	234, 1591,
	238, 1591,
	249, 1591,
	267, 1591,
	271, 1591,
	310, 1591,
	337, 1591,
	341, 1591,
	347, 1591,
	419, 1591,
	423, 1591,
	523, 1591,
	534, 1591,
	550, 1591,
	551, 1591,
	552, 1591,
	562, 1591,
	582, 1591,
	584, 1591,
	586, 1591,
	588, 1591,
	-2, 1590,
	-1, 2658,
	583, 2174,
	-2, 2188,
	-1, 2660,
	1, 315,
	550, 315,
	-2, 1489,
	-1, 2687,
	583, 1730,
	-2, 1720,
	-1, 2864,
	1, 1224,
	582, 1224,
	584, 1224,
	586, 1224,
	-2, 1489,
	-1, 3033,
	342, 1533,
	-2, 2601,
	-1, 3034,
	342, 1534,
	-2, 2474,
	-1, 3038,
	428, 2131,
	429, 2131,
	-2, 1885,
	-1, 3039,
	428, 2135,
	429, 2135,
	-2, 1886,
	-1, 3040,
	428, 2132,
	429, 2132,
	-2, 1885,
	-1, 3041,
	428, 2136,
	429, 2136,
	-2, 1886,
	-1, 3054,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1812,
	-1, 3055,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1816,
	-1, 3061,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1818,
	-1, 3277,
	1, 664,
	582, 664,
	584, 664,
	586, 664,
	-2, 1356,
	-1, 3431,
	43, 2166,
	-2, 988,
	-1, 3436,
	1, 1224,
	582, 1224,
	584, 1224,
	586, 1224,
	-2, 1489,
	-1, 3541,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1820,
	-1, 3548,
	243, 0,
	245, 0,
	328, 0,
	-2, 1839,
	-1, 3615,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1868,
	-1, 3616,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1869,
	-1, 3617,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1870,
	-1, 3621,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1874,
	-1, 3622,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1875,
	-1, 3623,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1876,
	-1, 3669,
	583, 2175,
	-2, 2189,
	-1, 3830,
	585, 2719,
	-2, 1415,
	-1, 3888,
	243, 0,
	245, 0,
	328, 0,
	-2, 1840,
	-1, 3891,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1843,
	-1, 3892,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1845,
	-1, 3984,
	585, 2190,
	-2, 1259,
	-1, 4128,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1844,
	-1, 4129,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1846,
	-1, 4140,
	243, 0,
	-2, 1877,
	-1, 4309,
	243, 0,
	-2, 1878,
	-1, 4491,
	50, 0,
	217, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 2565,
}

const sqlPrivate = 57344

const sqlLast = 122394

var sqlAct = [...]int{
	266, 4587, 3420, 2929, 4673, 3188, 4484, 2942, 4543, 4183,
	3419, 4366, 4501, 4344, 4231, 4490, 4483, 4336, 4472, 4614,
	4459, 4440, 4387, 2166, 2091, 4362, 3871, 2749, 1213, 4443,
	4502, 4423, 4503, 3980, 2793, 4262, 4169, 2241, 4238, 3580,
	4489, 4556, 4313, 1224, 4079, 4084, 4045, 2376, 4025, 4149,
	4188, 4117, 1046, 3533, 1090, 2813, 3814, 1293, 3822, 3453,
	4068, 4059, 4066, 4247, 3981, 1286, 1951, 3758, 3299, 1097,
	1297, 3965, 3047, 2600, 4276, 794, 3359, 1733, 3778, 2444,
	3447, 3415, 2826, 4089, 3795, 2099, 3780, 2250, 2384, 4145,
	3302, 3494, 2377, 2951, 3405, 2025, 2964, 1357, 1037, 1919,
	1599, 794, 1484, 3492, 757, 2899, 2918, 3231, 2888, 3203,
	3672, 2953, 3192, 3870, 3211, 2930, 2961, 2110, 2950, 1888,
	2161, 1449, 3321, 869, 3927, 2160, 2913, 2915, 2486, 2214,
	4588, 2751, 2637, 2381, 3171, 2457, 2944, 2583, 1864, 4314,
	3296, 2638, 3640, 1826, 2892, 3031, 789, 1539, 2137, 2960,
	1094, 2144, 3288, 3194, 1456, 2488, 2841, 1291, 2156, 1204,
	1050, 2900, 2640, 1045, 175, 1340, 4, 2083, 1721, 2079,
	1265, 2023, 3238, 1908, 2618, 1889, 2477, 2365, 2441, 2069,
	1288, 3417, 1576, 2348, 2923, 2671, 3170, 1279, 1099, 2346,
	791, 2201, 1542, 2774, 2954, 1276, 2597, 795, 1597, 796,
	4388, 2737, 2000, 1096, 2792, 1326, 688, 2670, 260, 259,
	1207, 1640, 674, 2608, 2480, 1898, 696, 1905, 2458, 1186,
	2627, 1811, 2564, 1859, 1734, 2530, 1672, 1735, 1659, 739,
	2200, 184, 2227, 1221, 751, 1203, 185, 2347, 1479, 1574,
	1299, 2349, 1567, 2098, 4544, 2370, 108, 1075, 2001, 1998,
	691, 44, 2012, 1952, 43, 1184, 41, 175, 32, 30,
	862, 699, 28, 1740, 1209, 932, 2248, 3082, 714, 3078,
	1720, 952, 1490, 3654, 843, 3655, 2014, 2014, 2014, 2014,
	1665, 2014, 4686, 800, 803, 1606, 2617, 1219, 4676, 3190,
	2014, 884, 3472, 3948, 4661, 4660, 4650, 1073, 2617, 2617,
	2175, 4632, 1216, 4630, 4575, 4187, 1041, 4187, 2175, 800,
	803, 4532, 4525, 4523, 4520, 4533, 2617, 2617, 4521, 1041,
	4517, 4487, 4486, 157, 4518, 2175, 2175, 3462, 4485, 2175,
	3472, 73, 2035, 46, 45, 4480, 4479, 4470, 4468, 2035,
	2035, 4187, 4187, 4465, 3463, 4438, 2175, 4250, 74, 4187,
	863, 152, 4412, 4405, 4404, 4399, 2678, 2617, 2617, 4187,
	3261, 4398, 4392, 4358, 78, 4187, 2175, 4036, 4311, 4293,
	4290, 3046, 2678, 3857, 2175, 67, 3260, 73, 2617, 866,
	865, 4287, 48, 2610, 154, 4187, 1201, 1187, 1187, 4240,
	4413, 4204, 4203, 4241, 74, 2175, 2175, 4194, 1190, 4193,
	1191, 2175, 47, 4187, 87, 4186, 3246, 1022, 1243, 4187,
	78, 4156, 1021, 4130, 4108, 2175, 4097, 2678, 2035, 4020,
	3472, 3091, 4005, 2617, 1748, 1749, 2617, 3092, 3890, 1335,
	50, 68, 2678, 1042, 1592, 4315, 1215, 3838, 3832, 51,
	2698, 3489, 3489, 1335, 57, 73, 4306, 1779, 155, 1031,
	87, 4294, 4250, 1036, 1751, 2249, 49, 3793, 107, 2035,
	1492, 3794, 74, 93, 104, 1492, 3664, 3662, 3647, 3644,
	3665, 3663, 2617, 3564, 3644, 3560, 3488, 2175, 78, 2617,
	3489, 1188, 3479, 3187, 1504, 2609, 3480, 2617, 2032, 1750,
	867, 3182, 3181, 3134, 3132, 2617, 2617, 3135, 3133, 2674,
	1236, 3124, 3122, 52, 107, 3125, 2617, 3093, 2968, 93,
	104, 2617, 2035, 2940, 4077, 2939, 1483, 2237, 87, 2237,
	2721, 94, 2697, 2483, 2617, 2677, 4036, 2668, 2662, 2678,
	1217, 2617, 2175, 1748, 1749, 2175, 4006, 2616, 2236, 3857,
	73, 2617, 2237, 3480, 2816, 2736, 2048, 2617, 2103, 2013,
	2029, 2032, 2894, 230, 2174, 2836, 1779, 74, 867, 2734,
	3081, 1884, 1478, 1751, 3743, 3536, 3512, 94, 1906, 2149,
	3464, 1642, 107, 78, 2654, 3143, 3144, 93, 104, 2653,
	1483, 2652, 1237, 2651, 2650, 1192, 1189, 1030, 1029, 3465,
	3943, 230, 1028, 1756, 1027, 1026, 1025, 1024, 1750, 1020,
	232, 3143, 3144, 1019, 3008, 4297, 1018, 1017, 1016, 1015,
	1014, 2484, 1013, 87, 1492, 1012, 1011, 1010, 1009, 1008,
	1007, 1748, 1749, 1006, 1005, 1004, 930, 929, 928, 2015,
	2015, 2015, 2015, 927, 2015, 94, 926, 925, 232, 1778,
	1780, 924, 923, 2015, 1779, 922, 921, 920, 919, 231,
	918, 1751, 917, 867, 3143, 3144, 916, 915, 2926, 914,
	913, 912, 224, 911, 910, 97, 909, 107, 908, 93,
	907, 225, 93, 104, 906, 905, 904, 903, 902, 901,
	900, 899, 53, 898, 897, 887, 1750, 231, 886, 1748,
	1749, 882, 2485, 186, 2482, 1503, 56, 881, 1771, 875,
	874, 59, 1756, 861, 3143, 3144, 860, 817, 816, 815,
	69, 97, 1779, 814, 806, 805, 58, 183, 100, 1751,
	103, 230, 804, 772, 54, 763, 230, 762, 156, 3158,
	94, 186, 1302, 1099, 3902, 55, 761, 745, 254, 253,
	252, 251, 250, 249, 3149, 230, 3462, 248, 1778, 1780,
	247, 1610, 246, 62, 1750, 245, 1099, 244, 148, 2676,
	1099, 243, 1237, 183, 100, 242, 103, 241, 232, 240,
	3149, 1498, 153, 232, 239, 238, 1360, 237, 2032, 97,
	1360, 236, 235, 2513, 234, 2609, 233, 3685, 1302, 3658,
	1756, 230, 232, 3490, 4091, 3234, 3104, 4181, 2908, 868,
	2708, 2013, 2032, 2029, 148, 2697, 3087, 1771, 1339, 1099,
	1237, 1099, 1344, 1099, 2341, 2991, 3185, 231, 151, 1302,
	2875, 1867, 231, 3149, 2682, 2659, 2644, 1667, 1866, 1909,
	224, 183, 100, 187, 103, 224, 1778, 1780, 232, 225,
	1330, 231, 2487, 1772, 225, 1302, 2499, 1464, 2497, 3159,
	1870, 2077, 1747, 1867, 224, 3186, 2244, 2034, 1756, 230,
	1866, 186, 1932, 225, 151, 1302, 186, 868, 1491, 1837,
	1302, 1828, 148, 3149, 97, 230, 1459, 1486, 1099, 187,
	1099, 1346, 1865, 1223, 1302, 186, 1101, 231, 3, 4508,
	1099, 4488, 1099, 1748, 1749, 1771, 1270, 1273, 1482, 4467,
	224, 4373, 4303, 4144, 1778, 1780, 232, 4318, 4295, 225,
	4098, 4076, 1548, 1551, 3953, 1283, 3143, 3144, 3925, 3924,
	3918, 1324, 232, 1751, 3917, 230, 183, 100, 3159, 103,
	3916, 864, 151, 3909, 1353, 1596, 1446, 1451, 1302, 3908,
	2243, 3906, 3901, 3898, 1470, 3897, 3792, 187, 3689, 3688,
	3687, 230, 1772, 1144, 230, 231, 1099, 2481, 1750, 1099,
	3798, 3668, 868, 1771, 148, 1310, 1454, 148, 224, 3635,
	3634, 231, 232, 3633, 3556, 230, 3552, 225, 3159, 3229,
	3178, 3169, 1497, 2691, 224, 1319, 1760, 1752, 1753, 1754,
	1755, 1757, 1758, 225, 3160, 1481, 4093, 1480, 232, 186,
	1537, 232, 3143, 3144, 3142, 3139, 800, 803, 3138, 3136,
	3131, 3130, 3129, 3126, 3123, 186, 1835, 1611, 3103, 3086,
	3079, 231, 232, 1044, 1829, 2941, 1827, 151, 2645, 175,
	175, 2470, 1579, 1581, 224, 1747, 1828, 1554, 1830, 1200,
	1772, 2910, 187, 225, 2217, 3741, 2182, 231, 1492, 1746,
	231, 4680, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 2180,
	224, 4624, 1756, 224, 4623, 186, 3799, 4589, 4542, 225,
	4540, 231, 225, 3160, 1225, 3582, 3143, 3144, 1330, 4430,
	4365, 1330, 4354, 1099, 224, 3149, 4351, 4350, 4349, 1099,
	4330, 186, 4317, 225, 186, 1570, 1752, 1753, 1754, 1755,
	1757, 1758, 4316, 4291, 4275, 1577, 4274, 2447, 1772, 4260,
	4257, 1042, 3183, 4256, 4251, 2925, 4200, 4177, 4142, 4125,
	1725, 4124, 4105, 3160, 4104, 4062, 4037, 3942, 3923, 3858,
	3143, 3144, 3852, 3161, 3162, 3163, 3152, 3153, 3145, 3146,
	3147, 3148, 3150, 3151, 3849, 3729, 3728, 1719, 1748, 1749,
	39, 1591, 3712, 3711, 3709, 3252, 3226, 3650, 3638, 3547,
	4298, 1815, 3491, 1605, 3145, 3146, 3147, 3148, 3150, 3151,
	3473, 3149, 1681, 1568, 3439, 3374, 3334, 3301, 1751, 3254,
	1817, 1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758,
	3159, 2453, 230, 4319, 1099, 1099, 1099, 3108, 3107, 1616,
	1099, 3102, 3070, 2887, 3799, 3158, 1873, 1221, 1872, 1221,
	1871, 1633, 230, 1750, 3154, 3152, 3153, 3145, 3146, 3147,
	3148, 3150, 3151, 1868, 1360, 1860, 4065, 1668, 1858, 2689,
	2688, 1886, 2656, 1099, 2909, 2649, 794, 2615, 4092, 232,
	2495, 1931, 1969, 794, 1887, 3149, 1302, 1882, 1881, 1880,
	1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 1879, 232,
	1878, 1219, 1877, 1219, 1722, 1876, 3153, 3145, 3146, 3147,
	3148, 3150, 3151, 1895, 1875, 1730, 1216, 1022, 1216, 1729,
	1874, 1855, 1021, 1939, 1854, 1853, 1852, 1869, 231, 1724,
	1851, 1850, 1748, 1749, 1849, 1848, 1847, 1846, 1726, 3149,
	1845, 224, 1844, 1743, 1744, 1843, 1943, 1842, 231, 230,
	225, 1841, 1302, 1830, 1892, 1893, 1816, 1756, 1814, 1099,
	1809, 224, 1751, 1302, 1318, 1940, 1241, 1232, 1935, 1042,
	225, 4161, 186, 3949, 3894, 3160, 1573, 2245, 3684, 1948,
	3661, 1099, 3653, 3090, 2647, 3951, 1996, 1360, 1187, 2680,
	3159, 3683, 186, 1829, 3250, 1812, 232, 1750, 3143, 3144,
	2093, 2068, 1916, 1861, 1862, 2512, 4008, 3468, 2068, 1927,
	2068, 1343, 4621, 2066, 175, 4613, 230, 2814, 4180, 1938,
	4352, 4252, 4243, 1917, 4242, 4096, 4039, 4038, 4007, 3945,
	3861, 3860, 2041, 2075, 1336, 2060, 2059, 3859, 3656, 2068,
	2070, 3475, 3474, 3802, 3159, 231, 230, 1335, 1867, 1330,
	1215, 1909, 1215, 1335, 1936, 1866, 3534, 3753, 224, 1914,
	2797, 2040, 1907, 232, 3726, 3128, 1944, 225, 2498, 1632,
	2496, 1342, 1717, 1992, 3127, 3052, 3337, 4248, 2054, 2779,
	2017, 1885, 1338, 3303, 800, 803, 1641, 1682, 1002, 186,
	1839, 800, 803, 232, 4554, 1042, 1752, 1753, 1754, 1755,
	1757, 1758, 1926, 4296, 230, 1925, 2146, 1924, 2242, 1922,
	1921, 1911, 231, 1920, 2266, 4239, 1850, 1302, 1302, 3145,
	3146, 3147, 3148, 3150, 3151, 224, 2004, 1360, 1949, 1850,
	2043, 1341, 1335, 1003, 225, 3160, 3422, 4528, 3421, 3484,
	4513, 4500, 231, 3406, 1217, 2965, 1217, 3366, 1642, 2039,
	1332, 232, 2162, 1573, 2103, 224, 186, 2063, 3806, 3789,
	3755, 3750, 3734, 2019, 225, 3509, 2021, 3275, 4146, 3190,
	3584, 2478, 2026, 4509, 2687, 3413, 2028, 3096, 2830, 1883,
	2131, 2031, 2136, 1863, 2211, 2141, 186, 1547, 1475, 3160,
	1313, 2822, 2004, 1269, 4522, 2833, 4519, 2776, 3458, 2828,
	231, 2037, 3704, 2004, 4345, 4080, 4437, 3147, 3148, 3150,
	3151, 2046, 4327, 224, 3306, 1572, 3721, 2167, 2172, 2948,
	2922, 1302, 225, 1302, 2071, 1302, 2061, 3398, 4573, 2218,
	1337, 4572, 4196, 4173, 1836, 3528, 4221, 856, 3995, 1514,
	4510, 1302, 1302, 1663, 186, 3768, 3279, 1000, 1663, 4603,
	2821, 2109, 1302, 998, 2722, 1522, 2775, 2044, 2316, 1476,
	1199, 996, 2111, 994, 1302, 991, 1302, 1302, 1302, 2314,
	2065, 1680, 983, 4675, 4214, 2164, 3154, 3152, 3153, 3145,
	3146, 3147, 3148, 3150, 3151, 2115, 4206, 1333, 4034, 794,
	4033, 3766, 2055, 2919, 3765, 2129, 1334, 3757, 2252, 3993,
	3281, 3749, 2265, 2207, 2275, 2740, 3991, 3748, 2064, 1660,
	2212, 3746, 3767, 3745, 3733, 2224, 1481, 2323, 1480, 3699,
	2738, 3698, 3402, 3155, 3156, 3157, 1325, 800, 803, 1620,
	3154, 3152, 3153, 3145, 3146, 3147, 3148, 3150, 3151, 2128,
	857, 1523, 2112, 2140, 1662, 3401, 3245, 3101, 3100, 1662,
	2740, 2247, 3099, 1754, 1755, 1757, 1758, 2173, 3098, 3056,
	1679, 2526, 2839, 2838, 2835, 2738, 2276, 2483, 2824, 3251,
	2812, 1661, 2232, 2811, 2270, 2807, 2806, 1099, 2805, 1099,
	2784, 2783, 2744, 2669, 2428, 1336, 1099, 1092, 2221, 1969,
	1969, 1360, 1572, 1099, 1099, 1099, 1099, 1099, 1099, 1099,
	1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099,
	1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099,
	1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 2234, 1099,
	2193, 1099, 1099, 1099, 1099, 2192, 258, 1570, 2230, 2229,
	2253, 2229, 2258, 3977, 2226, 1343, 2242, 2116, 4197, 4174,
	4604, 1343, 2358, 1099, 1336, 2484, 1099, 1099, 1319, 1678,
	2238, 1577, 2239, 1577, 1099, 3303, 1335, 1042, 1099, 1042,
	1099, 1099, 2345, 3336, 2777, 1723, 2525, 3973, 1360, 2292,
	2777, 2386, 686, 2257, 1099, 1099, 1099, 1099, 2191, 1099,
	1099, 1099, 1099, 1099, 1099, 1099, 1099, 800, 803, 2100,
	1758, 1332, 2274, 3364, 2103, 1342, 3990, 988, 681, 1618,
	1560, 1342, 1559, 2117, 2118, 1099, 1099, 1099, 1099, 1099,
	1099, 1099, 1099, 1099, 1309, 1477, 4123, 3510, 1099, 2459,
	2460, 3974, 2096, 2681, 2781, 2330, 2485, 2113, 2482, 2366,
	1221, 2310, 1228, 2459, 2475, 2801, 1558, 1360, 1557, 2338,
	2333, 1518, 2262, 1634, 1897, 1255, 1221, 1613, 2369, 1715,
	3958, 2101, 2102, 1040, 1531, 2729, 3151, 2794, 2795, 2521,
	1332, 2443, 1099, 1360, 2794, 2795, 2794, 2795, 4608, 2114,
	4009, 1337, 2134, 2478, 1226, 2356, 2753, 2971, 2567, 2567,
	2581, 2097, 2459, 2342, 1219, 2601, 2603, 2282, 2357, 2350,
	1489, 2607, 1496, 2344, 1502, 2072, 2073, 2343, 2443, 1216,
	1219, 2340, 1022, 2474, 770, 1022, 1022, 2373, 1536, 3989,
	2374, 2375, 3957, 2767, 4572, 1216, 2320, 1230, 1716, 2632,
	2661, 3029, 1695, 859, 858, 1901, 1642, 1642, 1333, 3067,
	1927, 2439, 2382, 2383, 2354, 2657, 1691, 1334, 3044, 2356,
	1337, 1039, 4634, 3518, 2766, 1630, 2523, 4617, 2332, 2832,
	3365, 2524, 3977, 4338, 2527, 3707, 2528, 2529, 3065, 1590,
	2437, 1595, 2455, 4609, 2829, 1614, 1302, 1302, 2584, 2279,
	2231, 1604, 1904, 1609, 2635, 3278, 2487, 1187, 2472, 1728,
	2646, 2831, 1229, 2624, 2119, 2827, 3973, 1899, 3718, 2756,
	3966, 1042, 2273, 4032, 1317, 2283, 3517, 1333, 2354, 1916,
	1042, 1677, 3005, 2623, 1042, 1902, 1334, 3964, 1360, 2631,
	2487, 2636, 768, 2352, 2642, 2643, 3968, 3992, 4506, 2743,
	3775, 3969, 1543, 3730, 2717, 2711, 3970, 2592, 2576, 2563,
	895, 2451, 3747, 1215, 2605, 1666, 2613, 2614, 2449, 2743,
	3974, 2683, 1969, 3744, 175, 992, 2625, 2675, 1900, 1215,
	1041, 992, 1869, 2629, 2630, 2315, 1914, 2672, 1963, 992,
	2120, 993, 3400, 992, 2147, 1330, 2313, 3043, 2739, 3362,
	3011, 1541, 4611, 4340, 3776, 2834, 2355, 3972, 4122, 3205,
	1360, 2804, 3967, 854, 3573, 853, 2780, 2329, 2782, 2179,
	2178, 2481, 1042, 3975, 1302, 1674, 3353, 4584, 3062, 2719,
	2433, 2339, 888, 3036, 3037, 2694, 3716, 1335, 2745, 3987,
	1099, 1099, 2690, 1099, 2143, 3774, 4592, 2702, 4591, 2434,
	2713, 2705, 3063, 2706, 2435, 1966, 3068, 1217, 2440, 2667,
	4637, 2693, 1861, 1862, 2696, 794, 2720, 1302, 682, 2142,
	2355, 4561, 2742, 1217, 2714, 2710, 2712, 3876, 3455, 2353,
	3354, 1619, 4409, 3345, 2866, 3875, 1520, 2786, 1033, 2084,
	978, 1903, 4664, 4419, 2085, 3456, 1692, 2014, 1302, 1617,
	978, 978, 2138, 2802, 2825, 2159, 1335, 2147, 3014, 3731,
	1302, 4165, 1302, 2723, 1035, 2770, 2755, 876, 2906, 2933,
	4507, 3352, 4346, 2425, 1035, 1035, 4615, 1302, 2785, 2741,
	2703, 2101, 2102, 2126, 2962, 4360, 2707, 3346, 2867, 2748,
	2331, 2803, 1517, 2353, 2725, 683, 1254, 2758, 2761, 3971,
	2718, 4474, 769, 4475, 2972, 2973, 1038, 3377, 2123, 2158,
	1034, 2139, 2891, 2727, 2487, 2979, 2980, 2981, 1099, 3290,
	3969, 2815, 2809, 3455, 1227, 3970, 1543, 2808, 3344, 2865,
	3570, 2796, 2798, 2799, 2800, 3318, 3322, 2281, 3978, 3280,
	4610, 2810, 3988, 684, 2820, 685, 3783, 1689, 2728, 2103,
	771, 2902, 3204, 2106, 767, 3781, 979, 2086, 2132, 735,
	2966, 1239, 2124, 4054, 3783, 989, 979, 979, 2726, 4505,
	2135, 1923, 1099, 3781, 2090, 2787, 3972, 2947, 1099, 1099,
	4616, 4560, 1481, 1693, 2873, 3058, 3064, 3324, 2436, 2989,
	3013, 3317, 3975, 800, 803, 2885, 3066, 1856, 2438, 4535,
	2992, 2127, 2993, 2122, 2895, 2896, 2935, 2107, 2754, 4536,
	175, 3571, 4339, 2937, 4618, 1615, 4407, 3248, 2147, 2898,
	3010, 2094, 2442, 800, 803, 2928, 2740, 889, 890, 2917,
	2938, 3872, 4583, 1099, 1099, 4135, 3016, 2949, 3018, 1099,
	2423, 2759, 4457, 2426, 2870, 2087, 2092, 4448, 2105, 2872,
	3323, 4119, 1099, 1099, 4017, 4408, 704, 2004, 1099, 1099,
	2967, 1808, 2469, 2936, 1099, 3106, 3784, 2628, 4625, 1041,
	4638, 2660, 1694, 1099, 1099, 1099, 1629, 1631, 2641, 1099,
	2988, 2994, 896, 3586, 3784, 4064, 1690, 2995, 1577, 1099,
	3866, 3680, 2997, 2422, 2999, 3717, 3001, 1244, 3877, 3530,
	3027, 2278, 2986, 4367, 4069, 4504, 1099, 4571, 4569, 2084,
	1727, 3024, 877, 878, 2085, 2996, 3059, 2998, 3971, 3000,
	3012, 3035, 3291, 4070, 2272, 1316, 1647, 4386, 2088, 1901,
	2969, 3019, 3032, 4259, 3021, 2974, 1287, 2975, 3026, 3009,
	3820, 3797, 3443, 3025, 2199, 980, 1894, 3084, 3085, 3030,
	2450, 2369, 3088, 3045, 1242, 980, 980, 3978, 1235, 673,
	1737, 2487, 1738, 4643, 3921, 3873, 4285, 2150, 2372, 3080,
	2104, 3328, 2157, 3779, 2056, 2094, 1904, 4055, 4559, 1737,
	3239, 4195, 3089, 3624, 1452, 4268, 4118, 1463, 1287, 3071,
	3072, 2626, 1732, 2362, 4326, 4665, 1099, 1099, 1099, 3821,
	2015, 3761, 3502, 2053, 3703, 1099, 1099, 1099, 3297, 1902,
	1099, 3495, 2584, 2584, 3057, 2125, 891, 892, 3444, 4277,
	1099, 1221, 1360, 3435, 3293, 3326, 1099, 2086, 1099, 3197,
	3198, 3782, 4278, 2907, 2901, 2889, 2225, 1221, 2219, 2213,
	2205, 2135, 2185, 3569, 2090, 1963, 1963, 1511, 4534, 3782,
	1246, 744, 3639, 1287, 1287, 1360, 4424, 3674, 4368, 3695,
	3531, 2743, 1736, 3095, 4389, 4279, 3327, 1221, 1737, 2133,
	1360, 2619, 2321, 2049, 3823, 1219, 4085, 2886, 2051, 1257,
	2424, 1736, 4237, 3180, 1032, 2151, 981, 2788, 4235, 1969,
	1216, 1219, 4176, 1360, 3219, 3232, 981, 981, 3878, 3199,
	3309, 879, 880, 3305, 1042, 2622, 1216, 3497, 1302, 1302,
	2130, 3675, 1966, 1966, 3304, 2087, 2092, 3502, 3050, 2052,
	3652, 1219, 3496, 4120, 3028, 2263, 3495, 4281, 1738, 2363,
	2760, 1099, 4067, 3166, 3167, 3168, 1216, 3676, 982, 3673,
	3202, 2134, 3201, 3209, 3213, 1099, 2621, 1738, 982, 982,
	4280, 2620, 2089, 2093, 1664, 1302, 2584, 2584, 2584, 3228,
	1969, 3922, 1897, 2666, 2665, 1903, 3233, 4282, 4642, 2664,
	1736, 3625, 2663, 1566, 3208, 3285, 3286, 1808, 1099, 3217,
	3626, 3879, 3244, 3276, 3788, 3220, 3221, 2093, 2893, 1039,
	3207, 3237, 1552, 1564, 1302, 3191, 3307, 3282, 2088, 3311,
	3225, 3175, 3176, 3177, 4184, 3258, 1553, 4333, 894, 4232,
	3206, 3493, 3218, 4046, 3269, 2764, 1302, 1058, 1302, 3710,
	1330, 3485, 3497, 2223, 1215, 3409, 3700, 4102, 4580, 3223,
	1358, 3224, 4364, 2146, 1457, 1360, 4163, 3496, 3308, 3214,
	1215, 3313, 2146, 1901, 3315, 2094, 1302, 3241, 3242, 3243,
	1302, 3294, 4369, 3696, 3255, 3256, 1939, 3257, 2789, 2790,
	2970, 2871, 2869, 2251, 1623, 1648, 3380, 4427, 3382, 3378,
	1215, 3386, 4434, 1302, 4334, 3392, 4421, 4171, 3928, 4452,
	1302, 3367, 1302, 3641, 2494, 3266, 1360, 3339, 1711, 3212,
	1904, 3270, 4582, 794, 264, 3284, 3361, 4101, 4524, 2154,
	1713, 3277, 4353, 1710, 1302, 1899, 3240, 4185, 4141, 3920,
	3262, 3263, 1708, 3787, 3283, 2325, 1302, 3375, 1217, 1686,
	1684, 3216, 4172, 1902, 3343, 3418, 3498, 3499, 3500, 3501,
	3172, 3546, 3507, 1221, 1217, 3677, 743, 3451, 3357, 1658,
	3427, 3506, 3249, 3259, 3137, 3341, 3069, 2890, 2004, 2004,
	3325, 1656, 3348, 2152, 4428, 3335, 3434, 3292, 1302, 1302,
	1654, 4335, 1652, 2962, 1217, 3265, 1900, 3355, 3267, 3268,
	2823, 2778, 2962, 3271, 3351, 3272, 2692, 3273, 3368, 2334,
	3404, 1302, 3407, 1934, 3376, 3449, 3701, 1219, 3442, 3471,
	807, 1930, 3173, 1650, 2153, 2004, 3342, 3387, 3460, 1957,
	3399, 3393, 1216, 1644, 1639, 3389, 1714, 3395, 1963, 4283,
	3363, 1565, 3349, 3298, 1637, 4284, 3350, 1601, 3356, 1562,
	3358, 1360, 2089, 3526, 1360, 3525, 3511, 3215, 2786, 1732,
	2312, 1563, 3007, 3006, 2004, 2977, 1463, 2351, 3403, 3411,
	1673, 3498, 3499, 3500, 3501, 3452, 893, 2287, 3388, 2204,
	2184, 3430, 3394, 1997, 3445, 3432, 2004, 1099, 2004, 1840,
	1612, 1535, 2493, 1099, 1099, 3431, 4018, 1099, 1099, 1099,
	4499, 1099, 3752, 3751, 4019, 1966, 3504, 3379, 4420, 1903,
	1099, 1969, 1062, 1463, 1712, 3457, 2004, 1709, 4004, 1099,
	2004, 4083, 1099, 3483, 3466, 2327, 1707, 3487, 1360, 2326,
	3459, 800, 803, 1685, 1683, 3481, 4024, 1099, 3962, 3819,
	3810, 4078, 3764, 175, 175, 1360, 3469, 3470, 3450, 3724,
	3524, 3523, 3722, 1657, 3702, 1969, 1969, 1099, 1099, 990,
	1099, 1099, 1099, 3438, 3433, 1655, 1215, 3423, 2920, 2912,
	2905, 3566, 2897, 2883, 1653, 2868, 1651, 3549, 1099, 3532,
	2709, 2704, 1099, 2183, 1969, 1969, 1099, 1099, 1099, 1099,
	1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099,
	1099, 1099, 1099, 1099, 1099, 3520, 1099, 1649, 3598, 3505,
	3599, 4557, 1042, 1099, 1099, 1969, 3529, 1643, 1638, 2181,
	1099, 2163, 3558, 3559, 2148, 2121, 2108, 2095, 1636, 2036,
	2033, 1099, 2030, 1561, 2027, 3542, 3543, 2022, 2020, 3521,
	2311, 2016, 1221, 1221, 2007, 3448, 1099, 3390, 3527, 3514,
	4548, 3515, 2157, 3516, 3554, 1196, 1942, 4573, 2584, 2584,
	1217, 1741, 2057, 3022, 4069, 808, 809, 4462, 3572, 3574,
	3575, 3020, 4107, 3048, 3503, 1360, 3565, 4100, 4099, 4031,
	3954, 1197, 3670, 4070, 2963, 2076, 3581, 1516, 3588, 2740,
	4270, 2740, 2765, 3636, 4263, 3831, 1219, 1219, 3576, 2103,
	1705, 1706, 3657, 2277, 2738, 3596, 2762, 2222, 1933, 3597,
	2307, 1216, 1216, 1278, 995, 997, 999, 3603, 4461, 2284,
	2306, 3595, 1099, 3605, 3606, 3607, 3608, 3609, 3610, 3611,
	3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619, 3620, 3621,
	3622, 3623, 1099, 3627, 3996, 3628, 2584, 2584, 2584, 2584,
	2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584,
	2584, 2584, 2584, 2584, 2584, 3391, 2584, 3601, 3049, 2876,
	2337, 1742, 2879, 731, 2881, 1099, 1099, 4026, 2210, 4305,
	3645, 3646, 1635, 3929, 1277, 2768, 3907, 175, 3678, 3679,
	3637, 1198, 1278, 3320, 2769, 3648, 3649, 3660, 3629, 2791,
	1745, 1311, 3690, 3691, 3692, 3659, 811, 810, 2382, 3589,
	1748, 1749, 1748, 1749, 1245, 1099, 2335, 2769, 2924, 4576,
	4567, 2924, 3760, 687, 4529, 255, 2882, 2309, 3807, 2206,
	1322, 2078, 2830, 2828, 2837, 2817, 2819, 2382, 3604, 1302,
	1751, 2773, 1302, 2771, 3759, 1215, 1215, 787, 3735, 2818,
	3686, 4182, 4414, 4380, 2772, 4374, 4332, 4254, 4230, 1969,
	4164, 844, 2336, 3817, 3740, 3742, 812, 813, 3632, 1278,
	3809, 3706, 670, 3796, 3667, 1750, 3437, 1750, 698, 2927,
	2606, 3739, 2042, 3727, 3754, 1950, 3762, 4612, 3756, 4454,
	1302, 3247, 4641, 1483, 4455, 4376, 1099, 3002, 3732, 3643,
	3143, 3144, 1748, 1749, 1221, 1099, 4454, 3833, 3899, 2786,
	2489, 4455, 2732, 2733, 4586, 1302, 1302, 1302, 2730, 2731,
	1622, 3840, 3682, 2732, 2730, 2522, 1621, 3816, 1688, 4255,
	2933, 1687, 1302, 4215, 4028, 4023, 1957, 1957, 4022, 1217,
	1217, 3895, 3681, 3786, 3824, 3577, 3384, 1302, 3381, 1834,
	1833, 4627, 3803, 1360, 3828, 3844, 4593, 2962, 1219, 3693,
	3825, 4418, 4417, 3694, 4416, 4320, 3804, 4233, 4210, 4162,
	4160, 2176, 3773, 1216, 4158, 4057, 4043, 1360, 3994, 3950,
	1099, 1099, 1107, 3790, 3855, 3837, 1099, 1099, 1969, 3856,
	3827, 1099, 1099, 3771, 1099, 3808, 3791, 3720, 1099, 3713,
	3441, 3440, 3811, 3314, 3723, 1963, 3725, 3264, 3813, 1099,
	3004, 3826, 2985, 2984, 2983, 3829, 3835, 2982, 3834, 2911,
	2884, 2763, 2700, 2695, 2685, 1099, 2684, 2673, 262, 262,
	262, 2454, 676, 677, 2328, 692, 676, 692, 702, 3847,
	3862, 742, 3845, 3846, 3772, 760, 3854, 3864, 3880, 3839,
	766, 3850, 3853, 3851, 3889, 2308, 2305, 262, 2304, 3881,
	2303, 2302, 2301, 2220, 2194, 2190, 2189, 3893, 2188, 2187,
	2186, 2010, 1966, 2009, 2008, 3763, 1963, 873, 3874, 2006,
	1062, 1941, 2004, 262, 1062, 1221, 1704, 1703, 1645, 1530,
	1529, 1528, 1527, 1221, 1526, 1525, 1524, 1360, 1519, 1360,
	1444, 1515, 1513, 1512, 1444, 1469, 1221, 1215, 1468, 1467,
	1466, 3777, 3298, 1351, 3785, 1350, 1349, 1302, 1302, 1348,
	1347, 1315, 1314, 1264, 1263, 1262, 1360, 1261, 1260, 1259,
	1258, 1256, 1251, 1250, 3232, 1249, 1248, 1247, 1179, 1219,
	2047, 1001, 987, 1966, 4337, 3976, 2324, 1219, 1697, 92,
	1221, 1521, 1221, 830, 1216, 86, 2155, 3719, 957, 4451,
	1219, 1505, 1216, 4359, 838, 4436, 3955, 3956, 3805, 3316,
	2840, 3869, 2286, 1646, 1302, 1216, 3919, 2288, 3982, 3937,
	3982, 3227, 1287, 2648, 1360, 3985, 1302, 4406, 3903, 1302,
	3997, 3105, 4312, 3934, 4134, 2492, 1838, 3184, 1360, 3933,
	88, 1217, 1083, 3940, 1219, 1129, 1219, 676, 676, 3936,
	3931, 3932, 3863, 3941, 4053, 262, 4052, 3963, 3959, 1216,
	3705, 1216, 3944, 2952, 4050, 4049, 1954, 1956, 1302, 1302,
	1287, 1049, 4027, 3998, 4029, 2385, 3961, 1363, 3930, 4473,
	2058, 1089, 175, 2074, 2067, 3926, 3935, 2686, 1302, 2566,
	1106, 1103, 1958, 1960, 1105, 3986, 1104, 1959, 1857, 1102,
	1360, 1953, 4047, 3815, 2931, 1302, 1287, 1287, 3467, 1571,
	1569, 3999, 4000, 4030, 4044, 959, 2062, 2448, 2476, 3094,
	4021, 1831, 1064, 1085, 2473, 4041, 1240, 1074, 1215, 1063,
	1221, 3210, 3189, 3454, 3666, 2361, 1215, 4075, 848, 1957,
	1302, 1302, 1302, 3140, 2479, 1231, 2589, 2582, 2578, 1215,
	3274, 4016, 4035, 1360, 2921, 1718, 4013, 4148, 3982, 4086,
	4040, 1810, 2490, 4103, 4002, 1099, 1099, 1099, 2932, 4042,
	1820, 1345, 1067, 2446, 1825, 4087, 1822, 4011, 3074, 2371,
	4014, 3461, 4081, 1360, 1219, 4090, 4048, 3230, 1099, 4063,
	2679, 1099, 1099, 1215, 4072, 1215, 4458, 3585, 1452, 1216,
	2198, 1099, 3329, 3330, 1969, 3331, 3332, 3333, 1195, 1099,
	1099, 1194, 4095, 4088, 1238, 1193, 4003, 4442, 4439, 2145,
	4074, 3848, 1217, 3416, 1360, 1463, 1302, 2050, 4012, 4109,
	1217, 4015, 2724, 1800, 4126, 4106, 3424, 1963, 1079, 1462,
	4114, 4112, 4110, 1217, 3195, 3486, 1532, 1360, 3369, 3370,
	4121, 3371, 3372, 3373, 2004, 1099, 765, 2658, 4189, 1091,
	1799, 2861, 2860, 4329, 1099, 1331, 2004, 1329, 1328, 2004,
	4143, 1327, 1099, 4600, 4663, 4131, 1969, 3715, 3714, 229,
	4137, 1963, 1963, 3042, 1739, 1099, 1731, 1217, 1099, 1217,
	4071, 226, 228, 227, 4058, 3671, 3236, 4527, 3737, 3408,
	1099, 4154, 4155, 23, 1966, 22, 21, 1360, 112, 42,
	1963, 1963, 20, 4167, 1302, 4192, 150, 128, 4157, 1302,
	1302, 147, 146, 120, 145, 144, 143, 142, 2004, 149,
	141, 140, 135, 1215, 139, 4168, 4166, 138, 4140, 137,
	4209, 1963, 4175, 136, 134, 132, 133, 127, 1966, 1966,
	131, 130, 129, 126, 4245, 125, 124, 123, 122, 4220,
	1463, 2584, 121, 119, 1360, 118, 117, 1302, 1287, 116,
	3418, 4236, 115, 114, 113, 756, 4211, 1966, 1966, 753,
	61, 60, 111, 110, 19, 1221, 1221, 40, 1444, 14,
	65, 4207, 4178, 66, 18, 4217, 4226, 13, 4253, 35,
	91, 102, 2735, 4225, 101, 1099, 1099, 1463, 1966, 1463,
	36, 4115, 4234, 3982, 3982, 2584, 4273, 4229, 4288, 4289,
	4228, 4264, 1099, 1969, 4244, 99, 4292, 1217, 98, 4267,
	34, 17, 4249, 16, 15, 96, 95, 4265, 33, 1219,
	1219, 31, 11, 9, 4224, 8, 4261, 2171, 37, 4266,
	1918, 12, 5, 4090, 1216, 1216, 4272, 4286, 1099, 4271,
	180, 1099, 179, 182, 178, 4222, 181, 90, 1221, 177,
	176, 89, 29, 10, 172, 4269, 4246, 3801, 4301, 4302,
	81, 1221, 174, 173, 171, 4212, 170, 169, 4325, 4310,
	82, 79, 168, 85, 167, 80, 3982, 84, 83, 4300,
	27, 1233, 6, 64, 7, 1062, 4116, 3508, 105, 3982,
	106, 1444, 38, 4304, 4348, 77, 4223, 76, 2093, 4324,
	4321, 75, 1219, 1099, 1099, 26, 63, 25, 4347, 4199,
	4201, 4202, 4341, 1099, 1253, 1219, 4363, 1216, 1221, 213,
	212, 1221, 4342, 211, 210, 1302, 262, 209, 262, 262,
	1216, 1282, 262, 1292, 2004, 1302, 1302, 208, 4216, 4309,
	4218, 207, 4219, 4355, 1312, 206, 3982, 4357, 201, 3982,
	200, 4383, 1302, 760, 4385, 4371, 4372, 205, 203, 202,
	204, 4397, 2584, 4370, 199, 1963, 1099, 1099, 1215, 1215,
	4375, 4377, 1219, 4382, 4378, 1219, 1099, 262, 216, 262,
	262, 1282, 215, 262, 262, 4391, 221, 1216, 220, 1292,
	1216, 4394, 4395, 4396, 4249, 4390, 219, 218, 217, 4393,
	262, 214, 1485, 223, 198, 197, 4401, 196, 194, 4400,
	190, 4429, 1099, 1099, 4411, 1099, 189, 193, 195, 4433,
	192, 191, 188, 1509, 222, 4415, 72, 165, 166, 71,
	164, 1444, 1966, 4456, 163, 162, 4441, 4444, 161, 4410,
	160, 159, 1534, 158, 4453, 1292, 70, 24, 2, 262,
	262, 1215, 1282, 4460, 4432, 1, 4431, 0, 4478, 4402,
	0, 4403, 1217, 1217, 1215, 4446, 4450, 0, 1099, 1099,
	1099, 760, 4482, 262, 262, 4481, 0, 0, 0, 0,
	4463, 0, 0, 0, 0, 4445, 1957, 0, 4449, 4469,
	0, 0, 0, 0, 1963, 0, 873, 4477, 1099, 0,
	0, 0, 0, 0, 0, 4476, 4511, 0, 0, 4495,
	4496, 0, 4516, 0, 4498, 0, 4497, 0, 0, 0,
	0, 1215, 0, 0, 1215, 0, 0, 0, 4530, 2084,
	0, 0, 0, 4356, 2085, 0, 0, 0, 4537, 4514,
	0, 0, 4539, 0, 0, 1217, 4553, 0, 4541, 0,
	0, 0, 1099, 0, 0, 0, 4551, 1957, 1217, 0,
	4552, 1966, 0, 4538, 0, 1463, 1463, 4558, 0, 0,
	262, 4546, 0, 4547, 0, 0, 0, 4549, 4550, 0,
	0, 4574, 0, 4555, 0, 0, 0, 0, 0, 4545,
	262, 4578, 0, 4512, 4570, 4568, 4566, 4564, 4565, 0,
	4579, 1221, 0, 1221, 2093, 4441, 4577, 0, 4444, 0,
	4595, 4581, 0, 4585, 4590, 1217, 4598, 4596, 1217, 4607,
	0, 4460, 4363, 4594, 0, 0, 0, 4606, 4605, 3982,
	4602, 3982, 0, 0, 4597, 0, 4599, 0, 1463, 0,
	4620, 773, 0, 0, 0, 0, 0, 2086, 3812, 0,
	4622, 0, 0, 4619, 0, 1219, 0, 1219, 0, 0,
	0, 0, 0, 2210, 2090, 4628, 784, 0, 4635, 0,
	1216, 4629, 1216, 1099, 1099, 4631, 2452, 0, 0, 0,
	0, 4633, 1099, 4636, 1099, 1099, 0, 0, 4639, 0,
	0, 1820, 4645, 4648, 4654, 1444, 0, 0, 4657, 4659,
	4651, 4658, 4656, 0, 4653, 0, 4652, 0, 4601, 0,
	4655, 0, 0, 4666, 0, 4667, 3196, 4662, 3865, 0,
	4669, 0, 2933, 4671, 0, 4672, 0, 4674, 0, 0,
	4670, 4668, 0, 4677, 0, 2087, 2092, 0, 0, 0,
	0, 1099, 4682, 4678, 4684, 2588, 0, 4679, 4685, 3222,
	4687, 4688, 4626, 4674, 0, 4681, 0, 4646, 4647, 778,
	0, 0, 0, 4526, 3235, 785, 0, 0, 0, 1287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 783,
	0, 0, 1444, 0, 0, 0, 0, 3253, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1215, 0, 1215, 0, 0, 262,
	0, 262, 0, 0, 4683, 262, 0, 0, 2088, 0,
	0, 0, 0, 0, 1748, 1749, 0, 782, 1485, 1282,
	262, 0, 262, 0, 0, 0, 0, 0, 262, 1485,
	692, 73, 0, 737, 0, 262, 1485, 1779, 0, 0,
	2856, 1444, 1748, 1749, 1751, 0, 0, 0, 74, 0,
	2011, 2082, 0, 0, 0, 2094, 0, 780, 0, 0,
	1963, 1463, 262, 0, 78, 1779, 0, 1444, 1957, 262,
	0, 0, 1751, 2848, 2846, 0, 0, 0, 0, 1750,
	2850, 2852, 2842, 0, 0, 0, 0, 0, 1217, 1770,
	1217, 0, 0, 0, 0, 0, 0, 0, 1767, 0,
	0, 0, 0, 0, 87, 2080, 0, 1750, 0, 760,
	0, 0, 1957, 1957, 0, 0, 788, 1770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 0, 0,
	0, 0, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 1957, 1957, 0, 867, 0, 2081, 0, 0, 1296,
	0, 0, 3884, 0, 0, 0, 0, 0, 107, 0,
	0, 0, 0, 93, 104, 0, 0, 0, 0, 0,
	3235, 0, 1957, 1773, 1774, 1775, 1776, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 0, 775,
	0, 0, 0, 0, 0, 0, 0, 4056, 0, 1966,
	0, 1773, 1774, 1775, 1776, 1472, 0, 0, 0, 0,
	4073, 1756, 1444, 0, 0, 0, 0, 0, 0, 779,
	0, 94, 0, 0, 0, 0, 0, 0, 0, 1778,
	1780, 0, 2089, 4094, 0, 0, 1507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 736, 0, 1765, 1766, 1778, 1780, 2844,
	0, 0, 1544, 0, 0, 0, 0, 786, 262, 0,
	2858, 262, 0, 777, 0, 0, 0, 0, 0, 1963,
	0, 0, 0, 0, 1444, 0, 0, 1585, 1771, 0,
	0, 2857, 2849, 2847, 2851, 2853, 2843, 2845, 2859, 0,
	0, 1598, 0, 0, 0, 1457, 2855, 0, 1358, 0,
	0, 0, 0, 0, 0, 0, 1771, 0, 0, 774,
	0, 0, 0, 0, 262, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 2862,
	262, 0, 0, 0, 0, 0, 1966, 781, 0, 0,
	0, 0, 0, 0, 0, 1624, 262, 0, 262, 0,
	0, 738, 676, 0, 262, 97, 0, 0, 0, 0,
	73, 0, 776, 0, 0, 0, 760, 0, 0, 0,
	873, 0, 3562, 0, 0, 0, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3578,
	0, 0, 0, 78, 0, 262, 0, 1282, 262, 0,
	0, 0, 1777, 0, 0, 0, 1957, 183, 100, 2588,
	103, 0, 760, 0, 0, 0, 0, 1287, 0, 262,
	0, 0, 0, 1772, 0, 0, 2285, 0, 0, 0,
	1777, 262, 262, 87, 262, 230, 262, 0, 262, 0,
	262, 0, 0, 868, 0, 0, 0, 0, 148, 0,
	0, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2317, 0, 0, 2318, 0, 2319, 0,
	2210, 0, 0, 867, 0, 0, 0, 0, 0, 0,
	262, 0, 232, 1084, 109, 0, 0, 107, 0, 2588,
	2588, 0, 93, 104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2863, 0, 0, 742, 0, 151, 0,
	760, 0, 2854, 0, 0, 0, 0, 0, 0, 3669,
	0, 0, 0, 187, 0, 0, 1748, 1749, 0, 0,
	0, 231, 0, 0, 0, 1957, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 1779,
	94, 0, 0, 225, 0, 0, 1751, 0, 0, 0,
	0, 1768, 1764, 0, 1761, 1759, 1760, 1752, 1753, 1754,
	1755, 1757, 1758, 0, 0, 1582, 0, 109, 0, 3143,
	3144, 0, 3161, 3162, 3163, 0, 0, 0, 0, 0,
	0, 1750, 1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757,
	1758, 1770, 0, 0, 0, 0, 0, 0, 0, 0,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2588, 2588, 2588, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4381, 0, 0, 0, 0,
	0, 0, 0, 0, 3158, 0, 0, 0, 0, 1023,
	0, 0, 0, 0, 3545, 0, 0, 676, 0, 0,
	1043, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1748, 1749, 262, 0, 0, 1773, 1774, 1775, 1776, 0,
	0, 676, 0, 0, 97, 1756, 0, 0, 262, 0,
	676, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	1751, 0, 262, 0, 0, 0, 1205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 1292,
	0, 0, 0, 0, 0, 0, 1444, 0, 0, 0,
	0, 1778, 1780, 0, 0, 1750, 183, 100, 3149, 103,
	0, 0, 0, 0, 0, 1770, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 4464, 0, 1765, 1766, 1444,
	0, 4466, 0, 0, 230, 0, 262, 1292, 0, 0,
	692, 0, 868, 0, 1444, 0, 2210, 148, 3165, 0,
	2699, 0, 0, 0, 0, 0, 262, 0, 0, 262,
	1771, 0, 0, 262, 1287, 262, 0, 1444, 0, 0,
	1282, 3164, 262, 262, 0, 1292, 1292, 2715, 3540, 0,
	0, 232, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	1774, 1775, 1776, 0, 0, 1062, 0, 151, 0, 1756,
	0, 0, 0, 3159, 0, 0, 0, 0, 0, 1062,
	0, 0, 187, 0, 0, 0, 0, 2752, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 262, 225, 0, 0, 1778, 1780, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 1957, 0, 0, 1580, 0, 0, 0, 0, 0,
	0, 1765, 1766, 0, 1777, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3939, 0, 1772, 0, 0, 0, 1444,
	0, 0, 0, 0, 1771, 0, 0, 262, 2874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1485, 1957, 0, 262, 0, 262, 0, 0,
	0, 0, 2240, 0, 262, 0, 0, 0, 3160, 0,
	1444, 0, 0, 0, 2916, 0, 0, 0, 1296, 2254,
	0, 0, 0, 0, 2752, 0, 676, 0, 0, 2256,
	0, 0, 0, 0, 0, 2945, 873, 0, 2752, 2752,
	0, 2264, 0, 2267, 2268, 2269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 1282, 262, 0, 0, 0,
	1485, 0, 1485, 1292, 262, 0, 0, 1282, 1777, 1282,
	0, 1282, 0, 1768, 1764, 0, 1761, 1759, 1760, 1752,
	1753, 1754, 1755, 1757, 1758, 0, 0, 0, 0, 1772,
	0, 0, 0, 0, 0, 2588, 2588, 0, 0, 0,
	0, 0, 262, 262, 262, 262, 1282, 0, 0, 1282,
	0, 262, 0, 0, 262, 0, 0, 0, 0, 0,
	1957, 0, 3155, 3156, 3157, 1444, 0, 0, 1444, 3154,
	3152, 3153, 3145, 3146, 3147, 3148, 3150, 3151, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 1358, 0, 0,
	1463, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4132, 0, 0,
	0, 0, 0, 2588, 2588, 2588, 2588, 2588, 2588, 2588,
	2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588,
	2588, 2588, 1444, 2588, 0, 0, 0, 109, 2559, 2560,
	2561, 2562, 2555, 2556, 2557, 2558, 0, 0, 4132, 1444,
	0, 0, 0, 0, 0, 0, 0, 1768, 1764, 0,
	1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 0,
	0, 2385, 1485, 0, 0, 0, 0, 0, 1287, 0,
	0, 0, 0, 3143, 3144, 0, 3161, 3162, 3163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3886, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 109, 0, 109, 0, 2535,
	2536, 2537, 2538, 0, 0, 0, 0, 0, 0, 0,
	0, 2385, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2547, 2548, 2549, 2550, 2543, 2544, 2545, 2546,
	2551, 2552, 2553, 2554, 0, 0, 0, 0, 3158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1043, 109,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 1444,
	0, 0, 109, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 2531, 2532, 2533, 2534,
	2539, 2540, 2541, 2542, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 676, 0, 0, 0, 0, 676,
	0, 0, 676, 0, 0, 676, 676, 0, 0, 0,
	0, 676, 3149, 0, 0, 0, 0, 0, 109, 262,
	0, 0, 0, 2716, 1296, 0, 0, 0, 0, 0,
	0, 0, 1485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 262, 262, 3143, 3144, 3164, 3161, 3162, 3163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3885, 0, 0, 0, 0,
	2752, 2752, 262, 0, 3289, 0, 0, 0, 0, 1023,
	2752, 0, 0, 3300, 0, 0, 0, 3159, 0, 0,
	0, 2752, 3300, 0, 2752, 3300, 0, 0, 3300, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1748, 1749, 0, 262, 262, 3289, 1818, 262, 3158, 0,
	1824, 2864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 3289, 0, 262,
	1751, 3360, 3360, 0, 0, 1282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2752, 0, 2752, 0, 3385, 2752, 3289, 0, 0,
	2752, 3289, 0, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 0, 1444, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1444, 3149, 0, 0, 262, 3412, 0, 0, 3414,
	2752, 0, 0, 262, 2978, 0, 0, 262, 0, 0,
	1292, 0, 3160, 0, 0, 0, 0, 0, 0, 0,
	1910, 0, 1913, 0, 109, 262, 0, 0, 3539, 0,
	2916, 0, 0, 1282, 0, 262, 0, 0, 2752, 0,
	676, 0, 0, 0, 0, 0, 0, 2752, 0, 1773,
	1774, 1775, 1776, 0, 0, 3164, 0, 1896, 0, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 2916,
	0, 0, 2916, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3159, 0, 0,
	0, 0, 0, 0, 3513, 1778, 1780, 0, 0, 0,
	0, 1444, 0, 1444, 0, 0, 0, 0, 0, 0,
	0, 3519, 0, 0, 1282, 262, 0, 262, 0, 0,
	0, 1765, 1766, 1282, 0, 0, 0, 0, 0, 0,
	1444, 0, 0, 0, 0, 0, 3155, 3156, 3157, 0,
	0, 0, 0, 3154, 3152, 3153, 3145, 3146, 3147, 3148,
	3150, 3151, 0, 262, 1771, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1748, 1749, 0, 1781,
	1782, 1783, 1791, 1792, 1793, 0, 0, 0, 1444, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 1779,
	0, 0, 1444, 0, 0, 0, 1751, 0, 0, 3583,
	0, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	0, 3143, 3144, 0, 3161, 3162, 3163, 0, 0, 0,
	0, 0, 3160, 0, 0, 1048, 0, 0, 0, 0,
	0, 1750, 0, 3551, 0, 0, 0, 0, 0, 0,
	0, 1770, 0, 0, 0, 0, 0, 0, 0, 0,
	1767, 0, 0, 0, 1444, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2588, 0,
	0, 0, 0, 0, 0, 0, 3158, 0, 0, 1772,
	0, 0, 0, 0, 262, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1444, 0, 0,
	0, 0, 0, 0, 0, 0, 676, 676, 0, 0,
	0, 0, 0, 0, 0, 1773, 1774, 1775, 1776, 0,
	0, 0, 2588, 0, 0, 1756, 0, 1444, 1485, 1485,
	0, 0, 0, 0, 3143, 3144, 0, 3161, 3162, 3163,
	0, 0, 1485, 1485, 1485, 0, 3155, 3156, 3157, 0,
	0, 0, 0, 3154, 3152, 3153, 3145, 3146, 3147, 3148,
	3150, 3151, 1788, 0, 1043, 1798, 1043, 0, 1444, 0,
	3149, 1778, 1780, 0, 0, 0, 0, 0, 0, 0,
	1748, 1749, 0, 0, 0, 0, 0, 0, 1794, 0,
	1795, 1444, 0, 0, 0, 0, 0, 1765, 1766, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 3158,
	1751, 0, 0, 0, 0, 1786, 0, 1768, 1764, 760,
	1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 0,
	1771, 0, 1062, 3164, 3143, 3144, 0, 3161, 3162, 3163,
	0, 0, 0, 0, 0, 1750, 0, 0, 0, 0,
	3360, 1444, 0, 0, 0, 1770, 3550, 0, 0, 0,
	0, 0, 0, 262, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 3159, 0, 0, 0, 0,
	0, 0, 0, 3289, 0, 262, 0, 0, 0, 2588,
	0, 1785, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 3149, 0, 0, 262, 0, 1444, 3158,
	0, 0, 0, 0, 0, 0, 262, 0, 3060, 0,
	0, 262, 0, 0, 1023, 0, 262, 1023, 1023, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	1774, 1775, 1776, 0, 0, 2752, 262, 0, 0, 1756,
	0, 0, 0, 0, 1777, 2945, 2945, 0, 0, 0,
	0, 873, 873, 2752, 0, 0, 3164, 2916, 2916, 0,
	3396, 873, 2752, 0, 0, 1772, 0, 0, 0, 0,
	0, 0, 2445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 1778, 1780, 0, 1043, 0,
	0, 3428, 1789, 3149, 0, 0, 0, 1818, 3159, 0,
	0, 1818, 0, 3436, 0, 0, 0, 0, 0, 0,
	3160, 1765, 1766, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1771, 3477, 3478, 0, 0, 0,
	0, 0, 0, 0, 0, 3904, 3164, 1062, 1062, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1913,
	0, 0, 0, 0, 1787, 0, 0, 0, 3159, 1762,
	1763, 1769, 1790, 1768, 1764, 0, 1761, 1759, 1760, 1752,
	1753, 1754, 1755, 1757, 1758, 0, 0, 262, 0, 4426,
	0, 0, 0, 1485, 109, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 3160, 3155, 3156, 3157, 0, 0, 0,
	1307, 3154, 3152, 3153, 3145, 3146, 3147, 3148, 3150, 3151,
	0, 0, 0, 0, 0, 0, 0, 1062, 1777, 0,
	0, 2752, 2752, 1048, 3360, 2752, 0, 1048, 0, 0,
	0, 0, 3984, 0, 3984, 1485, 0, 0, 0, 1772,
	0, 0, 0, 0, 0, 2752, 0, 3300, 0, 0,
	0, 1485, 1485, 262, 3289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3289, 0, 262,
	3289, 0, 262, 0, 0, 0, 1487, 0, 1493, 0,
	1499, 0, 0, 0, 0, 0, 0, 2752, 0, 2752,
	262, 0, 0, 3160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2752, 0, 0,
	0, 0, 4060, 0, 0, 0, 0, 3155, 3156, 3157,
	0, 0, 0, 262, 3154, 3152, 3153, 3145, 3146, 3147,
	3148, 3150, 3151, 262, 0, 1588, 0, 1593, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1602, 0, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3984, 0, 0, 1485, 0, 1768, 1764, 0,
	1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 109, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1669, 0, 0, 1675, 3155, 3156, 3157,
	0, 0, 0, 0, 3154, 3152, 3153, 3145, 3146, 3147,
	3148, 3150, 3151, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 109, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2752, 0, 3300, 0, 0,
	4170, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 4190, 0, 4190, 0, 0,
	0, 0, 0, 1748, 1749, 0, 0, 0, 0, 1801,
	1802, 1803, 1804, 1805, 1806, 1807, 0, 0, 0, 760,
	109, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	1282, 0, 0, 1751, 0, 0, 3769, 0, 0, 0,
	1819, 0, 0, 0, 0, 3289, 1832, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4170, 1750, 0,
	0, 0, 0, 0, 0, 2752, 0, 0, 1770, 0,
	0, 0, 0, 0, 0, 0, 0, 1767, 0, 0,
	0, 0, 0, 4258, 0, 0, 0, 0, 0, 0,
	1131, 0, 0, 0, 0, 1485, 0, 0, 0, 0,
	0, 0, 3841, 3842, 3843, 0, 0, 3984, 3984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1296,
	0, 0, 0, 0, 0, 262, 262, 0, 0, 0,
	2445, 3053, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1890, 1890, 1890, 0, 0, 0, 0, 0, 3583,
	0, 1818, 1773, 1774, 1775, 1776, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 3360, 4323, 0, 0,
	0, 0, 0, 0, 4170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3984, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3984, 0, 0, 0, 0, 1778, 1780,
	0, 0, 0, 0, 0, 0, 1748, 1749, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1765, 1766, 0, 0, 0, 1779,
	0, 0, 0, 0, 4060, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3984, 0, 262, 3984, 0, 0, 0, 1771, 0, 0,
	0, 0, 0, 3300, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 0, 1048, 0,
	0, 1770, 0, 0, 0, 0, 0, 0, 0, 1485,
	1767, 1485, 0, 0, 3946, 3947, 0, 0, 0, 0,
	0, 0, 0, 0, 1205, 0, 0, 0, 0, 0,
	0, 0, 0, 1222, 0, 0, 0, 0, 0, 0,
	1205, 0, 0, 4425, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4190, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2752, 0,
	0, 0, 0, 0, 0, 1773, 1774, 1775, 1776, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 262,
	0, 1777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1772, 0, 0, 1296, 3583, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1778, 1780, 1485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 1766, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 109, 0, 109, 109,
	109, 0, 0, 0, 0, 0, 0, 4111, 0, 4113,
	1771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 109, 0, 109, 109, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2752, 0, 0, 0,
	0, 0, 0, 3984, 0, 3984, 0, 0, 1485, 0,
	1768, 1764, 0, 1761, 1759, 1760, 1752, 1753, 1754, 1755,
	1757, 1758, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1485, 0, 0, 0, 0, 1748, 1749, 0,
	1781, 1782, 1783, 1791, 1792, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 0, 0, 0, 0, 1784,
	1779, 0, 0, 0, 0, 0, 1205, 1751, 2945, 1043,
	0, 0, 0, 0, 0, 1772, 1797, 2752, 0, 0,
	0, 0, 0, 109, 109, 0, 0, 0, 0, 0,
	0, 0, 2945, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1750, 0, 0, 0, 4227, 0, 0, 0,
	0, 0, 1770, 0, 0, 0, 0, 0, 0, 0,
	0, 1767, 0, 0, 2360, 0, 2364, 0, 0, 0,
	0, 0, 0, 2378, 0, 0, 0, 0, 0, 0,
	2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 0, 2427, 0, 2429, 2430,
	2431, 2432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 1774, 1775, 1776,
	2456, 0, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 1819, 0, 1768, 1764, 2471, 1761, 1759, 1760, 1752,
	1753, 1754, 1755, 1757, 1758, 0, 0, 0, 0, 0,
	0, 2501, 2504, 2507, 2510, 0, 2514, 2515, 2516, 2517,
	2518, 2519, 2520, 1788, 0, 0, 1798, 0, 0, 0,
	0, 0, 1778, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 1222, 0, 2580, 0, 2591, 2593, 2598, 1794,
	0, 1795, 0, 0, 0, 0, 0, 0, 1765, 1766,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1222, 0, 0, 0,
	1222, 1771, 0, 0, 0, 0, 0, 0, 1222, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1296, 1296, 0, 1205, 1205, 0, 0, 1222,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 1296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 1222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1222, 0, 0, 0, 0,
	1222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1748, 1749, 1222, 1781,
	1782, 1783, 1791, 1792, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 1789, 0, 0, 0, 0, 1784, 1779,
	0, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	1748, 1749, 0, 0, 0, 1797, 1791, 1792, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	1751, 1750, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 1770, 0, 0, 0, 0, 0, 0, 0, 0,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1750, 0, 2877, 2878, 0,
	2880, 0, 0, 0, 0, 1770, 0, 0, 0, 0,
	0, 109, 0, 0, 1767, 1787, 0, 0, 0, 0,
	1762, 1763, 1769, 1790, 1768, 1764, 0, 1761, 1759, 1760,
	1752, 1753, 1754, 1755, 1757, 1758, 0, 1205, 0, 0,
	3912, 0, 0, 0, 3911, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 1774, 1775, 1776, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 1773,
	1774, 1775, 1776, 0, 0, 0, 0, 0, 0, 1756,
	0, 0, 1788, 0, 0, 1798, 0, 0, 0, 0,
	0, 1778, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3003, 0, 0, 1794, 0,
	1795, 0, 0, 0, 0, 0, 1788, 1765, 1766, 1798,
	0, 0, 0, 0, 0, 1778, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1222, 0, 1222,
	1771, 1765, 1766, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1222, 1801, 1802, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 0, 1771, 0, 1222, 0, 0, 0,
	0, 0, 109, 1796, 0, 0, 0, 0, 1205, 0,
	0, 0, 0, 0, 0, 0, 1205, 0, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	3054, 3055, 0, 0, 0, 0, 3061, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3075, 3076, 0, 0, 0,
	0, 2471, 1222, 0, 0, 0, 0, 0, 0, 0,
	3083, 0, 0, 1222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 0, 3097, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1222, 0, 0,
	0, 0, 0, 3109, 0, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1789, 0, 0, 0, 0, 0, 0, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 1789, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 2598, 2598, 2598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1890, 0, 0,
	0, 0, 0, 0, 0, 3200, 0, 1222, 1222, 0,
	0, 0, 0, 0, 1787, 0, 0, 1222, 0, 1762,
	1763, 1769, 1790, 1768, 1764, 0, 1761, 1759, 1760, 1752,
	1753, 1754, 1755, 1757, 1758, 0, 0, 0, 0, 3118,
	0, 0, 0, 3119, 0, 0, 0, 0, 1787, 0,
	0, 0, 0, 0, 0, 0, 1790, 1768, 1764, 0,
	1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1048, 0,
	0, 1222, 0, 1222, 0, 1222, 0, 0, 0, 0,
	0, 0, 1048, 0, 0, 0, 0, 0, 0, 0,
	0, 1222, 1222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1222, 1748, 1749, 0, 1781, 1782, 1783, 1791,
	1792, 1793, 0, 0, 1222, 3319, 1222, 1222, 1222, 0,
	0, 0, 0, 0, 0, 1784, 1779, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1770, 0,
	1108, 0, 0, 0, 0, 0, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 263, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	1970, 1222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 1773, 1774, 1775, 1776, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1748, 1749, 0, 1781, 1782, 1783, 1791, 1792, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1788,
	0, 0, 1798, 1784, 1779, 0, 0, 0, 1778, 1780,
	0, 1751, 0, 0, 0, 0, 0, 0, 1222, 0,
	1797, 0, 0, 0, 109, 1794, 0, 1795, 0, 0,
	0, 0, 0, 0, 1765, 1766, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1750, 0, 109, 0,
	0, 0, 1786, 0, 0, 0, 1770, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 0, 1771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1222, 0, 0, 0, 2378, 0, 0, 1222, 0, 0,
	3537, 3538, 0, 0, 3541, 0, 1222, 0, 3544, 0,
	0, 0, 0, 0, 0, 0, 0, 3548, 0, 0,
	1796, 0, 0, 1222, 0, 0, 3555, 0, 0, 3200,
	0, 0, 0, 0, 0, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 3567, 0, 0, 0, 0, 0,
	1773, 1774, 1775, 1776, 0, 0, 0, 0, 0, 0,
	1756, 0, 0, 0, 3590, 3591, 0, 3592, 3593, 3594,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 109, 3600, 0, 0, 0, 3602,
	0, 0, 0, 0, 0, 0, 0, 1788, 0, 0,
	1798, 1777, 0, 0, 0, 0, 1778, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3630, 3631, 1772, 1794, 0, 1795, 1222, 1222, 0, 0,
	0, 0, 1765, 1766, 0, 0, 0, 0, 3642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1789,
	1786, 0, 0, 3651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1771, 0, 0, 1222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 3697,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1222, 0, 0, 0, 0, 0, 0, 0, 0, 3708,
	0, 1787, 0, 0, 1222, 0, 1762, 1763, 1769, 1790,
	1768, 1764, 0, 1761, 1759, 1760, 1752, 1753, 1754, 1755,
	1757, 1758, 0, 0, 0, 0, 2467, 0, 0, 0,
	2468, 0, 0, 3736, 0, 0, 0, 0, 0, 1777,
	0, 0, 0, 0, 0, 0, 0, 1222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1222, 0,
	0, 0, 0, 0, 0, 0, 0, 1789, 0, 0,
	1222, 0, 1222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1890, 0, 0, 0, 0, 0, 0,
	0, 0, 3836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1787,
	0, 0, 0, 0, 1762, 1763, 1769, 1790, 1768, 1764,
	0, 1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758,
	0, 0, 0, 0, 0, 0, 0, 0, 3910, 0,
	0, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3882, 3883, 0,
	0, 705, 0, 3887, 3888, 0, 706, 0, 3891, 3892,
	0, 0, 0, 0, 263, 3896, 263, 263, 0, 0,
	263, 0, 1305, 0, 0, 0, 3900, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3905, 0, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 708, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 1305, 263, 263, 0,
	1305, 263, 263, 0, 0, 0, 0, 709, 1305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1305, 0, 263, 263, 0,
	0, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1305, 0, 0, 0, 0,
	1305, 263, 263, 0, 712, 0, 0, 713, 0, 0,
	0, 0, 0, 0, 1305, 0, 0, 0, 0, 0,
	0, 0, 0, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 727, 0, 0,
	0, 1222, 1222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1222, 1305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1222, 263, 0,
	1222, 0, 0, 0, 0, 0, 724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 1970,
	0, 0, 0, 1222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1222, 1222,
	0, 0, 0, 0, 0, 0, 1211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 734, 0, 715, 0, 0, 0,
	0, 0, 4127, 4128, 4129, 1222, 0, 0, 0, 0,
	1970, 0, 257, 257, 672, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 735, 2378, 716, 0, 4138, 4139,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1222, 0, 4147, 4150, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 736, 0, 0, 1222, 0, 1222, 0,
	717, 0, 0, 0, 0, 732, 733, 730, 0, 0,
	0, 0, 0, 725, 0, 1222, 718, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1222, 0, 0, 0,
	1222, 4191, 0, 0, 0, 0, 0, 0, 0, 4198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4205, 1222, 0, 1048, 0, 719, 0, 726,
	1222, 0, 1222, 0, 0, 0, 1222, 4213, 720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 721, 0, 1222, 0, 0, 729, 0, 0,
	0, 0, 0, 263, 0, 0, 1222, 0, 0, 0,
	0, 738, 0, 0, 1305, 0, 0, 0, 263, 263,
	263, 0, 723, 1222, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 1305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1222, 1222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 1222, 0, 0, 0, 0, 0, 0, 1748, 1749,
	0, 1781, 1782, 1783, 1791, 1792, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 1305, 0, 0, 0, 0, 0, 1751, 0,
	0, 1222, 0, 1305, 1222, 0, 0, 1797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4328, 0, 1305, 4331, 0,
	0, 0, 0, 1750, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1770, 0, 0, 0, 0, 0, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1048, 1048, 0, 0, 0, 1222, 0, 0, 0, 0,
	4379, 0, 0, 0, 0, 1970, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1773, 1774, 1775,
	1776, 0, 0, 0, 1970, 1970, 0, 1756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2378, 0, 263, 1305, 1305, 263,
	0, 0, 0, 4150, 0, 1970, 0, 1305, 0, 0,
	0, 0, 0, 0, 1788, 0, 0, 1798, 0, 0,
	0, 0, 0, 1778, 1780, 0, 0, 0, 0, 0,
	0, 0, 1222, 1222, 0, 0, 0, 0, 0, 0,
	1048, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	1766, 0, 263, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 263, 0, 0, 1222, 0, 1786, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1771, 0, 263, 0, 263, 0, 0, 0,
	0, 0, 263, 0, 0, 4494, 4494, 4494, 0, 0,
	0, 1305, 0, 1305, 0, 1305, 0, 0, 1095, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1305, 1305, 0, 0, 4515, 0, 0, 0, 0,
	0, 0, 1305, 263, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 1305, 0, 1305, 1305, 1305, 0,
	0, 0, 0, 0, 261, 261, 261, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	263, 0, 263, 0, 263, 0, 263, 0, 263, 4494,
	0, 0, 0, 801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 801,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 1772, 0, 1222,
	0, 0, 1222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	0, 0, 0, 0, 1789, 0, 0, 0, 0, 0,
	1268, 0, 1268, 1268, 0, 0, 0, 0, 0, 0,
	0, 1305, 0, 0, 0, 0, 0, 0, 0, 0,
	1222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1222, 0, 0, 0, 0, 0,
	4494, 4640, 0, 0, 0, 1222, 1222, 1222, 0, 4644,
	0, 1355, 0, 0, 0, 0, 0, 1461, 0, 0,
	0, 0, 1222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1222, 0, 0,
	0, 1218, 0, 1222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1787, 0, 1305, 0,
	0, 1762, 1763, 1769, 1790, 1768, 1764, 1222, 1761, 1759,
	1760, 1752, 1753, 1754, 1755, 1757, 1758, 0, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1586, 1587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 1305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 1222, 0, 0, 0, 0,
	0, 0, 0, 1222, 0, 0, 0, 1222, 0, 1222,
	0, 0, 0, 0, 0, 0, 1222, 0, 0, 0,
	0, 0, 0, 0, 1696, 0, 0, 1222, 1222, 0,
	0, 0, 0, 0, 263, 0, 1222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 263, 0, 0,
	1222, 263, 1222, 263, 0, 0, 0, 0, 0, 0,
	263, 263, 0, 0, 0, 0, 1305, 1305, 0, 0,
	263, 0, 0, 0, 1222, 0, 0, 0, 0, 722,
	0, 0, 0, 0, 1222, 0, 1222, 0, 0, 1222,
	0, 0, 0, 0, 0, 0, 0, 0, 1222, 705,
	0, 0, 0, 0, 706, 0, 0, 0, 1305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 1222, 1222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 707, 0, 0, 0, 0, 1222, 0,
	0, 0, 263, 0, 708, 0, 0, 0, 0, 0,
	1222, 0, 0, 0, 0, 1222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 709, 0, 0, 0, 263,
	1305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1222, 0, 0, 0, 1305, 0, 0, 728, 0, 0,
	1222, 1222, 1222, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 1222, 0, 0, 0, 710, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 263, 0, 1305, 0, 0,
	711, 0, 263, 1222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1928,
	0, 0, 712, 0, 1970, 713, 0, 0, 1305, 0,
	0, 0, 0, 0, 1937, 0, 1461, 0, 0, 0,
	1305, 737, 1305, 0, 1222, 0, 1222, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 1305, 0, 0,
	0, 0, 0, 0, 0, 727, 0, 1222, 0, 0,
	0, 0, 263, 0, 263, 0, 1268, 0, 0, 0,
	0, 0, 263, 1461, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 261, 0, 261, 261, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 263, 263, 263, 724, 0, 0, 1222, 0, 263,
	0, 0, 263, 0, 1222, 0, 0, 0, 0, 1222,
	1222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 261, 261, 0, 0, 261,
	261, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 801, 0, 0, 0,
	0, 0, 0, 0, 1222, 0, 0, 1222, 0, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1222, 1222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 735, 0, 716, 261, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 0, 0, 0, 0, 0, 261,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 0, 0, 0, 717, 0,
	0, 0, 0, 732, 733, 730, 0, 0, 0, 0,
	0, 725, 0, 0, 718, 0, 0, 0, 1222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 719, 0, 726, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 0, 2196, 0,
	0, 0, 2203, 0, 0, 0, 261, 0, 0, 0,
	721, 0, 0, 0, 2216, 729, 0, 0, 1222, 0,
	0, 1222, 0, 0, 0, 1222, 261, 0, 0, 738,
	2228, 0, 2228, 0, 0, 1222, 1222, 0, 2235, 0,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 2203,
	0, 0, 2260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1305, 0, 0, 0, 0,
	0, 0, 0, 2280, 0, 0, 0, 0, 0, 0,
	1305, 0, 0, 0, 0, 0, 2293, 0, 2295, 0,
	2297, 0, 2299, 0, 2300, 0, 0, 0, 0, 0,
	0, 0, 0, 1305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1305, 1305,
	0, 0, 0, 793, 0, 263, 0, 0, 0, 263,
	263, 0, 0, 0, 2322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 1305, 0, 0, 1748, 1749,
	0, 1781, 1782, 1783, 1791, 1792, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 1779, 0, 0, 0, 0, 0, 0, 1751, 0,
	0, 263, 263, 0, 1305, 263, 0, 1797, 0, 0,
	0, 0, 263, 0, 0, 1912, 0, 1218, 0, 0,
	0, 261, 0, 0, 0, 0, 1305, 263, 1305, 0,
	0, 0, 0, 1750, 0, 0, 261, 1912, 261, 0,
	0, 0, 0, 1770, 801, 1305, 0, 0, 0, 0,
	0, 801, 1767, 0, 0, 0, 1305, 0, 0, 0,
	1305, 0, 0, 0, 0, 0, 0, 0, 819, 0,
	0, 1222, 0, 1222, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 1305, 0, 261, 0, 0, 821, 263,
	1305, 0, 1305, 822, 0, 0, 1305, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 1305, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1305, 1773, 1774, 1775,
	1776, 0, 823, 263, 840, 0, 0, 1756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	0, 0, 0, 0, 825, 0, 2655, 0, 1305, 1305,
	0, 0, 0, 0, 1788, 0, 263, 1798, 0, 0,
	0, 0, 0, 1778, 1780, 0, 849, 0, 0, 0,
	0, 1305, 826, 0, 0, 0, 0, 0, 0, 0,
	1794, 0, 1795, 0, 0, 0, 847, 0, 0, 1765,
	1766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 820,
	0, 1305, 0, 263, 1305, 263, 0, 0, 0, 0,
	0, 0, 1771, 0, 0, 0, 0, 0, 0, 0,
	2701, 827, 0, 1268, 828, 0, 0, 1268, 0, 1268,
	0, 0, 0, 0, 0, 851, 0, 0, 0, 0,
	737, 263, 0, 0, 0, 0, 2216, 0, 0, 0,
	0, 0, 0, 0, 261, 1796, 0, 801, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 1305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 850, 261, 0, 0, 0, 0, 0,
	261, 0, 0, 845, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 0,
	0, 0, 261, 0, 261, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 1461, 0, 1772, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 829, 0, 1789, 0, 0, 0, 0, 0,
	0, 261, 0, 831, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2203,
	0, 0, 0, 0, 0, 261, 0, 0, 2216, 0,
	0, 0, 0, 832, 0, 1305, 0, 801, 261, 0,
	261, 0, 261, 0, 261, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 841,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	736, 0, 0, 0, 0, 0, 0, 0, 0, 2976,
	0, 0, 818, 0, 842, 0, 261, 0, 0, 0,
	0, 0, 0, 833, 0, 0, 1787, 0, 2987, 0,
	2990, 1762, 1763, 1769, 1790, 1768, 1764, 0, 1761, 1759,
	1760, 1752, 1753, 1754, 1755, 1757, 1758, 839, 0, 0,
	0, 0, 0, 0, 0, 3553, 0, 0, 0, 0,
	0, 0, 0, 0, 834, 0, 0, 0, 835, 854,
	0, 853, 0, 0, 0, 836, 3015, 1461, 3017, 1461,
	0, 0, 0, 0, 0, 3023, 0, 0, 0, 837,
	1303, 0, 0, 0, 846, 0, 0, 0, 0, 0,
	855, 0, 852, 0, 0, 0, 0, 0, 738, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 1268,
	0, 0, 0, 0, 0, 0, 0, 3051, 0, 1305,
	0, 0, 1305, 263, 1361, 0, 0, 0, 1361, 0,
	0, 0, 0, 0, 263, 0, 1303, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 263, 0, 0, 1303, 0, 0,
	1305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1303, 0, 1305, 1305, 1305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1218, 0,
	0, 0, 1305, 1303, 0, 0, 0, 0, 1303, 0,
	0, 0, 0, 0, 1218, 0, 0, 1305, 0, 0,
	0, 263, 1303, 1305, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 1305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 261, 0, 0, 0, 261,
	0, 261, 0, 0, 0, 0, 0, 0, 261, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 1100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1305, 0, 1305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1305, 1305, 0,
	0, 0, 0, 0, 261, 0, 1305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1268, 0, 0, 0, 1461, 1461, 0, 0, 0,
	0, 263, 0, 0, 1305, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 1305, 0, 1305, 263, 0, 1305,
	263, 0, 0, 0, 0, 0, 3287, 0, 1305, 0,
	0, 0, 0, 801, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1305, 1305,
	0, 261, 0, 801, 0, 0, 0, 3338, 3340, 0,
	261, 2216, 0, 0, 0, 0, 0, 0, 1305, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	1305, 263, 0, 0, 0, 1305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 1361, 0, 0, 0, 0, 0, 0, 0,
	1305, 1305, 1305, 0, 793, 0, 0, 0, 0, 0,
	261, 793, 261, 1305, 1303, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1305, 0, 0, 0, 3425, 0, 0,
	0, 3429, 0, 0, 0, 0, 0, 0, 261, 261,
	261, 261, 0, 0, 0, 0, 0, 261, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1303, 0, 0, 0, 1305, 0, 1305, 0, 0, 0,
	0, 1303, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 1305, 0, 261,
	0, 0, 3482, 0, 0, 1361, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 1748, 1749, 0, 1781, 1782,
	1783, 1791, 1792, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 1779, 0,
	0, 0, 0, 0, 0, 1751, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 1305, 0, 3522,
	0, 1461, 0, 0, 1305, 263, 0, 0, 0, 1305,
	1305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1770, 0, 0, 0, 0, 0, 0, 3535, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1305, 0, 0, 1305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1303, 1303, 0, 0, 0,
	0, 0, 0, 0, 0, 1361, 0, 0, 0, 0,
	0, 0, 0, 263, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 1774, 1775, 1776, 0, 0,
	0, 0, 0, 0, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 0, 0, 1798, 0, 0, 0, 0, 1218,
	1778, 1780, 0, 0, 0, 0, 0, 0, 0, 1303,
	0, 1303, 0, 1303, 0, 1218, 0, 1794, 0, 1795,
	0, 0, 263, 0, 0, 0, 1765, 1766, 0, 1303,
	1303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1303, 0, 0, 0, 1786, 1912, 0, 0, 0, 0,
	0, 0, 1303, 0, 1303, 1303, 1303, 0, 0, 1771,
	263, 0, 0, 0, 0, 1305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1305, 1305, 793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1305, 261, 0, 0, 0, 261, 261, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1304, 0, 261,
	261, 0, 0, 261, 0, 0, 0, 0, 0, 1361,
	1912, 0, 0, 1777, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 1362, 0, 0, 0, 1362, 0, 0, 0, 2216,
	0, 0, 0, 1304, 0, 0, 0, 0, 0, 0,
	2216, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	3800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1304, 2216, 0, 261, 263, 0,
	3818, 0, 0, 0, 0, 0, 1361, 0, 0, 0,
	0, 801, 0, 0, 0, 0, 0, 0, 0, 261,
	1304, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1304, 261, 0, 0, 0, 1304, 0, 0, 0, 0,
	0, 1218, 0, 0, 0, 0, 0, 0, 0, 1304,
	0, 0, 0, 0, 0, 0, 0, 3867, 0, 0,
	0, 0, 0, 1787, 0, 1361, 0, 0, 1762, 1763,
	1769, 1790, 1768, 1764, 261, 1761, 1759, 1760, 1752, 1753,
	1754, 1755, 1757, 1758, 0, 0, 0, 0, 0, 0,
	0, 1361, 3121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 261, 0, 0, 0, 0, 0, 0,
	1748, 1749, 0, 1781, 1782, 1783, 1791, 1792, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 1779, 0, 0, 0, 0, 0, 261,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1303, 1303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4001, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2216, 0, 0, 0, 0, 0, 1773,
	1774, 1775, 1776, 0, 0, 0, 0, 0, 1361, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1218, 1218, 1303, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 0, 0, 1798,
	0, 0, 0, 0, 0, 1778, 1780, 2216, 0, 0,
	0, 0, 0, 793, 0, 1303, 0, 4082, 0, 0,
	0, 0, 1794, 0, 1795, 0, 0, 0, 0, 0,
	0, 1765, 1766, 0, 0, 0, 0, 0, 0, 1362,
	0, 0, 0, 0, 0, 0, 1303, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 1303, 0,
	1303, 1304, 0, 0, 1771, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 1304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1362, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 4179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 261, 0, 1772,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2216, 1218, 0, 0, 0, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1304, 1304, 0, 0, 0, 0, 0, 0,
	0, 0, 1362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4299,
	1461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1787, 0,
	0, 0, 0, 1762, 1763, 1769, 1790, 1768, 1764, 0,
	1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 0,
	0, 0, 0, 0, 0, 0, 0, 3120, 0, 0,
	0, 1748, 1749, 0, 1781, 1782, 1783, 1791, 1792, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 1779, 0, 1304, 0, 1304, 0,
	1304, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 0, 1218, 0, 0, 1304, 1304, 0, 0,
	1361, 1218, 0, 0, 0, 0, 0, 1304, 0, 0,
	0, 0, 0, 0, 1912, 0, 1750, 0, 0, 1304,
	0, 1304, 1304, 1304, 0, 0, 1770, 0, 0, 0,
	0, 0, 0, 1361, 0, 1767, 4384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1912, 0,
	1912, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1361, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 1303, 1303, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1773, 1774, 1775, 1776, 0, 0, 261, 0, 0, 0,
	1756, 0, 0, 4435, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1788, 0, 261,
	1798, 0, 0, 4471, 0, 0, 1778, 1780, 0, 261,
	0, 0, 1303, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1794, 0, 1795, 0, 0, 0, 0,
	0, 0, 1765, 1766, 1303, 0, 1303, 0, 1912, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 1361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1303, 1771, 0, 0, 1303, 0,
	0, 0, 0, 1362, 4531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1303, 0, 0, 0, 0, 0, 0, 1303, 0,
	1303, 0, 0, 0, 1361, 0, 0, 0, 1796, 0,
	0, 793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1303, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 1303, 0, 0, 0, 0, 0,
	0, 0, 1362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 1362, 0,
	0, 0, 0, 0, 0, 0, 1303, 1303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1777,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1789, 0, 1361,
	0, 0, 1361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1748, 1749, 0, 1781, 1782, 1783, 1791, 1792,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1304, 1304, 0, 1784, 1779, 0, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 0, 1912, 1912, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 261, 1362, 0, 0, 1361, 1750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1770, 0, 0,
	0, 0, 0, 1361, 0, 0, 1767, 0, 0, 1787,
	0, 0, 0, 0, 1762, 1763, 1769, 1790, 1768, 1764,
	0, 1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758,
	0, 0, 0, 0, 0, 0, 0, 0, 3117, 0,
	0, 0, 0, 0, 0, 0, 1912, 0, 0, 0,
	0, 0, 0, 0, 0, 1362, 0, 0, 0, 1912,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1304,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 1773, 1774, 1775, 1776, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1304, 0, 0, 0, 1912, 0, 261, 1912,
	0, 0, 0, 0, 0, 0, 0, 0, 1788, 0,
	0, 1798, 0, 1361, 0, 0, 0, 1778, 1780, 0,
	0, 0, 0, 1304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1794, 1304, 1795, 1304, 0, 0,
	0, 0, 0, 1765, 1766, 0, 0, 0, 0, 0,
	0, 0, 1304, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1303, 0, 0,
	1303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	1777, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 0, 0, 0, 0, 0, 0, 1303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1789, 0,
	0, 0, 0, 1303, 1303, 1303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1303, 0, 0, 0, 0, 0, 0, 0, 0, 1912,
	0, 1912, 0, 0, 0, 1303, 0, 0, 0, 0,
	0, 1361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1787, 0, 0, 0, 0, 1762, 1763, 1769, 1790, 1768,
	1764, 0, 1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 3116,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1748, 1749, 0, 1781, 1782, 1783, 1791, 1792, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1362, 0, 0, 1784, 1779, 1361, 0, 1361, 0, 0,
	0, 1751, 0, 0, 0, 1362, 0, 0, 0, 0,
	1797, 0, 0, 0, 0, 1303, 1303, 0, 0, 0,
	0, 0, 0, 0, 1361, 0, 0, 0, 1362, 0,
	0, 0, 0, 0, 0, 0, 1750, 0, 0, 0,
	0, 0, 0, 1304, 1304, 0, 1770, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1303, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1361, 0, 1303, 0, 0, 1303, 0, 0,
	1304, 0, 0, 0, 0, 0, 1361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1303, 1303, 0, 1304,
	1773, 1774, 1775, 1776, 0, 0, 0, 0, 0, 0,
	1756, 0, 0, 0, 0, 0, 1303, 0, 0, 0,
	0, 1304, 0, 1304, 0, 0, 0, 0, 1361, 0,
	0, 0, 0, 1303, 0, 0, 0, 0, 0, 0,
	1362, 0, 0, 0, 0, 0, 0, 1788, 0, 0,
	1798, 1304, 0, 0, 0, 1304, 1778, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1303, 1303,
	1303, 0, 0, 1794, 0, 1795, 0, 0, 1304, 0,
	0, 1361, 1765, 1766, 0, 1304, 0, 1304, 0, 0,
	0, 1362, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 1304,
	0, 1361, 0, 0, 0, 1771, 0, 0, 0, 0,
	0, 1304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1361, 0, 1303, 0, 0, 0, 1796, 0,
	0, 0, 0, 1304, 1304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1361, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1748, 1749, 0, 1781, 1782,
	1783, 1791, 1792, 1793, 0, 0, 1362, 0, 0, 1362,
	0, 0, 0, 0, 0, 1361, 0, 1784, 1779, 1777,
	0, 0, 1303, 0, 0, 1751, 0, 1303, 1303, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 0,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1750, 0, 0, 0, 0, 0, 0, 1789, 0, 0,
	1770, 0, 1361, 0, 0, 1303, 0, 0, 0, 1767,
	0, 0, 0, 1362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 1774, 1775, 1776, 0, 0,
	0, 0, 0, 0, 1756, 0, 0, 0, 0, 1787,
	0, 0, 0, 0, 1762, 1763, 1769, 1790, 1768, 1764,
	0, 1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758,
	0, 0, 0, 0, 0, 0, 0, 0, 3115, 0,
	0, 1788, 0, 0, 1798, 0, 0, 0, 0, 0,
	1778, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1794, 0, 1795,
	1362, 0, 0, 0, 0, 0, 1765, 1766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1303, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 1303, 1303, 0, 0, 0, 0, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1748,
	1749, 0, 1781, 1782, 1783, 1791, 1792, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 1779, 0, 0, 0, 0, 0, 0, 1751,
	0, 0, 0, 1777, 1304, 0, 0, 1304, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1750, 1748, 1749, 0, 1781, 1782,
	1783, 1791, 1792, 1793, 1770, 0, 0, 0, 0, 0,
	0, 1789, 0, 1767, 0, 1304, 0, 1784, 1779, 0,
	0, 0, 0, 0, 0, 1751, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 0,
	1304, 1304, 1304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1304, 0, 0,
	1750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1770, 0, 1304, 0, 0, 0, 0, 0, 1362, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 1774,
	1775, 1776, 0, 0, 0, 0, 0, 0, 1756, 0,
	0, 0, 1362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1787, 0, 0, 0, 0, 1762, 1763,
	1769, 1790, 1768, 1764, 0, 1761, 1759, 1760, 1752, 1753,
	1754, 1755, 1757, 1758, 0, 1788, 0, 0, 1798, 0,
	0, 0, 2468, 0, 1778, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 1774, 1775, 1776, 0, 0,
	0, 1794, 0, 1795, 1756, 0, 0, 0, 0, 0,
	1765, 1766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 0, 1771, 1798, 0, 0, 0, 0, 0,
	1778, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1362, 0, 1362, 0, 0, 1794, 0, 1795,
	0, 0, 0, 0, 0, 0, 1765, 1766, 0, 0,
	0, 0, 1304, 1304, 0, 0, 1796, 0, 0, 0,
	0, 1362, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 0, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1304,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1362,
	0, 1304, 1796, 0, 1304, 0, 0, 0, 0, 0,
	0, 0, 0, 1362, 0, 0, 0, 1777, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 0, 1304, 1304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1304, 0, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1362, 0, 0, 0, 0,
	1304, 0, 0, 1777, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1304, 1304, 1304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1362, 0,
	0, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1362, 0,
	0, 0, 0, 0, 0, 0, 0, 1787, 0, 0,
	0, 0, 1762, 1763, 1769, 1790, 1768, 1764, 0, 1761,
	1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 0, 0,
	0, 0, 4422, 0, 0, 0, 0, 0, 0, 1362,
	0, 1304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1787, 0, 0, 0, 0, 1762, 1763,
	1769, 1790, 1768, 1764, 0, 1761, 1759, 1760, 1752, 1753,
	1754, 1755, 1757, 1758, 0, 0, 0, 0, 4343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1362, 0, 0, 0, 0, 0, 0, 1304,
	0, 0, 0, 0, 1304, 1304, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1362,
	0, 0, 1304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1359, 0, 0,
	1304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1304, 1304, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 1364, 278, 279, 1365, 1366, 1367, 1304, 1368, 618,
	1369, 1370, 1371, 1372, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	1373, 623, 290, 291, 292, 293, 294, 295, 1374, 1375,
	0, 296, 624, 625, 626, 1376, 297, 298, 627, 1377,
	1306, 1378, 299, 300, 301, 302, 303, 304, 305, 0,
	1379, 307, 308, 309, 306, 310, 1380, 311, 0, 312,
	313, 314, 315, 316, 317, 1381, 318, 319, 320, 1163,
	321, 322, 323, 1382, 1383, 1385, 1384, 1386, 1387, 1388,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 1389,
	333, 330, 331, 1390, 334, 332, 335, 1391, 336, 337,
	338, 1392, 1393, 339, 340, 341, 1394, 342, 343, 1395,
	344, 345, 346, 1396, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	1397, 268, 1398, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 1399, 365, 366, 1400, 1401,
	1164, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 1402, 378, 636, 1403, 637, 379,
	1404, 380, 381, 382, 383, 384, 638, 639, 640, 462,
	1166, 385, 386, 1405, 387, 388, 389, 390, 0, 0,
	0, 269, 391, 392, 393, 395, 1406, 1165, 394, 641,
	642, 1407, 643, 1408, 396, 397, 1167, 644, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 1409, 408, 410, 409, 1410, 411, 645,
	1170, 412, 413, 1171, 1411, 414, 0, 0, 0, 415,
	416, 419, 1412, 1413, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 1414,
	270, 1174, 459, 460, 1415, 646, 461, 647, 463, 464,
	1416, 0, 465, 0, 1417, 1418, 467, 468, 469, 1419,
	1420, 470, 471, 648, 1175, 472, 1176, 649, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 1421,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 1422, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 1423, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 1424, 521, 522, 523, 1177, 524, 525, 526,
	527, 655, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 1425, 545, 546, 544,
	547, 548, 549, 1426, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	1427, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 1428, 576, 577,
	0, 573, 564, 1429, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 1430, 586, 659, 660, 661, 662, 1431,
	595, 1432, 587, 588, 589, 663, 590, 664, 1433, 591,
	592, 593, 594, 0, 596, 597, 1434, 1435, 598, 599,
	600, 602, 603, 601, 604, 1436, 605, 1437, 0, 606,
	607, 608, 665, 666, 667, 1438, 610, 609, 611, 668,
	1439, 612, 1440, 1441, 1442, 1443, 613, 614, 669, 615,
	616, 617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1359, 0, 0, 0,
	0, 0, 0, 0, 2633, 0, 0, 0, 0, 0,
	0, 0, 2634, 271, 273, 272, 274, 275, 276, 277,
	1364, 278, 279, 1365, 1366, 1367, 0, 1368, 618, 1369,
	1370, 1371, 1372, 280, 281, 1162, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 1373,
	623, 290, 291, 292, 293, 294, 295, 1374, 1375, 0,
	296, 624, 625, 626, 1376, 297, 298, 627, 1377, 1306,
	1378, 299, 300, 301, 302, 303, 304, 305, 0, 1379,
	307, 308, 309, 306, 310, 1380, 311, 0, 312, 313,
	314, 315, 316, 317, 1381, 318, 319, 320, 1163, 321,
	322, 323, 1382, 1383, 1385, 1384, 1386, 1387, 1388, 324,
	325, 326, 327, 328, 0, 329, 628, 629, 1389, 333,
	330, 331, 1390, 334, 332, 335, 1391, 336, 337, 338,
	1392, 1393, 339, 340, 341, 1394, 342, 343, 1395, 344,
	345, 346, 1396, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 1397,
	268, 1398, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 1399, 365, 366, 1400, 1401, 1164,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 1402, 378, 636, 1403, 637, 379, 1404,
	380, 381, 382, 383, 384, 638, 639, 640, 462, 1166,
	385, 386, 1405, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 1406, 1165, 394, 641, 642,
	1407, 643, 1408, 396, 397, 1167, 644, 1168, 398, 399,
	400, 1169, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 1409, 408, 410, 409, 1410, 411, 645, 1170,
	412, 413, 1171, 1411, 414, 0, 0, 0, 415, 416,
	419, 1412, 1413, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1172, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1173, 458, 448, 1414, 270,
	1174, 459, 460, 1415, 646, 461, 647, 463, 464, 1416,
	0, 465, 0, 1417, 1418, 467, 468, 469, 1419, 1420,
	470, 471, 648, 1175, 472, 1176, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 1421, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 1422, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	1423, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 1424, 521, 522, 523, 1177, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 1425, 545, 546, 544, 547,
	548, 549, 1426, 550, 551, 533, 534, 552, 553, 1178,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 1427,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 1428, 576, 577, 0,
	573, 564, 1429, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 1430, 586, 659, 660, 661, 662, 1431, 595,
	1432, 587, 588, 589, 663, 590, 664, 1433, 591, 592,
	593, 594, 0, 596, 597, 1434, 1435, 598, 599, 600,
	602, 603, 601, 604, 1436, 605, 1437, 0, 606, 607,
	608, 665, 666, 667, 1438, 610, 609, 611, 668, 1439,
	612, 1440, 1441, 1442, 1443, 613, 614, 669, 615, 616,
	617, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1359, 0, 0, 0, 0, 3561, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3563,
	271, 273, 272, 274, 275, 276, 277, 1364, 278, 279,
	1365, 1366, 1367, 0, 1368, 618, 1369, 1370, 1371, 1372,
	280, 281, 1162, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 1373, 623, 290, 291,
	292, 293, 294, 295, 1374, 1375, 0, 296, 624, 625,
	626, 1376, 297, 298, 627, 1377, 1306, 1378, 299, 300,
	301, 302, 303, 304, 305, 0, 1379, 307, 308, 309,
	306, 310, 1380, 311, 0, 312, 313, 314, 315, 316,
	317, 1381, 318, 319, 320, 1163, 321, 322, 323, 1382,
	1383, 1385, 1384, 1386, 1387, 1388, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 1389, 333, 330, 331, 1390,
	334, 332, 335, 1391, 336, 337, 338, 1392, 1393, 339,
	340, 341, 1394, 342, 343, 1395, 344, 345, 346, 1396,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 1397, 268, 1398, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 1399, 365, 366, 1400, 1401, 1164, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	1402, 378, 636, 1403, 637, 379, 1404, 380, 381, 382,
	383, 384, 638, 639, 640, 462, 1166, 385, 386, 1405,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 1406, 1165, 394, 641, 642, 1407, 643, 1408,
	396, 397, 1167, 644, 1168, 398, 399, 400, 1169, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 1409,
	408, 410, 409, 1410, 411, 645, 1170, 412, 413, 1171,
	1411, 414, 0, 0, 0, 415, 416, 419, 1412, 1413,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1172,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1173, 458, 448, 1414, 270, 1174, 459, 460,
	1415, 646, 461, 647, 463, 464, 1416, 0, 465, 0,
	1417, 1418, 467, 468, 469, 1419, 1420, 470, 471, 648,
	1175, 472, 1176, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 1421, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 1422, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 1423, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 1424, 521,
	522, 523, 1177, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 1425, 545, 546, 544, 547, 548, 549, 1426,
	550, 551, 533, 534, 552, 553, 1178, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 1427, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 1428, 576, 577, 0, 573, 564, 1429,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 1430,
	586, 659, 660, 661, 662, 1431, 595, 1432, 587, 588,
	589, 663, 590, 664, 1433, 591, 592, 593, 594, 0,
	596, 597, 1434, 1435, 598, 599, 600, 602, 603, 601,
	604, 1436, 605, 1437, 0, 606, 607, 608, 665, 666,
	667, 1438, 610, 609, 611, 668, 1439, 612, 1440, 1441,
	1442, 1443, 613, 614, 669, 615, 616, 617, 0, 0,
	0, 0, 0, 0, 1359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3938, 271, 273, 272, 274, 275, 276, 277, 1364, 278,
	279, 1365, 1366, 1367, 0, 1368, 618, 1369, 1370, 1371,
	1372, 280, 281, 1162, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 1373, 623, 290,
	291, 292, 293, 294, 295, 1374, 1375, 0, 296, 624,
	625, 626, 1376, 297, 298, 627, 1377, 1306, 1378, 299,
	300, 301, 302, 303, 304, 305, 0, 1379, 307, 308,
	309, 306, 310, 1380, 311, 0, 312, 313, 314, 315,
	316, 317, 1381, 318, 319, 320, 1163, 321, 322, 323,
	1382, 1383, 1385, 1384, 1386, 1387, 1388, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 1389, 333, 330, 331,
	1390, 334, 332, 335, 1391, 336, 337, 338, 1392, 1393,
	339, 340, 341, 1394, 342, 343, 1395, 344, 345, 346,
	1396, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 631, 632, 360, 1397, 268, 1398,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 1399, 365, 366, 1400, 1401, 1164, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 1402, 378, 636, 1403, 637, 379, 1404, 380, 381,
	382, 383, 384, 638, 639, 640, 462, 1166, 385, 386,
	1405, 387, 388, 389, 390, 0, 0, 0, 269, 391,
	392, 393, 395, 1406, 1165, 394, 641, 642, 1407, 643,
	1408, 396, 397, 1167, 644, 1168, 398, 399, 400, 1169,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	1409, 408, 410, 409, 1410, 411, 645, 1170, 412, 413,
	1171, 1411, 414, 0, 0, 0, 415, 416, 419, 1412,
	1413, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1172, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1173, 458, 448, 1414, 270, 1174, 459,
	460, 1415, 646, 461, 647, 463, 464, 1416, 0, 465,
	0, 1417, 1418, 467, 468, 469, 1419, 1420, 470, 471,
	648, 1175, 472, 1176, 649, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 1421, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 652, 491, 653,
	492, 493, 1422, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 1423, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 1424,
	521, 522, 523, 1177, 524, 525, 526, 527, 655, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 1425, 545, 546, 544, 547, 548, 549,
	1426, 550, 551, 533, 534, 552, 553, 1178, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 1427, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 658, 574, 575, 1428, 576, 577, 0, 573, 564,
	1429, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	1430, 586, 659, 660, 661, 662, 1431, 595, 1432, 587,
	588, 589, 663, 590, 664, 1433, 591, 592, 593, 594,
	0, 596, 597, 1434, 1435, 598, 599, 600, 602, 603,
	601, 604, 1436, 605, 1437, 0, 606, 607, 608, 665,
	666, 667, 1438, 610, 609, 611, 668, 1439, 612, 1440,
	1441, 1442, 1443, 613, 614, 669, 615, 616, 617, 0,
	1359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4133, 271, 273, 272,
	274, 275, 276, 277, 1364, 278, 279, 1365, 1366, 1367,
	0, 1368, 618, 1369, 1370, 1371, 1372, 280, 281, 1162,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 1373, 623, 290, 291, 292, 293, 294,
	295, 1374, 1375, 0, 296, 624, 625, 626, 1376, 297,
	298, 627, 1377, 1306, 1378, 299, 300, 301, 302, 303,
	304, 305, 0, 1379, 307, 308, 309, 306, 310, 1380,
	311, 0, 312, 313, 314, 315, 316, 317, 1381, 318,
	319, 320, 1163, 321, 322, 323, 1382, 1383, 1385, 1384,
	1386, 1387, 1388, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 1389, 333, 330, 331, 1390, 334, 332, 335,
	1391, 336, 337, 338, 1392, 1393, 339, 340, 341, 1394,
	342, 343, 1395, 344, 345, 346, 1396, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 1397, 268, 1398, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 1399, 365,
	366, 1400, 1401, 1164, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 1402, 378, 636,
	1403, 637, 379, 1404, 380, 381, 382, 383, 384, 638,
	639, 640, 462, 1166, 385, 386, 1405, 387, 388, 389,
	390, 0, 0, 0, 269, 391, 392, 393, 395, 1406,
	1165, 394, 641, 642, 1407, 643, 1408, 396, 397, 1167,
	644, 1168, 398, 399, 400, 1169, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 1409, 408, 410, 409,
	1410, 411, 645, 1170, 412, 413, 1171, 1411, 414, 0,
	0, 0, 415, 416, 419, 1412, 1413, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1172, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1173,
	458, 448, 1414, 270, 1174, 459, 460, 1415, 646, 461,
	647, 463, 464, 1416, 0, 465, 0, 1417, 1418, 467,
	468, 469, 1419, 1420, 470, 471, 648, 1175, 472, 1176,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 1421, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 1422, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 1423, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 1424, 521, 522, 523, 1177,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 1425,
	545, 546, 544, 547, 548, 549, 1426, 550, 551, 533,
	534, 552, 553, 1178, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 1427, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	1428, 576, 577, 0, 573, 564, 1429, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 1430, 586, 659, 660,
	661, 662, 1431, 595, 1432, 587, 588, 589, 663, 590,
	664, 1433, 591, 592, 593, 594, 0, 596, 597, 1434,
	1435, 598, 599, 600, 602, 603, 601, 604, 1436, 605,
	1437, 0, 606, 607, 608, 665, 666, 667, 1438, 610,
	609, 611, 668, 1439, 612, 1440, 1441, 1442, 1443, 613,
	614, 669, 615, 616, 617, 0, 1359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4010, 271, 273, 272, 274, 275, 276, 277,
	1364, 278, 279, 1365, 1366, 1367, 0, 1368, 618, 1369,
	1370, 1371, 1372, 280, 281, 1162, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 1373,
	623, 290, 291, 292, 293, 294, 295, 1374, 1375, 0,
	296, 624, 625, 626, 1376, 297, 298, 627, 1377, 1306,
	1378, 299, 300, 301, 302, 303, 304, 305, 0, 1379,
	307, 308, 309, 306, 310, 1380, 311, 0, 312, 313,
	314, 315, 316, 317, 1381, 318, 319, 320, 1163, 321,
	322, 323, 1382, 1383, 1385, 1384, 1386, 1387, 1388, 324,
	325, 326, 327, 328, 0, 329, 628, 629, 1389, 333,
	330, 331, 1390, 334, 332, 335, 1391, 336, 337, 338,
	1392, 1393, 339, 340, 341, 1394, 342, 343, 1395, 344,
	345, 346, 1396, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 1397,
	268, 1398, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 1399, 365, 366, 1400, 1401, 1164,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 1402, 378, 636, 1403, 637, 379, 1404,
	380, 381, 382, 383, 384, 638, 639, 640, 462, 1166,
	385, 386, 1405, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 1406, 1165, 394, 641, 642,
	1407, 643, 1408, 396, 397, 1167, 644, 1168, 398, 399,
	400, 1169, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 1409, 408, 410, 409, 1410, 411, 645, 1170,
	412, 413, 1171, 1411, 414, 0, 0, 0, 415, 416,
	419, 1412, 1413, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1172, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1173, 458, 448, 1414, 270,
	1174, 459, 460, 1415, 646, 461, 647, 463, 464, 1416,
	0, 465, 0, 1417, 1418, 467, 468, 469, 1419, 1420,
	470, 471, 648, 1175, 472, 1176, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 1421, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 1422, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	1423, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 1424, 521, 522, 523, 1177, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 1425, 545, 546, 544, 547,
	548, 549, 1426, 550, 551, 533, 534, 552, 553, 1178,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 1427,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 1428, 576, 577, 0,
	573, 564, 1429, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 1430, 586, 659, 660, 661, 662, 1431, 595,
	1432, 587, 588, 589, 663, 590, 664, 1433, 591, 592,
	593, 594, 0, 596, 597, 1434, 1435, 598, 599, 600,
	602, 603, 601, 604, 1436, 605, 1437, 0, 606, 607,
	608, 665, 666, 667, 1438, 610, 609, 611, 668, 1439,
	612, 1440, 1441, 1442, 1443, 613, 614, 669, 615, 616,
	617, 0, 1359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3868, 271,
	273, 272, 274, 275, 276, 277, 1364, 278, 279, 1365,
	1366, 1367, 0, 1368, 618, 1369, 1370, 1371, 1372, 280,
	281, 1162, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 1373, 623, 290, 291, 292,
	293, 294, 295, 1374, 1375, 0, 296, 624, 625, 626,
	1376, 297, 298, 627, 1377, 1306, 1378, 299, 300, 301,
	302, 303, 304, 305, 0, 1379, 307, 308, 309, 306,
	310, 1380, 311, 0, 312, 313, 314, 315, 316, 317,
	1381, 318, 319, 320, 1163, 321, 322, 323, 1382, 1383,
	1385, 1384, 1386, 1387, 1388, 324, 325, 326, 327, 328,
	0, 329, 628, 629, 1389, 333, 330, 331, 1390, 334,
	332, 335, 1391, 336, 337, 338, 1392, 1393, 339, 340,
	341, 1394, 342, 343, 1395, 344, 345, 346, 1396, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 631, 632, 360, 1397, 268, 1398, 0, 0,
	0, 0, 361, 362, 363, 633, 0, 0, 0, 364,
	1399, 365, 366, 1400, 1401, 1164, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 1402,
	378, 636, 1403, 637, 379, 1404, 380, 381, 382, 383,
	384, 638, 639, 640, 462, 1166, 385, 386, 1405, 387,
	388, 389, 390, 0, 0, 0, 269, 391, 392, 393,
	395, 1406, 1165, 394, 641, 642, 1407, 643, 1408, 396,
	397, 1167, 644, 1168, 398, 399, 400, 1169, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 1409, 408,
	410, 409, 1410, 411, 645, 1170, 412, 413, 1171, 1411,
	414, 0, 0, 0, 415, 416, 419, 1412, 1413, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1172, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1173, 458, 448, 1414, 270, 1174, 459, 460, 1415,
	646, 461, 647, 463, 464, 1416, 0, 465, 0, 1417,
	1418, 467, 468, 469, 1419, 1420, 470, 471, 648, 1175,
	472, 1176, 649, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 1421, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 652, 491, 653, 492, 493,
	1422, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 654, 503, 505, 504, 506, 1423, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 1424, 521, 522,
	523, 1177, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 1425, 545, 546, 544, 547, 548, 549, 1426, 550,
	551, 533, 534, 552, 553, 1178, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 1427, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 658,
	574, 575, 1428, 576, 577, 0, 573, 564, 1429, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 1430, 586,
	659, 660, 661, 662, 1431, 595, 1432, 587, 588, 589,
	663, 590, 664, 1433, 591, 592, 593, 594, 0, 596,
	597, 1434, 1435, 598, 599, 600, 602, 603, 601, 604,
	1436, 605, 1437, 0, 606, 607, 608, 665, 666, 667,
	1438, 610, 609, 611, 668, 1439, 612, 1440, 1441, 1442,
	1443, 613, 614, 669, 615, 616, 617, 0, 1359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3579, 271, 273, 272, 274, 275,
	276, 277, 1364, 278, 279, 1365, 1366, 1367, 0, 1368,
	618, 1369, 1370, 1371, 1372, 280, 281, 1162, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 1373, 623, 290, 291, 292, 293, 294, 295, 1374,
	1375, 0, 296, 624, 625, 626, 1376, 297, 298, 627,
	1377, 1306, 1378, 299, 300, 301, 302, 303, 304, 305,
	0, 1379, 307, 308, 309, 306, 310, 1380, 311, 0,
	312, 313, 314, 315, 316, 317, 1381, 318, 319, 320,
	1163, 321, 322, 323, 1382, 1383, 1385, 1384, 1386, 1387,
	1388, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	1389, 333, 330, 331, 1390, 334, 332, 335, 1391, 336,
	337, 338, 1392, 1393, 339, 340, 341, 1394, 342, 343,
	1395, 344, 345, 346, 1396, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 1397, 268, 1398, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 1399, 365, 366, 1400,
	1401, 1164, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 1402, 378, 636, 1403, 637,
	379, 1404, 380, 381, 382, 383, 384, 638, 639, 640,
	462, 1166, 385, 386, 1405, 387, 388, 389, 390, 0,
	0, 0, 269, 391, 392, 393, 395, 1406, 1165, 394,
	641, 642, 1407, 643, 1408, 396, 397, 1167, 644, 1168,
	398, 399, 400, 1169, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 1409, 408, 410, 409, 1410, 411,
	645, 1170, 412, 413, 1171, 1411, 414, 0, 0, 0,
	415, 416, 419, 1412, 1413, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1172, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1173, 458, 448,
	1414, 270, 1174, 459, 460, 1415, 646, 461, 647, 463,
	464, 1416, 0, 465, 0, 1417, 1418, 467, 468, 469,
	1419, 1420, 470, 471, 648, 1175, 472, 1176, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	1421, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 1422, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 1423, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 1424, 521, 522, 523, 1177, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 1425, 545, 546,
	544, 547, 548, 549, 1426, 550, 551, 533, 534, 552,
	553, 1178, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 1427, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 1428, 576,
	577, 0, 573, 564, 1429, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 1430, 586, 659, 660, 661, 662,
	1431, 595, 1432, 587, 588, 589, 663, 590, 664, 1433,
	591, 592, 593, 594, 0, 596, 597, 1434, 1435, 598,
	599, 600, 602, 603, 601, 604, 1436, 605, 1437, 0,
	606, 607, 608, 665, 666, 667, 1438, 610, 609, 611,
	668, 1439, 612, 1440, 1441, 1442, 1443, 613, 614, 669,
	615, 616, 617, 0, 1359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3410, 271, 273, 272, 274, 275, 276, 277, 1364, 278,
	279, 1365, 1366, 1367, 0, 1368, 618, 1369, 1370, 1371,
	1372, 280, 281, 1162, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 1373, 623, 290,
	291, 292, 293, 294, 295, 1374, 1375, 0, 296, 624,
	625, 626, 1376, 297, 298, 627, 1377, 1306, 1378, 299,
	300, 301, 302, 303, 304, 305, 0, 1379, 307, 308,
	309, 306, 310, 1380, 311, 0, 312, 313, 314, 315,
	316, 317, 1381, 318, 319, 320, 1163, 321, 322, 323,
	1382, 1383, 1385, 1384, 1386, 1387, 1388, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 1389, 333, 330, 331,
	1390, 334, 332, 335, 1391, 336, 337, 338, 1392, 1393,
	339, 340, 341, 1394, 342, 343, 1395, 344, 345, 346,
	1396, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 631, 632, 360, 1397, 268, 1398,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 1399, 365, 366, 1400, 1401, 1164, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 1402, 378, 636, 1403, 637, 379, 1404, 380, 381,
	382, 383, 384, 638, 639, 640, 462, 1166, 385, 386,
	1405, 387, 388, 389, 390, 0, 0, 0, 269, 391,
	392, 393, 395, 1406, 1165, 394, 641, 642, 1407, 643,
	1408, 396, 397, 1167, 644, 1168, 398, 399, 400, 1169,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	1409, 408, 410, 409, 1410, 411, 645, 1170, 412, 413,
	1171, 1411, 414, 0, 0, 0, 415, 416, 419, 1412,
	1413, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1172, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1173, 458, 448, 1414, 270, 1174, 459,
	460, 1415, 646, 461, 647, 463, 464, 1416, 0, 465,
	0, 1417, 1418, 467, 468, 469, 1419, 1420, 470, 471,
	648, 1175, 472, 1176, 649, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 1421, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 652, 491, 653,
	492, 493, 1422, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 1423, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 1424,
	521, 522, 523, 1177, 524, 525, 526, 527, 655, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 1425, 545, 546, 544, 547, 548, 549,
	1426, 550, 551, 533, 534, 552, 553, 1178, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 1427, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 658, 574, 575, 1428, 576, 577, 0, 573, 564,
	1429, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	1430, 586, 659, 660, 661, 662, 1431, 595, 1432, 587,
	588, 589, 663, 590, 664, 1433, 591, 592, 593, 594,
	0, 596, 597, 1434, 1435, 598, 599, 600, 602, 603,
	601, 604, 1436, 605, 1437, 0, 606, 607, 608, 665,
	666, 667, 1438, 610, 609, 611, 668, 1439, 612, 1440,
	1441, 1442, 1443, 613, 614, 669, 615, 616, 617, 0,
	1359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2491, 271, 273, 272,
	274, 275, 276, 277, 1364, 278, 279, 1365, 1366, 1367,
	0, 1368, 618, 1369, 1370, 1371, 1372, 280, 281, 1162,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 1373, 623, 290, 291, 292, 293, 294,
	295, 1374, 1375, 0, 296, 624, 625, 626, 1376, 297,
	298, 627, 1377, 1306, 1378, 299, 300, 301, 302, 303,
	304, 305, 0, 1379, 307, 308, 309, 306, 310, 1380,
	311, 0, 312, 313, 314, 315, 316, 317, 1381, 318,
	319, 320, 1163, 321, 322, 323, 1382, 1383, 1385, 1384,
	1386, 1387, 1388, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 1389, 333, 330, 331, 1390, 334, 332, 335,
	1391, 336, 337, 338, 1392, 1393, 339, 340, 341, 1394,
	342, 343, 1395, 344, 345, 346, 1396, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 1397, 268, 1398, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 1399, 365,
	366, 1400, 1401, 1164, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 1402, 378, 636,
	1403, 637, 379, 1404, 380, 381, 382, 383, 384, 638,
	639, 640, 462, 1166, 385, 386, 1405, 387, 388, 389,
	390, 0, 0, 0, 269, 391, 392, 393, 395, 1406,
	1165, 394, 641, 642, 1407, 643, 1408, 396, 397, 1167,
	644, 1168, 398, 399, 400, 1169, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 1409, 408, 410, 409,
	1410, 411, 645, 1170, 412, 413, 1171, 1411, 414, 0,
	0, 0, 415, 416, 419, 1412, 1413, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1172, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1173,
	458, 448, 1414, 270, 1174, 459, 460, 1415, 646, 461,
	647, 463, 464, 1416, 0, 465, 0, 1417, 1418, 467,
	468, 469, 1419, 1420, 470, 471, 648, 1175, 472, 1176,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 1421, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 1422, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 1423, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 1424, 521, 522, 523, 1177,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 1425,
	545, 546, 544, 547, 548, 549, 1426, 550, 551, 533,
	534, 552, 553, 1178, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 1427, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	1428, 576, 577, 0, 573, 564, 1429, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 1430, 586, 659, 660,
	661, 662, 1431, 595, 1432, 587, 588, 589, 663, 590,
	664, 1433, 591, 592, 593, 594, 0, 596, 597, 1434,
	1435, 598, 599, 600, 602, 603, 601, 604, 1436, 605,
	1437, 0, 606, 607, 608, 665, 666, 667, 1438, 610,
	609, 611, 668, 1439, 612, 1440, 1441, 1442, 1443, 613,
	614, 669, 615, 616, 617, 1455, 0, 1359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2177, 0, 271, 273, 272, 274, 275, 276,
	277, 1364, 278, 279, 1365, 1366, 1367, 0, 1368, 618,
	1369, 1370, 1371, 1372, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	1373, 623, 290, 291, 292, 293, 294, 295, 1374, 1375,
	0, 296, 624, 625, 626, 1376, 297, 298, 627, 1377,
	1306, 1378, 299, 300, 301, 302, 303, 304, 305, 0,
	1379, 307, 308, 309, 306, 310, 1380, 311, 0, 312,
	313, 314, 315, 316, 317, 1381, 318, 319, 320, 1163,
	321, 322, 323, 1382, 1383, 1385, 1384, 1386, 1387, 1388,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 1389,
	333, 330, 331, 1390, 334, 332, 335, 1391, 336, 337,
	338, 1392, 1393, 339, 340, 341, 1394, 342, 343, 1395,
	344, 345, 346, 1396, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	1397, 268, 1398, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 1399, 365, 366, 1400, 1401,
	1164, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 1402, 378, 636, 1403, 637, 379,
	1404, 380, 381, 382, 383, 384, 638, 639, 640, 462,
	1166, 385, 386, 1405, 387, 388, 389, 390, 0, 0,
	0, 269, 391, 392, 393, 395, 1406, 1165, 394, 641,
	642, 1407, 643, 1408, 396, 397, 1167, 644, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 1409, 408, 410, 409, 1410, 411, 645,
	1170, 412, 413, 1171, 1411, 414, 0, 0, 0, 415,
	416, 419, 1412, 1413, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 1414,
	270, 1174, 459, 460, 1415, 646, 461, 647, 463, 464,
	1416, 0, 465, 0, 1417, 1418, 467, 468, 469, 1419,
	1420, 470, 471, 648, 1175, 472, 1176, 649, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 1421,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 1422, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 1423, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 1424, 521, 522, 523, 1177, 524, 525, 526,
	527, 655, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 1425, 545, 546, 544,
	547, 548, 549, 1426, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	1427, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 1428, 576, 577,
	0, 573, 564, 1429, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 1430, 586, 659, 660, 661, 662, 1431,
	595, 1432, 587, 588, 589, 663, 590, 664, 1433, 591,
	592, 593, 594, 0, 596, 597, 1434, 1435, 598, 599,
	600, 602, 603, 601, 604, 1436, 605, 1437, 0, 606,
	607, 608, 665, 666, 667, 1438, 610, 609, 611, 668,
	1439, 612, 1440, 1441, 1442, 1443, 613, 614, 669, 615,
	616, 617, 1356, 0, 1359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 1364, 278,
	279, 1365, 1366, 1367, 0, 1368, 618, 1369, 1370, 1371,
	1372, 280, 281, 1162, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 1373, 623, 290,
	291, 292, 293, 294, 295, 1374, 1375, 0, 296, 624,
	625, 626, 1376, 297, 298, 627, 1377, 1306, 1378, 299,
	300, 301, 302, 303, 304, 305, 0, 1379, 307, 308,
	309, 306, 310, 1380, 311, 0, 312, 313, 314, 315,
	316, 317, 1381, 318, 319, 320, 1163, 321, 322, 323,
	1382, 1383, 1385, 1384, 1386, 1387, 1388, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 1389, 333, 330, 331,
	1390, 334, 332, 335, 1391, 336, 337, 338, 1392, 1393,
	339, 340, 341, 1394, 342, 343, 1395, 344, 345, 346,
	1396, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 631, 632, 360, 1397, 268, 1398,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 1399, 365, 366, 1400, 1401, 1164, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 1402, 378, 636, 1403, 637, 379, 1404, 380, 381,
	382, 383, 384, 638, 639, 640, 462, 1166, 385, 386,
	1405, 387, 388, 389, 390, 0, 0, 0, 269, 391,
	392, 393, 395, 1406, 1165, 394, 641, 642, 1407, 643,
	1408, 396, 397, 1167, 644, 1168, 398, 399, 400, 1169,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	1409, 408, 410, 409, 1410, 411, 645, 1170, 412, 413,
	1171, 1411, 414, 0, 0, 0, 415, 416, 419, 1412,
	1413, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1172, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1173, 458, 448, 1414, 270, 1174, 459,
	460, 1415, 646, 461, 647, 463, 464, 1416, 0, 465,
	0, 1417, 1418, 467, 468, 469, 1419, 1420, 470, 471,
	648, 1175, 472, 1176, 649, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 1421, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 652, 491, 653,
	492, 493, 1422, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 1423, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 1424,
	521, 522, 523, 1177, 524, 525, 526, 527, 655, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 1425, 545, 546, 544, 547, 548, 549,
	1426, 550, 551, 533, 534, 552, 553, 1178, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 1427, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 658, 574, 575, 1428, 576, 577, 0, 573, 564,
	1429, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	1430, 586, 659, 660, 661, 662, 1431, 595, 1432, 587,
	588, 589, 663, 590, 664, 1433, 591, 592, 593, 594,
	0, 596, 597, 1434, 1435, 598, 599, 600, 602, 603,
	601, 604, 1436, 605, 1437, 0, 606, 607, 608, 665,
	666, 667, 1438, 610, 609, 611, 668, 1439, 612, 1440,
	1441, 1442, 1443, 613, 614, 669, 615, 616, 617, 1359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 1364, 278, 279, 1365, 1366, 1367, 0,
	1368, 618, 1369, 1370, 1371, 1372, 280, 281, 1162, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 1373, 623, 290, 291, 292, 293, 294, 295,
	1374, 1375, 0, 296, 624, 625, 626, 1376, 297, 298,
	627, 1377, 1306, 1378, 299, 300, 301, 302, 303, 304,
	305, 0, 1379, 307, 308, 309, 306, 310, 1380, 311,
	0, 312, 313, 314, 315, 316, 317, 1381, 318, 319,
	320, 1163, 321, 322, 323, 1382, 1383, 1385, 1384, 1386,
	1387, 1388, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 1389, 333, 330, 331, 1390, 334, 332, 335, 1391,
	336, 337, 338, 1392, 1393, 339, 340, 341, 1394, 342,
	343, 1395, 344, 345, 346, 1396, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 1397, 268, 1398, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 1399, 365, 366,
	1400, 1401, 1164, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 1402, 378, 636, 1403,
	637, 379, 1404, 380, 381, 382, 383, 384, 638, 639,
	640, 462, 1166, 385, 386, 1405, 387, 388, 389, 390,
	0, 0, 0, 269, 391, 392, 393, 395, 1406, 1165,
	394, 641, 642, 1407, 643, 1408, 396, 397, 1167, 644,
	1168, 398, 399, 400, 1169, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 1409, 408, 410, 409, 1410,
	411, 645, 1170, 412, 413, 1171, 1411, 414, 0, 0,
	0, 415, 416, 419, 1412, 1413, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1172, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1173, 458,
	448, 1414, 270, 1174, 459, 460, 1415, 646, 461, 647,
	463, 464, 1416, 0, 465, 0, 1417, 1418, 467, 468,
	469, 1419, 1420, 470, 471, 648, 1175, 472, 1176, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 1421, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 1422, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 1423, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 1424, 521, 522, 523, 1177, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 1425, 545,
	546, 544, 547, 548, 549, 1426, 550, 551, 533, 534,
	552, 553, 1178, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 1427, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 1428,
	576, 577, 0, 573, 564, 1429, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 1430, 586, 659, 660, 661,
	662, 1431, 595, 1432, 587, 588, 589, 663, 590, 664,
	1433, 591, 592, 593, 594, 0, 596, 597, 1434, 1435,
	598, 599, 600, 602, 603, 601, 604, 1436, 605, 1437,
	0, 606, 607, 608, 665, 666, 667, 1438, 610, 609,
	611, 668, 1439, 612, 1440, 1441, 1442, 1443, 613, 614,
	669, 615, 616, 617, 2466, 0, 1098, 1070, 1071, 1072,
	1068, 1069, 1081, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	2463, 278, 279, 0, 0, 0, 0, 0, 1122, 1086,
	0, 0, 0, 280, 281, 1162, 282, 283, 284, 285,
	286, 287, 619, 1135, 0, 288, 1142, 289, 1141, 0,
	1152, 290, 291, 292, 293, 294, 295, 1088, 1121, 1055,
	296, 1182, 1183, 626, 0, 297, 298, 1128, 0, 1109,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1163, 321,
	322, 323, 1112, 1110, 1111, 1118, 1114, 1113, 1117, 324,
	325, 326, 327, 328, 1145, 329, 1139, 1138, 1059, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	2464, 0, 339, 1130, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1065, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1153, 1154, 360, 1077,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1137,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1164,
	367, 368, 1150, 1151, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1160, 0, 1087, 379, 0,
	380, 381, 382, 383, 384, 1123, 1124, 1127, 462, 1166,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 0, 1165, 394, 1132, 1133,
	0, 1093, 0, 396, 397, 1167, 1125, 1168, 398, 399,
	400, 1169, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1161, 1170,
	412, 413, 1171, 0, 414, 0, 0, 0, 415, 416,
	419, 1116, 1115, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1172, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1173, 458, 448, 1056, 270,
	1174, 459, 460, 1078, 1126, 461, 1140, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 1175, 472, 1176, 1155, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 1156,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1136, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1177, 524, 525, 526, 527,
	1066, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 1119, 550, 551, 533, 534, 552, 553, 1178,
	554, 555, 556, 557, 558, 559, 1134, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 1181, 567,
	568, 569, 570, 1157, 574, 575, 0, 576, 577, 1054,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 1146, 1147, 1148, 1149, 0, 595,
	0, 587, 588, 589, 1158, 590, 1159, 1076, 591, 592,
	593, 594, 0, 596, 597, 0, 1060, 598, 599, 600,
	602, 603, 601, 604, 1120, 605, 0, 0, 606, 607,
	608, 665, 1143, 1180, 2462, 610, 609, 611, 668, 0,
	612, 0, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 1057, 0, 0, 0, 0, 0, 0, 0, 1053,
	0, 0, 0, 0, 0, 0, 1051, 1052, 2465, 0,
	0, 0, 0, 0, 0, 1082, 2461, 0, 1044, 1080,
	1098, 1070, 1071, 1072, 1068, 1069, 1081, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1122, 1086, 0, 0, 0, 280, 281, 1162,
	282, 283, 284, 285, 286, 287, 619, 1135, 0, 288,
	1142, 289, 1141, 0, 1152, 290, 291, 292, 293, 294,
	295, 1088, 1121, 1055, 296, 1182, 1183, 626, 0, 297,
	298, 1128, 0, 1109, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1163, 321, 322, 323, 1112, 1110, 1111, 1118,
	1114, 1113, 1117, 324, 325, 326, 327, 328, 1145, 329,
	1139, 1138, 1059, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1130, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1065,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1153, 1154, 360, 1077, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1137, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1164, 367, 368, 1150, 1151, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1160,
	0, 1087, 379, 0, 380, 381, 382, 383, 384, 1123,
	1124, 1127, 462, 1166, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 269, 391, 392, 393, 395, 0,
	1165, 394, 1132, 1133, 0, 1093, 0, 396, 397, 1167,
	1125, 1168, 398, 399, 400, 1169, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1161, 1170, 412, 413, 1171, 0, 414, 0,
	0, 0, 415, 416, 419, 1116, 1115, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1172, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1173,
	458, 448, 1056, 270, 1174, 459, 460, 1078, 1126, 461,
	1140, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 1175, 472, 1176,
	1155, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 1156, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1136,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1177,
	524, 525, 526, 527, 1066, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 230,
	545, 546, 544, 547, 548, 549, 1119, 550, 551, 533,
	534, 552, 553, 1178, 554, 555, 556, 557, 558, 559,
	1134, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 1181, 567, 568, 569, 570, 1157, 574, 575,
	0, 576, 577, 1054, 573, 564, 232, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 1146, 1147,
	1148, 1149, 0, 595, 0, 587, 588, 589, 1158, 590,
	1159, 1076, 591, 592, 593, 594, 0, 596, 597, 0,
	1060, 598, 599, 600, 602, 603, 601, 604, 1120, 605,
	0, 0, 606, 607, 608, 1578, 1143, 1180, 0, 610,
	609, 611, 668, 0, 612, 0, 0, 0, 224, 613,
	614, 669, 615, 616, 617, 1057, 0, 225, 0, 0,
	0, 0, 0, 1053, 0, 0, 0, 0, 0, 0,
	1051, 1052, 1098, 1070, 1071, 1072, 1068, 1069, 1081, 1823,
	1821, 0, 0, 1080, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1122, 1086, 0, 0, 0, 280,
	281, 1162, 282, 283, 284, 285, 286, 287, 619, 1135,
	0, 288, 1142, 289, 1141, 0, 1152, 290, 291, 292,
	293, 294, 295, 1088, 1121, 1055, 296, 1182, 1183, 626,
	0, 297, 298, 1128, 0, 1109, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1163, 321, 322, 323, 1112, 1110,
	1111, 1118, 1114, 1113, 1117, 324, 325, 326, 327, 328,
	1145, 329, 1139, 1138, 1059, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1130,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1065, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1153, 1154, 360, 1077, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1137, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1164, 367, 368, 1150, 1151,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1160, 0, 1087, 379, 0, 380, 381, 382, 383,
	384, 1123, 1124, 1127, 462, 1166, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 269, 391, 392, 393,
	395, 0, 1165, 394, 1132, 1133, 0, 1093, 0, 396,
	397, 1167, 1125, 1168, 398, 399, 400, 1169, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1161, 1170, 412, 413, 1171, 0,
	414, 0, 0, 0, 415, 416, 419, 1116, 1115, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1172, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1173, 458, 448, 1056, 270, 1174, 459, 460, 1078,
	1126, 461, 1140, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 1175,
	472, 1176, 1155, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 1156, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1136, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1177, 524, 525, 526, 527, 1066, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 230, 545, 546, 544, 547, 548, 549, 1119, 550,
	551, 533, 534, 552, 553, 1178, 554, 555, 556, 557,
	558, 559, 1134, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 1181, 567, 568, 569, 570, 1157,
	574, 575, 0, 576, 577, 1054, 573, 564, 232, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	1146, 1147, 1148, 1149, 0, 595, 0, 587, 588, 589,
	1158, 590, 1159, 1076, 591, 592, 593, 594, 0, 596,
	597, 0, 1060, 598, 599, 600, 602, 603, 601, 604,
	1120, 605, 0, 0, 606, 607, 608, 1578, 1143, 1180,
	0, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	224, 613, 614, 669, 615, 616, 617, 1057, 0, 225,
	0, 0, 0, 0, 0, 1053, 0, 0, 0, 0,
	0, 0, 1051, 1052, 1098, 1070, 1071, 1072, 1068, 1069,
	1081, 1823, 3073, 0, 0, 1080, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1122, 1086, 0, 0,
	0, 280, 281, 1162, 282, 283, 284, 285, 286, 287,
	619, 1135, 0, 288, 1142, 289, 1141, 0, 1152, 290,
	291, 292, 293, 294, 295, 1088, 1121, 1055, 296, 1182,
	1183, 626, 0, 297, 298, 1128, 0, 1109, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1163, 321, 322, 323,
	1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326,
	327, 328, 1145, 329, 1139, 1138, 1059, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1130, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1065, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1153, 1154, 360, 1077, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1137, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1164, 367, 368,
	1150, 1151, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1160, 0, 1087, 379, 0, 380, 381,
	382, 383, 384, 1123, 1124, 1127, 462, 1166, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 269, 391,
	392, 393, 395, 0, 1165, 394, 1132, 1133, 0, 1093,
	0, 396, 397, 1167, 1125, 1168, 398, 399, 400, 1169,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1161, 1170, 412, 413,
	1171, 0, 414, 0, 0, 0, 415, 416, 419, 1116,
	1115, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1172, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1173, 458, 448, 1056, 270, 1174, 459,
	460, 1078, 1126, 461, 1140, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 1175, 472, 1176, 1155, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 1156, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1136, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1177, 524, 525, 526, 527, 1066, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 230, 545, 546, 544, 547, 548, 549,
	1119, 550, 551, 533, 534, 552, 553, 1178, 554, 555,
	556, 557, 558, 559, 1134, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 1181, 567, 568, 569,
	570, 1157, 574, 575, 0, 576, 577, 1054, 573, 564,
	232, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 1146, 1147, 1148, 1149, 0, 595, 0, 587,
	588, 589, 1158, 590, 1159, 1076, 591, 592, 593, 594,
	0, 596, 597, 0, 1060, 598, 599, 600, 602, 603,
	601, 604, 1120, 605, 0, 0, 606, 607, 608, 1578,
	1143, 1180, 0, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 224, 613, 614, 669, 615, 616, 617, 1057,
	0, 225, 0, 0, 0, 0, 0, 1053, 0, 0,
	0, 0, 0, 0, 1051, 1052, 1098, 1070, 1071, 1072,
	1068, 1069, 1081, 1823, 1821, 0, 0, 1080, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1122, 1086,
	0, 0, 0, 280, 281, 1162, 282, 283, 284, 285,
	286, 287, 619, 1135, 0, 288, 1142, 289, 1141, 2594,
	1152, 290, 291, 292, 293, 294, 295, 1088, 1121, 1055,
	296, 1182, 1183, 626, 0, 297, 298, 1128, 0, 1109,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1163, 321,
	322, 323, 1112, 1110, 1111, 1118, 1114, 1113, 1117, 324,
	325, 326, 327, 328, 1145, 329, 1139, 1138, 1059, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1130, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1065, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1153, 1154, 360, 1077,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1137,
	0, 0, 0, 364, 0, 365, 366, 0, 2599, 1164,
	367, 368, 1150, 1151, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1160, 0, 1087, 379, 0,
	380, 381, 382, 383, 384, 1123, 1124, 1127, 462, 1166,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 0, 1165, 394, 1132, 1133,
	0, 1093, 0, 396, 397, 1167, 1125, 1168, 398, 399,
	400, 1169, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 2595, 411, 1161, 1170,
	412, 413, 1171, 0, 414, 0, 0, 0, 415, 416,
	419, 1116, 1115, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1172, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1173, 458, 448, 1056, 270,
	1174, 459, 460, 1078, 1126, 461, 1140, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 1175, 472, 1176, 1155, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 1156,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1136, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1177, 524, 525, 526, 527,
	1066, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 1119, 550, 551, 533, 534, 552, 553, 1178,
	554, 555, 556, 557, 558, 559, 1134, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 1181, 567,
	568, 569, 570, 1157, 574, 575, 0, 576, 577, 1054,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 1146, 1147, 1148, 1149, 0, 595,
	2596, 587, 588, 589, 1158, 590, 1159, 1076, 591, 592,
	593, 594, 0, 596, 597, 0, 1060, 598, 599, 600,
	602, 603, 601, 604, 1120, 605, 0, 0, 606, 607,
	608, 665, 1143, 1180, 0, 610, 609, 611, 668, 0,
	612, 0, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 1057, 0, 0, 0, 0, 0, 0, 0, 1053,
	0, 0, 0, 0, 0, 0, 1051, 1052, 0, 0,
	0, 0, 0, 0, 0, 1082, 0, 0, 2511, 1080,
	1098, 1070, 1071, 1072, 1068, 1069, 1081, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1122, 1086, 0, 0, 0, 280, 281, 1162,
	282, 283, 284, 285, 286, 287, 619, 1135, 0, 288,
	1142, 289, 1141, 0, 1152, 290, 291, 292, 293, 294,
	295, 1088, 1121, 1055, 296, 1182, 1183, 626, 0, 297,
	298, 1128, 0, 1109, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1163, 321, 322, 323, 1112, 1110, 1111, 1118,
	1114, 1113, 1117, 324, 325, 326, 327, 328, 1145, 329,
	1139, 1138, 1059, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1130, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1065,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1153, 1154, 360, 1077, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1137, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1164, 367, 368, 1150, 1151, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1160,
	0, 1087, 379, 0, 380, 381, 382, 383, 384, 1123,
	1124, 1127, 462, 1166, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 269, 391, 392, 393, 395, 0,
	1165, 394, 1132, 1133, 0, 1093, 0, 396, 397, 1167,
	1125, 1168, 398, 399, 400, 1169, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1161, 1170, 412, 413, 1171, 0, 414, 0,
	0, 0, 415, 416, 419, 1116, 1115, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1172, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1173,
	458, 448, 1056, 270, 1174, 459, 460, 1078, 1126, 461,
	1140, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 1175, 472, 1176,
	1155, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 1156, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1136,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1177,
	524, 525, 526, 527, 1066, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 1119, 550, 551, 533,
	534, 552, 553, 1178, 554, 555, 556, 557, 558, 559,
	1134, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 1181, 567, 568, 569, 570, 1157, 574, 575,
	0, 576, 577, 1054, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 1146, 1147,
	1148, 1149, 0, 595, 0, 587, 588, 589, 1158, 590,
	1159, 1076, 591, 592, 593, 594, 0, 596, 597, 0,
	1060, 598, 599, 600, 602, 603, 601, 604, 1120, 605,
	0, 0, 606, 607, 608, 665, 1143, 1180, 0, 610,
	609, 611, 668, 0, 612, 0, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 1057, 0, 0, 0, 0,
	0, 0, 0, 1053, 0, 0, 0, 0, 0, 0,
	1051, 1052, 0, 0, 0, 0, 0, 0, 0, 1082,
	2509, 0, 2508, 1080, 1098, 1070, 1071, 1072, 1068, 1069,
	1081, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1122, 1086, 0, 0,
	0, 280, 281, 1162, 282, 283, 284, 285, 286, 287,
	619, 1135, 0, 288, 1142, 289, 1141, 0, 1152, 290,
	291, 292, 293, 294, 295, 1088, 1121, 1055, 296, 1182,
	1183, 626, 0, 297, 298, 1128, 0, 1109, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1163, 321, 322, 323,
	1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326,
	327, 328, 1145, 329, 1139, 1138, 1059, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1130, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1065, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1153, 1154, 360, 1077, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1137, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1164, 367, 368,
	1150, 1151, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1160, 0, 1087, 379, 0, 380, 381,
	382, 383, 384, 1123, 1124, 1127, 462, 1166, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 269, 391,
	392, 393, 395, 0, 1165, 394, 1132, 1133, 0, 1093,
	0, 396, 397, 1167, 1125, 1168, 398, 399, 400, 1169,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1161, 1170, 412, 413,
	1171, 0, 414, 0, 0, 0, 415, 416, 419, 1116,
	1115, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1172, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1173, 458, 448, 1056, 270, 1174, 459,
	460, 1078, 1126, 461, 1140, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 1175, 472, 1176, 1155, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 1156, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1136, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1177, 524, 525, 526, 527, 1066, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	1119, 550, 551, 533, 534, 552, 553, 1178, 554, 555,
	556, 557, 558, 559, 1134, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 1181, 567, 568, 569,
	570, 1157, 574, 575, 0, 576, 577, 1054, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 1146, 1147, 1148, 1149, 0, 595, 0, 587,
	588, 589, 1158, 590, 1159, 1076, 591, 592, 593, 594,
	0, 596, 597, 0, 1060, 598, 599, 600, 602, 603,
	601, 604, 1120, 605, 0, 0, 606, 607, 608, 665,
	1143, 1180, 0, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 1057,
	0, 0, 0, 0, 0, 0, 0, 1053, 0, 0,
	0, 0, 0, 0, 1051, 1052, 0, 0, 0, 0,
	0, 0, 0, 1082, 2506, 0, 2505, 1080, 1098, 1070,
	1071, 1072, 1068, 1069, 1081, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1122, 1086, 0, 0, 0, 280, 281, 1162, 282, 283,
	284, 285, 286, 287, 619, 1135, 0, 288, 1142, 289,
	1141, 0, 1152, 290, 291, 292, 293, 294, 295, 1088,
	1121, 1055, 296, 1182, 1183, 626, 0, 297, 298, 1128,
	0, 1109, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1163, 321, 322, 323, 1112, 1110, 1111, 1118, 1114, 1113,
	1117, 324, 325, 326, 327, 328, 1145, 329, 1139, 1138,
	1059, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1130, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1065, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1153, 1154,
	360, 1077, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1137, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1164, 367, 368, 1150, 1151, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1160, 0, 1087,
	379, 0, 380, 381, 382, 383, 384, 1123, 1124, 1127,
	462, 1166, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 269, 391, 392, 393, 395, 0, 1165, 394,
	1132, 1133, 0, 1093, 0, 396, 397, 1167, 1125, 1168,
	398, 399, 400, 1169, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1161, 1170, 412, 413, 1171, 0, 414, 0, 0, 0,
	415, 416, 419, 1116, 1115, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1172, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1173, 458, 448,
	1056, 270, 1174, 459, 460, 1078, 1126, 461, 1140, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 1175, 472, 1176, 1155, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 1156, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1136, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1177, 524, 525,
	526, 527, 1066, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 1119, 550, 551, 533, 534, 552,
	553, 1178, 554, 555, 556, 557, 558, 559, 1134, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	1181, 567, 568, 569, 570, 1157, 574, 575, 0, 576,
	577, 1054, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 1146, 1147, 1148, 1149,
	0, 595, 0, 587, 588, 589, 1158, 590, 1159, 1076,
	591, 592, 593, 594, 0, 596, 597, 0, 1060, 598,
	599, 600, 602, 603, 601, 604, 1120, 605, 0, 0,
	606, 607, 608, 665, 1143, 1180, 0, 610, 609, 611,
	668, 0, 612, 0, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 1057, 0, 0, 0, 0, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 0, 1051, 1052,
	0, 0, 0, 0, 0, 0, 0, 1082, 2503, 0,
	2502, 1080, 1098, 1070, 1071, 1072, 1068, 1069, 1081, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1122, 1086, 0, 0, 0, 280,
	281, 1162, 282, 283, 284, 285, 286, 287, 619, 1135,
	0, 288, 1142, 289, 1141, 0, 1152, 290, 291, 292,
	293, 294, 295, 1088, 1121, 1055, 296, 1182, 1183, 626,
	0, 297, 298, 1128, 0, 1109, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1163, 321, 322, 323, 1112, 1110,
	1111, 1118, 1114, 1113, 1117, 324, 325, 326, 327, 328,
	1145, 329, 1139, 1138, 1059, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1130,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1065, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1153, 1154, 360, 1077, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1137, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1164, 367, 368, 1150, 1151,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1160, 0, 1087, 379, 0, 380, 381, 382, 383,
	384, 1123, 1124, 1127, 462, 1166, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 269, 391, 392, 393,
	395, 0, 1165, 394, 1132, 1133, 0, 1093, 0, 396,
	397, 1167, 1125, 1168, 398, 399, 400, 1169, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1161, 1170, 412, 413, 1171, 0,
	414, 0, 0, 0, 415, 416, 419, 1116, 1115, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1172, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1173, 458, 448, 1056, 270, 1174, 459, 460, 1078,
	1126, 461, 1140, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 1175,
	472, 1176, 1155, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 1156, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1136, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1177, 524, 525, 526, 527, 1066, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 1119, 550,
	551, 533, 534, 552, 553, 1178, 554, 555, 556, 557,
	558, 559, 1134, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 1181, 567, 568, 569, 570, 1157,
	574, 575, 0, 576, 577, 1054, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	1146, 1147, 1148, 1149, 0, 595, 0, 587, 588, 589,
	1158, 590, 1159, 1076, 591, 592, 593, 594, 0, 596,
	597, 0, 1060, 598, 599, 600, 602, 603, 601, 604,
	1120, 605, 0, 0, 606, 607, 608, 665, 1143, 1180,
	0, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 1057, 0, 0,
	0, 0, 0, 0, 0, 1053, 0, 0, 0, 0,
	0, 0, 1051, 1052, 0, 0, 0, 0, 0, 0,
	0, 1082, 2500, 0, 1671, 1080, 1098, 1070, 1071, 1072,
	1068, 1069, 1081, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1122, 1086,
	0, 0, 0, 280, 281, 1162, 282, 283, 284, 285,
	286, 287, 619, 1135, 0, 288, 1142, 289, 1141, 0,
	1152, 290, 291, 292, 293, 294, 295, 1088, 1121, 1055,
	296, 1182, 1183, 626, 0, 297, 298, 1128, 0, 1109,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1163, 321,
	322, 323, 1112, 1110, 1111, 1118, 1114, 1113, 1117, 324,
	325, 326, 327, 328, 1145, 329, 1139, 1138, 1059, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1130, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1065, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1153, 1154, 360, 1077,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1137,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1164,
	367, 368, 1150, 1151, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1160, 0, 1087, 379, 0,
	380, 381, 382, 383, 384, 1123, 1124, 1127, 462, 1166,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 0, 1165, 394, 1132, 1133,
	0, 1093, 0, 396, 397, 1167, 1125, 1168, 398, 399,
	400, 1169, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1161, 1170,
	412, 413, 1171, 0, 414, 0, 0, 0, 415, 416,
	419, 1116, 1115, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1172, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1173, 458, 448, 1056, 270,
	1174, 459, 460, 1078, 1126, 461, 1140, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 1175, 472, 1176, 1155, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 1156,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1136, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1177, 524, 525, 526, 527,
	1066, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 1119, 550, 551, 533, 534, 552, 553, 1178,
	554, 555, 556, 557, 558, 559, 1134, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 1181, 567,
	568, 569, 570, 1157, 574, 575, 0, 576, 577, 1054,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 1146, 1147, 1148, 1149, 0, 595,
	0, 587, 588, 589, 1158, 590, 1159, 1076, 591, 592,
	593, 594, 0, 596, 597, 0, 1060, 598, 599, 600,
	602, 603, 601, 604, 1120, 605, 0, 0, 606, 607,
	608, 665, 1143, 1180, 0, 610, 609, 611, 668, 0,
	612, 1670, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 1057, 0, 0, 0, 0, 0, 0, 0, 1053,
	0, 0, 0, 0, 0, 0, 1051, 1052, 0, 0,
	0, 0, 0, 0, 0, 1082, 0, 0, 1047, 1080,
	1098, 1070, 1071, 1072, 1068, 1069, 1081, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1122, 1086, 0, 0, 0, 280, 281, 1162,
	282, 283, 284, 285, 286, 287, 619, 1135, 0, 288,
	1142, 289, 1141, 0, 1152, 290, 291, 292, 293, 294,
	295, 1088, 1121, 1055, 296, 1182, 1183, 626, 0, 297,
	298, 1128, 0, 1109, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1163, 321, 322, 323, 1112, 1110, 1111, 1118,
	1114, 1113, 1117, 324, 325, 326, 327, 328, 1145, 329,
	1139, 1138, 1059, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1130, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1065,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1153, 1154, 360, 1077, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1137, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1164, 367, 368, 1150, 1151, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1160,
	0, 1087, 379, 0, 380, 381, 382, 383, 384, 1123,
	1124, 1127, 462, 1166, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 269, 391, 392, 393, 395, 0,
	1165, 394, 1132, 1133, 0, 1093, 0, 396, 397, 1167,
	1125, 1168, 398, 399, 400, 1169, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1161, 1170, 412, 413, 1171, 0, 414, 0,
	0, 0, 415, 416, 419, 1116, 1115, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1172, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1173,
	458, 448, 1056, 270, 1174, 459, 460, 1078, 1126, 461,
	1140, 463, 464, 0, 0, 465, 0, 1061, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 1175, 472, 1176,
	1155, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 1156, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1136,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1177,
	524, 525, 526, 527, 1066, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 1119, 550, 551, 533,
	534, 552, 553, 1178, 554, 555, 556, 557, 558, 559,
	1134, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 1181, 567, 568, 569, 570, 1157, 574, 575,
	0, 576, 577, 1054, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 1146, 1147,
	1148, 1149, 0, 595, 0, 587, 588, 589, 1158, 590,
	1159, 1076, 591, 592, 593, 594, 0, 596, 597, 0,
	1060, 598, 599, 600, 602, 603, 601, 604, 1120, 605,
	0, 0, 606, 607, 608, 665, 1143, 1180, 0, 610,
	609, 611, 668, 0, 612, 0, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 1057, 0, 0, 0, 0,
	0, 0, 0, 1053, 0, 0, 0, 0, 0, 0,
	1051, 1052, 1098, 1070, 1071, 1072, 1068, 1069, 1081, 1082,
	0, 0, 0, 1080, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1122, 1086, 0, 0, 0, 280,
	281, 1162, 282, 283, 284, 285, 286, 287, 619, 1135,
	0, 288, 1142, 289, 1141, 0, 1152, 290, 291, 292,
	293, 294, 295, 1088, 1121, 1055, 296, 1182, 1183, 626,
	0, 297, 298, 1128, 0, 1109, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 4447, 317,
	0, 318, 319, 320, 1163, 321, 322, 323, 1112, 1110,
	1111, 1118, 1114, 1113, 1117, 324, 325, 326, 327, 328,
	1145, 329, 1139, 1138, 1059, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1130,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1065, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1153, 1154, 360, 1077, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1137, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1164, 367, 368, 1150, 1151,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1160, 0, 1087, 379, 0, 380, 381, 382, 383,
	384, 1123, 1124, 1127, 462, 1166, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 269, 391, 392, 393,
	395, 0, 1165, 394, 1132, 1133, 0, 1093, 0, 396,
	397, 1167, 1125, 1168, 398, 399, 400, 1169, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1161, 1170, 412, 413, 1171, 0,
	414, 0, 0, 0, 415, 416, 419, 1116, 1115, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1172, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1173, 458, 448, 1056, 270, 1174, 459, 460, 1078,
	1126, 461, 1140, 463, 464, 0, 0, 465, 0, 1061,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 1175,
	472, 1176, 1155, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 1156, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1136, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1177, 524, 525, 526, 527, 1066, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 1119, 550,
	551, 533, 534, 552, 553, 1178, 554, 555, 556, 557,
	558, 559, 1134, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 1181, 567, 568, 569, 570, 1157,
	574, 575, 0, 576, 577, 1054, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	1146, 1147, 1148, 1149, 0, 595, 0, 587, 588, 589,
	1158, 590, 1159, 1076, 591, 592, 593, 594, 0, 596,
	597, 0, 1060, 598, 599, 600, 602, 603, 601, 604,
	1120, 605, 0, 0, 606, 607, 608, 665, 1143, 1180,
	0, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 1057, 0, 0,
	0, 0, 0, 0, 0, 1053, 0, 0, 0, 0,
	0, 0, 1051, 1052, 1098, 1070, 1071, 1072, 1068, 1069,
	1081, 1082, 0, 0, 0, 1080, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1122, 1086, 0, 0,
	0, 280, 281, 1162, 282, 283, 284, 285, 286, 287,
	619, 1135, 0, 288, 1142, 289, 1141, 0, 1152, 290,
	291, 292, 293, 294, 295, 1088, 1121, 1055, 296, 1182,
	1183, 626, 0, 297, 298, 1128, 0, 1109, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1163, 321, 322, 323,
	1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326,
	327, 328, 1145, 329, 1139, 1138, 1059, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1130, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1065, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1153, 1154, 360, 1077, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1137, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1164, 367, 368,
	1150, 1151, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1160, 0, 1087, 379, 0, 380, 381,
	382, 383, 384, 1123, 1124, 1127, 462, 1166, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 2380, 391,
	392, 393, 395, 0, 1165, 394, 1132, 1133, 0, 1093,
	0, 396, 397, 1167, 1125, 1168, 398, 399, 400, 1169,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1161, 1170, 412, 413,
	1171, 0, 414, 0, 0, 0, 415, 416, 419, 1116,
	1115, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1172, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1173, 458, 448, 1056, 270, 1174, 459,
	460, 1078, 1126, 461, 1140, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 1175, 472, 1176, 1155, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 1156, 491, 653,
	492, 493, 2379, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1136, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1177, 524, 525, 526, 527, 1066, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	1119, 550, 551, 533, 534, 552, 553, 1178, 554, 555,
	556, 557, 558, 559, 1134, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 1181, 567, 568, 569,
	570, 1157, 574, 575, 0, 576, 577, 1054, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 1146, 1147, 1148, 1149, 0, 595, 0, 587,
	588, 589, 1158, 590, 1159, 1076, 591, 592, 593, 594,
	0, 596, 597, 0, 1060, 598, 599, 600, 602, 603,
	601, 604, 1120, 605, 0, 0, 606, 607, 608, 665,
	1143, 1180, 0, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 1057,
	0, 0, 0, 0, 0, 0, 0, 1053, 0, 0,
	0, 0, 0, 0, 1051, 1052, 1098, 1070, 1071, 1072,
	1068, 1069, 1081, 1082, 0, 0, 0, 1080, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1122, 1086,
	0, 0, 0, 280, 281, 1162, 282, 283, 284, 285,
	286, 287, 619, 1135, 0, 288, 1142, 289, 1141, 0,
	1152, 290, 291, 292, 293, 294, 295, 1088, 1121, 1055,
	296, 1182, 1183, 626, 0, 297, 298, 1128, 0, 1109,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1163, 321,
	322, 323, 1112, 1110, 1111, 1118, 1114, 1113, 1117, 324,
	325, 326, 327, 328, 1145, 329, 1139, 1138, 1059, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1130, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1065, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1153, 1154, 360, 1077,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1137,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1164,
	367, 368, 1150, 1151, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1160, 0, 1087, 379, 0,
	380, 381, 382, 383, 384, 1123, 1124, 1127, 462, 1166,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 0, 1165, 394, 1132, 1133,
	0, 1093, 0, 396, 397, 1167, 1125, 1168, 398, 399,
	400, 1169, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1161, 1170,
	412, 413, 1171, 0, 414, 0, 0, 0, 415, 416,
	419, 1116, 1115, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1172, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1173, 458, 448, 1056, 270,
	1174, 459, 460, 1078, 1126, 461, 1140, 463, 464, 0,
	0, 465, 0, 1061, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 1175, 472, 1176, 1155, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 1156,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1136, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1177, 524, 525, 526, 527,
	1066, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 1119, 550, 551, 533, 534, 552, 553, 1178,
	554, 555, 556, 557, 558, 559, 1134, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 1181, 567,
	568, 569, 570, 1157, 574, 575, 0, 576, 577, 1054,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 1146, 1147, 1148, 1149, 0, 595,
	0, 587, 588, 589, 1158, 590, 1159, 1076, 591, 592,
	593, 594, 0, 596, 597, 0, 1060, 598, 599, 600,
	602, 603, 601, 604, 1120, 605, 0, 0, 606, 607,
	608, 665, 1143, 1180, 0, 610, 609, 611, 668, 0,
	612, 0, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 1057, 0, 0, 0, 0, 0, 0, 0, 1053,
	0, 0, 0, 0, 0, 0, 1051, 1052, 1098, 1070,
	1071, 1072, 1068, 1069, 1081, 1082, 0, 0, 0, 1080,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1122, 1086, 0, 0, 0, 280, 281, 1162, 282, 283,
	284, 285, 286, 287, 619, 1135, 0, 288, 1142, 289,
	1141, 0, 1152, 290, 291, 292, 293, 294, 295, 1088,
	1121, 1055, 296, 1182, 1183, 626, 0, 297, 298, 1128,
	0, 1109, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 4208, 317, 0, 318, 319, 320,
	1163, 321, 322, 323, 1112, 1110, 1111, 1118, 1114, 1113,
	1117, 324, 325, 326, 327, 328, 1145, 329, 1139, 1138,
	1059, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1130, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1065, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1153, 1154,
	360, 1077, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1137, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1164, 367, 368, 1150, 1151, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1160, 0, 1087,
	379, 0, 380, 381, 382, 383, 384, 1123, 1124, 1127,
	462, 1166, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 269, 391, 392, 393, 395, 0, 1165, 394,
	1132, 1133, 0, 1093, 0, 396, 397, 1167, 1125, 1168,
	398, 399, 400, 1169, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1161, 1170, 412, 413, 1171, 0, 414, 0, 0, 0,
	415, 416, 419, 1116, 1115, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1172, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1173, 458, 448,
	1056, 270, 1174, 459, 460, 1078, 1126, 461, 1140, 463,
	464, 0, 0, 465, 0, 1061, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 1175, 472, 1176, 1155, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 1156, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1136, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1177, 524, 525,
	526, 527, 1066, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 1119, 550, 551, 533, 534, 552,
	553, 1178, 554, 555, 556, 557, 558, 559, 1134, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	1181, 567, 568, 569, 570, 1157, 574, 575, 0, 576,
	577, 1054, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 1146, 1147, 1148, 1149,
	0, 595, 0, 587, 588, 589, 1158, 590, 1159, 1076,
	591, 592, 593, 594, 0, 596, 597, 0, 1060, 598,
	599, 600, 602, 603, 601, 604, 1120, 605, 0, 0,
	606, 607, 608, 665, 1143, 1180, 0, 610, 609, 611,
	668, 0, 612, 0, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 1057, 0, 0, 0, 0, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 0, 1051, 1052,
	1098, 1070, 1071, 1072, 1068, 1069, 1081, 1082, 0, 0,
	0, 1080, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1122, 1086, 0, 0, 0, 280, 281, 1162,
	282, 283, 284, 285, 286, 287, 619, 1135, 0, 288,
	1142, 289, 1141, 0, 1152, 290, 291, 292, 293, 294,
	295, 1088, 1121, 1055, 296, 1182, 1183, 626, 0, 297,
	298, 1128, 0, 1109, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1163, 321, 322, 323, 1112, 1110, 1111, 1118,
	1114, 1113, 1117, 324, 325, 326, 327, 328, 1145, 329,
	1139, 1138, 1059, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1130, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1065,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1153, 1154, 360, 1077, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1137, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1164, 367, 368, 1150, 1151, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1160,
	0, 1087, 379, 0, 380, 381, 382, 383, 384, 1123,
	1124, 1127, 462, 1166, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 269, 391, 392, 393, 395, 0,
	1165, 394, 1132, 1133, 0, 1093, 0, 396, 397, 1167,
	1125, 1168, 398, 399, 400, 1169, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1161, 1170, 412, 413, 1171, 0, 414, 0,
	0, 0, 415, 416, 419, 1116, 1115, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1172, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1173,
	458, 448, 1056, 3830, 1174, 459, 460, 1078, 1126, 461,
	1140, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 1175, 472, 1176,
	1155, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 1156, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1136,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1177,
	524, 525, 526, 527, 1066, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 1119, 550, 551, 533,
	534, 552, 553, 1178, 554, 555, 556, 557, 558, 559,
	1134, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 1181, 567, 568, 569, 570, 1157, 574, 575,
	0, 576, 577, 1054, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 1146, 1147,
	1148, 1149, 0, 595, 0, 587, 588, 589, 1158, 590,
	1159, 1076, 591, 592, 593, 594, 0, 596, 597, 0,
	1060, 598, 599, 600, 602, 603, 601, 604, 1120, 605,
	0, 0, 606, 607, 608, 665, 1143, 1180, 0, 610,
	609, 611, 668, 0, 612, 0, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 1057, 0, 0, 0, 0,
	0, 0, 0, 1053, 0, 0, 0, 0, 0, 0,
	1051, 1052, 1891, 0, 0, 0, 0, 0, 0, 1082,
	0, 0, 0, 1080, 1098, 1070, 1071, 1072, 1068, 1069,
	1081, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1122, 1086, 0, 0,
	0, 280, 281, 1162, 282, 283, 284, 285, 286, 287,
	619, 1135, 0, 288, 1142, 289, 1141, 0, 1152, 290,
	291, 292, 293, 294, 295, 1088, 1121, 1055, 296, 1182,
	1183, 626, 0, 297, 298, 1128, 0, 1109, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1163, 321, 322, 323,
	1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326,
	327, 328, 1145, 329, 1139, 1138, 1059, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1130, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1065, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1153, 1154, 360, 1077, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1137, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1164, 367, 368,
	1150, 1151, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1160, 0, 1087, 379, 0, 380, 381,
	382, 383, 384, 1123, 1124, 1127, 462, 1166, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 269, 391,
	392, 393, 395, 0, 1165, 394, 1132, 1133, 0, 1093,
	0, 396, 397, 1167, 1125, 1168, 398, 399, 400, 1169,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1161, 1170, 412, 413,
	1171, 0, 414, 0, 0, 0, 415, 416, 419, 1116,
	1115, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1172, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1173, 458, 448, 1056, 270, 1174, 459,
	460, 1078, 1126, 461, 1140, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 1175, 472, 1176, 1155, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 1156, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1136, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1177, 524, 525, 526, 527, 1066, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	1119, 550, 551, 533, 534, 552, 553, 1178, 554, 555,
	556, 557, 558, 559, 1134, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 1181, 567, 568, 569,
	570, 1157, 574, 575, 0, 576, 577, 1054, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 1146, 1147, 1148, 1149, 0, 595, 0, 587,
	588, 589, 1158, 590, 1159, 1076, 591, 592, 593, 594,
	0, 596, 597, 0, 1060, 598, 599, 600, 602, 603,
	601, 604, 1120, 605, 0, 0, 606, 607, 608, 665,
	1143, 1180, 3557, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 1057,
	0, 0, 0, 0, 0, 0, 0, 1053, 0, 0,
	0, 0, 0, 0, 1051, 1052, 1098, 1070, 1071, 1072,
	1068, 1069, 1081, 1082, 0, 0, 0, 1080, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1122, 1086,
	0, 0, 0, 280, 281, 1162, 282, 283, 284, 285,
	286, 287, 619, 1135, 0, 288, 1142, 289, 1141, 0,
	1152, 290, 291, 292, 293, 294, 295, 1088, 1121, 1055,
	296, 1182, 1183, 626, 0, 297, 298, 1128, 0, 1109,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1163, 321,
	322, 323, 1112, 1110, 1111, 1118, 1114, 1113, 1117, 324,
	325, 326, 327, 328, 1145, 329, 1139, 1138, 1059, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1130, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1065, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1153, 1154, 360, 1077,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1137,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1164,
	367, 368, 1150, 1151, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1160, 0, 1087, 379, 0,
	380, 381, 382, 383, 384, 1123, 1124, 1127, 462, 1166,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 0, 1165, 394, 1132, 1133,
	0, 1093, 0, 396, 397, 1167, 1125, 1168, 398, 399,
	400, 1169, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1161, 1170,
	412, 413, 1171, 0, 414, 0, 0, 0, 415, 416,
	419, 1116, 1115, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1172, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1173, 458, 448, 1056, 270,
	1174, 459, 460, 1078, 1126, 461, 1140, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 1175, 472, 1176, 1155, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 1156,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1136, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1177, 524, 525, 526, 527,
	1066, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 1119, 550, 551, 533, 534, 552, 553, 1178,
	554, 555, 556, 557, 558, 559, 1134, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 1181, 567,
	568, 569, 570, 1157, 574, 575, 0, 576, 577, 1054,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 1146, 1147, 1148, 1149, 0, 595,
	0, 587, 588, 589, 1158, 590, 1159, 1076, 591, 592,
	593, 594, 0, 596, 597, 0, 1060, 598, 599, 600,
	602, 603, 601, 604, 1120, 605, 0, 0, 606, 607,
	608, 665, 1143, 1180, 0, 610, 609, 611, 668, 0,
	612, 0, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 1057, 0, 0, 0, 0, 0, 0, 0, 1053,
	0, 0, 0, 0, 0, 0, 1051, 1052, 1891, 0,
	0, 0, 0, 0, 0, 1082, 0, 0, 0, 1080,
	1098, 1070, 1071, 1072, 1068, 1069, 1081, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1122, 1086, 0, 0, 0, 280, 281, 1162,
	282, 283, 284, 285, 286, 287, 619, 1135, 0, 288,
	1142, 289, 1141, 0, 1152, 290, 291, 292, 293, 294,
	295, 1088, 1121, 1055, 296, 1182, 1183, 626, 0, 297,
	298, 1128, 0, 1109, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1163, 321, 322, 323, 1112, 1110, 1111, 1118,
	1114, 1113, 1117, 324, 325, 326, 327, 328, 1145, 329,
	1139, 1138, 1059, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1130, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1065,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1153, 1154, 360, 1077, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1137, 0, 0, 0, 364, 0, 365,
	366, 0, 2599, 1164, 367, 368, 1150, 1151, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1160,
	0, 1087, 379, 0, 380, 381, 382, 383, 384, 1123,
	1124, 1127, 462, 1166, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 269, 391, 392, 393, 395, 0,
	1165, 394, 1132, 1133, 0, 1093, 0, 396, 397, 1167,
	1125, 1168, 398, 399, 400, 1169, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1161, 1170, 412, 413, 1171, 0, 414, 0,
	0, 0, 415, 416, 419, 1116, 1115, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1172, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1173,
	458, 448, 1056, 270, 1174, 459, 460, 1078, 1126, 461,
	1140, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 1175, 472, 1176,
	1155, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 1156, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1136,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1177,
	524, 525, 526, 527, 1066, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 1119, 550, 551, 533,
	534, 552, 553, 1178, 554, 555, 556, 557, 558, 559,
	1134, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 1181, 567, 568, 569, 570, 1157, 574, 575,
	0, 576, 577, 1054, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 1146, 1147,
	1148, 1149, 0, 595, 0, 587, 588, 589, 1158, 590,
	1159, 1076, 591, 592, 593, 594, 0, 596, 597, 0,
	1060, 598, 599, 600, 602, 603, 601, 604, 1120, 605,
	0, 0, 606, 607, 608, 665, 1143, 1180, 0, 610,
	609, 611, 668, 0, 612, 0, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 1057, 0, 0, 0, 0,
	0, 0, 0, 1053, 0, 0, 0, 0, 0, 0,
	1051, 1052, 1098, 1070, 1071, 1072, 1068, 1069, 1081, 1082,
	0, 0, 0, 1080, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1122, 1086, 0, 0, 0, 280,
	281, 1162, 282, 283, 284, 285, 286, 287, 619, 1135,
	0, 288, 1142, 289, 1141, 0, 1152, 290, 291, 292,
	293, 294, 295, 1088, 1121, 1055, 296, 1182, 1183, 626,
	0, 297, 298, 1128, 0, 1109, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1163, 321, 322, 323, 1112, 1110,
	1111, 1118, 1114, 1113, 1117, 324, 325, 326, 327, 328,
	1145, 329, 1139, 1138, 1059, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1130,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1065, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1153, 1154, 360, 1077, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1137, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1164, 367, 368, 1150, 1151,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1160, 0, 1087, 379, 0, 380, 381, 382, 383,
	384, 1123, 1124, 1127, 462, 1166, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 269, 391, 392, 393,
	395, 0, 1165, 394, 1132, 1133, 0, 1093, 0, 396,
	397, 1167, 1125, 1168, 398, 399, 400, 1169, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1161, 1170, 412, 413, 1171, 0,
	414, 0, 0, 0, 415, 416, 419, 1116, 1115, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1172, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1173, 458, 448, 1056, 270, 1174, 459, 460, 1078,
	1126, 461, 1140, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 1175,
	472, 1176, 1155, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 1156, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1136, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1177, 524, 525, 526, 527, 1066, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 1119, 550,
	551, 533, 534, 552, 553, 1178, 554, 555, 556, 557,
	558, 559, 1134, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 1181, 567, 568, 569, 570, 1157,
	574, 575, 0, 576, 577, 1054, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	1146, 1147, 1148, 1149, 0, 595, 0, 587, 588, 589,
	1158, 590, 1159, 1076, 591, 592, 593, 594, 0, 596,
	597, 0, 1060, 598, 599, 600, 602, 603, 601, 604,
	1120, 605, 0, 0, 606, 607, 608, 665, 1143, 1180,
	0, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 1057, 0, 0,
	0, 0, 0, 0, 0, 1053, 0, 0, 0, 0,
	0, 0, 1051, 1052, 0, 0, 0, 0, 0, 0,
	0, 1082, 1821, 0, 2604, 1080, 1098, 1070, 1071, 1072,
	1068, 1069, 1081, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1122, 1086,
	0, 0, 0, 280, 281, 1162, 282, 283, 284, 285,
	286, 287, 619, 1135, 0, 288, 1142, 289, 1141, 0,
	1152, 290, 291, 292, 293, 294, 295, 1088, 1121, 1055,
	296, 1182, 1183, 626, 0, 297, 298, 1128, 0, 1109,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1163, 321,
	322, 323, 1112, 1110, 1111, 1118, 1114, 1113, 1117, 324,
	325, 326, 327, 328, 1145, 329, 1139, 1138, 1059, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1130, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1065, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1153, 1154, 360, 1077,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1137,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1164,
	367, 368, 1150, 1151, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1160, 0, 1087, 379, 0,
	380, 381, 382, 383, 384, 1123, 1124, 1127, 462, 1166,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 0, 1165, 394, 1132, 1133,
	0, 1093, 0, 396, 397, 1167, 1125, 1168, 398, 399,
	400, 1169, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1161, 1170,
	412, 413, 1171, 0, 414, 0, 0, 0, 415, 416,
	419, 1116, 1115, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1172, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1173, 458, 448, 1056, 270,
	1174, 459, 460, 1078, 1126, 461, 1140, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 1175, 472, 1176, 1155, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 1156,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1136, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1177, 524, 525, 526, 527,
	1066, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 1119, 550, 551, 533, 534, 552, 553, 1178,
	554, 555, 556, 557, 558, 559, 1134, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 1181, 567,
	568, 569, 570, 1157, 574, 575, 0, 576, 577, 1054,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 1146, 1147, 1148, 1149, 0, 595,
	0, 587, 588, 589, 1158, 590, 1159, 1076, 591, 592,
	593, 594, 0, 596, 597, 0, 1060, 598, 599, 600,
	602, 603, 601, 604, 1120, 605, 0, 0, 606, 607,
	608, 665, 1143, 1180, 0, 610, 609, 611, 668, 0,
	612, 0, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 1057, 0, 0, 0, 0, 0, 0, 0, 1053,
	0, 0, 0, 0, 0, 0, 1051, 1052, 0, 0,
	0, 0, 0, 0, 0, 1082, 0, 0, 2602, 1080,
	1098, 1070, 1071, 1072, 1068, 1069, 1081, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1122, 1086, 0, 0, 0, 280, 281, 1162,
	282, 283, 284, 285, 286, 287, 619, 1135, 0, 288,
	1142, 289, 1141, 0, 1152, 290, 291, 292, 293, 294,
	295, 1088, 1121, 1055, 296, 1182, 1183, 626, 0, 297,
	298, 1128, 0, 1109, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1163, 321, 322, 323, 1112, 1110, 1111, 1118,
	1114, 1113, 1117, 324, 325, 326, 327, 328, 1145, 329,
	1139, 1138, 1059, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1130, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1065,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1153, 1154, 360, 1077, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1137, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1164, 367, 368, 1150, 1151, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1160,
	0, 1087, 379, 0, 380, 381, 382, 383, 384, 1123,
	1124, 1127, 462, 1166, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 269, 391, 392, 393, 395, 0,
	1165, 394, 1132, 1133, 0, 1093, 0, 396, 397, 1167,
	1125, 1168, 398, 399, 400, 1169, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1161, 1170, 412, 413, 1171, 0, 414, 0,
	0, 0, 415, 416, 419, 1116, 1115, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1172, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1173,
	458, 448, 1056, 270, 1174, 459, 460, 1078, 1126, 461,
	1140, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 1175, 472, 1176,
	1155, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 1156, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1136,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1177,
	524, 525, 526, 527, 1066, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 1119, 550, 551, 533,
	534, 552, 553, 1178, 554, 555, 556, 557, 558, 559,
	1134, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 1181, 567, 568, 569, 570, 1157, 574, 575,
	0, 576, 577, 1054, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 1146, 1147,
	1148, 1149, 0, 595, 0, 587, 588, 589, 1158, 590,
	1159, 1076, 591, 592, 593, 594, 0, 596, 597, 0,
	1060, 598, 599, 600, 602, 603, 601, 604, 1120, 605,
	0, 0, 606, 607, 608, 665, 1143, 1180, 0, 610,
	609, 611, 668, 0, 612, 0, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 1057, 0, 0, 0, 0,
	0, 0, 0, 1053, 0, 0, 0, 0, 0, 0,
	1051, 1052, 0, 0, 0, 0, 0, 0, 0, 1082,
	0, 0, 2590, 1080, 1098, 1070, 1071, 1072, 1068, 1069,
	1081, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1122, 1086, 0, 0,
	0, 280, 281, 1162, 282, 283, 284, 285, 286, 287,
	619, 1135, 0, 288, 1142, 289, 1141, 0, 1152, 290,
	291, 292, 293, 294, 295, 1088, 1121, 1055, 296, 1182,
	1183, 626, 0, 297, 298, 1128, 0, 1109, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1163, 321, 322, 323,
	1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326,
	327, 328, 1145, 329, 1139, 1138, 1059, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1130, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1065, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1153, 1154, 360, 1077, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1137, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1164, 367, 368,
	1150, 1151, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1160, 0, 1087, 379, 0, 380, 381,
	382, 383, 384, 1123, 1124, 1127, 462, 1166, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 269, 391,
	392, 393, 395, 0, 1165, 394, 1132, 1133, 0, 1093,
	0, 396, 397, 1167, 1125, 1168, 398, 399, 400, 1169,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1161, 1170, 412, 413,
	1171, 0, 414, 0, 0, 0, 415, 416, 419, 1116,
	1115, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1172, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1173, 458, 448, 1056, 270, 1174, 459,
	460, 1078, 1126, 461, 1140, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 1175, 472, 1176, 1155, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 1156, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1136, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1177, 524, 525, 526, 527, 1066, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	1119, 550, 551, 533, 534, 552, 553, 1178, 554, 555,
	556, 557, 558, 559, 1134, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 1181, 567, 568, 569,
	570, 1157, 574, 575, 0, 576, 577, 1054, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 1146, 1147, 1148, 1149, 0, 595, 0, 587,
	588, 589, 1158, 590, 1159, 1076, 591, 592, 593, 594,
	0, 596, 597, 0, 1060, 598, 599, 600, 602, 603,
	601, 604, 1120, 605, 0, 0, 606, 607, 608, 665,
	1143, 1180, 0, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 1057,
	0, 0, 0, 0, 0, 0, 0, 1053, 0, 0,
	0, 0, 0, 0, 1051, 1052, 0, 0, 0, 0,
	0, 0, 0, 1082, 0, 0, 2579, 1080, 1098, 1070,
	1071, 1072, 1068, 1069, 1081, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1122, 1086, 0, 0, 0, 280, 281, 1162, 282, 283,
	284, 285, 286, 287, 619, 1135, 0, 288, 1142, 289,
	1141, 0, 1152, 290, 291, 292, 293, 294, 295, 1088,
	1121, 1055, 296, 1182, 1183, 626, 0, 297, 298, 1128,
	0, 1109, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1163, 321, 322, 323, 1112, 1110, 1111, 1118, 1114, 1113,
	1117, 324, 325, 326, 327, 328, 1145, 329, 1139, 1138,
	1059, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1130, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1065, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1153, 1154,
	360, 1077, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1137, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1164, 367, 368, 1150, 1151, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1160, 0, 1087,
	379, 0, 380, 381, 382, 383, 384, 1123, 1124, 1127,
	462, 1166, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 269, 391, 392, 393, 395, 0, 1165, 394,
	1132, 1133, 0, 1093, 0, 396, 397, 1167, 1125, 1168,
	398, 399, 400, 1169, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1161, 1170, 412, 413, 1171, 0, 414, 0, 0, 0,
	415, 416, 419, 1116, 1115, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1172, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1173, 458, 448,
	1056, 270, 1174, 459, 460, 1078, 1126, 461, 1140, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 1175, 472, 1176, 1155, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 1156, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1136, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1177, 524, 525,
	526, 527, 1066, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 1119, 550, 551, 533, 534, 552,
	553, 1178, 554, 555, 556, 557, 558, 559, 1134, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	1181, 567, 568, 569, 570, 1157, 574, 575, 0, 576,
	577, 1054, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 1146, 1147, 1148, 1149,
	0, 595, 0, 587, 588, 589, 1158, 590, 1159, 1076,
	591, 592, 593, 594, 0, 596, 597, 0, 1060, 598,
	599, 600, 602, 603, 601, 604, 1120, 605, 0, 0,
	606, 607, 608, 665, 1143, 1180, 0, 610, 609, 611,
	668, 0, 612, 0, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 1057, 0, 0, 0, 0, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 0, 1051, 1052,
	0, 0, 0, 0, 0, 0, 0, 1082, 0, 0,
	2577, 1080, 2568, 2575, 1071, 1072, 1068, 1069, 1081, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1122, 1086, 0, 0, 0, 280,
	281, 1162, 282, 283, 284, 285, 286, 287, 619, 1135,
	0, 288, 1142, 289, 1141, 0, 1152, 290, 291, 292,
	293, 294, 295, 1088, 1121, 1055, 296, 1182, 1183, 626,
	0, 297, 298, 1128, 0, 1109, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1163, 321, 322, 323, 1112, 1110,
	1111, 1118, 1114, 1113, 1117, 324, 325, 326, 327, 328,
	1145, 2571, 1139, 1138, 1059, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1130,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1065, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1153, 1154, 360, 1077, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1137, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1164, 367, 368, 1150, 1151,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1160, 0, 1087, 379, 0, 380, 381, 382, 2572,
	384, 1123, 1124, 1127, 462, 1166, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 269, 391, 392, 393,
	395, 0, 1165, 394, 1132, 1133, 0, 1093, 0, 396,
	397, 1167, 1125, 1168, 398, 399, 400, 1169, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1161, 1170, 412, 413, 1171, 0,
	414, 0, 0, 0, 415, 416, 419, 1116, 1115, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	2573, 429, 2570, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1172, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1173, 458, 448, 1056, 270, 1174, 459, 460, 1078,
	1126, 461, 1140, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 1175,
	472, 1176, 1155, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 1156, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1136, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1177, 524, 525, 526, 527, 1066, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	2574, 0, 545, 546, 544, 547, 548, 549, 1119, 550,
	551, 533, 534, 552, 553, 1178, 554, 555, 556, 557,
	558, 559, 1134, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 1181, 567, 568, 569, 570, 1157,
	574, 575, 0, 576, 577, 1054, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	1146, 1147, 1148, 1149, 0, 595, 0, 587, 588, 589,
	1158, 590, 1159, 1076, 591, 592, 593, 594, 0, 596,
	597, 0, 1060, 598, 599, 600, 602, 603, 601, 604,
	1120, 605, 0, 0, 606, 607, 608, 665, 1143, 1180,
	0, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 2569, 617, 1057, 0, 0,
	0, 0, 0, 0, 0, 1053, 0, 0, 0, 0,
	0, 0, 1051, 1052, 0, 0, 0, 0, 0, 0,
	0, 1082, 0, 0, 2565, 1080, 2568, 2575, 1071, 1072,
	1068, 1069, 1081, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1122, 1086,
	0, 0, 0, 280, 281, 1162, 282, 283, 284, 285,
	286, 287, 619, 1135, 0, 288, 1142, 289, 1141, 0,
	1152, 290, 291, 292, 293, 294, 295, 1088, 1121, 1055,
	296, 1182, 1183, 626, 0, 297, 298, 1128, 0, 1109,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1163, 321,
	322, 323, 1112, 1110, 1111, 1118, 1114, 1113, 1117, 324,
	325, 326, 327, 328, 1145, 2571, 1139, 1138, 1059, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1130, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1065, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1153, 1154, 360, 1077,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1137,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1164,
	367, 368, 1150, 1151, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1160, 0, 1087, 379, 0,
	380, 381, 382, 2572, 384, 1123, 1124, 1127, 462, 1166,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 0, 1165, 394, 1132, 1133,
	0, 1093, 0, 396, 397, 1167, 1125, 1168, 398, 399,
	400, 1169, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1161, 1170,
	412, 413, 1171, 0, 414, 0, 0, 0, 415, 416,
	419, 1116, 1115, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 2573, 429, 2570, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1172, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1173, 458, 448, 1056, 270,
	1174, 459, 460, 1078, 1126, 461, 1140, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 1175, 472, 1176, 1155, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 1156,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1136, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1177, 524, 525, 526, 527,
	1066, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 2574, 0, 545, 546, 544, 547,
	548, 549, 1119, 550, 551, 533, 534, 552, 553, 1178,
	554, 555, 556, 557, 558, 559, 1134, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 1181, 567,
	568, 569, 570, 1157, 574, 575, 0, 576, 577, 1054,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 1146, 1147, 1148, 1149, 0, 595,
	0, 587, 588, 589, 1158, 590, 1159, 1076, 591, 592,
	593, 594, 0, 596, 597, 0, 1060, 598, 599, 600,
	602, 603, 601, 604, 1120, 605, 0, 0, 606, 607,
	608, 665, 1143, 1180, 0, 610, 609, 611, 668, 0,
	612, 0, 0, 0, 0, 613, 614, 669, 615, 2569,
	617, 1057, 0, 0, 0, 0, 0, 0, 0, 1053,
	0, 0, 0, 0, 0, 0, 1051, 1052, 1098, 1070,
	1071, 1072, 1068, 1069, 1081, 1082, 0, 0, 0, 1080,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1122, 1086, 0, 0, 0, 280, 281, 1162, 282, 283,
	284, 285, 286, 287, 619, 1135, 0, 288, 1142, 289,
	1141, 0, 1152, 290, 291, 292, 293, 294, 295, 1088,
	1121, 1055, 296, 1182, 1183, 626, 0, 297, 298, 1128,
	0, 1109, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1163, 321, 322, 323, 1112, 1110, 1111, 1118, 1114, 1113,
	1117, 324, 325, 326, 327, 328, 1145, 329, 1139, 1138,
	1059, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1130, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1065, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1153, 1154,
	360, 1077, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1137, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1164, 367, 368, 1150, 1151, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1160, 0, 1087,
	379, 0, 380, 381, 382, 383, 384, 1123, 1124, 1127,
	462, 1166, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 269, 391, 392, 393, 395, 0, 1165, 394,
	1132, 1133, 0, 1093, 0, 396, 397, 1167, 1125, 1168,
	398, 399, 400, 1169, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1161, 1170, 412, 413, 1171, 0, 414, 0, 0, 0,
	415, 416, 419, 1116, 1115, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1172, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1173, 458, 448,
	1056, 270, 1174, 459, 460, 1078, 1126, 461, 1140, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 1175, 472, 1176, 1155, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 1156, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1136, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1177, 524, 525,
	526, 527, 1066, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 1119, 550, 551, 533, 534, 552,
	553, 1178, 554, 555, 556, 557, 558, 559, 1134, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	1181, 567, 568, 569, 570, 1157, 574, 575, 0, 576,
	577, 1054, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 1146, 1147, 1148, 1149,
	0, 595, 0, 587, 588, 589, 1158, 590, 1159, 1076,
	591, 592, 593, 594, 0, 596, 597, 0, 1060, 598,
	599, 600, 602, 603, 601, 604, 1120, 605, 0, 0,
	606, 607, 608, 665, 1143, 1180, 0, 610, 609, 611,
	668, 0, 612, 0, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 1057, 0, 0, 0, 0, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 0, 1051, 1052,
	0, 0, 0, 0, 0, 1829, 0, 1082, 0, 0,
	0, 1080, 1098, 1070, 1071, 1072, 1068, 1069, 1081, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 2359, 278, 279, 0,
	0, 0, 0, 0, 1122, 1086, 0, 0, 0, 280,
	281, 1162, 282, 283, 284, 285, 286, 287, 619, 1135,
	0, 288, 1142, 289, 1141, 0, 1152, 290, 291, 292,
	293, 294, 295, 1088, 1121, 1055, 296, 1182, 1183, 626,
	0, 297, 298, 1128, 0, 1109, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1163, 321, 322, 323, 1112, 1110,
	1111, 1118, 1114, 1113, 1117, 324, 325, 326, 327, 328,
	1145, 329, 1139, 1138, 1059, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1130,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1065, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1153, 1154, 360, 1077, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1137, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1164, 367, 368, 1150, 1151,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1160, 0, 1087, 379, 0, 380, 381, 382, 383,
	384, 1123, 1124, 1127, 462, 1166, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 269, 391, 392, 393,
	395, 0, 1165, 394, 1132, 1133, 0, 1093, 0, 396,
	397, 1167, 1125, 1168, 398, 399, 400, 1169, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1161, 1170, 412, 413, 1171, 0,
	414, 0, 0, 0, 415, 416, 419, 1116, 1115, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1172, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1173, 458, 448, 1056, 270, 1174, 459, 460, 1078,
	1126, 461, 1140, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 1175,
	472, 1176, 1155, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 1156, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1136, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1177, 524, 525, 526, 527, 1066, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 1119, 550,
	551, 533, 534, 552, 553, 1178, 554, 555, 556, 557,
	558, 559, 1134, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 1181, 567, 568, 569, 570, 1157,
	574, 575, 0, 576, 577, 1054, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	1146, 1147, 1148, 1149, 0, 595, 0, 587, 588, 589,
	1158, 590, 1159, 1076, 591, 592, 593, 594, 0, 596,
	597, 0, 1060, 598, 599, 600, 602, 603, 601, 604,
	1120, 605, 0, 0, 606, 607, 608, 665, 1143, 1180,
	0, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 1057, 0, 0,
	0, 0, 0, 0, 0, 1053, 0, 0, 0, 0,
	0, 0, 1051, 1052, 0, 0, 0, 0, 0, 0,
	0, 1082, 0, 0, 1676, 1080, 1098, 1070, 1071, 1072,
	1068, 1069, 1081, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1122, 1086,
	0, 0, 0, 280, 281, 1162, 282, 283, 284, 285,
	286, 287, 619, 1135, 0, 288, 1142, 289, 1141, 0,
	1152, 290, 291, 292, 293, 294, 295, 1088, 1121, 1055,
	296, 1182, 1183, 626, 0, 297, 298, 1128, 0, 1109,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1163, 321,
	322, 323, 1112, 1110, 1111, 1118, 1114, 1113, 1117, 324,
	325, 326, 327, 328, 1145, 329, 1139, 1138, 1059, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1130, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1065, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1153, 1154, 360, 1077,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1137,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1164,
	367, 368, 1150, 1151, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1160, 0, 1087, 379, 0,
	380, 381, 382, 383, 384, 1123, 1124, 1127, 462, 1166,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 0, 1165, 394, 1132, 1133,
	0, 1093, 0, 396, 397, 1167, 1125, 1168, 398, 399,
	400, 1169, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1161, 1170,
	412, 413, 1171, 0, 414, 0, 0, 0, 415, 416,
	419, 1116, 1115, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1172, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1173, 458, 448, 1056, 270,
	1174, 459, 460, 1078, 1126, 461, 1140, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 1175, 472, 1176, 1155, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 1156,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1136, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1177, 524, 525, 526, 527,
	1066, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 1119, 550, 551, 533, 534, 552, 553, 1178,
	554, 555, 556, 557, 558, 559, 1134, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 1181, 567,
	568, 569, 570, 1157, 574, 575, 0, 576, 577, 1054,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 1146, 1147, 1148, 1149, 0, 595,
	0, 587, 588, 589, 1158, 590, 1159, 1076, 591, 592,
	593, 594, 0, 596, 597, 0, 1060, 598, 599, 600,
	602, 603, 601, 604, 1120, 605, 0, 0, 606, 607,
	608, 665, 1143, 1180, 0, 610, 609, 611, 668, 0,
	612, 0, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 1057, 0, 0, 0, 0, 0, 0, 0, 1053,
	0, 0, 0, 0, 0, 0, 1051, 1052, 0, 0,
	0, 0, 0, 0, 0, 1082, 0, 0, 1608, 1080,
	1098, 1070, 1071, 1072, 1068, 1069, 1081, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1122, 1086, 0, 0, 0, 280, 281, 1162,
	282, 283, 284, 285, 286, 287, 619, 1135, 0, 288,
	1142, 289, 1141, 0, 1152, 290, 291, 292, 293, 294,
	295, 1088, 1121, 1055, 296, 1182, 1183, 626, 0, 297,
	298, 1128, 0, 1109, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1163, 321, 322, 323, 1112, 1110, 1111, 1118,
	1114, 1113, 1117, 324, 325, 326, 327, 328, 1145, 329,
	1139, 1138, 1059, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1130, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1065,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1153, 1154, 360, 1077, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1137, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1164, 367, 368, 1150, 1151, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1160,
	0, 1087, 379, 0, 380, 381, 382, 383, 384, 1123,
	1124, 1127, 462, 1166, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 269, 391, 392, 393, 395, 0,
	1165, 394, 1132, 1133, 0, 1093, 0, 396, 397, 1167,
	1125, 1168, 398, 399, 400, 1169, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1161, 1170, 412, 413, 1171, 0, 414, 0,
	0, 0, 415, 416, 419, 1116, 1115, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1172, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1173,
	458, 448, 1056, 270, 1174, 459, 460, 1078, 1126, 461,
	1140, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 1175, 472, 1176,
	1155, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 1156, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1136,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1177,
	524, 525, 526, 527, 1066, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 1119, 550, 551, 533,
	534, 552, 553, 1178, 554, 555, 556, 557, 558, 559,
	1134, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 1181, 567, 568, 569, 570, 1157, 574, 575,
	0, 576, 577, 1054, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 1146, 1147,
	1148, 1149, 0, 595, 0, 587, 588, 589, 1158, 590,
	1159, 1076, 591, 592, 593, 594, 0, 596, 597, 0,
	1060, 598, 599, 600, 602, 603, 601, 604, 1120, 605,
	0, 0, 606, 607, 608, 665, 1143, 1180, 0, 610,
	609, 611, 668, 0, 612, 0, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 1057, 0, 0, 0, 0,
	0, 0, 0, 1053, 0, 0, 0, 0, 0, 0,
	1051, 1052, 0, 0, 0, 0, 0, 0, 0, 1082,
	0, 0, 1603, 1080, 1098, 1070, 1071, 1072, 1068, 1069,
	1081, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1122, 1086, 0, 0,
	0, 280, 281, 1162, 282, 283, 284, 285, 286, 287,
	619, 1135, 0, 288, 1142, 289, 1141, 0, 1152, 290,
	291, 292, 293, 294, 295, 1088, 1121, 1055, 296, 1182,
	1183, 626, 0, 297, 298, 1128, 0, 1109, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1163, 321, 322, 323,
	1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326,
	327, 328, 1145, 329, 1139, 1138, 1059, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1130, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1065, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1153, 1154, 360, 1077, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1137, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1164, 367, 368,
	1150, 1151, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1160, 0, 1087, 379, 0, 380, 381,
	382, 383, 384, 1123, 1124, 1127, 462, 1166, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 269, 391,
	392, 393, 395, 0, 1165, 394, 1132, 1133, 0, 1093,
	0, 396, 397, 1167, 1125, 1168, 398, 399, 400, 1169,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1161, 1170, 412, 413,
	1171, 0, 414, 0, 0, 0, 415, 416, 419, 1116,
	1115, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1172, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1173, 458, 448, 1056, 270, 1174, 459,
	460, 1078, 1126, 461, 1140, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 1175, 472, 1176, 1155, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 1156, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1136, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1177, 524, 525, 526, 527, 1066, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	1119, 550, 551, 533, 534, 552, 553, 1178, 554, 555,
	556, 557, 558, 559, 1134, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 1181, 567, 568, 569,
	570, 1157, 574, 575, 0, 576, 577, 1054, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 1146, 1147, 1148, 1149, 0, 595, 0, 587,
	588, 589, 1158, 590, 1159, 1076, 591, 592, 593, 594,
	0, 596, 597, 0, 1060, 598, 599, 600, 602, 603,
	601, 604, 1120, 605, 0, 0, 606, 607, 608, 665,
	1143, 1180, 0, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 1057,
	0, 0, 0, 0, 0, 0, 0, 1053, 0, 0,
	0, 0, 0, 0, 1051, 1052, 0, 0, 0, 0,
	0, 0, 0, 1082, 0, 0, 1594, 1080, 1098, 1070,
	1071, 1072, 1068, 1069, 1081, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1122, 1086, 0, 0, 0, 280, 281, 1162, 282, 283,
	284, 285, 286, 287, 619, 1135, 0, 288, 1142, 289,
	1141, 0, 1152, 290, 291, 292, 293, 294, 295, 1088,
	1121, 1055, 296, 1182, 1183, 626, 0, 297, 298, 1128,
	0, 1109, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1163, 321, 322, 323, 1112, 1110, 1111, 1118, 1114, 1113,
	1117, 324, 325, 326, 327, 328, 1145, 329, 1139, 1138,
	1059, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1130, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1065, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1153, 1154,
	360, 1077, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1137, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1164, 367, 368, 1150, 1151, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1160, 0, 1087,
	379, 0, 380, 381, 382, 383, 384, 1123, 1124, 1127,
	462, 1166, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 269, 391, 392, 393, 395, 0, 1165, 394,
	1132, 1133, 0, 1093, 0, 396, 397, 1167, 1125, 1168,
	398, 399, 400, 1169, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1161, 1170, 412, 413, 1171, 0, 414, 0, 0, 0,
	415, 416, 419, 1116, 1115, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1172, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1173, 458, 448,
	1056, 270, 1174, 459, 460, 1078, 1126, 461, 1140, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 1175, 472, 1176, 1155, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 1156, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1136, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1177, 524, 525,
	526, 527, 1066, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 1119, 550, 551, 533, 534, 552,
	553, 1178, 554, 555, 556, 557, 558, 559, 1134, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	1181, 567, 568, 569, 570, 1157, 574, 575, 0, 576,
	577, 1054, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 1146, 1147, 1148, 1149,
	0, 595, 0, 587, 588, 589, 1158, 590, 1159, 1076,
	591, 592, 593, 594, 0, 596, 597, 0, 1060, 598,
	599, 600, 602, 603, 601, 604, 1120, 605, 0, 0,
	606, 607, 608, 665, 1143, 1180, 0, 610, 609, 611,
	668, 0, 612, 0, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 1057, 0, 0, 0, 0, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 0, 1051, 1052,
	0, 0, 0, 0, 0, 0, 0, 1082, 0, 0,
	1589, 1080, 1098, 1070, 1071, 1072, 1068, 1069, 1081, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1122, 1086, 0, 0, 0, 280,
	281, 1162, 282, 283, 284, 285, 286, 287, 619, 1135,
	0, 288, 1142, 289, 1141, 0, 1152, 290, 291, 292,
	293, 294, 295, 1088, 1121, 1055, 296, 1182, 1183, 626,
	0, 297, 298, 1128, 0, 1109, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1163, 321, 322, 323, 1112, 1110,
	1111, 1118, 1114, 1113, 1117, 324, 325, 326, 327, 328,
	1145, 329, 1139, 1138, 1059, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1130,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1065, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1153, 1154, 360, 1077, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1137, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1164, 367, 368, 1150, 1151,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1160, 0, 1087, 379, 0, 380, 381, 382, 383,
	384, 1123, 1124, 1127, 462, 1166, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 269, 391, 392, 393,
	395, 0, 1165, 394, 1132, 1133, 0, 1093, 0, 396,
	397, 1167, 1125, 1168, 398, 399, 400, 1169, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1161, 1170, 412, 413, 1171, 0,
	414, 0, 0, 0, 415, 416, 419, 1116, 1115, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1172, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1173, 458, 448, 1056, 270, 1174, 459, 460, 1078,
	1126, 461, 1140, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 1175,
	472, 1176, 1155, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 1156, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1136, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1177, 524, 525, 526, 527, 1066, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 1119, 550,
	551, 533, 534, 552, 553, 1178, 554, 555, 556, 557,
	558, 559, 1134, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 1181, 567, 568, 569, 570, 1157,
	574, 575, 0, 576, 577, 1054, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	1146, 1147, 1148, 1149, 0, 595, 0, 587, 588, 589,
	1158, 590, 1159, 1076, 591, 592, 593, 594, 0, 596,
	597, 0, 1060, 598, 599, 600, 602, 603, 601, 604,
	1120, 605, 0, 0, 606, 607, 608, 665, 1143, 1180,
	0, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 1057, 0, 0,
	0, 0, 0, 0, 0, 1053, 0, 0, 0, 0,
	0, 0, 1051, 1052, 0, 0, 0, 0, 0, 0,
	0, 1082, 0, 0, 1501, 1080, 1098, 1070, 1071, 1072,
	1068, 1069, 1081, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1122, 1086,
	0, 0, 0, 280, 281, 1162, 282, 283, 284, 285,
	286, 287, 619, 1135, 0, 288, 1142, 289, 1141, 0,
	1152, 290, 291, 292, 293, 294, 295, 1088, 1121, 1055,
	296, 1182, 1183, 626, 0, 297, 298, 1128, 0, 1109,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1163, 321,
	322, 323, 1112, 1110, 1111, 1118, 1114, 1113, 1117, 324,
	325, 326, 327, 328, 1145, 329, 1139, 1138, 1059, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1130, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1065, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1153, 1154, 360, 1077,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1137,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1164,
	367, 368, 1150, 1151, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1160, 0, 1087, 379, 0,
	380, 381, 382, 383, 384, 1500, 1124, 1127, 462, 1166,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 0, 1165, 394, 1132, 1133,
	0, 1093, 0, 396, 397, 1167, 1125, 1168, 398, 399,
	400, 1169, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1161, 1170,
	412, 413, 1171, 0, 414, 0, 0, 0, 415, 416,
	419, 1116, 1115, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1172, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1173, 458, 448, 1056, 270,
	1174, 459, 460, 1078, 1126, 461, 1140, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 1175, 472, 1176, 1155, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 1156,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1136, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1177, 524, 525, 526, 527,
	1066, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 1119, 550, 551, 533, 534, 552, 553, 1178,
	554, 555, 556, 557, 558, 559, 1134, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 1181, 567,
	568, 569, 570, 1157, 574, 575, 0, 576, 577, 1054,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 1146, 1147, 1148, 1149, 0, 595,
	0, 587, 588, 589, 1158, 590, 1159, 1076, 591, 592,
	593, 594, 0, 596, 597, 0, 1060, 598, 599, 600,
	602, 603, 601, 604, 1120, 605, 0, 0, 606, 607,
	608, 665, 1143, 1180, 0, 610, 609, 611, 668, 0,
	612, 0, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 1057, 0, 0, 0, 0, 0, 0, 0, 1053,
	0, 0, 0, 0, 0, 0, 1051, 1052, 0, 0,
	0, 0, 0, 0, 0, 1082, 0, 0, 1495, 1080,
	1098, 1070, 1071, 1072, 1068, 1069, 1081, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1122, 1086, 0, 0, 0, 280, 281, 1162,
	282, 283, 284, 285, 286, 287, 619, 1135, 0, 288,
	1142, 289, 1141, 0, 1152, 290, 291, 292, 293, 294,
	295, 1088, 1121, 1055, 296, 1182, 1183, 626, 0, 297,
	298, 1128, 0, 1109, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1163, 321, 322, 323, 1112, 1110, 1111, 1118,
	1114, 1113, 1117, 324, 325, 326, 327, 328, 1145, 329,
	1139, 1138, 1059, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1130, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1065,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1153, 1154, 360, 1077, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1137, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1164, 367, 368, 1150, 1151, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1160,
	0, 1087, 379, 0, 380, 381, 382, 383, 384, 1494,
	1124, 1127, 462, 1166, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 269, 391, 392, 393, 395, 0,
	1165, 394, 1132, 1133, 0, 1093, 0, 396, 397, 1167,
	1125, 1168, 398, 399, 400, 1169, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1161, 1170, 412, 413, 1171, 0, 414, 0,
	0, 0, 415, 416, 419, 1116, 1115, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1172, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1173,
	458, 448, 1056, 270, 1174, 459, 460, 1078, 1126, 461,
	1140, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 1175, 472, 1176,
	1155, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 1156, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1136,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1177,
	524, 525, 526, 527, 1066, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 1119, 550, 551, 533,
	534, 552, 553, 1178, 554, 555, 556, 557, 558, 559,
	1134, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 1181, 567, 568, 569, 570, 1157, 574, 575,
	0, 576, 577, 1054, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 1146, 1147,
	1148, 1149, 0, 595, 0, 587, 588, 589, 1158, 590,
	1159, 1076, 591, 592, 593, 594, 0, 596, 597, 0,
	1060, 598, 599, 600, 602, 603, 601, 604, 1120, 605,
	0, 0, 606, 607, 608, 665, 1143, 1180, 0, 610,
	609, 611, 668, 0, 612, 0, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 1057, 0, 0, 0, 0,
	0, 0, 0, 1053, 0, 0, 0, 0, 0, 0,
	1051, 1052, 0, 0, 0, 0, 0, 0, 0, 1082,
	0, 0, 1488, 1080, 1098, 1070, 1071, 1072, 1068, 1069,
	1081, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1122, 1086, 0, 0,
	0, 280, 281, 1162, 282, 283, 284, 285, 286, 287,
	619, 1135, 0, 288, 1142, 289, 1141, 0, 1152, 290,
	291, 292, 293, 294, 295, 1088, 1121, 1055, 296, 1182,
	1183, 626, 0, 297, 298, 1128, 0, 1109, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1163, 321, 322, 323,
	1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326,
	327, 328, 1145, 329, 1139, 1138, 1059, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1130, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1065, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1153, 1154, 360, 1077, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1137, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1164, 367, 368,
	1150, 1151, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1160, 0, 1087, 379, 0, 380, 381,
	382, 383, 384, 1123, 1124, 1127, 462, 1166, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 269, 391,
	392, 393, 395, 0, 1165, 394, 1132, 1133, 0, 1093,
	0, 396, 397, 1167, 1125, 1168, 398, 399, 400, 1169,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1161, 1170, 412, 413,
	1171, 0, 414, 0, 0, 0, 415, 416, 419, 1116,
	1115, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1172, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1173, 458, 448, 1056, 270, 1174, 459,
	460, 1078, 1126, 461, 1140, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 1175, 472, 1176, 1155, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 1156, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1136, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1177, 524, 525, 526, 527, 1066, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	1119, 550, 551, 533, 534, 552, 553, 1178, 554, 555,
	556, 557, 558, 559, 1134, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 1181, 567, 568, 569,
	570, 1157, 574, 575, 0, 576, 577, 1054, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 1146, 1147, 1148, 1149, 0, 595, 0, 587,
	588, 589, 1158, 590, 1159, 1076, 591, 592, 593, 594,
	0, 596, 597, 0, 1060, 598, 599, 600, 602, 603,
	601, 604, 1120, 605, 0, 0, 606, 607, 608, 665,
	1143, 1180, 0, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 1057,
	0, 0, 0, 0, 0, 0, 0, 1053, 0, 0,
	0, 0, 0, 0, 1051, 1052, 0, 0, 0, 0,
	0, 0, 0, 1082, 0, 0, 1308, 1080, 1098, 1070,
	1071, 1072, 1068, 1069, 1081, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1122, 1086, 0, 0, 0, 280, 281, 1162, 282, 283,
	284, 285, 286, 287, 619, 1135, 0, 288, 1142, 289,
	1141, 0, 1152, 290, 291, 292, 293, 294, 295, 1088,
	1121, 1055, 296, 1182, 1183, 626, 0, 297, 298, 1128,
	0, 1109, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1163, 321, 322, 323, 1112, 1110, 1111, 1118, 1114, 1113,
	1117, 324, 325, 326, 327, 328, 1145, 329, 1139, 1138,
	1059, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1130, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1065, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1153, 1154,
	360, 1077, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1137, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1164, 367, 368, 1150, 1151, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1160, 0, 1087,
	379, 0, 380, 381, 382, 383, 384, 1123, 1124, 1127,
	462, 1166, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 269, 391, 392, 393, 395, 0, 1165, 394,
	1132, 1133, 0, 1093, 0, 396, 397, 1167, 1125, 1168,
	398, 399, 400, 1169, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1161, 1170, 412, 413, 1171, 0, 414, 0, 0, 0,
	415, 416, 419, 1116, 1115, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1172, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1173, 458, 448,
	1056, 270, 1174, 459, 460, 1078, 1126, 461, 1140, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 1175, 472, 1176, 1155, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 1156, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1136, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1177, 524, 525,
	526, 527, 1066, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 1119, 550, 551, 533, 534, 552,
	553, 1178, 554, 555, 556, 557, 558, 559, 1134, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	1181, 567, 568, 569, 570, 1157, 574, 575, 0, 576,
	577, 1054, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 1146, 1147, 1148, 1149,
	0, 595, 0, 587, 588, 589, 1158, 590, 1159, 1076,
	591, 592, 593, 594, 0, 596, 597, 0, 1060, 598,
	599, 600, 602, 603, 601, 604, 1120, 605, 0, 0,
	606, 607, 608, 665, 1143, 1180, 0, 610, 609, 611,
	668, 0, 612, 0, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 1057, 0, 0, 0, 0, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 0, 1051, 1052,
	1098, 1070, 1071, 1072, 1068, 1069, 1081, 1082, 0, 0,
	0, 1080, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1122, 1086, 0, 0, 0, 280, 281, 1162,
	282, 283, 284, 285, 286, 287, 619, 1135, 0, 288,
	1142, 289, 1141, 0, 1152, 290, 291, 292, 293, 294,
	295, 1088, 1121, 1055, 296, 1182, 1183, 626, 0, 297,
	298, 1128, 0, 1109, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1163, 321, 322, 323, 1112, 1110, 1111, 1118,
	1114, 1113, 1117, 324, 325, 326, 327, 328, 1145, 329,
	1139, 1138, 1059, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1130, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1065,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1153, 1154, 360, 1077, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1137, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1164, 367, 368, 1150, 1151, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1160,
	0, 1087, 379, 0, 380, 381, 382, 383, 384, 1123,
	1124, 1127, 462, 1166, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 269, 391, 392, 393, 395, 0,
	1165, 394, 1132, 1133, 0, 1093, 0, 396, 397, 1167,
	1125, 1168, 398, 399, 400, 1169, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1161, 1170, 412, 413, 1171, 0, 414, 0,
	0, 0, 415, 416, 419, 1116, 1115, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1172, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1173,
	458, 448, 1056, 270, 1174, 459, 460, 1078, 1126, 461,
	1140, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 1175, 472, 1176,
	1155, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 1156, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1136,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1177,
	524, 525, 526, 527, 1066, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 1119, 550, 551, 533,
	534, 552, 553, 1178, 554, 555, 556, 557, 558, 559,
	1134, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 1181, 567, 568, 569, 570, 1157, 574, 575,
	0, 576, 577, 1054, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 1146, 1147,
	1148, 1149, 0, 595, 0, 587, 588, 589, 1158, 590,
	1159, 1076, 591, 592, 593, 594, 0, 596, 597, 0,
	1060, 598, 599, 600, 602, 603, 601, 604, 1120, 605,
	0, 0, 606, 607, 608, 665, 1143, 1180, 0, 610,
	609, 611, 668, 0, 612, 0, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 1057, 0, 0, 0, 0,
	0, 0, 0, 1053, 0, 0, 0, 0, 0, 0,
	1051, 1052, 1098, 1070, 1071, 1072, 1068, 1069, 1081, 1082,
	0, 0, 0, 1080, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1122, 1086, 0, 0, 0, 280,
	281, 1162, 282, 283, 284, 285, 286, 287, 619, 1135,
	0, 288, 1142, 289, 1141, 0, 1152, 290, 291, 292,
	293, 294, 295, 1088, 1121, 1055, 296, 1182, 1183, 626,
	0, 297, 298, 1128, 0, 1109, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1163, 321, 322, 4493, 1112, 1110,
	1111, 1118, 1114, 1113, 1117, 324, 325, 326, 327, 328,
	1145, 329, 1139, 1138, 1059, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1130,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1065, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1153, 1154, 360, 1077, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1137, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1164, 367, 368, 1150, 1151,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1160, 0, 1087, 379, 0, 380, 381, 382, 383,
	384, 1123, 1124, 1127, 462, 1166, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 269, 391, 392, 393,
	395, 0, 1165, 394, 1132, 1133, 0, 1093, 0, 396,
	397, 1167, 1125, 1168, 398, 399, 400, 1169, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1161, 1170, 412, 413, 1171, 0,
	414, 0, 0, 0, 415, 416, 419, 1116, 1115, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1172, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1173, 458, 448, 1056, 270, 1174, 459, 460, 1078,
	1126, 461, 1140, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 1175,
	472, 1176, 1155, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 1156, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1136, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1177, 524, 525, 526, 527, 1066, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 1119, 550,
	551, 533, 534, 552, 553, 1178, 554, 555, 556, 557,
	558, 559, 1134, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 1181, 567, 568, 569, 570, 1157,
	574, 575, 0, 576, 577, 1054, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	1146, 1147, 1148, 1149, 0, 595, 0, 587, 588, 589,
	1158, 590, 1159, 1076, 591, 592, 593, 594, 0, 4492,
	597, 0, 1060, 598, 599, 600, 602, 603, 601, 604,
	1120, 605, 0, 0, 606, 607, 608, 665, 1143, 1180,
	0, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 1057, 0, 0,
	0, 0, 0, 0, 0, 1053, 0, 0, 0, 0,
	0, 0, 1051, 1052, 1098, 1070, 1071, 1072, 1068, 1069,
	1081, 1082, 0, 0, 0, 1080, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1122, 1086, 0, 0,
	0, 280, 281, 1162, 282, 283, 284, 285, 286, 287,
	4491, 1135, 0, 288, 1142, 289, 1141, 0, 1152, 290,
	291, 292, 293, 294, 295, 1088, 1121, 1055, 296, 1182,
	1183, 626, 0, 297, 298, 1128, 0, 1109, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1163, 321, 322, 4493,
	1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326,
	327, 328, 1145, 329, 1139, 1138, 1059, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1130, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1065, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1153, 1154, 360, 1077, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1137, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1164, 367, 368,
	1150, 1151, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1160, 0, 1087, 379, 0, 380, 381,
	382, 383, 384, 1123, 1124, 1127, 462, 1166, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 269, 391,
	392, 393, 395, 0, 1165, 394, 1132, 1133, 0, 1093,
	0, 396, 397, 1167, 1125, 1168, 398, 399, 400, 1169,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1161, 1170, 412, 413,
	1171, 0, 414, 0, 0, 0, 415, 416, 419, 1116,
	1115, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1172, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1173, 458, 448, 1056, 270, 1174, 459,
	460, 1078, 1126, 461, 1140, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 1175, 472, 1176, 1155, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 1156, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1136, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1177, 524, 525, 526, 527, 1066, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	1119, 550, 551, 533, 534, 552, 553, 1178, 554, 555,
	556, 557, 558, 559, 1134, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 1181, 567, 568, 569,
	570, 1157, 574, 575, 0, 576, 577, 1054, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 1146, 1147, 1148, 1149, 0, 595, 0, 587,
	588, 589, 1158, 590, 1159, 1076, 591, 592, 593, 594,
	0, 4492, 597, 0, 1060, 598, 599, 600, 602, 603,
	601, 604, 1120, 605, 0, 0, 606, 607, 608, 665,
	1143, 1180, 0, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 1057,
	0, 0, 0, 0, 0, 0, 0, 1053, 0, 0,
	0, 0, 0, 0, 1051, 1052, 1098, 1070, 1071, 1072,
	1068, 1069, 1081, 1082, 0, 0, 0, 1080, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1122, 1086,
	0, 0, 0, 280, 281, 1162, 282, 283, 284, 285,
	286, 287, 619, 1135, 0, 288, 1142, 289, 1141, 0,
	1152, 290, 291, 292, 293, 294, 295, 1088, 1121, 1055,
	296, 1182, 1183, 626, 0, 297, 298, 1128, 0, 1109,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1163, 321,
	4152, 323, 1112, 1110, 1111, 1118, 1114, 1113, 1117, 324,
	325, 326, 327, 328, 1145, 329, 1139, 1138, 1059, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1130, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1065, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1153, 1154, 360, 1077,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1137,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1164,
	367, 368, 1150, 1151, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1160, 0, 4153, 379, 0,
	380, 381, 382, 383, 384, 1123, 1124, 1127, 462, 1166,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 0, 1165, 394, 1132, 1133,
	0, 1093, 0, 396, 397, 1167, 1125, 1168, 398, 399,
	400, 1169, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1161, 1170,
	412, 413, 1171, 0, 414, 0, 0, 0, 415, 416,
	419, 1116, 1115, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1172, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1173, 458, 448, 1056, 270,
	1174, 459, 460, 1078, 1126, 461, 1140, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 1175, 472, 1176, 1155, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 1156,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1136, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1177, 524, 525, 526, 4151,
	1066, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 1119, 550, 551, 533, 534, 552, 553, 1178,
	554, 555, 556, 557, 558, 559, 1134, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 1181, 567,
	568, 569, 570, 1157, 574, 575, 0, 576, 577, 1054,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 1146, 1147, 1148, 1149, 0, 595,
	0, 587, 588, 589, 1158, 590, 1159, 1076, 591, 592,
	593, 594, 0, 596, 597, 0, 1060, 598, 599, 600,
	602, 603, 601, 604, 1120, 605, 0, 0, 606, 607,
	608, 665, 1143, 1180, 0, 610, 609, 611, 668, 0,
	612, 0, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 1057, 0, 0, 0, 0, 0, 0, 0, 1053,
	0, 0, 0, 0, 0, 0, 1051, 1052, 1098, 1070,
	1071, 1072, 3040, 3041, 1081, 1082, 0, 0, 0, 1080,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1122, 1086, 0, 0, 0, 280, 281, 1162, 282, 283,
	284, 285, 286, 287, 619, 1135, 0, 288, 1142, 289,
	1141, 0, 1152, 290, 291, 292, 293, 294, 295, 1088,
	1121, 1055, 296, 1182, 1183, 626, 0, 297, 298, 1128,
	0, 1109, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1163, 321, 322, 323, 1112, 1110, 1111, 1118, 1114, 1113,
	1117, 324, 325, 326, 327, 328, 1145, 329, 1139, 1138,
	1059, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1130, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1065, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1153, 1154,
	360, 1077, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1137, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1164, 367, 368, 1150, 1151, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1160, 0, 1087,
	379, 0, 380, 381, 382, 383, 384, 1123, 1124, 1127,
	462, 1166, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 269, 391, 392, 393, 395, 0, 1165, 394,
	1132, 1133, 0, 1093, 0, 396, 397, 1167, 1125, 1168,
	398, 399, 400, 1169, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1161, 1170, 412, 413, 1171, 0, 414, 0, 0, 0,
	415, 416, 419, 1116, 1115, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1172, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1173, 458, 448,
	1056, 270, 1174, 459, 460, 1078, 1126, 461, 1140, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 1175, 472, 1176, 1155, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 1156, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1136, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1177, 524, 525,
	526, 527, 1066, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 1119, 550, 551, 533, 534, 552,
	553, 1178, 554, 555, 556, 557, 558, 559, 1134, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	1181, 567, 568, 569, 570, 1157, 574, 575, 0, 576,
	577, 1054, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 1146, 1147, 1148, 1149,
	0, 595, 0, 587, 588, 589, 1158, 590, 1159, 1076,
	591, 592, 593, 594, 0, 596, 597, 0, 1060, 598,
	599, 600, 602, 603, 601, 604, 1120, 605, 0, 0,
	606, 607, 608, 665, 1143, 1180, 0, 610, 609, 611,
	668, 0, 612, 0, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 1057, 0, 0, 0, 0, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 0, 1051, 1052,
	1098, 1070, 1071, 1072, 3038, 3039, 1081, 1082, 0, 0,
	0, 1080, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1122, 1086, 0, 0, 0, 280, 281, 1162,
	282, 283, 284, 285, 286, 287, 619, 1135, 0, 288,
	1142, 289, 1141, 0, 1152, 290, 291, 292, 293, 294,
	295, 1088, 1121, 1055, 296, 1182, 1183, 626, 0, 297,
	298, 1128, 0, 1109, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1163, 321, 322, 323, 1112, 1110, 1111, 1118,
	1114, 1113, 1117, 324, 325, 326, 327, 328, 1145, 329,
	1139, 1138, 1059, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1130, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1065,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1153, 1154, 360, 1077, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1137, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1164, 367, 368, 1150, 1151, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1160,
	0, 1087, 379, 0, 380, 381, 382, 383, 384, 1123,
	1124, 1127, 462, 1166, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 269, 391, 392, 393, 395, 0,
	1165, 394, 1132, 1133, 0, 1093, 0, 396, 397, 1167,
	1125, 1168, 398, 399, 400, 1169, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1161, 1170, 412, 413, 1171, 0, 414, 0,
	0, 0, 415, 416, 419, 1116, 1115, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1172, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1173,
	458, 448, 1056, 270, 1174, 459, 460, 1078, 1126, 461,
	1140, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 1175, 472, 1176,
	1155, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 1156, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1136,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1177,
	524, 525, 526, 527, 1066, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 1119, 550, 551, 533,
	534, 552, 553, 1178, 554, 555, 556, 557, 558, 559,
	1134, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 1181, 567, 568, 569, 570, 1157, 574, 575,
	0, 576, 577, 1054, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 1146, 1147,
	1148, 1149, 0, 595, 0, 587, 588, 589, 1158, 590,
	1159, 1076, 591, 592, 593, 594, 0, 596, 597, 0,
	1060, 598, 599, 600, 602, 603, 601, 604, 1120, 605,
	0, 0, 606, 607, 608, 665, 1143, 1180, 0, 610,
	609, 611, 668, 0, 612, 0, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 1057, 0, 0, 0, 0,
	0, 0, 0, 1053, 0, 0, 0, 0, 0, 0,
	1051, 1052, 1098, 1070, 1071, 1072, 1068, 1069, 1081, 1082,
	0, 0, 0, 1080, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1122, 1086, 0, 0, 0, 280,
	281, 1162, 282, 283, 284, 285, 286, 287, 619, 1135,
	0, 288, 1142, 289, 1141, 0, 1152, 290, 291, 292,
	293, 294, 295, 1088, 1121, 1055, 296, 1182, 1183, 626,
	0, 297, 298, 1128, 0, 1109, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1163, 321, 322, 323, 1112, 1110,
	1111, 1118, 1114, 1113, 1117, 324, 325, 326, 327, 328,
	1145, 329, 1139, 1138, 1059, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1130,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1065, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1153, 1154, 360, 1077, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1137, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1164, 367, 368, 1150, 1151,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1160, 0, 1087, 379, 0, 380, 381, 382, 383,
	384, 1123, 1124, 1127, 462, 1166, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 269, 391, 392, 393,
	395, 0, 1165, 394, 1132, 1133, 0, 1093, 0, 396,
	397, 1167, 1125, 1168, 398, 399, 400, 1169, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1161, 1170, 412, 413, 1171, 0,
	414, 0, 0, 0, 415, 416, 419, 1116, 1115, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1172, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1173, 458, 448, 1056, 270, 1174, 459, 460, 1078,
	1126, 461, 1140, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 1175,
	472, 1176, 1155, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 1156, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1136, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1177, 524, 525, 526, 527, 1066, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 1119, 550,
	551, 533, 534, 552, 553, 1178, 554, 555, 556, 557,
	558, 559, 1134, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 1181, 567, 568, 569, 570, 1157,
	574, 575, 0, 576, 577, 1054, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	1146, 1147, 1148, 1149, 0, 595, 0, 587, 588, 589,
	1158, 590, 1159, 1076, 591, 592, 593, 594, 0, 596,
	597, 0, 1060, 598, 599, 600, 602, 603, 601, 604,
	1120, 605, 0, 0, 606, 607, 608, 665, 1143, 1180,
	0, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 1057, 0, 0,
	0, 0, 0, 0, 0, 1053, 0, 0, 0, 0,
	0, 0, 2367, 2368, 1098, 1070, 1071, 1072, 1068, 1069,
	1081, 1082, 0, 0, 0, 1080, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1122, 1086, 0, 0,
	0, 280, 281, 1162, 282, 283, 284, 285, 286, 287,
	619, 1135, 0, 288, 1142, 289, 1141, 0, 1152, 290,
	291, 292, 293, 294, 295, 1088, 1121, 0, 296, 1182,
	1183, 626, 0, 297, 298, 1128, 0, 1109, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1163, 321, 322, 323,
	1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326,
	327, 328, 1145, 329, 1139, 1138, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1130, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1065, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1153, 1154, 360, 1077, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1137, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1164, 367, 368,
	1150, 1151, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1160, 0, 1087, 379, 0, 380, 381,
	382, 383, 384, 1123, 1124, 1127, 462, 1166, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 269, 391,
	392, 393, 395, 0, 1165, 394, 1132, 1133, 0, 1093,
	0, 396, 397, 1167, 1125, 1168, 398, 399, 400, 1169,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1161, 1170, 412, 413,
	1171, 0, 414, 0, 0, 0, 415, 416, 419, 1116,
	1115, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1172, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1173, 458, 448, 0, 270, 1174, 459,
	460, 1078, 1126, 461, 1140, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 1175, 472, 1176, 1155, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 1156, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1136, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1177, 524, 525, 526, 527, 1066, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	1119, 550, 551, 533, 534, 552, 553, 1178, 554, 555,
	556, 557, 558, 559, 1134, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 1181, 567, 568, 569,
	570, 1157, 574, 575, 0, 576, 577, 0, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 1146, 1147, 1148, 1149, 0, 595, 0, 587,
	588, 589, 1158, 590, 1159, 1076, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 1120, 605, 0, 0, 606, 607, 608, 665,
	1143, 1180, 0, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 1098,
	1070, 1071, 1072, 1068, 1069, 1081, 0, 2587, 0, 0,
	0, 0, 0, 0, 2585, 2586, 271, 273, 272, 274,
	275, 276, 277, 1082, 278, 279, 0, 1080, 0, 0,
	0, 1122, 1086, 0, 0, 0, 280, 281, 1162, 282,
	283, 284, 285, 286, 287, 619, 1135, 0, 288, 1142,
	289, 1141, 0, 1152, 290, 291, 292, 293, 294, 295,
	1088, 1121, 0, 296, 1182, 1183, 626, 0, 297, 298,
	1128, 0, 1109, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1163, 321, 322, 323, 1112, 1110, 1111, 1118, 1114,
	1113, 1117, 324, 325, 326, 327, 328, 1145, 329, 1139,
	1138, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1130, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1065, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1153,
	1154, 360, 1077, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1137, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1164, 367, 368, 1150, 1151, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1160, 0,
	1087, 379, 0, 380, 381, 382, 383, 384, 1123, 1124,
	1127, 462, 1166, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 269, 391, 392, 393, 395, 0, 1165,
	394, 1132, 1133, 0, 1093, 0, 396, 397, 1167, 1125,
	1168, 398, 399, 400, 1169, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1161, 1170, 412, 413, 1171, 0, 414, 0, 0,
	0, 415, 416, 419, 1116, 1115, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1172, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1173, 458,
	448, 0, 270, 1174, 459, 460, 1078, 1126, 461, 1140,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 1175, 472, 1176, 1155,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 1156, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1136, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1177, 524,
	525, 526, 527, 3033, 3034, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 1119, 550, 551, 533, 534,
	552, 553, 1178, 554, 555, 556, 557, 558, 559, 1134,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 1181, 567, 568, 569, 570, 1157, 574, 575, 0,
	576, 577, 0, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 1146, 1147, 1148,
	1149, 0, 595, 0, 587, 588, 589, 1158, 590, 1159,
	1076, 591, 592, 593, 594, 0, 596, 597, 0, 0,
	598, 599, 600, 602, 603, 601, 604, 1120, 605, 0,
	0, 606, 607, 608, 665, 1143, 1180, 0, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 1098, 1070, 1071, 1072, 1068, 1069,
	1081, 0, 0, 0, 0, 0, 0, 0, 0, 2072,
	2073, 271, 273, 272, 274, 275, 276, 277, 1082, 278,
	279, 0, 1080, 0, 0, 0, 1122, 1086, 0, 0,
	0, 280, 281, 1162, 282, 283, 284, 285, 286, 287,
	0, 1135, 0, 288, 1142, 289, 1141, 0, 1152, 290,
	291, 292, 293, 294, 295, 1088, 1121, 1055, 296, 1182,
	1183, 626, 0, 297, 298, 1128, 0, 1109, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1163, 321, 322, 4493,
	1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326,
	327, 328, 1145, 329, 1139, 1138, 1059, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1130, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1065, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1153, 1154, 360, 1077, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1137, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1164, 367, 368,
	1150, 1151, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1160, 0, 1087, 379, 0, 380, 381,
	382, 383, 384, 1123, 1124, 1127, 462, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 269, 391,
	392, 393, 395, 0, 1165, 394, 1132, 1133, 0, 1093,
	0, 396, 397, 0, 1125, 0, 398, 399, 400, 1169,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1161, 1170, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 1116,
	1115, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1172, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1173, 458, 448, 1056, 270, 0, 459,
	460, 1078, 1126, 461, 1140, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 1175, 472, 1176, 1155, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 1156, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1136, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1177, 524, 525, 526, 527, 1066, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	1119, 550, 551, 533, 534, 552, 553, 0, 554, 555,
	556, 557, 558, 559, 1134, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 1181, 567, 568, 569,
	570, 1157, 574, 575, 0, 576, 577, 1054, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 1146, 1147, 1148, 1149, 0, 595, 0, 587,
	588, 589, 1158, 590, 1159, 1076, 591, 592, 593, 594,
	0, 4492, 597, 0, 1060, 598, 599, 600, 602, 603,
	601, 604, 1120, 605, 0, 0, 606, 607, 608, 665,
	1143, 1180, 0, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1044,
	0, 1220, 0, 0, 1051, 1052, 0, 0, 0, 0,
	0, 0, 0, 1082, 0, 0, 0, 1080, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1122, 0, 0, 0, 0, 280, 281,
	1162, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 1121, 0, 296, 624, 625, 626, 0,
	297, 298, 1128, 0, 1109, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1163, 321, 322, 323, 1112, 1110, 1111,
	1118, 1114, 1113, 1117, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1153, 1154, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1164, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1160, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	1123, 1124, 1127, 462, 1166, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 269, 391, 392, 393, 395,
	0, 1165, 394, 641, 642, 0, 643, 0, 396, 397,
	1167, 1125, 1168, 398, 399, 400, 1169, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 1206, 408, 410,
	409, 0, 411, 1161, 1170, 412, 413, 1171, 0, 414,
	0, 0, 0, 415, 416, 419, 1116, 1115, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1172, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1173, 458, 448, 0, 270, 1174, 459, 460, 0, 1126,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 1212,
	467, 468, 469, 0, 0, 470, 471, 648, 1175, 472,
	1176, 1155, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 1156, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1177, 524, 525, 526, 527, 655, 1214, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	230, 545, 546, 544, 547, 548, 549, 1119, 550, 551,
	533, 534, 552, 553, 1178, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 1157, 574,
	575, 0, 576, 577, 0, 573, 564, 232, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 1158,
	590, 1159, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 1120,
	605, 0, 0, 606, 607, 608, 1578, 666, 667, 0,
	610, 609, 611, 668, 1220, 612, 0, 0, 0, 224,
	613, 614, 669, 615, 616, 617, 0, 0, 225, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1122, 0, 1210, 0,
	1915, 280, 281, 1162, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 1121, 0, 296, 624,
	625, 626, 0, 297, 298, 1128, 0, 1109, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1163, 321, 322, 323,
	1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1153, 1154, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1164, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1160, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 1123, 1124, 1127, 462, 1166, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 269, 391,
	392, 393, 395, 0, 1165, 394, 641, 642, 0, 643,
	0, 396, 397, 1167, 1125, 1168, 398, 399, 400, 1169,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	1206, 408, 410, 409, 0, 411, 1161, 1170, 412, 413,
	1171, 0, 414, 0, 0, 0, 415, 416, 419, 1116,
	1115, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1172, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1173, 458, 448, 0, 270, 1174, 459,
	460, 0, 1126, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 1212, 467, 468, 469, 0, 0, 470, 471,
	648, 1175, 472, 1176, 1155, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 1156, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1177, 524, 525, 526, 527, 655, 1214,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 230, 545, 546, 544, 547, 548, 549,
	1119, 550, 551, 533, 534, 552, 553, 1178, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 1157, 574, 575, 0, 576, 577, 0, 573, 564,
	232, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 659, 660, 661, 662, 0, 595, 0, 587,
	588, 589, 1158, 590, 1159, 0, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 1120, 605, 0, 0, 606, 607, 608, 1578,
	666, 667, 0, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 224, 613, 614, 669, 615, 616, 617, 0,
	0, 225, 0, 0, 0, 3193, 0, 1220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1210, 0, 1915, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1122,
	0, 0, 0, 0, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	0, 623, 290, 291, 292, 293, 294, 295, 0, 1121,
	0, 296, 624, 625, 626, 0, 297, 298, 1128, 0,
	1109, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1163,
	321, 322, 323, 1112, 1110, 1111, 1118, 1114, 1113, 1117,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1153, 1154, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1164, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1160, 0, 637, 379,
	0, 380, 381, 382, 383, 384, 1123, 1124, 1127, 462,
	1166, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 269, 391, 392, 393, 395, 0, 1165, 394, 641,
	642, 0, 643, 0, 396, 397, 1167, 1125, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 1206, 408, 410, 409, 0, 411, 1161,
	1170, 412, 413, 1171, 0, 414, 0, 0, 0, 415,
	416, 419, 1116, 1115, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 0,
	270, 1174, 459, 460, 0, 1126, 461, 647, 463, 464,
	0, 0, 465, 0, 0, 1212, 467, 468, 469, 0,
	0, 470, 471, 648, 1175, 472, 1176, 1155, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	1156, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1177, 524, 525, 526,
	527, 655, 1214, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 1119, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 1157, 574, 575, 0, 576, 577,
	0, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 659, 660, 661, 662, 0,
	595, 0, 587, 588, 589, 1158, 590, 1159, 0, 591,
	592, 593, 594, 0, 596, 597, 0, 0, 598, 599,
	600, 602, 603, 601, 604, 1120, 605, 0, 0, 606,
	607, 608, 665, 666, 667, 0, 610, 609, 611, 668,
	0, 612, 0, 1202, 0, 1220, 613, 614, 669, 615,
	616, 617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 1210, 0, 1208, 1122, 0, 0,
	0, 0, 280, 281, 1162, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 1121, 0, 296,
	624, 625, 626, 0, 297, 298, 1128, 0, 1109, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1163, 321, 322,
	323, 1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325,
	326, 327, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1153, 1154, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1164, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1160, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 1123, 1124, 1127, 462, 1166, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 269,
	391, 392, 393, 395, 0, 1165, 394, 641, 642, 0,
	643, 0, 396, 397, 1167, 1125, 1168, 398, 399, 400,
	1169, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 1206, 408, 410, 409, 0, 411, 1161, 1170, 412,
	413, 1171, 0, 414, 0, 0, 0, 415, 416, 419,
	1116, 1115, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1172, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1173, 458, 448, 0, 270, 1174,
	459, 460, 0, 1126, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 1212, 467, 468, 469, 0, 0, 470,
	471, 648, 1175, 472, 1176, 1155, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 1156, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1177, 524, 525, 526, 527, 655,
	1214, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 1119, 550, 551, 533, 534, 552, 553, 1178, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 1157, 574, 575, 0, 576, 577, 0, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 1158, 590, 1159, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 1120, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 0, 610, 609, 611, 668, 1220, 612,
	0, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1122, 0, 1210, 0, 1208, 280, 281, 1162, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	1121, 0, 296, 624, 625, 626, 0, 297, 298, 1128,
	0, 1109, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1163, 321, 322, 323, 1112, 1110, 1111, 1118, 1114, 1113,
	1117, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1153, 1154,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1164, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1160, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 1123, 1124, 1127,
	462, 1166, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 269, 391, 392, 393, 395, 0, 1165, 394,
	641, 642, 0, 643, 0, 396, 397, 1167, 1125, 1168,
	398, 399, 400, 1169, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 1206, 408, 410, 409, 0, 411,
	1161, 1170, 412, 413, 1171, 0, 414, 0, 0, 0,
	415, 416, 419, 1116, 1115, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1172, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1173, 458, 448,
	0, 270, 1174, 459, 460, 0, 1126, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 1212, 467, 468, 469,
	0, 0, 470, 471, 648, 1175, 472, 1176, 1155, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 1156, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1177, 524, 525,
	526, 527, 655, 1214, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 1119, 550, 551, 533, 534, 552,
	553, 1178, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 1157, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 1158, 590, 1159, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 1120, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 0, 610, 609, 611,
	668, 1220, 612, 0, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1122, 0, 1210, 0, 1208, 280, 281,
	1162, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 1121, 0, 296, 624, 625, 626, 0,
	297, 298, 1128, 0, 1109, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1163, 321, 322, 323, 1112, 1110, 1111,
	1118, 1114, 1113, 1117, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1153, 1154, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1164, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1160, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	1123, 1124, 1127, 462, 1166, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 269, 391, 392, 393, 395,
	0, 1165, 394, 641, 642, 0, 643, 0, 396, 397,
	1167, 1125, 1168, 398, 399, 400, 1169, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1161, 1170, 412, 413, 1171, 0, 414,
	0, 0, 0, 415, 416, 419, 1116, 1115, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1172, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1173, 458, 448, 0, 270, 1174, 459, 460, 0, 1126,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 1175, 472,
	1176, 1155, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 1156, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1177, 524, 525, 526, 527, 655, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 1119, 550, 551,
	533, 534, 552, 553, 1178, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 1157, 574,
	575, 0, 576, 577, 0, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 1158,
	590, 1159, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 1120,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 0,
	610, 609, 611, 668, 1220, 612, 0, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1122, 0, 0, 0,
	3983, 280, 281, 1162, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 1121, 0, 296, 624,
	625, 626, 0, 297, 298, 1128, 0, 1109, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1163, 321, 322, 323,
	1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1153, 1154, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1164, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1160, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 1123, 1124, 1127, 462, 1166, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 269, 391,
	392, 393, 395, 0, 1165, 394, 641, 642, 0, 643,
	0, 396, 397, 1167, 1125, 1168, 398, 399, 400, 1169,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1161, 1170, 412, 413,
	1171, 0, 414, 0, 0, 0, 415, 416, 419, 1116,
	1115, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1172, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1173, 458, 448, 0, 270, 1174, 459,
	460, 0, 1126, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 1175, 472, 1176, 1155, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 1156, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1177, 524, 525, 526, 527, 655, 1214,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	1119, 550, 551, 533, 534, 552, 553, 1178, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 1157, 574, 575, 0, 576, 577, 0, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 659, 660, 661, 662, 0, 595, 0, 587,
	588, 589, 1158, 590, 1159, 0, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 1120, 605, 0, 0, 606, 607, 608, 665,
	666, 667, 0, 610, 609, 611, 668, 1044, 612, 1301,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 618, 0, 1814, 0, 0, 280, 281, 1162, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 0, 623, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 624, 625, 626, 0, 297, 298,
	627, 0, 1306, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1163, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1164, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 636, 0,
	637, 379, 0, 380, 381, 382, 383, 384, 638, 639,
	640, 462, 1166, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 1165,
	394, 641, 642, 0, 643, 0, 396, 397, 1167, 644,
	1168, 398, 399, 400, 1169, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 645, 1170, 412, 413, 1171, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1172, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1173, 458,
	448, 0, 0, 1174, 459, 460, 0, 646, 461, 647,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 1175, 472, 1176, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1177, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 230, 545,
	546, 544, 547, 548, 549, 0, 550, 551, 533, 534,
	552, 553, 1178, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 0,
	576, 577, 0, 573, 564, 232, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 659, 660, 661,
	662, 0, 595, 0, 587, 588, 589, 663, 590, 664,
	0, 591, 592, 593, 594, 0, 596, 597, 0, 0,
	598, 599, 600, 602, 603, 601, 604, 0, 605, 0,
	0, 606, 607, 608, 1578, 666, 667, 0, 610, 609,
	611, 668, 1575, 612, 1301, 0, 0, 224, 613, 614,
	669, 615, 616, 617, 0, 0, 225, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 618, 0, 186, 0,
	0, 280, 281, 1162, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 624,
	625, 626, 0, 297, 298, 627, 0, 1306, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1163, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 631, 632, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1164, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 636, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 638, 639, 640, 462, 1166, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 1165, 394, 641, 642, 0, 643,
	0, 396, 397, 1167, 644, 1168, 398, 399, 400, 1169,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 645, 1170, 412, 413,
	1171, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1172, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1173, 458, 448, 0, 0, 1174, 459,
	460, 0, 646, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 1175, 472, 1176, 649, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 652, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1177, 524, 525, 526, 527, 655, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 230, 545, 546, 544, 547, 548, 549,
	0, 550, 551, 533, 534, 552, 553, 1178, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 658, 574, 575, 0, 576, 577, 0, 573, 564,
	232, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 659, 660, 661, 662, 0, 595, 0, 587,
	588, 589, 663, 590, 664, 0, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 0, 605, 0, 0, 606, 607, 608, 1578,
	666, 667, 0, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 224, 613, 614, 669, 615, 616, 617, 1301,
	1300, 225, 0, 0, 0, 1298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 186, 278, 279, 0, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 280, 281, 1162, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 0, 623, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 624, 625, 626, 0, 297, 298,
	627, 0, 1306, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1163, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1164, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 636, 0,
	637, 379, 0, 380, 381, 382, 383, 384, 638, 639,
	640, 462, 1166, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 1165,
	394, 641, 642, 0, 643, 0, 396, 397, 1167, 644,
	1168, 398, 399, 400, 1169, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 645, 1170, 412, 413, 1171, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1172, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1173, 458,
	448, 0, 0, 1174, 459, 460, 0, 646, 461, 647,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 1175, 472, 1176, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1177, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 0, 550, 551, 533, 534,
	552, 553, 1178, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 0,
	576, 577, 0, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 659, 660, 661,
	662, 0, 595, 0, 587, 588, 589, 663, 590, 664,
	0, 591, 592, 593, 594, 0, 596, 597, 0, 0,
	598, 599, 600, 602, 603, 601, 604, 0, 605, 0,
	0, 606, 607, 608, 665, 666, 667, 0, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 1301, 1300, 0, 0, 0, 0,
	1298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 1600, 278,
	279, 0, 0, 0, 0, 0, 618, 0, 0, 0,
	0, 280, 281, 1162, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 624,
	625, 626, 0, 297, 298, 627, 0, 1306, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1163, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 631, 632, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1164, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 636, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 638, 639, 640, 462, 1166, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 1165, 394, 641, 642, 0, 643,
	0, 396, 397, 1167, 644, 1168, 398, 399, 400, 1169,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 645, 1170, 412, 413,
	1171, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1172, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1173, 458, 448, 0, 0, 1174, 459,
	460, 0, 646, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 1175, 472, 1176, 649, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 652, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1177, 524, 525, 526, 527, 655, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	0, 550, 551, 533, 534, 552, 553, 1178, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 658, 574, 575, 0, 576, 577, 0, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 659, 660, 661, 662, 0, 595, 0, 587,
	588, 589, 663, 590, 664, 0, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 0, 605, 0, 0, 606, 607, 608, 665,
	666, 667, 0, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 1301,
	1300, 0, 0, 0, 0, 1298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 3476, 278, 279, 0, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 280, 281, 1162, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 0, 623, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 624, 625, 626, 0, 297, 298,
	627, 0, 1306, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1163, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1164, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 636, 0,
	637, 379, 0, 380, 381, 382, 383, 384, 638, 639,
	640, 462, 1166, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 1165,
	394, 641, 642, 0, 643, 0, 396, 397, 1167, 644,
	1168, 398, 399, 400, 1169, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 645, 1170, 412, 413, 1171, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1172, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1173, 458,
	448, 0, 0, 1174, 459, 460, 0, 646, 461, 647,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 1175, 472, 1176, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 2255, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1177, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 0, 550, 551, 533, 534,
	552, 553, 1178, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 0,
	576, 577, 0, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 659, 660, 661,
	662, 0, 595, 0, 587, 588, 589, 663, 590, 664,
	0, 591, 592, 593, 594, 0, 596, 597, 0, 0,
	598, 599, 600, 602, 603, 601, 604, 0, 605, 0,
	0, 606, 607, 608, 665, 666, 667, 0, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 1301, 2169, 0, 0, 0, 0,
	2170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 1600, 278,
	279, 0, 0, 0, 0, 0, 618, 0, 0, 0,
	0, 280, 281, 1162, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 624,
	625, 626, 0, 297, 298, 627, 0, 1306, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1163, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 631, 632, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1164, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 636, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 638, 639, 640, 462, 1166, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 1165, 394, 641, 642, 0, 643,
	0, 396, 397, 1167, 644, 1168, 398, 399, 400, 1169,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 2168, 410, 409, 0, 411, 645, 1170, 412, 413,
	1171, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1172, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1173, 458, 448, 0, 0, 1174, 459,
	460, 0, 646, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 1175, 472, 1176, 649, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 652, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1177, 524, 525, 526, 527, 655, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	0, 550, 551, 533, 534, 552, 553, 1178, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 658, 574, 575, 0, 576, 577, 0, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 659, 660, 661, 662, 0, 595, 0, 587,
	588, 589, 663, 590, 664, 0, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 0, 605, 0, 0, 606, 607, 608, 665,
	666, 667, 0, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 1301,
	1300, 0, 0, 0, 0, 1298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 1600, 278, 279, 0, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 280, 281, 1162, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 0, 623, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 624, 625, 626, 0, 297, 298,
	627, 0, 1306, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1163, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1164, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 636, 0,
	637, 379, 0, 380, 381, 382, 383, 384, 638, 639,
	640, 462, 1166, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 1165,
	394, 641, 642, 0, 643, 0, 396, 397, 1167, 644,
	1168, 398, 399, 400, 1169, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 645, 1170, 412, 413, 1171, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1172, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1173, 458,
	448, 0, 0, 1174, 459, 460, 0, 646, 461, 647,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 1175, 472, 1176, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1177, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 0, 550, 551, 533, 534,
	552, 553, 1178, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 0,
	576, 577, 0, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 659, 660, 661,
	662, 0, 595, 0, 587, 588, 589, 663, 590, 664,
	0, 591, 592, 593, 594, 0, 596, 597, 0, 0,
	598, 599, 600, 602, 603, 601, 604, 0, 605, 0,
	0, 606, 607, 608, 665, 666, 667, 0, 610, 609,
	611, 668, 1220, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1122, 0, 0, 0, 1584, 280,
	281, 1162, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 0, 623, 290, 291, 292,
	293, 294, 295, 0, 1121, 0, 296, 624, 625, 626,
	0, 297, 298, 1128, 0, 1109, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1163, 321, 322, 323, 1112, 1110,
	1111, 1118, 1114, 1113, 1117, 324, 325, 326, 327, 328,
	0, 329, 628, 629, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1153, 1154, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 633, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1164, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1160, 0, 637, 379, 0, 380, 381, 382, 383,
	384, 1123, 1124, 1127, 462, 1166, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 269, 391, 392, 393,
	395, 0, 1165, 394, 641, 642, 0, 643, 0, 396,
	397, 1167, 1125, 1168, 398, 399, 400, 1169, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1161, 1170, 412, 413, 1171, 0,
	414, 0, 0, 0, 415, 416, 419, 1116, 1115, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1172, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1173, 458, 448, 0, 270, 1174, 459, 460, 0,
	1126, 461, 647, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 1175,
	472, 1176, 1155, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 1156, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 654, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1177, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 1119, 550,
	551, 533, 534, 552, 553, 1178, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 1157,
	574, 575, 0, 576, 577, 0, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	659, 660, 661, 662, 0, 595, 0, 587, 588, 589,
	1158, 590, 1159, 0, 591, 592, 593, 594, 0, 596,
	597, 0, 0, 598, 599, 600, 602, 603, 601, 604,
	1120, 605, 0, 0, 606, 607, 608, 665, 666, 667,
	0, 610, 609, 611, 668, 1044, 612, 265, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 618,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	0, 623, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 624, 625, 626, 0, 297, 298, 627, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 636, 0, 637, 379,
	0, 380, 381, 382, 383, 384, 638, 639, 640, 462,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 0, 394, 641,
	642, 0, 643, 0, 396, 397, 0, 644, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 645,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 458, 448, 0,
	0, 0, 459, 460, 0, 646, 461, 647, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 0, 472, 0, 649, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 655, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 230, 545, 546, 544,
	547, 548, 549, 0, 550, 551, 533, 534, 552, 553,
	0, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 0, 576, 577,
	0, 573, 564, 232, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 659, 660, 661, 662, 0,
	595, 0, 587, 588, 589, 663, 590, 664, 0, 591,
	592, 593, 594, 0, 596, 597, 0, 0, 598, 599,
	600, 602, 603, 601, 604, 0, 605, 0, 0, 606,
	607, 608, 1578, 666, 667, 0, 610, 609, 611, 668,
	265, 612, 0, 0, 0, 224, 613, 614, 669, 615,
	616, 617, 0, 0, 225, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 186, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 638,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 269, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 270, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 0, 610,
	609, 611, 668, 0, 612, 265, 2946, 0, 0, 613,
	614, 669, 615, 616, 617, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 618, 0, 1929,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	624, 625, 626, 0, 297, 298, 627, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 636, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 638, 639, 640, 462, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 641, 642, 0,
	643, 0, 396, 397, 0, 644, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 645, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 0, 0,
	459, 460, 0, 646, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 0, 472, 0, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 0, 550, 551, 533, 534, 552, 553, 0, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 0, 576, 577, 0, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 663, 590, 664, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 0, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 0, 610, 609, 611, 668, 265, 612,
	0, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 4649, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 0, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 638, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 269, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 397, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 270, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 265, 610, 609, 611,
	668, 0, 612, 0, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 280, 281, 3426, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 0,
	623, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 624, 625, 626, 0, 297, 298, 627, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 628, 629, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 636, 0, 637, 379, 0,
	380, 381, 382, 383, 384, 638, 639, 640, 462, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 0, 0, 394, 641, 642,
	0, 643, 0, 396, 397, 0, 644, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 645, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 270,
	0, 459, 460, 0, 646, 461, 647, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 0, 472, 0, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 0, 550, 551, 533, 534, 552, 553, 0,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 0, 576, 577, 0,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 659, 660, 661, 662, 0, 595,
	0, 587, 588, 589, 663, 590, 664, 0, 591, 592,
	593, 594, 0, 596, 597, 0, 0, 598, 599, 600,
	602, 603, 601, 604, 0, 605, 0, 0, 606, 607,
	608, 665, 666, 667, 265, 610, 609, 611, 668, 0,
	612, 0, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 618, 0, 0, 0,
	0, 280, 281, 1572, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 624,
	625, 626, 0, 297, 298, 627, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 631, 632, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 636, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 638, 639, 640, 462, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 641, 642, 0, 643,
	0, 396, 397, 0, 644, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 645, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 0, 0, 459,
	460, 0, 646, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 0, 472, 0, 649, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 652, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 655, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	0, 550, 551, 533, 534, 552, 553, 0, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 658, 574, 575, 0, 576, 577, 0, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 659, 660, 661, 662, 0, 595, 0, 587,
	588, 589, 663, 590, 664, 0, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 0, 605, 0, 0, 606, 607, 608, 665,
	666, 667, 0, 610, 609, 611, 668, 265, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 618,
	0, 0, 0, 2934, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	0, 623, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 624, 625, 626, 0, 297, 298, 627, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 636, 0, 637, 379,
	0, 380, 381, 382, 383, 384, 638, 639, 640, 462,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 0, 394, 641,
	642, 0, 643, 0, 396, 397, 0, 644, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 645,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 458, 448, 0,
	0, 0, 459, 460, 0, 646, 461, 647, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 0, 472, 0, 649, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 655, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 0, 550, 551, 533, 534, 552, 553,
	0, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 0, 576, 577,
	0, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 659, 660, 661, 662, 0,
	595, 0, 587, 588, 589, 663, 590, 664, 0, 591,
	592, 593, 594, 0, 596, 597, 0, 0, 598, 599,
	600, 602, 603, 601, 604, 0, 605, 0, 0, 606,
	607, 608, 665, 666, 667, 0, 610, 609, 611, 668,
	265, 612, 0, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 3582, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 638,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 0, 610,
	609, 611, 668, 885, 612, 792, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 618, 0, 2246,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	624, 625, 626, 0, 297, 298, 627, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 799, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 883, 0, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 636, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 638, 639, 640, 462, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 269,
	391, 392, 393, 395, 0, 0, 394, 641, 642, 0,
	643, 0, 396, 397, 0, 644, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 645, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 270, 0,
	459, 460, 0, 646, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 0, 472, 0, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 0, 550, 551, 533, 534, 552, 553, 0, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 0, 576, 577, 0, 573,
	564, 797, 578, 579, 580, 581, 582, 798, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 663, 590, 664, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 0, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 0, 610, 609, 611, 668, 790, 612,
	792, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 802, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 799, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 638,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 269, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 270, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 797, 578, 579, 580,
	581, 582, 798, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 1968, 610,
	609, 611, 668, 0, 612, 0, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	0, 0, 802, 0, 0, 280, 281, 1162, 282, 283,
	284, 285, 286, 287, 0, 1974, 0, 288, 1964, 289,
	1980, 0, 1987, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 1990, 1991, 0, 0, 297, 298, 0,
	0, 1306, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1163, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 1145, 329, 1978, 1977,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1130, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 1976, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1164, 367, 368, 1985, 1986, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 0, 380, 381, 382, 383, 384, 0, 0, 0,
	462, 1166, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 1165, 394,
	1971, 1972, 0, 1967, 0, 396, 397, 1167, 0, 1168,
	398, 399, 400, 1169, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	0, 1170, 412, 413, 1171, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1172, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1173, 458, 448,
	0, 0, 1174, 459, 460, 0, 0, 461, 1979, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 0, 1175, 472, 1176, 0, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 1961, 485, 486, 487, 1962, 488, 489,
	490, 0, 491, 0, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1975, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1177, 524, 525,
	526, 527, 0, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 1178, 554, 555, 556, 557, 558, 559, 1973, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	1989, 567, 568, 569, 570, 0, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 1981, 1982, 1983, 1984,
	0, 595, 0, 587, 588, 589, 0, 590, 0, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 0, 1965, 1988, 0, 610, 609, 611,
	0, 0, 612, 0, 0, 792, 0, 613, 614, 0,
	615, 616, 617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 618, 0, 0,
	0, 1955, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	624, 625, 626, 0, 297, 298, 627, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 799, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 636, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 638, 639, 640, 462, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 269,
	391, 392, 393, 395, 0, 0, 394, 641, 642, 0,
	643, 0, 396, 397, 0, 644, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 645, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 270, 0,
	459, 460, 0, 646, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 0, 472, 0, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 0, 550, 551, 533, 534, 552, 553, 0, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 0, 576, 577, 0, 573,
	564, 797, 578, 579, 580, 581, 582, 798, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 663, 590, 664, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 0, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 792, 610, 609, 611, 668, 0, 612,
	0, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 802, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 799,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 638, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 270, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 2289, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 2290, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 797,
	578, 579, 580, 581, 582, 798, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 2291, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 0, 610, 609, 611, 668, 2038, 612, 1301, 2005,
	0, 0, 613, 614, 669, 615, 616, 617, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 802, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 280, 281, 1162, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 0, 297, 298, 627,
	0, 1306, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1163, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	2002, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1164, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 638, 639, 640,
	462, 1166, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 1165, 394,
	641, 642, 0, 643, 0, 396, 397, 1167, 644, 1168,
	398, 399, 400, 1169, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 1170, 412, 413, 1171, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1172, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1173, 458, 448,
	0, 0, 1174, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 1175, 472, 1176, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1177, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 2003, 550, 551, 533, 534, 552,
	553, 1178, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 0, 610, 609, 611,
	668, 1999, 612, 1301, 2005, 0, 0, 613, 614, 669,
	615, 616, 617, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 1162, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 1306, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1163, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 2002, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1164, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 638, 639, 640, 462, 1166, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 1165, 394, 641, 642, 0, 643, 0,
	396, 397, 1167, 644, 1168, 398, 399, 400, 1169, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 1170, 412, 413, 1171,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1172,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1173, 458, 448, 0, 0, 1174, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	1175, 472, 1176, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1177, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 2003,
	550, 551, 533, 534, 552, 553, 1178, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 792, 610, 609, 611, 668, 0, 612, 0, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 624, 625, 626, 0,
	297, 298, 627, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 799, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 631, 632, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	636, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	638, 639, 640, 462, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 269, 391, 392, 393, 395,
	0, 0, 394, 641, 642, 0, 643, 0, 396, 397,
	0, 644, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 645, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 270, 0, 459, 460, 0, 646,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 0, 472,
	0, 649, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 652, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 655, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 1994, 540, 541, 542, 543,
	0, 1995, 546, 544, 547, 548, 549, 0, 550, 551,
	533, 534, 552, 553, 0, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 658, 574,
	575, 0, 576, 577, 0, 573, 564, 797, 578, 579,
	580, 581, 582, 798, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 663,
	590, 664, 0, 591, 592, 1993, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 0,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 792,
	610, 609, 611, 668, 0, 612, 0, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 618, 0, 802, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 0, 623, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 624, 625, 626, 0, 297, 298,
	627, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 799, 328, 0, 329, 628,
	629, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 636, 0,
	637, 379, 0, 380, 381, 382, 383, 384, 638, 639,
	640, 462, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 269, 391, 392, 393, 395, 0, 0,
	394, 641, 642, 0, 643, 0, 396, 397, 0, 644,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 645, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 270, 0, 459, 460, 0, 646, 461, 647,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 0, 472, 0, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 1946, 540, 541, 542, 543, 0, 1947,
	546, 544, 547, 548, 549, 0, 550, 551, 533, 534,
	552, 553, 0, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 0,
	576, 577, 0, 573, 564, 797, 578, 579, 580, 581,
	582, 798, 584, 354, 585, 0, 586, 659, 660, 661,
	662, 0, 595, 0, 587, 588, 589, 663, 590, 664,
	0, 591, 592, 1945, 594, 0, 596, 597, 0, 0,
	598, 599, 600, 602, 603, 601, 604, 0, 605, 0,
	0, 606, 607, 608, 665, 666, 667, 0, 610, 609,
	611, 668, 0, 612, 1301, 2005, 0, 0, 613, 614,
	669, 615, 616, 617, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 802, 0, 0, 0, 0, 618, 0, 0, 0,
	0, 280, 281, 1162, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 624,
	625, 626, 0, 297, 298, 627, 0, 1306, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1163, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 2002, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 631, 632, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1164, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 636, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 638, 639, 640, 462, 1166, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 1165, 394, 641, 642, 0, 643,
	0, 396, 397, 1167, 644, 1168, 398, 399, 400, 1169,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 645, 1170, 412, 413,
	1171, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1172, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1173, 458, 448, 0, 0, 1174, 459,
	460, 0, 646, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 1175, 472, 1176, 649, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 652, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1177, 524, 525, 526, 527, 655, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	2003, 550, 551, 533, 534, 552, 553, 1178, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 658, 574, 575, 0, 576, 577, 0, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 659, 660, 661, 662, 0, 595, 0, 587,
	588, 589, 663, 590, 664, 0, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 0, 605, 0, 0, 606, 607, 608, 665,
	666, 667, 0, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 1301,
	1300, 0, 0, 0, 0, 1298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 280, 281, 1162, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 0, 623, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 624, 625, 626, 0, 297, 298,
	627, 0, 1306, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1163, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1164, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 636, 0,
	637, 379, 0, 380, 381, 382, 383, 384, 638, 639,
	640, 462, 1166, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 1165,
	394, 641, 642, 0, 643, 0, 396, 397, 1167, 644,
	1168, 398, 399, 400, 1169, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 645, 1170, 412, 413, 1171, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1172, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1173, 458,
	448, 0, 0, 1174, 459, 460, 3770, 646, 461, 647,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 1175, 472, 1176, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1177, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 0, 550, 551, 533, 534,
	552, 553, 1178, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 0,
	576, 577, 0, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 659, 660, 661,
	662, 0, 595, 0, 587, 588, 589, 663, 590, 664,
	0, 591, 592, 593, 594, 0, 596, 597, 0, 0,
	598, 599, 600, 602, 603, 601, 604, 0, 605, 0,
	0, 606, 607, 608, 665, 666, 667, 0, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 1301, 1300, 0, 0, 0, 0,
	1298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 618, 0, 0, 0,
	0, 280, 281, 1162, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 624,
	625, 626, 0, 297, 298, 627, 0, 1306, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1163, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 631, 632, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1164, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 636, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 638, 639, 640, 462, 1166, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 1165, 394, 641, 642, 0, 643,
	0, 396, 397, 1167, 644, 1168, 398, 399, 400, 1169,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 645, 1170, 412, 413,
	1171, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1172, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1173, 458, 448, 0, 0, 1174, 459,
	460, 3397, 646, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 1175, 472, 1176, 649, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 652, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1177, 524, 525, 526, 527, 655, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	0, 550, 551, 533, 534, 552, 553, 1178, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 658, 574, 575, 0, 576, 577, 0, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 659, 660, 661, 662, 0, 595, 0, 587,
	588, 589, 663, 590, 664, 0, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 0, 605, 0, 0, 606, 607, 608, 665,
	666, 667, 265, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 0, 623, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 624, 625, 626,
	0, 297, 298, 627, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 628, 629, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 631, 632, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 633, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 636, 0, 637, 379, 0, 380, 381, 382, 383,
	384, 638, 639, 640, 462, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 269, 391, 392, 393,
	395, 0, 0, 394, 641, 642, 0, 643, 0, 396,
	397, 0, 644, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 645, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 458, 448, 0, 270, 0, 459, 460, 0,
	646, 461, 647, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 0,
	472, 0, 649, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 652, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 654, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 0, 550,
	551, 533, 534, 552, 553, 0, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 658,
	574, 575, 0, 576, 577, 0, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	659, 660, 661, 662, 0, 595, 0, 587, 588, 589,
	663, 590, 664, 0, 591, 592, 593, 594, 0, 596,
	597, 0, 0, 598, 599, 600, 602, 603, 601, 604,
	0, 605, 0, 0, 606, 607, 608, 665, 666, 667,
	0, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 1628, 0, 1301,
	1300, 0, 0, 0, 0, 1298, 0, 0, 0, 0,
	0, 0, 0, 0, 802, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 280, 281, 1162, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 0, 623, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 624, 625, 626, 0, 297, 298,
	627, 0, 1306, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1163, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 0, 268, 0, 0, 0, 0, 0, 1627,
	362, 363, 633, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1164, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 636, 0,
	637, 379, 0, 380, 381, 382, 383, 384, 638, 639,
	640, 462, 1166, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 1165,
	394, 641, 642, 0, 643, 0, 396, 397, 1167, 644,
	1168, 398, 399, 400, 1169, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 645, 1170, 412, 413, 1171, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1172, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1173, 458,
	448, 0, 0, 1174, 459, 460, 0, 646, 461, 647,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 1175, 472, 1176, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 1626, 502, 654, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1177, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 1625, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 0, 550, 551, 533, 534,
	552, 553, 1178, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 0,
	576, 577, 0, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 659, 660, 661,
	662, 0, 595, 0, 587, 588, 589, 663, 590, 664,
	0, 591, 592, 593, 594, 0, 596, 597, 0, 0,
	598, 599, 600, 602, 603, 601, 604, 0, 605, 0,
	0, 606, 607, 608, 665, 666, 667, 0, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 1546, 0, 1301, 1300, 0, 0,
	0, 0, 1298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 280, 281, 1162, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 0,
	623, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 624, 625, 626, 0, 297, 298, 627, 0, 1306,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1163, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 628, 629, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1164,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 636, 0, 637, 379, 0,
	380, 381, 382, 383, 384, 1545, 639, 640, 462, 1166,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 1165, 394, 641, 642,
	0, 643, 0, 396, 397, 1167, 644, 1168, 398, 399,
	400, 1169, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 645, 1170,
	412, 413, 1171, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1172, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1173, 458, 448, 0, 0,
	1174, 459, 460, 0, 646, 461, 647, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 1175, 472, 1176, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1177, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 0, 550, 551, 533, 534, 552, 553, 1178,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 0, 576, 577, 0,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 659, 660, 661, 662, 0, 595,
	0, 587, 588, 589, 663, 590, 664, 0, 591, 592,
	593, 594, 0, 596, 597, 0, 0, 598, 599, 600,
	602, 603, 601, 604, 0, 605, 0, 0, 606, 607,
	608, 665, 666, 667, 0, 610, 609, 611, 668, 0,
	612, 0, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 1506, 0, 1301, 1300, 0, 0, 0, 0, 1298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 1162, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 1306, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1163, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1164, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 638, 639, 640, 462, 1166, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 1165, 394, 641, 642, 0, 643, 0,
	396, 397, 1167, 644, 1168, 398, 399, 400, 1169, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 1170, 412, 413, 1171,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1172,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1173, 458, 448, 0, 0, 1174, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	1175, 472, 1176, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1177, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 1178, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 0, 610, 609, 611, 668, 0, 612, 0, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 1474, 0,
	1301, 1300, 0, 0, 0, 0, 1298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 1162,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 1306, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1163, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1164, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 1473,
	639, 640, 462, 1166, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	1165, 394, 641, 642, 0, 643, 0, 396, 397, 1167,
	644, 1168, 398, 399, 400, 1169, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 1170, 412, 413, 1171, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1172, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1173,
	458, 448, 0, 0, 1174, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 1175, 472, 1176,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1177,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 1178, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 0, 610,
	609, 611, 668, 0, 612, 0, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 1295, 0, 1301, 1300, 0,
	0, 0, 0, 1298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 618,
	0, 0, 0, 0, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	0, 623, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 624, 625, 626, 0, 297, 298, 627, 0,
	1306, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1163,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1164, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 636, 0, 637, 379,
	0, 380, 381, 382, 383, 384, 1294, 639, 640, 462,
	1166, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 1165, 394, 641,
	642, 0, 643, 0, 396, 397, 1167, 644, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 645,
	1170, 412, 413, 1171, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 0,
	0, 1174, 459, 460, 0, 646, 461, 647, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 1175, 472, 1176, 649, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1177, 524, 525, 526,
	527, 655, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 0, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 0, 576, 577,
	0, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 659, 660, 661, 662, 0,
	595, 0, 587, 588, 589, 663, 590, 664, 0, 591,
	592, 593, 594, 0, 596, 597, 0, 0, 598, 599,
	600, 602, 603, 601, 604, 0, 605, 0, 0, 606,
	607, 608, 665, 666, 667, 0, 610, 609, 611, 668,
	0, 612, 0, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 1301, 1300, 0, 0, 0, 0, 1298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 280,
	281, 1162, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 0, 623, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 624, 625, 626,
	0, 297, 298, 627, 0, 1306, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1163, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 628, 629, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 631, 632, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 633, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1164, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 636, 0, 637, 379, 0, 380, 381, 382, 383,
	384, 638, 639, 640, 462, 1166, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1165, 394, 641, 642, 0, 643, 0, 396,
	397, 1167, 644, 1168, 398, 399, 400, 1169, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 645, 1170, 412, 413, 1171, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1172, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1173, 458, 448, 0, 0, 1174, 459, 460, 0,
	646, 461, 647, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 1175,
	472, 1176, 649, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 652, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 654, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1177, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 0, 550,
	551, 533, 534, 552, 553, 1178, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 658,
	574, 575, 0, 576, 577, 0, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	659, 660, 661, 662, 0, 595, 0, 587, 588, 589,
	663, 590, 664, 0, 591, 592, 593, 594, 0, 596,
	597, 0, 0, 598, 599, 600, 602, 603, 601, 604,
	0, 605, 0, 0, 606, 607, 608, 665, 666, 667,
	0, 610, 609, 611, 668, 0, 612, 1301, 2005, 0,
	0, 613, 614, 669, 615, 616, 617, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 618,
	0, 0, 0, 0, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	0, 623, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 624, 625, 626, 0, 297, 298, 627, 0,
	1306, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1163,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 2045,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1164, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 636, 0, 637, 379,
	0, 380, 381, 382, 383, 384, 638, 639, 640, 462,
	1166, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 1165, 394, 641,
	642, 0, 643, 0, 396, 397, 1167, 644, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 645,
	1170, 412, 413, 1171, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 0,
	0, 1174, 459, 460, 0, 646, 461, 647, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 1175, 472, 1176, 649, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1177, 524, 525, 526,
	527, 655, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 0, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 0, 576, 577,
	0, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 659, 660, 661, 662, 0,
	595, 0, 587, 588, 589, 663, 590, 664, 0, 591,
	592, 593, 594, 0, 596, 597, 0, 0, 598, 599,
	600, 602, 603, 601, 604, 0, 605, 0, 0, 606,
	607, 608, 665, 666, 667, 0, 610, 609, 611, 668,
	0, 612, 1301, 1300, 0, 0, 613, 614, 669, 615,
	616, 617, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 280,
	281, 1162, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 0, 623, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 624, 625, 626,
	0, 297, 298, 627, 0, 1306, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1163, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 628, 629, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 631, 632, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 633, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1164, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 636, 0, 637, 379, 0, 380, 381, 382, 383,
	384, 638, 639, 640, 462, 1166, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1165, 394, 641, 642, 0, 643, 0, 396,
	397, 1167, 644, 1168, 398, 399, 400, 1169, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 645, 1170, 412, 413, 1171, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1172, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1173, 458, 448, 0, 0, 1174, 459, 460, 0,
	646, 461, 647, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 1175,
	472, 1176, 649, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 652, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 654, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1177, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 0, 550,
	551, 533, 534, 552, 553, 1178, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 658,
	574, 575, 0, 576, 577, 0, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	659, 660, 661, 662, 0, 595, 0, 587, 588, 589,
	663, 590, 664, 0, 591, 592, 593, 594, 0, 596,
	597, 0, 0, 598, 599, 600, 602, 603, 601, 604,
	0, 605, 0, 0, 606, 607, 608, 665, 666, 667,
	1301, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 1162,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 1306, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1163, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1164, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 638,
	639, 640, 462, 1166, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	1165, 394, 641, 642, 0, 643, 0, 396, 397, 1167,
	644, 1168, 398, 399, 400, 1169, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 1170, 412, 413, 1171, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1172, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1173,
	458, 448, 0, 0, 1174, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 1175, 472, 1176,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1177,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 1178, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 265, 610,
	609, 611, 668, 0, 612, 0, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 2753, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 2750, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 2757, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 2959, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 2756,
	0, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 638, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 2956, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 2958, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 2955, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 2755, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 2957, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 265, 610, 609, 611,
	668, 0, 612, 0, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 0,
	623, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 624, 625, 626, 2753, 297, 298, 627, 0, 0,
	2747, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 2750, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 628, 629, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 2757, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 0, 365, 366, 2756, 0, 0,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 636, 0, 637, 379, 0,
	380, 381, 382, 383, 384, 2746, 639, 640, 462, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 641, 642,
	0, 643, 0, 396, 397, 0, 644, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 645, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 0,
	0, 459, 460, 0, 646, 461, 647, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 0, 472, 0, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 2755, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 0, 550, 551, 533, 534, 552, 553, 0,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 0, 576, 577, 0,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 659, 660, 661, 662, 0, 595,
	0, 587, 588, 589, 663, 590, 664, 0, 591, 592,
	593, 594, 0, 596, 597, 0, 2754, 598, 599, 600,
	602, 603, 601, 604, 0, 605, 0, 0, 606, 607,
	608, 665, 666, 667, 0, 610, 609, 611, 668, 1699,
	612, 265, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 1698, 278, 279, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 624, 625, 626, 0,
	297, 298, 627, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 631, 632, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	636, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	638, 639, 640, 462, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 269, 391, 392, 393, 395,
	0, 0, 394, 641, 642, 0, 643, 0, 396, 397,
	0, 644, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 645, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 270, 0, 459, 460, 0, 646,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 0, 472,
	0, 649, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 652, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 655, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 1702, 546, 544, 547, 548, 549, 0, 550, 551,
	533, 534, 552, 553, 0, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 658, 574,
	575, 0, 576, 577, 0, 573, 564, 1700, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 663,
	590, 664, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 0,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 0,
	1701, 609, 611, 668, 1448, 612, 265, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 0,
	623, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 624, 625, 626, 0, 297, 298, 627, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 628, 629, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 636, 0, 637, 379, 0,
	380, 381, 382, 383, 384, 1450, 639, 640, 462, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 0, 0, 394, 641, 642,
	0, 643, 0, 396, 397, 0, 644, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 645, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 270,
	0, 459, 460, 0, 646, 461, 647, 463, 464, 0,
	0, 465, 0, 0, 1212, 467, 468, 469, 0, 0,
	470, 471, 648, 0, 472, 0, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 0, 550, 551, 533, 534, 552, 553, 0,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 0, 576, 577, 0,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 659, 660, 661, 662, 0, 595,
	0, 587, 588, 589, 663, 590, 664, 0, 591, 592,
	593, 594, 0, 596, 597, 0, 0, 598, 599, 600,
	602, 603, 601, 604, 0, 605, 0, 0, 606, 607,
	608, 665, 666, 667, 0, 610, 609, 611, 668, 1445,
	612, 265, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 624, 625, 626, 0,
	297, 298, 627, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 631, 632, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	636, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	1447, 639, 640, 462, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 269, 391, 392, 393, 395,
	0, 0, 394, 641, 642, 0, 643, 0, 396, 397,
	0, 644, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 645, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 270, 0, 459, 460, 0, 646,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 1212,
	467, 468, 469, 0, 0, 470, 471, 648, 0, 472,
	0, 649, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 652, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 655, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 0, 550, 551,
	533, 534, 552, 553, 0, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 658, 574,
	575, 0, 576, 577, 0, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 663,
	590, 664, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 0,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 0,
	610, 609, 611, 668, 1352, 612, 265, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 0,
	623, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 624, 625, 626, 0, 297, 298, 627, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 628, 629, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 636, 0, 637, 379, 0,
	380, 381, 382, 383, 384, 1354, 639, 640, 462, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 0, 0, 394, 641, 642,
	0, 643, 0, 396, 397, 0, 644, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 645, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 270,
	0, 459, 460, 0, 646, 461, 647, 463, 464, 0,
	0, 465, 0, 0, 1212, 467, 468, 469, 0, 0,
	470, 471, 648, 0, 472, 0, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 0, 550, 551, 533, 534, 552, 553, 0,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 0, 576, 577, 0,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 659, 660, 661, 662, 0, 595,
	0, 587, 588, 589, 663, 590, 664, 0, 591, 592,
	593, 594, 0, 596, 597, 0, 0, 598, 599, 600,
	602, 603, 601, 604, 0, 605, 0, 0, 606, 607,
	608, 665, 666, 667, 0, 610, 609, 611, 668, 701,
	612, 265, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 700, 276, 277, 690, 278, 279, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 624, 625, 626, 0,
	297, 298, 627, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 693,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 631, 632, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 694, 378,
	636, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	638, 639, 640, 462, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 641, 642, 0, 643, 0, 396, 397,
	0, 644, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 645, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 0, 0, 459, 460, 0, 646,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 0, 472,
	0, 649, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 652, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 655, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	695, 545, 546, 544, 547, 548, 549, 0, 550, 551,
	533, 534, 552, 553, 0, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 658, 574,
	575, 0, 576, 577, 0, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 663,
	590, 664, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 0,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 0,
	610, 609, 611, 668, 689, 612, 265, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	690, 278, 279, 0, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 0,
	623, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 624, 625, 626, 0, 297, 298, 627, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 693, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 628, 629, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 694, 378, 636, 0, 637, 379, 0,
	380, 381, 382, 383, 384, 638, 639, 640, 462, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 641, 642,
	0, 643, 0, 396, 397, 0, 644, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 645, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 0,
	0, 459, 460, 0, 646, 461, 647, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 0, 472, 0, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 695, 545, 546, 544, 547,
	548, 549, 0, 550, 551, 533, 534, 552, 553, 0,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 0, 576, 577, 0,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 659, 660, 661, 662, 0, 595,
	0, 587, 588, 589, 663, 590, 664, 0, 591, 592,
	593, 594, 0, 596, 597, 0, 0, 598, 599, 600,
	602, 603, 601, 604, 0, 605, 0, 0, 606, 607,
	608, 665, 666, 667, 265, 610, 609, 611, 668, 0,
	612, 0, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 618, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 624,
	625, 626, 0, 297, 298, 627, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 631, 632, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 636, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 638, 639, 640, 462, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 269, 391,
	392, 393, 395, 0, 0, 394, 641, 642, 0, 643,
	0, 396, 397, 0, 644, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 645, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 270, 0, 459,
	460, 0, 646, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 1212, 467, 468, 469, 0, 0, 470, 471,
	648, 0, 472, 0, 649, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 652, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 655, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	0, 550, 551, 533, 534, 552, 553, 0, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 658, 574, 575, 0, 576, 577, 0, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 659, 660, 661, 662, 0, 595, 0, 587,
	588, 589, 663, 590, 664, 0, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 0, 605, 0, 0, 606, 607, 608, 665,
	666, 667, 265, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 0, 623, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 624, 625, 626,
	0, 297, 298, 627, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 628, 629, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 631, 632, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 633, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 636, 0, 637, 379, 0, 380, 381, 382, 383,
	384, 638, 639, 640, 462, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 269, 391, 392, 393,
	395, 0, 0, 394, 641, 642, 0, 643, 0, 396,
	397, 0, 644, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 645, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 3347, 458, 448, 0, 270, 0, 459, 460, 0,
	646, 461, 647, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 0,
	472, 0, 649, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 652, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 654, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 0, 550,
	551, 533, 534, 552, 553, 0, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 658,
	574, 575, 0, 576, 577, 0, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	659, 660, 661, 662, 0, 595, 0, 587, 588, 589,
	663, 590, 664, 0, 591, 592, 593, 594, 0, 596,
	597, 0, 0, 598, 599, 600, 602, 603, 601, 604,
	0, 605, 0, 0, 606, 607, 608, 665, 666, 667,
	0, 610, 609, 611, 668, 2904, 612, 265, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 618,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	0, 623, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 624, 625, 626, 0, 297, 298, 627, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 636, 0, 637, 379,
	0, 380, 381, 382, 383, 384, 2903, 639, 640, 462,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 269, 391, 392, 393, 395, 0, 0, 394, 641,
	642, 0, 643, 0, 396, 397, 0, 644, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 645,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 458, 448, 0,
	270, 0, 459, 460, 0, 646, 461, 647, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 0, 472, 0, 649, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 655, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 0, 550, 551, 533, 534, 552, 553,
	0, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 0, 576, 577,
	0, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 659, 660, 661, 662, 0,
	595, 0, 587, 588, 589, 663, 590, 664, 0, 591,
	592, 593, 594, 0, 596, 597, 0, 0, 598, 599,
	600, 602, 603, 601, 604, 0, 605, 0, 0, 606,
	607, 608, 665, 666, 667, 0, 610, 609, 611, 668,
	2261, 612, 265, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 0, 623, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 624, 625, 626,
	0, 297, 298, 627, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 628, 629, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 631, 632, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 633, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 636, 0, 637, 379, 0, 380, 381, 382, 383,
	384, 638, 639, 640, 462, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 269, 391, 392, 393,
	395, 0, 0, 394, 641, 642, 0, 643, 0, 396,
	397, 0, 644, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 645, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 458, 448, 0, 270, 0, 459, 460, 0,
	646, 461, 647, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 0,
	472, 0, 649, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 652, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 654, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 0, 550,
	551, 533, 534, 552, 553, 0, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 658,
	574, 575, 0, 576, 577, 0, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	659, 660, 661, 662, 0, 595, 0, 587, 588, 589,
	663, 590, 664, 0, 591, 592, 593, 594, 0, 596,
	597, 0, 0, 598, 599, 600, 602, 603, 601, 604,
	0, 605, 0, 0, 606, 607, 608, 665, 666, 667,
	265, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 638,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 269, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 270, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 2202, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 0, 610,
	609, 611, 668, 2209, 612, 265, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 618, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	624, 625, 626, 0, 297, 298, 627, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 636, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 2208, 639, 640, 462, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 269,
	391, 392, 393, 395, 0, 0, 394, 641, 642, 0,
	643, 0, 396, 397, 0, 644, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 645, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 270, 0,
	459, 460, 0, 646, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 0, 472, 0, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 0, 550, 551, 533, 534, 552, 553, 0, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 0, 576, 577, 0, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 663, 590, 664, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 0, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 0, 610, 609, 611, 668, 2195, 612,
	265, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 2197,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 269, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 270, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 265, 610,
	609, 611, 668, 0, 612, 0, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 0, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 2165, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 269, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 397, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 270, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 1212, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 0, 610, 609, 611,
	668, 1550, 612, 265, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 1549, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 270, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 0, 610, 609, 611, 668, 1465, 612, 265, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 0, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 638, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 269, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 397, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 270, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 0, 610, 609, 611,
	668, 1458, 612, 265, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 1460, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 270, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 0, 610, 609, 611, 668, 1285, 612, 265, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 0, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 1284, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 269, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 397, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 270, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 0, 610, 609, 611,
	668, 1275, 612, 265, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 1274, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 270, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 0, 610, 609, 611, 668, 1272, 612, 265, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 0, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 1271, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 269, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 397, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 270, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 0, 610, 609, 611,
	668, 1267, 612, 265, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 1266, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 270, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 0, 610, 609, 611, 668, 671, 612, 265, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 0, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 638, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 269, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 397, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 270, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 0, 610, 609, 611,
	668, 256, 612, 265, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 638, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 270, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 265, 610, 609, 611, 668, 0, 612, 0, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 624, 625, 626, 0,
	297, 298, 627, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 631, 632, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	636, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	638, 639, 640, 462, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 269, 391, 392, 393, 395,
	0, 0, 394, 641, 642, 0, 643, 0, 396, 397,
	0, 644, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 645, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 270, 0, 459, 460, 0, 646,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 0, 472,
	0, 649, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 652, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 655, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 0, 550, 551,
	533, 534, 552, 553, 0, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 658, 574,
	575, 0, 576, 577, 0, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 663,
	590, 664, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 0,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 265,
	610, 609, 611, 668, 0, 612, 0, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 0, 623, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 624, 625, 626, 0, 297, 298,
	627, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 693, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 694, 378, 636, 0,
	637, 379, 0, 380, 381, 382, 383, 384, 638, 639,
	640, 462, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 641, 642, 0, 643, 0, 396, 397, 0, 644,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 645, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 0, 0, 459, 460, 0, 646, 461, 647,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 0, 472, 0, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 695, 545,
	546, 544, 547, 548, 549, 0, 550, 551, 533, 534,
	552, 553, 0, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 0,
	576, 577, 0, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 659, 660, 661,
	662, 0, 595, 0, 587, 588, 589, 663, 590, 664,
	0, 591, 592, 593, 594, 0, 596, 597, 0, 0,
	598, 599, 600, 602, 603, 601, 604, 0, 605, 0,
	0, 606, 607, 608, 665, 666, 667, 265, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 618,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	0, 623, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 624, 625, 626, 0, 297, 298, 627, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 2298, 328, 0, 329, 628, 629, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 636, 0, 637, 379,
	0, 380, 381, 382, 383, 384, 638, 639, 640, 462,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 269, 391, 392, 393, 395, 0, 0, 394, 641,
	642, 0, 643, 0, 396, 397, 0, 644, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 645,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 458, 448, 0,
	270, 0, 459, 460, 0, 646, 461, 647, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 0, 472, 0, 649, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 655, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 0, 550, 551, 533, 534, 552, 553,
	0, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 0, 576, 577,
	0, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 659, 660, 661, 662, 0,
	595, 0, 587, 588, 589, 663, 590, 664, 0, 591,
	592, 593, 594, 0, 596, 597, 0, 0, 598, 599,
	600, 602, 603, 601, 604, 0, 605, 0, 0, 606,
	607, 608, 665, 666, 667, 265, 610, 609, 611, 668,
	0, 612, 0, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 618, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	624, 625, 626, 0, 297, 298, 627, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 2296, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 636, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 638, 639, 640, 462, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 269,
	391, 392, 393, 395, 0, 0, 394, 641, 642, 0,
	643, 0, 396, 397, 0, 644, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 645, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 270, 0,
	459, 460, 0, 646, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 0, 472, 0, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 0, 550, 551, 533, 534, 552, 553, 0, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 0, 576, 577, 0, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 663, 590, 664, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 0, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 265, 610, 609, 611, 668, 0, 612,
	0, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 2294,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 638, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 270, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 265, 610, 609, 611, 668, 0, 612, 0, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 624, 625, 626, 0,
	297, 298, 627, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 631, 632, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	636, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	2215, 639, 640, 462, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 269, 391, 392, 393, 395,
	0, 0, 394, 641, 642, 0, 643, 0, 396, 397,
	0, 644, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 645, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 270, 0, 459, 460, 0, 646,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 0, 472,
	0, 649, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 652, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 655, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 0, 550, 551,
	533, 534, 552, 553, 0, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 658, 574,
	575, 0, 576, 577, 0, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 663,
	590, 664, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 0,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 265,
	610, 609, 611, 668, 0, 612, 0, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 0, 623, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 624, 625, 626, 0, 297, 298,
	627, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 636, 0,
	637, 379, 0, 380, 381, 382, 383, 384, 2024, 639,
	640, 462, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 269, 391, 392, 393, 395, 0, 0,
	394, 641, 642, 0, 643, 0, 396, 397, 0, 644,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 645, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 270, 0, 459, 460, 0, 646, 461, 647,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 0, 472, 0, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 0, 550, 551, 533, 534,
	552, 553, 0, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 0,
	576, 577, 0, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 659, 660, 661,
	662, 0, 595, 0, 587, 588, 589, 663, 590, 664,
	0, 591, 592, 593, 594, 0, 596, 597, 0, 0,
	598, 599, 600, 602, 603, 601, 604, 0, 605, 0,
	0, 606, 607, 608, 665, 666, 667, 265, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 618,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	0, 623, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 624, 625, 626, 0, 297, 298, 627, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 636, 0, 637, 379,
	0, 380, 381, 382, 383, 384, 2018, 639, 640, 462,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 269, 391, 392, 393, 395, 0, 0, 394, 641,
	642, 0, 643, 0, 396, 397, 0, 644, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 645,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 458, 448, 0,
	270, 0, 459, 460, 0, 646, 461, 647, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 0, 472, 0, 649, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 655, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 0, 550, 551, 533, 534, 552, 553,
	0, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 0, 576, 577,
	0, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 659, 660, 661, 662, 0,
	595, 0, 587, 588, 589, 663, 590, 664, 0, 591,
	592, 593, 594, 0, 596, 597, 0, 0, 598, 599,
	600, 602, 603, 601, 604, 0, 605, 0, 0, 606,
	607, 608, 665, 666, 667, 0, 610, 609, 611, 668,
	872, 612, 265, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 0, 623, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 624, 625, 626,
	0, 297, 298, 627, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 628, 629, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 631, 632, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 633, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 636, 0, 637, 379, 0, 380, 381, 382, 383,
	384, 638, 639, 640, 462, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 641, 642, 0, 643, 871, 396,
	397, 0, 644, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 645, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 458, 448, 0, 0, 0, 459, 460, 0,
	646, 461, 647, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 0,
	472, 0, 649, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 652, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 654, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 0, 550,
	551, 533, 534, 552, 553, 0, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 658,
	574, 575, 0, 576, 577, 0, 573, 564, 870, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	659, 660, 661, 662, 0, 595, 0, 587, 588, 589,
	663, 590, 664, 0, 591, 592, 593, 594, 0, 596,
	597, 0, 0, 598, 599, 600, 602, 603, 601, 604,
	0, 605, 0, 0, 606, 607, 608, 665, 666, 667,
	265, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 2959, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 638,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 4051, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 0, 610,
	609, 611, 668, 758, 612, 265, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 618, 0, 0,
	0, 0, 280, 281, 1322, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	624, 625, 1320, 0, 297, 298, 627, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 636, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 638, 639, 640, 462, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 641, 642, 0,
	643, 0, 396, 397, 0, 644, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 645, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	759, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 0, 0,
	459, 460, 0, 646, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 0, 472, 0, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 755,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 1323,
	549, 0, 550, 551, 533, 534, 552, 553, 0, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 0, 576, 577, 0, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 754, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 663, 590, 664, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 0, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 0, 610, 609, 611, 668, 758, 612,
	265, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 1322,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 1320, 0, 297,
	298, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 638,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 759, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 755, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 1323, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 754, 660,
	661, 662, 0, 595, 0, 587, 1321, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 0, 610,
	609, 611, 668, 680, 612, 265, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 679,
	278, 279, 0, 0, 0, 0, 0, 618, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	624, 625, 626, 0, 297, 298, 627, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 636, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 638, 639, 640, 462, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 641, 642, 0,
	643, 0, 396, 397, 0, 644, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 645, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 0, 0,
	459, 460, 0, 646, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 0, 472, 0, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 678, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 0, 550, 551, 533, 534, 552, 553, 0, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 0, 576, 577, 0, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 663, 590, 664, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 0, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 0, 610, 609, 611, 668, 0, 612,
	265, 2946, 0, 0, 613, 614, 669, 615, 616, 617,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 638,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 0, 610,
	609, 611, 668, 0, 612, 265, 4061, 0, 0, 613,
	614, 669, 615, 616, 617, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 618, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	624, 625, 626, 0, 297, 298, 627, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 636, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 638, 639, 640, 462, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 641, 642, 0,
	643, 0, 396, 397, 0, 644, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 645, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 0, 0,
	459, 460, 0, 646, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 0, 472, 0, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 0, 550, 551, 533, 534, 552, 553, 0, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 0, 576, 577, 0, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 663, 590, 664, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 0, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 265, 610, 609, 611, 668, 0, 612,
	0, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 638, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 4322, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 265, 610, 609, 611, 668, 0, 612, 0, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 624, 625, 626, 0,
	297, 298, 627, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 631, 632, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	636, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	638, 639, 640, 462, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 641, 642, 0, 643, 0, 396, 397,
	0, 644, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 645, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 0, 0, 459, 460, 0, 646,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 0, 472,
	0, 649, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 652, 491, 653, 492, 493, 3960,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 655, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 0, 550, 551,
	533, 534, 552, 553, 0, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 658, 574,
	575, 0, 576, 577, 0, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 663,
	590, 664, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 0,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 265,
	610, 609, 611, 668, 0, 612, 0, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 0, 623, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 624, 625, 626, 0, 297, 298,
	627, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 3738, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 636, 0,
	637, 379, 0, 380, 381, 382, 383, 384, 638, 639,
	640, 462, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 641, 642, 0, 643, 0, 396, 397, 0, 644,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 645, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 0, 0, 459, 460, 0, 646, 461, 647,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 0, 472, 0, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 0, 550, 551, 533, 534,
	552, 553, 0, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 0,
	576, 577, 0, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 659, 660, 661,
	662, 0, 595, 0, 587, 588, 589, 663, 590, 664,
	0, 591, 592, 593, 594, 0, 596, 597, 0, 0,
	598, 599, 600, 602, 603, 601, 604, 0, 605, 0,
	0, 606, 607, 608, 665, 666, 667, 265, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 618,
	0, 2639, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	0, 623, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 624, 625, 626, 0, 297, 298, 627, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 636, 0, 637, 379,
	0, 380, 381, 382, 383, 384, 638, 639, 640, 462,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 0, 394, 641,
	642, 0, 643, 0, 396, 397, 0, 644, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 645,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 458, 448, 0,
	0, 0, 459, 460, 0, 646, 461, 647, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 0, 472, 0, 649, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 655, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 0, 550, 551, 533, 534, 552, 553,
	0, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 0, 576, 577,
	0, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 659, 660, 661, 662, 0,
	595, 0, 587, 588, 589, 663, 590, 664, 0, 591,
	592, 593, 594, 0, 596, 597, 0, 0, 598, 599,
	600, 602, 603, 601, 604, 0, 605, 0, 0, 606,
	607, 608, 665, 666, 667, 0, 610, 609, 611, 668,
	0, 612, 265, 2946, 0, 0, 613, 614, 669, 615,
	616, 617, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 0, 623, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 624, 625, 626,
	0, 297, 298, 627, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 628, 629, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 631, 632, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 633, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 636, 0, 637, 379, 0, 380, 381, 382, 383,
	384, 638, 639, 640, 462, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 641, 642, 0, 643, 0, 396,
	397, 0, 644, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 645, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 458, 448, 0, 0, 0, 459, 460, 0,
	646, 461, 647, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 2943, 0, 0, 470, 471, 648, 0,
	472, 0, 649, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 652, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 654, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 0, 550,
	551, 533, 534, 552, 553, 0, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 658,
	574, 575, 0, 576, 577, 0, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	659, 660, 661, 662, 0, 595, 0, 587, 588, 589,
	663, 590, 664, 0, 591, 592, 593, 594, 0, 596,
	597, 0, 0, 598, 599, 600, 602, 603, 601, 604,
	0, 605, 0, 0, 606, 607, 608, 665, 666, 667,
	265, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 271, 273, 272,
	274, 275, 276, 277, 2271, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 638,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 0, 610,
	609, 611, 668, 2259, 612, 265, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 618, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	624, 625, 626, 0, 297, 298, 627, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 636, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 638, 639, 640, 462, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 641, 642, 0,
	643, 0, 396, 397, 0, 644, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 645, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 0, 0,
	459, 460, 0, 646, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 0, 472, 0, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 0, 550, 551, 533, 534, 552, 553, 0, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 0, 576, 577, 0, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 663, 590, 664, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 0, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 0, 610, 609, 611, 668, 758, 612,
	265, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	748, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 638,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 759, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 755, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 1583, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 754, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 0, 610,
	609, 611, 668, 1556, 612, 265, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 618, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	624, 625, 626, 0, 297, 298, 627, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 636, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 1555, 639, 640, 462, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 641, 642, 0,
	643, 0, 396, 397, 0, 644, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 645, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 0, 0,
	459, 460, 0, 646, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 0, 472, 0, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 0, 550, 551, 533, 534, 552, 553, 0, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 0, 576, 577, 0, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 663, 590, 664, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 0, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 0, 610, 609, 611, 668, 1540, 612,
	265, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 1538,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 0, 610,
	609, 611, 668, 1533, 612, 265, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 618, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	624, 625, 626, 0, 297, 298, 627, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 636, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 638, 639, 640, 462, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 641, 642, 0,
	643, 0, 396, 397, 0, 644, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 645, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 0, 0,
	459, 460, 0, 646, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 0, 472, 0, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 0, 550, 551, 533, 534, 552, 553, 0, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 0, 576, 577, 0, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 663, 590, 664, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 0, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 0, 610, 609, 611, 668, 1510, 612,
	265, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 1508,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 0, 610,
	609, 611, 668, 1471, 612, 265, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 618, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	624, 625, 626, 0, 297, 298, 627, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 636, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 638, 639, 640, 462, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 641, 642, 0,
	643, 0, 396, 397, 0, 644, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 645, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 0, 0,
	459, 460, 0, 646, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 0, 472, 0, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 0, 550, 551, 533, 534, 552, 553, 0, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 0, 576, 577, 0, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 663, 590, 664, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 0, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 0, 610, 609, 611, 668, 1453, 612,
	265, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 638,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 0, 610,
	609, 611, 668, 1290, 612, 265, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 618, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	624, 625, 626, 0, 297, 298, 627, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 636, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 1289, 639, 640, 462, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 641, 642, 0,
	643, 0, 396, 397, 0, 644, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 645, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 0, 0,
	459, 460, 0, 646, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 0, 472, 0, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 0, 550, 551, 533, 534, 552, 553, 0, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 0, 576, 577, 0, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 663, 590, 664, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 0, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 0, 610, 609, 611, 668, 1281, 612,
	265, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 1280,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 265, 610,
	609, 611, 668, 0, 612, 0, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 271, 273, 272, 274, 275,
	276, 277, 1234, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 0, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 638, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 397, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 265, 610, 609, 611,
	668, 0, 612, 0, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 271, 273, 272, 274, 275, 276, 277,
	764, 278, 279, 0, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 0,
	623, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 624, 625, 626, 0, 297, 298, 627, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 628, 629, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 636, 0, 637, 379, 0,
	380, 381, 382, 383, 384, 638, 639, 640, 462, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 641, 642,
	0, 643, 0, 396, 397, 0, 644, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 645, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 0,
	0, 459, 460, 0, 646, 461, 647, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 0, 472, 0, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 0, 550, 551, 533, 534, 552, 553, 0,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 0, 576, 577, 0,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 659, 660, 661, 662, 0, 595,
	0, 587, 588, 589, 663, 590, 664, 0, 591, 592,
	593, 594, 0, 596, 597, 0, 0, 598, 599, 600,
	602, 603, 601, 604, 0, 605, 0, 0, 606, 607,
	608, 665, 666, 667, 0, 610, 609, 611, 668, 758,
	612, 265, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 624, 625, 626, 0,
	297, 748, 627, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 746, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 631, 632, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	636, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	638, 639, 640, 462, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 641, 642, 0, 643, 0, 396, 397,
	0, 644, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 645, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 747, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 759, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 0, 0, 459, 460, 0, 646,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 0, 472,
	0, 649, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 652, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 749, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 755, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 750, 549, 0, 550, 551,
	533, 534, 552, 553, 0, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 658, 574,
	575, 0, 576, 577, 0, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 754,
	660, 661, 662, 0, 595, 0, 587, 752, 589, 663,
	590, 664, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 0,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 0,
	610, 609, 611, 668, 740, 612, 265, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 0,
	623, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 624, 625, 626, 0, 297, 298, 627, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 628, 629, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 636, 0, 637, 379, 0,
	380, 381, 382, 383, 384, 638, 639, 640, 462, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 641, 642,
	0, 643, 0, 396, 397, 0, 644, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 645, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 0,
	0, 459, 460, 0, 646, 461, 647, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 0, 472, 0, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 741, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 0, 550, 551, 533, 534, 552, 553, 0,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 0, 576, 577, 0,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 659, 660, 661, 662, 0, 595,
	0, 587, 588, 589, 663, 590, 664, 0, 591, 592,
	593, 594, 0, 596, 597, 0, 0, 598, 599, 600,
	602, 603, 601, 604, 0, 605, 0, 0, 606, 607,
	608, 665, 666, 667, 0, 610, 609, 611, 668, 703,
	612, 265, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 624, 625, 626, 0,
	297, 298, 627, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 631, 632, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	636, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	638, 639, 640, 462, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 641, 642, 0, 643, 0, 396, 397,
	0, 644, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 645, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 0, 0, 459, 460, 0, 646,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 0, 472,
	0, 649, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 652, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 655, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 0, 550, 551,
	533, 534, 552, 553, 0, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 658, 574,
	575, 0, 576, 577, 0, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 663,
	590, 664, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 0,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 0,
	610, 609, 611, 668, 697, 612, 265, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 0,
	623, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 624, 625, 626, 0, 297, 298, 627, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 628, 629, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 636, 0, 637, 379, 0,
	380, 381, 382, 383, 384, 638, 639, 640, 462, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 641, 642,
	0, 643, 0, 396, 397, 0, 644, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 645, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 0,
	0, 459, 460, 0, 646, 461, 647, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 0, 472, 0, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 0, 550, 551, 533, 534, 552, 553, 0,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 0, 576, 577, 0,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 659, 660, 661, 662, 0, 595,
	0, 587, 588, 589, 663, 590, 664, 0, 591, 592,
	593, 594, 0, 596, 597, 0, 0, 598, 599, 600,
	602, 603, 601, 604, 0, 605, 0, 0, 606, 607,
	608, 665, 666, 667, 0, 610, 609, 611, 668, 675,
	612, 265, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 624, 625, 626, 0,
	297, 298, 627, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 631, 632, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	636, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	638, 639, 640, 462, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 641, 642, 0, 643, 0, 396, 397,
	0, 644, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 645, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 0, 0, 459, 460, 0, 646,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 0, 472,
	0, 649, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 652, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 655, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 0, 550, 551,
	533, 534, 552, 553, 0, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 658, 574,
	575, 0, 576, 577, 0, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 663,
	590, 664, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 0,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 265,
	610, 609, 611, 668, 0, 612, 0, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 0, 623, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 624, 625, 626, 0, 297, 298,
	627, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 636, 0,
	637, 379, 0, 380, 381, 382, 383, 384, 638, 639,
	640, 462, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 641, 642, 0, 643, 0, 396, 397, 0, 644,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 645, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 0, 0, 459, 460, 0, 646, 461, 647,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 0, 472, 0, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 0, 550, 551, 533, 534,
	552, 553, 0, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 0,
	576, 577, 0, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 659, 660, 661,
	662, 0, 595, 0, 587, 588, 589, 663, 590, 664,
	0, 591, 592, 593, 594, 0, 596, 597, 0, 0,
	598, 599, 600, 602, 603, 601, 604, 0, 605, 0,
	0, 606, 607, 608, 665, 666, 667, 265, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 618,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	0, 623, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 624, 625, 626, 0, 297, 298, 627, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 636, 0, 637, 379,
	0, 380, 381, 382, 383, 384, 3446, 639, 640, 462,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 0, 394, 641,
	642, 0, 643, 0, 396, 397, 0, 644, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 645,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 458, 448, 0,
	0, 0, 459, 460, 0, 646, 461, 647, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 0, 472, 0, 649, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 655, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 0, 550, 551, 533, 534, 552, 553,
	0, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 0, 576, 577,
	0, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 659, 660, 661, 662, 0,
	595, 0, 587, 588, 589, 663, 590, 664, 0, 591,
	592, 593, 594, 0, 596, 597, 0, 0, 598, 599,
	600, 602, 603, 601, 604, 0, 605, 0, 0, 606,
	607, 608, 665, 666, 667, 265, 610, 609, 611, 668,
	0, 612, 0, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 618, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	624, 625, 626, 0, 297, 298, 627, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 636, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 3383, 639, 640, 462, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 641, 642, 0,
	643, 0, 396, 397, 0, 644, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 645, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 0, 0,
	459, 460, 0, 646, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 0, 472, 0, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 0, 550, 551, 533, 534, 552, 553, 0, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 0, 576, 577, 0, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 663, 590, 664, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 0, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 265, 610, 609, 611, 668, 0, 612,
	0, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 3312, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 265, 610, 609, 611, 668, 0, 612, 0, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 624, 625, 626, 0,
	297, 298, 627, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 631, 632, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	636, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	3310, 639, 640, 462, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 641, 642, 0, 643, 0, 396, 397,
	0, 644, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 645, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 0, 0, 459, 460, 0, 646,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 0, 472,
	0, 649, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 652, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 655, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 0, 550, 551,
	533, 534, 552, 553, 0, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 658, 574,
	575, 0, 576, 577, 0, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 663,
	590, 664, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 0,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 265,
	610, 609, 611, 668, 0, 612, 0, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 0, 623, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 624, 625, 626, 0, 297, 298,
	627, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 636, 0,
	637, 379, 0, 380, 381, 382, 383, 384, 3295, 639,
	640, 462, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 641, 642, 0, 643, 0, 396, 397, 0, 644,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 645, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 0, 0, 459, 460, 0, 646, 461, 647,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 0, 472, 0, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 0, 550, 551, 533, 534,
	552, 553, 0, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 0,
	576, 577, 0, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 659, 660, 661,
	662, 0, 595, 0, 587, 588, 589, 663, 590, 664,
	0, 591, 592, 593, 594, 0, 596, 597, 0, 0,
	598, 599, 600, 602, 603, 601, 604, 0, 605, 0,
	0, 606, 607, 608, 665, 666, 667, 265, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 618,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	0, 623, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 624, 625, 626, 0, 297, 298, 627, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 636, 0, 637, 379,
	0, 380, 381, 382, 383, 384, 2914, 639, 640, 462,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 0, 394, 641,
	642, 0, 643, 0, 396, 397, 0, 644, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 645,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 458, 448, 0,
	0, 0, 459, 460, 0, 646, 461, 647, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 0, 472, 0, 649, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 655, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 0, 550, 551, 533, 534, 552, 553,
	0, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 0, 576, 577,
	0, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 659, 660, 661, 662, 0,
	595, 0, 587, 588, 589, 663, 590, 664, 0, 591,
	592, 593, 594, 0, 596, 597, 0, 0, 598, 599,
	600, 602, 603, 601, 604, 0, 605, 0, 0, 606,
	607, 608, 665, 666, 667, 265, 610, 609, 611, 668,
	0, 612, 0, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 618, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	624, 625, 626, 0, 297, 298, 627, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 636, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 638, 639, 640, 462, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 641, 642, 0,
	643, 0, 396, 397, 0, 644, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 645, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 0, 0,
	459, 460, 0, 646, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 0, 472, 0, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 741, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 0, 550, 551, 533, 534, 552, 553, 0, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 0, 576, 577, 0, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 663, 590, 664, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 0, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 265, 610, 609, 611, 668, 0, 612,
	0, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 2233, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 638, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	0, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 265, 610, 609, 611, 668, 0, 612, 0, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 624, 625, 626, 0,
	297, 298, 627, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 631, 632, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	636, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	1252, 639, 640, 462, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 641, 642, 0, 643, 0, 396, 397,
	0, 644, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 645, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 0, 0, 459, 460, 0, 646,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 0, 472,
	0, 649, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 652, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 655, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 0, 550, 551,
	533, 534, 552, 553, 0, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 658, 574,
	575, 0, 576, 577, 0, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 663,
	590, 664, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 0,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 265,
	610, 609, 611, 668, 0, 612, 0, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 0, 623, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 624, 625, 626, 0, 297, 298,
	627, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 636, 0,
	637, 379, 0, 380, 381, 382, 383, 384, 638, 639,
	640, 462, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 641, 642, 0, 643, 0, 396, 397, 0, 644,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 645, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 0, 0, 459, 460, 0, 646, 461, 647,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 0, 472, 0, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	1185, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 0, 550, 551, 533, 534,
	552, 553, 0, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 0,
	576, 577, 0, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 659, 660, 661,
	662, 0, 595, 0, 587, 588, 589, 663, 590, 664,
	0, 591, 592, 593, 594, 0, 596, 597, 0, 0,
	598, 599, 600, 602, 603, 601, 604, 0, 605, 0,
	0, 606, 607, 608, 665, 666, 667, 265, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 618,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	0, 623, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 624, 625, 626, 0, 297, 298, 627, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 636, 0, 637, 0,
	0, 380, 381, 382, 383, 384, 638, 639, 640, 462,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 0, 394, 641,
	642, 0, 643, 0, 396, 397, 0, 644, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 645,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 458, 448, 0,
	0, 0, 459, 460, 0, 646, 461, 647, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 0, 472, 0, 649, 473, 474,
	466, 475, 476, 0, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 0, 501, 502, 654, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 655, 0, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 0, 550, 551, 533, 534, 552, 553,
	0, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 0, 576, 577,
	0, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 659, 660, 661, 662, 0,
	595, 0, 587, 588, 589, 663, 590, 664, 0, 591,
	592, 593, 594, 0, 596, 597, 0, 0, 598, 599,
	600, 602, 603, 601, 604, 0, 605, 0, 0, 606,
	607, 608, 665, 666, 667, 0, 610, 609, 611, 668,
	0, 612, 0, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 1748, 1749, 0, 1781, 1782, 1783, 1791, 1792,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 1779, 0, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 0, 1748, 1749, 0, 1781, 1782, 1783, 1791,
	1792, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 1779, 1750, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 1770, 0, 0,
	0, 0, 1797, 0, 0, 0, 1767, 0, 0, 0,
	0, 0, 0, 0, 1748, 1749, 0, 1781, 1782, 1783,
	1791, 1792, 1793, 0, 0, 0, 0, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 1784, 1779, 1770, 0,
	0, 0, 0, 0, 1751, 0, 0, 1767, 0, 0,
	0, 0, 0, 1797, 0, 1748, 1749, 0, 1781, 1782,
	1783, 1791, 1792, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 1779, 1750,
	0, 1773, 1774, 1775, 1776, 1751, 0, 0, 0, 1770,
	0, 1756, 0, 0, 1797, 0, 0, 0, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1750, 0, 1773, 1774, 1775, 1776, 0, 0, 1788, 0,
	1770, 1798, 1756, 0, 0, 0, 0, 1778, 1780, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1794, 0, 1795, 0, 0, 0,
	0, 0, 0, 1765, 1766, 0, 0, 0, 0, 1788,
	0, 0, 1798, 1773, 1774, 1775, 1776, 0, 1778, 1780,
	0, 1786, 0, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 1771, 1795, 0, 0,
	0, 0, 0, 0, 1765, 1766, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 1774, 1775, 1776, 0, 0,
	1788, 0, 1786, 1798, 1756, 0, 0, 0, 0, 1778,
	1780, 0, 0, 0, 0, 0, 0, 1771, 0, 1796,
	0, 0, 0, 0, 0, 0, 1794, 0, 1795, 0,
	0, 0, 0, 0, 0, 1765, 1766, 1785, 0, 0,
	0, 1788, 0, 0, 1798, 0, 0, 0, 0, 0,
	1778, 1780, 0, 1786, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 1794, 1771, 1795,
	0, 0, 0, 0, 0, 0, 1765, 1766, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	1777, 0, 0, 0, 0, 0, 0, 0, 0, 1771,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 0, 0, 0, 0, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 0, 0, 0, 0, 0, 0, 1789, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1789,
	0, 0, 1777, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 0, 0, 0, 0, 0, 0,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1787, 0, 0, 0, 1772, 1762, 1763, 1769, 1790, 1768,
	1764, 0, 1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757,
	1758, 0, 0, 0, 0, 4308, 0, 0, 0, 0,
	0, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 0, 0, 0, 0, 1762, 1763, 1769, 1790,
	1768, 1764, 0, 1761, 1759, 1760, 1752, 1753, 1754, 1755,
	1757, 1758, 0, 0, 0, 0, 4307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1787, 0, 0, 0, 0, 1762, 1763, 1769,
	1790, 1768, 1764, 0, 1761, 1759, 1760, 1752, 1753, 1754,
	1755, 1757, 1758, 0, 0, 0, 0, 4136, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1787, 0, 0, 0, 0, 1762, 1763,
	1769, 1790, 1768, 1764, 0, 1761, 1759, 1760, 1752, 1753,
	1754, 1755, 1757, 1758, 0, 0, 1748, 1749, 3979, 1781,
	1782, 1783, 1791, 1792, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 1779,
	0, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 1748, 1749, 0,
	1781, 1782, 1783, 1791, 1792, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	1779, 1750, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 1770, 0, 0, 0, 0, 1797, 0, 0, 0,
	1767, 0, 0, 0, 0, 0, 0, 0, 1748, 1749,
	0, 1781, 1782, 1783, 1791, 1792, 1793, 0, 0, 0,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 0,
	1784, 1779, 1770, 0, 0, 0, 0, 0, 1751, 0,
	0, 1767, 0, 0, 0, 0, 0, 1797, 0, 1748,
	1749, 0, 1781, 1782, 1783, 1791, 1792, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 1779, 1750, 0, 1773, 1774, 1775, 1776, 1751,
	0, 0, 0, 1770, 0, 1756, 0, 0, 1797, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1750, 0, 1773, 1774, 1775, 1776,
	0, 0, 1788, 0, 1770, 1798, 1756, 0, 0, 0,
	0, 1778, 1780, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1794, 0,
	1795, 0, 0, 0, 0, 0, 0, 1765, 1766, 0,
	0, 0, 0, 1788, 0, 0, 1798, 1773, 1774, 1775,
	1776, 0, 1778, 1780, 0, 1786, 0, 1756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1794,
	1771, 1795, 0, 0, 0, 0, 0, 0, 1765, 1766,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 1774,
	1775, 1776, 0, 0, 1788, 0, 1786, 1798, 1756, 0,
	0, 0, 0, 1778, 1780, 0, 0, 0, 0, 0,
	0, 1771, 0, 1796, 0, 0, 0, 0, 0, 0,
	1794, 0, 1795, 0, 0, 0, 0, 0, 0, 1765,
	1766, 1785, 0, 0, 0, 1788, 0, 0, 1798, 0,
	0, 0, 0, 0, 1778, 1780, 0, 1786, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 1794, 1771, 1795, 0, 0, 0, 0, 0, 0,
	1765, 1766, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 1777, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 0, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 0, 0, 0,
	0, 0, 1789, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 0, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1789, 0, 0, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1772, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1777, 0, 0,
	0, 0, 0, 0, 1789, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1787, 0, 0, 0, 1772, 1762,
	1763, 1769, 1790, 1768, 1764, 0, 1761, 1759, 1760, 1752,
	1753, 1754, 1755, 1757, 1758, 0, 0, 0, 0, 3915,
	0, 0, 0, 0, 0, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1787, 0, 0, 0, 0,
	1762, 1763, 1769, 1790, 1768, 1764, 0, 1761, 1759, 1760,
	1752, 1753, 1754, 1755, 1757, 1758, 0, 0, 0, 0,
	3914, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1787, 0, 0, 0,
	0, 1762, 1763, 1769, 1790, 1768, 1764, 0, 1761, 1759,
	1760, 1752, 1753, 1754, 1755, 1757, 1758, 0, 0, 0,
	0, 3913, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1787, 0, 0,
	0, 0, 1762, 1763, 1769, 1790, 1768, 1764, 0, 1761,
	1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 0, 0,
	1748, 1749, 3587, 1781, 1782, 1783, 1791, 1792, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 1779, 0, 0, 0, 0, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 1748, 1749, 0, 1781, 1782, 1783, 1791, 1792, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 1779, 1750, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 1770, 0, 0, 0, 0,
	1797, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 1748, 1749, 0, 1781, 1782, 1783, 1791, 1792,
	1793, 0, 0, 0, 0, 0, 1750, 0, 0, 0,
	0, 0, 0, 0, 1784, 1779, 1770, 0, 0, 0,
	0, 0, 1751, 0, 0, 1767, 0, 0, 0, 0,
	0, 1797, 0, 1748, 1749, 0, 1781, 1782, 1783, 1791,
	1792, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 1779, 1750, 0, 1773,
	1774, 1775, 1776, 1751, 0, 0, 0, 1770, 0, 1756,
	0, 0, 1797, 0, 0, 0, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1750, 0,
	1773, 1774, 1775, 1776, 0, 0, 1788, 0, 1770, 1798,
	1756, 0, 0, 0, 0, 1778, 1780, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1794, 0, 1795, 0, 0, 0, 0, 0,
	0, 1765, 1766, 0, 0, 0, 0, 1788, 0, 0,
	1798, 1773, 1774, 1775, 1776, 0, 1778, 1780, 0, 1786,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1794, 1771, 1795, 0, 0, 0, 0,
	0, 0, 1765, 1766, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 1774, 1775, 1776, 0, 0, 1788, 0,
	1786, 1798, 1756, 0, 0, 0, 0, 1778, 1780, 0,
	0, 0, 0, 0, 0, 1771, 0, 1796, 0, 0,
	0, 0, 0, 0, 1794, 0, 1795, 0, 0, 0,
	0, 0, 0, 1765, 1766, 1785, 0, 0, 0, 1788,
	0, 0, 1798, 0, 0, 0, 0, 0, 1778, 1780,
	0, 1786, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 1794, 1771, 1795, 0, 0,
	0, 0, 0, 0, 1765, 1766, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 0, 0, 0, 0, 1771, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	0, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1777,
	0, 0, 0, 0, 0, 0, 1789, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1772, 0, 0, 0, 0, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1789, 0, 0,
	1777, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 0, 0, 0, 0, 0, 0, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1787, 0,
	0, 0, 1772, 1762, 1763, 1769, 1790, 1768, 1764, 0,
	1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 0,
	0, 0, 0, 3113, 0, 0, 0, 0, 0, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1787,
	0, 0, 0, 0, 1762, 1763, 1769, 1790, 1768, 1764,
	0, 1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758,
	0, 0, 0, 0, 3112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1787, 0, 0, 0, 0, 1762, 1763, 1769, 1790, 1768,
	1764, 0, 1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757,
	1758, 0, 0, 0, 0, 3111, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 0, 0, 0, 0, 1762, 1763, 1769, 1790,
	1768, 1764, 0, 1761, 1759, 1760, 1752, 1753, 1754, 1755,
	1757, 1758, 0, 0, 1748, 1749, 3110, 1781, 1782, 1783,
	1791, 1792, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1784, 1779, 0, 0,
	0, 0, 0, 0, 1751, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 0, 1748, 1749, 0, 1781, 1782,
	1783, 1791, 1792, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 1779, 1750,
	0, 0, 0, 0, 0, 1751, 0, 0, 0, 1770,
	0, 0, 0, 0, 1797, 0, 0, 0, 1767, 0,
	0, 0, 0, 0, 0, 0, 1748, 1749, 0, 1781,
	1782, 1783, 1791, 1792, 1793, 0, 0, 0, 0, 0,
	1750, 0, 0, 0, 0, 0, 0, 0, 1784, 1779,
	1770, 0, 0, 0, 0, 0, 1751, 0, 0, 1767,
	0, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 1773, 1774, 1775, 1776, 0, 0, 0,
	0, 1770, 0, 1756, 0, 0, 0, 0, 0, 0,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 1774, 1775, 1776, 0, 0,
	1788, 0, 0, 1798, 1756, 4563, 0, 0, 0, 1778,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1794, 0, 1795, 0,
	0, 0, 0, 0, 0, 1765, 1766, 0, 0, 0,
	0, 1788, 0, 0, 1798, 1773, 1774, 1775, 1776, 0,
	1778, 1780, 0, 1786, 0, 1756, 0, 3173, 0, 0,
	0, 3172, 0, 0, 0, 0, 0, 1794, 1771, 1795,
	0, 0, 0, 0, 0, 0, 1765, 1766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1788, 0, 1786, 1798, 0, 0, 0, 0,
	0, 1778, 1780, 0, 0, 0, 0, 0, 0, 1771,
	0, 1796, 0, 0, 0, 0, 0, 0, 1794, 0,
	1795, 0, 0, 0, 0, 0, 0, 1765, 1766, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	1771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4562, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 0, 0, 0, 0, 0, 0,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1748, 1749, 1772, 1781, 1782, 1783, 1791, 1792,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 1779, 0, 0, 0, 0,
	3048, 1789, 1751, 0, 1777, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1770, 0, 0,
	0, 0, 1789, 0, 0, 0, 1767, 0, 0, 0,
	0, 0, 1787, 0, 0, 0, 0, 1762, 1763, 1769,
	1790, 1768, 1764, 0, 1761, 1759, 1760, 1752, 1753, 1754,
	1755, 1757, 1758, 0, 0, 3077, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3049, 0, 0, 0, 0,
	0, 0, 0, 1787, 0, 0, 0, 0, 1762, 1763,
	1769, 1790, 1768, 1764, 0, 1761, 1759, 1760, 1752, 1753,
	1754, 1755, 1757, 1758, 0, 0, 0, 0, 0, 0,
	0, 1773, 1774, 1775, 1776, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1787, 0, 0, 0, 0, 1762,
	1763, 1769, 1790, 1768, 1764, 0, 1761, 1759, 1760, 1752,
	1753, 1754, 1755, 1757, 1758, 0, 0, 0, 1788, 0,
	0, 1798, 2612, 0, 0, 0, 0, 1778, 1780, 1748,
	1749, 0, 1781, 1782, 1783, 1791, 1792, 1793, 0, 0,
	0, 0, 0, 0, 1794, 0, 1795, 0, 0, 0,
	0, 1784, 1779, 1765, 1766, 0, 2611, 0, 0, 1751,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1771, 0, 0, 0,
	0, 0, 0, 0, 1750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1770, 0, 0, 0, 0, 0,
	0, 0, 0, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 1774,
	1775, 1776, 0, 0, 0, 0, 0, 0, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 0, 0, 0, 1788, 0, 0, 1798, 0,
	0, 0, 0, 0, 1778, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1789, 0,
	0, 1794, 0, 1795, 0, 0, 0, 0, 0, 0,
	1765, 1766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1787, 0, 0, 0, 1785, 1762, 1763, 1769, 1790, 1768,
	1764, 0, 1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1748, 1749, 0, 1781, 1782, 1783, 1791, 1792,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 1779, 0, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 1777, 0, 0,
	0, 1797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 1750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1770, 0, 0,
	0, 0, 0, 0, 0, 1789, 1767, 0, 0, 0,
	1748, 1749, 0, 1781, 1782, 1783, 1791, 1792, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 1779, 0, 0, 0, 0, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1750, 0, 0, 0, 0,
	0, 1773, 1774, 1775, 1776, 1770, 0, 0, 0, 0,
	0, 1756, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1787, 0, 0,
	0, 0, 1762, 1763, 1769, 1790, 1768, 1764, 0, 1761,
	1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 1788, 0,
	0, 1798, 0, 0, 0, 0, 0, 1778, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1794, 0, 1795, 0, 0, 0,
	0, 0, 0, 1765, 1766, 0, 0, 0, 0, 1773,
	1774, 1775, 1776, 0, 0, 0, 0, 0, 0, 1756,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1771, 0, 1748, 1749,
	0, 1781, 1782, 1783, 1791, 1792, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 0, 0, 1798,
	1784, 1779, 0, 0, 0, 1778, 1780, 0, 1751, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 0, 1796,
	0, 0, 1794, 0, 1795, 0, 0, 0, 0, 0,
	0, 1765, 1766, 0, 0, 0, 0, 1785, 1041, 0,
	0, 0, 0, 1750, 0, 0, 0, 0, 0, 1786,
	0, 0, 0, 1770, 0, 0, 0, 0, 0, 0,
	0, 0, 1767, 0, 1771, 0, 1748, 1749, 0, 1781,
	1782, 1783, 1791, 1792, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 1779,
	0, 0, 0, 3174, 0, 0, 1751, 0, 0, 0,
	1777, 0, 0, 0, 0, 1797, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 0, 0, 0, 1785, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 1773, 1774, 1775,
	1776, 1770, 0, 0, 0, 0, 0, 1756, 1789, 0,
	1767, 0, 0, 3179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1788, 0, 0, 1798, 1777, 0,
	0, 0, 0, 1778, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	1794, 0, 1795, 0, 0, 0, 0, 0, 0, 1765,
	1766, 0, 0, 0, 0, 1773, 1774, 1775, 1776, 0,
	0, 0, 0, 0, 0, 1756, 1789, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1787, 0, 1771, 0, 0, 1762, 1763, 1769, 1790, 1768,
	1764, 0, 1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757,
	1758, 0, 1788, 0, 0, 1798, 0, 0, 0, 3568,
	0, 1778, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 1794, 0,
	1795, 0, 0, 0, 0, 0, 0, 1765, 1766, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1787, 0,
	1771, 0, 0, 1762, 1763, 1769, 1790, 1768, 1764, 0,
	1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1772, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1789, 0, 0, 0, 0, 1748,
	1749, 0, 1781, 1782, 1783, 1791, 1792, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 1779, 0, 0, 0, 0, 0, 0, 1751,
	0, 0, 0, 0, 1777, 0, 0, 0, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 1750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1770, 0, 0, 0, 0, 0,
	0, 0, 1789, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1787, 0, 0, 0,
	0, 1762, 1763, 1769, 1790, 1768, 1764, 0, 1761, 1759,
	1760, 1752, 1753, 1754, 1755, 1757, 1758, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 1774,
	1775, 1776, 0, 0, 0, 0, 0, 0, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1787, 0, 0, 0, 0, 1762,
	1763, 1769, 1790, 1768, 1764, 0, 1761, 1759, 1760, 1752,
	1753, 1754, 1755, 1757, 1758, 1788, 0, 0, 1798, 0,
	0, 0, 0, 0, 1778, 1780, 1748, 1749, 0, 1781,
	1782, 1783, 1791, 1792, 1793, 0, 0, 0, 0, 0,
	0, 1794, 0, 1795, 0, 0, 0, 0, 1784, 1779,
	1765, 1766, 0, 3114, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1770, 0, 0, 0, 0, 0, 0, 0, 0,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3141, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 1774, 1775, 1776, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 1788, 0, 0, 1798, 0, 0, 0, 0,
	0, 1778, 1780, 1748, 1749, 0, 1781, 1782, 1783, 1791,
	1792, 1793, 0, 0, 0, 1789, 0, 0, 1794, 0,
	1795, 0, 0, 0, 0, 1784, 1779, 1765, 1766, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1771, 0, 0, 0, 0, 0, 0, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1770, 0,
	0, 0, 0, 0, 0, 0, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1787, 0, 0,
	0, 1785, 1762, 1763, 1769, 1790, 1768, 1764, 0, 1761,
	1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 1774, 1775, 1776, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 0, 0, 0, 1788,
	0, 0, 1798, 0, 0, 0, 0, 0, 1778, 1780,
	1748, 1749, 0, 1781, 1782, 1783, 1791, 1792, 1793, 0,
	0, 0, 1789, 0, 0, 1794, 0, 1795, 0, 0,
	0, 0, 1784, 1779, 1765, 1766, 0, 0, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1771, 0, 0,
	0, 0, 0, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1787, 0, 0, 0, 1785, 1762,
	1763, 1769, 1790, 1768, 1764, 0, 1761, 1759, 1760, 1752,
	1753, 1754, 1755, 1757, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	1774, 1775, 1776, 0, 0, 0, 0, 0, 0, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 1788, 0, 0, 1798,
	0, 0, 0, 0, 0, 1778, 1780, 1748, 1749, 0,
	1781, 1782, 1783, 1791, 1792, 1793, 0, 0, 0, 1789,
	0, 0, 1794, 0, 1795, 0, 0, 0, 0, 0,
	1779, 1765, 1766, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1771, 0, 0, 0, 0, 0,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1770, 0, 0, 0, 0, 0, 0, 0,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 0, 0, 0, 0, 1762, 1763, 1769, 1790,
	1768, 1764, 0, 1761, 1759, 1760, 1752, 1753, 1754, 1755,
	1757, 1758, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 1774, 1775, 1776,
	0, 0, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	0, 0, 0, 1788, 0, 0, 1798, 931, 0, 978,
	0, 0, 1778, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1789, 0, 0, 1794,
	0, 1795, 0, 939, 0, 0, 0, 0, 1765, 1766,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 953,
	0, 937, 936, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1771, 0, 0, 0, 0, 0, 0, 0, 938,
	0, 0, 0, 0, 941, 0, 0, 0, 0, 986,
	0, 0, 0, 0, 0, 0, 0, 0, 950, 951,
	0, 0, 0, 0, 0, 0, 0, 967, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 979, 943, 0, 1787, 0,
	0, 0, 0, 1762, 1763, 1769, 1790, 1768, 1764, 0,
	1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 0,
	0, 0, 0, 944, 0, 0, 0, 0, 0, 0,
	0, 0, 976, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 977, 0, 0, 1777, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 946, 0, 0,
	0, 0, 0, 0, 0, 935, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 947, 948, 0, 0, 0, 0, 0,
	0, 0, 0, 1789, 0, 0, 0, 0, 0, 0,
	0, 0, 955, 954, 0, 0, 0, 0, 0, 0,
	949, 0, 0, 0, 964, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 983, 975, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 980, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1787, 0, 0, 0, 0,
	1762, 1763, 1769, 1790, 1768, 1764, 0, 1761, 1759, 1760,
	1752, 1753, 1754, 1755, 1757, 1758, 942, 0, 0, 985,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 940, 0, 0, 0, 971, 972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	969, 0, 0, 0, 0, 0, 0, 984, 965, 0,
	0, 958, 956, 0, 961, 0, 0, 0, 0, 0,
	962, 0, 0, 933, 0, 981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 973, 0,
	963, 0, 0, 0, 0, 0, 960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 982, 0, 0,
	0, 0, 0, 0, 0, 966, 0, 0, 0, 0,
	0, 0, 0, 0, 945, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 970,
}

var sqlPact = [...]int{
	302, -1000, -1000, -1000, -1000, 200, -1000, -1000, 198, 196,
	195, 191, 189, 188, 183, 181, 179, 175, 171, -1000,
	-1000, -1000, -1000, -1000, -1000, 169, -1000, -1000, 166, -1000,
	164, 161, 157, -1000, -1000, 156, -1000, 155, -1000, -1000,
	-1000, -1000, 154, 153, 152, 89269, 88724, 89807, 2208, 109867,
	96291, 1840, 80032, 109322, 79487, 108777, 2091, 10009, 108232, 2639,
	151, -1000, 107687, 150, 141, 139, -1000, 107142, -1000, 1854,
	-1000, 137, -1000, 4579, 64736, 136, 129, 128, 2978, 127,
	-1000, 123, 122, -1000, -1000, 121, -1000, 12166, 1465, -1000,
	120, 117, -1000, 348, 94118, 114, 113, 2255, 111, 105,
	64191, 102, 99, 2170, 2796, -1000, -1000, 2032, -1000, -1000,
	98, 97, 95, 94, 93, 92, 91, 90, 89, 88,
	84, -1000, 82, 80, 78, 77, 75, -1000, 74, 73,
	71, -1000, 70, -1000, 66, 64, 62, 61, 60, 59,
	56, 55, 51, 50, 47, 42, 41, 40, 121835, -1000,
	-1000, 1865, 1623, 1621, 1619, 1611, 1605, 938, 39, 38,
	37, 34, 33, 32, 31, 30, 29, 26, 24, 23,
	22, 21, 20, 17, 13, 148, 11, 10, 9, 8,
	6, 2, 1, 2226, -1000, 1773, 1021, 30276, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 115785, 110405, 0, -188, -1, -1000,
	3213, 1037, 53271, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 298, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 491, 1824, 744, -1000, -1000, -1000, 106604, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2207, -6, -1000,
	1967, -1000, -1000, -1000, -1000, -1000, 743, -1000, 2203, 222,
	2143, -1000, -1000, -1000, 3314, 2349, 3695, 3694, 3693, 3691,
	3690, 115247, 1796, 3689, 2411, 3688, 3687, 3686, 3685, 3683,
	3682, 3681, -1000, 88179, 1010, 87634, 87089, 3342, 106066, 86544,
	105521, 73503, 45364, 963, 3301, -1000, -1000, -1000, -1000, -1000,
	-1000, 110405, -1000, 1007, -1000, -1000, 3680, 3679, 2062, 741,
	95746, -1000, 1684, -1000, 884, 31992, -1000, 1305, -1000, 31992,
	296, -1000, -1000, -1000, -1000, -1000, -1000, 3678, 3677, 3674,
	3673, 3671, -1000, -1000, 78942, 23360, 78397, 77852, 104976, 22803,
	85999, 85454, 3668, 3667, 3666, 3663, 104431, 72946, 1005, 1379,
	-1000, -1000, -1000, -1000, -1000, -1000, -26, 70718, 3445, 110405,
	-1000, 292, -1000, -1000, -1000, -1000, -1000, -1000, 44780, 866,
	44196, 769, 43612, 482, -1000, -1000, -1000, -1000, 72389, -1000,
	103886, 2346, 3661, 3660, 1086, 3659, 3149, 1792, 3656, 1814,
	1184, 3654, 3653, 3652, 3650, 3649, 3648, 3647, 1434, 103341,
	2869, 1504, 102796, 1697, 71832, 1004, 84909, 89807, 2554, 102251,
	1413, 1377, -1000, -1000, -1000, -1000, 3007, 2781, 2761, 1171,
	-1000, -1000, -1000, -1000, 55990, 5091, 4752, 11367, 101706, 58765,
	89807, 89807, -1000, -1000, -1000, -1000, -1000, 43028, 432, 42444,
	933, -1000, -1000, 56545, 2821, -1000, -1000, -1000, -1000, 41860,
	283, 41276, 749, 110405, -1000, 2868, 1915, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2237, 1687, 3478, 2634, 71275, 2013, 1355,
	3268, 3002, 2992, 1444, 2991, 3646, 2514, 2981, 2950, 2948,
	2939, 2927, 1220, 2496, 278, 29692, 2848, 1728, 40692, 1562,
	1445, 2908, 2907, 3486, 1948, 2004, 1990, 77307, 3645, 3644,
	3172, 2900, 2891, 2678, 2888, -1000, 2810, 1429, -1000, -1000,
	-1000, -1000, 1430, -1000, -1000, -1000, -1000, 80570, -1000, -1000,
	1264, -1000, -1000, 1264, -1000, -1000, -1000, -1000, -1000, 1329,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1773, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2236, -1000, 2047, -1000, -1000, 2400, 3193, 3193,
	3193, 3300, 465, 451, -1000, 148, -1000, -1000, 121182, -1000,
	-1000, 45936, 45936, 45936, 45936, 45936, 45936, 45936, 2098, -1000,
	737, -1000, -1000, 774, -1000, 735, 578, -1000, -1000, -1000,
	-1000, -1000, -1000, 733, -1000, -1000, -1000, -1000, -1000, -1000,
	3445, -1000, 26200, -1000, -1000, -1000, 443, 730, 45936, -1000,
	-1000, 3505, 3504, 1011, -1000, 284, 897, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2867,
	728, 724, -1000, 722, 719, 717, 714, 713, -1000, -1000,
	-1000, 712, 711, 708, 707, 703, 702, 701, 698, -1000,
	2008, -1000, -1000, -1000, -1000, -1000, -1000, 645, 642, 642,
	642, -1000, 999, -1000, -1000, -1000, 299, 640, 267, 627,
	625, 623, -1000, 697, 691, 682, 679, 677, 675, 666,
	665, 664, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 995,
	-1000, -1000, -1000, -1000, -27, 110405, -1000, 491, -27, -1000,
	-1000, 661, -1000, 34292, 34292, 34292, -1000, -1000, 2195, 45936,
	-1000, 2646, -1000, -19, -19, 850, 54900, -1000, 52160, 850,
	508, 793, 60396, -1000, 2795, -1000, -1000, 658, 277, -1000,
	-1000, -1000, -1000, 23915, 2787, 110405, 110405, 89807, 89807, 89807,
	3639, 3079, 45936, -1000, -1000, 68525, 110405, 90345, -1000, -1000,
	3407, 65274, 67987, 110405, 2861, 67449, 3637, -1000, -1000, -1000,
	-1000, -1000, 3051, 3632, 3631, 3629, -1000, 110405, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 213, 3048, -1000, -1000, 93573,
	213, 3045, -1000, 213, 3044, -1000, 93035, -1000, -1000, 2173,
	3041, -1000, -1000, 215, 3039, -1000, -1000, -1000, 214, 3037,
	-1000, -1000, 272, -129, 3036, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 121182, -1000, -1000,
	-1000, 66904, -1000, 3186, -1000, -1000, 110405, -1000, 45936, -1000,
	3404, 1615, 74603, 3347, -42, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2394, 2384, 1096, 2229, -1000, 3092, 1391, -1000,
	31992, 3136, -1000, -1000, -1000, 266, 23915, -1000, -1000, -1000,
	-1000, -1000, -1000, 4445, 3034, 1424, -1000, 2225, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1987, 3033, -1000, 1584,
	3032, 1942, -1000, -1000, 2249, -1000, 3169, -1000, -1000, 1774,
	3031, -18, -1000, -1000, 2533, -1000, -1000, -1000, -1000, -1000,
	1889, -1000, 960, 3028, -1000, 84364, 58210, 56545, 70718, -34,
	-1000, -1000, -1000, -1000, -242, -1000, 22246, 121182, -1000, -1000,
	-1000, -1000, 1723, 121182, 906, -1000, -1000, 3026, -1000, 121182,
	893, -1000, -1000, 2990, -1000, 2858, -1000, -1000, 2306, -1000,
	-1000, 3628, -1000, -1000, 3627, -1000, 3626, 3624, 3623, -1000,
	1660, 1964, 3622, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 83826, 2193, -1000, -1000, 82736, 2857, -1000, 2304, 3346,
	-1000, 83281, 1001, -1000, 960, 2303, -1000, 92497, 1006, 2302,
	-1000, 3621, 3265, 2585, 960, 2300, -1000, -1000, -1000, -1000,
	-1000, 994, -1000, 62022, -1000, 62022, -1000, 1589, -1000, 114709,
	-19, 89807, 3445, -1000, -46, -1000, -1000, -1000, 1037, -1000,
	55445, -1000, 55445, 95201, 74058, 916, 754, 63646, 121182, -1000,
	-1000, -1000, -1000, 121182, -1000, -1000, -1000, -133, 2633, -1000,
	74058, 57655, 121182, -1000, -1000, -1000, -1000, 121182, -1000, -1000,
	-1000, 74058, 82736, -1000, 101161, 82198, -1000, -1000, 1422, 2465,
	-1000, -1000, -1000, 74058, 1254, 74058, 74058, 74058, -1000, 100616,
	-1000, -1000, 2060, 1215, 3174, 2037, 89807, -1000, 1837, -1000,
	-1000, -1000, 3199, 110405, -1000, -1000, 2855, -1000, 66359, 91959,
	-1000, 91421, -1000, 90883, -1000, 89807, -1000, 89807, -1000, 3620,
	3619, 3618, -1000, -1000, 3616, -1000, 3614, 3195, -1000, 121182,
	3185, -1000, 3613, 3341, 2848, 121182, -1000, 3018, 1627, 1616,
	110405, -1000, -1000, 110405, -1000, 110405, -1000, -1000, -1000, 1515,
	-1000, -1000, 2393, -1000, -1000, -1000, -1000, 89807, 1186, -1000,
	-1000, -1000, -1000, -1000, -1000, 2903, 3592, 1667, -1000, 1790,
	-1000, 2783, 3302, -1000, 1419, 1737, -1000, -1000, 226, -1000,
	-1000, -42, -1000, 114171, -1000, 2400, -1000, 110405, -1000, 2381,
	2837, 2845, 1691, 2215, 2489, -1000, 40108, 2407, 49368, 2223,
	148, -1000, -1000, 148, 148, 31420, -1000, -1000, 65274, 65274,
	23915, 1339, 45936, 45936, 45936, 45936, 45936, 45936, 45936, 45936,
	45936, 45936, 45936, 45936, 45936, 45936, 45936, 45936, 45936, 45936,
	45936, 45936, 45936, 45936, 45936, 45936, 45936, 45936, 45936, 45936,
	45936, 45936, 45936, 45936, 45936, 45936, 45936, 2213, 45936, 1238,
	45936, 45936, 45936, 45936, 1863, -1000, -1000, 1928, 524, 2073,
	-1000, 3451, 3451, 3451, 882, 882, 121616, 121616, 608, 3589,
	774, -1000, 45936, -1000, 110, 45936, 24472, -1000, 451, 9232,
	2414, -1000, 447, 25056, -1000, -1000, -1000, 26200, 578, 39524,
	45936, 982, 121182, -1000, -1000, 1604, 3462, 21690, 2877, 2670,
	657, 846, 844, 29108, 28524, 27940, 27356, 781, 45936, 45936,
	45936, 45936, 45936, 45936, 45936, 45936, -1000, -1000, 3477, -1000,
	3462, -1000, -1000, -1000, -1000, 3462, 1334, 1219, 3462, -1000,
	3462, 3462, 5787, 5787, 38952, 38368, 37784, 49940, 37200, 45936,
	26772, 36616, 36032, -1000, 110405, -27, 3402, 45936, 197, -1000,
	119658, -1000, 197, 197, 654, -47, 121182, 2453, 2453, 53814,
	2332, 2106, 2106, 2106, -1000, 850, 17213, 850, 99533, 2120,
	850, 850, 241, 268, 444, 51617, 2646, 99533, 762, 652,
	-2, -3, -5, -1000, -1000, -7, -12, -1000, -1000, 89807,
	649, 24472, 23915, 240, 1988, -56, 2519, 2516, 2511, -1000,
	2510, -1000, 1770, -57, 1237, 89807, 110405, 3585, -53, -1000,
	416, -59, -1000, 1312, 239, 3462, -1000, -1000, -1000, -1000,
	-1000, 3584, 3582, -1000, 990, 647, 646, 400, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 645, 642, 642, 642,
	-1000, 299, 640, 267, 627, 625, 623, -1000, -1000, -1000,
	-1000, -1000, 2780, 89807, 110405, 3581, -242, 90345, -66, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 110405, -1000, -1000,
	-1000, 3580, -1000, 89807, -1000, -1000, 89807, 213, 2988, -1000,
	89807, -1000, 89807, 212, 2987, -1000, -1000, 110405, -1000, 89807,
	89807, -1000, 110405, 110405, 110405, 74058, 74058, 217, -1000, 89807,
	865, -64, 1104, -42, -1000, -1000, -1000, 1264, -1000, 1892,
	-1000, -1000, -1000, -1000, -1000, -1000, 1439, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1011, -1000, -1000, -1000, -1000,
	-1000, -1000, 3470, 3464, -29, -1000, -1000, 23915, -1000, -43,
	1632, 1831, 1236, -1000, 76762, 2338, 3173, 3579, 2575, 3159,
	1563, -1000, 1512, -1000, 3317, 80570, 3362, 3373, 1292, -1000,
	2775, -1000, -1000, 881, 1666, 1720, 1235, 1234, 80570, 1584,
	-1000, 65274, -1000, 2559, 3299, 1362, 1360, 1362, 1362, 1353,
	-1000, 80570, 1713, 1232, 1230, 1229, 1916, 1911, -1000, -1000,
	1978, -1000, 1227, 1224, 811, 1910, -1000, -44, 3354, 3368,
	1286, -1000, 2774, 1222, -1000, -1000, -1000, 3294, 89807, 23915,
	1517, 1496, 1513, 1707, 1218, -33, -1000, 3352, 1217, 1216,
	-1000, 4727, -1000, 74058, 1868, 2982, 2632, 845, 2631, -1000,
	-1000, -1000, 845, -34, 70718, 110405, 235, -1000, 110, 45936,
	45936, 110, 45936, 110, 3340, 2980, -1000, -1000, -1000, -1000,
	-1000, 3578, 1921, 2409, -1000, -1000, 620, 2299, 2751, 110405,
	2538, -36, 89807, -1000, 65821, 2979, 69070, 1584, 2298, -1000,
	-1000, 81653, -1000, 2977, 491, 2297, -1000, 651, 3577, 2976,
	-1000, 113633, -1000, 3186, 1159, 2975, 1046, 532, 3401, -1000,
	532, 62560, -1000, 110405, -1000, -19, 511, 75686, -69, -71,
	441, -1000, 100078, 110405, 1045, 76224, 110405, 3125, 953, 56545,
	-1000, 56545, -76, -133, 2630, 1473, 916, 916, 845, -1000,
	845, -1000, 89807, 2843, -1000, -1000, 74058, 916, 916, 916,
	-1000, -1000, -1000, -1000, 3575, 3572, 3571, 3570, -1000, -1000,
	956, 89807, 110405, 89807, -1000, 230, -1000, 110405, -1000, 110405,
	110405, 89807, -1000, 956, 110405, 956, 110405, 956, 110405, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 110, 45936, -1000, -1000,
	3568, 1624, -1000, 2841, -1000, 2840, -1000, 19, -1000, -1000,
	-1000, -1000, -1000, -1000, 2020, -1000, -1000, -1000, -1000, 89807,
	89807, 89807, 89807, 110405, 3111, -1000, 110405, 3102, 89807, -1000,
	-1000, 80570, -1000, 2381, 2837, -1000, -1000, -1000, -1000, -1000,
	-1000, 1755, 2148, -1000, 2460, -1000, 1536, -1000, -1000, -1000,
	121182, 50495, -1000, -1000, 121182, 1745, -1000, 48796, 48224, -1000,
	-1000, 1678, 89807, 2541, -1000, 2541, -217, -1000, 119441, 2454,
	89807, -1000, -1000, -1000, -1000, -1000, 877, 1137, 1137, 1281,
	1281, 1281, 1281, 3359, 413, 522, 678, 8589, 8589, 4781,
	4781, 4781, 4781, 4781, 8589, 610, 882, 882, 610, 610,
	610, 610, 610, 882, 882, 882, 8589, 8589, 8589, 121616,
	121399, 7522, 45936, 45936, 1213, 1891, 524, 6829, 45936, 7745,
	7745, 7745, 7745, -1000, 1861, -1000, -1000, -1000, -1000, 2750,
	619, 49940, 49940, -1000, -1000, -1000, -1000, 25628, 45936, -1000,
	-1000, -1000, -1000, 35448, -1000, -1000, 118983, -322, 436, -210,
	-28, -1000, 45936, 45936, 45936, 435, -1000, 221, 45936, 110405,
	-1000, 15944, 761, -161, -1000, -77, 1394, -1000, 45936, -1000,
	-1000, 1212, -1000, 1206, 1202, 1201, -1000, 618, 434, -1000,
	211, -1000, 2103, 615, 614, 45936, -1000, -1000, -1000, -1000,
	-1000, 118412, -1000, -1000, 118371, -1000, -1000, 118320, -1000, -1000,
	118279, -1000, -1000, -1000, 120965, 15570, 14961, 14500, 8555, 13919,
	13294, -82, 430, -83, 429, 876, 867, 428, 427, 426,
	-90, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -91, 425, -1000, 2748, -210, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 424, -1000, 421, -1000,
	120748, -210, 420, 5328, -1000, 49940, 49940, 49940, -1000, 397,
	-1000, 119075, -1000, 120385, 34876, 34876, 34876, 396, 120297, 45936,
	-210, -92, -1000, -93, -1000, -1000, 529, -101, 979, 34292,
	52723, 23915, -1000, 979, 979, 45936, -1000, 45936, 2483, -1000,
	-1000, -1000, -1000, 2481, 1808, 2453, 53814, -1000, -1000, -1000,
	-1000, 99533, -1000, 3445, 2695, -1000, 99533, -1000, -1000, 110405,
	491, -1000, 99533, 99533, 23915, 850, -1000, 850, 99533, 572,
	-1000, -1000, -1000, -1000, -1000, 395, 59308, -28, 210, 23915,
	960, -1000, -1000, 2565, 2565, 2565, 2565, -1000, -1000, 110405,
	1200, -38, -100, -1000, 3426, -1000, 2040, -1000, 65274, -1000,
	773, 1147, 23915, -1000, -1000, -1000, 596, -1000, 3462, 3462,
	-1000, 3462, 110405, 2747, 190, -1000, 174, 69070, 69070, 3565,
	-1000, -1000, 213, -1000, 89807, 213, 213, -1000, 89807, 89807,
	2173, -1000, 215, -1000, 214, -1000, -1000, -129, -1000, 975,
	31992, -1000, 1264, -1000, -1000, 1523, -1000, 1937, -1000, 1158,
	-1000, -1000, -1000, -1000, 31992, -1000, 2475, 110405, 110405, 89807,
	-1000, 110405, -1000, 2110, 69070, -1000, 2288, 113095, 2272, 65274,
	110405, -1000, -1000, 594, 889, 2450, 2439, 1040, 110405, 110405,
	2436, 112557, 112019, -1000, 3561, 110405, 1989, 45936, 3293, 2050,
	2205, 110, 110, -1000, 110, 110, 110, -1000, 593, 1299,
	89807, 89807, 110405, 69070, 89807, 1867, -1000, -1000, -1000, -1000,
	-1000, 81108, -1000, -1000, 3476, 3475, -1000, 1362, -1000, -1000,
	-1000, 1362, 1584, 1810, 110405, 69070, 89807, 69070, 110405, 110405,
	-1000, 1701, 110405, 1462, -1000, 811, 2048, 110, 110, -1000,
	110, 110, 110, 592, 23915, 1887, -1000, 2854, 110405, 3503,
	111481, 3501, 110405, 110405, 110405, 69070, 3183, 110405, 110405, 69070,
	4727, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 70180, 1057, 960, 1694, 1199, 1176, 80570, 56545,
	951, 56545, 2591, -1000, -1000, 21134, -1000, 121182, 121182, -1000,
	121182, -1000, 65821, 110405, -1000, 992, 110405, 76224, 944, 2974,
	61484, -242, 916, 74058, 89807, -36, 2538, 110405, -1000, -1000,
	1584, 2971, 491, 2287, -1000, 74058, 3398, 2970, 591, 3559,
	3558, -1000, 89807, 2191, 2282, -1000, -1000, 110943, 3061, 811,
	110405, 979, 53814, 1894, -1000, 59853, 1019, 110405, 1799, 158,
	-1000, -1000, -1000, 4, 110405, -1000, 791, -1000, -1000, 511,
	511, 916, -258, 587, -1000, 836, 835, 57100, 74058, -102,
	-1000, -1000, -1000, -1000, 2272, 89807, 110405, 1271, 2583, 110405,
	-108, -1000, 208, 579, -1000, 2456, -1000, -133, -1000, 953,
	56545, 2745, 2736, -1000, -1000, 973, -1000, 1397, 916, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-21, 110405, -242, -242, -37, -38, -1000, 956, -1000, 956,
	-1000, 956, -1000, 121182, -1000, -1000, 1618, 1565, 110405, -1000,
	23915, 110405, 89807, 23915, 89807, 2833, 2831, -1000, -1000, -1000,
	110405, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1067, -1000,
	1745, 2147, -1000, 578, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2369, -1000, -39, 31420, 856, -1000, -1000,
	89807, -22, 45936, 45936, 6309, 5429, 45936, 49940, 49940, -1000,
	45936, 5275, -1000, -1000, -1000, -1000, -1000, 2735, 576, 45936,
	65274, 6883, 6650, -1000, 392, 12057, 610, -1000, 45936, -1000,
	390, 33720, -1000, 120021, -41, -109, -1000, 17782, -210, -111,
	-1000, -1000, 772, -1000, 2985, -1000, 45936, 120109, 2339, 2109,
	1862, 1638, 3462, 3500, 20578, -1000, 63103, 980, 2126, 117708,
	-1000, -1000, -1000, -1000, 65274, 65274, 45936, 45936, -1000, 45936,
	45936, 45936, -1000, -1000, -1000, 3462, 854, -1000, -1000, -1000,
	854, -1000, -1000, 1362, -1000, 1362, -1000, 45936, -1000, -1000,
	2734, 45936, -1000, 65274, 65274, 49940, 49940, 49940, 49940, 49940,
	49940, 49940, 49940, 49940, 49940, 49940, 49940, 49940, 49940, 49940,
	49940, 49940, 49940, 49940, 2435, 49940, 3449, 3449, 3449, -1000,
	2800, 2734, 45936, 45936, 65274, 389, 386, 385, -1000, 45936,
	-210, -1000, -1000, 511, 575, -1000, 2355, -1000, 2669, -1000,
	45936, -1000, -119, -1000, 2646, -1000, -1000, 2669, 2669, -116,
	121182, 53814, 53814, -1000, 574, 45936, 2461, -1000, -1000, 760,
	-315, -1000, 832, -1000, -1000, -1000, -1000, -1000, 491, -1000,
	-1000, -1000, 204, 99533, 99533, 758, -1000, -117, -1000, -1000,
	-118, -1000, 3396, 377, 23915, -1000, 979, 2594, -1000, -1000,
	-1000, -1000, -1000, -1000, -242, 110405, 110405, 2137, 3497, -1000,
	3474, 770, 756, 202, 3462, 366, 365, 364, -242, 110405,
	110405, 110405, -1000, -1000, -1000, -1000, 213, -1000, -1000, -1000,
	212, -1000, -1000, -1000, -1000, 2530, -1000, -42, -1000, -1000,
	-1000, 45936, -1000, -1000, 3171, 1175, 1173, -1000, -1000, -1000,
	-1000, 2756, -1000, 2961, -1000, 2268, -1000, 1026, -1000, 1874,
	-1000, 45936, 571, 2581, 570, 569, 3557, 2034, 3555, 1042,
	2959, 2173, 2956, 2173, -1000, -1000, -1000, 868, -1000, 121182,
	2050, -1000, 563, 562, -1000, -43, 1587, 1811, 1168, 970,
	-1000, -1000, -1000, -1000, 45936, 45936, 98995, -1000, 458, 3169,
	-23, -1000, -1000, -1000, 1675, 1167, 1165, -1000, -1000, -1000,
	-1000, 1584, 1664, 1161, 1155, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 969, -1000, 2897, 2896, 859, 110405, -1000, 968,
	-1000, -1000, -1000, -1000, 45936, -1000, -44, 1151, 3356, 2265,
	89807, -1000, 2173, 2949, 1148, -1000, 1145, -1000, -1000, -1000,
	3351, 3350, 1154, -1000, -1000, -1000, -1000, -1000, 69625, -1000,
	110405, 69070, 89807, 1734, 845, -1000, 2218, 845, 951, 2717,
	-1000, 2534, 967, 89807, 3554, 362, -127, -45, 65274, 3395,
	-1000, 2192, 621, 89807, 851, -1000, 3445, -1000, -1000, -1000,
	966, -1000, 3345, 89807, 3392, 2947, 960, 110, 89807, 3482,
	-1000, -1000, 3385, 89807, 2946, 2189, 2263, 2401, 811, 75148,
	960, 2112, -114, -1000, 1799, 33136, 3164, -146, -1000, -1000,
	-1000, 979, 62560, 53814, 45936, 3543, -147, -1000, -1000, -1000,
	-1000, -1000, 96836, 96836, 74058, 74058, 74058, 916, 110405, 110405,
	76224, -1000, -1000, 561, 110405, 110405, 549, -1000, 110405, 110405,
	3542, 74058, -49, 546, -1000, 831, 825, 824, -1000, -1000,
	-1000, -1000, -1000, 953, -1000, -133, 56545, 110, -1000, 2135,
	89807, -1000, 20022, -1000, -1000, -1000, -1000, -1000, -1000, 956,
	-1000, -1000, 2061, 2220, 2061, 1797, 1789, -1000, -1000, 2146,
	-1000, -1000, -1000, -1000, 2512, 3194, 23915, 3361, 7745, 45936,
	45936, 4753, 6242, 6012, 7745, 45936, 45936, 65274, 10597, -156,
	45936, 45936, -1000, 45936, 752, 121182, 3496, 45936, 361, 359,
	-1000, -1000, -1000, 3460, -1000, -1000, -1000, 121182, 45936, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 358, -1000, 149, -1000,
	-1000, -1000, 116323, -1000, 45936, 357, 3286, -1000, 355, 349,
	9420, 8126, 117667, 117616, 117575, 346, -1000, -1000, 340, 336,
	121182, 2800, 121182, -1000, -1000, 991, 991, 1347, 1347, 1347,
	1347, 3449, 693, 905, 564, 643, 643, 643, 1065, 590,
	590, 643, 643, 643, 2713, 2416, 545, 6783, -1000, -1000,
	121182, 121182, 335, -1000, -1000, -1000, -210, 334, 511, -1000,
	2661, 3283, 121182, -1000, 53814, 2661, 2661, -1000, -1000, 1808,
	110405, 121182, 53814, -1000, 2695, -1000, 18349, -1000, 23915, -1000,
	-1000, -1000, -1000, 3445, -1000, 59308, -1000, 544, -1000, 5,
	-1000, 2594, -1000, 823, -1000, -1000, 74058, 74058, -242, -259,
	-1000, -1000, 751, 3537, 764, 23915, 330, -1000, -1000, -1000,
	-242, -242, -242, -1000, -1000, -1000, 3121, 121182, 110405, 110405,
	1492, 98457, 110405, 2945, -1000, 1984, -1000, 1040, 117004, 54357,
	-1000, 54357, 110405, -1000, -1000, -1000, 1853, 1540, 3536, 1080,
	-1000, 3225, 110405, -1000, 110405, -1000, -1000, -1000, 110405, 110405,
	89807, 110405, -1000, 69070, 2918, -162, 121182, -52, -1000, 822,
	-1000, 1364, -1000, 19466, 110405, 69070, 89807, 110405, 69070, 89807,
	2086, -1000, -1000, 2890, -1000, 2904, -165, 23915, -1000, 3493,
	3490, 2943, 3261, -1000, 110405, 3489, 110405, 89807, 3120, -1000,
	-1000, -1000, -1000, -1000, 1625, 1144, 1142, 951, -62, 543,
	-1000, 821, -1000, -1000, 820, 951, -1000, 74058, 56545, 3534,
	491, -1000, 2573, -1000, 94656, 2185, 110, -1000, 3533, 97381,
	542, -1000, 2130, -1000, 644, -1000, 2377, 69070, 1584, 110,
	89807, -1000, -1000, 491, 327, -74, -1000, 2954, 1031, 23915,
	89807, 2928, 2404, 811, 75148, -1000, 1159, 2489, -1000, -103,
	-1000, 655, 110, 2112, -1000, -114, 121182, -1000, 819, -1000,
	-168, -1000, -1000, 326, -1000, 3119, 3118, -1000, 2665, 54357,
	541, 539, 110405, 3113, -1000, -1000, -170, 2571, 2571, 74058,
	56545, 74058, -1000, 953, 845, -1000, 2348, -1000, -1000, -1000,
	-1000, -1000, 23915, 1658, -1000, 538, 536, -1000, -1000, -1000,
	-1000, 3194, 7745, 7745, 45936, 45936, 45936, 7745, 10597, -171,
	-1000, 7745, 7745, -210, -1000, -1000, 120021, -1000, -1000, -1000,
	121182, -1000, 18910, 2065, -1000, 116963, -1000, 31420, -1000, -1000,
	45936, 45936, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	49940, 2712, 535, 65274, -1000, -1000, 319, 977, 45936, 47652,
	2646, 977, 977, -1000, -173, -1000, -1000, -1000, 3445, 5,
	-1000, -1000, 3532, 23915, -1000, 74058, -1000, -1000, 3528, 750,
	-1000, 3527, -1000, -1000, -1000, -1000, -1000, 2606, 3382, -1000,
	1850, -1000, 110405, -1000, 110405, -1000, 23915, 110405, 2699, 1262,
	-1000, 889, 2428, 534, 49940, 89807, 795, -1000, 3381, 2664,
	-179, -1000, 110405, 45936, 110405, -185, -187, 2240, -1000, -1000,
	1261, 45936, -1000, -1000, -1000, 65274, 533, 2173, 2173, -192,
	-193, -1000, -1000, -1000, 45936, 1140, 110405, 32564, -1000, 3526,
	3169, -1000, -1000, -1000, -1000, -1000, -1000, 110405, -1000, 45936,
	1128, -1000, -1000, -1000, 3488, 2173, 23915, 2173, -1000, 2173,
	3261, 1078, 110405, 69070, 89807, -1000, 2200, 2200, 74058, 56545,
	-1000, -129, 951, -1000, 3380, 2567, 3525, -1000, -1000, -1000,
	-1000, 2424, -1000, -1000, 110405, 2418, 923, -1000, -195, -1000,
	818, 816, 76224, 944, 930, -1000, -136, 531, -1000, 815,
	-1000, -1000, -1000, -1000, 491, 3379, -1000, 3484, 530, 527,
	110405, 2182, 526, 23915, 3162, 811, 75148, -1000, 3061, 1799,
	-1000, 2248, 110405, 3157, -1000, 2489, 524, -1000, 916, 523,
	521, 2528, 2528, -203, 54357, 54357, -214, 520, 916, -1000,
	-215, -1000, -1000, -1000, -1000, -1000, -137, -1000, 880, 577,
	-1000, -1000, 89807, 89807, 45936, 45936, -1000, 7745, 7745, 7745,
	-1000, 318, -1000, -1000, 2112, 3279, -1000, -142, 116912, 116871,
	1119, 49940, 65274, -216, -1000, -1000, 110405, 121182, -153, -1000,
	121182, 519, 509, 455, -1000, -1000, -1000, 611, -1000, -1000,
	-1000, 3523, -1000, 97919, 110405, -1000, -1000, 1765, -1000, -1000,
	-1000, 110405, 2258, -1000, -1000, -1000, 1038, 45936, 6783, 507,
	45936, -1000, 3378, -1000, 2564, 2733, 1922, 54357, -1000, 3194,
	-1000, 16374, -1000, 1030, 1864, -1000, -1000, -1000, 121182, 3261,
	54357, -1000, -1000, 505, 504, 121182, 503, 814, 2706, -1000,
	-1000, -1000, -1000, 121182, 499, 3356, -1000, -1000, -1000, -1000,
	2173, 89807, -1000, -1000, -1000, -1000, -221, -1000, -1000, 1879,
	110, 2051, 2602, -1000, 2185, 497, -1000, -1000, 2152, 2529,
	-1000, 97381, 31992, 31992, 317, 3377, 930, -1000, 3446, -1000,
	3107, 3107, 45936, 3375, 110, -1000, 3482, 54357, -1000, 89807,
	54357, 2176, 1978, 2383, 75148, -1000, 2401, -1000, -1000, -222,
	110405, 1799, -1000, -1000, 74058, 74058, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1030, -223, -229,
	-1000, 74058, -1000, -1000, 2348, -1000, 110405, -1000, 110405, -1000,
	-1000, -230, -231, -1000, 2016, 45936, 31420, -1000, -1000, 1119,
	-232, -1000, -198, -1000, 3374, 47652, 3522, 3520, 3519, -1000,
	-1000, -1000, 1832, -1000, -1000, -1000, 2915, 2658, 16308, 2360,
	110405, 6605, -1000, 2726, -1000, -1000, 2567, 496, -1000, -1000,
	-1000, -1000, 856, 110405, 2567, 2654, 89807, 1032, -239, 2061,
	2061, 45936, 30848, 2079, 45936, -1000, -1000, 3261, -1000, 2682,
	3461, -1000, 944, -1000, 2074, 110405, -1000, 3196, -1000, 3108,
	-1000, -1000, -1000, 2573, 110, -1000, -1000, -1000, -241, 121182,
	110, -1000, 315, -246, 1031, -247, 89807, 1890, -1000, 811,
	-1000, 2404, 979, -1000, -1000, -248, -249, 1922, 1030, 2048,
	-256, -1000, -262, -263, -1000, -1000, 307, 47080, 47080, 47080,
	-210, -217, -1000, 110405, 492, -1000, -1000, -1000, -1000, -1000,
	2892, 949, -1000, 2154, 1901, 305, 1054, -1000, -1000, 2048,
	110405, -1000, -1000, -1000, 948, 491, -1000, 45936, 1030, -264,
	-1000, 1017, -270, -1000, 1015, -271, -1000, 2702, -1000, -272,
	2173, 945, 3338, -1000, -1000, -1000, 2152, 89807, -273, -1000,
	-1000, 2257, -1000, 2567, 923, -1000, -1000, -1000, 1030, 487,
	1922, 485, 1460, 811, -1000, -1000, 1362, 3162, 3071, 916,
	916, 2567, 1922, 902, -1000, 916, -1000, -1000, -1000, 3020,
	-1000, 51050, 2190, 1783, 119024, 3020, 3020, -1000, -1000, 110405,
	3325, -1000, 2157, 2156, 1456, -1000, -1000, -1000, -1000, -1000,
	-1000, 2664, -280, 3324, 2360, 121182, 2567, -1000, 2061, 2598,
	-1000, 2061, 2696, -1000, 2064, -1000, -1000, -1000, 1731, 3444,
	2373, 484, -1000, 110405, 1759, 1757, 3514, 2051, 2152, 1922,
	54357, 2567, 54357, -1000, -1000, 110405, -1000, 1978, 1282, -1000,
	-1000, 2048, 2567, 979, 483, -1000, -1000, 1829, 3414, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 809, -1000, 3085,
	-1000, 1063, 1953, 1953, 979, -1000, 806, 2154, -1000, -1000,
	481, -1000, 478, -1000, 2113, -1000, -1000, -1000, -1000, 110405,
	-1000, -1000, 3509, -1000, 944, -1000, 2567, -281, 2048, -283,
	-1000, -242, 1890, -1000, 1561, 902, 2048, -1000, 1772, -1000,
	-1000, 2111, 46508, 45936, -1000, 3429, -1000, -1000, 2427, -1000,
	-1000, 45936, 2664, 45936, 45936, 60941, -288, -1000, 2152, 2048,
	1030, 902, 1922, 1460, 62560, 979, 902, -1000, -1000, -1000,
	121182, -1000, -1000, -1000, 121182, -1000, -289, -290, -258, 96836,
	2168, 2373, 902, 1922, 979, 2567, -1000, -261, -1000, 979,
	2048, 1127, -296, -1000, -1000, -1000, -1000, 979, 2567, -1000,
	2048, -1000, -1000, -1000, -1000, 468, -1000, -1000, 2048, 902,
	45936, 902, 979, -302, 979, -1000, 2048, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4395, 4388, 4387, 4386, 4383, 4381, 4380, 4378, 4375,
	4374, 4370, 4369, 4368, 4367, 4366, 4364, 4362, 4361, 4360,
	4358, 4357, 4356, 4350, 4348, 4347, 4345, 4344, 4343, 4341,
	4338, 4337, 4336, 4328, 4326, 4322, 4318, 4304, 4300, 4299,
	4298, 4297, 4290, 4288, 4285, 4281, 4277, 4267, 4264, 4263,
	4260, 4259, 4247, 4246, 4245, 4241, 4237, 4235, 4232, 4230,
	4228, 4227, 4226, 51, 4224, 4223, 4222, 4220, 4218, 4217,
	4215, 4214, 4213, 4212, 4211, 4210, 4207, 4206, 4204, 4203,
	4202, 4200, 4197, 4196, 63, 4194, 262, 4193, 4192, 4191,
	4190, 4189, 4187, 4186, 4184, 4183, 4182, 4180, 4172, 259,
	4171, 166, 4170, 4168, 4165, 4163, 4162, 258, 4161, 4158,
	4156, 4155, 272, 4154, 4153, 4151, 4150, 4148, 4145, 4130,
	4124, 4121, 4120, 4119, 100, 198, 4117, 4114, 1150, 4113,
	4110, 4109, 4107, 4104, 4103, 4102, 4101, 4100, 4099, 234,
	4095, 256, 4094, 4093, 4092, 4089, 4086, 4085, 4083, 4082,
	4078, 4077, 4076, 4075, 4073, 4072, 4071, 4070, 4067, 4066,
	4065, 4064, 4063, 4059, 4057, 4054, 4052, 4051, 4050, 4049,
	4047, 4046, 4045, 4044, 4043, 4042, 4041, 4037, 4036, 228,
	265, 172, 4032, 4029, 254, 251, 4028, 4026, 4025, 4023,
	4019, 136, 7, 37, 4018, 4017, 94, 86, 78, 96,
	91, 103, 4016, 110, 4015, 123, 61, 4014, 10, 2,
	246, 236, 5243, 231, 4013, 4012, 4011, 241, 183, 4006,
	227, 4004, 4003, 3999, 3998, 3997, 72, 53, 167, 169,
	151, 148, 252, 3994, 140, 106, 80, 58, 45, 18,
	76, 200, 22, 3993, 244, 8, 130, 1, 35, 3991,
	3988, 3987, 3985, 3542, 127, 3983, 250, 229, 156, 3982,
	3981, 3980, 297, 3979, 3978, 48, 3976, 187, 82, 126,
	27, 116, 3966, 139, 36, 3965, 162, 68, 3964, 154,
	97, 88, 10908, 10336, 3959, 121, 65, 129, 1796, 209,
	208, 185, 152, 157, 147, 180, 199, 197, 150, 54,
	3958, 232, 3956, 3385, 95, 171, 3953, 3952, 3947, 81,
	181, 108, 3943, 3941, 74, 11, 14, 4, 6, 122,
	25, 24, 16, 3939, 26, 113, 46, 21, 3938, 29,
	3937, 3935, 3934, 3931, 3928, 43, 149, 3920, 267, 3917,
	98, 47, 33, 3916, 102, 206, 3910, 213, 112, 3907,
	3901, 238, 191, 170, 3899, 73, 218, 3898, 3896, 3893,
	3892, 3891, 119, 3, 115, 3888, 3881, 142, 3877, 49,
	237, 189, 3875, 59, 3874, 3870, 161, 105, 117, 263,
	211, 220, 109, 215, 174, 222, 3868, 3867, 3866, 196,
	3865, 3864, 214, 128, 3863, 3858, 195, 271, 90, 44,
	77, 224, 83, 177, 145, 3855, 184, 3854, 3853, 270,
	168, 205, 13, 17, 93, 118, 3852, 5, 221, 135,
	217, 114, 3851, 6487, 137, 160, 3849, 3847, 186, 134,
	79, 124, 143, 247, 66, 3846, 3844, 2807, 3843, 3842,
	3841, 3839, 176, 3838, 3837, 3836, 141, 132, 173, 3835,
	92, 64, 50, 20, 153, 235, 264, 107, 210, 159,
	242, 3830, 3829, 3828, 175, 3824, 87, 266, 144, 182,
	239, 56, 3823, 253, 3821, 133, 1747, 67, 138, 3819,
	223, 3818, 3817, 3816, 3814, 3813, 3812, 3811, 953, 225,
	3810, 3809, 3807, 34, 179, 3804, 245, 155, 204, 99,
	52, 3803, 104, 2044, 3801, 886, 240, 70, 248, 202,
	249, 3800, 4167, 57, 3799, 0, 12955, 7630, 9320, 11948,
	3797, 2884, 3791, 3787, 3786, 194, 131, 3785, 3784, 3783,
	111, 3780, 84, 3777, 3776, 71, 3774, 31, 12, 19,
	32, 30, 203, 69, 3765, 3762, 28, 120, 163, 3760,
	255, 219, 3757, 3756, 3755, 3754, 89, 3752, 42, 3751,
	39, 3748, 3747, 40, 15, 41, 3743, 3741, 190, 3737,
	207, 230, 3733, 146, 3732, 3383, 125, 3730, 3729, 3728,
	60, 62, 243, 85, 3725, 274, 3724, 3333, 3723, 3721,
	23, 3719, 3718, 226, 193, 165, 201, 3717, 3716, 158,
	3715, 3713, 3711, 268, 3709, 3708, 3706, 38, 3705, 9,
	3704, 3702, 192, 3119, 3701, 3700, 55, 3698, 178,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 11, 11, 7, 7, 7, 7, 8, 8, 8,
	8, 8, 49, 49, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 36, 31, 32, 33, 34, 34, 10,
	10, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	17, 17, 37, 37, 18, 18, 39, 39, 19, 19,
	40, 40, 582, 582, 594, 594, 22, 22, 42, 42,
	23, 43, 16, 583, 583, 583, 583, 35, 24, 44,
	28, 28, 28, 28, 28, 194, 194, 194, 194, 21,
	21, 38, 38, 229, 229, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 578, 578, 231, 231, 230, 224, 224, 225, 225,
	584, 584, 232, 232, 232, 234, 234, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 477, 477, 477,
	510, 510, 509, 509, 509, 508, 508, 598, 598, 599,
	599, 599, 599, 599, 127, 127, 375, 375, 375, 52,
	52, 52, 52, 52, 573, 573, 196, 196, 196, 198,
	198, 197, 197, 197, 197, 75, 75, 589, 589, 590,
	590, 588, 591, 591, 591, 195, 195, 195, 123, 123,
	123, 123, 123, 123, 124, 124, 125, 125, 199, 199,
	199, 201, 201, 200, 200, 200, 200, 200, 200, 200,
	200, 205, 15, 15, 15, 15, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 103, 103, 512, 512, 513,
	513, 190, 190, 191, 191, 191, 191, 192, 192, 193,
	193, 193, 66, 66, 202, 202, 204, 204, 203, 203,
	203, 203, 203, 54, 54, 54, 54, 54, 54, 54,
	55, 55, 55, 55, 55, 56, 56, 56, 56, 56,
	56, 57, 57, 57, 57, 57, 57, 64, 64, 64,
	64, 64, 181, 181, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 72, 72, 72,
	72, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	601, 601, 602, 602, 603, 603, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 81, 81, 337, 337, 302, 302, 82, 82,
	82, 83, 83, 84, 84, 68, 68, 571, 571, 352,
	352, 468, 468, 69, 579, 579, 579, 581, 581, 580,
	580, 86, 86, 374, 374, 87, 87, 87, 87, 87,
	87, 88, 88, 88, 88, 88, 88, 88, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 96, 96, 96, 96, 96, 97, 97, 97,
	94, 94, 94, 91, 91, 91, 90, 90, 90, 95,
	95, 95, 570, 291, 291, 93, 93, 93, 92, 92,
	92, 353, 353, 98, 98, 98, 98, 303, 99, 99,
	99, 99, 99, 99, 99, 99, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 470,
	470, 100, 100, 100, 435, 435, 104, 104, 104, 390,
	390, 105, 105, 105, 105, 105, 106, 106, 106, 106,
	106, 106, 106, 106, 126, 126, 126, 126, 126, 126,
	126, 575, 575, 345, 345, 256, 256, 256, 256, 116,
	116, 116, 116, 117, 117, 117, 118, 118, 186, 186,
	133, 133, 133, 133, 133, 132, 132, 132, 132, 132,
	132, 58, 58, 58, 59, 59, 60, 60, 61, 61,
	62, 62, 63, 63, 63, 63, 63, 135, 135, 595,
	595, 137, 134, 134, 134, 136, 136, 136, 136, 138,
	139, 139, 139, 139, 139, 139, 139, 139, 140, 140,
	502, 502, 361, 361, 500, 500, 522, 522, 501, 501,
	307, 307, 307, 307, 307, 308, 308, 308, 511, 511,
	511, 511, 511, 511, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 187, 187, 188, 189, 189, 189, 189,
	189, 164, 164, 164, 180, 180, 180, 180, 180, 180,
	180, 167, 167, 167, 151, 151, 142, 142, 142, 142,
	142, 142, 142, 146, 146, 146, 146, 146, 146, 146,
	146, 143, 143, 153, 153, 153, 153, 153, 147, 147,
	148, 148, 148, 148, 174, 174, 150, 150, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 144, 144, 144,
	144, 155, 155, 155, 155, 397, 397, 397, 179, 179,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 177, 177, 177, 177, 177, 177, 592, 592, 593,
	593, 171, 171, 171, 171, 171, 171, 449, 449, 165,
	165, 165, 165, 170, 170, 170, 170, 173, 173, 173,
	173, 380, 380, 162, 162, 162, 163, 163, 163, 168,
	168, 169, 166, 166, 172, 172, 172, 172, 145, 145,
	145, 145, 605, 605, 605, 175, 175, 161, 161, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	606, 606, 157, 157, 157, 156, 156, 156, 156, 159,
	159, 160, 160, 160, 160, 160, 160, 158, 149, 178,
	572, 572, 568, 568, 568, 568, 568, 568, 568, 568,
	569, 569, 569, 569, 574, 574, 109, 109, 109, 109,
	109, 119, 119, 119, 119, 119, 110, 110, 110, 110,
	110, 112, 112, 111, 111, 111, 111, 76, 76, 76,
	76, 76, 14, 14, 14, 77, 77, 247, 247, 208,
	208, 208, 326, 326, 209, 209, 315, 315, 315, 315,
	206, 206, 207, 207, 78, 78, 607, 607, 607, 585,
	585, 585, 586, 586, 586, 586, 586, 586, 309, 309,
	310, 310, 415, 415, 415, 415, 415, 313, 313, 313,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 316,
	316, 233, 233, 233, 324, 325, 325, 317, 317, 323,
	322, 322, 321, 321, 320, 320, 318, 319, 319, 319,
	328, 328, 327, 330, 330, 329, 414, 531, 531, 533,
	533, 533, 533, 533, 533, 533, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 398, 398,
	608, 608, 529, 529, 529, 530, 525, 525, 526, 526,
	526, 526, 526, 311, 311, 312, 312, 312, 312, 527,
	528, 343, 343, 453, 532, 532, 534, 534, 536, 609,
	609, 609, 609, 609, 609, 610, 610, 610, 413, 413,
	412, 412, 335, 335, 537, 537, 537, 537, 538, 538,
	538, 538, 538, 541, 540, 539, 539, 539, 539, 539,
	80, 80, 80, 377, 377, 376, 376, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 183, 183, 259, 259, 74, 74, 74, 12,
	12, 12, 587, 587, 587, 79, 79, 79, 79, 79,
	79, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 577, 577, 576, 576, 260, 260, 612, 612, 85,
	85, 85, 85, 85, 85, 85, 85, 471, 471, 472,
	472, 73, 73, 73, 73, 73, 399, 399, 396, 396,
	395, 395, 342, 342, 451, 451, 451, 452, 264, 264,
	265, 265, 226, 226, 226, 30, 29, 20, 20, 25,
	25, 26, 26, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 27, 27, 46, 46, 46, 46, 47, 47,
	47, 47, 50, 50, 51, 51, 45, 45, 45, 45,
	48, 48, 41, 41, 596, 596, 597, 597, 115, 115,
	120, 120, 120, 120, 120, 121, 121, 121, 121, 122,
	122, 122, 122, 131, 131, 182, 182, 182, 182, 182,
	182, 182, 53, 53, 53, 53, 65, 65, 65, 65,
	129, 614, 614, 614, 130, 130, 130, 613, 613, 257,
	257, 409, 409, 410, 410, 615, 615, 411, 411, 411,
	411, 411, 250, 249, 251, 251, 252, 252, 71, 71,
	71, 242, 242, 241, 239, 239, 514, 514, 244, 244,
	244, 245, 245, 235, 235, 236, 236, 237, 237, 238,
	238, 248, 248, 616, 616, 107, 107, 107, 185, 185,
	301, 301, 301, 406, 406, 406, 336, 336, 271, 271,
	408, 408, 408, 408, 373, 373, 373, 184, 184, 350,
	350, 363, 363, 364, 364, 465, 465, 365, 113, 113,
	114, 114, 128, 128, 212, 212, 210, 210, 210, 210,
	210, 210, 210, 210, 217, 217, 218, 218, 219, 219,
	220, 221, 221, 221, 221, 354, 354, 222, 222, 222,
	211, 211, 211, 213, 213, 213, 213, 213, 213, 213,
	216, 216, 216, 216, 223, 223, 223, 215, 215, 548,
	548, 548, 550, 550, 552, 552, 551, 551, 547, 547,
	549, 549, 611, 611, 379, 379, 379, 333, 334, 331,
	331, 332, 332, 340, 340, 338, 339, 339, 341, 341,
	450, 450, 450, 227, 227, 227, 370, 370, 370, 370,
	371, 371, 402, 402, 400, 400, 400, 400, 401, 401,
	403, 403, 403, 404, 404, 405, 405, 367, 367, 368,
	368, 369, 369, 369, 369, 431, 431, 214, 214, 214,
	347, 347, 347, 348, 348, 421, 421, 421, 421, 421,
	421, 422, 422, 420, 420, 420, 420, 454, 454, 454,
	454, 454, 454, 454, 454, 454, 455, 456, 456, 349,
	349, 457, 407, 407, 566, 566, 566, 567, 567, 448,
	448, 458, 458, 458, 458, 458, 458, 446, 446, 447,
	447, 466, 467, 467, 383, 383, 383, 383, 381, 381,
	384, 384, 384, 384, 384, 382, 382, 459, 459, 459,
	459, 372, 372, 460, 460, 460, 460, 461, 462, 462,
	463, 463, 416, 417, 417, 473, 473, 473, 473, 475,
	346, 346, 346, 346, 346, 524, 523, 523, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 490,
	490, 490, 490, 490, 490, 490, 476, 476, 476, 476,
	476, 480, 480, 480, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 481, 481, 486, 486, 487,
	487, 487, 482, 483, 488, 488, 488, 488, 617, 617,
	492, 492, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 478, 478, 478, 485, 485, 485, 392, 392, 392,
	392, 392, 392, 392, 392, 392, 392, 392, 392, 392,
	391, 391, 393, 393, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 425, 425, 425, 425, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	542, 542, 542, 542, 542, 542, 542, 542, 427, 427,
	545, 545, 546, 546, 543, 543, 543, 543, 543, 543,
	543, 543, 543, 543, 543, 543, 543, 543, 543, 543,
	543, 543, 543, 543, 543, 543, 543, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 553, 553, 554, 554, 556, 556, 557,
	557, 558, 559, 559, 559, 560, 561, 561, 555, 555,
	562, 562, 562, 562, 563, 563, 564, 564, 564, 564,
	564, 565, 565, 565, 565, 565, 437, 437, 438, 438,
	444, 444, 444, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 261,
	261, 261, 261, 261, 359, 359, 357, 357, 357, 360,
	360, 358, 358, 356, 356, 355, 355, 434, 434, 432,
	432, 436, 436, 385, 385, 491, 491, 491, 491, 491,
	491, 491, 491, 386, 386, 386, 394, 387, 387, 388,
	388, 388, 388, 388, 428, 429, 389, 389, 389, 430,
	430, 439, 443, 443, 442, 441, 441, 440, 440, 418,
	418, 419, 419, 366, 366, 618, 618, 362, 362, 464,
	464, 464, 464, 305, 305, 351, 351, 304, 304, 296,
	296, 297, 297, 297, 297, 344, 344, 445, 445, 493,
	493, 494, 494, 495, 495, 496, 496, 497, 498, 499,
	433, 433, 281, 280, 268, 269, 279, 278, 277, 267,
	270, 274, 275, 276, 272, 273, 287, 286, 285, 240,
	243, 292, 293, 293, 295, 295, 294, 294, 283, 284,
	469, 266, 298, 298, 299, 299, 299, 300, 300, 300,
	300, 262, 262, 263, 263, 288, 288, 289, 290, 290,
	282, 282, 282, 253, 253, 253, 254, 254, 255, 255,
	507, 507, 504, 504, 504, 505, 505, 505, 506, 506,
	506, 506, 503, 503, 503, 503, 503, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 516, 516, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 518, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 521, 521,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 6, 6, 4, 4, 5, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 1, 0, 6, 6, 6, 6,
	6, 6, 4, 4, 4, 4, 3, 4, 4, 4,
	7, 7, 9, 8, 9, 5, 3, 5, 7, 4,
	12, 4, 12, 1, 3, 5, 5, 2, 5, 3,
	6, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 4, 2, 3, 10, 3, 6, 4, 3, 1,
	3, 2, 1, 1, 3, 1, 3, 2, 2, 3,
	2, 0, 1, 1, 0, 2, 0, 7, 10, 6,
	8, 6, 6, 6, 9, 4, 3, 2, 2, 0,
	1, 3, 1, 1, 1, 1, 1, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 12, 3, 1, 0, 1,
	1, 2, 3, 3, 0, 4, 6, 0, 5, 7,
	6, 8, 8, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 6, 4, 9, 7,
	12, 12, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 1, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 6, 6, 6,
	6, 4, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 6, 3, 8,
	3, 4, 3, 3, 4, 3, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 3,
	2, 0, 1, 0, 1, 0, 4, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 1, 2, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 3, 1,
	0, 1, 2, 2, 1, 6, 5, 1, 2, 1,
	3, 2, 0, 7, 2, 5, 0, 1, 3, 3,
	1, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 1, 3, 4, 6, 3, 3, 5,
	3, 1, 3, 2, 2, 2, 2, 1, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	3, 5, 7, 2, 3, 0, 3, 5, 2, 3,
	0, 2, 3, 2, 3, 2, 6, 4, 7, 7,
	7, 9, 5, 2, 6, 4, 7, 7, 7, 5,
	2, 2, 1, 1, 3, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 2, 4, 3, 2, 2,
	1, 2, 1, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 2, 6, 3, 3, 4, 4, 3,
	1, 3, 2, 3, 3, 1, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 1, 1, 2, 2, 1, 3, 3, 3, 3,
	3, 2, 3, 3, 1, 1, 1, 1, 1, 2,
	2, 5, 7, 3, 3, 3, 4, 4, 6, 5,
	5, 5, 3, 4, 4, 3, 4, 4, 3, 4,
	4, 5, 3, 5, 5, 5, 7, 3, 3, 3,
	2, 6, 4, 3, 2, 3, 4, 3, 5, 3,
	6, 5, 6, 3, 5, 6, 3, 4, 3, 4,
	3, 3, 4, 4, 5, 0, 1, 1, 1, 1,
	3, 2, 4, 3, 3, 5, 3, 4, 3, 5,
	3, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 4,
	4, 3, 1, 1, 1, 2, 3, 2, 3, 6,
	6, 7, 9, 7, 9, 4, 3, 4, 4, 5,
	1, 1, 10, 10, 3, 5, 5, 5, 3, 5,
	6, 4, 4, 5, 5, 2, 3, 2, 5, 4,
	2, 0, 1, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 1, 2, 0, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 6, 5,
	8, 3, 6, 6, 3, 13, 16, 1, 0, 1,
	2, 3, 0, 2, 0, 4, 0, 4, 5, 4,
	3, 3, 1, 3, 10, 13, 0, 2, 3, 1,
	1, 0, 1, 2, 2, 2, 2, 1, 1, 0,
	1, 3, 1, 1, 1, 2, 3, 3, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 8,
	0, 1, 1, 0, 2, 1, 0, 1, 0, 1,
	1, 0, 1, 4, 1, 0, 3, 7, 7, 1,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 2, 2,
	2, 8, 4, 2, 5, 5, 5, 2, 2, 0,
	1, 3, 11, 12, 9, 5, 3, 1, 5, 10,
	7, 11, 3, 3, 0, 2, 4, 3, 3, 1,
	5, 1, 3, 1, 2, 0, 1, 2, 2, 0,
	1, 3, 3, 2, 2, 1, 1, 1, 4, 0,
	6, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	5, 8, 4, 1, 0, 1, 2, 2, 1, 2,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 4, 2, 2, 2, 4, 7, 3, 4,
	6, 3, 1, 1, 1, 8, 10, 11, 7, 10,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 3, 0, 1, 8,
	11, 3, 6, 6, 5, 3, 4, 1, 0, 1,
	3, 17, 20, 16, 19, 4, 2, 0, 1, 0,
	1, 0, 1, 3, 2, 4, 2, 3, 1, 0,
	2, 0, 1, 1, 0, 9, 6, 6, 8, 6,
	8, 5, 7, 2, 6, 7, 4, 4, 5, 2,
	4, 6, 6, 8, 6, 7, 8, 9, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 8, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 2, 3, 2, 2, 1, 2, 12, 15,
	3, 1, 0, 4, 3, 0, 1, 1, 4, 4,
	5, 1, 0, 3, 0, 3, 0, 3, 0, 3,
	0, 4, 0, 1, 0, 6, 7, 3, 6, 3,
	1, 3, 1, 1, 4, 2, 1, 3, 1, 3,
	4, 8, 11, 5, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 6, 4,
	5, 4, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	3, 1, 3, 3, 3, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 4, 1, 0,
	1, 0, 2, 1, 0, 2, 5, 7, 2, 1,
	2, 4, 3, 5, 0, 1, 3, 5, 1, 2,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 6, 6, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 5, 4, 6, 3, 5, 4, 6, 4, 6,
	5, 7, 3, 3, 3, 3, 3, 4, 3, 2,
	4, 2, 3, 3, 4, 3, 4, 3, 4, 5,
	6, 6, 7, 6, 7, 6, 7, 3, 4, 4,
	1, 3, 1, 3, 3, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 5, 6, 6,
	7, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 2, 1, 5,
	5, 6, 3, 1, 1, 1, 2, 2, 2, 4,
	3, 5, 6, 8, 6, 5, 4, 3, 2, 2,
	4, 1, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 6, 6, 8, 8,
	6, 4, 6, 6, 6, 4, 1, 3, 3, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 4, 3, 4, 3, 4,
	3, 4, 4, 3, 6, 5, 5, 5, 4, 4,
	3, 4, 3, 5, 0, 5, 0, 2, 0, 1,
	3, 3, 2, 2, 0, 6, 1, 0, 3, 0,
	3, 3, 3, 0, 1, 4, 2, 2, 2, 2,
	2, 3, 2, 2, 3, 0, 4, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 3, 1, 3, 3, 1, 1,
	1, 1, 5, 3, 1, 1, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 586, -101, -98, -66, -64, -104, -105,
	-87, -106, -100, -126, -131, -113, -114, -115, -127, -133,
	-182, -187, -188, -189, -3, -52, -54, -67, -86, -88,
	-99, -108, -107, -109, -116, -123, -119, -103, -58, -128,
	-132, -141, -183, -184, -185, 32, 31, 100, 80, 154,
	128, 137, 201, 380, 422, 433, 394, 142, 414, 399,
	-136, -137, 451, -53, -65, -130, -129, 73, 129, 408,
	-4, -12, -15, 29, 46, -55, -56, -57, 62, -74,
	-70, -81, -75, -68, -69, -72, -600, 102, -549, -89,
	-92, -122, -604, 161, 219, -110, -111, 363, -117, -118,
	416, -120, -121, 418, 162, -60, -59, 156, -210, -212,
	-134, -135, -186, -142, -143, -144, -145, -146, -147, -148,
	-174, -149, -150, -151, -152, -153, -154, -158, -177, -155,
	-156, -157, -160, -159, -161, -166, -162, -163, -164, -165,
	-167, -168, -170, -171, -172, -173, -175, -176, 456, -169,
	-178, 516, 49, 470, 82, 146, 426, 21, -5, -6,
	-7, -8, -9, -10, -11, -14, -13, -71, -73, -76,
	-77, -78, -85, -79, -80, -548, -90, -91, -94, -96,
	-97, -93, -95, 415, -213, -211, 583, 531, -17, -22,
	-23, -18, -19, -21, -24, -20, -25, -26, -27, -37,
	-42, -43, -39, -40, -38, -41, -44, -45, -46, -47,
	-48, -49, -50, -51, -29, -35, -36, -30, -31, -32,
	-33, -34, -16, -28, 552, 561, -216, -214, -215, -223,
	443, 539, 490, 586, 586, 586, 586, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, 586,
	586, 586, 586, 586, 586, -303, 2, -283, -288, -289,
	-290, -282, -253, -518, -521, 4, -515, -519, 168, 228,
	327, 21, 23, 22, 24, 25, 26, 27, 29, 30,
	41, 42, 44, 45, 46, 47, 48, 49, 53, 55,
	59, 60, 61, 62, 63, 64, 68, 73, 74, 79,
	80, 81, 82, 83, 84, 85, 91, 88, 89, 90,
	92, 94, 96, 97, 98, 99, 100, 101, 103, 104,
	105, 107, 108, 109, 117, 118, 119, 120, 121, 123,
	128, 129, 132, 127, 131, 133, 135, 136, 137, 140,
	141, 142, 144, 145, 147, 148, 149, 151, 152, 154,
	155, 156, 159, 157, 498, 158, 160, 161, 162, 163,
	166, 174, 175, 176, 181, 183, 184, 188, 189, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 202, 206,
	208, 209, 210, 211, 212, 218, 219, 221, 222, 223,
	224, 229, 230, 231, 235, 232, 241, 242, 246, 247,
	248, 250, 254, 255, 256, 257, 258, 259, 261, 263,
	262, 265, 268, 269, 272, 276, 277, 281, 282, 278,
	283, 284, 286, 287, 290, 288, 291, 292, 289, 293,
	295, 296, 297, 298, 299, 300, 301, 302, 303, 304,
	305, 306, 294, 309, 307, 311, 312, 313, 325, 322,
	317, 318, 314, 319, 315, 316, 320, 321, 324, 329,
	330, 333, 216, 335, 336, 339, 357, 343, 344, 345,
	348, 349, 352, 355, 356, 358, 359, 360, 361, 362,
	363, 364, 365, 367, 368, 370, 371, 372, 374, 375,
	376, 378, 380, 381, 383, 384, 386, 387, 388, 389,
	390, 391, 392, 394, 396, 395, 397, 399, 401, 402,
	403, 408, 414, 410, 411, 412, 413, 415, 416, 417,
	418, 420, 421, 422, 424, 425, 426, 427, 429, 431,
	432, 436, 437, 453, 454, 472, 433, 434, 435, 438,
	439, 440, 441, 442, 446, 444, 445, 447, 448, 449,
	451, 452, 455, 456, 458, 459, 460, 461, 462, 463,
	466, 468, 469, 470, 489, 471, 473, 477, 478, 479,
	480, 474, 475, 488, 482, 483, 485, 486, 491, 492,
	493, 494, 495, 496, 497, 499, 501, 509, 510, 511,
	513, 516, 517, 518, 519, 507, 521, 522, 525, 526,
	527, 530, 528, 529, 531, 533, 536, 537, 538, 544,
	543, 545, 548, 553, 554, 556, 557, 558, 36, 50,
	51, 54, 56, 58, 69, 70, 71, 75, 124, 125,
	153, 164, 165, 177, 190, 191, 203, 205, 213, 214,
	215, 236, 237, 239, 244, 266, 332, 334, 350, 354,
	369, 373, 377, 379, 393, 428, 464, 476, 481, 502,
	503, 504, 505, 512, 514, 539, 540, 541, 546, 555,
	-303, 2, -283, 341, -276, 2, -253, -253, 380, 28,
	2, 28, 368, 445, 493, 495, 2, -575, -345, 2,
	28, -256, -253, 102, 201, 443, -276, 2, -575, -345,
	25, 2, -253, 2, 355, 22, 27, 66, 77, 98,
	140, 163, 185, 188, -603, 357, 387, 431, 447, 488,
	499, 513, 2, 543, 287, 444, 490, 228, 120, 518,
	438, -587, 436, 437, 355, 385, 424, 204, 532, -257,
	2, 433, -253, 287, 2, 586, 94, 277, 74, 428,
	448, -139, 510, -138, 502, 438, -140, -502, 2, 309,
	-253, 586, 586, 586, 28, -266, -253, 490, 228, 438,
	120, 486, 586, 2, 490, 360, 543, 444, 120, 390,
	228, 518, 188, 140, 27, 126, 438, -587, 287, -573,
	2, -568, 4, -519, -515, -297, -296, 490, 496, 120,
	-290, -282, 576, -289, 586, 586, 586, 2, 247, 248,
	389, 388, 448, 449, 586, 586, 586, 586, 436, 2,
	163, 22, 27, 66, 93, 98, 126, 185, 188, 346,
	-601, 357, 387, 447, 488, 492, 499, 513, -586, 471,
	68, 413, 438, -585, -587, 287, 518, 140, -395, 120,
	277, 199, 526, 495, 493, 524, 132, 235, 529, 528,
	586, 586, -101, 2, 583, 32, 31, 142, 451, -205,
	490, 240, 2, -253, 586, 586, 2, 247, 248, 436,
	437, 586, 586, 186, -568, 2, 586, 586, 2, 247,
	248, 436, 437, 240, 2, 68, 440, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, 586,
	586, 2, -180, 448, 471, 210, 47, 46, 74, 28,
	386, 79, 361, 121, 148, 519, 202, 228, 229, 255,
	93, 94, -397, 44, 248, 247, 437, -592, 436, -449,
	491, 439, 445, 485, 259, 433, 510, 102, 533, 425,
	558, 390, 391, 483, 403, 278, 157, 187, 4, 120,
	309, 450, 502, 277, 432, 364, 84, -611, 2, 490,
	-613, 2, 510, 510, 2, -613, 2, -613, 2, -613,
	2, -614, 510, 555, 586, 586, 586, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, 586,
	586, -211, -213, -212, 586, 586, 586, 586, 586, 586,
	586, -180, 448, 2, 74, 28, -338, -340, 523, 238,
	150, 347, -210, -212, 2, -548, -500, 2, -423, -522,
	-425, 574, 575, 567, 487, 67, 326, 559, -437, 126,
	524, 341, -521, -426, -439, 153, 428, -360, 8, 9,
	5, 6, 7, -262, -427, -433, 515, 167, 331, -300,
	587, 10, 583, -545, -212, -438, 37, 205, 65, -504,
	-299, -263, -476, 239, -298, -282, -542, -543, 4, -515,
	-516, -505, -479, -487, -483, -484, -490, -253, -518, 77,
	111, 112, 110, 115, 114, 280, 279, 116, 113, 450,
	532, 66, 36, 213, 214, 244, 332, 215, 75, -544,
	141, -517, 236, 237, 464, 51, 393, 177, 125, 124,
	334, 56, 54, 540, -488, 122, 502, 503, 504, 505,
	190, 191, 58, 164, 165, 354, 377, 481, 512, 514,
	203, 266, 43, 106, 187, 234, 217, 243, 245, 249,
	267, 270, 310, 323, 328, 351, 353, 423, 457, -617,
	541, 476, 69, 70, -550, 395, -551, -276, -550, 586,
	586, 588, 586, -331, -333, -334, 2, 28, 138, 583,
	2, -454, 2, -455, -459, -212, 260, -458, 583, -456,
	581, -283, 342, -546, 429, -542, -543, -262, -282, -299,
	4, -515, -517, 585, -335, 583, 120, 490, 78, 228,
	163, -390, 583, -253, 28, 341, 506, 588, -332, 384,
	-435, 583, 341, 186, 344, 60, 291, 2, 2, 2,
	2, 2, 213, -253, 490, 119, 2, 258, 2, 2,
	2, 2, 2, 2, 2, -353, 213, 2, -283, 543,
	-353, 213, 2, -353, 213, 2, -396, 2, 87, -267,
	213, 2, -253, -291, 213, 2, -286, -288, -295, 213,
	2, -293, -253, -513, 213, 2, -512, -507, 10, -506,
	5, 4, -515, -519, -516, -518, 77, -423, 2, -128,
	2, 60, -253, 543, 2, 2, 453, 2, 583, -139,
	71, 510, 43, 448, -410, 2, -411, -249, -250, -251,
	-466, -252, 246, 383, 392, 562, 130, 326, 558, -500,
	-595, 186, 566, 506, -500, -361, 585, 2, 2, 2,
	2, 2, 2, -459, 213, -283, 2, -280, -503, 4,
	-515, -519, -516, -520, 28, 31, 32, 33, 35, 37,
	38, 39, 40, 57, 65, 66, 72, 76, 78, 87,
	93, 102, 110, 111, 113, 112, 114, 115, 116, 126,
	130, 134, 138, 139, 143, 146, 150, 167, 169, 182,
	185, 186, 201, 204, 207, 220, 233, 238, 240, 260,
	264, 271, 279, 280, 326, 331, 337, 341, 342, 346,
	347, 366, 382, 398, 419, 443, 450, 467, 484, 490,
	500, 506, 508, 515, 523, 524, 532, 534, 542, 547,
	549, 550, 551, 552, -521, 2, -459, 213, 2, -285,
	213, -459, -288, 2, -267, 2, -279, -503, 2, -304,
	213, -283, -284, -288, -286, 2, 2, 2, 2, 2,
	-293, 2, -512, 213, 2, 543, 240, 506, 588, -351,
	-296, -297, -499, 8, -344, -253, 585, -423, 2, -128,
	-112, 2, 182, -423, 213, 2, -128, 213, 2, -423,
	213, 2, -128, 213, 2, -589, 2, -512, 213, -253,
	2, 291, 2, 2, 513, 2, 98, 490, 119, 2,
	412, -602, 431, 517, 2, 2, 2, 2, 2, 2,
	2, 490, -272, 2, -253, 182, 474, -293, 213, -294,
	2, 444, -612, 395, -512, 213, 2, 543, -286, 213,
	2, -286, 228, 242, -267, 213, 2, 495, 493, 495,
	493, 186, 2, 240, 2, 240, 2, -460, 2, -461,
	-455, -462, 581, 342, -470, 2, -469, -506, 539, -101,
	583, -101, 583, 448, 583, -512, -283, -283, -423, 2,
	-128, -112, 2, -423, 2, -128, 2, -125, -512, -124,
	583, 186, -423, 2, -128, -112, 2, -423, 2, -128,
	2, -205, 182, 2, 120, 490, -180, 2, 182, 534,
	2, 8, 2, 220, -512, 439, 391, 174, 2, 453,
	2, 454, 74, -397, 558, 74, 186, 2, 186, 2,
	-380, 2, 552, 186, 2, 2, -572, 2, 341, 186,
	2, 186, 2, 186, 2, 186, 2, 186, 2, -179,
	449, 511, 489, 388, 248, 2, -128, 549, -112, -423,
	549, 2, -593, 182, 437, -423, 2, 509, 257, 158,
	186, -380, 2, 186, 2, 186, 2, 5, 2, 389,
	472, 2, 246, 383, 472, 2, -283, -605, 28, 2,
	490, 543, 444, 2, 2, 88, 89, 186, 2, 186,
	2, 200, 186, 2, 186, 490, 558, 2, -372, -459,
	-409, -410, -409, 506, -338, -340, -180, 453, 2, -217,
	-370, -219, 182, -400, -401, -220, 271, 169, 337, -221,
	-379, 28, 138, -379, -379, 60, 584, 584, 11, 12,
	76, 41, 574, 575, 576, 577, 180, 578, 579, 572,
	573, 571, 564, 565, 569, 252, 253, 95, 568, 566,
	86, 285, 430, 170, 171, 172, 173, 409, 226, 34,
	227, 14, 15, 16, 33, 346, 270, 559, 217, 457,
	567, 17, 18, 19, 243, 245, 328, 50, 220, -261,
	-306, -423, -423, -423, -423, -423, -423, -423, 353, 583,
	-366, -418, 581, -212, 583, 583, 583, -499, -212, -423,
	-437, 584, -358, 583, -212, -437, -432, 583, 428, 581,
	583, -440, -423, 5, 5, 5, 583, 585, -553, 553,
	182, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 379, -481, 583, -480,
	583, -480, -480, 544, -478, 583, 561, 554, 583, -478,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 544, 588, -550, -335, 583, -362, -464,
	-423, 576, -362, -362, 341, -355, -423, 106, -383, 249,
	310, 187, 267, 423, 234, -420, 587, -420, -448, 561,
	-212, -456, -282, -212, -458, 583, -454, -448, -102, -499,
	-86, -99, -107, -128, -141, -184, -185, 576, -283, 583,
	186, 583, 585, -503, 186, -344, -267, -283, -298, -299,
	-304, 2, 137, -355, -568, 518, 438, 444, -344, -256,
	38, -434, -473, -474, -524, 587, -523, -476, -486, -482,
	-485, 369, 373, -505, 54, 540, -488, 239, 4, -515,
	-517, 236, 237, 464, 51, 393, 177, 125, 124, 334,
	56, 502, 503, 504, 505, 190, 191, 58, 541, 476,
	69, 70, -568, 518, 438, 444, -344, 182, -510, 2,
	-509, -508, 116, 450, -506, 5, 2, 153, 2, 2,
	2, -253, -232, 588, 64, 417, 153, -353, 213, -232,
	153, -232, 153, -305, 213, -304, -232, 153, -232, 588,
	153, -232, 588, 153, 585, 588, 153, -510, 2, -396,
	-502, -355, 38, -410, 2, 126, -508, -615, 588, 269,
	-308, 284, 325, 209, 342, 556, 335, 130, -511, 5,
	4, -433, -445, 126, 277, 239, -493, -495, 8, -494,
	9, -496, 574, 575, -501, -500, 109, 585, -503, -229,
	410, 451, 356, -228, 24, 29, 142, 230, 313, 537,
	159, -321, 231, -318, 360, 153, 468, 527, -582, -583,
	435, 497, 498, 90, 335, 451, 356, 410, 153, -376,
	-378, 38, 118, 313, 355, 61, 223, 289, 290, 470,
	546, 153, 451, 356, 410, 356, 24, 142, -244, -241,
	451, -583, 99, 410, 482, 382, -583, -231, 468, 527,
	-582, -583, 435, 410, -230, -323, -318, 360, 153, 587,
	24, 142, 410, 451, 356, -598, -599, 29, 410, 356,
	-576, -547, 552, 153, -459, 213, -590, -124, 261, 5,
	10, -512, -124, -351, 588, 588, -503, 576, 437, 436,
	153, 153, 153, 153, 182, 326, 2, 2, 2, 2,
	2, 188, -585, -603, 2, 2, -283, 213, -337, 341,
	-571, -352, 490, -283, 182, 326, 43, -285, 213, 2,
	-288, 543, -576, 326, -287, 213, -283, 38, 583, 326,
	2, -396, 2, 228, -547, 326, -460, -301, -283, -455,
	-301, 451, -276, 38, -420, -283, 584, 588, -470, -470,
	-512, -193, 552, 186, 102, 583, 583, -205, -467, 588,
	-466, 220, -513, -125, -512, 413, -512, -571, -267, 2,
	-283, 2, 490, 250, -512, -193, 220, -512, -512, -512,
	-502, 28, 454, 2, -179, 449, 511, 89, 454, 2,
	-283, 490, 120, 228, 80, -253, -574, 182, -569, 424,
	438, 518, -568, -283, 120, -283, 120, -283, 120, -283,
	-283, 2, 2, 2, 2, 2, 85, 85, 2, 46,
	-593, 182, 2, 509, 2, 509, 2, -253, -253, -253,
	471, 269, -283, 491, -606, 2, 186, 182, 2, 490,
	228, 490, 228, 120, 186, 74, 120, 28, 490, 434,
	-232, 588, -257, -217, -370, -502, -371, -370, -218, -217,
	-220, 182, 392, 528, 313, 455, 254, -401, -400, 28,
	-423, -405, 176, 312, -423, -403, -425, 574, 575, -494,
	-496, -354, 335, -211, -211, -211, -341, -450, -423, 382,
	228, -475, -473, -473, -281, -503, 502, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, 270, 217, 457, 50, 220, -423, 506, -423,
	-423, -423, -423, 307, 326, 331, 515, 167, 525, 138,
	335, -618, 484, 40, -430, -212, -359, 583, -444, 35,
	467, 28, -437, 583, 2, -418, -423, -419, -356, -355,
	-355, 584, 542, 28, 138, 576, 2, 584, 588, 38,
	584, -423, -356, -436, -432, -355, -443, -442, 549, -391,
	-392, 557, 294, 123, 211, 292, -393, 442, -497, 8,
	-503, 576, -554, 175, 204, 583, 584, 2, 584, 2,
	584, -423, 2, 584, -423, 2, 584, -423, 2, 584,
	-423, 2, 584, 2, -423, -423, -423, -423, -423, -423,
	-423, -355, 8, -497, -497, 502, 502, -497, -497, -497,
	-489, 369, 370, 371, 372, 272, 273, 274, 275, 373,
	374, 375, 376, 299, 300, 301, 302, 295, 296, 297,
	298, 303, 304, 305, 306, 195, 196, 197, 198, 191,
	192, 193, 194, -489, -385, 2, -491, -355, 4, 557,
	294, 123, 211, 292, 442, 5, -385, 2, -386, 2,
	-423, -355, -387, -424, -425, 574, 575, 567, -437, -388,
	2, -423, -356, -423, 57, 264, 508, -389, -423, 186,
	-355, -355, 2, -355, 2, -551, 38, -355, -347, 588,
	186, 38, 4, -347, -347, 583, 584, 588, -384, 208,
	288, 283, 242, -384, -454, -383, 249, -381, 351, -381,
	-381, -448, -268, 581, 589, -503, -448, -447, -446, 38,
	-276, 348, -448, -448, 585, 584, -447, 582, -566, 583,
	586, 586, 586, 586, 586, -283, 583, -355, -503, 585,
	473, 2, 584, 243, 243, 243, 243, 429, 584, 506,
	-570, -291, -295, 2, 552, -101, 343, 584, 588, -346,
	37, 581, 585, -497, 2, 2, -492, 544, 583, 583,
	-392, 583, 186, -570, -295, 2, -345, 588, 506, -253,
	2, -283, -353, -232, 153, -353, -353, -232, 588, 153,
	-267, -286, -291, -293, -295, -253, -512, -513, -232, -287,
	-595, 584, 510, -411, -307, 392, 466, 411, 446, 486,
	8, 9, 8, 9, 588, -503, 588, -596, 93, 506,
	78, 438, -246, 278, 506, -414, 213, 78, -525, -270,
	93, -526, -253, 72, 524, 382, 185, 151, -596, 93,
	382, -596, 93, 2, 230, 93, 451, 471, 28, 60,
	-459, 41, 41, 28, -594, 324, 265, 548, 186, 558,
	490, 228, 438, 506, 506, -459, -378, -473, 118, 289,
	290, 60, -498, -493, 574, 575, -498, 60, -498, -498,
	-498, 552, -285, -459, 438, 506, 506, 506, 401, 401,
	-241, 506, 506, -616, 566, 401, 588, 41, 41, 28,
	-594, 324, 265, 186, 506, -304, -268, 538, 42, 538,
	42, 538, 506, 42, 438, 506, 588, 42, 506, 506,
	-577, -258, 105, 319, 282, 320, 97, 316, 96, 315,
	103, 317, 104, 318, 545, 329, 63, 314, 293, 321,
	-259, -260, 362, 536, -512, 451, 356, 410, 153, 220,
	-467, 220, -467, -296, -253, 585, -128, -423, -423, -128,
	-423, -128, 46, 153, 2, -612, 258, 583, -311, 326,
	186, -344, -468, 240, 588, -352, -568, 153, -509, -377,
	-376, 326, -287, 213, 2, 153, -335, 326, 147, 583,
	390, 2, 153, -269, 213, -254, -253, -396, -235, 494,
	153, -374, 534, -406, -128, 583, 126, 38, -406, -363,
	-364, -465, -365, -270, 583, -276, -420, -101, -469, 584,
	584, 584, -192, 345, -191, -253, 5, -205, 534, -310,
	-415, -414, -529, -530, -525, 270, 228, 524, 242, 168,
	-336, -271, -270, 119, -199, 552, -124, -125, 584, -467,
	220, 474, -193, -193, -467, -467, -283, 182, -512, -193,
	-193, -193, 2, 2, 2, 2, -380, -283, -267, -304,
	-283, 585, -344, -344, -295, -291, -380, -267, -380, -267,
	-380, -267, -128, -423, 2, 448, 182, 182, 585, -380,
	390, 120, 490, 360, 228, -283, -304, -283, -304, -267,
	120, -267, 121, -283, -459, -371, -218, 342, 254, 455,
	-403, -404, -425, 428, 429, -404, 428, 429, 8, 9,
	8, 9, -222, 459, 330, -353, 588, -226, 39, 134,
	254, -283, 558, 149, -423, -423, 506, -618, 484, -430,
	149, -423, 307, 331, 515, 167, 525, 138, 335, 186,
	583, -424, -424, 584, -357, -423, -423, 582, 591, 584,
	-340, 588, -338, -423, -355, -355, 584, 585, -355, -344,
	582, 582, 588, 584, -441, -442, 143, -423, 506, 506,
	506, 506, 583, 584, 585, -559, 352, 583, 583, -423,
	584, 584, 584, 584, 38, 588, 588, 588, 584, 588,
	588, 588, 584, 584, 584, 588, 584, 558, 558, 584,
	584, 584, 584, 588, 584, 588, 584, 186, 584, 584,
	-394, 366, 584, 11, 12, 574, 575, 576, 577, 180,
	578, 579, 572, 573, 571, 564, 565, 566, 86, 285,
	430, 14, 15, 16, 243, 220, -424, -424, -424, 584,
	-428, -429, 186, 182, 38, -389, -389, -389, 584, 186,
	-355, 584, 584, 583, -552, 287, 326, 584, -417, -416,
	550, -464, -348, 2, -454, -278, -503, -417, -417, -355,
	-423, 249, 249, -382, 534, 341, -384, -454, -447, -499,
	-422, -421, 184, 39, 134, 322, 216, -447, -276, -335,
	-447, -447, -503, -448, -448, -446, 584, -567, -499, 584,
	-349, -457, -546, -340, 585, -503, -202, -547, -181, 5,
	331, -181, -181, -181, -344, 506, 506, 25, 367, -473,
	581, 582, 8, -503, 583, -497, -497, -497, -344, 186,
	186, 186, -509, -509, 2, -232, -353, -232, -232, -304,
	-305, -232, -232, -232, -375, 552, -500, -410, 522, 83,
	392, 502, -500, -228, 410, -270, -270, -283, -292, -253,
	199, 402, -509, 326, -414, 213, -234, 326, -473, -277,
	-253, 583, -398, 554, 254, 254, 534, -270, -277, 254,
	213, -270, 213, -277, 2, -277, -578, 392, 336, -423,
	60, -319, 276, 390, 327, -229, 410, 451, 356, -128,
	-128, -128, -128, -128, 583, -595, 534, 137, -283, -304,
	-283, -292, -509, -287, 451, 356, 410, 323, -298, -498,
	-498, -376, 451, 356, 410, -292, -509, -285, -509, -240,
	-253, -240, 438, -267, 401, 558, 45, -616, -230, -128,
	-128, -128, -128, -128, 583, -268, -231, 410, 5, 213,
	-270, 5, -270, 213, 5, -253, -270, -292, -509, -599,
	24, 142, -270, -292, -509, -258, -512, 331, 530, -576,
	438, 506, 506, -459, -124, -196, 552, -124, -190, 224,
	576, -573, -253, 543, -253, -309, -312, -310, -270, -208,
	-209, 554, 552, 153, -302, -283, 581, -193, -512, -283,
	-468, -293, -294, 153, -335, 326, -512, 38, 153, 583,
	2, 2, -286, 341, 326, -269, 213, -236, 144, -616,
	-267, -417, -348, -373, -408, 419, 341, -336, 539, -276,
	-373, -350, 588, 186, 566, 585, -336, -463, 576, -101,
	-101, -193, 588, 583, 566, 566, 583, -512, -512, 584,
	588, -234, -283, -269, 228, 228, -275, -254, 584, 588,
	585, 583, -201, 345, -200, 145, 256, 241, 460, 461,
	462, 463, 136, -467, -199, -125, 186, 186, -61, 552,
	490, -193, 587, -253, -380, -380, -380, 448, 448, -253,
	-279, -267, -283, -280, -304, 182, 182, -267, 528, -404,
	342, 281, -450, -227, 560, -283, 587, -423, -423, 149,
	149, -423, -424, -424, -423, 149, 186, 583, -423, -434,
	33, 33, 584, 588, -419, -423, 584, 542, -340, -340,
	584, 576, -503, 587, 584, -432, 146, -423, 500, 294,
	211, 292, -393, 292, -393, -393, -497, 5, -503, 576,
	-560, -273, 583, -253, 550, -339, 347, 584, -475, -473,
	-423, -423, -423, -423, -423, -497, -478, -478, -493, -493,
	-423, -428, -423, -475, -473, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, 138, 326, 335, -424, -429, -428,
	-423, -423, -473, 584, 584, 584, -355, -101, 583, 287,
	-367, 204, -423, -467, 588, -367, -367, 584, -454, -454,
	583, -423, 249, 582, 588, 590, 566, -335, 585, -446,
	-447, 582, 584, 588, 584, 588, -407, 38, 584, -503,
	-417, -204, -203, 135, 53, 107, 133, 331, -344, -344,
	344, 5, 8, 581, 582, 585, -497, 584, 584, 584,
	-344, -344, -344, -232, -232, 119, 313, -423, 506, 506,
	60, 220, 153, 326, 536, -531, -526, 151, -423, 583,
	228, 583, 583, 2, -224, -225, 142, 451, 24, -597,
	2, 534, 153, -232, 153, -232, 556, -319, 583, 583,
	506, 438, -246, 506, 552, -355, -423, -194, 126, -502,
	-583, 587, -583, 587, 438, 506, 506, 438, 506, 506,
	552, 166, 166, 558, -240, 552, -355, 506, -477, 48,
	26, 326, -286, -232, 153, 506, 506, 518, 451, -512,
	331, -292, -509, -287, 451, 356, 410, -467, -198, 345,
	-197, 145, 421, 136, 256, -467, -196, 186, 240, 552,
	-287, 2, 584, 584, 588, -532, 38, 339, 339, 583,
	-283, -82, 552, -466, -499, -579, 552, 43, -285, 38,
	153, -576, -128, -287, -471, -472, 5, 38, -283, 153,
	341, 326, -237, 263, -616, -507, -547, -340, -373, -362,
	327, 91, 584, -417, -364, -348, -423, 2, 584, -191,
	-192, -512, -512, -512, -193, -205, -205, -415, -313, 583,
	-269, -254, 583, -205, -271, 2, -513, 588, 583, 566,
	566, 566, -199, -467, -124, -128, 345, -283, 576, -380,
	-325, -324, 360, 335, -325, 428, 428, 342, 176, 259,
	-226, -268, -423, -423, 149, 33, 33, -423, -423, -434,
	584, -423, -423, -355, 582, 5, -423, 584, 584, 8,
	-423, 584, 585, -561, -253, -423, 584, 60, 584, 584,
	588, 588, 584, 584, 584, 584, 584, 584, 584, -429,
	186, 138, 335, 583, 584, 584, -101, -431, 207, 60,
	-454, -431, -431, -382, -344, -454, -421, -268, 581, -503,
	-499, -457, 583, 585, -203, 566, -512, -512, 552, 582,
	2, 581, -503, 584, 119, -270, -270, 490, 428, -240,
	382, -414, 153, -533, 93, -535, 76, 168, 102, 326,
	331, 524, 382, 72, 126, 398, -608, 38, 563, 584,
	-342, -451, -546, 583, -253, -342, -344, 326, 479, 126,
	326, 126, 547, 119, 2, 518, 79, -270, -277, -344,
	-344, -283, -292, -509, 160, 584, 588, 566, 2, 576,
	576, -292, -509, -287, -292, -509, -285, 358, 166, 160,
	584, -268, 5, 5, 153, -265, 76, -270, 5, -270,
	-286, 119, 438, 506, 506, -196, 588, 583, 566, 566,
	-196, -513, -124, 2, -335, -326, 230, -270, -530, -527,
	-528, 382, -534, -536, 168, 382, -128, 2, -207, -206,
	-253, 5, 583, -311, 345, 582, -581, 345, -580, 117,
	136, -509, -377, -128, -287, -335, 584, 588, 147, -399,
	534, -268, -283, 153, -238, 262, -616, -507, -235, -402,
	-400, 139, 583, 341, -128, -340, 566, 584, 584, 119,
	119, 222, 152, -342, 583, 583, -344, 119, 584, -200,
	-201, -512, -124, -512, -199, -467, -62, -63, 228, 93,
	365, -280, 490, 228, 583, 583, -226, -423, -423, -423,
	584, -340, -503, 576, -555, 360, 584, -450, -423, -423,
	-424, 186, 583, -434, 584, -556, 551, -423, -368, -369,
	-423, 427, 108, 205, -556, -556, 584, -499, 2, -512,
	2, 581, 2, 220, 38, 401, -414, -277, -281, -274,
	-253, 168, 213, 331, 547, -398, 254, 583, -424, -283,
	583, 2, 30, -609, 130, 233, 584, 588, -452, -264,
	-253, -423, -452, 584, 584, 331, 331, 547, -423, -473,
	583, -232, -232, 584, 584, -423, 506, -502, 100, -500,
	2, -583, -267, -423, 506, 5, -232, -281, -232, -232,
	-265, 518, -292, -509, -287, -197, -198, -512, -124, -196,
	38, -316, 232, 2, -532, 254, -274, 254, -607, 552,
	584, 588, 566, 566, -309, -208, -83, -84, 507, -466,
	588, 583, 566, -335, 38, 5, 583, 583, -253, 341,
	583, -268, -248, 92, -616, -507, -236, -373, 327, -344,
	93, -402, -430, -193, 583, 583, -314, 81, 94, 127,
	212, 189, 229, 471, 477, 28, -314, 584, -342, -342,
	584, 583, -193, 584, 588, 28, 583, 28, 583, -283,
	-304, -355, -355, 584, -340, 60, 588, 584, 584, -424,
	-434, 584, -557, -558, -273, 588, 583, 583, 452, 582,
	2, -240, 382, -253, -535, -274, 326, 534, -423, -255,
	583, -423, 38, 233, 131, 218, -413, -610, 101, 480,
	221, -451, -226, 584, -412, 534, 398, -265, -342, 583,
	583, 583, 566, 186, 583, -477, -232, -286, 584, -588,
	396, -128, -320, -321, 220, 583, -315, 341, 119, 313,
	-206, -500, -500, 584, 38, -84, 9, -580, -581, -423,
	38, -128, -471, -342, -283, -342, 341, -242, -241, 271,
	-507, -237, 584, -277, -373, -513, -513, -412, 584, 584,
	-513, -63, -344, -344, 584, 584, -562, 390, 429, 206,
	-355, -341, 584, 588, 38, -369, 2, 2, 2, 401,
	153, 208, 584, -537, 286, -253, 584, 131, 218, -316,
	583, -227, -452, -316, 208, -283, -584, 534, 584, -328,
	-327, -324, -330, -329, -324, -355, -500, 100, 358, -355,
	-265, -591, 187, -590, 5, 10, -208, 358, -343, -453,
	-270, 82, 119, -326, -128, 584, -128, 584, 584, -399,
	584, -283, -239, -514, 401, 403, -616, -238, -417, 584,
	584, -413, -412, -322, -318, 584, 584, 584, 584, -563,
	-564, 50, 521, 109, -423, -563, -563, -558, -560, 168,
	552, -538, -541, -540, 341, 458, 187, 359, 584, 479,
	546, -322, -344, 552, -335, -423, -412, 584, 588, 539,
	584, 588, 539, 584, 186, 584, -232, -195, 552, 46,
	-315, -283, 584, 588, 381, 132, 142, -316, -607, -412,
	583, -413, 583, -245, -244, -616, -493, -248, 139, -193,
	-193, -316, -413, -209, 552, -193, -565, 151, -564, 378,
	181, 428, 378, 181, -565, -565, -274, 55, -540, 341,
	-541, 341, 528, 132, -609, 584, 55, -537, -316, -327,
	220, -329, 186, 358, 436, -590, 30, -247, -246, 583,
	-453, 429, 429, 2, -320, -315, -413, -342, -316, -342,
	-243, -344, -242, 327, 528, -322, -316, -417, 109, 204,
	501, 313, 33, 566, -539, 313, 417, 64, 451, -539,
	-417, 566, -538, 583, 583, 345, -344, 2, -208, -316,
	584, -322, 584, -239, 451, -209, -322, 428, 349, -564,
	-423, 23, 331, 126, -423, -609, -355, -355, -192, 583,
	584, -315, -322, -412, -209, -413, -245, -363, -417, -209,
	584, 584, -192, -233, 64, 417, -247, -209, -413, -417,
	-316, -417, -417, -317, -318, 506, 584, -417, -316, -322,
	583, -322, -209, -355, -209, -417, 584, -417, -317,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 536, 537, 539, 540, 541, 543,
	544, 546, 548, 550, 551, 552, 554, 555, 557, 558,
	559, 560, 561, 563, 565, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	630, 632, 0, 1325, 1327, 1329, 1331, 0, 775, 0,
	36, 37, 39, 0, -2, 323, 325, 327, 0, 354,
	356, 357, 359, 361, 362, 363, 365, -2, 0, 471,
	472, 474, 476, -2, 0, 966, 968, 0, 619, 621,
	0, 971, 973, 0, 0, 641, 642, 0, 1432, -2,
	635, 637, 639, 704, 706, 708, 710, 712, 714, 716,
	718, 720, 721, 723, 725, 727, 729, 731, 732, 734,
	736, 738, 739, 741, 742, 744, 746, 748, 750, 752,
	754, 756, 758, 760, 762, 764, 766, 768, -2, 771,
	772, -2, -2, 0, -2, -2, -2, 1343, 41, 43,
	45, 47, 49, 51, 53, 55, 57, 415, 417, 419,
	421, 423, 426, 428, 430, 1490, 478, 480, 482, 484,
	486, 488, 490, 0, -2, 1504, 0, 0, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 101,
	102, 103, 104, 105, 106, 107, 108, 73, 74, 75,
	77, 78, 79, 80, 84, 85, 86, 87, 88, 89,
	90, 91, 99, 71, 0, 0, 1463, 1465, 1467, 1469,
	-2, 0, 0, 5, 9, 11, 13, 15, 17, 19,
	21, 23, 25, 27, 29, 538, 542, 545, 547, 549,
	553, 556, 562, 564, 566, 523, 524, 527, 2168, 2185,
	2186, 2187, 2190, 2191, 2192, 2193, 2194, 2195, 2636, 2718,
	2719, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225,
	2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245,
	2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255,
	2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265,
	2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305,
	2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315,
	2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325,
	2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335,
	2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345,
	2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355,
	2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365,
	2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375,
	2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385,
	2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395,
	2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405,
	2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415,
	2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425,
	2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435,
	2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445,
	2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455,
	2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465,
	2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475,
	2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485,
	2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495,
	2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505,
	2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515,
	2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525,
	2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535,
	2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545,
	2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555,
	2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565,
	2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575,
	2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585,
	2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595,
	2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605,
	2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615,
	525, 526, 1143, 0, 590, 588, 2153, 591, 2438, 593,
	595, 465, 466, 467, 468, 469, 470, 0, 612, 603,
	1502, 613, 615, 616, 617, 618, 585, 583, 0, 612,
	2221, 610, 1323, 1324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 394, 1192, 1193, 1194, 1308,
	1309, 2482, 1350, 0, 225, 631, -2, -2, -2, 2601,
	-2, 663, -2, 670, 2605, 2485, 675, 0, 677, -2,
	680, 1326, 1328, 1330, 773, 774, 2171, 0, 0, 0,
	0, 0, 38, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 235, -2, -2, -2, -2, 0, 0, 2529, 2273,
	2121, 2187, 2124, 2119, 324, 326, 328, 329, 0, 0,
	0, 0, 0, 0, 355, 358, 360, 364, -2, 366,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 1027, 1019, 1020, 1250, 0, 0, 0, -2,
	473, 475, 528, 529, 0, 1491, 1491, -2, 0, 0,
	0, 0, 294, 281, 967, 969, 970, 0, 0, 0,
	0, 620, 622, 0, 0, 263, 972, 974, 975, 0,
	0, 0, 0, 0, 296, 0, 0, 636, 638, 640,
	705, 707, 709, 711, 713, 715, 717, 719, 722, 724,
	726, 728, 730, 733, 735, 737, 740, 743, 745, 747,
	749, 751, 753, 755, 757, 759, 761, 763, 765, 767,
	769, 770, 781, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, -2, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 869, 0, 0, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, -2, 947, 0, 0, 784, 786,
	787, 788, 0, 847, 867, 868, 877, 0, 1183, 1492,
	1352, 1333, 1347, 1352, 1335, 1336, 1337, 1338, 1339, 1344,
	1346, 1340, 1341, 1342, 42, 44, 46, 48, 50, 52,
	54, 56, 58, 416, 418, 420, 422, 424, 427, 429,
	431, -2, 1461, 1462, 479, 481, 483, 485, 487, 489,
	491, 623, 0, 625, 0, 785, -2, 0, 1496, 1496,
	1496, 0, 0, 1462, 1460, 0, 628, 629, 684, 685,
	1764, 0, 0, 0, 0, 0, 0, 0, 2018, 1850,
	0, 686, -2, 1881, 1883, 2576, 2601, 2017, 1885, 1886,
	1887, 1888, 1889, 0, 1891, 1892, 1893, 1894, 1895, 1896,
	0, 1898, 0, 1903, 1904, 1905, 0, 2583, 2098, 2181,
	-2, 0, 0, 2589, 2177, 0, 1984, 1921, -2, -2,
	2204, 2183, 1696, 1697, 1698, 1699, 1700, -2, -2, 2619,
	1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 0, 2564, 2584, 2585, 2590, 2592, 2586, 2573, 1946,
	2286, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1723, 1732, -2, -2, -2, -2,
	-2, -2, -2, 2577, 2578, 2595, 2598, 2604, 2609, 2610,
	2582, 2591, 2618, 2620, 2621, 2622, 2623, 2624, 2625, 2626,
	2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 1724,
	-2, -2, -2, -2, 1479, 2451, 1482, 1143, 1480, 1464,
	1466, 0, 1468, 0, 0, 0, 1473, 1499, 1497, 0,
	1548, 1477, 1478, 1566, 1566, 1590, 0, 1571, 0, 1590,
	1491, 1617, 0, 1577, 2474, 1922, 1923, 0, 2187, 2182,
	-2, -2, 2616, 0, 0, 0, 0, 0, 0, 0,
	0, 586, 0, 592, 594, 0, 0, 0, 611, 1501,
	0, 0, 0, 0, 0, 0, 0, 397, 398, 399,
	400, 401, 2584, 0, 0, 0, 406, 0, 408, 409,
	410, 411, 412, 413, 414, 194, 2584, 496, 521, 0,
	194, 2584, 499, 194, 2584, 502, 0, 505, 1248, 194,
	2584, 508, 2149, 194, 2584, 511, 513, 2157, 194, 2584,
	517, 2164, 2162, 518, 2584, 520, 299, 297, 298, 2200,
	2201, 2208, 2209, 2210, 2211, 2617, 2619, 1319, 1320, 1321,
	1322, 0, 1349, 1249, 633, 634, 0, 658, 0, 662,
	2572, -2, 0, 2494, -2, 666, 1353, 1357, 1358, 1359,
	1360, 1361, 0, 0, 0, 0, 1366, 0, 0, 672,
	0, 0, 659, 660, 678, 681, 0, 776, 777, 778,
	779, 780, 70, 0, 2584, 1617, 72, 0, 2143, 2212,
	2213, 2214, 2215, 2216, 2637, 2638, 2639, 2640, 2641, 2642,
	2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652,
	2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662,
	2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672,
	2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682,
	2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692,
	2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702,
	2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712,
	2713, 2714, 2715, 2716, 2717, 76, 0, 2584, 81, 0,
	2584, 0, -2, 92, 0, 100, 0, 2146, 109, 0,
	2584, 0, 2118, -2, 0, 206, 282, 283, 284, 285,
	0, 994, -2, 2584, 1191, 0, 0, 0, 0, 957,
	2115, 2120, 958, 2139, 959, 2125, 0, 330, 331, 332,
	333, 334, 0, 335, 2584, 337, 338, 0, 340, 341,
	2584, 343, 344, 0, 346, 0, 246, 247, 2584, 368,
	370, 0, 372, 373, 0, 375, 0, 0, 0, 379,
	-2, 395, 0, 392, 382, 383, 385, 386, 387, 388,
	389, 0, 435, 433, 2154, 0, 0, -2, 2584, 0,
	991, 0, 0, 1228, -2, 2584, 1188, 0, 1235, 2584,
	1231, 0, -2, 0, 1489, 2584, 1370, 1023, 1024, 1025,
	1026, 1629, 462, 0, 1397, 0, 1399, 0, 1418, 1623,
	1566, 0, 0, 1628, 0, -2, 579, 2170, -2, 531,
	0, 532, 0, -2, 0, 311, 0, 0, 976, 977,
	978, 979, 980, 983, 984, 985, 986, 1603, 264, 266,
	0, 0, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 0, 0, 643, 0, 0, 782, 783, 0, 0,
	793, 794, 795, 0, 311, 2486, 2447, 2307, 802, 0,
	805, 808, -2, 0, 0, 0, 0, 812, 0, 817,
	818, 819, 0, 0, 823, 825, 965, 827, 0, 0,
	829, 0, 833, 0, 836, 0, 838, 0, 840, -2,
	-2, -2, 848, 849, -2, 853, -2, 0, 856, 858,
	0, 860, -2, 0, 869, 865, 866, 0, 0, 0,
	0, 885, 886, 0, 895, 0, 898, 899, 900, 0,
	902, 903, 0, 905, 906, 907, 908, 0, 0, 911,
	912, -2, -2, 916, 918, 0, -2, 0, 934, 0,
	938, 0, 0, 946, 0, 0, 789, 790, 194, 1621,
	1332, -2, 1334, 0, -2, 0, 624, 0, 627, 1521,
	1447, 1444, 0, 1518, 1519, 1448, 0, 0, 0, 1455,
	0, 1494, 1495, 0, 0, 0, 1434, 1435, 0, 0,
	0, 0, 2023, 2024, 2025, 2026, 2027, 2028, 2031, 2032,
	2029, 2030, 2033, 2034, 0, 0, 0, 0, 0, 2035,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2036, 2037, 2038, 0, 0, 2040, 0, 2042, 0,
	0, 0, 0, 0, 0, 1829, 1831, 2106, 0, 0,
	2039, 1769, 1770, 1771, 1772, 1773, 1808, 1809, 0, 0,
	1882, 2103, 2102, 1884, 0, 2054, 0, 1897, -2, 0,
	2018, 2049, 0, 0, 1906, 1907, 1908, 0, 0, 2054,
	0, 0, 2097, 1918, 1919, 1761, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1710, 1709, 0, 1711,
	0, 1712, 1713, 1720, 1733, 0, 0, 0, 0, 1737,
	0, 0, 0, 0, 0, 0, 0, 2078, -2, 0,
	0, 0, 0, 1725, 0, 1481, 0, 0, 1552, 2107,
	2111, 2112, 1552, 1552, 0, 0, 2055, 1614, 1614, 0,
	0, 1609, 1609, 1609, 1607, 1590, 0, 1590, 1600, 0,
	1590, 1590, 0, -2, 1571, 0, 0, 1600, 0, 1584,
	567, 569, 571, 573, 574, 575, 577, 1618, 1619, 0,
	0, 0, 0, 2188, 0, 0, 0, 0, 0, 2173,
	0, 351, 0, 0, 0, 2539, 2485, -2, 597, 614,
	1491, 0, 2057, 1644, 1648, 0, 1650, 1651, 1652, 1653,
	1654, 0, 0, 1645, -2, 1721, 1723, 1744, 2205, 2206,
	2207, 1704, 1705, 1706, 1707, 1708, 1716, 1703, 1703, 1703,
	1714, 1743, 1735, 1743, 1739, 1689, 1690, 1691, 1726, 1727,
	1728, 1729, 0, 2539, 2485, -2, 605, 0, 0, 1429,
	210, 212, 213, 214, 215, 216, 396, 0, 403, 404,
	405, 0, 492, 0, 192, 193, 0, 194, 2584, 497,
	0, 500, 0, 194, 2584, 2113, 506, 0, 509, 0,
	0, 515, 0, 0, 0, 0, 0, 194, 1431, 0,
	0, 0, 0, -2, 668, 673, 674, 0, 1355, 0,
	1362, 695, 696, 697, 1364, 1365, 0, 1367, 671, 698,
	699, 700, 701, 702, 703, 0, 2127, 2128, 2129, 2130,
	2133, 2134, 0, 0, 669, 688, 676, 0, 682, 110,
	1305, 0, 0, 153, 0, 1305, 1305, 0, 0, 0,
	0, 179, 0, 1062, 0, 0, 0, 0, 125, 138,
	149, 122, 123, 0, 0, 0, 0, 0, 0, 82,
	1165, 0, 1168, 0, 0, 0, 0, 0, 0, 0,
	1181, 0, 0, 0, 0, 0, 0, 0, 96, 97,
	0, 137, 0, 0, 1394, 0, 132, 112, 0, 0,
	125, 139, 151, 0, 183, 185, 1059, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 217, 0, 0, 0,
	1189, 0, 1488, 0, 0, 2584, 0, 1603, 2354, -2,
	-2, 264, 1603, 956, 0, 0, 2188, 2123, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 374, 376, 377,
	378, 0, 1227, 0, 384, 425, 1114, 2584, 0, 0,
	452, 447, 0, 449, 0, 0, 0, 1164, 2584, 1162,
	2158, 0, 1186, 0, 1143, 2584, 2156, 0, 0, 0,
	1236, 2197, 1245, 1249, 1384, 0, 464, 0, 1400, 1402,
	0, 0, 1624, 0, 1626, 1566, 1491, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 270, 0,
	1602, 0, 0, 1603, 264, 2462, 311, 311, 1603, 645,
	1603, 647, 0, 0, 796, 797, 0, 311, 311, 311,
	803, 804, 806, 807, -2, -2, -2, -2, 809, 810,
	892, 0, 0, 0, 891, 822, 826, 0, 950, 2470,
	2485, 2539, 963, 892, 2273, 892, 2273, 892, 2273, 837,
	839, 842, 880, 888, 852, 857, 0, 0, 862, 870,
	-2, 0, 872, 0, 874, 0, 876, 892, 893, 896,
	901, 904, 909, 910, 0, 925, 930, 931, 927, 0,
	0, 0, 0, 0, 0, 941, 942, 0, 0, 949,
	1182, 0, 1345, 1521, 1447, 626, 1438, 1520, 1439, 1446,
	1449, 0, 0, 1451, 0, 1453, 0, 1516, 1517, 1524,
	1525, 0, 1535, 1536, 1528, 0, -2, 0, 0, 1531,
	1532, 1457, 0, 1474, 1475, 1476, 1505, 1508, 1264, 0,
	2718, 1765, 1639, 1766, 1767, 2142, 0, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, -2, -2, -2,
	-2, -2, -2, -2, -2, 1792, 1793, 1794, 1795, 1796,
	1797, 1798, 1799, 1800, 1801, 1802, -2, -2, -2, 1806,
	1807, -2, 2041, 2043, 0, 2106, 0, -2, 0, -2,
	-2, -2, -2, 1826, 0, 1828, 1833, 1835, 1837, 0,
	0, 0, 0, 2105, 1847, 2089, 2090, 0, 0, 2020,
	2021, 2022, 1832, 0, 1851, 2104, 2101, 0, 0, 2053,
	1504, 1910, 0, 0, 0, 0, 1917, 1902, 2051, 0,
	2050, 0, 0, 0, 2061, 0, 2096, 2092, 0, 2140,
	1760, 1747, 1748, 1749, 1750, 1751, 1752, 1762, 0, 2137,
	2174, 2180, 1994, 0, 0, 0, 1947, 1948, 1949, 1950,
	1951, 0, 1953, 1954, 0, 1956, 1957, 0, 1959, 1960,
	0, 1962, 1963, 1964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 0, 0, 1966, 0, 2064, -2, -2,
	-2, -2, -2, -2, -2, -2, 0, 1968, 0, 1970,
	2055, 2075, 0, 0, 1852, 0, 0, 0, 2018, 0,
	1973, 2055, 2083, 0, 0, 0, 0, 0, 2055, 0,
	2088, 0, 1980, 0, 1982, 1483, 0, 0, 1634, 0,
	0, 0, 2110, 1634, 1634, 0, 1547, 0, 0, 1610,
	1611, 1612, 1613, 0, 0, 1614, 0, 1604, 1608, 1605,
	1606, 1600, 1563, 0, 0, 2144, 1600, 1569, 1599, 0,
	1143, 1589, 1600, 1600, 0, -2, 1573, 1590, 0, 0,
	568, 570, 572, 576, 578, 0, 0, 1504, -2, 0,
	-2, 313, 1142, 0, 0, 0, 0, 587, 589, 0,
	0, 512, 0, 602, 0, 581, 0, 584, 0, 1635,
	1638, 0, 0, 1649, 1655, 1656, 0, -2, 0, 0,
	1745, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	407, 522, 194, 494, 0, 194, 194, 503, 0, 0,
	194, 514, 194, 2165, 194, 2163, 300, 519, 1430, 228,
	0, 661, 0, 1354, 1363, 0, 692, 0, 694, 0,
	2131, 2135, 2132, 2136, 0, 683, 0, 0, 0, 0,
	1304, 0, 1271, 0, 0, 157, 2584, 0, 196, 0,
	0, 1107, 2150, 0, 1099, 0, 0, 2293, 0, 0,
	0, 0, 0, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 0, 0, 0, 124, 0, 0,
	0, 0, 0, 0, 0, 0, 1166, 1167, 1169, 1176,
	1178, 0, 1172, 2138, 0, 0, 1173, 0, 1175, 1177,
	1179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	98, 0, 0, 0, 1393, 1394, 0, 0, 0, 121,
	0, 0, 0, 0, 0, 0, 2117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1223, 1221, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
	1219, 1220, 0, 0, -2, 0, 0, 0, 0, 0,
	238, 0, 302, 2116, 2126, 0, 981, 982, 336, 339,
	342, 345, 234, 0, 380, 0, 0, 1029, 1004, 0,
	0, 434, 311, 0, 0, 448, 452, 2167, 989, 1160,
	1163, 0, 1143, 2584, 1200, 0, 0, 0, 0, 0,
	0, 1234, 0, 0, 2584, 2145, 2196, 2197, 1386, 1394,
	0, 1634, 0, 1416, 1403, 0, 0, 0, 1416, 1420,
	1421, 1423, 1424, 0, 0, 1625, 1631, 530, 580, 1491,
	1491, 311, 309, 2415, 307, 304, 306, 0, 0, 0,
	1030, 1032, 1033, 1034, 196, 0, 2197, 1099, 2343, 2197,
	0, 1406, 1408, 0, 258, 0, 267, 1603, 265, 270,
	0, 0, 0, 446, 644, 649, 791, 0, 311, 799,
	800, 801, 844, 882, 890, 929, 811, 813, 814, 815,
	0, 0, 964, 960, 961, 962, 828, 892, 831, 892,
	834, 892, 855, 859, 864, 871, 0, 0, 0, 884,
	0, 0, 0, 0, 0, 0, 0, 935, 936, 937,
	939, 944, 943, 948, 1622, 1442, 1443, 1445, 0, 1454,
	0, 0, 1530, -2, -2, 1529, 1533, 1534, -2, -2,
	-2, -2, 1450, 0, 1459, 1456, 0, 1515, 1262, 1263,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 1848,
	0, -2, 1827, 1830, 1834, 1836, 1838, 0, 0, 0,
	0, 0, 0, 2044, 0, 2046, 1849, 2099, 2102, 2016,
	0, 0, 1503, 1504, 1504, 0, 1916, 0, 2052, 0,
	2059, 2060, 0, 1909, 0, 2093, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1920, 0, 0, 0, 0,
	1952, 1955, 1958, 1961, 0, 0, 0, 0, 1941, 0,
	0, 0, 1945, 1715, 1701, 0, 1743, 1741, 1742, 1736,
	1743, 1740, 1693, 0, 1692, 0, 1965, 0, 1967, 1969,
	0, 0, 1971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 1856, 1857, 1972,
	2081, 2082, 0, 0, 0, 0, 0, 0, 1978, 0,
	2087, 1979, 1981, 1491, 0, 1484, 0, 1549, 1538, 1633,
	0, 2108, 1603, 1551, 1553, 2109, 2147, 1538, 1538, 0,
	2056, 0, 0, 1594, 0, 0, 0, 1596, 1567, 0,
	0, 1561, 0, 1557, 1558, 1559, 1560, 1568, 1143, 1598,
	1570, 1574, 2174, 0, 1600, 0, 1585, 0, 1587, 1620,
	0, 1579, 1582, 0, 0, 2189, 1634, 0, 347, 352,
	353, 348, 349, 350, 596, 0, 0, 0, 0, 2058,
	0, 1640, 0, 1646, 0, 0, 0, 0, 604, 0,
	0, 0, 211, 1428, 402, 493, 194, 498, 501, 2114,
	194, 507, 510, 516, 224, 0, 657, -2, 690, 691,
	693, 0, 689, 154, 1305, 0, 0, 1267, 1269, 2161,
	1273, 1279, 1282, 0, 159, 2584, 170, 0, 1078, 0,
	2148, 0, 0, 0, 0, 0, 0, 1307, 0, 0,
	2584, 194, 2584, 194, 173, 175, 178, 0, 182, 180,
	0, 1066, 0, 0, 1069, 111, 1305, 0, 0, 114,
	118, 126, 127, 130, 0, 0, 0, 136, 0, 0,
	0, 1284, 1288, 1296, 0, 0, 0, 1170, 1171, 1174,
	1180, 83, 0, 0, 0, 1292, 1294, 1300, 93, 94,
	2159, 95, 0, 1266, 0, 0, 0, 0, 184, 116,
	120, 128, 129, 131, 0, 1302, 113, 0, 209, 0,
	0, 199, 194, 2584, 0, 201, 0, 202, 203, 218,
	0, 0, 0, 992, 993, 1222, 1184, 1185, 0, 1190,
	0, 0, 0, 0, 1603, 230, 0, 1603, 238, 0,
	2122, 0, 367, 0, 0, 0, 0, 1028, 1125, 0,
	999, 0, 0, 0, 440, 436, 0, 445, 451, 450,
	456, -2, 0, 0, 0, 0, -2, 0, 0, 1238,
	1232, 1233, 0, 0, 0, 0, 2584, 1388, 1394, 0,
	1489, 1504, 463, 1395, 1416, 0, 0, 0, 1405, 1401,
	1398, 1634, 0, 0, 0, 0, 0, 1627, 1630, 533,
	534, 286, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 1035, 1039, 0, 2197, 2197, 0, 2152, 0, 0,
	0, 0, 268, 0, 271, 0, 0, 0, 276, 277,
	278, 279, 280, 270, 260, 1603, 0, 0, 646, 0,
	0, 798, 0, 821, 830, 832, 835, 873, 875, 892,
	919, 920, 1056, 0, 1056, 0, 0, 940, 1452, 0,
	1527, 1458, 1509, 1510, 0, 1264, 0, 1768, 1811, 0,
	0, -2, 0, 0, 1815, 0, 0, 0, -2, 0,
	0, 0, 2045, 2047, 0, 2101, 1911, 0, 0, 0,
	1915, 1899, 1900, 0, 2019, 2062, 2091, 2095, 0, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 0, 2141, 2175, 2179,
	1992, 1993, 1997, 2155, 0, 0, 0, 1924, 0, 0,
	0, 0, 0, 0, 0, 0, 1734, 1738, 0, 0,
	2063, 2074, 2076, 1853, 1854, 1858, 1859, 1860, 1861, 1862,
	1863, 1864, 1865, 1866, 1867, -2, -2, -2, 1871, 1872,
	1873, -2, -2, -2, 0, 0, 0, 2077, 2079, 2080,
	2084, 2085, 0, 1975, 1976, 1977, 2086, 0, 1491, 1485,
	1546, 0, 1632, 1550, 0, 1546, 1546, 1498, 1592, 0,
	0, 1616, 0, 1564, 0, 1565, 0, 1597, 0, 1572,
	1575, 1576, 1586, 0, 1578, 0, 1581, 0, 1911, -2,
	312, 314, 316, 0, 319, 320, 0, 0, 599, 600,
	598, 582, 0, 0, 1642, 0, 0, 1718, 1722, 1746,
	607, 608, 606, 495, 504, 226, 0, 1601, 0, 0,
	0, 0, 0, 0, 195, 1076, 1106, 0, 0, 0,
	1098, 0, 0, 1112, 161, 162, 0, 0, 0, 0,
	171, 0, 0, 168, 0, 177, 181, 1063, 0, 0,
	0, 0, 1272, 0, 0, 0, 133, 134, 135, 0,
	140, 0, 141, 0, 0, 0, 0, 0, 0, 0,
	0, 1378, 1379, 0, 1373, 0, 0, 0, 197, 0,
	0, 0, 1261, 220, 0, 0, 0, 0, 0, 1225,
	1226, 1285, 1289, 1297, 0, 0, 0, 238, 236, 0,
	239, 0, 242, 243, 0, 238, 232, 0, 0, 0,
	1143, 381, 1002, 1113, 0, 1115, 0, 1000, 0, 0,
	1114, 432, 0, 439, 0, 453, 0, 0, 1164, 0,
	0, 1187, 1198, 1143, 0, 1237, 1239, 0, 1247, 0,
	0, 0, 1390, 1394, 0, 1383, 1384, 1523, 1396, 1414,
	-2, 0, 0, 1504, 1422, 1419, 1425, 1426, 0, 308,
	0, 303, 305, 0, 289, 0, 0, 1031, 1036, 0,
	0, 0, 0, 0, 1407, 1409, 0, 0, 0, 0,
	0, 0, 259, 270, 1603, 295, 0, 792, 816, 883,
	921, 1055, 0, 0, 923, 0, 0, 1526, 1513, 1514,
	1511, 1264, 1813, 1817, 0, 0, 0, 1819, -2, 0,
	1841, -2, -2, 2048, 2100, 1890, 1504, 1912, 1914, 1901,
	2094, 1763, 0, 1999, 1996, 0, 1983, 0, 1936, 1937,
	0, 0, 1940, 1942, 1943, 1944, 1702, 1695, 1694, 2073,
	0, 0, 0, 0, 1974, 1486, 0, 1988, 0, 0,
	1554, 1988, 1988, 1593, 0, 1595, 1562, 1555, 0, 2175,
	1588, 1580, 0, 0, 317, 0, 321, 322, 0, 1636,
	1641, 0, 1647, 1717, 227, 155, 156, 1276, 1280, 1277,
	0, 158, 0, 1077, 0, 1080, 0, 0, 0, 0,
	1087, 1099, 0, 0, 0, 0, 0, 1100, 0, 1129,
	0, 1252, 1259, 0, -2, 0, 0, 0, 164, 187,
	0, 0, 188, 1306, 166, 0, 0, 194, 194, 0,
	0, 1268, 1270, 1283, 0, 0, 0, 0, 143, 0,
	0, 1286, 1290, 1298, 1293, 1295, 1301, 0, 1380, 0,
	0, 1303, 207, 208, 0, 194, 0, 194, 200, 194,
	1261, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	231, 301, 238, 369, 0, 1050, 0, 1125, 1117, 1118,
	1119, 0, 1124, 1126, 0, 0, 1016, 1001, 0, 1012,
	0, 0, 1029, 1004, 0, 437, 454, 0, 457, 0,
	460, 990, 1161, 1195, 1143, 0, 1229, 0, 0, 0,
	0, 0, 0, 0, 1392, 1394, 0, 1385, 1386, 1416,
	1522, 0, 0, 0, 1404, 1523, 0, 310, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 272,
	0, 273, 274, 275, 261, 262, 648, 650, 0, 0,
	656, 1054, 0, 0, 0, 0, 1512, 1821, -2, -2,
	1842, 0, 2176, 2178, 1504, 0, 1985, 1506, 0, 0,
	-2, 0, 0, 0, 1487, 1470, 0, 1545, 1537, 1539,
	1541, 2473, 2268, 2583, 1471, 1472, 1615, 0, 1583, 318,
	601, 0, 1643, 0, 0, 1278, 160, 0, 1081, 1082,
	2151, 1084, 0, 1086, 1088, 1089, 1090, 0, 1093, 2199,
	0, 1097, 0, 1108, 1130, 0, 1139, 0, 1254, 1264,
	1258, 0, 1256, 1141, 0, 163, 165, 189, 186, 1261,
	0, 167, 176, 0, 0, 115, 0, 0, 2262, 146,
	144, 142, 1265, 117, 0, 209, 219, 1260, 221, 204,
	194, 0, 1287, 1291, 1299, 240, 0, 241, 244, 0,
	0, 1065, 0, 1003, 1116, 0, 1127, 1128, 1006, 0,
	1005, 0, 0, 0, 0, 0, 438, 441, 0, 444,
	0, 0, 0, 0, 0, 1240, 1238, 0, 1246, 0,
	0, 0, 1372, 0, 0, 1387, 1388, 461, 1410, 0,
	0, 1416, 1427, 288, 0, 0, 1037, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1038, 1141, 0, 0,
	1105, 0, 293, 269, 0, 652, 0, 654, 0, 922,
	924, 0, 0, 1913, 2003, 0, 0, 1938, 1939, -2,
	0, 1879, 1987, 1989, 0, 0, 0, 0, 0, 1556,
	1637, 1274, 0, 1281, 1079, 1083, 0, 0, 0, 1147,
	0, 0, 1101, 0, 1133, 1134, 1050, 0, 1135, 1136,
	1137, 1253, 1515, 1259, 1050, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 198, 222, 1261, 237, 254,
	0, 1196, 1004, 1064, 0, 0, 1014, 0, 1017, 0,
	1013, 1010, 1011, 1002, 0, 442, 443, 458, 0, 459,
	0, 1199, 0, 0, 1247, 0, 0, 1375, 1371, 1394,
	1389, 1390, 1634, 1413, 1417, 0, 0, 1139, 1141, 1061,
	0, 651, 0, 0, 932, 933, 0, 0, 0, 0,
	1998, 1507, 1880, 0, 0, 1540, 1542, 1543, 1544, 1275,
	0, 0, 1092, 1152, 0, 0, 0, 1131, 1132, 1061,
	0, 1257, 1255, 1110, 0, 1143, 169, 0, 1141, 0,
	1070, 0, 0, 1073, 0, 0, 147, 2262, 145, 0,
	194, 257, 0, 251, 249, 250, 1006, 0, 0, 1121,
	1123, 0, 1018, 1050, 1016, 455, 1197, 1230, 1141, 0,
	1139, 0, 1382, 1394, 1376, 1377, 0, 1392, 0, 311,
	311, 1050, 1139, 1004, 1060, 311, 653, 655, 1995, 2015,
	2004, -2, 2542, 2269, 0, 2015, 2015, 1990, 1991, 0,
	0, 1094, 1148, 1149, 0, 1144, 1145, 1146, 2198, 1095,
	1096, 1129, 0, 0, 1147, 190, 1050, 1067, 0, 0,
	1068, 0, 0, 150, 0, 152, 223, 245, 0, 0,
	998, 0, 1120, 0, 0, 0, 0, 1065, 1006, 1139,
	0, 1050, 0, 1368, 1381, 0, 1391, 1372, 0, 290,
	291, 1061, 1050, 1634, 0, 292, 2000, 0, 0, 2006,
	2007, 2008, 2009, 2010, 2001, 2002, 1085, 0, 1150, 0,
	1151, 0, 0, 0, 1634, 1138, 0, 1152, 174, 1071,
	0, 1074, 0, 148, 0, 252, 253, 995, 997, 0,
	1122, 1007, 0, 1009, 1004, 1015, 1050, 0, 1061, 0,
	1374, 2160, 1375, 1411, 0, 1004, 1061, 1104, 0, 2012,
	2013, 0, 0, 0, 1153, 0, 1156, 1157, 0, 1154,
	1109, 0, 1129, 0, 0, 0, 0, 1008, 1006, 1061,
	1141, 1004, 1139, 1382, 0, 1634, 1004, 2011, 2014, 2005,
	1091, 1155, 1158, 1159, 1140, 1111, 0, 0, 255, 0,
	1053, 998, 1004, 1139, 1634, 1050, 1369, 1634, 1102, 1634,
	1058, 0, 0, 1049, 1051, 1052, 996, 1634, 1050, 1243,
	1061, 1412, 1103, 1072, 1057, 0, 256, 1241, 1061, 1004,
	0, 1004, 1634, 0, 1634, 1244, 1058, 1242, 1075,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 572, 3, 578, 573, 3,
	583, 584, 576, 574, 588, 575, 585, 577, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 591, 3,
	564, 566, 565, 569, 587, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 581, 3, 582, 579, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 589, 571, 590, 567,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 568, 57907, 570, 57908, 580, 57909, 586,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1304
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1309
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1311
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1323
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1324
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1331
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1342
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1345
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1346
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1347
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1348
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1349
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1350
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1351
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1352
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1353
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1412
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1438
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1452
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1470
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1474
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1478
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1504
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1508
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1514
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1523
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1532
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1541
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1548
		{

			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1573
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1605
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1609
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1613
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1619
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1623
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1629
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1638
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1649
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1653
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1659
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1667
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1677
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1681
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1690
		{
		}
	case 125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1691
		{
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1695
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1704
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1716
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1721
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1728
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1740
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1747
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1755
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1760
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1764
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1769
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1775
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1783
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1794
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1804
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1814
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1823
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 143:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1834
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 144:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1840
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1852
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1860
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1866
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1871
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1886
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1892
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1896
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1903
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1913
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1918
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1928
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1933
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1938
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1943
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1948
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1957
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1962
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1971
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1983
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2000
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2003
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2009
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2016
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2024
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2049
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2054
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2061
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2069
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2078
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2084
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2092
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2096
		{
			sqlVAL.union.val = nil
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2102
		{
			sqlVAL.union.val = true
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2106
		{
			sqlVAL.union.val = false
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2112
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2116
		{
			sqlVAL.union.val = nil
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2123
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2127
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2166
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2177
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2197
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2207
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2216
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2225
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2234
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2238
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2241
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2245
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2252
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2265
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2269
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2274
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2276
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2281
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2288
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2296
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2320
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2327
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 229:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2368
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2380
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2401
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2410
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2418
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2430
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2441
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2445
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2466
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2557
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2562
		{
			sqlVAL.union.val = nil
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2574
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2584
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2592
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2596
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 255:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2610
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = nil
		}
	case 258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2690
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2694
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2698
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2704
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2708
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2715
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2723
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2730
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2734
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2743
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2747
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2751
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2759
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2763
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2767
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2771
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2783
		{
			return unimplemented(sqllex, "alter function")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2787
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2791
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2795
		{
			return unimplemented(sqllex, "alter default privileges")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2833
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2838
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2842
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2848
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2853
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2858
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2863
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2868
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2872
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2891
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2899
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2907
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2921
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2927
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2931
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2955
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2959
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2963
		{
			sqlVAL.union.val = nil
		}
	case 312:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2975
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2989
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2995
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2999
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3009
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3021
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3025
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3029
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3033
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3041
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3042
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3043
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3044
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3054
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3062
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3071
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3098
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3107
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3117
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3134
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3143
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3147
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3151
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3155
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3168
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3171
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3175
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3180
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3192
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3194
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3195
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3198
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3199
		{
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3200
		{
			return helpWith(sqllex, "CREATE")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3207
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3213
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3214
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3217
		{
			return unimplemented(sqllex, "create access method")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3218
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3219
		{
			return unimplemented(sqllex, "create cast")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3220
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3221
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3222
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3223
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3224
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3225
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3226
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3227
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3228
		{
			return unimplemented(sqllex, "create operator")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3229
		{
			return unimplemented(sqllex, "create publication")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3230
		{
			return unimplemented(sqllex, "create rule")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3231
		{
			return unimplemented(sqllex, "create server")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3232
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3233
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3234
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3235
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3238
		{
		}
	case 391:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3239
		{
		}
	case 392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3242
		{
		}
	case 393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3243
		{
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3246
		{
		}
	case 395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3247
		{
		}
	case 396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3250
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3251
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3252
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3253
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3254
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3255
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3256
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3257
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3258
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3259
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3260
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3261
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3262
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3263
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3264
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3265
		{
			return unimplemented(sqllex, "drop server")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3266
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3267
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3268
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3271
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3272
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3273
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3274
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3275
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3277
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3278
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3279
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3280
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3290
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3298
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3312
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3316
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3325
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3332
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3338
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3344
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3348
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3359
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3371
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3386
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3394
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3425
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3429
		{

			sqlVAL.union.val = nil
		}
	case 453:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3457
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 455:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3461
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3465
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3472
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3476
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3485
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3489
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3502
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			return helpWith(sqllex, "DELETE")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3515
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3516
		{
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3527
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3529
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3530
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3531
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3540
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3542
		{
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3543
		{
			return helpWith(sqllex, "DROP")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3546
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3547
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3548
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3549
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3551
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3560
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3564
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3585
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3593
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3597
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3600
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3608
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3612
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3615
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3632
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3640
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3663
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3685
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3689
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3695
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3699
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3708
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3716
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3723
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3731
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3735
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3738
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3742
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3747
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3760
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3765
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3767
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3772
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3799
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3808
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3816
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3824
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3832
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3840
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3851
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3855
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3858
		{
			return helpWith(sqllex, "DELETE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3860
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3861
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3862
		{
			return helpWith(sqllex, "INSERT")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3865
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3867
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3875
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3876
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3877
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3882
		{
			return helpWith(sqllex, "DELETE")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3883
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3884
		{
			return helpWith(sqllex, "INSERT")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3886
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3890
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3891
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3895
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3899
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 581:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3917
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3925
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3929
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3933
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3943
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3950
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3958
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3962
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3966
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3976
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3991
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4017
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4021
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4025
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4039
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4043
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4046
		{
			return helpWith(sqllex, "GRANT")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4072
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4080
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4084
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4094
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4097
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4102
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4106
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4116
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4120
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			return helpWith(sqllex, "RESET")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4147
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			return helpWith(sqllex, "RESET")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4161
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4172
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4175
		{
			return helpWith(sqllex, "USE")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4179
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4180
		{
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4181
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4182
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4186
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4187
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4188
		{
			return helpWith(sqllex, "USE")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4204
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4240
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4256
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4266
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4276
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4280
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4284
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4299
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4302
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4312
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4328
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4332
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 664:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4337
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4356
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4359
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4361
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4364
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4368
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4387
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4394
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4399
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4404
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4409
		{
			return unimplemented(sqllex, "set from current")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4410
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4418
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4423
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4430
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4434
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4444
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4472
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4504
		{
			sqlVAL.union.val = tree.Low
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4508
		{
			sqlVAL.union.val = tree.Normal
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4512
		{
			sqlVAL.union.val = tree.High
		}
	case 698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4523
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4527
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4531
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4536
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4540
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4555
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4556
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4557
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4558
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4559
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4560
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4561
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4562
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4564
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4565
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4566
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4567
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4568
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4570
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4571
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4572
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4574
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4576
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4577
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4578
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4579
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4580
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4581
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4584
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4585
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4586
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4587
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4588
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4589
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "SHOW")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4597
		{
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4598
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4601
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4605
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4610
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4615
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4620
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4625
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4635
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4636
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4637
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4648
		{
			sqlVAL.str = "client_encoding"
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4651
		{
			sqlVAL.str = "timezone"
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4652
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4666
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4670
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4674
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4685
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4693
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4701
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4724
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4733
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4742
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4750
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4767
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4769
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4772
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4774
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4778
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4781
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4789
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4792
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4800
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4804
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4826
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4833
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4837
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4856
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4863
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4866
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4879
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4895
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4900
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4904
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4908
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4911
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4913
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4917
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4920
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4928
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4931
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4933
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4936
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4947
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4949
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4952
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4956
		{
			sqlVAL.union.val = true
		}
	case 846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = true
		}
	case 847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4960
		{
			sqlVAL.union.val = false
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4977
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4981
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4984
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4985
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4987
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4991
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4998
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5000
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5008
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5016
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5026
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5032
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5040
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5042
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5048
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5052
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5062
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5066
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5080
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5082
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5085
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5087
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5091
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5094
		{
			sqlVAL.union.val = true
		}
	case 878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5095
		{
			sqlVAL.union.val = false
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5103
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5106
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5108
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5111
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5129
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5139
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5142
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5149
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5152
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5154
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5157
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5160
		{
			sqlVAL.union.val = true
		}
	case 892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5161
		{
			sqlVAL.union.val = false
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5172
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5175
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5182
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5186
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5189
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5196
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5200
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5204
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5214
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5217
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5225
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5230
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5235
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5239
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5253
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5261
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5274
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5277
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5285
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5288
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5298
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5302
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5306
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5314
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5329
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5335
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5337
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5340
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5345
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5349
		{
		}
	case 932:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5358
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5372
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5381
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5386
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5390
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5393
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5402
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5452
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5456
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5462
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5469
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5476
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5609
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5652
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5661
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5669
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5686
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5693
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 965:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5697
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5710
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5711
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5712
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5722
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5723
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5724
		{
			return helpWith(sqllex, "RESUME")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5734
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5742
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5748
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5751
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5756
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5760
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5783
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5785
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5791
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5799
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5812
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5826
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5837
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5846
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5854
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5893
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5909
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5927
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5931
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5938
		{

			sqlVAL.union.val = nil
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5944
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.str = ""
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5954
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5960
		{
			sqlVAL.union.val = nil
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5969
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5973
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5977
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5981
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5987
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5991
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6001
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6007
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6021
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6036
		{
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6037
		{
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6038
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6058
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6077
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6081
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6093
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6106
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6119
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6130
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6132
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6133
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6135
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6136
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6137
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6138
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6143
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6152
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6159
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6164
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6182
		{
			sqlVAL.str = ""
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6195
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6203
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6231
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6237
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6257
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6263
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6267
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6293
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6307
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6318
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6322
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6370
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6374
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6382
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6403
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6407
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = true
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6436
		{
			sqlVAL.union.val = false
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6442
		{
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6443
		{
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6448
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6476
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6506
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6519
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6544
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6555
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6572
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6582
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6597
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6621
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6625
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6631
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6641
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6651
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6662
		{
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6663
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6664
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6665
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6666
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6667
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6685
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6689
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6695
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6739
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6760
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6768
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6774
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6792
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6804
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6823
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6832
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6840
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6847
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6851
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6856
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6866
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6868
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6870
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6872
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6875
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6878
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6880
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6882
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6890
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6893
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6918
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6926
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6930
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6933
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6939
		{
			sqlVAL.union.val = true
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6943
		{

			sqlVAL.union.val = true
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6948
		{
			sqlVAL.union.val = false
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6958
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6972
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6984
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6996
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7006
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7016
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7028
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7032
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7052
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7080
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7084
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7097
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7111
		{
			sqlVAL.union.val = nil
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7126
		{
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7127
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7136
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7152
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7154
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7156
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7158
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7160
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7162
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7166
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7170
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7180
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7200
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7218
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7237
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7254
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7271
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7275
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7290
		{
			sqlVAL.union.val = false
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7296
		{
			sqlVAL.union.val = true
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = false
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.union.val = true
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7310
		{
			sqlVAL.union.val = false
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7320
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7329
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7335
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7341
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7349
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.str = ""
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.str = ""
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7408
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7414
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7473
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7486
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7492
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7611
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7639
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7645
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7657
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7663
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7677
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7683
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7695
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7700
		{
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7701
		{
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7704
		{
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7705
		{
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7713
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7716
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7726
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7734
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7743
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7764
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7772
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7793
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7801
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7812
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7816
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7817
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7818
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7837
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7839
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7842
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7855
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7860
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7869
		{
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7870
		{
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7871
		{
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7881
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7885
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7888
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7891
		{
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7892
		{
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7900
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7906
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7920
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7933
		{
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7935
		{
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7939
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8026
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.str = ""
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8052
		{

		}
	case 1378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8067
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8076
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.str = ""
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.str = ""
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8102
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.str = ""
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.str = ""
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8122
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8135
		{
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8136
		{
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8165
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8183
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8187
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8196
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8211
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8245
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8264
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8272
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8276
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8314
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8346
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8367
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8382
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8433
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8482
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8512
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8526
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8561
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8562
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8563
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8612
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8624
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8661
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8668
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8684
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8705
		{
			sqlVAL.union.val = true
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = false
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8715
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8737
		{
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8738
		{
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = nil
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8751
		{
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8752
		{
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.union.val = true
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = false
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = false
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = true
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8781
		{
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8782
		{
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8785
		{
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8786
		{
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8790
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8800
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8817
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8827
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8848
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8853
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8869
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8873
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8882
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8902
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8915
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8933
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8970
		{
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8971
		{
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8974
		{
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8975
		{
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9009
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9010
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9011
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9041
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9043
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9058
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9060
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9080
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9085
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9090
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9101
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9113
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9132
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9171
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9181
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9216
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9227
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9257
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9290
		{
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9292
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = nil
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.union.val = true
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = false
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.str = tree.AstFull
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.str = tree.AstRight
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.str = tree.AstInner
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9409
		{
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9410
		{
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqlVAL.str = tree.AstHash
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9438
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.str = ""
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9479
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9484
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9502
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9508
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9514
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9524
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = true
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.union.val = false
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = true
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = false
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9573
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9586
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9594
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9595
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9605
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9613
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9615
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9623
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9636
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9643
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9652
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9692
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9704
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9705
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9738
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = types.Geography
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9754
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9762
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9788
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9796
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.union.val = nil
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9815
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = types.Int2
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = types.Int
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = types.Float4
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = types.Float
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9839
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9847
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9855
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9863
		{
			sqlVAL.union.val = types.Bool
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9869
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9882
		{
			sqlVAL.union.val = types.Float
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9888
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9894
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9916
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = types.String
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = true
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = false
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = types.Date
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9965
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9973
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9987
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9996
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10004
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10021
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = true
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = false
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10033
		{
			sqlVAL.union.val = false
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = types.Interval
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10045
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10129
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10144
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = nil
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10174
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10234
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10486
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10552
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10574
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10756
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10768
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10773
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10799
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10808
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10823
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10853
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10864
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10865
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10877
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10880
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10889
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10942
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10955
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10982
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11004
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11077
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11080
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11082
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11085
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11094
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11103
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11112
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11118
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11121
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11126
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11131
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11136
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11141
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11150
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11151
		{
			return unimplemented(sqllex, "treat")
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11172
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11174
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11177
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11224
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11236
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11240
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.str = ""
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11283
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11313
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11326
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11373
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11394
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11399
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11412
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11423
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11435
		{
			sqlVAL.union.val = tree.Any
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.union.val = tree.Some
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11443
		{
			sqlVAL.union.val = tree.All
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11450
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11451
		{
			sqlVAL.union.val = tree.Div
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11455
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11457
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = tree.LT
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11459
		{
			sqlVAL.union.val = tree.GT
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11461
		{
			sqlVAL.union.val = tree.LE
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = tree.GE
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11463
		{
			sqlVAL.union.val = tree.NE
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqlVAL.union.val = tree.Like
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11469
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11470
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11493
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11497
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11507
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11526
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11536
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11563
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11569
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11573
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11579
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11583
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11589
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11616
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11620
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11630
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11637
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11658
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11662
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11666
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11670
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11680
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11692
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11706
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11718
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11725
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11745
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11758
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11784
		{
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11785
		{
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11789
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11793
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11799
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11812
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11824
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11828
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11857
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11865
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11888
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11897
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11901
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11905
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11909
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11938
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11954
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11963
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11974
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11983
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11991
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12003
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12092
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12106
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12114
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12139
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12172
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12198
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12216
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12229
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12236
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12261
		{
			sqlVAL.str = ""
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12271
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
