// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:66

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}

//line sql-gen.y:624
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BLOB = lex.BLOB
const BOOL = lex.BOOL
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const BYTEA = lex.BYTEA
const BYTES = lex.BYTES
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEALLOCATE = lex.DEALLOCATE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INT2VECTOR = lex.INT2VECTOR
const INT2 = lex.INT2
const INT4 = lex.INT4
const INT8 = lex.INT8
const INT64 = lex.INT64
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIAL = lex.SERIAL
const SERIAL2 = lex.SERIAL2
const SERIAL4 = lex.SERIAL4
const SERIAL8 = lex.SERIAL8
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BLOB",
	"BOOL",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"BYTEA",
	"BYTES",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEALLOCATE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXISTS",
	"EXECUTE",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INT2VECTOR",
	"INT2",
	"INT4",
	"INT8",
	"INT64",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIAL",
	"SERIAL2",
	"SERIAL4",
	"SERIAL8",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:10241

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 24,
	-2, 1101,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 67,
	185, 928,
	202, 928,
	217, 247,
	304, 247,
	313, 747,
	340, 247,
	349, 747,
	388, 747,
	412, 247,
	437, 747,
	-2, 0,
	-1, 72,
	217, 251,
	-2, 0,
	-1, 73,
	112, 1101,
	191, 1101,
	422, 1101,
	423, 1101,
	-2, 0,
	-1, 85,
	125, 1075,
	141, 1075,
	154, 1075,
	199, 1075,
	229, 1075,
	267, 1075,
	277, 1075,
	417, 1075,
	-2, 1046,
	-1, 117,
	131, 656,
	216, 656,
	307, 636,
	358, 636,
	405, 656,
	-2, 0,
	-1, 118,
	4, 1103,
	21, 1103,
	22, 1103,
	23, 1103,
	24, 1103,
	25, 1103,
	27, 1103,
	33, 1103,
	38, 1103,
	39, 1103,
	40, 1103,
	41, 1103,
	42, 1103,
	43, 1103,
	44, 1103,
	45, 1103,
	46, 1103,
	47, 1103,
	48, 1103,
	49, 1103,
	50, 1103,
	52, 1103,
	53, 1103,
	54, 1103,
	55, 1103,
	56, 1103,
	57, 1103,
	58, 1103,
	61, 1103,
	62, 1103,
	63, 1103,
	64, 1103,
	66, 1103,
	67, 1103,
	71, 1103,
	72, 1103,
	73, 1103,
	74, 1103,
	75, 1103,
	76, 1103,
	78, 1103,
	79, 1103,
	80, 1103,
	81, 1103,
	83, 1103,
	85, 1103,
	86, 1103,
	87, 1103,
	89, 1103,
	91, 1103,
	92, 1103,
	100, 1103,
	101, 1103,
	102, 1103,
	103, 1103,
	104, 1103,
	105, 1103,
	106, 1103,
	107, 1103,
	109, 1103,
	111, 1103,
	112, 1103,
	114, 1103,
	117, 1103,
	118, 1103,
	119, 1103,
	121, 1103,
	123, 1103,
	124, 1103,
	126, 1103,
	127, 1103,
	128, 1103,
	129, 1103,
	130, 1103,
	131, 1103,
	132, 1103,
	133, 1103,
	134, 1103,
	135, 1103,
	136, 1103,
	137, 1103,
	138, 1103,
	140, 1103,
	146, 1103,
	147, 1103,
	148, 1103,
	149, 1103,
	150, 1103,
	151, 1103,
	153, 1103,
	155, 1103,
	159, 1103,
	160, 1103,
	162, 1103,
	163, 1103,
	165, 1103,
	166, 1103,
	168, 1103,
	169, 1103,
	170, 1103,
	171, 1103,
	172, 1103,
	173, 1103,
	174, 1103,
	175, 1103,
	177, 1103,
	178, 1103,
	180, 1103,
	181, 1103,
	182, 1103,
	185, 1103,
	186, 1103,
	187, 1103,
	188, 1103,
	191, 1103,
	192, 1103,
	193, 1103,
	194, 1103,
	195, 1103,
	196, 1103,
	197, 1103,
	198, 1103,
	200, 1103,
	202, 1103,
	204, 1103,
	206, 1103,
	207, 1103,
	208, 1103,
	210, 1103,
	211, 1103,
	214, 1103,
	215, 1103,
	216, 1103,
	217, 1103,
	218, 1103,
	220, 1103,
	221, 1103,
	223, 1103,
	224, 1103,
	226, 1103,
	227, 1103,
	230, 1103,
	231, 1103,
	234, 1103,
	235, 1103,
	236, 1103,
	237, 1103,
	239, 1103,
	240, 1103,
	241, 1103,
	242, 1103,
	243, 1103,
	244, 1103,
	245, 1103,
	246, 1103,
	247, 1103,
	248, 1103,
	250, 1103,
	251, 1103,
	252, 1103,
	253, 1103,
	254, 1103,
	256, 1103,
	258, 1103,
	260, 1103,
	262, 1103,
	263, 1103,
	264, 1103,
	265, 1103,
	266, 1103,
	268, 1103,
	269, 1103,
	270, 1103,
	272, 1103,
	273, 1103,
	274, 1103,
	275, 1103,
	278, 1103,
	279, 1103,
	280, 1103,
	282, 1103,
	284, 1103,
	285, 1103,
	286, 1103,
	287, 1103,
	288, 1103,
	289, 1103,
	290, 1103,
	291, 1103,
	292, 1103,
	293, 1103,
	295, 1103,
	296, 1103,
	297, 1103,
	298, 1103,
	299, 1103,
	300, 1103,
	301, 1103,
	303, 1103,
	305, 1103,
	306, 1103,
	307, 1103,
	308, 1103,
	309, 1103,
	310, 1103,
	311, 1103,
	312, 1103,
	313, 1103,
	314, 1103,
	316, 1103,
	317, 1103,
	318, 1103,
	319, 1103,
	320, 1103,
	322, 1103,
	323, 1103,
	324, 1103,
	325, 1103,
	326, 1103,
	327, 1103,
	328, 1103,
	329, 1103,
	331, 1103,
	333, 1103,
	334, 1103,
	335, 1103,
	336, 1103,
	337, 1103,
	338, 1103,
	340, 1103,
	341, 1103,
	342, 1103,
	343, 1103,
	344, 1103,
	345, 1103,
	346, 1103,
	347, 1103,
	349, 1103,
	350, 1103,
	351, 1103,
	352, 1103,
	353, 1103,
	354, 1103,
	355, 1103,
	356, 1103,
	357, 1103,
	358, 1103,
	360, 1103,
	361, 1103,
	362, 1103,
	363, 1103,
	364, 1103,
	366, 1103,
	367, 1103,
	368, 1103,
	369, 1103,
	370, 1103,
	372, 1103,
	373, 1103,
	374, 1103,
	375, 1103,
	376, 1103,
	377, 1103,
	378, 1103,
	379, 1103,
	380, 1103,
	381, 1103,
	382, 1103,
	383, 1103,
	385, 1103,
	386, 1103,
	387, 1103,
	389, 1103,
	390, 1103,
	391, 1103,
	392, 1103,
	393, 1103,
	394, 1103,
	395, 1103,
	397, 1103,
	398, 1103,
	399, 1103,
	400, 1103,
	401, 1103,
	403, 1103,
	405, 1103,
	406, 1103,
	407, 1103,
	408, 1103,
	409, 1103,
	411, 1103,
	412, 1103,
	413, 1103,
	415, 1103,
	416, 1103,
	419, 1103,
	420, 1103,
	421, 1103,
	422, 1103,
	423, 1103,
	424, 1103,
	425, 1103,
	427, 1103,
	429, 1103,
	430, 1103,
	431, 1103,
	432, 1103,
	433, 1103,
	434, 1103,
	435, 1103,
	437, 1103,
	438, 1103,
	439, 1103,
	444, 1103,
	445, 1103,
	446, 1103,
	447, 1103,
	448, 1103,
	449, 1103,
	-2, 0,
	-1, 119,
	1, 980,
	206, 980,
	303, 980,
	311, 980,
	452, 980,
	475, 980,
	-2, 0,
	-1, 121,
	1, 980,
	475, 980,
	-2, 0,
	-1, 122,
	1, 980,
	475, 980,
	-2, 0,
	-1, 123,
	1, 980,
	402, 980,
	475, 980,
	-2, 0,
	-1, 148,
	125, 1074,
	141, 1074,
	154, 1074,
	199, 1074,
	229, 1074,
	267, 1074,
	277, 1074,
	417, 1074,
	-2, 1049,
	-1, 181,
	4, 1110,
	5, 1110,
	6, 1110,
	7, 1110,
	8, 1110,
	9, 1110,
	10, 1110,
	21, 1110,
	22, 1110,
	23, 1110,
	24, 1110,
	25, 1110,
	27, 1110,
	33, 1110,
	34, 1110,
	38, 1110,
	39, 1110,
	40, 1110,
	41, 1110,
	42, 1110,
	43, 1110,
	44, 1110,
	45, 1110,
	46, 1110,
	47, 1110,
	48, 1110,
	49, 1110,
	50, 1110,
	52, 1110,
	53, 1110,
	54, 1110,
	55, 1110,
	56, 1110,
	57, 1110,
	58, 1110,
	59, 1110,
	60, 1110,
	61, 1110,
	62, 1110,
	63, 1110,
	64, 1110,
	66, 1110,
	67, 1110,
	69, 1110,
	71, 1110,
	72, 1110,
	73, 1110,
	74, 1110,
	75, 1110,
	76, 1110,
	78, 1110,
	79, 1110,
	80, 1110,
	81, 1110,
	83, 1110,
	85, 1110,
	86, 1110,
	87, 1110,
	89, 1110,
	90, 1110,
	91, 1110,
	92, 1110,
	93, 1110,
	94, 1110,
	95, 1110,
	96, 1110,
	97, 1110,
	98, 1110,
	99, 1110,
	100, 1110,
	101, 1110,
	102, 1110,
	103, 1110,
	104, 1110,
	105, 1110,
	106, 1110,
	107, 1110,
	108, 1110,
	109, 1110,
	111, 1110,
	112, 1110,
	114, 1110,
	117, 1110,
	118, 1110,
	119, 1110,
	121, 1110,
	123, 1110,
	124, 1110,
	126, 1110,
	127, 1110,
	128, 1110,
	129, 1110,
	130, 1110,
	131, 1110,
	132, 1110,
	133, 1110,
	134, 1110,
	135, 1110,
	136, 1110,
	137, 1110,
	138, 1110,
	139, 1110,
	140, 1110,
	146, 1110,
	147, 1110,
	148, 1110,
	149, 1110,
	150, 1110,
	151, 1110,
	153, 1110,
	155, 1110,
	158, 1110,
	159, 1110,
	160, 1110,
	162, 1110,
	163, 1110,
	165, 1110,
	166, 1110,
	168, 1110,
	169, 1110,
	170, 1110,
	171, 1110,
	172, 1110,
	173, 1110,
	174, 1110,
	175, 1110,
	176, 1110,
	177, 1110,
	178, 1110,
	180, 1110,
	181, 1110,
	182, 1110,
	185, 1110,
	186, 1110,
	187, 1110,
	188, 1110,
	190, 1110,
	191, 1110,
	192, 1110,
	193, 1110,
	194, 1110,
	195, 1110,
	196, 1110,
	197, 1110,
	198, 1110,
	200, 1110,
	202, 1110,
	203, 1110,
	204, 1110,
	205, 1110,
	206, 1110,
	207, 1110,
	208, 1110,
	209, 1110,
	210, 1110,
	211, 1110,
	214, 1110,
	215, 1110,
	216, 1110,
	217, 1110,
	218, 1110,
	220, 1110,
	221, 1110,
	223, 1110,
	224, 1110,
	225, 1110,
	226, 1110,
	227, 1110,
	228, 1110,
	230, 1110,
	231, 1110,
	232, 1110,
	233, 1110,
	234, 1110,
	235, 1110,
	236, 1110,
	237, 1110,
	239, 1110,
	240, 1110,
	241, 1110,
	242, 1110,
	243, 1110,
	244, 1110,
	245, 1110,
	246, 1110,
	247, 1110,
	248, 1110,
	249, 1110,
	250, 1110,
	251, 1110,
	252, 1110,
	253, 1110,
	254, 1110,
	255, 1110,
	256, 1110,
	257, 1110,
	258, 1110,
	259, 1110,
	260, 1110,
	261, 1110,
	262, 1110,
	263, 1110,
	264, 1110,
	265, 1110,
	266, 1110,
	268, 1110,
	269, 1110,
	270, 1110,
	273, 1110,
	274, 1110,
	275, 1110,
	278, 1110,
	279, 1110,
	280, 1110,
	281, 1110,
	282, 1110,
	283, 1110,
	284, 1110,
	285, 1110,
	286, 1110,
	287, 1110,
	288, 1110,
	289, 1110,
	290, 1110,
	291, 1110,
	292, 1110,
	293, 1110,
	295, 1110,
	296, 1110,
	297, 1110,
	298, 1110,
	299, 1110,
	300, 1110,
	301, 1110,
	303, 1110,
	305, 1110,
	306, 1110,
	307, 1110,
	308, 1110,
	309, 1110,
	310, 1110,
	311, 1110,
	312, 1110,
	313, 1110,
	314, 1110,
	316, 1110,
	317, 1110,
	318, 1110,
	319, 1110,
	320, 1110,
	322, 1110,
	323, 1110,
	324, 1110,
	325, 1110,
	326, 1110,
	327, 1110,
	328, 1110,
	329, 1110,
	331, 1110,
	332, 1110,
	333, 1110,
	334, 1110,
	335, 1110,
	336, 1110,
	337, 1110,
	338, 1110,
	340, 1110,
	341, 1110,
	342, 1110,
	343, 1110,
	344, 1110,
	345, 1110,
	346, 1110,
	347, 1110,
	349, 1110,
	350, 1110,
	351, 1110,
	352, 1110,
	353, 1110,
	354, 1110,
	355, 1110,
	356, 1110,
	357, 1110,
	358, 1110,
	359, 1110,
	360, 1110,
	361, 1110,
	362, 1110,
	363, 1110,
	364, 1110,
	365, 1110,
	366, 1110,
	367, 1110,
	368, 1110,
	369, 1110,
	370, 1110,
	372, 1110,
	373, 1110,
	374, 1110,
	375, 1110,
	376, 1110,
	377, 1110,
	378, 1110,
	379, 1110,
	380, 1110,
	381, 1110,
	382, 1110,
	383, 1110,
	385, 1110,
	386, 1110,
	387, 1110,
	389, 1110,
	390, 1110,
	391, 1110,
	392, 1110,
	393, 1110,
	394, 1110,
	395, 1110,
	397, 1110,
	398, 1110,
	399, 1110,
	400, 1110,
	401, 1110,
	403, 1110,
	405, 1110,
	406, 1110,
	407, 1110,
	408, 1110,
	409, 1110,
	410, 1110,
	411, 1110,
	412, 1110,
	413, 1110,
	415, 1110,
	416, 1110,
	418, 1110,
	419, 1110,
	420, 1110,
	421, 1110,
	422, 1110,
	423, 1110,
	424, 1110,
	425, 1110,
	426, 1110,
	427, 1110,
	429, 1110,
	430, 1110,
	431, 1110,
	432, 1110,
	433, 1110,
	434, 1110,
	435, 1110,
	437, 1110,
	438, 1110,
	439, 1110,
	444, 1110,
	445, 1110,
	446, 1110,
	447, 1110,
	448, 1110,
	449, 1110,
	450, 1110,
	456, 1110,
	463, 1110,
	464, 1110,
	465, 1110,
	472, 1110,
	476, 1110,
	-2, 0,
	-1, 568,
	157, 1813,
	402, 1813,
	455, 1813,
	474, 1813,
	-2, 0,
	-1, 569,
	157, 1893,
	402, 1893,
	455, 1893,
	474, 1893,
	-2, 0,
	-1, 570,
	157, 1802,
	402, 1802,
	455, 1802,
	474, 1802,
	-2, 0,
	-1, 572,
	157, 1990,
	402, 1990,
	455, 1990,
	474, 1990,
	-2, 0,
	-1, 574,
	157, 2020,
	402, 2020,
	455, 2020,
	474, 2020,
	-2, 0,
	-1, 581,
	157, 1905,
	402, 1905,
	455, 1905,
	474, 1905,
	-2, 501,
	-1, 602,
	474, 1758,
	477, 1758,
	-2, 709,
	-1, 603,
	474, 1760,
	477, 1760,
	-2, 710,
	-1, 604,
	474, 1759,
	477, 1759,
	-2, 711,
	-1, 605,
	477, 1696,
	-2, 712,
	-1, 647,
	437, 910,
	-2, 748,
	-1, 750,
	307, 637,
	358, 637,
	-2, 0,
	-1, 751,
	307, 636,
	358, 636,
	-2, 584,
	-1, 755,
	1, 666,
	471, 666,
	473, 666,
	475, 666,
	-2, 0,
	-1, 756,
	1, 708,
	154, 708,
	471, 708,
	473, 708,
	475, 708,
	-2, 0,
	-1, 764,
	1, 640,
	471, 640,
	473, 640,
	475, 640,
	-2, 0,
	-1, 767,
	1, 666,
	471, 666,
	473, 666,
	475, 666,
	-2, 0,
	-1, 768,
	1, 668,
	471, 668,
	473, 668,
	475, 668,
	-2, 0,
	-1, 769,
	1, 671,
	471, 671,
	473, 671,
	475, 671,
	-2, 0,
	-1, 774,
	1, 687,
	471, 687,
	473, 687,
	475, 687,
	-2, 0,
	-1, 775,
	1, 689,
	471, 689,
	473, 689,
	475, 689,
	-2, 0,
	-1, 818,
	141, 1112,
	154, 1112,
	229, 1112,
	267, 1112,
	-2, 1053,
	-1, 831,
	141, 1111,
	154, 1111,
	229, 1111,
	267, 1111,
	-2, 1050,
	-1, 855,
	474, 1757,
	-2, 509,
	-1, 883,
	472, 1749,
	-2, 1740,
	-1, 889,
	5, 1252,
	-2, 1791,
	-1, 890,
	5, 1253,
	-2, 1797,
	-1, 891,
	5, 1254,
	-2, 1796,
	-1, 892,
	5, 1255,
	-2, 2017,
	-1, 893,
	5, 1256,
	-2, 1907,
	-1, 894,
	5, 1257,
	-2, 1982,
	-1, 895,
	5, 1258,
	-2, 1984,
	-1, 896,
	5, 1259,
	-2, 1997,
	-1, 897,
	5, 1260,
	-2, 1985,
	-1, 898,
	5, 1261,
	-2, 1986,
	-1, 899,
	5, 1262,
	-2, 1790,
	-1, 900,
	5, 1263,
	-2, 2034,
	-1, 901,
	5, 1264,
	-2, 1867,
	-1, 902,
	5, 1265,
	-2, 1919,
	-1, 903,
	5, 1266,
	-2, 1921,
	-1, 904,
	5, 1267,
	-2, 1871,
	-1, 905,
	5, 1268,
	472, 1767,
	-2, 1758,
	-1, 911,
	472, 1768,
	-2, 1759,
	-1, 913,
	5, 1272,
	-2, 2067,
	-1, 914,
	5, 1273,
	-2, 2068,
	-1, 915,
	5, 1274,
	-2, 1870,
	-1, 916,
	5, 1275,
	-2, 2080,
	-1, 917,
	5, 1276,
	-2, 1872,
	-1, 918,
	5, 1277,
	-2, 1873,
	-1, 919,
	5, 1278,
	-2, 1874,
	-1, 920,
	5, 1279,
	-2, 2049,
	-1, 921,
	5, 1280,
	-2, 2078,
	-1, 922,
	5, 1281,
	-2, 1850,
	-1, 923,
	5, 1282,
	-2, 1851,
	-1, 924,
	5, 1296,
	-2, 2061,
	-1, 926,
	5, 1271,
	-2, 2057,
	-1, 927,
	5, 1271,
	-2, 2056,
	-1, 928,
	5, 1271,
	-2, 2073,
	-1, 929,
	5, 1288,
	-2, 2051,
	-1, 930,
	5, 1289,
	-2, 1792,
	-1, 931,
	5, 1299,
	-2, 2050,
	-1, 932,
	5, 1301,
	-2, 2089,
	-1, 934,
	5, 1312,
	-2, 1824,
	-1, 935,
	5, 1323,
	-2, 2082,
	-1, 936,
	5, 1315,
	-2, 2083,
	-1, 937,
	5, 1323,
	-2, 2084,
	-1, 938,
	5, 1319,
	-2, 2085,
	-1, 939,
	5, 1240,
	-2, 1880,
	-1, 940,
	5, 1241,
	-2, 1881,
	-1, 941,
	474, 1755,
	-2, 1739,
	-1, 942,
	472, 2110,
	-2, 1756,
	-1, 964,
	5, 1307,
	-2, 2008,
	-1, 982,
	5, 1306,
	-2, 2090,
	-1, 992,
	5, 1308,
	438, 1308,
	-2, 2052,
	-1, 993,
	5, 1309,
	438, 1309,
	-2, 2053,
	-1, 1030,
	472, 1767,
	-2, 1758,
	-1, 1058,
	157, 2020,
	402, 2020,
	455, 2020,
	474, 2020,
	-2, 0,
	-1, 1061,
	1, 487,
	475, 487,
	-2, 988,
	-1, 1181,
	322, 1736,
	465, 1736,
	-2, 1734,
	-1, 1193,
	476, 1736,
	-2, 1737,
	-1, 1194,
	1, 907,
	471, 907,
	473, 907,
	475, 907,
	-2, 1099,
	-1, 1242,
	313, 747,
	437, 747,
	-2, 246,
	-1, 1265,
	1, 907,
	471, 907,
	473, 907,
	475, 907,
	-2, 1099,
	-1, 1271,
	271, 1762,
	-2, 0,
	-1, 1334,
	1, 362,
	471, 362,
	473, 362,
	475, 362,
	-2, 1073,
	-1, 1337,
	4, 2088,
	11, 2088,
	12, 2088,
	14, 2088,
	15, 2088,
	16, 2088,
	17, 2088,
	18, 2088,
	19, 2088,
	21, 2088,
	22, 2088,
	23, 2088,
	24, 2088,
	25, 2088,
	27, 2088,
	30, 2088,
	31, 2088,
	33, 2088,
	35, 2088,
	38, 2088,
	39, 2088,
	40, 2088,
	41, 2088,
	42, 2088,
	43, 2088,
	44, 2088,
	45, 2088,
	46, 2088,
	47, 2088,
	48, 2088,
	49, 2088,
	50, 2088,
	52, 2088,
	53, 2088,
	54, 2088,
	55, 2088,
	56, 2088,
	57, 2088,
	58, 2088,
	61, 2088,
	62, 2088,
	63, 2088,
	64, 2088,
	66, 2088,
	67, 2088,
	68, 2088,
	71, 2088,
	72, 2088,
	73, 2088,
	74, 2088,
	75, 2088,
	76, 2088,
	77, 2088,
	78, 2088,
	79, 2088,
	80, 2088,
	81, 2088,
	83, 2088,
	84, 2088,
	85, 2088,
	86, 2088,
	87, 2088,
	89, 2088,
	90, 2088,
	91, 2088,
	92, 2088,
	100, 2088,
	101, 2088,
	102, 2088,
	103, 2088,
	104, 2088,
	105, 2088,
	106, 2088,
	107, 2088,
	109, 2088,
	111, 2088,
	112, 2088,
	114, 2088,
	117, 2088,
	118, 2088,
	119, 2088,
	121, 2088,
	123, 2088,
	124, 2088,
	126, 2088,
	127, 2088,
	128, 2088,
	129, 2088,
	130, 2088,
	131, 2088,
	132, 2088,
	133, 2088,
	134, 2088,
	135, 2088,
	136, 2088,
	137, 2088,
	138, 2088,
	142, 2088,
	143, 2088,
	144, 2088,
	145, 2088,
	146, 2088,
	147, 2088,
	148, 2088,
	149, 2088,
	150, 2088,
	151, 2088,
	152, 2088,
	153, 2088,
	155, 2088,
	158, 2088,
	159, 2088,
	160, 2088,
	162, 2088,
	163, 2088,
	165, 2088,
	166, 2088,
	168, 2088,
	169, 2088,
	170, 2088,
	171, 2088,
	172, 2088,
	173, 2088,
	174, 2088,
	175, 2088,
	176, 2088,
	177, 2088,
	178, 2088,
	179, 2088,
	180, 2088,
	181, 2088,
	182, 2088,
	183, 2088,
	184, 2088,
	186, 2088,
	187, 2088,
	188, 2088,
	190, 2088,
	191, 2088,
	192, 2088,
	193, 2088,
	194, 2088,
	195, 2088,
	196, 2088,
	197, 2088,
	198, 2088,
	200, 2088,
	202, 2088,
	203, 2088,
	204, 2088,
	205, 2088,
	206, 2088,
	207, 2088,
	208, 2088,
	209, 2088,
	210, 2088,
	211, 2088,
	212, 2088,
	213, 2088,
	214, 2088,
	215, 2088,
	216, 2088,
	217, 2088,
	218, 2088,
	220, 2088,
	221, 2088,
	223, 2088,
	224, 2088,
	225, 2088,
	226, 2088,
	227, 2088,
	228, 2088,
	230, 2088,
	231, 2088,
	234, 2088,
	235, 2088,
	236, 2088,
	237, 2088,
	238, 2088,
	239, 2088,
	240, 2088,
	241, 2088,
	242, 2088,
	243, 2088,
	244, 2088,
	245, 2088,
	246, 2088,
	247, 2088,
	248, 2088,
	249, 2088,
	250, 2088,
	251, 2088,
	252, 2088,
	253, 2088,
	254, 2088,
	256, 2088,
	259, 2088,
	260, 2088,
	262, 2088,
	263, 2088,
	264, 2088,
	265, 2088,
	266, 2088,
	268, 2088,
	269, 2088,
	270, 2088,
	273, 2088,
	274, 2088,
	275, 2088,
	276, 2088,
	278, 2088,
	279, 2088,
	280, 2088,
	282, 2088,
	284, 2088,
	285, 2088,
	286, 2088,
	287, 2088,
	288, 2088,
	289, 2088,
	290, 2088,
	291, 2088,
	292, 2088,
	293, 2088,
	295, 2088,
	296, 2088,
	297, 2088,
	298, 2088,
	299, 2088,
	300, 2088,
	301, 2088,
	303, 2088,
	305, 2088,
	306, 2088,
	307, 2088,
	308, 2088,
	309, 2088,
	310, 2088,
	311, 2088,
	312, 2088,
	313, 2088,
	314, 2088,
	316, 2088,
	317, 2088,
	318, 2088,
	319, 2088,
	320, 2088,
	321, 2088,
	322, 2088,
	323, 2088,
	324, 2088,
	325, 2088,
	326, 2088,
	327, 2088,
	328, 2088,
	329, 2088,
	331, 2088,
	332, 2088,
	333, 2088,
	334, 2088,
	335, 2088,
	336, 2088,
	337, 2088,
	338, 2088,
	339, 2088,
	340, 2088,
	341, 2088,
	342, 2088,
	343, 2088,
	344, 2088,
	345, 2088,
	346, 2088,
	347, 2088,
	349, 2088,
	350, 2088,
	351, 2088,
	352, 2088,
	353, 2088,
	354, 2088,
	355, 2088,
	356, 2088,
	357, 2088,
	358, 2088,
	360, 2088,
	361, 2088,
	362, 2088,
	363, 2088,
	364, 2088,
	365, 2088,
	366, 2088,
	367, 2088,
	368, 2088,
	369, 2088,
	370, 2088,
	372, 2088,
	373, 2088,
	374, 2088,
	375, 2088,
	376, 2088,
	377, 2088,
	378, 2088,
	379, 2088,
	380, 2088,
	381, 2088,
	382, 2088,
	383, 2088,
	385, 2088,
	386, 2088,
	387, 2088,
	389, 2088,
	390, 2088,
	391, 2088,
	392, 2088,
	393, 2088,
	394, 2088,
	395, 2088,
	397, 2088,
	398, 2088,
	399, 2088,
	400, 2088,
	401, 2088,
	403, 2088,
	405, 2088,
	406, 2088,
	407, 2088,
	408, 2088,
	409, 2088,
	411, 2088,
	412, 2088,
	413, 2088,
	415, 2088,
	416, 2088,
	419, 2088,
	420, 2088,
	421, 2088,
	422, 2088,
	423, 2088,
	424, 2088,
	425, 2088,
	427, 2088,
	429, 2088,
	430, 2088,
	431, 2088,
	432, 2088,
	433, 2088,
	434, 2088,
	435, 2088,
	437, 2088,
	438, 2088,
	439, 2088,
	444, 2088,
	445, 2088,
	446, 2088,
	447, 2088,
	448, 2088,
	449, 2088,
	450, 2088,
	451, 2088,
	453, 2088,
	454, 2088,
	455, 2088,
	456, 2088,
	457, 2088,
	458, 2088,
	460, 2088,
	461, 2088,
	462, 2088,
	463, 2088,
	464, 2088,
	465, 2088,
	466, 2088,
	467, 2088,
	468, 2088,
	470, 2088,
	473, 2088,
	474, 2088,
	476, 2088,
	477, 2088,
	-2, 0,
	-1, 1342,
	157, 1990,
	402, 1990,
	455, 1990,
	474, 1990,
	-2, 0,
	-1, 1374,
	307, 637,
	358, 637,
	-2, 0,
	-1, 1398,
	1, 632,
	471, 632,
	473, 632,
	475, 632,
	-2, 0,
	-1, 1399,
	1, 657,
	471, 657,
	473, 657,
	475, 657,
	-2, 0,
	-1, 1400,
	1, 639,
	471, 639,
	473, 639,
	475, 639,
	-2, 0,
	-1, 1402,
	1, 643,
	471, 643,
	473, 643,
	475, 643,
	-2, 0,
	-1, 1429,
	1, 2041,
	471, 2041,
	473, 2041,
	474, 2041,
	475, 2041,
	-2, 685,
	-1, 1430,
	1, 1987,
	471, 1987,
	473, 1987,
	474, 1987,
	475, 1987,
	-2, 686,
	-1, 1445,
	1, 983,
	475, 983,
	-2, 988,
	-1, 1448,
	141, 1111,
	154, 1111,
	229, 1111,
	267, 1111,
	-2, 1054,
	-1, 1542,
	125, 1075,
	141, 1075,
	154, 1075,
	199, 1075,
	229, 1075,
	267, 1075,
	277, 1075,
	417, 1075,
	-2, 1482,
	-1, 1599,
	473, 1630,
	-2, 0,
	-1, 1633,
	125, 1075,
	141, 1075,
	154, 1075,
	199, 1075,
	229, 1075,
	267, 1075,
	277, 1075,
	417, 1075,
	-2, 1190,
	-1, 1692,
	472, 1311,
	-2, 1299,
	-1, 1736,
	1, 489,
	475, 489,
	-2, 988,
	-1, 1941,
	1, 634,
	471, 634,
	473, 634,
	475, 634,
	-2, 0,
	-1, 1942,
	1, 659,
	471, 659,
	473, 659,
	475, 659,
	-2, 0,
	-1, 2014,
	337, 1136,
	338, 1136,
	-2, 1344,
	-1, 2045,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1362,
	-1, 2046,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1363,
	-1, 2047,
	84, 0,
	212, 0,
	213, 0,
	457, 0,
	458, 0,
	-2, 1364,
	-1, 2048,
	84, 0,
	212, 0,
	213, 0,
	457, 0,
	458, 0,
	-2, 1365,
	-1, 2049,
	84, 0,
	212, 0,
	213, 0,
	457, 0,
	458, 0,
	-2, 1366,
	-1, 2050,
	84, 0,
	212, 0,
	213, 0,
	457, 0,
	458, 0,
	-2, 1367,
	-1, 2051,
	84, 0,
	212, 0,
	213, 0,
	457, 0,
	458, 0,
	-2, 1368,
	-1, 2052,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1369,
	-1, 2064,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1381,
	-1, 2065,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1382,
	-1, 2066,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1383,
	-1, 2069,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1388,
	-1, 2075,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1392,
	-1, 2077,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1400,
	-1, 2078,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1401,
	-1, 2079,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1402,
	-1, 2080,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1403,
	-1, 2182,
	5, 1268,
	157, 1641,
	472, 1767,
	-2, 1758,
	-1, 2183,
	157, 1642,
	-2, 2045,
	-1, 2184,
	157, 1643,
	-2, 1904,
	-1, 2185,
	157, 1644,
	-2, 1825,
	-1, 2186,
	157, 1645,
	-2, 1861,
	-1, 2187,
	157, 1646,
	-2, 1902,
	-1, 2188,
	157, 1647,
	-2, 1981,
	-1, 2189,
	157, 1648,
	-2, 1465,
	-1, 2258,
	1, 1191,
	2, 1191,
	90, 1191,
	125, 1191,
	141, 1191,
	154, 1191,
	158, 1191,
	164, 1191,
	167, 1191,
	190, 1191,
	199, 1191,
	209, 1191,
	225, 1191,
	229, 1191,
	249, 1191,
	267, 1191,
	271, 1191,
	277, 1191,
	330, 1191,
	332, 1191,
	417, 1191,
	428, 1191,
	441, 1191,
	442, 1191,
	443, 1191,
	452, 1191,
	471, 1191,
	473, 1191,
	475, 1191,
	477, 1191,
	-2, 1190,
	-1, 2271,
	472, 1741,
	-2, 1753,
	-1, 2291,
	472, 1310,
	-2, 1300,
	-1, 2392,
	1, 907,
	471, 907,
	473, 907,
	475, 907,
	-2, 1099,
	-1, 2544,
	272, 1139,
	-2, 2079,
	-1, 2545,
	272, 1140,
	-2, 1970,
	-1, 2549,
	337, 1707,
	338, 1707,
	-2, 1463,
	-1, 2550,
	337, 1711,
	338, 1711,
	-2, 1464,
	-1, 2551,
	337, 1708,
	338, 1708,
	-2, 1463,
	-1, 2552,
	337, 1712,
	338, 1712,
	-2, 1464,
	-1, 2565,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1390,
	-1, 2566,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1394,
	-1, 2572,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1396,
	-1, 2761,
	206, 988,
	303, 988,
	311, 988,
	452, 988,
	-2, 486,
	-1, 2859,
	1, 907,
	471, 907,
	473, 907,
	475, 907,
	-2, 1099,
	-1, 2948,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1398,
	-1, 2955,
	203, 0,
	205, 0,
	259, 0,
	-2, 1417,
	-1, 3019,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1446,
	-1, 3020,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1447,
	-1, 3021,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1448,
	-1, 3025,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1452,
	-1, 3026,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1453,
	-1, 3027,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1454,
	-1, 3071,
	472, 1742,
	-2, 1754,
	-1, 3163,
	474, 2192,
	-2, 1032,
	-1, 3213,
	203, 0,
	205, 0,
	259, 0,
	-2, 1418,
	-1, 3216,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1421,
	-1, 3217,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1423,
	-1, 3382,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1422,
	-1, 3383,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1424,
	-1, 3393,
	203, 0,
	-2, 1455,
	-1, 3507,
	203, 0,
	-2, 1456,
	-1, 3641,
	43, 0,
	176, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 2048,
}

const sqlPrivate = 57344

const sqlLast = 85070

var sqlAct = [...]int{

	911, 3755, 3422, 3651, 3543, 3640, 3528, 3740, 2692, 3451,
	3425, 2845, 3617, 3607, 3653, 3318, 3588, 3196, 1213, 3652,
	3458, 3604, 2445, 3694, 3411, 2987, 3639, 1031, 3511, 2693,
	3347, 3371, 2874, 3150, 3155, 3331, 3467, 2032, 851, 213,
	3275, 213, 213, 841, 213, 213, 213, 213, 213, 2092,
	3091, 213, 1457, 2323, 856, 1667, 2778, 3092, 2867, 604,
	832, 3352, 1828, 3135, 2940, 1197, 1915, 2841, 2477, 2869,
	579, 1329, 3397, 2558, 1086, 213, 2418, 2409, 1787, 604,
	1668, 2479, 3195, 2715, 2421, 1178, 2487, 1871, 2678, 1874,
	2707, 1639, 1023, 696, 883, 2735, 2434, 2470, 3248, 2696,
	1325, 2476, 2468, 1608, 1824, 2446, 2325, 3042, 2677, 3512,
	1823, 2134, 2029, 4, 2251, 2593, 1827, 1570, 2025, 2542,
	2105, 1550, 2486, 1796, 840, 141, 1186, 1258, 2381, 2383,
	1812, 2214, 1382, 907, 2698, 2393, 1819, 1074, 2358, 1774,
	1894, 1609, 1445, 2253, 2419, 2741, 205, 1772, 2232, 2125,
	84, 2089, 1996, 1762, 2013, 1994, 1312, 1350, 2843, 1199,
	1335, 1322, 1263, 2439, 1857, 2136, 1565, 605, 2211, 2480,
	2240, 606, 1063, 2128, 207, 206, 213, 213, 1017, 2315,
	1618, 2178, 2250, 547, 533, 2222, 1183, 690, 555, 1533,
	2106, 996, 1459, 32, 1458, 1995, 1997, 600, 141, 148,
	1856, 563, 1013, 1349, 1628, 573, 1880, 1333, 1286, 149,
	672, 1014, 1625, 647, 1210, 1786, 550, 2018, 2359, 868,
	37, 36, 3452, 34, 994, 25, 23, 21, 1464, 558,
	745, 762, 1019, 609, 612, 1268, 1444, 3056, 2589, 3057,
	1896, 1896, 3788, 1896, 2694, 2884, 2231, 1541, 1472, 1473,
	836, 3778, 3777, 609, 612, 2231, 2231, 3750, 3730, 3728,
	3677, 1833, 3289, 3289, 3678, 831, 3675, 3673, 1503, 3670,
	2231, 2231, 1071, 3671, 836, 1475, 707, 3667, 1029, 3662,
	2883, 3668, 3637, 1833, 3636, 3635, 1833, 3632, 1833, 1908,
	3631, 1908, 2650, 2651, 1908, 3602, 3582, 3046, 3576, 3289,
	2286, 837, 2231, 3575, 3570, 1474, 3569, 2231, 3289, 2231,
	3289, 2759, 3563, 1472, 1473, 910, 1833, 3557, 1011, 997,
	997, 3289, 3555, 3509, 3490, 3487, 3289, 2286, 1833, 3289,
	3460, 3441, 3440, 1503, 3461, 1833, 1833, 2224, 3432, 3431,
	1475, 819, 1833, 3289, 3403, 3384, 3369, 1048, 1833, 2286,
	1908, 818, 3360, 3316, 3307, 3288, 2897, 2231, 2231, 3289,
	3215, 3171, 3165, 3133, 2286, 2913, 2913, 3134, 3066, 2131,
	1474, 3064, 3067, 73, 1043, 3065, 845, 3049, 826, 1494,
	2971, 2231, 1071, 2967, 1833, 3583, 1491, 2231, 2912, 1480,
	2904, 2691, 2913, 2689, 2905, 2231, 2688, 2231, 2642, 2621,
	2231, 998, 2231, 2622, 2604, 2602, 2466, 1923, 2231, 2465,
	1911, 2603, 2395, 1911, 2299, 2285, 1908, 909, 2231, 2286,
	1502, 1504, 2282, 2280, 2273, 2230, 3209, 2231, 1833, 2231,
	1910, 181, 3493, 2656, 1911, 2132, 1000, 3046, 1001, 2223,
	1908, 3308, 1833, 2905, 1497, 1498, 1499, 1500, 2372, 1044,
	2231, 1791, 1231, 2314, 1480, 1742, 1833, 1895, 2897, 2415,
	2557, 1832, 2312, 1604, 1209, 3119, 2943, 2921, 1626, 1822,
	2885, 183, 1384, 2267, 2592, 1495, 2266, 2265, 2264, 2263,
	1002, 999, 181, 825, 824, 1502, 1504, 823, 822, 2886,
	1401, 821, 2650, 2651, 817, 816, 815, 814, 813, 1026,
	812, 811, 691, 2522, 3496, 810, 809, 808, 2133, 2130,
	1897, 1897, 807, 1897, 1489, 1490, 182, 806, 805, 2666,
	804, 743, 183, 742, 741, 740, 175, 57, 694, 693,
	739, 738, 737, 736, 176, 735, 734, 733, 213, 732,
	1495, 58, 731, 1219, 730, 729, 728, 727, 726, 725,
	1472, 1473, 724, 723, 722, 150, 721, 62, 1868, 720,
	719, 718, 717, 3658, 716, 2883, 213, 182, 705, 57,
	1503, 704, 663, 213, 624, 623, 1496, 1475, 615, 614,
	613, 2197, 586, 58, 585, 584, 583, 181, 67, 213,
	1089, 213, 213, 213, 1089, 213, 1202, 567, 203, 62,
	1202, 1025, 202, 117, 201, 200, 150, 1474, 213, 213,
	199, 2135, 198, 197, 196, 195, 194, 193, 192, 72,
	2667, 1073, 1230, 1501, 191, 1078, 190, 183, 189, 83,
	67, 1044, 213, 2656, 73, 80, 188, 1067, 187, 186,
	185, 1496, 184, 3264, 2442, 213, 3227, 213, 3060, 1202,
	213, 213, 2914, 213, 1541, 2738, 2169, 2223, 2615, 1904,
	1895, 72, 1989, 213, 2155, 2598, 839, 1044, 2427, 2399,
	213, 83, 182, 2274, 2257, 1770, 73, 80, 74, 1652,
	1559, 2153, 175, 1215, 213, 213, 213, 213, 213, 1202,
	176, 1480, 1918, 1202, 1080, 1189, 213, 1202, 213, 213,
	1476, 1477, 1478, 1479, 1481, 1482, 1629, 1202, 1573, 1033,
	1573, 150, 2129, 213, 1572, 3638, 1572, 1061, 3550, 2666,
	74, 3502, 1502, 1504, 3361, 2650, 2651, 3268, 1471, 3421,
	2248, 3356, 3247, 3246, 3234, 1576, 2295, 1571, 1181, 2650,
	2651, 1193, 2659, 2660, 2652, 2653, 2654, 2655, 2657, 2658,
	1202, 3233, 3494, 3232, 3139, 3231, 3226, 1205, 3223, 1492,
	1488, 1917, 1485, 1483, 1484, 1476, 1477, 1478, 1479, 1481,
	1482, 3222, 1552, 3132, 213, 1212, 3080, 1495, 1056, 1211,
	3079, 3078, 609, 612, 3070, 3039, 3038, 3037, 213, 2963,
	2959, 2665, 75, 2908, 2733, 2685, 1269, 1269, 181, 2676,
	1082, 2649, 1175, 1180, 2646, 2645, 1354, 1338, 1340, 2643,
	2628, 2627, 1218, 2626, 1223, 2284, 1229, 2623, 141, 141,
	2667, 2650, 2651, 2620, 2614, 2597, 147, 78, 2590, 79,
	2467, 2258, 2118, 1193, 75, 1471, 181, 1557, 183, 1273,
	1470, 1316, 1319, 837, 1838, 2650, 2651, 3117, 181, 1010,
	3785, 2377, 1336, 1067, 2428, 2345, 1067, 2650, 2651, 1552,
	695, 1836, 3749, 3748, 117, 1289, 2656, 3676, 147, 78,
	1032, 79, 2989, 3627, 1326, 3625, 183, 3542, 1496, 1449,
	2656, 3539, 3536, 182, 181, 3535, 1270, 1225, 183, 181,
	181, 3534, 3527, 175, 866, 3521, 1348, 3491, 3486, 3485,
	1411, 176, 695, 2095, 1353, 1553, 117, 1551, 3437, 3417,
	3395, 118, 3379, 3378, 1544, 3366, 3365, 3345, 1549, 3342,
	3335, 182, 150, 3263, 183, 151, 3245, 3185, 1403, 183,
	183, 175, 3355, 182, 1448, 3182, 3108, 3107, 3095, 176,
	3094, 3052, 2954, 175, 2652, 2653, 2654, 2655, 2657, 2658,
	3497, 176, 2666, 118, 1537, 2915, 2898, 3138, 1402, 2861,
	150, 2825, 2656, 2804, 2781, 1540, 2780, 151, 2754, 182,
	2690, 2619, 692, 2618, 182, 182, 181, 1359, 2753, 175,
	181, 2613, 2581, 1375, 175, 175, 2656, 176, 2408, 1577,
	1574, 1566, 176, 176, 2101, 1869, 213, 1563, 2656, 1443,
	1483, 1484, 1476, 1477, 1478, 1479, 1481, 1482, 2441, 2293,
	2292, 3513, 181, 150, 150, 2269, 183, 2426, 2262, 2229,
	183, 2151, 1651, 213, 1607, 1606, 837, 1603, 1454, 1453,
	1446, 1602, 1601, 213, 1089, 213, 213, 213, 213, 1600,
	819, 1599, 1598, 604, 213, 213, 1597, 1596, 604, 213,
	818, 1654, 183, 2667, 213, 1575, 1595, 1224, 1450, 1593,
	1202, 182, 1664, 1467, 1468, 182, 1592, 1731, 1591, 1472,
	1473, 175, 2666, 1590, 1589, 175, 1919, 1588, 1027, 176,
	2781, 1089, 1587, 176, 2666, 1586, 1585, 1584, 1583, 1582,
	1581, 1580, 1579, 1554, 1567, 1568, 1475, 182, 1538, 1536,
	150, 1531, 1055, 1046, 150, 1039, 3338, 175, 1612, 1613,
	3265, 1029, 3219, 1029, 3076, 176, 3063, 3406, 1768, 2730,
	3055, 1067, 2601, 2288, 1733, 1739, 1474, 2168, 2260, 3267,
	3075, 1659, 2807, 1553, 1647, 2154, 150, 2751, 1660, 997,
	1534, 1615, 1737, 3310, 3746, 141, 2650, 2651, 3739, 2668,
	2669, 2670, 2152, 1636, 1077, 1753, 1752, 933, 3537, 1761,
	1763, 2650, 2651, 1075, 1761, 3211, 2870, 1791, 1761, 837,
	1658, 1662, 1071, 2667, 2661, 2659, 2660, 2652, 2653, 2654,
	2655, 2657, 2658, 3468, 1193, 2667, 1761, 1734, 3463, 1588,
	3462, 2652, 2653, 2654, 2655, 2657, 2658, 1634, 3495, 3420,
	3359, 1736, 3309, 3058, 2900, 2899, 1588, 1076, 1202, 1202,
	213, 1062, 2665, 2363, 1643, 1629, 1089, 609, 612, 3142,
	1605, 1656, 609, 612, 1637, 1441, 2625, 1627, 1071, 1573,
	1068, 2624, 1071, 181, 2563, 1572, 2347, 1072, 1748, 1374,
	1663, 1646, 1645, 3106, 1644, 1730, 1642, 1641, 1640, 1631,
	2847, 1412, 2846, 1561, 213, 1383, 1916, 3459, 213, 1756,
	3663, 1665, 1809, 213, 867, 1811, 3650, 1384, 1816, 1825,
	3122, 3110, 213, 183, 2919, 2654, 2655, 2657, 2658, 1829,
	3398, 213, 802, 213, 3756, 213, 2694, 2656, 2126, 213,
	1764, 1759, 1754, 2991, 2661, 2659, 2660, 2652, 2653, 2654,
	2655, 2657, 2658, 213, 1558, 1780, 1472, 1473, 2660, 2652,
	2653, 2654, 2655, 2657, 2658, 2291, 2607, 3659, 182, 1009,
	1087, 1594, 803, 1795, 1187, 1569, 1503, 1069, 175, 2839,
	2131, 1865, 1026, 1475, 1026, 1070, 176, 1246, 2671, 3672,
	1202, 3669, 1202, 213, 1202, 2879, 1068, 213, 1861, 3087,
	3529, 1758, 1202, 1363, 3600, 1202, 213, 150, 213, 213,
	3151, 3518, 3101, 1474, 2832, 2474, 1830, 2438, 1202, 1202,
	1202, 2384, 213, 2666, 3711, 3660, 1866, 1212, 1877, 213,
	3710, 1211, 1757, 659, 609, 612, 3562, 2935, 604, 213,
	3299, 213, 1234, 213, 2763, 213, 2132, 213, 1472, 1473,
	2300, 800, 2004, 2327, 785, 1815, 1410, 1975, 1077, 1864,
	1973, 213, 1820, 1749, 213, 1068, 213, 798, 1503, 2318,
	1077, 1244, 796, 835, 1831, 1475, 2765, 213, 3782, 1788,
	1409, 2316, 1885, 1933, 1025, 3450, 1025, 794, 791, 2002,
	1921, 2752, 1937, 1069, 3443, 3124, 2806, 1480, 213, 3121,
	3120, 1070, 213, 2318, 1848, 1474, 1847, 1899, 3084, 1784,
	1901, 1076, 660, 1903, 1494, 2316, 1922, 1906, 3083, 2133,
	2130, 1472, 1473, 1076, 2667, 1089, 1071, 2612, 1502, 1504,
	1789, 1790, 2004, 1289, 2611, 1882, 2610, 1882, 2609, 1879,
	837, 1883, 837, 1245, 2330, 2567, 2379, 834, 1475, 1336,
	2371, 1336, 1887, 1888, 2370, 1361, 2350, 2281, 1785, 2076,
	1447, 2006, 1069, 1208, 2147, 1408, 2146, 2386, 2034, 2002,
	1070, 1279, 1993, 1278, 2435, 1300, 1482, 2920, 1474, 1497,
	1498, 1499, 1500, 1495, 2385, 2387, 1277, 788, 1276, 1480,
	1987, 1846, 1036, 828, 1927, 780, 1931, 1912, 1056, 1913,
	3561, 2003, 1647, 2030, 2031, 1924, 1926, 1253, 1240, 2289,
	1089, 2307, 609, 612, 2272, 3377, 2349, 830, 2338, 2100,
	1502, 1504, 2135, 2390, 1034, 836, 2555, 1986, 1983, 2000,
	1356, 3427, 2091, 1988, 2091, 1955, 1544, 3734, 2662, 2663,
	2664, 1420, 1071, 1948, 2540, 2661, 2659, 2660, 2652, 2653,
	2654, 2655, 2657, 2658, 1452, 213, 3311, 829, 1472, 1473,
	2001, 1054, 1480, 2926, 1765, 1766, 2017, 3656, 2658, 2360,
	2361, 2367, 1376, 2360, 2361, 1495, 3097, 1089, 2135, 213,
	1797, 2003, 3629, 2099, 1496, 1475, 2126, 2202, 213, 2097,
	2329, 2360, 2361, 781, 2303, 1992, 1991, 2337, 1998, 1990,
	213, 1801, 2005, 1089, 1945, 1941, 2305, 1037, 1424, 3735,
	1985, 1071, 1940, 1884, 819, 1474, 1398, 819, 819, 2107,
	2108, 2925, 1440, 2129, 2021, 2122, 1949, 2022, 2023, 1372,
	1357, 2519, 1264, 2554, 3710, 2107, 2123, 837, 2306, 3759,
	2001, 3723, 1384, 662, 661, 1798, 1384, 2980, 837, 2547,
	2548, 3722, 837, 2304, 1407, 2279, 1942, 3699, 1501, 3295,
	3201, 3200, 2391, 1242, 1029, 833, 2876, 1399, 1262, 1791,
	1782, 3530, 2103, 2877, 2818, 2177, 1496, 2181, 2181, 2195,
	1029, 2107, 2144, 213, 2215, 2217, 2762, 2145, 2812, 2221,
	2148, 1202, 2149, 2150, 2120, 1808, 3737, 3657, 997, 1480,
	3771, 3109, 714, 2828, 2237, 2245, 2328, 1484, 1476, 1477,
	1478, 1479, 1481, 1482, 1655, 1793, 2764, 2236, 3376, 2348,
	1636, 1089, 657, 1896, 656, 1802, 213, 1264, 2190, 1362,
	2283, 1982, 2876, 2270, 213, 2317, 837, 689, 1775, 782,
	2206, 141, 1776, 2242, 2243, 213, 2219, 1564, 2227, 2228,
	2135, 2238, 1782, 3743, 1067, 792, 1739, 545, 213, 2749,
	1974, 1771, 1299, 1972, 1634, 3197, 2794, 3389, 3719, 3612,
	2259, 792, 213, 1089, 3541, 3655, 792, 1202, 2117, 1530,
	2244, 540, 2249, 213, 213, 2255, 2256, 1803, 1804, 2014,
	1575, 793, 792, 2073, 2319, 1239, 1799, 1485, 1483, 1484,
	1476, 1477, 1478, 1479, 1481, 1482, 213, 2617, 3293, 213,
	1035, 2793, 1421, 1984, 3327, 2241, 213, 3098, 2254, 2294,
	3760, 2298, 3698, 836, 2412, 3337, 3428, 213, 2353, 1947,
	1800, 3191, 1567, 1568, 1777, 213, 3072, 213, 1049, 1791,
	213, 3202, 3736, 2368, 2937, 2318, 213, 1779, 827, 213,
	783, 213, 2538, 213, 2977, 213, 213, 2332, 213, 1202,
	1202, 1027, 1202, 1027, 2301, 780, 2297, 213, 213, 2352,
	213, 213, 2380, 789, 1202, 1478, 1479, 1481, 1482, 2569,
	1386, 2090, 213, 2525, 3544, 1026, 3654, 830, 2449, 784,
	3580, 2362, 2364, 2365, 2366, 2322, 1834, 2396, 213, 213,
	213, 1026, 1781, 213, 1181, 213, 2331, 2334, 213, 1422,
	213, 1810, 213, 1451, 2432, 1419, 1358, 3709, 1193, 1805,
	1053, 2509, 3373, 2510, 2488, 2198, 2071, 2978, 2098, 2074,
	2344, 2462, 3294, 213, 213, 213, 213, 213, 213, 2490,
	213, 2578, 2493, 2494, 1775, 2340, 3741, 3707, 1776, 3474,
	1212, 2499, 2500, 2501, 2397, 2458, 2351, 609, 612, 2376,
	2406, 2473, 3344, 781, 1944, 2576, 2528, 3697, 2865, 2369,
	3772, 213, 1939, 2416, 2463, 2087, 3328, 2430, 2070, 213,
	2451, 2401, 1423, 2403, 1806, 141, 715, 1025, 1371, 1373,
	1855, 2492, 1614, 1897, 2495, 3137, 2496, 2444, 2202, 2085,
	2507, 1193, 1193, 1025, 1782, 2455, 1047, 2456, 1042, 2457,
	1476, 1477, 1478, 1479, 1481, 1482, 532, 2459, 1360, 1462,
	780, 1336, 2464, 3742, 2440, 3372, 1530, 2440, 2475, 2504,
	2135, 2491, 2796, 3578, 2530, 3198, 2532, 2800, 2020, 2511,
	1777, 2513, 830, 2515, 2460, 1792, 1193, 1750, 1782, 3028,
	3680, 541, 1775, 1779, 3243, 3744, 1776, 3681, 2941, 2523,
	2798, 3765, 3579, 3517, 3434, 3433, 3415, 2742, 213, 1747,
	2527, 1461, 2573, 3086, 2570, 2866, 1461, 2333, 2202, 2202,
	1193, 1818, 1193, 2546, 1456, 2506, 2600, 2574, 2858, 2776,
	2524, 2579, 616, 3298, 2512, 2537, 2514, 2536, 2516, 2772,
	3297, 1817, 2431, 2420, 2410, 542, 2081, 2717, 1781, 782,
	1878, 2797, 2517, 2017, 2541, 2072, 1867, 2082, 781, 2591,
	1860, 2083, 1842, 2533, 3545, 2088, 941, 2556, 2010, 2976,
	3589, 1813, 2938, 3374, 2354, 1979, 1743, 1745, 3156, 3348,
	1461, 2407, 1302, 3203, 1400, 543, 1778, 544, 1777, 1387,
	2233, 2535, 1789, 1790, 1694, 2033, 1746, 3457, 3455, 1460,
	1621, 1779, 3416, 2786, 1460, 209, 2783, 535, 536, 2526,
	551, 535, 551, 561, 566, 2568, 1089, 582, 2782, 2561,
	1814, 2539, 1932, 3054, 2718, 209, 2701, 2702, 2202, 2202,
	2202, 3029, 1624, 2595, 2596, 213, 837, 1462, 2599, 3030,
	213, 700, 1462, 213, 3244, 209, 213, 213, 1089, 2706,
	1782, 2239, 213, 3204, 3764, 711, 1781, 703, 2235, 2705,
	783, 2278, 2277, 2234, 2606, 1089, 2716, 1622, 1460, 2276,
	2011, 2723, 213, 2275, 1271, 1285, 2575, 2414, 1283, 3679,
	2138, 713, 834, 2768, 3523, 2577, 2720, 213, 3319, 3296,
	2747, 1272, 3423, 2909, 1876, 2394, 3716, 3453, 3413, 784,
	3597, 1670, 3586, 3249, 782, 2758, 213, 213, 213, 1029,
	2084, 3043, 213, 2142, 3546, 213, 2355, 2356, 3592, 2086,
	3718, 2737, 213, 213, 1029, 213, 213, 213, 2713, 2739,
	3414, 3524, 2760, 3674, 1438, 2687, 3538, 617, 618, 213,
	213, 213, 535, 535, 2732, 3394, 2766, 3242, 213, 2679,
	209, 2703, 2736, 1067, 1029, 2695, 1436, 2750, 1782, 2769,
	2770, 213, 213, 2743, 2711, 2719, 2729, 2682, 2683, 2684,
	1089, 3424, 2953, 2271, 1623, 2784, 2543, 2710, 2788, 2785,
	2773, 1202, 2790, 2791, 3593, 1416, 2722, 1414, 1397, 1395,
	1089, 1773, 1778, 2917, 2777, 213, 3286, 3525, 213, 213,
	1393, 1391, 213, 2835, 1389, 1202, 213, 1381, 213, 1379,
	2680, 2644, 2744, 2745, 2746, 783, 1202, 2712, 2580, 1281,
	2411, 213, 2721, 2378, 2346, 2811, 3283, 213, 2724, 2725,
	2141, 2296, 213, 2761, 213, 1653, 2872, 620, 619, 2857,
	2809, 213, 1659, 1650, 2767, 1439, 2819, 1351, 2755, 2756,
	2834, 2757, 2844, 2727, 784, 2728, 2198, 2198, 1971, 2934,
	709, 710, 701, 702, 1202, 1202, 2933, 2881, 1456, 3284,
	2852, 2521, 213, 213, 1284, 2805, 213, 1282, 2799, 2520,
	712, 2814, 2498, 1999, 1981, 2488, 1193, 621, 622, 1437,
	1952, 2313, 2815, 2833, 2488, 1732, 2816, 1578, 2826, 2821,
	1778, 2827, 2829, 2817, 1027, 1617, 1355, 1864, 3649, 1257,
	3315, 1435, 3306, 213, 3695, 1089, 213, 213, 1089, 213,
	1027, 3585, 2836, 1029, 2896, 2801, 2802, 1780, 2873, 2803,
	1026, 3272, 790, 2352, 2868, 2855, 3154, 3147, 3104, 3102,
	1415, 3085, 1413, 1396, 1394, 1026, 2864, 2856, 2820, 2916,
	2848, 2436, 213, 1780, 2878, 1392, 1390, 2822, 2823, 1388,
	2907, 2824, 1380, 2887, 1378, 2911, 2198, 2198, 2198, 2894,
	2895, 2425, 2417, 1621, 1280, 1026, 2404, 2880, 1909, 1907,
	141, 141, 837, 2973, 1905, 1820, 2889, 2890, 2891, 1089,
	2892, 2893, 2931, 1820, 1902, 1900, 1898, 2202, 2202, 1889,
	1839, 1837, 211, 1826, 1821, 1624, 1089, 1807, 213, 1794,
	1970, 1783, 3479, 2871, 1465, 1661, 3711, 3620, 3279, 2932,
	1694, 1694, 3280, 3368, 1619, 1006, 3363, 2956, 3362, 2489,
	2559, 1769, 1025, 1236, 3481, 2922, 2318, 2923, 2318, 2924,
	1622, 2928, 2336, 3164, 1791, 2965, 2966, 1025, 2316, 1007,
	2335, 2936, 1433, 1434, 795, 797, 799, 1943, 1969, 1968,
	3619, 2582, 2583, 3282, 1620, 1193, 2939, 1950, 595, 3300,
	3532, 1377, 3504, 1472, 1473, 3250, 3285, 1025, 2357, 2339,
	1469, 2202, 2202, 2202, 2202, 2202, 2202, 2202, 2202, 2202,
	2202, 2202, 2202, 2202, 2202, 2202, 2202, 2202, 2202, 2202,
	2961, 2202, 2929, 1466, 1040, 2030, 2998, 2560, 3712, 1740,
	3705, 2375, 2979, 2981, 2982, 2972, 546, 2988, 213, 213,
	2373, 2030, 3008, 2374, 2341, 2992, 3584, 1670, 1670, 1089,
	1474, 2994, 1050, 2343, 3554, 2995, 648, 2997, 1008, 582,
	3059, 688, 3738, 3551, 1026, 2342, 3005, 1623, 3146, 3136,
	213, 3069, 3036, 3007, 855, 209, 3032, 209, 209, 1184,
	2443, 209, 557, 2220, 1735, 1472, 1473, 1666, 3081, 2983,
	2748, 2673, 2674, 2675, 209, 1214, 3553, 3033, 2993, 3281,
	3763, 2650, 2651, 1472, 1473, 2310, 2311, 2308, 2309, 1365,
	1029, 1029, 1475, 1541, 3041, 1364, 3224, 213, 1238, 3047,
	3048, 2137, 3074, 3045, 2310, 141, 2308, 2143, 3040, 1418,
	3220, 1256, 1417, 1261, 3073, 2984, 209, 209, 1539, 1184,
	3775, 3751, 1474, 1202, 3724, 3514, 1202, 3447, 3407, 209,
	3050, 3051, 3061, 3405, 3334, 3266, 1298, 3188, 3181, 213,
	3170, 3149, 3131, 3130, 3129, 3100, 1025, 213, 2888, 2862,
	209, 209, 209, 209, 1184, 1089, 213, 2860, 2503, 2502,
	1202, 2453, 582, 2429, 209, 209, 2405, 3115, 2102, 1967,
	1966, 1965, 1964, 1892, 213, 3089, 1891, 3116, 3118, 700,
	1890, 3166, 1870, 1850, 1849, 1845, 1844, 1843, 213, 213,
	1202, 1202, 1202, 3128, 213, 213, 213, 3127, 3161, 213,
	213, 3062, 3143, 213, 213, 1841, 1202, 1840, 1432, 1431,
	3077, 213, 1089, 1311, 1310, 2777, 1309, 1308, 1307, 3103,
	1306, 3105, 1305, 3160, 1304, 3158, 3111, 2449, 3157, 1303,
	1301, 2352, 3145, 3144, 1089, 2198, 2198, 1296, 1295, 1294,
	209, 1293, 1292, 1252, 1251, 1694, 2700, 3123, 1250, 1249,
	1248, 1247, 1241, 1235, 209, 1233, 1232, 2488, 1052, 3177,
	3148, 1051, 981, 888, 1741, 801, 3159, 787, 3426, 1029,
	3162, 1426, 71, 1243, 3168, 635, 66, 3189, 2726, 3167,
	213, 3099, 643, 3152, 3599, 3172, 3183, 3178, 3179, 3184,
	3187, 3173, 2792, 1864, 2382, 2740, 3186, 3180, 1951, 1385,
	3214, 1953, 2731, 2261, 3577, 3199, 3205, 1332, 3228, 2616,
	3510, 1026, 1026, 3388, 2140, 1560, 68, 876, 963, 2198,
	2198, 2198, 2198, 2198, 2198, 2198, 2198, 2198, 2198, 2198,
	2198, 2198, 2198, 2198, 2198, 2198, 2198, 2198, 3326, 2198,
	3325, 3273, 3088, 213, 2478, 3323, 3322, 844, 1092, 1089,
	3194, 1089, 1670, 1751, 882, 1767, 1760, 2290, 2180, 1674,
	885, 3255, 3206, 1671, 1673, 887, 886, 1672, 1562, 884,
	1669, 2413, 2447, 1288, 213, 213, 213, 766, 1755, 2096,
	2124, 2605, 3218, 1555, 3241, 857, 213, 878, 2121, 1045,
	2714, 2875, 3068, 213, 3354, 213, 2009, 651, 213, 213,
	213, 3190, 2647, 2127, 3292, 1038, 2203, 2196, 2192, 1027,
	1089, 213, 213, 1025, 1025, 1089, 3303, 3304, 2437, 1442,
	2740, 1532, 2448, 1079, 1027, 213, 860, 3269, 3270, 213,
	3257, 1029, 3254, 2094, 1546, 3291, 3252, 3253, 213, 1029,
	2949, 2950, 213, 2585, 3271, 1089, 3301, 3261, 1202, 2019,
	2736, 3302, 1029, 3262, 1027, 2882, 2734, 3290, 2287, 3616,
	2024, 1854, 535, 1005, 1004, 1003, 3606, 3603, 2842, 1744,
	2302, 3251, 1524, 2849, 872, 1192, 213, 3258, 3320, 3256,
	855, 2699, 2910, 209, 855, 209, 1254, 3531, 1089, 209,
	1026, 1523, 1173, 2389, 3367, 3313, 1173, 3314, 2388, 1214,
	3520, 1184, 209, 3353, 209, 1066, 3321, 1065, 3336, 209,
	1214, 551, 3339, 3350, 209, 1214, 3349, 3358, 1089, 1064,
	582, 2775, 3341, 3364, 3009, 3010, 3011, 3012, 3013, 3014,
	3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024,
	3025, 3026, 3027, 3317, 3031, 1187, 3351, 3770, 1087, 3096,
	180, 2553, 1463, 1455, 177, 1089, 179, 178, 1864, 3330,
	3113, 1616, 3375, 213, 88, 213, 35, 1089, 213, 16,
	3380, 2202, 3385, 3346, 116, 115, 213, 114, 113, 112,
	111, 110, 105, 109, 108, 107, 106, 104, 103, 102,
	101, 3396, 1025, 100, 99, 98, 97, 96, 95, 213,
	94, 93, 92, 91, 3410, 90, 89, 578, 575, 49,
	48, 87, 86, 2202, 15, 3401, 3402, 33, 213, 2969,
	3329, 3409, 13, 1027, 53, 54, 213, 12, 28, 29,
	3340, 3408, 77, 76, 27, 213, 2985, 3429, 3465, 14,
	1202, 3404, 3456, 3446, 26, 3430, 213, 24, 10, 3357,
	8, 7, 1026, 30, 1638, 11, 146, 145, 144, 3470,
	1026, 70, 143, 142, 3480, 69, 22, 213, 213, 3444,
	3436, 9, 3400, 1026, 3454, 3478, 209, 138, 3466, 2844,
	3141, 3448, 65, 3471, 140, 139, 3473, 137, 136, 213,
	3469, 135, 63, 3464, 134, 133, 64, 132, 20, 3483,
	3477, 3353, 5, 52, 213, 3476, 3488, 3489, 3475, 6,
	3482, 3370, 2918, 843, 81, 82, 31, 61, 3484, 60,
	209, 59, 19, 2202, 209, 51, 3492, 18, 3516, 209,
	170, 3526, 3438, 3439, 1694, 169, 168, 167, 1875, 3503,
	3515, 3508, 162, 161, 166, 164, 163, 209, 165, 209,
	160, 209, 213, 3540, 1025, 535, 172, 171, 174, 3071,
	158, 154, 1025, 153, 157, 213, 1202, 159, 3499, 1893,
	156, 1694, 213, 155, 152, 1025, 1202, 1202, 3533, 173,
	56, 131, 1202, 130, 3568, 129, 213, 3547, 213, 128,
	127, 2202, 2202, 3552, 126, 125, 3556, 55, 17, 2,
	3500, 3501, 3560, 1, 3573, 3565, 3574, 3548, 3549, 582,
	0, 0, 213, 700, 1193, 3572, 0, 0, 213, 3469,
	0, 213, 209, 1089, 1184, 209, 3594, 0, 3564, 0,
	0, 3559, 213, 213, 3596, 3614, 3595, 0, 582, 0,
	0, 1670, 3605, 3608, 0, 209, 0, 3566, 3567, 0,
	0, 0, 3624, 3571, 209, 209, 3621, 209, 3626, 209,
	3601, 209, 0, 209, 0, 0, 3634, 0, 0, 3633,
	587, 3610, 0, 0, 213, 0, 0, 1976, 1670, 0,
	1977, 3628, 1978, 3630, 0, 0, 3618, 3661, 0, 0,
	1027, 1027, 0, 209, 0, 0, 3645, 3646, 0, 3666,
	3648, 0, 3647, 1194, 0, 0, 0, 1206, 0, 2198,
	0, 0, 0, 0, 566, 0, 3664, 0, 582, 0,
	213, 3682, 0, 0, 0, 3684, 3581, 0, 0, 0,
	0, 0, 3686, 3683, 0, 3692, 1173, 3696, 0, 3691,
	213, 0, 3688, 0, 0, 0, 0, 0, 0, 1617,
	0, 2198, 0, 0, 0, 0, 1265, 3706, 3609, 3702,
	3703, 3613, 0, 3708, 3704, 0, 3685, 213, 3687, 213,
	592, 3713, 3714, 2449, 0, 3717, 3605, 855, 3726, 3608,
	3715, 3721, 0, 1173, 3725, 3720, 3729, 3731, 3689, 3690,
	3727, 3732, 3693, 0, 0, 0, 0, 0, 3733, 0,
	0, 0, 0, 0, 1344, 0, 0, 3747, 0, 3745,
	0, 0, 0, 0, 1206, 0, 0, 1621, 0, 0,
	3752, 0, 3618, 0, 0, 3754, 0, 3753, 0, 1694,
	0, 3757, 597, 3758, 3761, 3622, 0, 0, 3623, 0,
	3767, 0, 0, 0, 0, 3773, 0, 0, 0, 1624,
	0, 0, 0, 594, 0, 3774, 0, 1366, 0, 0,
	0, 2198, 0, 3776, 3286, 0, 0, 0, 1619, 1027,
	0, 535, 3784, 0, 0, 3786, 3780, 3781, 0, 3783,
	3779, 3260, 1694, 1694, 1622, 0, 209, 0, 3789, 0,
	0, 0, 0, 0, 3283, 535, 0, 3276, 1694, 1694,
	0, 0, 209, 0, 535, 0, 0, 0, 1620, 0,
	0, 3274, 0, 0, 3393, 0, 209, 3278, 1173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1694,
	2709, 0, 0, 0, 0, 0, 1670, 3284, 0, 843,
	0, 0, 0, 843, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3418, 589, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3277,
	3768, 3769, 0, 57, 0, 0, 0, 593, 0, 1216,
	0, 1220, 0, 1226, 0, 0, 0, 58, 0, 1670,
	1670, 1623, 0, 0, 0, 0, 0, 0, 0, 551,
	0, 596, 0, 62, 0, 1670, 1670, 3787, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 591, 1087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1027, 0, 0, 67, 0, 1670, 0, 0, 1027,
	0, 0, 2326, 0, 0, 0, 0, 0, 3386, 0,
	209, 0, 1027, 0, 0, 0, 588, 0, 0, 0,
	0, 209, 0, 1347, 0, 72, 3507, 0, 0, 0,
	0, 1352, 0, 0, 209, 83, 0, 0, 0, 0,
	73, 80, 0, 0, 0, 3386, 3279, 2708, 209, 0,
	3280, 0, 1694, 0, 598, 0, 0, 2033, 0, 209,
	2398, 0, 0, 0, 0, 590, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1472, 1473,
	0, 0, 1214, 0, 74, 209, 0, 1404, 0, 0,
	0, 3282, 209, 0, 0, 0, 0, 0, 1503, 0,
	0, 0, 0, 1875, 3285, 1475, 0, 0, 0, 0,
	0, 2326, 0, 535, 0, 0, 2452, 0, 0, 0,
	0, 0, 209, 0, 0, 209, 0, 209, 0, 209,
	0, 209, 209, 0, 1184, 1474, 0, 1173, 0, 0,
	0, 0, 0, 2471, 700, 0, 2326, 2326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 1670,
	0, 0, 1694, 0, 0, 0, 0, 0, 1525, 1526,
	1527, 1528, 1529, 0, 209, 1184, 209, 0, 0, 1214,
	0, 1214, 0, 0, 1184, 0, 1184, 0, 1184, 0,
	0, 0, 0, 0, 0, 0, 0, 1543, 75, 0,
	0, 0, 0, 1556, 0, 0, 0, 3281, 0, 209,
	209, 209, 209, 1184, 209, 0, 209, 0, 0, 1480,
	0, 0, 1173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 78, 0, 79, 2650, 2651, 0, 2668,
	2669, 2670, 0, 0, 0, 0, 0, 209, 0, 0,
	1502, 1504, 0, 0, 181, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 695, 0, 0, 1670,
	117, 0, 0, 0, 0, 0, 1206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1173,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 2665, 0, 0, 1495, 0, 0, 0, 0,
	0, 0, 0, 2033, 0, 1173, 124, 118, 0, 0,
	0, 0, 57, 0, 0, 1610, 1610, 1610, 0, 0,
	0, 151, 0, 0, 0, 0, 58, 119, 0, 182,
	0, 0, 0, 0, 1214, 0, 0, 0, 0, 175,
	0, 0, 62, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 39, 121, 0,
	0, 0, 0, 0, 0, 0, 0, 2656, 150, 0,
	0, 38, 0, 67, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 843, 0, 0, 0,
	0, 0, 0, 0, 41, 0, 1496, 0, 0, 42,
	0, 1914, 0, 0, 72, 0, 0, 122, 0, 1206,
	0, 0, 1925, 40, 83, 0, 0, 0, 2671, 73,
	80, 0, 0, 1173, 0, 1934, 1935, 1936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 1694, 0, 0, 43, 0, 0, 0,
	0, 0, 0, 2666, 0, 0, 209, 0, 0, 0,
	0, 535, 0, 74, 0, 0, 535, 0, 0, 535,
	0, 0, 535, 535, 0, 1173, 0, 0, 535, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1694, 1214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1214, 0, 0, 0, 1485, 1483, 1484,
	1476, 1477, 1478, 1479, 1481, 1482, 0, 0, 0, 0,
	0, 0, 2326, 2326, 209, 0, 0, 0, 2326, 0,
	0, 2779, 0, 0, 0, 0, 0, 0, 2326, 2779,
	1670, 2326, 2779, 2779, 2667, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 209, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 75, 0, 0,
	0, 0, 0, 0, 0, 44, 0, 209, 1184, 0,
	0, 0, 0, 1694, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1670, 0, 0, 0, 0, 0,
	47, 147, 78, 0, 79, 0, 45, 0, 0, 0,
	123, 2838, 0, 0, 2840, 2326, 46, 0, 209, 0,
	0, 0, 209, 181, 1261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 50, 0, 209, 0, 117,
	0, 0, 0, 1184, 0, 209, 0, 0, 2326, 120,
	535, 0, 0, 0, 0, 0, 0, 2326, 2662, 2663,
	2664, 0, 0, 183, 0, 2661, 2659, 2660, 2652, 2653,
	2654, 2655, 2657, 2658, 0, 0, 0, 0, 0, 2650,
	2651, 0, 2668, 2669, 2670, 0, 118, 0, 209, 1875,
	1670, 0, 1875, 0, 0, 0, 0, 0, 3210, 0,
	151, 0, 0, 0, 0, 0, 2650, 2651, 182, 2668,
	2669, 2670, 0, 0, 0, 0, 0, 0, 175, 0,
	0, 0, 0, 0, 0, 2958, 176, 0, 0, 2927,
	0, 0, 1184, 209, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2665, 0, 150, 0, 0,
	3, 0, 0, 0, 0, 2650, 2651, 0, 2668, 2669,
	2670, 0, 2008, 0, 2012, 0, 0, 0, 209, 0,
	0, 2026, 2665, 0, 2957, 0, 0, 0, 2035, 2036,
	2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 0, 2075, 0, 2077, 2078, 2079, 2080,
	2656, 2665, 0, 0, 2990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2656, 0, 1543,
	0, 0, 0, 2119, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1173, 0,
	0, 2671, 0, 0, 2392, 0, 0, 0, 0, 0,
	0, 57, 0, 2157, 2160, 2163, 2166, 0, 2170, 2171,
	2172, 2173, 2174, 2175, 2176, 58, 2656, 0, 2671, 2194,
	1173, 2205, 2207, 2212, 0, 0, 2666, 0, 0, 0,
	0, 62, 209, 209, 0, 0, 0, 1173, 0, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2666, 535, 535, 0, 58, 0, 0,
	0, 855, 67, 0, 0, 0, 0, 2671, 0, 0,
	0, 0, 0, 62, 0, 855, 2461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1214, 0, 0, 0,
	0, 1206, 0, 72, 0, 0, 0, 0, 0, 0,
	0, 0, 2666, 83, 67, 0, 0, 0, 73, 80,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2667, 0, 0,
	0, 0, 0, 582, 0, 72, 0, 0, 0, 0,
	0, 0, 1173, 0, 0, 83, 0, 0, 0, 0,
	73, 80, 74, 0, 2667, 0, 0, 0, 0, 0,
	0, 0, 1173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 2667, 0, 0, 0, 0, 0, 0,
	2326, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2471, 2471, 0, 0, 0, 0,
	700, 700, 2326, 0, 0, 1875, 1875, 0, 0, 700,
	2326, 2662, 2663, 2664, 0, 0, 0, 209, 2661, 2659,
	2660, 2652, 2653, 2654, 2655, 2657, 2658, 0, 2400, 0,
	2402, 0, 0, 0, 0, 0, 75, 0, 2662, 2663,
	2664, 0, 0, 0, 0, 2661, 2659, 2660, 2652, 2653,
	2654, 2655, 2657, 2658, 0, 0, 0, 1173, 0, 0,
	1173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 78, 0, 79, 0, 0, 0, 0, 75, 0,
	0, 0, 0, 0, 0, 0, 3229, 2662, 2663, 2664,
	0, 0, 181, 0, 2661, 2659, 2660, 2652, 2653, 2654,
	2655, 2657, 2658, 0, 695, 0, 0, 0, 117, 0,
	0, 0, 147, 78, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1173, 183, 0, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 695, 0, 1173, 1214,
	117, 209, 0, 0, 0, 118, 0, 0, 0, 0,
	0, 2518, 0, 0, 209, 0, 0, 0, 0, 151,
	0, 0, 0, 0, 183, 0, 0, 182, 0, 0,
	2326, 2326, 2326, 0, 0, 0, 0, 175, 0, 0,
	0, 0, 1214, 0, 0, 176, 0, 118, 0, 2326,
	0, 2779, 0, 0, 1214, 1214, 209, 1525, 1526, 0,
	0, 151, 0, 0, 0, 0, 1341, 209, 209, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 2326, 0, 0, 0, 3332, 0, 176, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 3343, 0,
	0, 0, 0, 0, 0, 942, 0, 0, 1339, 0,
	0, 0, 2565, 2566, 0, 0, 0, 0, 2572, 0,
	0, 1173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1214, 0, 0, 1472, 1473, 2586, 2587, 0,
	0, 0, 0, 2119, 210, 0, 0, 0, 0, 0,
	0, 0, 2594, 0, 0, 1503, 0, 0, 0, 0,
	0, 0, 1475, 0, 210, 0, 0, 0, 2608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2830, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 1474, 2629, 0, 0, 0, 0, 0, 0,
	0, 1494, 2853, 0, 0, 0, 0, 0, 1491, 0,
	0, 0, 0, 2859, 0, 0, 0, 0, 0, 2326,
	0, 2779, 0, 0, 3412, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1173, 2952, 0,
	2212, 2212, 2212, 0, 0, 582, 0, 0, 0, 0,
	0, 2902, 2903, 0, 0, 1610, 1497, 1498, 1499, 1500,
	0, 0, 0, 2704, 3412, 0, 1480, 0, 0, 0,
	0, 0, 2326, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 1472, 1473, 0, 0, 0, 0, 0,
	0, 0, 1214, 0, 1173, 0, 0, 1502, 1504, 0,
	0, 0, 0, 1503, 0, 0, 0, 0, 0, 0,
	1475, 0, 0, 209, 209, 0, 1173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1489, 1490, 0, 0,
	843, 0, 0, 0, 0, 2990, 0, 0, 0, 0,
	1474, 0, 0, 0, 843, 0, 0, 877, 85, 1494,
	3412, 0, 1495, 0, 0, 0, 1491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2947, 0, 3332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 1497, 1498, 1499, 1500, 2779, 0,
	0, 85, 0, 0, 1480, 0, 0, 0, 0, 0,
	0, 1173, 1214, 1173, 1214, 1501, 0, 0, 0, 0,
	0, 0, 0, 2650, 2651, 0, 2668, 2669, 2670, 0,
	0, 0, 0, 1496, 0, 1502, 1504, 0, 3590, 0,
	0, 0, 0, 0, 1214, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 2326,
	0, 0, 0, 0, 1489, 1490, 0, 0, 0, 820,
	0, 0, 1173, 0, 0, 0, 0, 1173, 838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2665,
	1495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2990, 0, 0, 0, 0, 0, 0, 1173, 0, 0,
	0, 1015, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2326, 0, 0, 0,
	1173, 1492, 1488, 0, 1485, 1483, 1484, 1476, 1477, 1478,
	1479, 1481, 1482, 0, 2656, 0, 3412, 0, 0, 2026,
	0, 0, 0, 1501, 0, 2944, 2945, 0, 0, 2948,
	1173, 0, 0, 2951, 0, 0, 0, 0, 0, 0,
	3125, 1496, 2955, 1214, 0, 2326, 0, 0, 0, 0,
	0, 2962, 0, 0, 2704, 0, 0, 0, 0, 0,
	0, 1472, 1473, 0, 0, 0, 0, 1173, 0, 2974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1173,
	0, 1503, 0, 0, 0, 0, 0, 0, 1475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2999, 3000,
	2666, 3001, 3002, 3003, 0, 0, 3004, 3174, 3175, 3176,
	3006, 0, 855, 0, 210, 1094, 210, 210, 1474, 1094,
	210, 1094, 0, 0, 0, 1094, 0, 1494, 0, 0,
	0, 0, 0, 210, 1491, 0, 0, 0, 0, 0,
	0, 3034, 3035, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3044, 0, 0, 1492,
	1488, 0, 1485, 1483, 1484, 1476, 1477, 1478, 1479, 1481,
	1482, 3053, 0, 0, 1094, 210, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 1497, 1498, 1499, 1500, 0, 0, 0, 0,
	0, 2667, 1480, 0, 0, 0, 0, 0, 0, 210,
	210, 210, 210, 0, 1094, 0, 0, 0, 1094, 0,
	0, 0, 1094, 210, 210, 0, 0, 3082, 0, 1472,
	1473, 0, 1094, 1502, 1504, 1515, 1516, 1517, 0, 0,
	0, 0, 3090, 3093, 0, 0, 0, 0, 0, 1503,
	0, 0, 0, 0, 0, 0, 1475, 0, 0, 0,
	0, 1521, 1489, 1490, 0, 2650, 2651, 3112, 2668, 2669,
	2670, 0, 0, 0, 0, 1094, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1474, 0, 1495, 0,
	0, 0, 0, 0, 0, 1494, 0, 0, 0, 210,
	0, 0, 1491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 2662, 2663, 2664, 0, 0,
	0, 0, 2661, 2659, 2660, 2652, 2653, 2654, 2655, 2657,
	2658, 2665, 0, 0, 0, 1173, 0, 0, 1610, 0,
	855, 0, 0, 0, 0, 0, 0, 3169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1497, 1498, 1499, 1500, 0, 0, 0, 0, 0, 0,
	1480, 1501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1496,
	0, 0, 0, 0, 1512, 0, 85, 1522, 85, 0,
	85, 1502, 1504, 0, 0, 0, 2656, 0, 3207, 3208,
	0, 0, 0, 0, 3212, 3213, 0, 0, 0, 3216,
	3217, 0, 0, 908, 0, 0, 3221, 0, 0, 0,
	1489, 1490, 0, 2672, 0, 0, 0, 3225, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 0,
	0, 0, 0, 3230, 0, 0, 1495, 2671, 0, 0,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	838, 85, 85, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 610, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 2666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 0, 0, 0, 0, 1492, 1488, 0,
	1485, 1483, 1484, 1476, 1477, 1478, 1479, 1481, 1482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1501,
	0, 0, 85, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 3093, 1496, 0, 1094,
	0, 210, 210, 210, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1513, 0, 1094, 0, 0, 0, 0,
	0, 0, 0, 2667, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1094, 1028, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 820, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1535, 0, 0, 0,
	0, 0, 0, 0, 3093, 0, 0, 0, 0, 0,
	0, 0, 0, 1542, 0, 0, 0, 1548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1511, 0,
	0, 3381, 3382, 3383, 1514, 1492, 1488, 0, 1485, 1483,
	1484, 1476, 1477, 1478, 1479, 1481, 1482, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 3391, 3392, 0,
	0, 0, 0, 0, 0, 0, 0, 2662, 2663, 2664,
	0, 3399, 0, 0, 2661, 2659, 2660, 2652, 2653, 2654,
	2655, 2657, 2658, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1094, 1094, 210, 0, 0, 0, 0,
	0, 1094, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3093, 603, 0, 0, 0, 0, 0, 0, 3435,
	0, 0, 0, 0, 0, 0, 0, 0, 3442, 0,
	0, 843, 603, 0, 0, 0, 0, 3449, 0, 210,
	0, 0, 0, 210, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 1630, 0, 1633, 0, 85, 0,
	0, 0, 0, 0, 3093, 0, 210, 3093, 210, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3093, 3093, 0,
	0, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1094, 0, 1094, 0, 1094,
	0, 0, 0, 0, 0, 0, 0, 1094, 0, 3519,
	1094, 210, 3522, 0, 210, 0, 0, 0, 0, 0,
	627, 645, 0, 1094, 1094, 1094, 0, 0, 0, 3093,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 1021, 628, 210, 210, 629, 210, 0, 210, 0,
	210, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 652, 0, 0, 0, 0, 0, 630, 0,
	0, 0, 0, 0, 0, 0, 0, 650, 0, 0,
	204, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 632, 0, 0, 633,
	654, 0, 0, 0, 597, 0, 0, 0, 0, 843,
	1094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 208, 208, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	3644, 3644, 3644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 653, 3665, 0, 0, 0, 0, 0, 0, 0,
	636, 0, 0, 208, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1094, 208, 3093, 0, 3093,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3644, 0, 0, 634, 208, 208, 208,
	208, 0, 0, 0, 0, 0, 637, 838, 0, 838,
	0, 208, 208, 0, 0, 0, 1472, 1473, 0, 1505,
	1506, 1507, 1515, 1516, 1517, 0, 638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1503, 0, 0, 0,
	0, 0, 1094, 1475, 0, 0, 0, 0, 1521, 0,
	0, 0, 0, 596, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 646, 0, 210, 0, 0, 1094, 0,
	0, 0, 0, 1474, 0, 0, 639, 0, 0, 0,
	0, 0, 1494, 0, 0, 0, 0, 208, 0, 1491,
	3644, 3762, 0, 0, 0, 644, 0, 0, 3766, 0,
	0, 208, 0, 0, 0, 0, 0, 640, 0, 0,
	657, 0, 656, 0, 0, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 820, 649, 0, 820, 820, 0, 658, 0,
	655, 0, 0, 0, 0, 0, 598, 1497, 1498, 1499,
	1500, 0, 0, 0, 0, 0, 1094, 1480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1090, 0, 0, 0, 1090, 0, 1203,
	0, 1512, 0, 1203, 1522, 0, 1094, 0, 1502, 1504,
	2093, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 838, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 1542, 0, 1489, 1490, 1542,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 1203, 1510, 0, 0, 0, 210, 1094, 0,
	0, 0, 1094, 1495, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1203, 0, 210, 0, 1203, 0, 0, 0,
	1203, 210, 0, 0, 0, 0, 0, 1015, 0, 0,
	1203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1633, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 210, 0, 210, 0, 210, 0,
	210, 210, 0, 0, 1094, 1094, 1501, 1094, 0, 0,
	1632, 0, 1028, 1203, 85, 0, 208, 0, 0, 1094,
	0, 0, 0, 0, 1496, 0, 0, 210, 0, 208,
	1632, 208, 0, 0, 0, 0, 610, 0, 0, 0,
	0, 610, 0, 210, 0, 210, 0, 0, 912, 0,
	1513, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1084, 0, 0, 0, 0, 0, 1191, 0, 210, 210,
	210, 210, 0, 210, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 1511, 0, 0, 1486, 1487,
	1493, 1514, 1492, 1488, 1290, 1485, 1483, 1484, 1476, 1477,
	1478, 1479, 1481, 1482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 0, 1315, 1315, 1315, 1191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1345,
	1346, 0, 0, 0, 0, 85, 0, 85, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1472, 1473, 0, 0, 0, 85, 0,
	0, 85, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1503, 0, 0, 0, 208, 0, 0,
	1475, 208, 0, 0, 0, 1425, 208, 0, 85, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 208, 0, 208, 0,
	1474, 0, 0, 0, 0, 0, 0, 0, 0, 1494,
	0, 0, 0, 0, 0, 0, 1491, 1090, 0, 0,
	0, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 1094, 0, 1203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2946, 0, 0, 0,
	0, 0, 0, 0, 1090, 0, 0, 0, 0, 208,
	0, 0, 208, 1094, 1497, 1498, 1499, 1500, 0, 0,
	0, 0, 0, 0, 1480, 0, 0, 0, 0, 0,
	1094, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 610, 208, 0, 208, 0, 208, 0, 208, 0,
	208, 0, 0, 0, 0, 1502, 1504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	208, 0, 2093, 0, 1489, 1490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1542, 210, 210, 210, 0, 0, 0,
	1495, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 1203, 1203, 0, 0, 1094, 0, 0, 0, 1090,
	0, 0, 0, 0, 0, 0, 1094, 0, 0, 0,
	0, 0, 0, 0, 0, 1094, 0, 0, 0, 0,
	0, 0, 0, 0, 1648, 0, 0, 210, 0, 0,
	1094, 210, 0, 0, 0, 0, 0, 1657, 0, 1191,
	0, 1094, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 1501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1094,
	1094, 0, 1015, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1015, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1203, 0, 1203, 0, 1203, 0, 0,
	0, 0, 0, 1028, 0, 1203, 0, 0, 1203, 0,
	1094, 0, 210, 1094, 210, 0, 0, 0, 0, 1028,
	0, 1203, 1203, 1203, 0, 0, 0, 0, 1091, 0,
	0, 0, 1091, 208, 1204, 0, 0, 0, 1204, 0,
	0, 603, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1492,
	1488, 0, 1485, 1483, 1484, 1476, 1477, 1478, 1479, 1481,
	1482, 0, 682, 0, 0, 0, 0, 0, 0, 85,
	85, 0, 0, 85, 1094, 0, 0, 1204, 0, 0,
	0, 0, 0, 0, 0, 664, 0, 0, 0, 0,
	0, 1094, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 85, 0, 0, 85, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 1204, 1090, 1859,
	665, 1204, 0, 0, 0, 1204, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 1204, 0, 0, 0, 0,
	0, 0, 1290, 0, 1881, 667, 1881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 0,
	0, 0, 687, 0, 0, 0, 1015, 0, 208, 838,
	0, 0, 0, 0, 0, 0, 0, 668, 1204, 0,
	0, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 85, 208, 669, 0, 0, 0,
	0, 0, 0, 1090, 0, 0, 610, 0, 0, 0,
	0, 0, 0, 0, 1094, 0, 670, 1859, 0, 671,
	1929, 0, 0, 0, 597, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 208,
	1946, 0, 0, 0, 0, 686, 0, 0, 0, 0,
	1956, 0, 1958, 0, 1960, 0, 1962, 0, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	1090, 0, 208, 0, 208, 0, 208, 0, 208, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 0, 1090, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 1094, 0,
	0, 1094, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 208, 0, 208, 210, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	1094, 210, 0, 0, 0, 1094, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 208, 208, 208,
	0, 208, 0, 208, 689, 0, 674, 0, 0, 0,
	0, 0, 0, 0, 0, 1094, 1094, 1094, 0, 0,
	0, 0, 0, 0, 1203, 0, 0, 0, 0, 0,
	0, 1094, 0, 596, 208, 0, 210, 1094, 0, 0,
	675, 0, 208, 676, 0, 0, 0, 0, 0, 684,
	0, 0, 0, 0, 1090, 0, 677, 0, 85, 1094,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1015, 1015, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 678, 685, 0,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 0,
	0, 0, 1091, 0, 0, 0, 1090, 0, 681, 0,
	1203, 0, 0, 680, 1472, 1473, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 598, 0, 1204, 0,
	0, 0, 0, 0, 1503, 0, 0, 683, 0, 0,
	0, 1475, 0, 0, 0, 0, 0, 0, 0, 1091,
	0, 2268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1474, 0, 0, 1094, 0, 1094, 0, 0, 0,
	1494, 0, 0, 0, 0, 0, 0, 1491, 0, 0,
	0, 0, 1203, 1203, 0, 1203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 2571, 0, 0,
	0, 0, 0, 0, 0, 1094, 210, 210, 1028, 0,
	1094, 0, 0, 0, 0, 1497, 1498, 1499, 1500, 0,
	0, 0, 1015, 1028, 0, 1480, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	1094, 0, 0, 1094, 0, 0, 1204, 1204, 0, 0,
	0, 0, 0, 1632, 1091, 85, 1502, 1504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1094, 0, 1489, 1490, 0, 0, 0,
	0, 0, 0, 1191, 0, 0, 0, 0, 0, 0,
	0, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1495, 0, 1094, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 0, 208, 208, 208, 0, 0, 2424, 0, 0,
	0, 1632, 0, 0, 0, 0, 0, 0, 0, 0,
	1094, 0, 0, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 1094, 0, 0, 0, 0, 2454, 0, 0,
	1315, 210, 1315, 0, 1315, 0, 1191, 1191, 1204, 0,
	1204, 0, 1204, 0, 1015, 0, 0, 0, 0, 0,
	1204, 0, 1015, 1204, 1501, 208, 0, 0, 0, 208,
	0, 0, 0, 2497, 0, 0, 1204, 1204, 1204, 0,
	0, 0, 1496, 0, 208, 0, 0, 0, 0, 2505,
	0, 2508, 1028, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 1094, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2529, 1191, 2531, 1191, 0, 2534,
	0, 0, 210, 210, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 1090,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 1315, 0, 0, 0, 0, 0, 0, 0,
	2562, 0, 0, 85, 0, 0, 0, 0, 0, 0,
	208, 1090, 208, 1091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1090, 0,
	1492, 1488, 0, 1485, 1483, 1484, 1476, 1477, 1478, 1479,
	1481, 1482, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 1094, 0, 0, 0, 0, 0, 0, 0, 1472,
	1473, 1094, 1094, 0, 0, 0, 0, 1094, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1503,
	0, 0, 0, 0, 0, 0, 1475, 0, 1091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 1094, 0,
	0, 0, 0, 0, 0, 0, 1474, 210, 0, 0,
	0, 0, 0, 1090, 0, 1494, 0, 0, 0, 0,
	0, 0, 1491, 0, 1203, 0, 0, 0, 0, 0,
	0, 0, 0, 1090, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1091, 0, 0, 1203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1203,
	0, 0, 2564, 0, 0, 0, 0, 0, 0, 1028,
	1028, 1091, 0, 0, 0, 0, 0, 2093, 0, 0,
	1497, 1498, 1499, 1500, 0, 0, 0, 0, 0, 0,
	1480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1203, 1203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1502, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1489, 1490, 0, 0, 0, 0, 0, 0, 1090, 1204,
	0, 1090, 0, 0, 0, 0, 0, 1472, 1473, 2771,
	1505, 1506, 1507, 1515, 1516, 1517, 1495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 1503, 0, 1091,
	0, 0, 0, 0, 1475, 0, 0, 0, 0, 1521,
	2808, 2810, 2424, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 0, 0, 1474, 0, 0, 0, 0, 208,
	0, 0, 1090, 1494, 0, 0, 0, 0, 0, 0,
	1491, 1091, 0, 0, 0, 1204, 0, 0, 1028, 1090,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1501,
	0, 0, 0, 2850, 0, 0, 0, 2854, 0, 85,
	0, 0, 85, 0, 0, 0, 0, 1496, 0, 0,
	0, 0, 2863, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1497, 1498,
	1499, 1500, 0, 0, 0, 0, 0, 0, 1480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1204, 1204, 0,
	1204, 0, 1512, 2906, 0, 1522, 0, 0, 0, 1502,
	1504, 0, 1204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	0, 1519, 0, 0, 0, 0, 0, 0, 1489, 1490,
	0, 0, 1090, 0, 0, 0, 0, 0, 2930, 0,
	1191, 0, 0, 0, 1510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 1492, 1488, 0, 1485, 1483,
	1484, 1476, 1477, 1478, 1479, 1481, 1482, 0, 0, 0,
	1028, 0, 0, 2942, 0, 1520, 0, 0, 1028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1632, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1203, 0, 0, 1203,
	0, 0, 0, 208, 0, 0, 0, 1501, 0, 0,
	0, 0, 0, 0, 208, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1496, 0, 0, 1090, 0,
	0, 0, 0, 1203, 0, 0, 0, 0, 0, 0,
	0, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1203, 1203, 1203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1203,
	0, 0, 0, 0, 0, 1090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1090, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1511, 0, 0, 1486,
	1487, 1493, 1514, 1492, 1488, 0, 1485, 1483, 1484, 1476,
	1477, 1478, 1479, 1481, 1482, 0, 0, 0, 0, 3237,
	0, 0, 0, 3236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1091, 0, 0, 0, 0, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1090, 1091, 1090, 0, 0, 0, 0, 0,
	3140, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 3153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1090, 0, 0, 0, 0, 1090, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1090, 0,
	0, 1203, 0, 0, 0, 0, 0, 0, 1091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1204,
	0, 0, 0, 0, 0, 0, 0, 0, 1091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1090, 0, 1204, 0, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 1204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1472,
	1473, 1090, 1505, 1506, 1507, 1515, 1516, 1517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 1503,
	0, 0, 0, 0, 0, 0, 1475, 0, 0, 0,
	0, 1521, 1204, 1204, 208, 0, 0, 0, 1090, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	1090, 0, 0, 0, 0, 0, 1474, 0, 0, 0,
	0, 0, 0, 0, 0, 1494, 0, 0, 0, 0,
	0, 0, 1491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1091, 0, 0, 1091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2424, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1203, 0, 0, 0, 0, 0, 0,
	1497, 1498, 1499, 1500, 0, 0, 0, 0, 0, 2424,
	1480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1091, 0, 0,
	0, 0, 0, 0, 1512, 0, 0, 1522, 0, 0,
	0, 1502, 1504, 0, 1091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 1519, 0, 0, 0, 0, 0, 0,
	1489, 1490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1520, 0, 1203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1203,
	1203, 0, 0, 0, 1509, 1203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1091, 0, 0,
	0, 0, 0, 0, 0, 0, 1090, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1496, 0, 0,
	0, 0, 0, 0, 0, 0, 3472, 0, 1472, 1473,
	0, 1505, 1506, 1507, 1515, 1516, 1517, 0, 0, 0,
	0, 0, 0, 1513, 0, 0, 0, 1508, 1503, 0,
	0, 0, 0, 0, 0, 1475, 0, 0, 3498, 1191,
	1521, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1204, 0, 0, 1204, 1474, 0, 0, 0, 0,
	0, 0, 0, 0, 1494, 0, 0, 0, 0, 0,
	0, 1491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1091, 0, 0, 0, 0, 1204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1511, 0,
	0, 1486, 1487, 1493, 1514, 1492, 1488, 0, 1485, 1483,
	1484, 1476, 1477, 1478, 1479, 1481, 1482, 0, 1204, 1204,
	1204, 2638, 0, 0, 0, 2639, 3558, 0, 0, 1497,
	1498, 1499, 1500, 0, 1204, 0, 0, 0, 0, 1480,
	1091, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1091, 1512, 0, 0, 1522, 0, 0, 0,
	1502, 1504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3598, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 1519, 3615, 0, 0, 0, 0, 0, 1489,
	1490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1691, 1510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1520, 0, 0, 0,
	0, 0, 0, 0, 1708, 1685, 1692, 0, 1675, 1718,
	1717, 0, 0, 1509, 1677, 1676, 0, 0, 0, 0,
	0, 0, 1728, 1729, 0, 0, 0, 1091, 0, 1091,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 1719, 0, 1715, 1714, 0, 0,
	0, 0, 0, 0, 0, 0, 1496, 0, 1713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1091, 0,
	0, 0, 0, 1091, 0, 0, 0, 0, 0, 0,
	0, 0, 1513, 0, 0, 0, 0, 0, 0, 1712,
	1710, 1711, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1091, 0, 0, 1204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1687, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1701, 1690, 1703, 1705, 1706, 1707, 1702, 0,
	1695, 0, 0, 0, 0, 0, 1091, 0, 0, 0,
	1724, 1725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1511, 0, 0,
	1486, 1487, 1493, 1514, 1492, 1488, 1091, 1485, 1483, 1484,
	1476, 1477, 1478, 1479, 1481, 1482, 0, 1679, 0, 0,
	2115, 0, 0, 0, 2116, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 1688, 0,
	1689, 0, 0, 1091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1091, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 1698, 1696, 1697, 1700,
	1699, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1680, 1681, 1683, 1684, 0, 0, 0, 1204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1704, 1682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1678, 0, 0, 1720, 1721,
	1722, 1723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1686,
	0, 0, 0, 0, 1693, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1204, 1204, 0, 0, 0, 0,
	1204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 1095, 223, 1096, 1097,
	1098, 1091, 1099, 486, 1100, 1101, 1102, 1103, 224, 226,
	225, 227, 228, 487, 488, 229, 489, 232, 230, 231,
	490, 1104, 233, 234, 235, 236, 237, 238, 239, 1105,
	1106, 240, 491, 492, 493, 1107, 241, 494, 1108, 1093,
	1109, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 1110, 252, 0, 253, 254, 255, 1111, 256,
	965, 257, 258, 1112, 1113, 1115, 1114, 1116, 1117, 1118,
	259, 260, 261, 262, 263, 264, 495, 496, 1119, 265,
	1120, 267, 266, 1121, 268, 1122, 1123, 269, 270, 271,
	1124, 272, 1125, 273, 274, 1126, 275, 497, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 498, 499, 1127,
	215, 1128, 0, 0, 0, 0, 286, 287, 288, 500,
	289, 290, 0, 291, 1129, 292, 1130, 1131, 966, 293,
	294, 1132, 295, 501, 1133, 502, 296, 1134, 297, 298,
	299, 300, 503, 504, 505, 355, 968, 301, 302, 1135,
	303, 304, 306, 0, 0, 216, 305, 307, 314, 1136,
	967, 308, 506, 310, 309, 311, 312, 313, 507, 1137,
	508, 1138, 315, 969, 509, 970, 316, 317, 318, 971,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 1139,
	327, 326, 1140, 328, 510, 972, 329, 330, 973, 1141,
	331, 332, 1142, 1143, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 974,
	347, 348, 351, 352, 350, 975, 349, 1144, 217, 976,
	353, 1145, 511, 354, 512, 356, 357, 1146, 358, 359,
	360, 1147, 1148, 362, 363, 364, 1149, 1150, 365, 366,
	513, 977, 367, 978, 514, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 1151, 376, 377, 515, 378, 516,
	379, 380, 1152, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 517, 389, 390, 1153, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	1154, 404, 979, 405, 406, 407, 408, 518, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 1155, 426,
	427, 421, 423, 424, 425, 422, 428, 429, 430, 1156,
	431, 411, 412, 432, 433, 980, 434, 435, 519, 436,
	437, 1157, 438, 439, 440, 441, 413, 442, 446, 447,
	443, 444, 445, 520, 1158, 449, 450, 448, 1159, 451,
	452, 453, 454, 455, 280, 456, 1160, 457, 521, 522,
	523, 524, 1161, 464, 1162, 458, 459, 525, 460, 526,
	1163, 461, 462, 463, 0, 465, 466, 1164, 1165, 467,
	468, 469, 471, 472, 470, 474, 1166, 475, 1167, 473,
	476, 477, 478, 527, 528, 529, 1168, 480, 479, 530,
	1169, 1170, 1171, 1172, 481, 482, 531, 483, 484, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1088, 0, 0, 0, 0, 0, 0, 0,
	2246, 0, 0, 0, 0, 0, 0, 0, 2247, 218,
	219, 220, 221, 222, 1095, 223, 1096, 1097, 1098, 0,
	1099, 486, 1100, 1101, 1102, 1103, 224, 226, 225, 227,
	228, 487, 488, 229, 489, 232, 230, 231, 490, 1104,
	233, 234, 235, 236, 237, 238, 239, 1105, 1106, 240,
	491, 492, 493, 1107, 241, 494, 1108, 1093, 1109, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	1110, 252, 0, 253, 254, 255, 1111, 256, 965, 257,
	258, 1112, 1113, 1115, 1114, 1116, 1117, 1118, 259, 260,
	261, 262, 263, 264, 495, 496, 1119, 265, 1120, 267,
	266, 1121, 268, 1122, 1123, 269, 270, 271, 1124, 272,
	1125, 273, 274, 1126, 275, 497, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 498, 499, 1127, 215, 1128,
	0, 0, 0, 0, 286, 287, 288, 500, 289, 290,
	0, 291, 1129, 292, 1130, 1131, 966, 293, 294, 1132,
	295, 501, 1133, 502, 296, 1134, 297, 298, 299, 300,
	503, 504, 505, 355, 968, 301, 302, 1135, 303, 304,
	306, 0, 0, 216, 305, 307, 314, 1136, 967, 308,
	506, 310, 309, 311, 312, 313, 507, 1137, 508, 1138,
	315, 969, 509, 970, 316, 317, 318, 971, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 1139, 327, 326,
	1140, 328, 510, 972, 329, 330, 973, 1141, 331, 332,
	1142, 1143, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 974, 347, 348,
	351, 352, 350, 975, 349, 1144, 217, 976, 353, 1145,
	511, 354, 512, 356, 357, 1146, 358, 359, 360, 1147,
	1148, 362, 363, 364, 1149, 1150, 365, 366, 513, 977,
	367, 978, 514, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 1151, 376, 377, 515, 378, 516, 379, 380,
	1152, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	517, 389, 390, 1153, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 1154, 404,
	979, 405, 406, 407, 408, 518, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 1155, 426, 427, 421,
	423, 424, 425, 422, 428, 429, 430, 1156, 431, 411,
	412, 432, 433, 980, 434, 435, 519, 436, 437, 1157,
	438, 439, 440, 441, 413, 442, 446, 447, 443, 444,
	445, 520, 1158, 449, 450, 448, 1159, 451, 452, 453,
	454, 455, 280, 456, 1160, 457, 521, 522, 523, 524,
	1161, 464, 1162, 458, 459, 525, 460, 526, 1163, 461,
	462, 463, 0, 465, 466, 1164, 1165, 467, 468, 469,
	471, 472, 470, 474, 1166, 475, 1167, 473, 476, 477,
	478, 527, 528, 529, 1168, 480, 479, 530, 1169, 1170,
	1171, 1172, 481, 482, 531, 483, 484, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1088, 0,
	0, 0, 0, 2968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2970, 218, 219, 220, 221, 222,
	1095, 223, 1096, 1097, 1098, 0, 1099, 486, 1100, 1101,
	1102, 1103, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 1104, 233, 234, 235, 236,
	237, 238, 239, 1105, 1106, 240, 491, 492, 493, 1107,
	241, 494, 1108, 1093, 1109, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 1110, 252, 0, 253,
	254, 255, 1111, 256, 965, 257, 258, 1112, 1113, 1115,
	1114, 1116, 1117, 1118, 259, 260, 261, 262, 263, 264,
	495, 496, 1119, 265, 1120, 267, 266, 1121, 268, 1122,
	1123, 269, 270, 271, 1124, 272, 1125, 273, 274, 1126,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 1127, 215, 1128, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 1129, 292,
	1130, 1131, 966, 293, 294, 1132, 295, 501, 1133, 502,
	296, 1134, 297, 298, 299, 300, 503, 504, 505, 355,
	968, 301, 302, 1135, 303, 304, 306, 0, 0, 216,
	305, 307, 314, 1136, 967, 308, 506, 310, 309, 311,
	312, 313, 507, 1137, 508, 1138, 315, 969, 509, 970,
	316, 317, 318, 971, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 1139, 327, 326, 1140, 328, 510, 972,
	329, 330, 973, 1141, 331, 332, 1142, 1143, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 974, 347, 348, 351, 352, 350, 975,
	349, 1144, 217, 976, 353, 1145, 511, 354, 512, 356,
	357, 1146, 358, 359, 360, 1147, 1148, 362, 363, 364,
	1149, 1150, 365, 366, 513, 977, 367, 978, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 1151, 376,
	377, 515, 378, 516, 379, 380, 1152, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 1153,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 1154, 404, 979, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 1155, 426, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 1156, 431, 411, 412, 432, 433, 980,
	434, 435, 519, 436, 437, 1157, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 1158, 449,
	450, 448, 1159, 451, 452, 453, 454, 455, 280, 456,
	1160, 457, 521, 522, 523, 524, 1161, 464, 1162, 458,
	459, 525, 460, 526, 1163, 461, 462, 463, 0, 465,
	466, 1164, 1165, 467, 468, 469, 471, 472, 470, 474,
	1166, 475, 1167, 473, 476, 477, 478, 527, 528, 529,
	1168, 480, 479, 530, 1169, 1170, 1171, 1172, 481, 482,
	531, 483, 484, 485, 0, 0, 0, 0, 1088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3259, 218, 219, 220, 221, 222,
	1095, 223, 1096, 1097, 1098, 0, 1099, 486, 1100, 1101,
	1102, 1103, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 1104, 233, 234, 235, 236,
	237, 238, 239, 1105, 1106, 240, 491, 492, 493, 1107,
	241, 494, 1108, 1093, 1109, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 1110, 252, 0, 253,
	254, 255, 1111, 256, 965, 257, 258, 1112, 1113, 1115,
	1114, 1116, 1117, 1118, 259, 260, 261, 262, 263, 264,
	495, 496, 1119, 265, 1120, 267, 266, 1121, 268, 1122,
	1123, 269, 270, 271, 1124, 272, 1125, 273, 274, 1126,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 1127, 215, 1128, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 1129, 292,
	1130, 1131, 966, 293, 294, 1132, 295, 501, 1133, 502,
	296, 1134, 297, 298, 299, 300, 503, 504, 505, 355,
	968, 301, 302, 1135, 303, 304, 306, 0, 0, 216,
	305, 307, 314, 1136, 967, 308, 506, 310, 309, 311,
	312, 313, 507, 1137, 508, 1138, 315, 969, 509, 970,
	316, 317, 318, 971, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 1139, 327, 326, 1140, 328, 510, 972,
	329, 330, 973, 1141, 331, 332, 1142, 1143, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 974, 347, 348, 351, 352, 350, 975,
	349, 1144, 217, 976, 353, 1145, 511, 354, 512, 356,
	357, 1146, 358, 359, 360, 1147, 1148, 362, 363, 364,
	1149, 1150, 365, 366, 513, 977, 367, 978, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 1151, 376,
	377, 515, 378, 516, 379, 380, 1152, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 1153,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 1154, 404, 979, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 1155, 426, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 1156, 431, 411, 412, 432, 433, 980,
	434, 435, 519, 436, 437, 1157, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 1158, 449,
	450, 448, 1159, 451, 452, 453, 454, 455, 280, 456,
	1160, 457, 521, 522, 523, 524, 1161, 464, 1162, 458,
	459, 525, 460, 526, 1163, 461, 462, 463, 0, 465,
	466, 1164, 1165, 467, 468, 469, 471, 472, 470, 474,
	1166, 475, 1167, 473, 476, 477, 478, 527, 528, 529,
	1168, 480, 479, 530, 1169, 1170, 1171, 1172, 481, 482,
	531, 483, 484, 485, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3387,
	0, 218, 219, 220, 221, 222, 1095, 223, 1096, 1097,
	1098, 0, 1099, 486, 1100, 1101, 1102, 1103, 224, 226,
	225, 227, 228, 487, 488, 229, 489, 232, 230, 231,
	490, 1104, 233, 234, 235, 236, 237, 238, 239, 1105,
	1106, 240, 491, 492, 493, 1107, 241, 494, 1108, 1093,
	1109, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 1110, 252, 0, 253, 254, 255, 1111, 256,
	965, 257, 258, 1112, 1113, 1115, 1114, 1116, 1117, 1118,
	259, 260, 261, 262, 263, 264, 495, 496, 1119, 265,
	1120, 267, 266, 1121, 268, 1122, 1123, 269, 270, 271,
	1124, 272, 1125, 273, 274, 1126, 275, 497, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 498, 499, 1127,
	215, 1128, 0, 0, 0, 0, 286, 287, 288, 500,
	289, 290, 0, 291, 1129, 292, 1130, 1131, 966, 293,
	294, 1132, 295, 501, 1133, 502, 296, 1134, 297, 298,
	299, 300, 503, 504, 505, 355, 968, 301, 302, 1135,
	303, 304, 306, 0, 0, 216, 305, 307, 314, 1136,
	967, 308, 506, 310, 309, 311, 312, 313, 507, 1137,
	508, 1138, 315, 969, 509, 970, 316, 317, 318, 971,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 1139,
	327, 326, 1140, 328, 510, 972, 329, 330, 973, 1141,
	331, 332, 1142, 1143, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 974,
	347, 348, 351, 352, 350, 975, 349, 1144, 217, 976,
	353, 1145, 511, 354, 512, 356, 357, 1146, 358, 359,
	360, 1147, 1148, 362, 363, 364, 1149, 1150, 365, 366,
	513, 977, 367, 978, 514, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 1151, 376, 377, 515, 378, 516,
	379, 380, 1152, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 517, 389, 390, 1153, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	1154, 404, 979, 405, 406, 407, 408, 518, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 1155, 426,
	427, 421, 423, 424, 425, 422, 428, 429, 430, 1156,
	431, 411, 412, 432, 433, 980, 434, 435, 519, 436,
	437, 1157, 438, 439, 440, 441, 413, 442, 446, 447,
	443, 444, 445, 520, 1158, 449, 450, 448, 1159, 451,
	452, 453, 454, 455, 280, 456, 1160, 457, 521, 522,
	523, 524, 1161, 464, 1162, 458, 459, 525, 460, 526,
	1163, 461, 462, 463, 0, 465, 466, 1164, 1165, 467,
	468, 469, 471, 472, 470, 474, 1166, 475, 1167, 473,
	476, 477, 478, 527, 528, 529, 1168, 480, 479, 530,
	1169, 1170, 1171, 1172, 481, 482, 531, 483, 484, 485,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3312, 0, 218, 219, 220,
	221, 222, 1095, 223, 1096, 1097, 1098, 0, 1099, 486,
	1100, 1101, 1102, 1103, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 1104, 233, 234,
	235, 236, 237, 238, 239, 1105, 1106, 240, 491, 492,
	493, 1107, 241, 494, 1108, 1093, 1109, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 1110, 252,
	0, 253, 254, 255, 1111, 256, 965, 257, 258, 1112,
	1113, 1115, 1114, 1116, 1117, 1118, 259, 260, 261, 262,
	263, 264, 495, 496, 1119, 265, 1120, 267, 266, 1121,
	268, 1122, 1123, 269, 270, 271, 1124, 272, 1125, 273,
	274, 1126, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 1127, 215, 1128, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	1129, 292, 1130, 1131, 966, 293, 294, 1132, 295, 501,
	1133, 502, 296, 1134, 297, 298, 299, 300, 503, 504,
	505, 355, 968, 301, 302, 1135, 303, 304, 306, 0,
	0, 216, 305, 307, 314, 1136, 967, 308, 506, 310,
	309, 311, 312, 313, 507, 1137, 508, 1138, 315, 969,
	509, 970, 316, 317, 318, 971, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 1139, 327, 326, 1140, 328,
	510, 972, 329, 330, 973, 1141, 331, 332, 1142, 1143,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 974, 347, 348, 351, 352,
	350, 975, 349, 1144, 217, 976, 353, 1145, 511, 354,
	512, 356, 357, 1146, 358, 359, 360, 1147, 1148, 362,
	363, 364, 1149, 1150, 365, 366, 513, 977, 367, 978,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	1151, 376, 377, 515, 378, 516, 379, 380, 1152, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 389,
	390, 1153, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 1154, 404, 979, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 1155, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 1156, 431, 411, 412, 432,
	433, 980, 434, 435, 519, 436, 437, 1157, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	1158, 449, 450, 448, 1159, 451, 452, 453, 454, 455,
	280, 456, 1160, 457, 521, 522, 523, 524, 1161, 464,
	1162, 458, 459, 525, 460, 526, 1163, 461, 462, 463,
	0, 465, 466, 1164, 1165, 467, 468, 469, 471, 472,
	470, 474, 1166, 475, 1167, 473, 476, 477, 478, 527,
	528, 529, 1168, 480, 479, 530, 1169, 1170, 1171, 1172,
	481, 482, 531, 483, 484, 485, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3193, 0, 218, 219, 220, 221, 222, 1095, 223,
	1096, 1097, 1098, 0, 1099, 486, 1100, 1101, 1102, 1103,
	224, 226, 225, 227, 228, 487, 488, 229, 489, 232,
	230, 231, 490, 1104, 233, 234, 235, 236, 237, 238,
	239, 1105, 1106, 240, 491, 492, 493, 1107, 241, 494,
	1108, 1093, 1109, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 1110, 252, 0, 253, 254, 255,
	1111, 256, 965, 257, 258, 1112, 1113, 1115, 1114, 1116,
	1117, 1118, 259, 260, 261, 262, 263, 264, 495, 496,
	1119, 265, 1120, 267, 266, 1121, 268, 1122, 1123, 269,
	270, 271, 1124, 272, 1125, 273, 274, 1126, 275, 497,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 498,
	499, 1127, 215, 1128, 0, 0, 0, 0, 286, 287,
	288, 500, 289, 290, 0, 291, 1129, 292, 1130, 1131,
	966, 293, 294, 1132, 295, 501, 1133, 502, 296, 1134,
	297, 298, 299, 300, 503, 504, 505, 355, 968, 301,
	302, 1135, 303, 304, 306, 0, 0, 216, 305, 307,
	314, 1136, 967, 308, 506, 310, 309, 311, 312, 313,
	507, 1137, 508, 1138, 315, 969, 509, 970, 316, 317,
	318, 971, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 1139, 327, 326, 1140, 328, 510, 972, 329, 330,
	973, 1141, 331, 332, 1142, 1143, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 974, 347, 348, 351, 352, 350, 975, 349, 1144,
	217, 976, 353, 1145, 511, 354, 512, 356, 357, 1146,
	358, 359, 360, 1147, 1148, 362, 363, 364, 1149, 1150,
	365, 366, 513, 977, 367, 978, 514, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 1151, 376, 377, 515,
	378, 516, 379, 380, 1152, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 517, 389, 390, 1153, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 1154, 404, 979, 405, 406, 407, 408, 518,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	1155, 426, 427, 421, 423, 424, 425, 422, 428, 429,
	430, 1156, 431, 411, 412, 432, 433, 980, 434, 435,
	519, 436, 437, 1157, 438, 439, 440, 441, 413, 442,
	446, 447, 443, 444, 445, 520, 1158, 449, 450, 448,
	1159, 451, 452, 453, 454, 455, 280, 456, 1160, 457,
	521, 522, 523, 524, 1161, 464, 1162, 458, 459, 525,
	460, 526, 1163, 461, 462, 463, 0, 465, 466, 1164,
	1165, 467, 468, 469, 471, 472, 470, 474, 1166, 475,
	1167, 473, 476, 477, 478, 527, 528, 529, 1168, 480,
	479, 530, 1169, 1170, 1171, 1172, 481, 482, 531, 483,
	484, 485, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2986, 0, 218,
	219, 220, 221, 222, 1095, 223, 1096, 1097, 1098, 0,
	1099, 486, 1100, 1101, 1102, 1103, 224, 226, 225, 227,
	228, 487, 488, 229, 489, 232, 230, 231, 490, 1104,
	233, 234, 235, 236, 237, 238, 239, 1105, 1106, 240,
	491, 492, 493, 1107, 241, 494, 1108, 1093, 1109, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	1110, 252, 0, 253, 254, 255, 1111, 256, 965, 257,
	258, 1112, 1113, 1115, 1114, 1116, 1117, 1118, 259, 260,
	261, 262, 263, 264, 495, 496, 1119, 265, 1120, 267,
	266, 1121, 268, 1122, 1123, 269, 270, 271, 1124, 272,
	1125, 273, 274, 1126, 275, 497, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 498, 499, 1127, 215, 1128,
	0, 0, 0, 0, 286, 287, 288, 500, 289, 290,
	0, 291, 1129, 292, 1130, 1131, 966, 293, 294, 1132,
	295, 501, 1133, 502, 296, 1134, 297, 298, 299, 300,
	503, 504, 505, 355, 968, 301, 302, 1135, 303, 304,
	306, 0, 0, 216, 305, 307, 314, 1136, 967, 308,
	506, 310, 309, 311, 312, 313, 507, 1137, 508, 1138,
	315, 969, 509, 970, 316, 317, 318, 971, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 1139, 327, 326,
	1140, 328, 510, 972, 329, 330, 973, 1141, 331, 332,
	1142, 1143, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 974, 347, 348,
	351, 352, 350, 975, 349, 1144, 217, 976, 353, 1145,
	511, 354, 512, 356, 357, 1146, 358, 359, 360, 1147,
	1148, 362, 363, 364, 1149, 1150, 365, 366, 513, 977,
	367, 978, 514, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 1151, 376, 377, 515, 378, 516, 379, 380,
	1152, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	517, 389, 390, 1153, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 1154, 404,
	979, 405, 406, 407, 408, 518, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 1155, 426, 427, 421,
	423, 424, 425, 422, 428, 429, 430, 1156, 431, 411,
	412, 432, 433, 980, 434, 435, 519, 436, 437, 1157,
	438, 439, 440, 441, 413, 442, 446, 447, 443, 444,
	445, 520, 1158, 449, 450, 448, 1159, 451, 452, 453,
	454, 455, 280, 456, 1160, 457, 521, 522, 523, 524,
	1161, 464, 1162, 458, 459, 525, 460, 526, 1163, 461,
	462, 463, 0, 465, 466, 1164, 1165, 467, 468, 469,
	471, 472, 470, 474, 1166, 475, 1167, 473, 476, 477,
	478, 527, 528, 529, 1168, 480, 479, 530, 1169, 1170,
	1171, 1172, 481, 482, 531, 483, 484, 485, 1088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2837, 0, 218, 219, 220, 221, 222,
	1095, 223, 1096, 1097, 1098, 0, 1099, 486, 1100, 1101,
	1102, 1103, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 1104, 233, 234, 235, 236,
	237, 238, 239, 1105, 1106, 240, 491, 492, 493, 1107,
	241, 494, 1108, 1093, 1109, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 1110, 252, 0, 253,
	254, 255, 1111, 256, 965, 257, 258, 1112, 1113, 1115,
	1114, 1116, 1117, 1118, 259, 260, 261, 262, 263, 264,
	495, 496, 1119, 265, 1120, 267, 266, 1121, 268, 1122,
	1123, 269, 270, 271, 1124, 272, 1125, 273, 274, 1126,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 1127, 215, 1128, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 1129, 292,
	1130, 1131, 966, 293, 294, 1132, 295, 501, 1133, 502,
	296, 1134, 297, 298, 299, 300, 503, 504, 505, 355,
	968, 301, 302, 1135, 303, 304, 306, 0, 0, 216,
	305, 307, 314, 1136, 967, 308, 506, 310, 309, 311,
	312, 313, 507, 1137, 508, 1138, 315, 969, 509, 970,
	316, 317, 318, 971, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 1139, 327, 326, 1140, 328, 510, 972,
	329, 330, 973, 1141, 331, 332, 1142, 1143, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 974, 347, 348, 351, 352, 350, 975,
	349, 1144, 217, 976, 353, 1145, 511, 354, 512, 356,
	357, 1146, 358, 359, 360, 1147, 1148, 362, 363, 364,
	1149, 1150, 365, 366, 513, 977, 367, 978, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 1151, 376,
	377, 515, 378, 516, 379, 380, 1152, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 1153,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 1154, 404, 979, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 1155, 426, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 1156, 431, 411, 412, 432, 433, 980,
	434, 435, 519, 436, 437, 1157, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 1158, 449,
	450, 448, 1159, 451, 452, 453, 454, 455, 280, 456,
	1160, 457, 521, 522, 523, 524, 1161, 464, 1162, 458,
	459, 525, 460, 526, 1163, 461, 462, 463, 0, 465,
	466, 1164, 1165, 467, 468, 469, 471, 472, 470, 474,
	1166, 475, 1167, 473, 476, 477, 478, 527, 528, 529,
	1168, 480, 479, 530, 1169, 1170, 1171, 1172, 481, 482,
	531, 483, 484, 485, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2139,
	0, 218, 219, 220, 221, 222, 1095, 223, 1096, 1097,
	1098, 0, 1099, 486, 1100, 1101, 1102, 1103, 224, 226,
	225, 227, 228, 487, 488, 229, 489, 232, 230, 231,
	490, 1104, 233, 234, 235, 236, 237, 238, 239, 1105,
	1106, 240, 491, 492, 493, 1107, 241, 494, 1108, 1093,
	1109, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 1110, 252, 0, 253, 254, 255, 1111, 256,
	965, 257, 258, 1112, 1113, 1115, 1114, 1116, 1117, 1118,
	259, 260, 261, 262, 263, 264, 495, 496, 1119, 265,
	1120, 267, 266, 1121, 268, 1122, 1123, 269, 270, 271,
	1124, 272, 1125, 273, 274, 1126, 275, 497, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 498, 499, 1127,
	215, 1128, 0, 0, 0, 0, 286, 287, 288, 500,
	289, 290, 0, 291, 1129, 292, 1130, 1131, 966, 293,
	294, 1132, 295, 501, 1133, 502, 296, 1134, 297, 298,
	299, 300, 503, 504, 505, 355, 968, 301, 302, 1135,
	303, 304, 306, 0, 0, 216, 305, 307, 314, 1136,
	967, 308, 506, 310, 309, 311, 312, 313, 507, 1137,
	508, 1138, 315, 969, 509, 970, 316, 317, 318, 971,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 1139,
	327, 326, 1140, 328, 510, 972, 329, 330, 973, 1141,
	331, 332, 1142, 1143, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 974,
	347, 348, 351, 352, 350, 975, 349, 1144, 217, 976,
	353, 1145, 511, 354, 512, 356, 357, 1146, 358, 359,
	360, 1147, 1148, 362, 363, 364, 1149, 1150, 365, 366,
	513, 977, 367, 978, 514, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 1151, 376, 377, 515, 378, 516,
	379, 380, 1152, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 517, 389, 390, 1153, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	1154, 404, 979, 405, 406, 407, 408, 518, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 1155, 426,
	427, 421, 423, 424, 425, 422, 428, 429, 430, 1156,
	431, 411, 412, 432, 433, 980, 434, 435, 519, 436,
	437, 1157, 438, 439, 440, 441, 413, 442, 446, 447,
	443, 444, 445, 520, 1158, 449, 450, 448, 1159, 451,
	452, 453, 454, 455, 280, 456, 1160, 457, 521, 522,
	523, 524, 1161, 464, 1162, 458, 459, 525, 460, 526,
	1163, 461, 462, 463, 0, 465, 466, 1164, 1165, 467,
	468, 469, 471, 472, 470, 474, 1166, 475, 1167, 473,
	476, 477, 478, 527, 528, 529, 1168, 480, 479, 530,
	1169, 1170, 1171, 1172, 481, 482, 531, 483, 484, 485,
	1185, 0, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1835, 0, 0, 0, 218,
	219, 220, 221, 222, 1095, 223, 1096, 1097, 1098, 0,
	1099, 486, 1100, 1101, 1102, 1103, 224, 226, 225, 227,
	228, 487, 488, 229, 489, 232, 230, 231, 490, 1104,
	233, 234, 235, 236, 237, 238, 239, 1105, 1106, 240,
	491, 492, 493, 1107, 241, 494, 1108, 1093, 1109, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	1110, 252, 0, 253, 254, 255, 1111, 256, 965, 257,
	258, 1112, 1113, 1115, 1114, 1116, 1117, 1118, 259, 260,
	261, 262, 263, 264, 495, 496, 1119, 265, 1120, 267,
	266, 1121, 268, 1122, 1123, 269, 270, 271, 1124, 272,
	1125, 273, 274, 1126, 275, 497, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 498, 499, 1127, 215, 1128,
	0, 0, 0, 0, 286, 287, 288, 500, 289, 290,
	0, 291, 1129, 292, 1130, 1131, 966, 293, 294, 1132,
	295, 501, 1133, 502, 296, 1134, 297, 298, 299, 300,
	503, 504, 505, 355, 968, 301, 302, 1135, 303, 304,
	306, 0, 0, 216, 305, 307, 314, 1136, 967, 308,
	506, 310, 309, 311, 312, 313, 507, 1137, 508, 1138,
	315, 969, 509, 970, 316, 317, 318, 971, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 1139, 327, 326,
	1140, 328, 510, 972, 329, 330, 973, 1141, 331, 332,
	1142, 1143, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 974, 347, 348,
	351, 352, 350, 975, 349, 1144, 217, 976, 353, 1145,
	511, 354, 512, 356, 357, 1146, 358, 359, 360, 1147,
	1148, 362, 363, 364, 1149, 1150, 365, 366, 513, 977,
	367, 978, 514, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 1151, 376, 377, 515, 378, 516, 379, 380,
	1152, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	517, 389, 390, 1153, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 1154, 404,
	979, 405, 406, 407, 408, 518, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 1155, 426, 427, 421,
	423, 424, 425, 422, 428, 429, 430, 1156, 431, 411,
	412, 432, 433, 980, 434, 435, 519, 436, 437, 1157,
	438, 439, 440, 441, 413, 442, 446, 447, 443, 444,
	445, 520, 1158, 449, 450, 448, 1159, 451, 452, 453,
	454, 455, 280, 456, 1160, 457, 521, 522, 523, 524,
	1161, 464, 1162, 458, 459, 525, 460, 526, 1163, 461,
	462, 463, 0, 465, 466, 1164, 1165, 467, 468, 469,
	471, 472, 470, 474, 1166, 475, 1167, 473, 476, 477,
	478, 527, 528, 529, 1168, 480, 479, 530, 1169, 1170,
	1171, 1172, 481, 482, 531, 483, 484, 485, 1085, 0,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 219, 220,
	221, 222, 1095, 223, 1096, 1097, 1098, 0, 1099, 486,
	1100, 1101, 1102, 1103, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 1104, 233, 234,
	235, 236, 237, 238, 239, 1105, 1106, 240, 491, 492,
	493, 1107, 241, 494, 1108, 1093, 1109, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 1110, 252,
	0, 253, 254, 255, 1111, 256, 965, 257, 258, 1112,
	1113, 1115, 1114, 1116, 1117, 1118, 259, 260, 261, 262,
	263, 264, 495, 496, 1119, 265, 1120, 267, 266, 1121,
	268, 1122, 1123, 269, 270, 271, 1124, 272, 1125, 273,
	274, 1126, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 1127, 215, 1128, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	1129, 292, 1130, 1131, 966, 293, 294, 1132, 295, 501,
	1133, 502, 296, 1134, 297, 298, 299, 300, 503, 504,
	505, 355, 968, 301, 302, 1135, 303, 304, 306, 0,
	0, 216, 305, 307, 314, 1136, 967, 308, 506, 310,
	309, 311, 312, 313, 507, 1137, 508, 1138, 315, 969,
	509, 970, 316, 317, 318, 971, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 1139, 327, 326, 1140, 328,
	510, 972, 329, 330, 973, 1141, 331, 332, 1142, 1143,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 974, 347, 348, 351, 352,
	350, 975, 349, 1144, 217, 976, 353, 1145, 511, 354,
	512, 356, 357, 1146, 358, 359, 360, 1147, 1148, 362,
	363, 364, 1149, 1150, 365, 366, 513, 977, 367, 978,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	1151, 376, 377, 515, 378, 516, 379, 380, 1152, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 389,
	390, 1153, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 1154, 404, 979, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 1155, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 1156, 431, 411, 412, 432,
	433, 980, 434, 435, 519, 436, 437, 1157, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	1158, 449, 450, 448, 1159, 451, 452, 453, 454, 455,
	280, 456, 1160, 457, 521, 522, 523, 524, 1161, 464,
	1162, 458, 459, 525, 460, 526, 1163, 461, 462, 463,
	0, 465, 466, 1164, 1165, 467, 468, 469, 471, 472,
	470, 474, 1166, 475, 1167, 473, 476, 477, 478, 527,
	528, 529, 1168, 480, 479, 530, 1169, 1170, 1171, 1172,
	481, 482, 531, 483, 484, 485, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 219, 220, 221, 222, 1095, 223,
	1096, 1097, 1098, 0, 1099, 486, 1100, 1101, 1102, 1103,
	224, 226, 225, 227, 228, 487, 488, 229, 489, 232,
	230, 231, 490, 1104, 233, 234, 235, 236, 237, 238,
	239, 1105, 1106, 240, 491, 492, 493, 1107, 241, 494,
	1108, 1093, 1109, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 1110, 252, 0, 253, 254, 255,
	1111, 256, 965, 257, 258, 1112, 1113, 1115, 1114, 1116,
	1117, 1118, 259, 260, 261, 262, 263, 264, 495, 496,
	1119, 265, 1120, 267, 266, 1121, 268, 1122, 1123, 269,
	270, 271, 1124, 272, 1125, 273, 274, 1126, 275, 497,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 498,
	499, 1127, 215, 1128, 0, 0, 0, 0, 286, 287,
	288, 500, 289, 290, 0, 291, 1129, 292, 1130, 1131,
	966, 293, 294, 1132, 295, 501, 1133, 502, 296, 1134,
	297, 298, 299, 300, 503, 504, 505, 355, 968, 301,
	302, 1135, 303, 304, 306, 0, 0, 216, 305, 307,
	314, 1136, 967, 308, 506, 310, 309, 311, 312, 313,
	507, 1137, 508, 1138, 315, 969, 509, 970, 316, 317,
	318, 971, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 1139, 327, 326, 1140, 328, 510, 972, 329, 330,
	973, 1141, 331, 332, 1142, 1143, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 974, 347, 348, 351, 352, 350, 975, 349, 1144,
	217, 976, 353, 1145, 511, 354, 512, 356, 357, 1146,
	358, 359, 360, 1147, 1148, 362, 363, 364, 1149, 1150,
	365, 366, 513, 977, 367, 978, 514, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 1151, 376, 377, 515,
	378, 516, 379, 380, 1152, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 517, 389, 390, 1153, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 1154, 404, 979, 405, 406, 407, 408, 518,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	1155, 426, 427, 421, 423, 424, 425, 422, 428, 429,
	430, 1156, 431, 411, 412, 432, 433, 980, 434, 435,
	519, 436, 437, 1157, 438, 439, 440, 441, 413, 442,
	446, 447, 443, 444, 445, 520, 1158, 449, 450, 448,
	1159, 451, 452, 453, 454, 455, 280, 456, 1160, 457,
	521, 522, 523, 524, 1161, 464, 1162, 458, 459, 525,
	460, 526, 1163, 461, 462, 463, 0, 465, 466, 1164,
	1165, 467, 468, 469, 471, 472, 470, 474, 1166, 475,
	1167, 473, 476, 477, 478, 527, 528, 529, 1168, 480,
	479, 530, 1169, 1170, 1171, 1172, 481, 482, 531, 483,
	484, 485, 2114, 0, 905, 863, 864, 865, 861, 862,
	874, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 2111, 223, 0, 0,
	0, 0, 0, 956, 879, 0, 0, 0, 224, 226,
	225, 227, 228, 487, 920, 899, 931, 232, 889, 930,
	929, 0, 233, 234, 891, 890, 237, 238, 239, 881,
	955, 240, 992, 993, 493, 0, 241, 962, 0, 943,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	965, 257, 258, 946, 944, 945, 952, 948, 947, 951,
	259, 260, 261, 262, 934, 264, 927, 926, 852, 265,
	0, 267, 266, 0, 268, 2112, 0, 269, 925, 271,
	0, 272, 0, 273, 274, 0, 275, 858, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 983, 984, 870,
	215, 0, 0, 0, 0, 0, 286, 287, 288, 924,
	922, 923, 0, 291, 0, 292, 0, 0, 966, 293,
	294, 0, 295, 990, 0, 880, 296, 0, 297, 298,
	299, 300, 957, 958, 961, 355, 968, 301, 302, 0,
	303, 304, 901, 0, 0, 216, 305, 307, 314, 0,
	967, 308, 913, 904, 915, 917, 918, 919, 914, 0,
	906, 0, 315, 969, 959, 970, 316, 317, 318, 971,
	939, 940, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 991, 972, 329, 330, 973, 0,
	331, 332, 950, 949, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 893, 344, 974,
	347, 348, 351, 352, 350, 975, 349, 849, 217, 976,
	353, 871, 960, 354, 928, 356, 357, 0, 902, 359,
	903, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 977, 367, 978, 985, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 986, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 921, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 979, 405, 406, 407, 408, 859, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 0, 426,
	427, 894, 895, 897, 898, 422, 428, 429, 430, 953,
	431, 411, 412, 432, 433, 980, 434, 435, 916, 896,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 964,
	443, 444, 445, 987, 0, 449, 450, 448, 0, 451,
	452, 453, 454, 455, 280, 892, 0, 457, 935, 936,
	937, 938, 0, 464, 0, 458, 459, 988, 460, 989,
	869, 461, 462, 463, 0, 465, 466, 0, 853, 467,
	468, 469, 471, 472, 470, 474, 954, 475, 0, 900,
	476, 477, 478, 527, 932, 982, 2110, 480, 479, 530,
	0, 0, 0, 0, 481, 482, 531, 483, 484, 485,
	850, 0, 0, 0, 0, 0, 848, 0, 0, 0,
	0, 0, 0, 846, 847, 2113, 0, 0, 0, 0,
	0, 0, 875, 2109, 0, 839, 873, 905, 863, 864,
	865, 861, 862, 874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 219, 220, 221, 222, 0,
	223, 0, 0, 0, 0, 0, 956, 879, 0, 0,
	0, 224, 226, 225, 227, 228, 487, 920, 899, 931,
	232, 889, 930, 929, 0, 233, 234, 891, 890, 237,
	238, 239, 881, 955, 240, 992, 993, 493, 0, 241,
	962, 0, 943, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 965, 257, 258, 946, 944, 945, 952,
	948, 947, 951, 259, 260, 261, 262, 934, 264, 927,
	926, 852, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 925, 271, 0, 272, 0, 273, 274, 0, 275,
	858, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	983, 984, 870, 215, 0, 0, 0, 0, 0, 286,
	287, 288, 924, 922, 923, 0, 291, 0, 292, 0,
	0, 966, 293, 294, 0, 295, 990, 0, 880, 296,
	0, 297, 298, 299, 300, 957, 958, 961, 355, 968,
	301, 302, 0, 303, 304, 901, 0, 0, 216, 305,
	307, 314, 0, 967, 308, 913, 904, 915, 917, 918,
	919, 914, 0, 906, 0, 315, 969, 959, 970, 316,
	317, 318, 971, 939, 940, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 991, 972, 329,
	330, 973, 0, 331, 332, 950, 949, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	893, 344, 974, 347, 348, 351, 352, 350, 975, 349,
	849, 217, 976, 353, 871, 960, 354, 928, 356, 357,
	0, 902, 359, 903, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 513, 977, 367, 978, 985, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	986, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 921, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 979, 405, 406, 407, 408,
	859, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 181, 426, 427, 894, 895, 897, 898, 422, 428,
	429, 430, 953, 431, 411, 412, 432, 433, 980, 434,
	435, 916, 896, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 964, 443, 444, 445, 987, 0, 449, 450,
	448, 183, 451, 452, 453, 454, 455, 280, 892, 0,
	457, 935, 936, 937, 938, 0, 464, 0, 458, 459,
	988, 460, 989, 869, 461, 462, 463, 0, 465, 466,
	0, 853, 467, 468, 469, 471, 472, 470, 474, 954,
	475, 0, 900, 476, 477, 478, 1337, 932, 982, 0,
	480, 479, 530, 0, 0, 0, 175, 481, 482, 531,
	483, 484, 485, 850, 176, 0, 0, 0, 0, 848,
	0, 0, 0, 0, 0, 0, 846, 847, 905, 863,
	864, 865, 861, 862, 874, 1547, 1545, 0, 0, 873,
	0, 0, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 956, 879, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 920, 899,
	931, 232, 889, 930, 929, 0, 233, 234, 891, 890,
	237, 238, 239, 881, 955, 240, 992, 993, 493, 0,
	241, 962, 0, 943, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 965, 257, 258, 946, 944, 945,
	952, 948, 947, 951, 259, 260, 261, 262, 934, 264,
	927, 926, 852, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 925, 271, 0, 272, 0, 273, 274, 0,
	275, 858, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 983, 984, 870, 215, 0, 0, 0, 0, 0,
	286, 287, 288, 924, 922, 923, 0, 291, 0, 292,
	0, 0, 966, 293, 294, 0, 295, 990, 0, 880,
	296, 0, 297, 298, 299, 300, 957, 958, 961, 355,
	968, 301, 302, 0, 303, 304, 901, 0, 0, 216,
	305, 307, 314, 0, 967, 308, 913, 904, 915, 917,
	918, 919, 914, 0, 906, 0, 315, 969, 959, 970,
	316, 317, 318, 971, 939, 940, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 991, 972,
	329, 330, 973, 0, 331, 332, 950, 949, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 893, 344, 974, 347, 348, 351, 352, 350, 975,
	349, 849, 217, 976, 353, 871, 960, 354, 928, 356,
	357, 0, 902, 359, 903, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 977, 367, 978, 985, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 986, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 921, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 979, 405, 406, 407,
	408, 859, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 181, 426, 427, 894, 895, 897, 898, 422,
	428, 429, 430, 953, 431, 411, 412, 432, 433, 980,
	434, 435, 916, 896, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 964, 443, 444, 445, 987, 0, 449,
	450, 448, 183, 451, 452, 453, 454, 455, 280, 892,
	0, 457, 935, 936, 937, 938, 0, 464, 0, 458,
	459, 988, 460, 989, 869, 461, 462, 463, 0, 465,
	466, 0, 853, 467, 468, 469, 471, 472, 470, 474,
	954, 475, 0, 900, 476, 477, 478, 1337, 932, 982,
	0, 480, 479, 530, 0, 0, 0, 175, 481, 482,
	531, 483, 484, 485, 850, 176, 0, 0, 0, 0,
	848, 0, 0, 0, 0, 0, 0, 846, 847, 905,
	863, 864, 865, 861, 862, 874, 1547, 2584, 0, 0,
	873, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 956, 879,
	0, 0, 0, 224, 226, 225, 227, 228, 487, 920,
	899, 931, 232, 889, 930, 929, 0, 233, 234, 891,
	890, 237, 238, 239, 881, 955, 240, 992, 993, 493,
	0, 241, 962, 0, 943, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 965, 257, 258, 946, 944,
	945, 952, 948, 947, 951, 259, 260, 261, 262, 934,
	264, 927, 926, 852, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 925, 271, 0, 272, 0, 273, 274,
	0, 275, 858, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 983, 984, 870, 215, 0, 0, 0, 0,
	0, 286, 287, 288, 924, 922, 923, 0, 291, 0,
	292, 0, 0, 966, 293, 294, 0, 295, 990, 0,
	880, 296, 0, 297, 298, 299, 300, 957, 958, 961,
	355, 968, 301, 302, 0, 303, 304, 901, 0, 0,
	216, 305, 307, 314, 0, 967, 308, 913, 904, 915,
	917, 918, 919, 914, 0, 906, 0, 315, 969, 959,
	970, 316, 317, 318, 971, 939, 940, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 991,
	972, 329, 330, 973, 0, 331, 332, 950, 949, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 893, 344, 974, 347, 348, 351, 352, 350,
	975, 349, 849, 217, 976, 353, 871, 960, 354, 928,
	356, 357, 0, 902, 359, 903, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 977, 367, 978, 985,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 986, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 921, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 979, 405, 406,
	407, 408, 859, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 181, 426, 427, 894, 895, 897, 898,
	422, 428, 429, 430, 953, 431, 411, 412, 432, 433,
	980, 434, 435, 916, 896, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 964, 443, 444, 445, 987, 0,
	449, 450, 448, 183, 451, 452, 453, 454, 455, 280,
	892, 0, 457, 935, 936, 937, 938, 0, 464, 0,
	458, 459, 988, 460, 989, 869, 461, 462, 463, 0,
	465, 466, 0, 853, 467, 468, 469, 471, 472, 470,
	474, 954, 475, 0, 900, 476, 477, 478, 1337, 932,
	982, 0, 480, 479, 530, 0, 0, 0, 175, 481,
	482, 531, 483, 484, 485, 850, 176, 0, 0, 0,
	0, 848, 0, 0, 0, 0, 0, 0, 846, 847,
	905, 863, 864, 865, 861, 862, 874, 1547, 1545, 0,
	0, 873, 0, 0, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 956,
	879, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	920, 899, 931, 232, 889, 930, 929, 2208, 233, 234,
	891, 890, 237, 238, 239, 881, 955, 240, 992, 993,
	493, 0, 241, 962, 0, 943, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 965, 257, 258, 946,
	944, 945, 952, 948, 947, 951, 259, 260, 261, 262,
	934, 264, 927, 926, 852, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 925, 271, 0, 272, 0, 273,
	274, 0, 275, 858, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 983, 984, 870, 215, 0, 0, 0,
	0, 0, 286, 287, 288, 924, 922, 923, 0, 291,
	0, 292, 0, 2213, 966, 293, 294, 0, 295, 990,
	0, 880, 296, 0, 297, 298, 299, 300, 957, 958,
	961, 355, 968, 301, 302, 0, 303, 304, 901, 0,
	0, 216, 305, 307, 314, 0, 967, 308, 913, 904,
	915, 917, 918, 919, 914, 0, 906, 0, 315, 969,
	959, 970, 316, 317, 318, 971, 939, 940, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 2209, 328,
	991, 972, 329, 330, 973, 0, 331, 332, 950, 949,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 893, 344, 974, 347, 348, 351, 352,
	350, 975, 349, 849, 217, 976, 353, 871, 960, 354,
	928, 356, 357, 0, 902, 359, 903, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 977, 367, 978,
	985, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 986, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 921, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 979, 405,
	406, 407, 408, 859, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 894, 895, 897,
	898, 422, 428, 429, 430, 953, 431, 411, 412, 432,
	433, 980, 434, 435, 916, 896, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 964, 443, 444, 445, 987,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 892, 0, 457, 935, 936, 937, 938, 0, 464,
	2210, 458, 459, 988, 460, 989, 869, 461, 462, 463,
	0, 465, 466, 0, 853, 467, 468, 469, 471, 472,
	470, 474, 954, 475, 0, 900, 476, 477, 478, 527,
	932, 982, 0, 480, 479, 530, 0, 0, 0, 0,
	481, 482, 531, 483, 484, 485, 850, 0, 0, 0,
	0, 0, 848, 0, 0, 0, 0, 0, 0, 846,
	847, 0, 0, 0, 0, 0, 0, 0, 875, 0,
	0, 2167, 873, 905, 863, 864, 865, 861, 862, 874,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 956, 879, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 920, 899, 931, 232, 889, 930, 929,
	0, 233, 234, 891, 890, 237, 238, 239, 881, 955,
	240, 992, 993, 493, 0, 241, 962, 0, 943, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 965,
	257, 258, 946, 944, 945, 952, 948, 947, 951, 259,
	260, 261, 262, 934, 264, 927, 926, 852, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 925, 271, 0,
	272, 0, 273, 274, 0, 275, 858, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 983, 984, 870, 215,
	0, 0, 0, 0, 0, 286, 287, 288, 924, 922,
	923, 0, 291, 0, 292, 0, 0, 966, 293, 294,
	0, 295, 990, 0, 880, 296, 0, 297, 298, 299,
	300, 957, 958, 961, 355, 968, 301, 302, 0, 303,
	304, 901, 0, 0, 216, 305, 307, 314, 0, 967,
	308, 913, 904, 915, 917, 918, 919, 914, 0, 906,
	0, 315, 969, 959, 970, 316, 317, 318, 971, 939,
	940, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 991, 972, 329, 330, 973, 0, 331,
	332, 950, 949, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 893, 344, 974, 347,
	348, 351, 352, 350, 975, 349, 849, 217, 976, 353,
	871, 960, 354, 928, 356, 357, 0, 902, 359, 903,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	977, 367, 978, 985, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 986, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 921, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 979, 405, 406, 407, 408, 859, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 426, 427,
	894, 895, 897, 898, 422, 428, 429, 430, 953, 431,
	411, 412, 432, 433, 980, 434, 435, 916, 896, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 964, 443,
	444, 445, 987, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 892, 0, 457, 935, 936, 937,
	938, 0, 464, 0, 458, 459, 988, 460, 989, 869,
	461, 462, 463, 0, 465, 466, 0, 853, 467, 468,
	469, 471, 472, 470, 474, 954, 475, 0, 900, 476,
	477, 478, 527, 932, 982, 0, 480, 479, 530, 0,
	0, 0, 0, 481, 482, 531, 483, 484, 485, 850,
	0, 0, 0, 0, 0, 848, 0, 0, 0, 0,
	0, 0, 846, 847, 0, 0, 0, 0, 0, 0,
	0, 875, 2165, 0, 2164, 873, 905, 863, 864, 865,
	861, 862, 874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 956, 879, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 920, 899, 931, 232,
	889, 930, 929, 0, 233, 234, 891, 890, 237, 238,
	239, 881, 955, 240, 992, 993, 493, 0, 241, 962,
	0, 943, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 965, 257, 258, 946, 944, 945, 952, 948,
	947, 951, 259, 260, 261, 262, 934, 264, 927, 926,
	852, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	925, 271, 0, 272, 0, 273, 274, 0, 275, 858,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 983,
	984, 870, 215, 0, 0, 0, 0, 0, 286, 287,
	288, 924, 922, 923, 0, 291, 0, 292, 0, 0,
	966, 293, 294, 0, 295, 990, 0, 880, 296, 0,
	297, 298, 299, 300, 957, 958, 961, 355, 968, 301,
	302, 0, 303, 304, 901, 0, 0, 216, 305, 307,
	314, 0, 967, 308, 913, 904, 915, 917, 918, 919,
	914, 0, 906, 0, 315, 969, 959, 970, 316, 317,
	318, 971, 939, 940, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 991, 972, 329, 330,
	973, 0, 331, 332, 950, 949, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 893,
	344, 974, 347, 348, 351, 352, 350, 975, 349, 849,
	217, 976, 353, 871, 960, 354, 928, 356, 357, 0,
	902, 359, 903, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 977, 367, 978, 985, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 986,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 921, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 979, 405, 406, 407, 408, 859,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 894, 895, 897, 898, 422, 428, 429,
	430, 953, 431, 411, 412, 432, 433, 980, 434, 435,
	916, 896, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 964, 443, 444, 445, 987, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 892, 0, 457,
	935, 936, 937, 938, 0, 464, 0, 458, 459, 988,
	460, 989, 869, 461, 462, 463, 0, 465, 466, 0,
	853, 467, 468, 469, 471, 472, 470, 474, 954, 475,
	0, 900, 476, 477, 478, 527, 932, 982, 0, 480,
	479, 530, 0, 0, 0, 0, 481, 482, 531, 483,
	484, 485, 850, 0, 0, 0, 0, 0, 848, 0,
	0, 0, 0, 0, 0, 846, 847, 0, 0, 0,
	0, 0, 0, 0, 875, 2162, 0, 2161, 873, 905,
	863, 864, 865, 861, 862, 874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 956, 879,
	0, 0, 0, 224, 226, 225, 227, 228, 487, 920,
	899, 931, 232, 889, 930, 929, 0, 233, 234, 891,
	890, 237, 238, 239, 881, 955, 240, 992, 993, 493,
	0, 241, 962, 0, 943, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 965, 257, 258, 946, 944,
	945, 952, 948, 947, 951, 259, 260, 261, 262, 934,
	264, 927, 926, 852, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 925, 271, 0, 272, 0, 273, 274,
	0, 275, 858, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 983, 984, 870, 215, 0, 0, 0, 0,
	0, 286, 287, 288, 924, 922, 923, 0, 291, 0,
	292, 0, 0, 966, 293, 294, 0, 295, 990, 0,
	880, 296, 0, 297, 298, 299, 300, 957, 958, 961,
	355, 968, 301, 302, 0, 303, 304, 901, 0, 0,
	216, 305, 307, 314, 0, 967, 308, 913, 904, 915,
	917, 918, 919, 914, 0, 906, 0, 315, 969, 959,
	970, 316, 317, 318, 971, 939, 940, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 991,
	972, 329, 330, 973, 0, 331, 332, 950, 949, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 893, 344, 974, 347, 348, 351, 352, 350,
	975, 349, 849, 217, 976, 353, 871, 960, 354, 928,
	356, 357, 0, 902, 359, 903, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 977, 367, 978, 985,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 986, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 921, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 979, 405, 406,
	407, 408, 859, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 0, 426, 427, 894, 895, 897, 898,
	422, 428, 429, 430, 953, 431, 411, 412, 432, 433,
	980, 434, 435, 916, 896, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 964, 443, 444, 445, 987, 0,
	449, 450, 448, 0, 451, 452, 453, 454, 455, 280,
	892, 0, 457, 935, 936, 937, 938, 0, 464, 0,
	458, 459, 988, 460, 989, 869, 461, 462, 463, 0,
	465, 466, 0, 853, 467, 468, 469, 471, 472, 470,
	474, 954, 475, 0, 900, 476, 477, 478, 527, 932,
	982, 0, 480, 479, 530, 0, 0, 0, 0, 481,
	482, 531, 483, 484, 485, 850, 0, 0, 0, 0,
	0, 848, 0, 0, 0, 0, 0, 0, 846, 847,
	0, 0, 0, 0, 0, 0, 0, 875, 2159, 0,
	2158, 873, 905, 863, 864, 865, 861, 862, 874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	219, 220, 221, 222, 0, 223, 0, 0, 0, 0,
	0, 956, 879, 0, 0, 0, 224, 226, 225, 227,
	228, 487, 920, 899, 931, 232, 889, 930, 929, 0,
	233, 234, 891, 890, 237, 238, 239, 881, 955, 240,
	992, 993, 493, 0, 241, 962, 0, 943, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 965, 257,
	258, 946, 944, 945, 952, 948, 947, 951, 259, 260,
	261, 262, 934, 264, 927, 926, 852, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 925, 271, 0, 272,
	0, 273, 274, 0, 275, 858, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 983, 984, 870, 215, 0,
	0, 0, 0, 0, 286, 287, 288, 924, 922, 923,
	0, 291, 0, 292, 0, 0, 966, 293, 294, 0,
	295, 990, 0, 880, 296, 0, 297, 298, 299, 300,
	957, 958, 961, 355, 968, 301, 302, 0, 303, 304,
	901, 0, 0, 216, 305, 307, 314, 0, 967, 308,
	913, 904, 915, 917, 918, 919, 914, 0, 906, 0,
	315, 969, 959, 970, 316, 317, 318, 971, 939, 940,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 991, 972, 329, 330, 973, 0, 331, 332,
	950, 949, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 893, 344, 974, 347, 348,
	351, 352, 350, 975, 349, 849, 217, 976, 353, 871,
	960, 354, 928, 356, 357, 0, 902, 359, 903, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 513, 977,
	367, 978, 985, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 986, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	921, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	979, 405, 406, 407, 408, 859, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 894,
	895, 897, 898, 422, 428, 429, 430, 953, 431, 411,
	412, 432, 433, 980, 434, 435, 916, 896, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 964, 443, 444,
	445, 987, 0, 449, 450, 448, 0, 451, 452, 453,
	454, 455, 280, 892, 0, 457, 935, 936, 937, 938,
	0, 464, 0, 458, 459, 988, 460, 989, 869, 461,
	462, 463, 0, 465, 466, 0, 853, 467, 468, 469,
	471, 472, 470, 474, 954, 475, 0, 900, 476, 477,
	478, 527, 932, 982, 0, 480, 479, 530, 0, 0,
	0, 0, 481, 482, 531, 483, 484, 485, 850, 0,
	0, 0, 0, 0, 848, 0, 0, 0, 0, 0,
	0, 846, 847, 0, 0, 0, 0, 0, 0, 0,
	875, 2156, 0, 1406, 873, 905, 863, 864, 865, 861,
	862, 874, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 956, 879, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 920, 899, 931, 232, 889,
	930, 929, 0, 233, 234, 891, 890, 237, 238, 239,
	881, 955, 240, 992, 993, 493, 0, 241, 962, 0,
	943, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 965, 257, 258, 946, 944, 945, 952, 948, 947,
	951, 259, 260, 261, 262, 934, 264, 927, 926, 852,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 925,
	271, 0, 272, 0, 273, 274, 0, 275, 858, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 983, 984,
	870, 215, 0, 0, 0, 0, 0, 286, 287, 288,
	924, 922, 923, 0, 291, 0, 292, 0, 0, 966,
	293, 294, 0, 295, 990, 0, 880, 296, 0, 297,
	298, 299, 300, 957, 958, 961, 355, 968, 301, 302,
	0, 303, 304, 901, 0, 0, 216, 305, 307, 314,
	0, 967, 308, 913, 904, 915, 917, 918, 919, 914,
	0, 906, 0, 315, 969, 959, 970, 316, 317, 318,
	971, 939, 940, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 991, 972, 329, 330, 973,
	0, 331, 332, 950, 949, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 893, 344,
	974, 347, 348, 351, 352, 350, 975, 349, 849, 217,
	976, 353, 871, 960, 354, 928, 356, 357, 0, 902,
	359, 903, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 977, 367, 978, 985, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 986, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 921, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 979, 405, 406, 407, 408, 859, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 894, 895, 897, 898, 422, 428, 429, 430,
	953, 431, 411, 412, 432, 433, 980, 434, 435, 916,
	896, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	964, 443, 444, 445, 987, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 892, 0, 457, 935,
	936, 937, 938, 0, 464, 0, 458, 459, 988, 460,
	989, 869, 461, 462, 463, 0, 465, 466, 0, 853,
	467, 468, 469, 471, 472, 470, 474, 954, 475, 0,
	900, 476, 477, 478, 527, 932, 982, 0, 480, 479,
	530, 1405, 0, 0, 0, 481, 482, 531, 483, 484,
	485, 850, 0, 0, 0, 0, 0, 848, 0, 0,
	0, 0, 0, 0, 846, 847, 0, 0, 0, 0,
	0, 0, 0, 875, 0, 0, 842, 873, 905, 863,
	864, 865, 861, 862, 874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 956, 879, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 920, 899,
	931, 232, 889, 930, 929, 0, 233, 234, 891, 890,
	237, 238, 239, 881, 955, 240, 992, 993, 493, 0,
	241, 962, 0, 943, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 965, 257, 258, 946, 944, 945,
	952, 948, 947, 951, 259, 260, 261, 262, 934, 264,
	927, 926, 852, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 925, 271, 0, 272, 0, 273, 274, 0,
	275, 858, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 983, 984, 870, 215, 0, 0, 0, 0, 0,
	286, 287, 288, 924, 922, 923, 0, 291, 0, 292,
	0, 0, 966, 293, 294, 0, 295, 990, 0, 880,
	296, 0, 297, 298, 299, 300, 957, 958, 961, 355,
	968, 301, 302, 0, 303, 304, 901, 0, 0, 216,
	305, 307, 314, 0, 967, 308, 913, 904, 915, 917,
	918, 919, 914, 0, 906, 0, 315, 969, 959, 970,
	316, 317, 318, 971, 939, 940, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 991, 972,
	329, 330, 973, 0, 331, 332, 950, 949, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 893, 344, 974, 347, 348, 351, 352, 350, 975,
	349, 849, 217, 976, 353, 871, 960, 354, 928, 356,
	357, 0, 902, 359, 903, 854, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 977, 367, 978, 985, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 986, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 921, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 979, 405, 406, 407,
	408, 859, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 426, 427, 894, 895, 897, 898, 422,
	428, 429, 430, 953, 431, 411, 412, 432, 433, 980,
	434, 435, 916, 896, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 964, 443, 444, 445, 987, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 892,
	0, 457, 935, 936, 937, 938, 0, 464, 0, 458,
	459, 988, 460, 989, 869, 461, 462, 463, 0, 465,
	466, 0, 853, 467, 468, 469, 471, 472, 470, 474,
	954, 475, 0, 900, 476, 477, 478, 527, 932, 982,
	0, 480, 479, 530, 0, 0, 0, 0, 481, 482,
	531, 483, 484, 485, 850, 0, 0, 0, 0, 0,
	848, 0, 0, 0, 0, 0, 0, 846, 847, 905,
	863, 864, 865, 861, 862, 874, 875, 0, 0, 0,
	873, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 956, 879,
	0, 0, 0, 224, 226, 225, 227, 228, 487, 920,
	899, 931, 232, 889, 930, 929, 0, 233, 234, 891,
	890, 237, 238, 239, 881, 955, 240, 992, 993, 493,
	0, 241, 962, 0, 943, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 3611, 255, 0, 256, 965, 257, 258, 946, 944,
	945, 952, 948, 947, 951, 259, 260, 261, 262, 934,
	264, 927, 926, 852, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 925, 271, 0, 272, 0, 273, 274,
	0, 275, 858, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 983, 984, 870, 215, 0, 0, 0, 0,
	0, 286, 287, 288, 924, 922, 923, 0, 291, 0,
	292, 0, 0, 966, 293, 294, 0, 295, 990, 0,
	880, 296, 0, 297, 298, 299, 300, 957, 958, 961,
	355, 968, 301, 302, 0, 303, 304, 901, 0, 0,
	216, 305, 307, 314, 0, 967, 308, 913, 904, 915,
	917, 918, 919, 914, 0, 906, 0, 315, 969, 959,
	970, 316, 317, 318, 971, 939, 940, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 991,
	972, 329, 330, 973, 0, 331, 332, 950, 949, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 893, 344, 974, 347, 348, 351, 352, 350,
	975, 349, 849, 217, 976, 353, 871, 960, 354, 928,
	356, 357, 0, 902, 359, 903, 854, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 977, 367, 978, 985,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 986, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 921, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 979, 405, 406,
	407, 408, 859, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 0, 426, 427, 894, 895, 897, 898,
	422, 428, 429, 430, 953, 431, 411, 412, 432, 433,
	980, 434, 435, 916, 896, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 964, 443, 444, 445, 987, 0,
	449, 450, 448, 0, 451, 452, 453, 454, 455, 280,
	892, 0, 457, 935, 936, 937, 938, 0, 464, 0,
	458, 459, 988, 460, 989, 869, 461, 462, 463, 0,
	465, 466, 0, 853, 467, 468, 469, 471, 472, 470,
	474, 954, 475, 0, 900, 476, 477, 478, 527, 932,
	982, 0, 480, 479, 530, 0, 0, 0, 0, 481,
	482, 531, 483, 484, 485, 850, 0, 0, 0, 0,
	0, 848, 0, 0, 0, 0, 0, 0, 846, 847,
	905, 863, 864, 865, 861, 862, 874, 875, 0, 0,
	0, 873, 0, 0, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 956,
	879, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	920, 899, 931, 232, 889, 930, 929, 0, 233, 234,
	891, 890, 237, 238, 239, 881, 955, 240, 992, 993,
	493, 0, 241, 962, 0, 943, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 3445, 255, 0, 256, 965, 257, 258, 946,
	944, 945, 952, 948, 947, 951, 259, 260, 261, 262,
	934, 264, 927, 926, 852, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 925, 271, 0, 272, 0, 273,
	274, 0, 275, 858, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 983, 984, 870, 215, 0, 0, 0,
	0, 0, 286, 287, 288, 924, 922, 923, 0, 291,
	0, 292, 0, 0, 966, 293, 294, 0, 295, 990,
	0, 880, 296, 0, 297, 298, 299, 300, 957, 958,
	961, 355, 968, 301, 302, 0, 303, 304, 901, 0,
	0, 216, 305, 307, 314, 0, 967, 308, 913, 904,
	915, 917, 918, 919, 914, 0, 906, 0, 315, 969,
	959, 970, 316, 317, 318, 971, 939, 940, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	991, 972, 329, 330, 973, 0, 331, 332, 950, 949,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 893, 344, 974, 347, 348, 351, 352,
	350, 975, 349, 849, 217, 976, 353, 871, 960, 354,
	928, 356, 357, 0, 902, 359, 903, 854, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 977, 367, 978,
	985, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 986, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 921, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 979, 405,
	406, 407, 408, 859, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 894, 895, 897,
	898, 422, 428, 429, 430, 953, 431, 411, 412, 432,
	433, 980, 434, 435, 916, 896, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 964, 443, 444, 445, 987,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 892, 0, 457, 935, 936, 937, 938, 0, 464,
	0, 458, 459, 988, 460, 989, 869, 461, 462, 463,
	0, 465, 466, 0, 853, 467, 468, 469, 471, 472,
	470, 474, 954, 475, 0, 900, 476, 477, 478, 527,
	932, 982, 0, 480, 479, 530, 0, 0, 0, 0,
	481, 482, 531, 483, 484, 485, 850, 0, 0, 0,
	0, 0, 848, 0, 0, 0, 0, 0, 0, 846,
	847, 905, 863, 864, 865, 861, 862, 874, 875, 0,
	0, 0, 873, 0, 0, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	956, 879, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 920, 899, 931, 232, 889, 930, 929, 0, 233,
	234, 891, 890, 237, 238, 239, 881, 955, 240, 992,
	993, 493, 0, 241, 962, 0, 943, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 965, 257, 258,
	946, 944, 945, 952, 948, 947, 951, 259, 260, 261,
	262, 934, 264, 927, 926, 852, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 925, 271, 0, 272, 0,
	273, 274, 0, 275, 858, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 983, 984, 870, 215, 0, 0,
	0, 0, 0, 286, 287, 288, 924, 922, 923, 0,
	291, 0, 292, 0, 0, 966, 293, 294, 0, 295,
	990, 0, 880, 296, 0, 297, 298, 299, 300, 957,
	958, 961, 355, 968, 301, 302, 0, 303, 304, 901,
	0, 0, 216, 305, 307, 314, 0, 967, 308, 913,
	904, 915, 917, 918, 919, 914, 0, 906, 0, 315,
	969, 959, 970, 316, 317, 318, 971, 939, 940, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 991, 972, 329, 330, 973, 0, 331, 332, 950,
	949, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 893, 344, 974, 347, 348, 351,
	352, 350, 975, 349, 849, 3163, 976, 353, 871, 960,
	354, 928, 356, 357, 0, 902, 359, 903, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 977, 367,
	978, 985, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 986, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 921,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 979,
	405, 406, 407, 408, 859, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 894, 895,
	897, 898, 422, 428, 429, 430, 953, 431, 411, 412,
	432, 433, 980, 434, 435, 916, 896, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 964, 443, 444, 445,
	987, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 892, 0, 457, 935, 936, 937, 938, 0,
	464, 0, 458, 459, 988, 460, 989, 869, 461, 462,
	463, 0, 465, 466, 0, 853, 467, 468, 469, 471,
	472, 470, 474, 954, 475, 0, 900, 476, 477, 478,
	527, 932, 982, 0, 480, 479, 530, 0, 0, 0,
	0, 481, 482, 531, 483, 484, 485, 850, 0, 0,
	0, 0, 0, 848, 0, 0, 0, 0, 0, 0,
	846, 847, 1611, 0, 0, 0, 0, 0, 0, 875,
	0, 0, 0, 873, 905, 863, 864, 865, 861, 862,
	874, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 956, 879, 0, 0, 0, 224, 226,
	225, 227, 228, 487, 920, 899, 931, 232, 889, 930,
	929, 0, 233, 234, 891, 890, 237, 238, 239, 881,
	955, 240, 992, 993, 493, 0, 241, 962, 0, 943,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	965, 257, 258, 946, 944, 945, 952, 948, 947, 951,
	259, 260, 261, 262, 934, 264, 927, 926, 852, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 925, 271,
	0, 272, 0, 273, 274, 0, 275, 858, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 983, 984, 870,
	215, 0, 0, 0, 0, 0, 286, 287, 288, 924,
	922, 923, 0, 291, 0, 292, 0, 0, 966, 293,
	294, 0, 295, 990, 0, 880, 296, 0, 297, 298,
	299, 300, 957, 958, 961, 355, 968, 301, 302, 0,
	303, 304, 901, 0, 0, 216, 305, 307, 314, 0,
	967, 308, 913, 904, 915, 917, 918, 919, 914, 0,
	906, 0, 315, 969, 959, 970, 316, 317, 318, 971,
	939, 940, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 991, 972, 329, 330, 973, 0,
	331, 332, 950, 949, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 893, 344, 974,
	347, 348, 351, 352, 350, 975, 349, 849, 217, 976,
	353, 871, 960, 354, 928, 356, 357, 0, 902, 359,
	903, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 977, 367, 978, 985, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 986, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 921, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 979, 405, 406, 407, 408, 859, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 0, 426,
	427, 894, 895, 897, 898, 422, 428, 429, 430, 953,
	431, 411, 412, 432, 433, 980, 434, 435, 916, 896,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 964,
	443, 444, 445, 987, 0, 449, 450, 448, 0, 451,
	452, 453, 454, 455, 280, 892, 0, 457, 935, 936,
	937, 938, 0, 464, 0, 458, 459, 988, 460, 989,
	869, 461, 462, 463, 0, 465, 466, 0, 853, 467,
	468, 469, 471, 472, 470, 474, 954, 475, 0, 900,
	476, 477, 478, 527, 932, 982, 2964, 480, 479, 530,
	0, 0, 0, 0, 481, 482, 531, 483, 484, 485,
	850, 0, 0, 0, 0, 0, 848, 0, 0, 0,
	0, 0, 0, 846, 847, 905, 863, 864, 865, 861,
	862, 874, 875, 0, 0, 0, 873, 0, 0, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 956, 879, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 920, 899, 931, 232, 889,
	930, 929, 0, 233, 234, 891, 890, 237, 238, 239,
	881, 955, 240, 992, 993, 493, 0, 241, 962, 0,
	943, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 965, 257, 258, 946, 944, 945, 952, 948, 947,
	951, 259, 260, 261, 262, 934, 264, 927, 926, 852,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 925,
	271, 0, 272, 0, 273, 274, 0, 275, 858, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 983, 984,
	870, 215, 0, 0, 0, 0, 0, 286, 287, 288,
	924, 922, 923, 0, 291, 0, 292, 0, 0, 966,
	293, 294, 0, 295, 990, 0, 880, 296, 0, 297,
	298, 299, 300, 957, 958, 961, 355, 968, 301, 302,
	0, 303, 304, 901, 0, 0, 2028, 305, 307, 314,
	0, 967, 308, 913, 904, 915, 917, 918, 919, 914,
	0, 906, 0, 315, 969, 959, 970, 316, 317, 318,
	971, 939, 940, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 991, 972, 329, 330, 973,
	0, 331, 332, 950, 949, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 893, 344,
	974, 347, 348, 351, 352, 350, 975, 349, 849, 217,
	976, 353, 871, 960, 354, 928, 356, 357, 0, 902,
	359, 903, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 977, 367, 978, 985, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 986, 378,
	516, 379, 380, 2027, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 921, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 979, 405, 406, 407, 408, 859, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 894, 895, 897, 898, 422, 428, 429, 430,
	953, 431, 411, 412, 432, 433, 980, 434, 435, 916,
	896, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	964, 443, 444, 445, 987, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 892, 0, 457, 935,
	936, 937, 938, 0, 464, 0, 458, 459, 988, 460,
	989, 869, 461, 462, 463, 0, 465, 466, 0, 853,
	467, 468, 469, 471, 472, 470, 474, 954, 475, 0,
	900, 476, 477, 478, 527, 932, 982, 0, 480, 479,
	530, 0, 0, 0, 0, 481, 482, 531, 483, 484,
	485, 850, 0, 0, 0, 0, 0, 848, 0, 0,
	0, 0, 0, 0, 846, 847, 905, 863, 864, 865,
	861, 862, 874, 875, 0, 0, 0, 873, 0, 0,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 956, 879, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 920, 899, 931, 232,
	889, 930, 929, 0, 233, 234, 891, 890, 237, 238,
	239, 881, 955, 240, 992, 993, 493, 0, 241, 962,
	0, 943, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 965, 257, 258, 946, 944, 945, 952, 948,
	947, 951, 259, 260, 261, 262, 934, 264, 927, 926,
	852, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	925, 271, 0, 272, 0, 273, 274, 0, 275, 858,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 983,
	984, 870, 215, 0, 0, 0, 0, 0, 286, 287,
	288, 924, 922, 923, 0, 291, 0, 292, 0, 0,
	966, 293, 294, 0, 295, 990, 0, 880, 296, 0,
	297, 298, 299, 300, 957, 958, 961, 355, 968, 301,
	302, 0, 303, 304, 901, 0, 0, 216, 305, 307,
	314, 0, 967, 308, 913, 904, 915, 917, 918, 919,
	914, 0, 906, 0, 315, 969, 959, 970, 316, 317,
	318, 971, 939, 940, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 991, 972, 329, 330,
	973, 0, 331, 332, 950, 949, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 893,
	344, 974, 347, 348, 351, 352, 350, 975, 349, 849,
	217, 976, 353, 871, 960, 354, 928, 356, 357, 0,
	902, 359, 903, 854, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 977, 367, 978, 985, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 986,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 921, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 979, 405, 406, 407, 408, 859,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 894, 895, 897, 898, 422, 428, 429,
	430, 953, 431, 411, 412, 432, 433, 980, 434, 435,
	916, 896, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 964, 443, 444, 445, 987, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 892, 0, 457,
	935, 936, 937, 938, 0, 464, 0, 458, 459, 988,
	460, 989, 869, 461, 462, 463, 0, 465, 466, 0,
	853, 467, 468, 469, 471, 472, 470, 474, 954, 475,
	0, 900, 476, 477, 478, 527, 932, 982, 0, 480,
	479, 530, 0, 0, 0, 0, 481, 482, 531, 483,
	484, 485, 850, 0, 0, 0, 0, 0, 848, 0,
	0, 0, 0, 0, 0, 846, 847, 905, 863, 864,
	865, 861, 862, 874, 875, 0, 0, 0, 873, 0,
	0, 0, 0, 0, 218, 219, 220, 221, 222, 0,
	223, 0, 0, 0, 0, 0, 956, 879, 0, 0,
	0, 224, 226, 225, 227, 228, 487, 920, 899, 931,
	232, 889, 930, 929, 0, 233, 234, 891, 890, 237,
	238, 239, 881, 955, 240, 992, 993, 493, 0, 241,
	962, 0, 943, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 965, 257, 258, 946, 944, 945, 952,
	948, 947, 951, 259, 260, 261, 262, 934, 264, 927,
	926, 852, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 925, 271, 0, 272, 0, 273, 274, 0, 275,
	858, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	983, 984, 870, 215, 0, 0, 0, 0, 0, 286,
	287, 288, 924, 922, 923, 0, 291, 0, 292, 0,
	0, 966, 293, 294, 0, 295, 990, 0, 880, 296,
	0, 297, 298, 299, 300, 957, 958, 961, 355, 968,
	301, 302, 0, 303, 304, 901, 0, 0, 216, 305,
	307, 314, 0, 967, 308, 913, 904, 915, 917, 918,
	919, 914, 0, 906, 0, 315, 969, 959, 970, 316,
	317, 318, 971, 939, 940, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 991, 972, 329,
	330, 973, 0, 331, 332, 950, 949, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	893, 344, 974, 347, 348, 351, 352, 350, 975, 349,
	849, 217, 976, 353, 871, 960, 354, 928, 356, 357,
	0, 902, 359, 903, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 513, 977, 367, 978, 985, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	986, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 921, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 979, 405, 406, 407, 408,
	859, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 894, 895, 897, 898, 422, 428,
	429, 430, 953, 431, 411, 412, 432, 433, 980, 434,
	435, 916, 896, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 964, 443, 444, 445, 987, 0, 449, 450,
	448, 0, 451, 452, 453, 454, 455, 280, 892, 0,
	457, 935, 936, 937, 938, 0, 464, 0, 458, 459,
	988, 460, 989, 869, 461, 462, 463, 0, 465, 466,
	0, 853, 467, 468, 469, 471, 472, 470, 474, 954,
	475, 0, 900, 476, 477, 478, 527, 932, 982, 0,
	480, 479, 530, 0, 0, 0, 0, 481, 482, 531,
	483, 484, 485, 850, 0, 0, 0, 0, 0, 848,
	0, 0, 0, 0, 0, 0, 846, 847, 1611, 0,
	0, 0, 0, 0, 0, 875, 0, 0, 0, 873,
	905, 863, 864, 865, 861, 862, 874, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 956,
	879, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	920, 899, 931, 232, 889, 930, 929, 0, 233, 234,
	891, 890, 237, 238, 239, 881, 955, 240, 992, 993,
	493, 0, 241, 962, 0, 943, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 965, 257, 258, 946,
	944, 945, 952, 948, 947, 951, 259, 260, 261, 262,
	934, 264, 927, 926, 852, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 925, 271, 0, 272, 0, 273,
	274, 0, 275, 858, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 983, 984, 870, 215, 0, 0, 0,
	0, 0, 286, 287, 288, 924, 922, 923, 0, 291,
	0, 292, 0, 2213, 966, 293, 294, 0, 295, 990,
	0, 880, 296, 0, 297, 298, 299, 300, 957, 958,
	961, 355, 968, 301, 302, 0, 303, 304, 901, 0,
	0, 216, 305, 307, 314, 0, 967, 308, 913, 904,
	915, 917, 918, 919, 914, 0, 906, 0, 315, 969,
	959, 970, 316, 317, 318, 971, 939, 940, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	991, 972, 329, 330, 973, 0, 331, 332, 950, 949,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 893, 344, 974, 347, 348, 351, 352,
	350, 975, 349, 849, 217, 976, 353, 871, 960, 354,
	928, 356, 357, 0, 902, 359, 903, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 977, 367, 978,
	985, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 986, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 921, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 979, 405,
	406, 407, 408, 859, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 894, 895, 897,
	898, 422, 428, 429, 430, 953, 431, 411, 412, 432,
	433, 980, 434, 435, 916, 896, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 964, 443, 444, 445, 987,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 892, 0, 457, 935, 936, 937, 938, 0, 464,
	0, 458, 459, 988, 460, 989, 869, 461, 462, 463,
	0, 465, 466, 0, 853, 467, 468, 469, 471, 472,
	470, 474, 954, 475, 0, 900, 476, 477, 478, 527,
	932, 982, 0, 480, 479, 530, 0, 0, 0, 0,
	481, 482, 531, 483, 484, 485, 850, 0, 0, 0,
	0, 0, 848, 0, 0, 0, 0, 0, 0, 846,
	847, 905, 863, 864, 865, 861, 862, 874, 875, 0,
	0, 0, 873, 0, 0, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	956, 879, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 920, 899, 931, 232, 889, 930, 929, 0, 233,
	234, 891, 890, 237, 238, 239, 881, 955, 240, 992,
	993, 493, 0, 241, 962, 0, 943, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 965, 257, 258,
	946, 944, 945, 952, 948, 947, 951, 259, 260, 261,
	262, 934, 264, 927, 926, 852, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 925, 271, 0, 272, 0,
	273, 274, 0, 275, 858, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 983, 984, 870, 215, 0, 0,
	0, 0, 0, 286, 287, 288, 924, 922, 923, 0,
	291, 0, 292, 0, 0, 966, 293, 294, 0, 295,
	990, 0, 880, 296, 0, 297, 298, 299, 300, 957,
	958, 961, 355, 968, 301, 302, 0, 303, 304, 901,
	0, 0, 216, 305, 307, 314, 0, 967, 308, 913,
	904, 915, 917, 918, 919, 914, 0, 906, 0, 315,
	969, 959, 970, 316, 317, 318, 971, 939, 940, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 991, 972, 329, 330, 973, 0, 331, 332, 950,
	949, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 893, 344, 974, 347, 348, 351,
	352, 350, 975, 349, 849, 217, 976, 353, 871, 960,
	354, 928, 356, 357, 0, 902, 359, 903, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 977, 367,
	978, 985, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 986, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 921,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 979,
	405, 406, 407, 408, 859, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 894, 895,
	897, 898, 422, 428, 429, 430, 953, 431, 411, 412,
	432, 433, 980, 434, 435, 916, 896, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 964, 443, 444, 445,
	987, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 892, 0, 457, 935, 936, 937, 938, 0,
	464, 0, 458, 459, 988, 460, 989, 869, 461, 462,
	463, 0, 465, 466, 0, 853, 467, 468, 469, 471,
	472, 470, 474, 954, 475, 0, 900, 476, 477, 478,
	527, 932, 982, 0, 480, 479, 530, 0, 0, 0,
	0, 481, 482, 531, 483, 484, 485, 850, 0, 0,
	0, 0, 0, 848, 0, 0, 0, 0, 0, 0,
	846, 847, 0, 0, 0, 0, 0, 0, 0, 875,
	1545, 0, 2218, 873, 905, 863, 864, 865, 861, 862,
	874, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 956, 879, 0, 0, 0, 224, 226,
	225, 227, 228, 487, 920, 899, 931, 232, 889, 930,
	929, 0, 233, 234, 891, 890, 237, 238, 239, 881,
	955, 240, 992, 993, 493, 0, 241, 962, 0, 943,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	965, 257, 258, 946, 944, 945, 952, 948, 947, 951,
	259, 260, 261, 262, 934, 264, 927, 926, 852, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 925, 271,
	0, 272, 0, 273, 274, 0, 275, 858, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 983, 984, 870,
	215, 0, 0, 0, 0, 0, 286, 287, 288, 924,
	922, 923, 0, 291, 0, 292, 0, 0, 966, 293,
	294, 0, 295, 990, 0, 880, 296, 0, 297, 298,
	299, 300, 957, 958, 961, 355, 968, 301, 302, 0,
	303, 304, 901, 0, 0, 216, 305, 307, 314, 0,
	967, 308, 913, 904, 915, 917, 918, 919, 914, 0,
	906, 0, 315, 969, 959, 970, 316, 317, 318, 971,
	939, 940, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 991, 972, 329, 330, 973, 0,
	331, 332, 950, 949, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 893, 344, 974,
	347, 348, 351, 352, 350, 975, 349, 849, 217, 976,
	353, 871, 960, 354, 928, 356, 357, 0, 902, 359,
	903, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 977, 367, 978, 985, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 986, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 921, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 979, 405, 406, 407, 408, 859, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 0, 426,
	427, 894, 895, 897, 898, 422, 428, 429, 430, 953,
	431, 411, 412, 432, 433, 980, 434, 435, 916, 896,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 964,
	443, 444, 445, 987, 0, 449, 450, 448, 0, 451,
	452, 453, 454, 455, 280, 892, 0, 457, 935, 936,
	937, 938, 0, 464, 0, 458, 459, 988, 460, 989,
	869, 461, 462, 463, 0, 465, 466, 0, 853, 467,
	468, 469, 471, 472, 470, 474, 954, 475, 0, 900,
	476, 477, 478, 527, 932, 982, 0, 480, 479, 530,
	0, 0, 0, 0, 481, 482, 531, 483, 484, 485,
	850, 0, 0, 0, 0, 0, 848, 0, 0, 0,
	0, 0, 0, 846, 847, 0, 0, 0, 0, 0,
	0, 0, 875, 0, 0, 2216, 873, 905, 863, 864,
	865, 861, 862, 874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 219, 220, 221, 222, 0,
	223, 0, 0, 0, 0, 0, 956, 879, 0, 0,
	0, 224, 226, 225, 227, 228, 487, 920, 899, 931,
	232, 889, 930, 929, 0, 233, 234, 891, 890, 237,
	238, 239, 881, 955, 240, 992, 993, 493, 0, 241,
	962, 0, 943, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 965, 257, 258, 946, 944, 945, 952,
	948, 947, 951, 259, 260, 261, 262, 934, 264, 927,
	926, 852, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 925, 271, 0, 272, 0, 273, 274, 0, 275,
	858, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	983, 984, 870, 215, 0, 0, 0, 0, 0, 286,
	287, 288, 924, 922, 923, 0, 291, 0, 292, 0,
	0, 966, 293, 294, 0, 295, 990, 0, 880, 296,
	0, 297, 298, 299, 300, 957, 958, 961, 355, 968,
	301, 302, 0, 303, 304, 901, 0, 0, 216, 305,
	307, 314, 0, 967, 308, 913, 904, 915, 917, 918,
	919, 914, 0, 906, 0, 315, 969, 959, 970, 316,
	317, 318, 971, 939, 940, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 991, 972, 329,
	330, 973, 0, 331, 332, 950, 949, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	893, 344, 974, 347, 348, 351, 352, 350, 975, 349,
	849, 217, 976, 353, 871, 960, 354, 928, 356, 357,
	0, 902, 359, 903, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 513, 977, 367, 978, 985, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	986, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 921, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 979, 405, 406, 407, 408,
	859, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 894, 895, 897, 898, 422, 428,
	429, 430, 953, 431, 411, 412, 432, 433, 980, 434,
	435, 916, 896, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 964, 443, 444, 445, 987, 0, 449, 450,
	448, 0, 451, 452, 453, 454, 455, 280, 892, 0,
	457, 935, 936, 937, 938, 0, 464, 0, 458, 459,
	988, 460, 989, 869, 461, 462, 463, 0, 465, 466,
	0, 853, 467, 468, 469, 471, 472, 470, 474, 954,
	475, 0, 900, 476, 477, 478, 527, 932, 982, 0,
	480, 479, 530, 0, 0, 0, 0, 481, 482, 531,
	483, 484, 485, 850, 0, 0, 0, 0, 0, 848,
	0, 0, 0, 0, 0, 0, 846, 847, 0, 0,
	0, 0, 0, 0, 0, 875, 0, 0, 2204, 873,
	905, 863, 864, 865, 861, 862, 874, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 956,
	879, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	920, 899, 931, 232, 889, 930, 929, 0, 233, 234,
	891, 890, 237, 238, 239, 881, 955, 240, 992, 993,
	493, 0, 241, 962, 0, 943, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 965, 257, 258, 946,
	944, 945, 952, 948, 947, 951, 259, 260, 261, 262,
	934, 264, 927, 926, 852, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 925, 271, 0, 272, 0, 273,
	274, 0, 275, 858, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 983, 984, 870, 215, 0, 0, 0,
	0, 0, 286, 287, 288, 924, 922, 923, 0, 291,
	0, 292, 0, 0, 966, 293, 294, 0, 295, 990,
	0, 880, 296, 0, 297, 298, 299, 300, 957, 958,
	961, 355, 968, 301, 302, 0, 303, 304, 901, 0,
	0, 216, 305, 307, 314, 0, 967, 308, 913, 904,
	915, 917, 918, 919, 914, 0, 906, 0, 315, 969,
	959, 970, 316, 317, 318, 971, 939, 940, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	991, 972, 329, 330, 973, 0, 331, 332, 950, 949,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 893, 344, 974, 347, 348, 351, 352,
	350, 975, 349, 849, 217, 976, 353, 871, 960, 354,
	928, 356, 357, 0, 902, 359, 903, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 977, 367, 978,
	985, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 986, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 921, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 979, 405,
	406, 407, 408, 859, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 894, 895, 897,
	898, 422, 428, 429, 430, 953, 431, 411, 412, 432,
	433, 980, 434, 435, 916, 896, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 964, 443, 444, 445, 987,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 892, 0, 457, 935, 936, 937, 938, 0, 464,
	0, 458, 459, 988, 460, 989, 869, 461, 462, 463,
	0, 465, 466, 0, 853, 467, 468, 469, 471, 472,
	470, 474, 954, 475, 0, 900, 476, 477, 478, 527,
	932, 982, 0, 480, 479, 530, 0, 0, 0, 0,
	481, 482, 531, 483, 484, 485, 850, 0, 0, 0,
	0, 0, 848, 0, 0, 0, 0, 0, 0, 846,
	847, 0, 0, 0, 0, 0, 0, 0, 875, 0,
	0, 2193, 873, 905, 863, 864, 865, 861, 862, 874,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 956, 879, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 920, 899, 931, 232, 889, 930, 929,
	0, 233, 234, 891, 890, 237, 238, 239, 881, 955,
	240, 992, 993, 493, 0, 241, 962, 0, 943, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 965,
	257, 258, 946, 944, 945, 952, 948, 947, 951, 259,
	260, 261, 262, 934, 264, 927, 926, 852, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 925, 271, 0,
	272, 0, 273, 274, 0, 275, 858, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 983, 984, 870, 215,
	0, 0, 0, 0, 0, 286, 287, 288, 924, 922,
	923, 0, 291, 0, 292, 0, 0, 966, 293, 294,
	0, 295, 990, 0, 880, 296, 0, 297, 298, 299,
	300, 957, 958, 961, 355, 968, 301, 302, 0, 303,
	304, 901, 0, 0, 216, 305, 307, 314, 0, 967,
	308, 913, 904, 915, 917, 918, 919, 914, 0, 906,
	0, 315, 969, 959, 970, 316, 317, 318, 971, 939,
	940, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 991, 972, 329, 330, 973, 0, 331,
	332, 950, 949, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 893, 344, 974, 347,
	348, 351, 352, 350, 975, 349, 849, 217, 976, 353,
	871, 960, 354, 928, 356, 357, 0, 902, 359, 903,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	977, 367, 978, 985, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 986, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 921, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 979, 405, 406, 407, 408, 859, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 426, 427,
	894, 895, 897, 898, 422, 428, 429, 430, 953, 431,
	411, 412, 432, 433, 980, 434, 435, 916, 896, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 964, 443,
	444, 445, 987, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 892, 0, 457, 935, 936, 937,
	938, 0, 464, 0, 458, 459, 988, 460, 989, 869,
	461, 462, 463, 0, 465, 466, 0, 853, 467, 468,
	469, 471, 472, 470, 474, 954, 475, 0, 900, 476,
	477, 478, 527, 932, 982, 0, 480, 479, 530, 0,
	0, 0, 0, 481, 482, 531, 483, 484, 485, 850,
	0, 0, 0, 0, 0, 848, 0, 0, 0, 0,
	0, 0, 846, 847, 0, 0, 0, 0, 0, 0,
	0, 875, 0, 0, 2191, 873, 2182, 2189, 864, 865,
	861, 862, 874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 956, 879, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 920, 899, 931, 232,
	889, 930, 929, 0, 233, 234, 891, 890, 237, 238,
	239, 881, 955, 240, 992, 993, 493, 0, 241, 962,
	0, 943, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 965, 257, 258, 946, 944, 945, 952, 948,
	947, 951, 259, 260, 261, 262, 934, 2185, 927, 926,
	852, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	925, 271, 0, 272, 0, 273, 274, 0, 275, 858,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 983,
	984, 870, 215, 0, 0, 0, 0, 0, 286, 287,
	288, 924, 922, 923, 0, 291, 0, 292, 0, 0,
	966, 293, 294, 0, 295, 990, 0, 880, 296, 0,
	297, 298, 299, 2186, 957, 958, 961, 355, 968, 301,
	302, 0, 303, 304, 901, 0, 0, 216, 305, 307,
	314, 0, 967, 308, 913, 904, 915, 917, 918, 919,
	914, 0, 906, 0, 315, 969, 959, 970, 316, 317,
	318, 971, 939, 940, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 991, 972, 329, 330,
	973, 0, 331, 332, 950, 949, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 2187, 2184, 345, 893,
	344, 974, 347, 348, 351, 352, 350, 975, 349, 849,
	217, 976, 353, 871, 960, 354, 928, 356, 357, 0,
	902, 359, 903, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 977, 367, 978, 985, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 986,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 921, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 979, 405, 406, 407, 408, 859,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 2188,
	0, 426, 427, 894, 895, 897, 898, 422, 428, 429,
	430, 953, 431, 411, 412, 432, 433, 980, 434, 435,
	916, 896, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 964, 443, 444, 445, 987, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 892, 0, 457,
	935, 936, 937, 938, 0, 464, 0, 458, 459, 988,
	460, 989, 869, 461, 462, 463, 0, 465, 466, 0,
	853, 467, 468, 469, 471, 472, 470, 474, 954, 475,
	0, 900, 476, 477, 478, 527, 932, 982, 0, 480,
	479, 530, 0, 0, 0, 0, 481, 482, 531, 483,
	2183, 485, 850, 0, 0, 0, 0, 0, 848, 0,
	0, 0, 0, 0, 0, 846, 847, 0, 0, 0,
	0, 0, 0, 0, 875, 0, 0, 2179, 873, 2182,
	2189, 864, 865, 861, 862, 874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 956, 879,
	0, 0, 0, 224, 226, 225, 227, 228, 487, 920,
	899, 931, 232, 889, 930, 929, 0, 233, 234, 891,
	890, 237, 238, 239, 881, 955, 240, 992, 993, 493,
	0, 241, 962, 0, 943, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 965, 257, 258, 946, 944,
	945, 952, 948, 947, 951, 259, 260, 261, 262, 934,
	2185, 927, 926, 852, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 925, 271, 0, 272, 0, 273, 274,
	0, 275, 858, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 983, 984, 870, 215, 0, 0, 0, 0,
	0, 286, 287, 288, 924, 922, 923, 0, 291, 0,
	292, 0, 0, 966, 293, 294, 0, 295, 990, 0,
	880, 296, 0, 297, 298, 299, 2186, 957, 958, 961,
	355, 968, 301, 302, 0, 303, 304, 901, 0, 0,
	216, 305, 307, 314, 0, 967, 308, 913, 904, 915,
	917, 918, 919, 914, 0, 906, 0, 315, 969, 959,
	970, 316, 317, 318, 971, 939, 940, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 991,
	972, 329, 330, 973, 0, 331, 332, 950, 949, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 2187,
	2184, 345, 893, 344, 974, 347, 348, 351, 352, 350,
	975, 349, 849, 217, 976, 353, 871, 960, 354, 928,
	356, 357, 0, 902, 359, 903, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 977, 367, 978, 985,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 986, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 921, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 979, 405, 406,
	407, 408, 859, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 2188, 0, 426, 427, 894, 895, 897, 898,
	422, 428, 429, 430, 953, 431, 411, 412, 432, 433,
	980, 434, 435, 916, 896, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 964, 443, 444, 445, 987, 0,
	449, 450, 448, 0, 451, 452, 453, 454, 455, 280,
	892, 0, 457, 935, 936, 937, 938, 0, 464, 0,
	458, 459, 988, 460, 989, 869, 461, 462, 463, 0,
	465, 466, 0, 853, 467, 468, 469, 471, 472, 470,
	474, 954, 475, 0, 900, 476, 477, 478, 527, 932,
	982, 0, 480, 479, 530, 0, 0, 0, 0, 481,
	482, 531, 483, 2183, 485, 850, 0, 0, 0, 0,
	0, 848, 0, 0, 0, 0, 0, 0, 846, 847,
	905, 863, 864, 865, 861, 862, 874, 875, 0, 0,
	0, 873, 0, 0, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 956,
	879, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	920, 899, 931, 232, 889, 930, 929, 0, 233, 234,
	891, 890, 237, 238, 239, 881, 955, 240, 992, 993,
	493, 0, 241, 962, 0, 943, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 965, 257, 258, 946,
	944, 945, 952, 948, 947, 951, 259, 260, 261, 262,
	934, 264, 927, 926, 852, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 925, 271, 0, 272, 0, 273,
	274, 0, 275, 858, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 983, 984, 870, 215, 0, 0, 0,
	0, 0, 286, 287, 288, 924, 922, 923, 0, 291,
	0, 292, 0, 0, 966, 293, 294, 0, 295, 990,
	0, 880, 296, 0, 297, 298, 299, 300, 957, 958,
	961, 355, 968, 301, 302, 0, 303, 304, 901, 0,
	0, 216, 305, 307, 314, 0, 967, 308, 913, 904,
	915, 917, 918, 919, 914, 0, 906, 0, 315, 969,
	959, 970, 316, 317, 318, 971, 939, 940, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	991, 972, 329, 330, 973, 0, 331, 332, 950, 949,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 893, 344, 974, 347, 348, 351, 352,
	350, 975, 349, 849, 217, 976, 353, 871, 960, 354,
	928, 356, 357, 0, 902, 359, 903, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 977, 367, 978,
	985, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 986, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 921, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 979, 405,
	406, 407, 408, 859, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 894, 895, 897,
	898, 422, 428, 429, 430, 953, 431, 411, 412, 432,
	433, 980, 434, 435, 916, 896, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 964, 443, 444, 445, 987,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 892, 0, 457, 935, 936, 937, 938, 0, 464,
	0, 458, 459, 988, 460, 989, 869, 461, 462, 463,
	0, 465, 466, 0, 853, 467, 468, 469, 471, 472,
	470, 474, 954, 475, 0, 900, 476, 477, 478, 527,
	932, 982, 0, 480, 479, 530, 0, 0, 0, 0,
	481, 482, 531, 483, 484, 485, 850, 0, 0, 0,
	0, 0, 848, 0, 0, 0, 0, 0, 0, 846,
	847, 0, 0, 0, 0, 0, 1553, 0, 875, 0,
	0, 0, 873, 905, 863, 864, 865, 861, 862, 874,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 219, 220, 221, 222, 2007, 223, 0, 0, 0,
	0, 0, 956, 879, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 920, 899, 931, 232, 889, 930, 929,
	0, 233, 234, 891, 890, 237, 238, 239, 881, 955,
	240, 992, 993, 493, 0, 241, 962, 0, 943, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 965,
	257, 258, 946, 944, 945, 952, 948, 947, 951, 259,
	260, 261, 262, 934, 264, 927, 926, 852, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 925, 271, 0,
	272, 0, 273, 274, 0, 275, 858, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 983, 984, 870, 215,
	0, 0, 0, 0, 0, 286, 287, 288, 924, 922,
	923, 0, 291, 0, 292, 0, 0, 966, 293, 294,
	0, 295, 990, 0, 880, 296, 0, 297, 298, 299,
	300, 957, 958, 961, 355, 968, 301, 302, 0, 303,
	304, 901, 0, 0, 216, 305, 307, 314, 0, 967,
	308, 913, 904, 915, 917, 918, 919, 914, 0, 906,
	0, 315, 969, 959, 970, 316, 317, 318, 971, 939,
	940, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 991, 972, 329, 330, 973, 0, 331,
	332, 950, 949, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 893, 344, 974, 347,
	348, 351, 352, 350, 975, 349, 849, 217, 976, 353,
	871, 960, 354, 928, 356, 357, 0, 902, 359, 903,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	977, 367, 978, 985, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 986, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 921, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 979, 405, 406, 407, 408, 859, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 426, 427,
	894, 895, 897, 898, 422, 428, 429, 430, 953, 431,
	411, 412, 432, 433, 980, 434, 435, 916, 896, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 964, 443,
	444, 445, 987, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 892, 0, 457, 935, 936, 937,
	938, 0, 464, 0, 458, 459, 988, 460, 989, 869,
	461, 462, 463, 0, 465, 466, 0, 853, 467, 468,
	469, 471, 472, 470, 474, 954, 475, 0, 900, 476,
	477, 478, 527, 932, 982, 0, 480, 479, 530, 0,
	0, 0, 0, 481, 482, 531, 483, 484, 485, 850,
	0, 0, 0, 0, 0, 848, 0, 0, 0, 0,
	0, 0, 846, 847, 0, 0, 0, 0, 0, 0,
	0, 875, 0, 0, 1228, 873, 905, 863, 864, 865,
	861, 862, 874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 956, 879, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 920, 899, 931, 232,
	889, 930, 929, 0, 233, 234, 891, 890, 237, 238,
	239, 881, 955, 240, 992, 993, 493, 0, 241, 962,
	0, 943, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 965, 257, 258, 946, 944, 945, 952, 948,
	947, 951, 259, 260, 261, 262, 934, 264, 927, 926,
	852, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	925, 271, 0, 272, 0, 273, 274, 0, 275, 858,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 983,
	984, 870, 215, 0, 0, 0, 0, 0, 286, 287,
	288, 924, 922, 923, 0, 291, 0, 292, 0, 0,
	966, 293, 294, 0, 295, 990, 0, 880, 296, 0,
	297, 298, 299, 300, 1227, 958, 961, 355, 968, 301,
	302, 0, 303, 304, 901, 0, 0, 216, 305, 307,
	314, 0, 967, 308, 913, 904, 915, 917, 918, 919,
	914, 0, 906, 0, 315, 969, 959, 970, 316, 317,
	318, 971, 939, 940, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 991, 972, 329, 330,
	973, 0, 331, 332, 950, 949, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 893,
	344, 974, 347, 348, 351, 352, 350, 975, 349, 849,
	217, 976, 353, 871, 960, 354, 928, 356, 357, 0,
	902, 359, 903, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 977, 367, 978, 985, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 986,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 921, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 979, 405, 406, 407, 408, 859,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 894, 895, 897, 898, 422, 428, 429,
	430, 953, 431, 411, 412, 432, 433, 980, 434, 435,
	916, 896, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 964, 443, 444, 445, 987, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 892, 0, 457,
	935, 936, 937, 938, 0, 464, 0, 458, 459, 988,
	460, 989, 869, 461, 462, 463, 0, 465, 466, 0,
	853, 467, 468, 469, 471, 472, 470, 474, 954, 475,
	0, 900, 476, 477, 478, 527, 932, 982, 0, 480,
	479, 530, 0, 0, 0, 0, 481, 482, 531, 483,
	484, 485, 850, 0, 0, 0, 0, 0, 848, 0,
	0, 0, 0, 0, 0, 846, 847, 0, 0, 0,
	0, 0, 0, 0, 875, 0, 0, 1222, 873, 905,
	863, 864, 865, 861, 862, 874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 956, 879,
	0, 0, 0, 224, 226, 225, 227, 228, 487, 920,
	899, 931, 232, 889, 930, 929, 0, 233, 234, 891,
	890, 237, 238, 239, 881, 955, 240, 992, 993, 493,
	0, 241, 962, 0, 943, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 965, 257, 258, 946, 944,
	945, 952, 948, 947, 951, 259, 260, 261, 262, 934,
	264, 927, 926, 852, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 925, 271, 0, 272, 0, 273, 274,
	0, 275, 858, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 983, 984, 870, 215, 0, 0, 0, 0,
	0, 286, 287, 288, 924, 922, 923, 0, 291, 0,
	292, 0, 0, 966, 293, 294, 0, 295, 990, 0,
	880, 296, 0, 297, 298, 299, 300, 1221, 958, 961,
	355, 968, 301, 302, 0, 303, 304, 901, 0, 0,
	216, 305, 307, 314, 0, 967, 308, 913, 904, 915,
	917, 918, 919, 914, 0, 906, 0, 315, 969, 959,
	970, 316, 317, 318, 971, 939, 940, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 991,
	972, 329, 330, 973, 0, 331, 332, 950, 949, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 893, 344, 974, 347, 348, 351, 352, 350,
	975, 349, 849, 217, 976, 353, 871, 960, 354, 928,
	356, 357, 0, 902, 359, 903, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 977, 367, 978, 985,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 986, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 921, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 979, 405, 406,
	407, 408, 859, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 0, 426, 427, 894, 895, 897, 898,
	422, 428, 429, 430, 953, 431, 411, 412, 432, 433,
	980, 434, 435, 916, 896, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 964, 443, 444, 445, 987, 0,
	449, 450, 448, 0, 451, 452, 453, 454, 455, 280,
	892, 0, 457, 935, 936, 937, 938, 0, 464, 0,
	458, 459, 988, 460, 989, 869, 461, 462, 463, 0,
	465, 466, 0, 853, 467, 468, 469, 471, 472, 470,
	474, 954, 475, 0, 900, 476, 477, 478, 527, 932,
	982, 0, 480, 479, 530, 0, 0, 0, 0, 481,
	482, 531, 483, 484, 485, 850, 0, 0, 0, 0,
	0, 848, 0, 0, 0, 0, 0, 0, 846, 847,
	0, 0, 0, 0, 0, 0, 0, 875, 0, 0,
	1217, 873, 905, 863, 864, 865, 861, 862, 874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	219, 220, 221, 222, 0, 223, 0, 0, 0, 0,
	0, 956, 879, 0, 0, 0, 224, 226, 225, 227,
	228, 487, 920, 899, 931, 232, 889, 930, 929, 0,
	233, 234, 891, 890, 237, 238, 239, 881, 955, 240,
	992, 993, 493, 0, 241, 962, 0, 943, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 965, 257,
	258, 946, 944, 945, 952, 948, 947, 951, 259, 260,
	261, 262, 934, 264, 927, 926, 852, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 925, 271, 0, 272,
	0, 273, 274, 0, 275, 858, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 983, 984, 870, 215, 0,
	0, 0, 0, 0, 286, 287, 288, 924, 922, 923,
	0, 291, 0, 292, 0, 0, 966, 293, 294, 0,
	295, 990, 0, 880, 296, 0, 297, 298, 299, 300,
	957, 958, 961, 355, 968, 301, 302, 0, 303, 304,
	901, 0, 0, 216, 305, 307, 314, 0, 967, 308,
	913, 904, 915, 917, 918, 919, 914, 0, 906, 0,
	315, 969, 959, 970, 316, 317, 318, 971, 939, 940,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 991, 972, 329, 330, 973, 0, 331, 332,
	950, 949, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 893, 344, 974, 347, 348,
	351, 352, 350, 975, 349, 849, 217, 976, 353, 871,
	960, 354, 928, 356, 357, 0, 902, 359, 903, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 513, 977,
	367, 978, 985, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 986, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	921, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	979, 405, 406, 407, 408, 859, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 894,
	895, 897, 898, 422, 428, 429, 430, 953, 431, 411,
	412, 432, 433, 980, 434, 435, 916, 896, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 964, 443, 444,
	445, 987, 0, 449, 450, 448, 0, 451, 452, 453,
	454, 455, 280, 892, 0, 457, 935, 936, 937, 938,
	0, 464, 0, 458, 459, 988, 460, 989, 869, 461,
	462, 463, 0, 465, 466, 0, 853, 467, 468, 469,
	471, 472, 470, 474, 954, 475, 0, 900, 476, 477,
	478, 527, 932, 982, 0, 480, 479, 530, 0, 0,
	0, 0, 481, 482, 531, 483, 484, 485, 850, 0,
	0, 0, 0, 0, 848, 0, 0, 0, 0, 0,
	0, 846, 847, 905, 863, 864, 865, 861, 862, 874,
	875, 0, 0, 0, 873, 0, 0, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 956, 879, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 920, 899, 931, 232, 889, 930, 929,
	0, 233, 234, 891, 890, 237, 238, 239, 881, 955,
	240, 992, 993, 493, 0, 241, 962, 0, 943, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 965,
	257, 258, 946, 944, 945, 952, 948, 947, 951, 259,
	260, 261, 262, 934, 264, 927, 926, 852, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 925, 271, 0,
	272, 0, 273, 274, 0, 275, 858, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 983, 984, 870, 215,
	0, 0, 0, 0, 0, 286, 287, 288, 924, 922,
	923, 0, 291, 0, 292, 0, 0, 966, 293, 294,
	0, 295, 990, 0, 880, 296, 0, 297, 298, 299,
	300, 957, 958, 961, 355, 968, 301, 302, 0, 303,
	304, 901, 0, 0, 216, 305, 307, 314, 0, 967,
	308, 913, 904, 915, 917, 918, 919, 914, 0, 906,
	0, 315, 969, 959, 970, 316, 317, 318, 971, 939,
	940, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 991, 972, 329, 330, 973, 0, 331,
	332, 950, 949, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 893, 344, 974, 347,
	348, 351, 352, 350, 975, 349, 849, 217, 976, 353,
	871, 960, 354, 928, 356, 357, 0, 902, 359, 903,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	977, 367, 978, 985, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 986, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 921, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 979, 405, 406, 407, 408, 859, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 426, 427,
	894, 895, 897, 898, 422, 428, 429, 430, 953, 431,
	411, 412, 432, 433, 980, 434, 435, 916, 896, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 964, 443,
	444, 445, 987, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 892, 0, 457, 935, 936, 937,
	938, 0, 464, 0, 458, 459, 988, 460, 989, 869,
	461, 462, 463, 0, 465, 466, 0, 853, 467, 468,
	469, 471, 472, 470, 474, 954, 475, 0, 900, 476,
	477, 478, 527, 932, 982, 0, 480, 479, 530, 0,
	0, 0, 0, 481, 482, 531, 483, 484, 485, 850,
	0, 0, 0, 0, 0, 848, 0, 0, 0, 0,
	0, 0, 846, 847, 905, 863, 864, 865, 861, 862,
	874, 875, 0, 0, 0, 873, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 956, 879, 0, 0, 0, 224, 226,
	225, 227, 228, 487, 920, 899, 931, 232, 889, 930,
	929, 0, 233, 234, 891, 890, 237, 238, 239, 881,
	955, 240, 992, 993, 493, 0, 241, 962, 0, 943,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	965, 257, 3643, 946, 944, 945, 952, 948, 947, 951,
	259, 260, 261, 262, 934, 264, 927, 926, 852, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 925, 271,
	0, 272, 0, 273, 274, 0, 275, 858, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 983, 984, 870,
	215, 0, 0, 0, 0, 0, 286, 287, 288, 924,
	922, 923, 0, 291, 0, 292, 0, 0, 966, 293,
	294, 0, 295, 990, 0, 880, 296, 0, 297, 298,
	299, 300, 957, 958, 961, 355, 968, 301, 302, 0,
	303, 304, 901, 0, 0, 216, 305, 307, 314, 0,
	967, 308, 913, 904, 915, 917, 918, 919, 914, 0,
	906, 0, 315, 969, 959, 970, 316, 317, 318, 971,
	939, 940, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 991, 972, 329, 330, 973, 0,
	331, 332, 950, 949, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 893, 344, 974,
	347, 348, 351, 352, 350, 975, 349, 849, 217, 976,
	353, 871, 960, 354, 928, 356, 357, 0, 902, 359,
	903, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 977, 367, 978, 985, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 986, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 921, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 979, 405, 406, 407, 408, 859, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 0, 426,
	427, 894, 895, 897, 898, 422, 428, 429, 430, 953,
	431, 411, 412, 432, 433, 980, 434, 435, 916, 896,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 964,
	443, 444, 445, 987, 0, 449, 450, 448, 0, 451,
	452, 453, 454, 455, 280, 892, 0, 457, 935, 936,
	937, 938, 0, 464, 0, 458, 459, 988, 460, 989,
	869, 461, 462, 463, 0, 3642, 466, 0, 853, 467,
	468, 469, 471, 472, 470, 474, 954, 475, 0, 900,
	476, 477, 478, 527, 932, 982, 0, 480, 479, 530,
	0, 0, 0, 0, 481, 482, 531, 483, 484, 485,
	850, 0, 0, 0, 0, 0, 848, 0, 0, 0,
	0, 0, 0, 846, 847, 905, 863, 864, 865, 861,
	862, 874, 875, 0, 0, 0, 873, 0, 0, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 956, 879, 0, 0, 0, 224,
	226, 225, 227, 228, 3641, 920, 899, 931, 232, 889,
	930, 929, 0, 233, 234, 891, 890, 237, 238, 239,
	881, 955, 240, 992, 993, 493, 0, 241, 962, 0,
	943, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 965, 257, 3643, 946, 944, 945, 952, 948, 947,
	951, 259, 260, 261, 262, 934, 264, 927, 926, 852,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 925,
	271, 0, 272, 0, 273, 274, 0, 275, 858, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 983, 984,
	870, 215, 0, 0, 0, 0, 0, 286, 287, 288,
	924, 922, 923, 0, 291, 0, 292, 0, 0, 966,
	293, 294, 0, 295, 990, 0, 880, 296, 0, 297,
	298, 299, 300, 957, 958, 961, 355, 968, 301, 302,
	0, 303, 304, 901, 0, 0, 216, 305, 307, 314,
	0, 967, 308, 913, 904, 915, 917, 918, 919, 914,
	0, 906, 0, 315, 969, 959, 970, 316, 317, 318,
	971, 939, 940, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 991, 972, 329, 330, 973,
	0, 331, 332, 950, 949, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 893, 344,
	974, 347, 348, 351, 352, 350, 975, 349, 849, 217,
	976, 353, 871, 960, 354, 928, 356, 357, 0, 902,
	359, 903, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 977, 367, 978, 985, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 986, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 921, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 979, 405, 406, 407, 408, 859, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 894, 895, 897, 898, 422, 428, 429, 430,
	953, 431, 411, 412, 432, 433, 980, 434, 435, 916,
	896, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	964, 443, 444, 445, 987, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 892, 0, 457, 935,
	936, 937, 938, 0, 464, 0, 458, 459, 988, 460,
	989, 869, 461, 462, 463, 0, 3642, 466, 0, 853,
	467, 468, 469, 471, 472, 470, 474, 954, 475, 0,
	900, 476, 477, 478, 527, 932, 982, 0, 480, 479,
	530, 0, 0, 0, 0, 481, 482, 531, 483, 484,
	485, 850, 0, 0, 0, 0, 0, 848, 0, 0,
	0, 0, 0, 0, 846, 847, 905, 863, 864, 865,
	2551, 2552, 874, 875, 0, 0, 0, 873, 0, 0,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 956, 879, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 920, 899, 931, 232,
	889, 930, 929, 0, 233, 234, 891, 890, 237, 238,
	239, 881, 955, 240, 992, 993, 493, 0, 241, 962,
	0, 943, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 965, 257, 258, 946, 944, 945, 952, 948,
	947, 951, 259, 260, 261, 262, 934, 264, 927, 926,
	852, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	925, 271, 0, 272, 0, 273, 274, 0, 275, 858,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 983,
	984, 870, 215, 0, 0, 0, 0, 0, 286, 287,
	288, 924, 922, 923, 0, 291, 0, 292, 0, 0,
	966, 293, 294, 0, 295, 990, 0, 880, 296, 0,
	297, 298, 299, 300, 957, 958, 961, 355, 968, 301,
	302, 0, 303, 304, 901, 0, 0, 216, 305, 307,
	314, 0, 967, 308, 913, 904, 915, 917, 918, 919,
	914, 0, 906, 0, 315, 969, 959, 970, 316, 317,
	318, 971, 939, 940, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 991, 972, 329, 330,
	973, 0, 331, 332, 950, 949, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 893,
	344, 974, 347, 348, 351, 352, 350, 975, 349, 849,
	217, 976, 353, 871, 960, 354, 928, 356, 357, 0,
	902, 359, 903, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 977, 367, 978, 985, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 986,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 921, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 979, 405, 406, 407, 408, 859,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 894, 895, 897, 898, 422, 428, 429,
	430, 953, 431, 411, 412, 432, 433, 980, 434, 435,
	916, 896, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 964, 443, 444, 445, 987, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 892, 0, 457,
	935, 936, 937, 938, 0, 464, 0, 458, 459, 988,
	460, 989, 869, 461, 462, 463, 0, 465, 466, 0,
	853, 467, 468, 469, 471, 472, 470, 474, 954, 475,
	0, 900, 476, 477, 478, 527, 932, 982, 0, 480,
	479, 530, 0, 0, 0, 0, 481, 482, 531, 483,
	484, 485, 850, 0, 0, 0, 0, 0, 848, 0,
	0, 0, 0, 0, 0, 846, 847, 905, 863, 864,
	865, 2549, 2550, 874, 875, 0, 0, 0, 873, 0,
	0, 0, 0, 0, 218, 219, 220, 221, 222, 0,
	223, 0, 0, 0, 0, 0, 956, 879, 0, 0,
	0, 224, 226, 225, 227, 228, 487, 920, 899, 931,
	232, 889, 930, 929, 0, 233, 234, 891, 890, 237,
	238, 239, 881, 955, 240, 992, 993, 493, 0, 241,
	962, 0, 943, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 965, 257, 258, 946, 944, 945, 952,
	948, 947, 951, 259, 260, 261, 262, 934, 264, 927,
	926, 852, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 925, 271, 0, 272, 0, 273, 274, 0, 275,
	858, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	983, 984, 870, 215, 0, 0, 0, 0, 0, 286,
	287, 288, 924, 922, 923, 0, 291, 0, 292, 0,
	0, 966, 293, 294, 0, 295, 990, 0, 880, 296,
	0, 297, 298, 299, 300, 957, 958, 961, 355, 968,
	301, 302, 0, 303, 304, 901, 0, 0, 216, 305,
	307, 314, 0, 967, 308, 913, 904, 915, 917, 918,
	919, 914, 0, 906, 0, 315, 969, 959, 970, 316,
	317, 318, 971, 939, 940, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 991, 972, 329,
	330, 973, 0, 331, 332, 950, 949, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	893, 344, 974, 347, 348, 351, 352, 350, 975, 349,
	849, 217, 976, 353, 871, 960, 354, 928, 356, 357,
	0, 902, 359, 903, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 513, 977, 367, 978, 985, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	986, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 921, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 979, 405, 406, 407, 408,
	859, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 894, 895, 897, 898, 422, 428,
	429, 430, 953, 431, 411, 412, 432, 433, 980, 434,
	435, 916, 896, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 964, 443, 444, 445, 987, 0, 449, 450,
	448, 0, 451, 452, 453, 454, 455, 280, 892, 0,
	457, 935, 936, 937, 938, 0, 464, 0, 458, 459,
	988, 460, 989, 869, 461, 462, 463, 0, 465, 466,
	0, 853, 467, 468, 469, 471, 472, 470, 474, 954,
	475, 0, 900, 476, 477, 478, 527, 932, 982, 0,
	480, 479, 530, 0, 0, 0, 0, 481, 482, 531,
	483, 484, 485, 850, 0, 0, 0, 0, 0, 848,
	0, 0, 0, 0, 0, 0, 846, 847, 905, 863,
	864, 865, 861, 862, 874, 875, 0, 0, 0, 873,
	0, 0, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 956, 879, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 920, 899,
	931, 232, 889, 930, 929, 0, 233, 234, 891, 890,
	237, 238, 239, 881, 955, 240, 992, 993, 493, 0,
	241, 962, 0, 943, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 965, 257, 258, 946, 944, 945,
	952, 948, 947, 951, 259, 260, 261, 262, 934, 264,
	927, 926, 852, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 925, 271, 0, 272, 0, 273, 274, 0,
	275, 858, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 983, 984, 870, 215, 0, 0, 0, 0, 0,
	286, 287, 288, 924, 922, 923, 0, 291, 0, 292,
	0, 0, 966, 293, 294, 0, 295, 990, 0, 880,
	296, 0, 297, 298, 299, 300, 957, 958, 961, 355,
	968, 301, 302, 0, 303, 304, 901, 0, 0, 216,
	305, 307, 314, 0, 967, 308, 913, 904, 915, 917,
	918, 919, 914, 0, 906, 0, 315, 969, 959, 970,
	316, 317, 318, 971, 939, 940, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 991, 972,
	329, 330, 973, 0, 331, 332, 950, 949, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 893, 344, 974, 347, 348, 351, 352, 350, 975,
	349, 849, 217, 976, 353, 871, 960, 354, 928, 356,
	357, 0, 902, 359, 903, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 977, 367, 978, 985, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 986, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 921, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 979, 405, 406, 407,
	408, 859, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 426, 427, 894, 895, 897, 898, 422,
	428, 429, 430, 953, 431, 411, 412, 432, 433, 980,
	434, 435, 916, 896, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 964, 443, 444, 445, 987, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 892,
	0, 457, 935, 936, 937, 938, 0, 464, 0, 458,
	459, 988, 460, 989, 869, 461, 462, 463, 0, 465,
	466, 0, 853, 467, 468, 469, 471, 472, 470, 474,
	954, 475, 0, 900, 476, 477, 478, 527, 932, 982,
	0, 480, 479, 530, 0, 0, 0, 0, 481, 482,
	531, 483, 484, 485, 850, 0, 0, 0, 0, 0,
	848, 0, 0, 0, 0, 0, 0, 2015, 2016, 905,
	863, 864, 865, 861, 862, 874, 875, 0, 0, 0,
	873, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 956, 879,
	0, 0, 0, 224, 226, 225, 227, 228, 487, 920,
	899, 931, 232, 889, 930, 929, 0, 233, 234, 891,
	890, 237, 238, 239, 881, 955, 240, 992, 993, 493,
	0, 241, 962, 0, 943, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 965, 257, 258, 946, 944,
	945, 952, 948, 947, 951, 259, 260, 261, 262, 934,
	264, 927, 926, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 925, 271, 0, 272, 0, 273, 274,
	0, 275, 858, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 983, 984, 870, 215, 0, 0, 0, 0,
	0, 286, 287, 288, 924, 922, 923, 0, 291, 0,
	292, 0, 0, 966, 293, 294, 0, 295, 990, 0,
	880, 296, 0, 297, 298, 299, 300, 957, 958, 961,
	355, 968, 301, 302, 0, 303, 304, 901, 0, 0,
	216, 305, 307, 314, 0, 967, 308, 913, 904, 915,
	917, 918, 919, 914, 0, 906, 0, 315, 969, 959,
	970, 316, 317, 318, 971, 939, 940, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 991,
	972, 329, 330, 973, 0, 331, 332, 950, 949, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 893, 344, 974, 347, 348, 351, 352, 350,
	975, 349, 0, 217, 976, 353, 871, 960, 354, 928,
	356, 357, 0, 902, 359, 903, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 977, 367, 978, 985,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 986, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 921, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 979, 405, 406,
	407, 408, 859, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 0, 426, 427, 894, 895, 897, 898,
	422, 428, 429, 430, 953, 431, 411, 412, 432, 433,
	980, 434, 435, 916, 896, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 964, 443, 444, 445, 987, 0,
	449, 450, 448, 0, 451, 452, 453, 454, 455, 280,
	892, 0, 457, 935, 936, 937, 938, 0, 464, 0,
	458, 459, 988, 460, 989, 869, 461, 462, 463, 0,
	465, 466, 0, 0, 467, 468, 469, 471, 472, 470,
	474, 954, 475, 0, 900, 476, 477, 478, 527, 932,
	982, 0, 480, 479, 530, 0, 0, 0, 0, 481,
	482, 531, 483, 484, 485, 0, 0, 0, 0, 0,
	0, 2201, 0, 0, 0, 0, 0, 0, 2199, 2200,
	905, 863, 864, 865, 861, 862, 874, 875, 0, 0,
	0, 873, 0, 0, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 956,
	879, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	920, 899, 931, 232, 889, 930, 929, 0, 233, 234,
	891, 890, 237, 238, 239, 881, 955, 240, 992, 993,
	493, 0, 241, 962, 0, 943, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 965, 257, 258, 946,
	944, 945, 952, 948, 947, 951, 259, 260, 261, 262,
	934, 264, 927, 926, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 925, 271, 0, 272, 0, 273,
	274, 0, 275, 858, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 983, 984, 870, 215, 0, 0, 0,
	0, 0, 286, 287, 288, 924, 922, 923, 0, 291,
	0, 292, 0, 0, 966, 293, 294, 0, 295, 990,
	0, 880, 296, 0, 297, 298, 299, 300, 957, 958,
	961, 355, 968, 301, 302, 0, 303, 304, 901, 0,
	0, 216, 305, 307, 314, 0, 967, 308, 913, 904,
	915, 917, 918, 919, 914, 0, 906, 0, 315, 969,
	959, 970, 316, 317, 318, 971, 939, 940, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	991, 972, 329, 330, 973, 0, 331, 332, 950, 949,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 893, 344, 974, 347, 348, 351, 352,
	350, 975, 349, 0, 217, 976, 353, 871, 960, 354,
	928, 356, 357, 0, 902, 359, 903, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 977, 367, 978,
	985, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 986, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 921, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 979, 405,
	406, 407, 408, 2544, 2545, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 894, 895, 897,
	898, 422, 428, 429, 430, 953, 431, 411, 412, 432,
	433, 980, 434, 435, 916, 896, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 964, 443, 444, 445, 987,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 892, 0, 457, 935, 936, 937, 938, 0, 464,
	0, 458, 459, 988, 460, 989, 869, 461, 462, 463,
	0, 465, 466, 0, 0, 467, 468, 469, 471, 472,
	470, 474, 954, 475, 0, 900, 476, 477, 478, 527,
	932, 982, 0, 480, 479, 530, 0, 0, 0, 0,
	481, 482, 531, 483, 484, 485, 905, 863, 864, 865,
	861, 862, 874, 0, 0, 0, 0, 0, 0, 1765,
	1766, 0, 0, 218, 219, 220, 221, 222, 875, 223,
	0, 0, 873, 0, 0, 956, 879, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 920, 899, 931, 232,
	889, 930, 929, 0, 233, 234, 891, 890, 237, 238,
	239, 0, 955, 240, 992, 993, 493, 0, 241, 962,
	0, 943, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 965, 257, 258, 946, 944, 945, 952, 948,
	947, 951, 259, 260, 261, 262, 934, 264, 927, 926,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	925, 271, 0, 272, 0, 273, 274, 0, 275, 497,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 983,
	984, 870, 215, 0, 0, 0, 0, 0, 286, 287,
	288, 924, 922, 923, 0, 291, 0, 292, 0, 0,
	966, 293, 294, 0, 295, 990, 0, 880, 296, 0,
	297, 298, 299, 300, 957, 958, 961, 355, 968, 301,
	302, 0, 303, 304, 901, 0, 0, 216, 305, 307,
	314, 0, 967, 308, 913, 904, 915, 917, 918, 919,
	914, 0, 906, 0, 315, 969, 959, 970, 316, 317,
	318, 971, 939, 940, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 991, 972, 329, 330,
	973, 0, 331, 332, 950, 949, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 893,
	344, 974, 347, 348, 351, 352, 350, 975, 349, 0,
	217, 976, 353, 871, 960, 354, 928, 356, 357, 0,
	902, 359, 903, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 977, 367, 978, 985, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 986,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 921, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 979, 405, 406, 407, 408, 859,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 894, 895, 897, 898, 422, 428, 429,
	430, 953, 431, 411, 412, 432, 433, 980, 434, 435,
	916, 896, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 964, 443, 444, 445, 987, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 892, 0, 457,
	935, 936, 937, 938, 0, 464, 0, 458, 459, 988,
	460, 989, 869, 461, 462, 463, 0, 465, 466, 0,
	0, 467, 468, 469, 471, 472, 470, 474, 954, 475,
	0, 900, 476, 477, 478, 527, 932, 982, 0, 480,
	479, 530, 0, 0, 0, 0, 481, 482, 531, 483,
	484, 485, 905, 863, 864, 865, 861, 862, 874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	219, 220, 221, 222, 875, 223, 0, 0, 873, 0,
	0, 956, 879, 0, 0, 0, 224, 226, 225, 227,
	228, 0, 920, 899, 931, 232, 889, 930, 929, 0,
	233, 234, 891, 890, 237, 238, 239, 881, 955, 240,
	992, 993, 493, 0, 241, 962, 0, 943, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 965, 257,
	3643, 946, 944, 945, 952, 948, 947, 951, 259, 260,
	261, 262, 934, 264, 927, 926, 852, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 925, 271, 0, 272,
	0, 273, 274, 0, 275, 858, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 983, 984, 870, 215, 0,
	0, 0, 0, 0, 286, 287, 288, 924, 922, 923,
	0, 291, 0, 292, 0, 0, 966, 293, 294, 0,
	295, 990, 0, 880, 296, 0, 297, 298, 299, 300,
	957, 958, 961, 355, 0, 301, 302, 0, 303, 304,
	901, 0, 0, 216, 305, 307, 314, 0, 967, 308,
	913, 904, 915, 917, 918, 919, 914, 0, 906, 0,
	315, 0, 959, 0, 316, 317, 318, 971, 939, 940,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 991, 972, 329, 330, 0, 0, 331, 332,
	950, 949, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 893, 344, 974, 347, 348,
	351, 352, 350, 975, 349, 849, 217, 0, 353, 871,
	960, 354, 928, 356, 357, 0, 902, 359, 903, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 513, 977,
	367, 978, 985, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 986, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	921, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	979, 405, 406, 407, 408, 859, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 894,
	895, 897, 898, 422, 428, 429, 430, 953, 431, 411,
	412, 432, 433, 0, 434, 435, 916, 896, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 964, 443, 444,
	445, 987, 0, 449, 450, 448, 0, 451, 452, 453,
	454, 455, 280, 892, 0, 457, 935, 936, 937, 938,
	0, 464, 0, 458, 459, 988, 460, 989, 869, 461,
	462, 463, 0, 3642, 466, 0, 853, 467, 468, 469,
	471, 472, 470, 474, 954, 475, 0, 900, 476, 477,
	478, 527, 932, 982, 0, 480, 479, 530, 0, 0,
	0, 0, 481, 482, 531, 483, 484, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 839, 0, 1030, 0,
	0, 846, 847, 0, 0, 0, 0, 0, 0, 0,
	875, 0, 0, 0, 873, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 956, 0, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 0, 233, 234, 235, 236,
	237, 238, 239, 0, 955, 240, 491, 492, 493, 0,
	241, 962, 0, 943, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 965, 257, 258, 946, 944, 945,
	952, 948, 947, 951, 259, 260, 261, 262, 263, 264,
	495, 496, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 983, 984, 0, 215, 0, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 0, 292,
	0, 0, 966, 293, 294, 0, 295, 990, 0, 502,
	296, 0, 297, 298, 299, 300, 957, 958, 961, 355,
	968, 301, 302, 0, 303, 304, 306, 0, 0, 216,
	305, 307, 314, 0, 967, 308, 506, 310, 309, 311,
	312, 313, 507, 0, 508, 0, 315, 969, 959, 970,
	316, 317, 318, 971, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 1016, 327, 326, 0, 328, 991, 972,
	329, 330, 973, 0, 331, 332, 950, 949, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 974, 347, 348, 351, 352, 350, 975,
	349, 0, 217, 976, 353, 0, 960, 354, 512, 356,
	357, 0, 358, 359, 360, 0, 1022, 362, 363, 364,
	0, 0, 365, 366, 513, 977, 367, 978, 985, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 986, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 979, 405, 406, 407,
	408, 518, 1024, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 181, 426, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 953, 431, 411, 412, 432, 433, 980,
	434, 435, 519, 436, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 987, 0, 449,
	450, 448, 183, 451, 452, 453, 454, 455, 280, 456,
	0, 457, 521, 522, 523, 524, 0, 464, 0, 458,
	459, 988, 460, 989, 0, 461, 462, 463, 0, 465,
	466, 0, 0, 467, 468, 469, 471, 472, 470, 474,
	954, 475, 0, 473, 476, 477, 478, 1337, 528, 529,
	0, 480, 479, 530, 1030, 0, 0, 175, 481, 482,
	531, 483, 484, 485, 0, 176, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 956, 1020, 0, 1635, 0, 224, 226,
	225, 227, 228, 487, 488, 229, 489, 232, 230, 231,
	490, 0, 233, 234, 235, 236, 237, 238, 239, 0,
	955, 240, 491, 492, 493, 0, 241, 962, 0, 943,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	965, 257, 258, 946, 944, 945, 952, 948, 947, 951,
	259, 260, 261, 262, 263, 264, 495, 496, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 497, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 983, 984, 0,
	215, 0, 0, 0, 0, 0, 286, 287, 288, 500,
	289, 290, 0, 291, 0, 292, 0, 0, 966, 293,
	294, 0, 295, 990, 0, 502, 296, 0, 297, 298,
	299, 300, 957, 958, 961, 355, 968, 301, 302, 0,
	303, 304, 306, 0, 0, 216, 305, 307, 314, 0,
	967, 308, 506, 310, 309, 311, 312, 313, 507, 0,
	508, 0, 315, 969, 959, 970, 316, 317, 318, 971,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 1016,
	327, 326, 0, 328, 991, 972, 329, 330, 973, 0,
	331, 332, 950, 949, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 974,
	347, 348, 351, 352, 350, 975, 349, 0, 217, 976,
	353, 0, 960, 354, 512, 356, 357, 0, 358, 359,
	360, 0, 1022, 362, 363, 364, 0, 0, 365, 366,
	513, 977, 367, 978, 985, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 986, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 517, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 979, 405, 406, 407, 408, 518, 1024, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 181, 426,
	427, 421, 423, 424, 425, 422, 428, 429, 430, 953,
	431, 411, 412, 432, 433, 980, 434, 435, 519, 436,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 447,
	443, 444, 445, 987, 0, 449, 450, 448, 183, 451,
	452, 453, 454, 455, 280, 456, 0, 457, 521, 522,
	523, 524, 0, 464, 0, 458, 459, 988, 460, 989,
	0, 461, 462, 463, 0, 465, 466, 0, 0, 467,
	468, 469, 471, 472, 470, 474, 954, 475, 0, 473,
	476, 477, 478, 1337, 528, 529, 0, 480, 479, 530,
	2697, 0, 1030, 175, 481, 482, 531, 483, 484, 485,
	0, 176, 0, 0, 0, 0, 0, 0, 0, 218,
	219, 220, 221, 222, 0, 223, 0, 0, 0, 0,
	1020, 956, 1635, 0, 0, 0, 224, 226, 225, 227,
	228, 487, 488, 229, 489, 232, 230, 231, 490, 0,
	233, 234, 235, 236, 237, 238, 239, 0, 955, 240,
	491, 492, 493, 0, 241, 962, 0, 943, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 965, 257,
	258, 946, 944, 945, 952, 948, 947, 951, 259, 260,
	261, 262, 263, 264, 495, 496, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 497, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 983, 984, 0, 215, 0,
	0, 0, 0, 0, 286, 287, 288, 500, 289, 290,
	0, 291, 0, 292, 0, 0, 966, 293, 294, 0,
	295, 990, 0, 502, 296, 0, 297, 298, 299, 300,
	957, 958, 961, 355, 968, 301, 302, 0, 303, 304,
	306, 0, 0, 216, 305, 307, 314, 0, 967, 308,
	506, 310, 309, 311, 312, 313, 507, 0, 508, 0,
	315, 969, 959, 970, 316, 317, 318, 971, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 1016, 327, 326,
	0, 328, 991, 972, 329, 330, 973, 0, 331, 332,
	950, 949, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 974, 347, 348,
	351, 352, 350, 975, 349, 0, 217, 976, 353, 0,
	960, 354, 512, 356, 357, 0, 358, 359, 360, 0,
	1022, 362, 363, 364, 0, 0, 365, 366, 513, 977,
	367, 978, 985, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 986, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	517, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	979, 405, 406, 407, 408, 518, 1024, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 421,
	423, 424, 425, 422, 428, 429, 430, 953, 431, 411,
	412, 432, 433, 980, 434, 435, 519, 436, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 447, 443, 444,
	445, 987, 0, 449, 450, 448, 0, 451, 452, 453,
	454, 455, 280, 456, 0, 457, 521, 522, 523, 524,
	0, 464, 0, 458, 459, 988, 460, 989, 0, 461,
	462, 463, 0, 465, 466, 0, 0, 467, 468, 469,
	471, 472, 470, 474, 954, 475, 0, 473, 476, 477,
	478, 527, 528, 529, 0, 480, 479, 530, 1012, 0,
	1030, 0, 481, 482, 531, 483, 484, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 1020, 956,
	1018, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 0, 233, 234,
	235, 236, 237, 238, 239, 0, 955, 240, 491, 492,
	493, 0, 241, 962, 0, 943, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 965, 257, 258, 946,
	944, 945, 952, 948, 947, 951, 259, 260, 261, 262,
	263, 264, 495, 496, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 983, 984, 0, 215, 0, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	0, 292, 0, 0, 966, 293, 294, 0, 295, 990,
	0, 502, 296, 0, 297, 298, 299, 300, 957, 958,
	961, 355, 968, 301, 302, 0, 303, 304, 306, 0,
	0, 216, 305, 307, 314, 0, 967, 308, 506, 310,
	309, 311, 312, 313, 507, 0, 508, 0, 315, 969,
	959, 970, 316, 317, 318, 971, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 1016, 327, 326, 0, 328,
	991, 972, 329, 330, 973, 0, 331, 332, 950, 949,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 974, 347, 348, 351, 352,
	350, 975, 349, 0, 217, 976, 353, 0, 960, 354,
	512, 356, 357, 0, 358, 359, 360, 0, 1022, 362,
	363, 364, 0, 0, 365, 366, 513, 977, 367, 978,
	985, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 986, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 979, 405,
	406, 407, 408, 518, 1024, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 953, 431, 411, 412, 432,
	433, 980, 434, 435, 519, 436, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 987,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 456, 0, 457, 521, 522, 523, 524, 0, 464,
	0, 458, 459, 988, 460, 989, 0, 461, 462, 463,
	0, 465, 466, 0, 0, 467, 468, 469, 471, 472,
	470, 474, 954, 475, 0, 473, 476, 477, 478, 527,
	528, 529, 0, 480, 479, 530, 1030, 0, 0, 0,
	481, 482, 531, 483, 484, 485, 0, 0, 0, 0,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 956, 1020, 0, 1018, 0,
	224, 226, 225, 227, 228, 487, 488, 229, 489, 232,
	230, 231, 490, 0, 233, 234, 235, 236, 237, 238,
	239, 0, 955, 240, 491, 492, 493, 0, 241, 962,
	0, 943, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 965, 257, 258, 946, 944, 945, 952, 948,
	947, 951, 259, 260, 261, 262, 263, 264, 495, 496,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 497,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 983,
	984, 0, 215, 0, 0, 0, 0, 0, 286, 287,
	288, 500, 289, 290, 0, 291, 0, 292, 0, 0,
	966, 293, 294, 0, 295, 990, 0, 502, 296, 0,
	297, 298, 299, 300, 957, 958, 961, 355, 968, 301,
	302, 0, 303, 304, 306, 0, 0, 216, 305, 307,
	314, 0, 967, 308, 506, 310, 309, 311, 312, 313,
	507, 0, 508, 0, 315, 969, 959, 970, 316, 317,
	318, 971, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 1016, 327, 326, 0, 328, 991, 972, 329, 330,
	973, 0, 331, 332, 950, 949, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 974, 347, 348, 351, 352, 350, 975, 349, 0,
	217, 976, 353, 0, 960, 354, 512, 356, 357, 0,
	358, 359, 360, 0, 1022, 362, 363, 364, 0, 0,
	365, 366, 513, 977, 367, 978, 985, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 986,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 517, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 979, 405, 406, 407, 408, 518,
	1024, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 421, 423, 424, 425, 422, 428, 429,
	430, 953, 431, 411, 412, 432, 433, 980, 434, 435,
	519, 436, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 447, 443, 444, 445, 987, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 456, 0, 457,
	521, 522, 523, 524, 0, 464, 0, 458, 459, 988,
	460, 989, 0, 461, 462, 463, 0, 465, 466, 0,
	0, 467, 468, 469, 471, 472, 470, 474, 954, 475,
	0, 473, 476, 477, 478, 527, 528, 529, 0, 480,
	479, 530, 1030, 0, 0, 0, 481, 482, 531, 483,
	484, 485, 0, 0, 0, 0, 0, 0, 0, 218,
	219, 220, 221, 222, 0, 223, 0, 0, 0, 0,
	0, 956, 1020, 0, 1018, 0, 224, 226, 225, 227,
	228, 487, 488, 229, 489, 232, 230, 231, 490, 0,
	233, 234, 235, 236, 237, 238, 239, 0, 955, 240,
	491, 492, 493, 0, 241, 962, 0, 943, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 965, 257,
	258, 946, 944, 945, 952, 948, 947, 951, 259, 260,
	261, 262, 263, 264, 495, 496, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 497, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 983, 984, 0, 215, 0,
	0, 0, 0, 0, 286, 287, 288, 500, 289, 290,
	0, 291, 0, 292, 0, 0, 966, 293, 294, 0,
	295, 990, 0, 502, 296, 0, 297, 298, 299, 300,
	957, 958, 961, 355, 968, 301, 302, 0, 303, 304,
	306, 0, 0, 216, 305, 307, 314, 0, 967, 308,
	506, 310, 309, 311, 312, 313, 507, 0, 508, 0,
	315, 969, 959, 970, 316, 317, 318, 971, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 991, 972, 329, 330, 973, 0, 331, 332,
	950, 949, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 974, 347, 348,
	351, 352, 350, 975, 349, 0, 217, 976, 353, 0,
	960, 354, 512, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 513, 977,
	367, 978, 985, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 986, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	517, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	979, 405, 406, 407, 408, 518, 1024, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 421,
	423, 424, 425, 422, 428, 429, 430, 953, 431, 411,
	412, 432, 433, 980, 434, 435, 519, 436, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 447, 443, 444,
	445, 987, 0, 449, 450, 448, 0, 451, 452, 453,
	454, 455, 280, 456, 0, 457, 521, 522, 523, 524,
	0, 464, 0, 458, 459, 988, 460, 989, 0, 461,
	462, 463, 0, 465, 466, 0, 0, 467, 468, 469,
	471, 472, 470, 474, 954, 475, 0, 473, 476, 477,
	478, 527, 528, 529, 0, 480, 479, 530, 839, 0,
	1201, 0, 481, 482, 531, 483, 484, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 486,
	1536, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 0, 233, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 491, 492,
	493, 0, 241, 494, 0, 1093, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 965, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 495, 496, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 0, 215, 0, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	0, 292, 0, 0, 966, 293, 294, 0, 295, 501,
	0, 502, 296, 0, 297, 298, 299, 300, 503, 504,
	505, 355, 968, 301, 302, 0, 303, 304, 306, 0,
	0, 0, 305, 307, 314, 0, 967, 308, 506, 310,
	309, 311, 312, 313, 507, 0, 508, 0, 315, 969,
	509, 970, 316, 317, 318, 971, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	510, 972, 329, 330, 973, 0, 331, 332, 0, 0,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 974, 347, 348, 351, 352,
	350, 975, 349, 0, 0, 976, 353, 0, 511, 354,
	512, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 977, 367, 978,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 515, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 979, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 181, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 0, 431, 411, 412, 432,
	433, 980, 434, 435, 519, 436, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	0, 449, 450, 448, 183, 451, 452, 453, 454, 455,
	280, 456, 0, 457, 521, 522, 523, 524, 0, 464,
	0, 458, 459, 525, 460, 526, 0, 461, 462, 463,
	0, 465, 466, 0, 0, 467, 468, 469, 471, 472,
	470, 474, 0, 475, 0, 473, 476, 477, 478, 1337,
	528, 529, 0, 480, 479, 530, 1334, 0, 1201, 175,
	481, 482, 531, 483, 484, 485, 0, 176, 0, 0,
	0, 0, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 486, 150, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 0, 233, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 491, 492, 493, 0,
	241, 494, 0, 1093, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 965, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	495, 496, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 0, 215, 0, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 0, 292,
	0, 0, 966, 293, 294, 0, 295, 501, 0, 502,
	296, 0, 297, 298, 299, 300, 503, 504, 505, 355,
	968, 301, 302, 0, 303, 304, 306, 0, 0, 0,
	305, 307, 314, 0, 967, 308, 506, 310, 309, 311,
	312, 313, 507, 0, 508, 0, 315, 969, 509, 970,
	316, 317, 318, 971, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 510, 972,
	329, 330, 973, 0, 331, 332, 0, 0, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 974, 347, 348, 351, 352, 350, 975,
	349, 0, 0, 976, 353, 0, 511, 354, 512, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 977, 367, 978, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 515, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 979, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 181, 426, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 0, 431, 411, 412, 432, 433, 980,
	434, 435, 519, 436, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 0, 449,
	450, 448, 183, 451, 452, 453, 454, 455, 280, 456,
	0, 457, 521, 522, 523, 524, 0, 464, 0, 458,
	459, 525, 460, 526, 0, 461, 462, 463, 0, 465,
	466, 0, 0, 467, 468, 469, 471, 472, 470, 474,
	0, 475, 0, 473, 476, 477, 478, 1337, 528, 529,
	0, 480, 479, 530, 0, 0, 0, 175, 481, 482,
	531, 483, 484, 485, 0, 176, 0, 0, 0, 0,
	1201, 1200, 0, 0, 0, 0, 1198, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 0, 233, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 491, 492,
	493, 0, 241, 494, 0, 1093, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 965, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 495, 496, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 0, 215, 0, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	0, 292, 0, 0, 966, 293, 294, 0, 295, 501,
	0, 502, 296, 0, 297, 298, 299, 300, 503, 504,
	505, 355, 968, 301, 302, 0, 303, 304, 306, 0,
	0, 0, 305, 307, 314, 0, 967, 308, 506, 310,
	309, 311, 312, 313, 507, 0, 508, 0, 315, 969,
	509, 970, 316, 317, 318, 971, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	510, 972, 329, 330, 973, 0, 331, 332, 0, 0,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 974, 347, 348, 351, 352,
	350, 975, 349, 0, 0, 976, 353, 0, 511, 354,
	512, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 977, 367, 978,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 515, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 979, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 0, 431, 411, 412, 432,
	433, 980, 434, 435, 519, 436, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 456, 0, 457, 521, 522, 523, 524, 0, 464,
	0, 458, 459, 525, 460, 526, 0, 461, 462, 463,
	0, 465, 466, 0, 0, 467, 468, 469, 471, 472,
	470, 474, 0, 475, 0, 473, 476, 477, 478, 527,
	528, 529, 0, 480, 479, 530, 0, 0, 0, 0,
	481, 482, 531, 483, 484, 485, 1201, 1200, 0, 0,
	0, 0, 1198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 219, 220, 221, 222, 2901, 223,
	0, 0, 0, 0, 0, 486, 0, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 488, 229, 489, 232,
	230, 231, 490, 0, 233, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 491, 492, 493, 0, 241, 494,
	0, 1093, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 965, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 495, 496,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 497,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 498,
	499, 0, 215, 0, 0, 0, 0, 0, 286, 287,
	288, 500, 289, 290, 0, 291, 0, 292, 0, 0,
	966, 293, 294, 0, 295, 501, 0, 502, 296, 0,
	297, 298, 299, 300, 503, 504, 505, 355, 968, 301,
	302, 0, 303, 304, 306, 0, 0, 0, 305, 307,
	314, 0, 967, 308, 506, 310, 309, 311, 312, 313,
	507, 0, 508, 0, 315, 969, 509, 970, 316, 317,
	318, 971, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 510, 972, 329, 330,
	973, 0, 331, 332, 0, 0, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 974, 347, 348, 351, 352, 350, 975, 349, 0,
	0, 976, 353, 0, 511, 354, 512, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 977, 367, 978, 514, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 515,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 517, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 979, 405, 406, 407, 408, 518,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 421, 423, 424, 425, 422, 428, 429,
	430, 0, 431, 411, 412, 432, 433, 980, 434, 435,
	519, 436, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 447, 443, 444, 445, 520, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 456, 0, 457,
	521, 522, 523, 524, 0, 464, 0, 458, 459, 525,
	460, 526, 0, 461, 462, 463, 0, 465, 466, 0,
	0, 467, 468, 469, 471, 472, 470, 474, 0, 475,
	0, 473, 476, 477, 478, 527, 528, 529, 0, 480,
	479, 530, 0, 0, 0, 0, 481, 482, 531, 483,
	484, 485, 1201, 1200, 0, 0, 0, 0, 1198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	219, 220, 221, 222, 1207, 223, 0, 0, 0, 0,
	0, 486, 0, 0, 0, 0, 224, 226, 225, 227,
	228, 487, 488, 229, 489, 232, 230, 231, 490, 0,
	233, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	491, 492, 493, 0, 241, 494, 0, 1093, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 965, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	261, 262, 263, 264, 495, 496, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 497, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 498, 499, 0, 215, 0,
	0, 0, 0, 0, 286, 287, 288, 500, 289, 290,
	0, 291, 0, 292, 0, 0, 966, 293, 294, 0,
	295, 501, 0, 502, 296, 0, 297, 298, 299, 300,
	503, 504, 505, 355, 968, 301, 302, 0, 303, 304,
	306, 0, 0, 0, 305, 307, 314, 0, 967, 308,
	506, 310, 309, 311, 312, 313, 507, 0, 508, 0,
	315, 969, 509, 970, 316, 317, 318, 971, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 510, 972, 329, 330, 973, 0, 331, 332,
	0, 0, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 974, 347, 348,
	351, 352, 350, 975, 349, 0, 0, 976, 353, 0,
	511, 354, 512, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 513, 977,
	367, 978, 514, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 515, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	517, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	979, 405, 406, 407, 408, 518, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 421,
	423, 424, 425, 422, 428, 429, 430, 0, 431, 411,
	412, 432, 433, 980, 434, 435, 519, 436, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 447, 443, 444,
	445, 520, 0, 449, 450, 448, 0, 451, 452, 453,
	454, 455, 280, 456, 0, 457, 521, 522, 523, 524,
	0, 464, 0, 458, 459, 525, 460, 526, 0, 461,
	462, 463, 0, 465, 466, 0, 0, 467, 468, 469,
	471, 472, 470, 474, 0, 475, 0, 473, 476, 477,
	478, 527, 528, 529, 0, 480, 479, 530, 1030, 0,
	0, 0, 481, 482, 531, 483, 484, 485, 0, 0,
	0, 0, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 956, 0, 0,
	1343, 0, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 0, 233, 234, 235, 236,
	237, 238, 239, 0, 955, 240, 491, 492, 493, 0,
	241, 962, 0, 943, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 965, 257, 258, 946, 944, 945,
	952, 948, 947, 951, 259, 260, 261, 262, 263, 264,
	495, 496, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 983, 984, 0, 215, 0, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 0, 292,
	0, 0, 966, 293, 294, 0, 295, 990, 0, 502,
	296, 0, 297, 298, 299, 300, 957, 958, 961, 355,
	968, 301, 302, 0, 303, 304, 306, 0, 0, 216,
	305, 307, 314, 0, 967, 308, 506, 310, 309, 311,
	312, 313, 507, 0, 508, 0, 315, 969, 959, 970,
	316, 317, 318, 971, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 991, 972,
	329, 330, 973, 0, 331, 332, 950, 949, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 974, 347, 348, 351, 352, 350, 975,
	349, 0, 217, 976, 353, 0, 960, 354, 512, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 977, 367, 978, 985, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 986, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 979, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 426, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 953, 431, 411, 412, 432, 433, 980,
	434, 435, 519, 436, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 987, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 456,
	0, 457, 521, 522, 523, 524, 0, 464, 0, 458,
	459, 988, 460, 989, 0, 461, 462, 463, 0, 465,
	466, 0, 0, 467, 468, 469, 471, 472, 470, 474,
	954, 475, 0, 473, 476, 477, 478, 527, 528, 529,
	0, 480, 479, 530, 839, 0, 212, 0, 481, 482,
	531, 483, 484, 485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 486, 0, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 488, 229, 489, 232,
	230, 231, 490, 0, 233, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 491, 492, 493, 0, 241, 494,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 495, 496,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 497,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 498,
	499, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 500, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 0, 295, 501, 0, 502, 296, 0,
	297, 298, 299, 300, 503, 504, 505, 355, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 0, 305, 307,
	314, 0, 0, 308, 506, 310, 309, 311, 312, 313,
	507, 0, 508, 0, 315, 0, 509, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 510, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 352, 350, 0, 349, 0,
	0, 0, 353, 0, 511, 354, 512, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 0, 367, 0, 514, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 515,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 517, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 0, 405, 406, 407, 408, 518,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	181, 426, 427, 421, 423, 424, 425, 422, 428, 429,
	430, 0, 431, 411, 412, 432, 433, 0, 434, 435,
	519, 436, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 447, 443, 444, 445, 520, 0, 449, 450, 448,
	183, 451, 452, 453, 454, 455, 280, 456, 0, 457,
	521, 522, 523, 524, 0, 464, 0, 458, 459, 525,
	460, 526, 0, 461, 462, 463, 0, 465, 466, 0,
	0, 467, 468, 469, 471, 472, 470, 474, 0, 475,
	0, 473, 476, 477, 478, 1337, 528, 529, 0, 480,
	479, 530, 212, 0, 0, 175, 481, 482, 531, 483,
	484, 485, 0, 176, 0, 0, 0, 0, 0, 218,
	219, 220, 221, 222, 0, 223, 0, 0, 0, 0,
	0, 486, 0, 0, 150, 0, 224, 226, 225, 227,
	228, 487, 488, 229, 489, 232, 230, 231, 490, 0,
	233, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	491, 492, 493, 0, 241, 494, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	261, 262, 263, 264, 495, 496, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 497, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 498, 499, 0, 215, 0,
	0, 0, 0, 0, 286, 287, 288, 500, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 501, 0, 502, 296, 0, 297, 298, 299, 300,
	503, 504, 505, 355, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 216, 305, 307, 314, 0, 0, 308,
	506, 310, 309, 311, 312, 313, 507, 0, 508, 0,
	315, 0, 509, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 510, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 352, 350, 0, 349, 0, 217, 0, 353, 0,
	511, 354, 512, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 513, 0,
	367, 0, 514, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 515, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	517, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	0, 405, 406, 407, 408, 518, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 421,
	423, 424, 425, 422, 428, 429, 430, 0, 431, 411,
	412, 432, 433, 0, 434, 435, 519, 436, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 447, 443, 444,
	445, 520, 0, 449, 450, 448, 0, 451, 452, 453,
	454, 455, 280, 456, 0, 457, 521, 522, 523, 524,
	0, 464, 0, 458, 459, 525, 460, 526, 0, 461,
	462, 463, 0, 465, 466, 0, 0, 467, 468, 469,
	471, 472, 470, 474, 0, 475, 0, 473, 476, 477,
	478, 527, 528, 529, 0, 480, 479, 530, 1287, 0,
	212, 0, 481, 482, 531, 483, 484, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 486,
	1649, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 0, 233, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 491, 492,
	493, 0, 241, 494, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 495, 496, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 0, 215, 0, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	0, 292, 0, 0, 0, 293, 294, 0, 295, 501,
	0, 502, 296, 0, 297, 298, 299, 300, 503, 504,
	505, 355, 0, 301, 302, 0, 303, 304, 306, 0,
	0, 216, 305, 307, 314, 0, 0, 308, 506, 310,
	309, 311, 312, 313, 507, 0, 508, 0, 315, 0,
	509, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	510, 0, 329, 330, 0, 0, 331, 332, 0, 0,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 352,
	350, 0, 349, 0, 217, 0, 353, 0, 511, 354,
	512, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 0, 367, 0,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 515, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 0, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 0, 431, 411, 412, 432,
	433, 0, 434, 435, 519, 436, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 456, 0, 457, 521, 522, 523, 524, 0, 464,
	0, 458, 459, 525, 460, 526, 0, 461, 462, 463,
	0, 465, 466, 0, 0, 467, 468, 469, 471, 472,
	470, 474, 0, 475, 0, 473, 476, 477, 478, 527,
	528, 529, 0, 480, 479, 530, 212, 0, 0, 0,
	481, 482, 531, 483, 484, 485, 0, 0, 0, 0,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 486, 1291, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 488, 229, 489, 232,
	230, 231, 490, 0, 233, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 491, 492, 493, 0, 241, 494,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 495, 496,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 497,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 498,
	499, 0, 215, 0, 0, 0, 0, 0, 286, 287,
	288, 500, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 0, 295, 501, 0, 502, 296, 0,
	297, 298, 299, 300, 503, 504, 505, 355, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 216, 305, 307,
	314, 0, 0, 308, 506, 310, 309, 311, 312, 313,
	507, 0, 508, 0, 315, 0, 509, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 510, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 352, 350, 0, 349, 0,
	217, 0, 353, 0, 511, 354, 512, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 0, 367, 0, 514, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 515,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 517, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 0, 405, 406, 407, 408, 518,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 421, 423, 424, 425, 422, 428, 429,
	430, 0, 431, 411, 412, 432, 433, 0, 434, 435,
	519, 436, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 447, 443, 444, 445, 520, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 456, 0, 457,
	521, 522, 523, 524, 0, 464, 0, 458, 459, 525,
	460, 526, 0, 461, 462, 463, 0, 465, 466, 0,
	0, 467, 468, 469, 471, 472, 470, 474, 0, 475,
	0, 473, 476, 477, 478, 527, 528, 529, 0, 480,
	479, 530, 212, 0, 0, 0, 481, 482, 531, 483,
	484, 485, 0, 0, 0, 0, 0, 0, 0, 218,
	219, 220, 221, 222, 0, 223, 0, 0, 0, 0,
	0, 486, 2851, 0, 0, 0, 224, 226, 225, 227,
	228, 487, 488, 229, 489, 232, 230, 231, 490, 0,
	233, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	491, 492, 493, 0, 241, 494, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	261, 262, 263, 264, 495, 496, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 497, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 498, 499, 0, 215, 0,
	0, 0, 0, 0, 286, 287, 288, 500, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 501, 0, 502, 296, 0, 297, 298, 299, 300,
	503, 504, 505, 355, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 216, 305, 307, 314, 0, 0, 308,
	506, 310, 309, 311, 312, 313, 507, 0, 508, 0,
	315, 0, 509, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 510, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 352, 350, 0, 349, 0, 217, 0, 353, 0,
	511, 354, 512, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 513, 0,
	367, 0, 514, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 515, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	517, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	0, 405, 406, 407, 408, 518, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 421,
	423, 424, 425, 422, 428, 429, 430, 0, 431, 411,
	412, 432, 433, 0, 434, 435, 519, 436, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 447, 443, 444,
	445, 520, 0, 449, 450, 448, 0, 451, 452, 453,
	454, 455, 280, 456, 0, 457, 521, 522, 523, 524,
	0, 464, 0, 458, 459, 525, 460, 526, 0, 461,
	462, 463, 0, 465, 466, 0, 0, 467, 468, 469,
	471, 472, 470, 474, 0, 475, 0, 473, 476, 477,
	478, 527, 528, 529, 0, 480, 479, 530, 212, 0,
	0, 0, 481, 482, 531, 483, 484, 485, 0, 0,
	0, 0, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 486, 1291, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 0, 233, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 491, 492, 493, 0,
	241, 494, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	495, 496, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 0, 292,
	0, 0, 0, 293, 294, 0, 295, 501, 0, 502,
	296, 0, 297, 298, 299, 300, 503, 504, 505, 355,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 0,
	305, 307, 314, 0, 0, 308, 506, 310, 309, 311,
	312, 313, 507, 0, 508, 0, 315, 0, 509, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 510, 0,
	329, 330, 0, 0, 331, 332, 0, 0, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 352, 350, 0,
	349, 0, 0, 0, 353, 0, 511, 354, 512, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 0, 367, 0, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 515, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 0, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 426, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 0, 431, 411, 412, 432, 433, 0,
	434, 435, 519, 436, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 456,
	0, 457, 521, 522, 523, 524, 0, 464, 0, 458,
	459, 525, 460, 526, 0, 461, 462, 463, 0, 465,
	466, 0, 0, 467, 468, 469, 471, 472, 470, 474,
	0, 475, 0, 473, 476, 477, 478, 527, 528, 529,
	0, 480, 479, 530, 212, 0, 0, 0, 481, 482,
	531, 483, 484, 485, 0, 0, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 486, 0, 0, 2450, 0, 224, 226,
	225, 227, 228, 487, 488, 229, 489, 232, 230, 231,
	490, 0, 233, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 491, 492, 493, 0, 241, 494, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 261, 262, 263, 264, 495, 496, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 497, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 498, 499, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 500,
	289, 290, 0, 291, 0, 292, 0, 0, 0, 293,
	294, 0, 295, 501, 0, 502, 296, 0, 297, 298,
	299, 300, 503, 504, 505, 355, 0, 301, 302, 0,
	303, 304, 306, 0, 0, 0, 305, 307, 314, 0,
	0, 308, 506, 310, 309, 311, 312, 313, 507, 0,
	508, 0, 315, 0, 509, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 510, 0, 329, 330, 0, 0,
	331, 332, 0, 0, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 0,
	347, 348, 351, 352, 350, 0, 349, 0, 0, 0,
	353, 0, 511, 354, 512, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 0, 367, 0, 514, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 515, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 517, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 0, 405, 406, 407, 408, 518, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 0, 426,
	427, 421, 423, 424, 425, 422, 428, 429, 430, 0,
	431, 411, 412, 432, 433, 0, 434, 435, 519, 436,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 447,
	443, 444, 445, 520, 0, 449, 450, 448, 0, 451,
	452, 453, 454, 455, 280, 456, 0, 457, 521, 522,
	523, 524, 0, 464, 0, 458, 459, 525, 460, 526,
	0, 461, 462, 463, 0, 465, 466, 0, 0, 467,
	468, 469, 471, 472, 470, 474, 0, 475, 0, 473,
	476, 477, 478, 527, 528, 529, 0, 480, 479, 530,
	212, 0, 0, 0, 481, 482, 531, 483, 484, 485,
	0, 0, 0, 0, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 486,
	0, 0, 2989, 0, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 0, 233, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 491, 492,
	493, 0, 241, 494, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 495, 496, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	0, 292, 0, 0, 0, 293, 294, 0, 295, 501,
	0, 502, 296, 0, 297, 298, 299, 300, 503, 504,
	505, 355, 0, 301, 302, 0, 303, 304, 306, 0,
	0, 0, 305, 307, 314, 0, 0, 308, 506, 310,
	309, 311, 312, 313, 507, 0, 508, 0, 315, 0,
	509, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	510, 0, 329, 330, 0, 0, 331, 332, 0, 0,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 352,
	350, 0, 349, 0, 0, 0, 353, 0, 511, 354,
	512, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 0, 367, 0,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 515, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 0, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 0, 431, 411, 412, 432,
	433, 0, 434, 435, 519, 436, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 456, 0, 457, 521, 522, 523, 524, 0, 464,
	0, 458, 459, 525, 460, 526, 0, 461, 462, 463,
	0, 465, 466, 0, 0, 467, 468, 469, 471, 472,
	470, 474, 0, 475, 0, 473, 476, 477, 478, 527,
	528, 529, 0, 480, 479, 530, 708, 0, 602, 0,
	481, 482, 531, 483, 484, 485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 486, 1920, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 0, 233, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 491, 492, 493, 0,
	241, 494, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 608, 262, 263, 264,
	495, 496, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 0, 215, 0, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 0, 292,
	0, 706, 0, 293, 294, 0, 295, 501, 0, 502,
	296, 0, 297, 298, 299, 300, 503, 504, 505, 355,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 216,
	305, 307, 314, 0, 0, 308, 506, 310, 309, 311,
	312, 313, 507, 0, 508, 0, 315, 0, 509, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 510, 0,
	329, 330, 0, 0, 331, 332, 0, 0, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 352, 350, 0,
	349, 0, 217, 0, 353, 0, 511, 354, 512, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 0, 367, 0, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 515, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 0, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 426, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 0, 431, 411, 412, 432, 433, 0,
	434, 435, 519, 436, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 0, 449,
	450, 448, 607, 451, 452, 453, 454, 455, 280, 456,
	0, 457, 521, 522, 523, 524, 0, 464, 0, 458,
	459, 525, 460, 526, 0, 461, 462, 463, 0, 465,
	466, 0, 0, 467, 468, 469, 471, 472, 470, 474,
	0, 475, 0, 473, 476, 477, 478, 527, 528, 529,
	0, 480, 479, 530, 0, 601, 0, 602, 481, 482,
	531, 483, 484, 485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 219, 220, 221, 222, 611,
	223, 0, 0, 0, 0, 0, 486, 0, 0, 0,
	0, 224, 226, 225, 227, 228, 487, 488, 229, 489,
	232, 230, 231, 490, 0, 233, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 491, 492, 493, 0, 241,
	494, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 608, 262, 263, 264, 495,
	496, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	497, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	498, 499, 0, 215, 0, 0, 0, 0, 0, 286,
	287, 288, 500, 289, 290, 0, 291, 0, 292, 0,
	0, 0, 293, 294, 0, 295, 501, 0, 502, 296,
	0, 297, 298, 299, 300, 503, 504, 505, 355, 0,
	301, 302, 0, 303, 304, 306, 0, 0, 216, 305,
	307, 314, 0, 0, 308, 506, 310, 309, 311, 312,
	313, 507, 0, 508, 0, 315, 0, 509, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 510, 0, 329,
	330, 0, 0, 331, 332, 0, 0, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 352, 350, 0, 349,
	0, 217, 0, 353, 0, 511, 354, 512, 356, 357,
	0, 358, 359, 360, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 513, 0, 367, 0, 514, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	515, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 517, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 0, 405, 406, 407, 408,
	518, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 421, 423, 424, 425, 422, 428,
	429, 430, 0, 431, 411, 412, 432, 433, 0, 434,
	435, 519, 436, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 447, 443, 444, 445, 520, 0, 449, 450,
	448, 607, 451, 452, 453, 454, 455, 280, 456, 0,
	457, 521, 522, 523, 524, 599, 464, 0, 458, 459,
	525, 460, 526, 0, 461, 462, 463, 0, 465, 466,
	0, 0, 467, 468, 469, 471, 472, 470, 474, 0,
	475, 0, 473, 476, 477, 478, 527, 528, 529, 0,
	480, 479, 530, 0, 0, 0, 0, 481, 482, 531,
	483, 484, 485, 1201, 1200, 0, 0, 0, 0, 1198,
	0, 0, 0, 0, 0, 0, 0, 0, 611, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	0, 233, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 491, 492, 493, 0, 241, 494, 0, 1093, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 965,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 495, 496, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 0, 215,
	0, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 0, 292, 0, 0, 966, 293, 294,
	0, 295, 501, 0, 502, 296, 0, 297, 298, 299,
	300, 503, 504, 505, 355, 968, 301, 302, 0, 303,
	304, 306, 0, 0, 0, 305, 307, 314, 0, 967,
	308, 506, 310, 309, 311, 312, 313, 507, 0, 508,
	0, 315, 969, 509, 970, 316, 317, 318, 971, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 510, 972, 329, 330, 973, 0, 331,
	332, 0, 0, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 974, 347,
	348, 351, 352, 350, 975, 349, 0, 0, 976, 353,
	3126, 511, 354, 512, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	977, 367, 978, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 515, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 979, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 426, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 0, 431,
	411, 412, 432, 433, 980, 434, 435, 519, 436, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 456, 0, 457, 521, 522, 523,
	524, 0, 464, 0, 458, 459, 525, 460, 526, 0,
	461, 462, 463, 0, 465, 466, 0, 0, 467, 468,
	469, 471, 472, 470, 474, 0, 475, 0, 473, 476,
	477, 478, 527, 528, 529, 0, 480, 479, 530, 0,
	0, 0, 0, 481, 482, 531, 483, 484, 485, 1201,
	1200, 0, 0, 0, 0, 1198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 486, 0,
	0, 0, 0, 224, 226, 225, 227, 228, 487, 488,
	229, 489, 232, 230, 231, 490, 0, 233, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 491, 492, 493,
	0, 241, 494, 0, 1093, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 965, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 261, 262, 263,
	264, 495, 496, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 497, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 498, 499, 0, 215, 0, 0, 0, 0,
	0, 286, 287, 288, 500, 289, 290, 0, 291, 0,
	292, 0, 0, 966, 293, 294, 0, 295, 501, 0,
	502, 296, 0, 297, 298, 299, 300, 503, 504, 505,
	355, 968, 301, 302, 0, 303, 304, 306, 0, 0,
	0, 305, 307, 314, 0, 967, 308, 506, 310, 309,
	311, 312, 313, 507, 0, 508, 0, 315, 969, 509,
	970, 316, 317, 318, 971, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 510,
	972, 329, 330, 973, 0, 331, 332, 0, 0, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 974, 347, 348, 351, 352, 350,
	975, 349, 0, 0, 976, 353, 2831, 511, 354, 512,
	356, 357, 0, 358, 359, 360, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 977, 367, 978, 514,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 515, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 517, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 979, 405, 406,
	407, 408, 518, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 0, 426, 427, 421, 423, 424, 425,
	422, 428, 429, 430, 0, 431, 411, 412, 432, 433,
	980, 434, 435, 519, 436, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 447, 443, 444, 445, 520, 0,
	449, 450, 448, 0, 451, 452, 453, 454, 455, 280,
	456, 0, 457, 521, 522, 523, 524, 0, 464, 0,
	458, 459, 525, 460, 526, 0, 461, 462, 463, 0,
	465, 466, 0, 0, 467, 468, 469, 471, 472, 470,
	474, 0, 475, 0, 473, 476, 477, 478, 527, 528,
	529, 602, 480, 479, 530, 0, 0, 0, 0, 481,
	482, 531, 483, 484, 485, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	486, 0, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 488, 229, 489, 232, 230, 231, 490, 0, 233,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 491,
	492, 493, 0, 241, 494, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 608,
	262, 263, 264, 495, 496, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 497, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 498, 499, 0, 215, 0, 0,
	0, 0, 0, 286, 287, 288, 500, 289, 290, 0,
	291, 0, 292, 0, 0, 0, 293, 294, 0, 295,
	501, 0, 502, 296, 0, 297, 298, 299, 300, 503,
	504, 505, 355, 0, 301, 302, 0, 303, 304, 306,
	0, 0, 216, 305, 307, 314, 0, 0, 308, 506,
	310, 309, 311, 312, 313, 507, 0, 508, 0, 315,
	0, 509, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 510, 0, 329, 330, 0, 0, 331, 332, 0,
	0, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	352, 350, 0, 349, 0, 217, 0, 353, 0, 511,
	354, 512, 356, 357, 0, 358, 359, 360, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 0, 367,
	0, 514, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 515, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 517,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 0,
	1954, 406, 407, 408, 518, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 421, 423,
	424, 425, 422, 428, 429, 430, 0, 431, 411, 412,
	432, 433, 0, 434, 435, 519, 436, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 447, 443, 444, 445,
	520, 0, 449, 450, 448, 607, 451, 452, 453, 454,
	455, 280, 456, 0, 457, 521, 522, 523, 524, 0,
	464, 0, 458, 459, 525, 460, 526, 0, 461, 462,
	463, 0, 465, 466, 0, 0, 467, 468, 469, 471,
	472, 470, 474, 0, 475, 0, 473, 476, 477, 478,
	527, 528, 529, 0, 480, 479, 530, 602, 0, 0,
	0, 481, 482, 531, 483, 484, 485, 0, 0, 0,
	0, 0, 0, 0, 218, 219, 220, 221, 222, 0,
	223, 0, 611, 0, 0, 0, 486, 0, 0, 0,
	0, 224, 226, 225, 227, 228, 487, 488, 229, 489,
	232, 230, 231, 490, 0, 233, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 491, 492, 493, 0, 241,
	494, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 608, 262, 263, 264, 495,
	496, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	497, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	498, 499, 0, 215, 0, 0, 0, 0, 0, 286,
	287, 288, 500, 289, 290, 0, 291, 0, 292, 0,
	0, 0, 293, 294, 0, 295, 501, 0, 502, 296,
	0, 297, 298, 299, 300, 503, 504, 505, 355, 0,
	301, 302, 0, 303, 304, 306, 0, 0, 216, 305,
	307, 314, 0, 0, 308, 506, 310, 309, 311, 312,
	313, 507, 0, 508, 0, 315, 0, 509, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 510, 0, 329,
	330, 0, 0, 331, 332, 0, 0, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 352, 350, 0, 349,
	0, 217, 0, 353, 0, 511, 354, 512, 356, 357,
	0, 358, 359, 360, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 513, 0, 367, 0, 514, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	515, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 517, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 0, 405, 406, 407, 408,
	518, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 421, 423, 424, 425, 422, 428,
	429, 430, 0, 431, 411, 412, 432, 433, 0, 434,
	435, 519, 436, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 447, 443, 444, 445, 520, 0, 449, 450,
	448, 607, 451, 452, 453, 454, 455, 280, 456, 0,
	457, 521, 522, 523, 524, 0, 464, 0, 458, 459,
	525, 460, 526, 0, 461, 462, 463, 0, 465, 466,
	0, 0, 467, 468, 469, 471, 472, 470, 474, 0,
	475, 0, 473, 476, 477, 478, 527, 528, 529, 0,
	480, 479, 530, 0, 0, 0, 0, 481, 482, 531,
	483, 484, 485, 1370, 0, 1201, 1200, 0, 0, 0,
	0, 1198, 0, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 0, 233, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 491, 492, 493, 0, 241, 494, 0,
	1093, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 965, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 495, 496, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	0, 215, 0, 0, 0, 0, 0, 1369, 287, 288,
	500, 289, 290, 0, 291, 0, 292, 0, 0, 966,
	293, 294, 0, 295, 501, 0, 502, 296, 0, 297,
	298, 299, 300, 503, 504, 505, 355, 968, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 967, 308, 506, 310, 309, 311, 312, 313, 507,
	0, 508, 0, 315, 969, 509, 970, 316, 317, 318,
	971, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 510, 972, 329, 330, 973,
	0, 331, 332, 0, 0, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	974, 347, 348, 351, 352, 350, 975, 349, 0, 0,
	976, 353, 0, 511, 354, 512, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 977, 367, 978, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 515, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 1368, 388, 517, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 979, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 416, 1367, 418, 419, 420, 0,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	0, 431, 411, 412, 432, 433, 980, 434, 435, 519,
	436, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 456, 0, 457, 521,
	522, 523, 524, 0, 464, 0, 458, 459, 525, 460,
	526, 0, 461, 462, 463, 0, 465, 466, 0, 0,
	467, 468, 469, 471, 472, 470, 474, 0, 475, 0,
	473, 476, 477, 478, 527, 528, 529, 0, 480, 479,
	530, 0, 0, 0, 0, 481, 482, 531, 483, 484,
	485, 1331, 0, 1201, 1200, 0, 0, 0, 0, 1198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	0, 233, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 491, 492, 493, 0, 241, 494, 0, 1093, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 965,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 495, 496, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 0, 215,
	0, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 0, 292, 0, 0, 966, 293, 294,
	0, 295, 501, 0, 502, 296, 0, 297, 298, 299,
	300, 1330, 504, 505, 355, 968, 301, 302, 0, 303,
	304, 306, 0, 0, 0, 305, 307, 314, 0, 967,
	308, 506, 310, 309, 311, 312, 313, 507, 0, 508,
	0, 315, 969, 509, 970, 316, 317, 318, 971, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 510, 972, 329, 330, 973, 0, 331,
	332, 0, 0, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 974, 347,
	348, 351, 352, 350, 975, 349, 0, 0, 976, 353,
	0, 511, 354, 512, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	977, 367, 978, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 515, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 979, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 426, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 0, 431,
	411, 412, 432, 433, 980, 434, 435, 519, 436, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 456, 0, 457, 521, 522, 523,
	524, 0, 464, 0, 458, 459, 525, 460, 526, 0,
	461, 462, 463, 0, 465, 466, 0, 0, 467, 468,
	469, 471, 472, 470, 474, 0, 475, 0, 473, 476,
	477, 478, 527, 528, 529, 0, 480, 479, 530, 0,
	0, 0, 0, 481, 482, 531, 483, 484, 485, 1267,
	0, 1201, 1200, 0, 0, 0, 0, 1198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	486, 0, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 488, 229, 489, 232, 230, 231, 490, 0, 233,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 491,
	492, 493, 0, 241, 494, 0, 1093, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 965, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 495, 496, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 497, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 498, 499, 0, 215, 0, 0,
	0, 0, 0, 286, 287, 288, 500, 289, 290, 0,
	291, 0, 292, 0, 0, 966, 293, 294, 0, 295,
	501, 0, 502, 296, 0, 297, 298, 299, 300, 1266,
	504, 505, 355, 968, 301, 302, 0, 303, 304, 306,
	0, 0, 0, 305, 307, 314, 0, 967, 308, 506,
	310, 309, 311, 312, 313, 507, 0, 508, 0, 315,
	969, 509, 970, 316, 317, 318, 971, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 510, 972, 329, 330, 973, 0, 331, 332, 0,
	0, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 974, 347, 348, 351,
	352, 350, 975, 349, 0, 0, 976, 353, 0, 511,
	354, 512, 356, 357, 0, 358, 359, 360, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 977, 367,
	978, 514, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 515, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 517,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 979,
	405, 406, 407, 408, 518, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 421, 423,
	424, 425, 422, 428, 429, 430, 0, 431, 411, 412,
	432, 433, 980, 434, 435, 519, 436, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 447, 443, 444, 445,
	520, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 456, 0, 457, 521, 522, 523, 524, 0,
	464, 0, 458, 459, 525, 460, 526, 0, 461, 462,
	463, 0, 465, 466, 0, 0, 467, 468, 469, 471,
	472, 470, 474, 0, 475, 0, 473, 476, 477, 478,
	527, 528, 529, 0, 480, 479, 530, 0, 0, 0,
	0, 481, 482, 531, 483, 484, 485, 1196, 0, 1201,
	1200, 0, 0, 0, 0, 1198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 486, 0,
	0, 0, 0, 224, 226, 225, 227, 228, 487, 488,
	229, 489, 232, 230, 231, 490, 0, 233, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 491, 492, 493,
	0, 241, 494, 0, 1093, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 965, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 261, 262, 263,
	264, 495, 496, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 497, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 498, 499, 0, 215, 0, 0, 0, 0,
	0, 286, 287, 288, 500, 289, 290, 0, 291, 0,
	292, 0, 0, 966, 293, 294, 0, 295, 501, 0,
	502, 296, 0, 297, 298, 299, 300, 1195, 504, 505,
	355, 968, 301, 302, 0, 303, 304, 306, 0, 0,
	0, 305, 307, 314, 0, 967, 308, 506, 310, 309,
	311, 312, 313, 507, 0, 508, 0, 315, 969, 509,
	970, 316, 317, 318, 971, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 510,
	972, 329, 330, 973, 0, 331, 332, 0, 0, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 974, 347, 348, 351, 352, 350,
	975, 349, 0, 0, 976, 353, 0, 511, 354, 512,
	356, 357, 0, 358, 359, 360, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 977, 367, 978, 514,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 515, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 517, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 979, 405, 406,
	407, 408, 518, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 0, 426, 427, 421, 423, 424, 425,
	422, 428, 429, 430, 0, 431, 411, 412, 432, 433,
	980, 434, 435, 519, 436, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 447, 443, 444, 445, 520, 0,
	449, 450, 448, 0, 451, 452, 453, 454, 455, 280,
	456, 0, 457, 521, 522, 523, 524, 0, 464, 0,
	458, 459, 525, 460, 526, 0, 461, 462, 463, 0,
	465, 466, 0, 0, 467, 468, 469, 471, 472, 470,
	474, 0, 475, 0, 473, 476, 477, 478, 527, 528,
	529, 0, 480, 479, 530, 0, 0, 0, 0, 481,
	482, 531, 483, 484, 485, 1201, 1200, 0, 0, 0,
	0, 1198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 0, 233, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 491, 492, 493, 0, 241, 494, 0,
	1093, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 965, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 495, 496, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	0, 215, 0, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 0, 292, 0, 0, 966,
	293, 294, 0, 295, 501, 0, 502, 296, 0, 297,
	298, 299, 300, 503, 504, 505, 355, 968, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 967, 308, 506, 310, 309, 311, 312, 313, 507,
	0, 508, 0, 315, 969, 509, 970, 316, 317, 318,
	971, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 510, 972, 329, 330, 973,
	0, 331, 332, 0, 0, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	974, 347, 348, 351, 352, 350, 975, 349, 0, 0,
	976, 353, 0, 511, 354, 512, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 977, 367, 978, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 515, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 979, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	0, 431, 411, 412, 432, 433, 980, 434, 435, 519,
	436, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 456, 0, 457, 521,
	522, 523, 524, 0, 464, 0, 458, 459, 525, 460,
	526, 0, 461, 462, 463, 0, 465, 466, 0, 0,
	467, 468, 469, 471, 472, 470, 474, 0, 475, 0,
	473, 476, 477, 478, 527, 528, 529, 212, 480, 479,
	530, 0, 0, 0, 0, 481, 482, 531, 483, 484,
	485, 0, 0, 0, 218, 219, 220, 221, 222, 0,
	223, 0, 0, 0, 0, 0, 486, 0, 0, 0,
	0, 224, 226, 225, 227, 228, 487, 488, 229, 489,
	232, 230, 231, 490, 0, 233, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 491, 492, 493, 0, 241,
	494, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 261, 262, 263, 264, 495,
	496, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	497, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	498, 499, 0, 215, 0, 0, 0, 0, 0, 286,
	287, 288, 500, 289, 290, 0, 291, 0, 292, 0,
	0, 0, 293, 294, 0, 295, 501, 0, 502, 296,
	0, 297, 298, 299, 300, 503, 504, 505, 355, 0,
	301, 302, 0, 303, 304, 306, 0, 0, 216, 305,
	307, 314, 0, 0, 308, 506, 310, 309, 311, 312,
	313, 507, 0, 508, 0, 315, 0, 509, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 510, 0, 329,
	330, 0, 0, 331, 332, 0, 0, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 352, 350, 0, 349,
	0, 217, 0, 353, 0, 511, 354, 512, 356, 357,
	0, 358, 359, 360, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 513, 0, 367, 0, 514, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	515, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 517, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 0, 405, 406, 407, 408,
	518, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 421, 423, 424, 425, 422, 428,
	429, 430, 0, 431, 411, 412, 432, 433, 0, 434,
	435, 519, 436, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 447, 443, 444, 445, 520, 0, 449, 450,
	448, 0, 451, 452, 453, 454, 455, 280, 456, 0,
	457, 521, 522, 523, 524, 0, 464, 0, 458, 459,
	525, 460, 526, 0, 461, 462, 463, 0, 465, 466,
	0, 0, 467, 468, 469, 471, 472, 470, 474, 0,
	475, 0, 473, 476, 477, 478, 527, 528, 529, 0,
	480, 479, 530, 1201, 1200, 0, 0, 481, 482, 531,
	483, 484, 485, 0, 0, 0, 0, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 611, 0,
	0, 0, 486, 0, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	0, 233, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 491, 492, 493, 0, 241, 494, 0, 1093, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 965,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 495, 496, 1738, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 0, 215,
	0, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 0, 292, 0, 0, 966, 293, 294,
	0, 295, 501, 0, 502, 296, 0, 297, 298, 299,
	300, 503, 504, 505, 355, 968, 301, 302, 0, 303,
	304, 306, 0, 0, 0, 305, 307, 314, 0, 967,
	308, 506, 310, 309, 311, 312, 313, 507, 0, 508,
	0, 315, 969, 509, 970, 316, 317, 318, 971, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 510, 972, 329, 330, 973, 0, 331,
	332, 0, 0, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 974, 347,
	348, 351, 352, 350, 975, 349, 0, 0, 976, 353,
	0, 511, 354, 512, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	977, 367, 978, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 515, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 979, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 426, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 0, 431,
	411, 412, 432, 433, 980, 434, 435, 519, 436, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 456, 0, 457, 521, 522, 523,
	524, 0, 464, 0, 458, 459, 525, 460, 526, 0,
	461, 462, 463, 0, 465, 466, 0, 0, 467, 468,
	469, 471, 472, 470, 474, 0, 475, 0, 473, 476,
	477, 478, 527, 528, 529, 0, 480, 479, 530, 1201,
	1200, 0, 0, 481, 482, 531, 483, 484, 485, 0,
	0, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 486, 0,
	0, 0, 0, 224, 226, 225, 227, 228, 487, 488,
	229, 489, 232, 230, 231, 490, 0, 233, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 491, 492, 493,
	0, 241, 494, 0, 1093, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 965, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 261, 262, 263,
	264, 495, 496, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 497, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 498, 499, 0, 215, 0, 0, 0, 0,
	0, 286, 287, 288, 500, 289, 290, 0, 291, 0,
	292, 0, 0, 966, 293, 294, 0, 295, 501, 0,
	502, 296, 0, 297, 298, 299, 300, 503, 504, 505,
	355, 968, 301, 302, 0, 303, 304, 306, 0, 0,
	0, 305, 307, 314, 0, 967, 308, 506, 310, 309,
	311, 312, 313, 507, 0, 508, 0, 315, 969, 509,
	970, 316, 317, 318, 971, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 510,
	972, 329, 330, 973, 0, 331, 332, 0, 0, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 974, 347, 348, 351, 352, 350,
	975, 349, 0, 0, 976, 353, 0, 511, 354, 512,
	356, 357, 0, 358, 359, 360, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 977, 367, 978, 514,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 515, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 517, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 979, 405, 406,
	407, 408, 518, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 0, 426, 427, 421, 423, 424, 425,
	422, 428, 429, 430, 0, 431, 411, 412, 432, 433,
	980, 434, 435, 519, 436, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 447, 443, 444, 445, 520, 0,
	449, 450, 448, 0, 451, 452, 453, 454, 455, 280,
	456, 0, 457, 521, 522, 523, 524, 0, 464, 0,
	458, 459, 525, 460, 526, 0, 461, 462, 463, 0,
	465, 466, 0, 0, 467, 468, 469, 471, 472, 470,
	474, 0, 475, 0, 473, 476, 477, 478, 527, 528,
	529, 1201, 480, 479, 530, 0, 0, 0, 0, 481,
	482, 531, 483, 484, 485, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	486, 0, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 488, 229, 489, 232, 230, 231, 490, 0, 233,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 491,
	492, 493, 0, 241, 494, 0, 1093, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 965, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 495, 496, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 497, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 498, 499, 0, 215, 0, 0,
	0, 0, 0, 286, 287, 288, 500, 289, 290, 0,
	291, 0, 292, 0, 0, 966, 293, 294, 0, 295,
	501, 0, 502, 296, 0, 297, 298, 299, 300, 503,
	504, 505, 355, 968, 301, 302, 0, 303, 304, 306,
	0, 0, 0, 305, 307, 314, 0, 967, 308, 506,
	310, 309, 311, 312, 313, 507, 0, 508, 0, 315,
	969, 509, 970, 316, 317, 318, 971, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 510, 972, 329, 330, 973, 0, 331, 332, 0,
	0, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 974, 347, 348, 351,
	352, 350, 975, 349, 0, 0, 976, 353, 0, 511,
	354, 512, 356, 357, 0, 358, 359, 360, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 977, 367,
	978, 514, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 515, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 517,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 979,
	405, 406, 407, 408, 518, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 421, 423,
	424, 425, 422, 428, 429, 430, 0, 431, 411, 412,
	432, 433, 980, 434, 435, 519, 436, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 447, 443, 444, 445,
	520, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 456, 0, 457, 521, 522, 523, 524, 0,
	464, 0, 458, 459, 525, 460, 526, 0, 461, 462,
	463, 0, 465, 466, 0, 0, 467, 468, 469, 471,
	472, 470, 474, 0, 475, 0, 473, 476, 477, 478,
	527, 528, 529, 212, 480, 479, 530, 0, 0, 0,
	0, 481, 482, 531, 483, 484, 485, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	0, 233, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 491, 492, 493, 2327, 241, 494, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 2324, 252, 0, 253, 254, 255, 0, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 495, 496, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 0, 2485,
	0, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 0, 292, 2330, 0, 0, 293, 294,
	0, 295, 501, 0, 502, 296, 0, 297, 298, 299,
	300, 503, 504, 505, 355, 0, 301, 302, 0, 303,
	304, 306, 0, 0, 2482, 305, 307, 314, 0, 0,
	308, 506, 310, 309, 311, 312, 313, 507, 0, 508,
	0, 2484, 0, 509, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 510, 0, 329, 330, 2481, 0, 331,
	332, 0, 0, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 352, 350, 0, 349, 0, 0, 0, 353,
	0, 511, 354, 512, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	0, 367, 0, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 515, 378, 516, 379,
	380, 2329, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 0, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 426, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 0, 431,
	411, 412, 432, 433, 0, 434, 435, 519, 436, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 456, 0, 457, 521, 522, 523,
	524, 0, 464, 0, 458, 459, 525, 460, 526, 0,
	461, 462, 463, 0, 465, 466, 0, 2483, 467, 468,
	469, 471, 472, 470, 474, 0, 475, 0, 473, 476,
	477, 478, 527, 528, 529, 212, 480, 479, 530, 0,
	0, 0, 0, 481, 482, 531, 483, 484, 485, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 0, 233, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 491, 492, 493, 2327, 241, 494, 0,
	0, 2321, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 2324, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 495, 496, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	0, 0, 0, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 0, 292, 2330, 0, 0,
	293, 294, 0, 295, 501, 0, 502, 296, 0, 297,
	298, 299, 300, 2320, 504, 505, 355, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 0, 308, 506, 310, 309, 311, 312, 313, 507,
	0, 508, 0, 315, 0, 509, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 510, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 352, 350, 0, 349, 0, 0,
	0, 353, 0, 511, 354, 512, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 0, 367, 0, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 515, 378,
	516, 379, 380, 2329, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 0, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	0, 431, 411, 412, 432, 433, 0, 434, 435, 519,
	436, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 456, 0, 457, 521,
	522, 523, 524, 0, 464, 0, 458, 459, 525, 460,
	526, 0, 461, 462, 463, 0, 465, 466, 0, 2328,
	467, 468, 469, 471, 472, 470, 474, 0, 475, 0,
	473, 476, 477, 478, 527, 528, 529, 0, 480, 479,
	530, 1427, 0, 212, 0, 481, 482, 531, 483, 484,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	0, 233, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 491, 492, 493, 0, 241, 494, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 495, 496, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 0, 215,
	0, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 0, 292, 0, 0, 0, 293, 294,
	0, 295, 501, 0, 502, 296, 0, 297, 298, 299,
	300, 503, 504, 505, 355, 0, 301, 302, 0, 303,
	304, 306, 0, 0, 216, 305, 307, 314, 0, 0,
	308, 506, 310, 309, 311, 312, 313, 507, 0, 508,
	0, 315, 0, 509, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 510, 0, 329, 330, 0, 0, 331,
	332, 0, 0, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 352, 350, 0, 349, 0, 217, 0, 353,
	0, 511, 354, 512, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	0, 367, 0, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 515, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 0, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 1430, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 0, 431,
	411, 412, 432, 433, 0, 434, 435, 519, 436, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 0, 449, 450, 448, 1428, 451, 452,
	453, 454, 455, 280, 456, 0, 457, 521, 522, 523,
	524, 0, 464, 0, 458, 459, 525, 460, 526, 0,
	461, 462, 463, 0, 465, 466, 0, 0, 467, 468,
	469, 471, 472, 470, 474, 0, 475, 0, 473, 476,
	477, 478, 527, 528, 529, 0, 1429, 479, 530, 1177,
	0, 212, 0, 481, 482, 531, 483, 484, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	486, 0, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 488, 229, 489, 232, 230, 231, 490, 0, 233,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 491,
	492, 493, 0, 241, 494, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 495, 496, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 497, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 498, 499, 0, 215, 0, 0,
	0, 0, 0, 286, 287, 288, 500, 289, 290, 0,
	291, 0, 292, 0, 0, 0, 293, 294, 0, 295,
	501, 0, 502, 296, 0, 297, 298, 299, 300, 1179,
	504, 505, 355, 0, 301, 302, 0, 303, 304, 306,
	0, 0, 216, 305, 307, 314, 0, 0, 308, 506,
	310, 309, 311, 312, 313, 507, 0, 508, 0, 315,
	0, 509, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 510, 0, 329, 330, 0, 0, 331, 332, 0,
	0, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	352, 350, 0, 349, 0, 217, 0, 353, 0, 511,
	354, 512, 356, 357, 0, 358, 359, 360, 0, 1022,
	362, 363, 364, 0, 0, 365, 366, 513, 0, 367,
	0, 514, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 515, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 517,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 0,
	405, 406, 407, 408, 518, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 421, 423,
	424, 425, 422, 428, 429, 430, 0, 431, 411, 412,
	432, 433, 0, 434, 435, 519, 436, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 447, 443, 444, 445,
	520, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 456, 0, 457, 521, 522, 523, 524, 0,
	464, 0, 458, 459, 525, 460, 526, 0, 461, 462,
	463, 0, 465, 466, 0, 0, 467, 468, 469, 471,
	472, 470, 474, 0, 475, 0, 473, 476, 477, 478,
	527, 528, 529, 0, 480, 479, 530, 1174, 0, 212,
	0, 481, 482, 531, 483, 484, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 486, 0,
	0, 0, 0, 224, 226, 225, 227, 228, 487, 488,
	229, 489, 232, 230, 231, 490, 0, 233, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 491, 492, 493,
	0, 241, 494, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 261, 262, 263,
	264, 495, 496, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 497, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 498, 499, 0, 215, 0, 0, 0, 0,
	0, 286, 287, 288, 500, 289, 290, 0, 291, 0,
	292, 0, 0, 0, 293, 294, 0, 295, 501, 0,
	502, 296, 0, 297, 298, 299, 300, 1176, 504, 505,
	355, 0, 301, 302, 0, 303, 304, 306, 0, 0,
	216, 305, 307, 314, 0, 0, 308, 506, 310, 309,
	311, 312, 313, 507, 0, 508, 0, 315, 0, 509,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 510,
	0, 329, 330, 0, 0, 331, 332, 0, 0, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 352, 350,
	0, 349, 0, 217, 0, 353, 0, 511, 354, 512,
	356, 357, 0, 358, 359, 360, 0, 1022, 362, 363,
	364, 0, 0, 365, 366, 513, 0, 367, 0, 514,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 515, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 517, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 0, 405, 406,
	407, 408, 518, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 0, 426, 427, 421, 423, 424, 425,
	422, 428, 429, 430, 0, 431, 411, 412, 432, 433,
	0, 434, 435, 519, 436, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 447, 443, 444, 445, 520, 0,
	449, 450, 448, 0, 451, 452, 453, 454, 455, 280,
	456, 0, 457, 521, 522, 523, 524, 0, 464, 0,
	458, 459, 525, 460, 526, 0, 461, 462, 463, 0,
	465, 466, 0, 0, 467, 468, 469, 471, 472, 470,
	474, 0, 475, 0, 473, 476, 477, 478, 527, 528,
	529, 0, 480, 479, 530, 1081, 0, 212, 0, 481,
	482, 531, 483, 484, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 219, 220, 221, 222, 0,
	223, 0, 0, 0, 0, 0, 486, 0, 0, 0,
	0, 224, 226, 225, 227, 228, 487, 488, 229, 489,
	232, 230, 231, 490, 0, 233, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 491, 492, 493, 0, 241,
	494, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 261, 262, 263, 264, 495,
	496, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	497, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	498, 499, 0, 215, 0, 0, 0, 0, 0, 286,
	287, 288, 500, 289, 290, 0, 291, 0, 292, 0,
	0, 0, 293, 294, 0, 295, 501, 0, 502, 296,
	0, 297, 298, 299, 300, 1083, 504, 505, 355, 0,
	301, 302, 0, 303, 304, 306, 0, 0, 216, 305,
	307, 314, 0, 0, 308, 506, 310, 309, 311, 312,
	313, 507, 0, 508, 0, 315, 0, 509, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 510, 0, 329,
	330, 0, 0, 331, 332, 0, 0, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 352, 350, 0, 349,
	0, 217, 0, 353, 0, 511, 354, 512, 356, 357,
	0, 358, 359, 360, 0, 1022, 362, 363, 364, 0,
	0, 365, 366, 513, 0, 367, 0, 514, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	515, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 517, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 0, 405, 406, 407, 408,
	518, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 421, 423, 424, 425, 422, 428,
	429, 430, 0, 431, 411, 412, 432, 433, 0, 434,
	435, 519, 436, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 447, 443, 444, 445, 520, 0, 449, 450,
	448, 0, 451, 452, 453, 454, 455, 280, 456, 0,
	457, 521, 522, 523, 524, 0, 464, 0, 458, 459,
	525, 460, 526, 0, 461, 462, 463, 0, 465, 466,
	0, 0, 467, 468, 469, 471, 472, 470, 474, 0,
	475, 0, 473, 476, 477, 478, 527, 528, 529, 0,
	480, 479, 530, 560, 0, 212, 0, 481, 482, 531,
	483, 484, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 219, 220, 559, 222, 549, 223, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 0, 233, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 491, 492, 493, 0, 241, 494, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 552,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 495, 496, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	0, 0, 0, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 553, 295, 501, 0, 502, 296, 0, 297,
	298, 299, 300, 503, 504, 505, 355, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 0, 308, 506, 310, 309, 311, 312, 313, 507,
	0, 508, 0, 315, 0, 509, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 510, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 352, 350, 0, 349, 0, 0,
	0, 353, 0, 511, 354, 512, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 0, 367, 0, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 515, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 0, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 554,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	0, 431, 411, 412, 432, 433, 0, 434, 435, 519,
	436, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 456, 0, 457, 521,
	522, 523, 524, 0, 464, 0, 458, 459, 525, 460,
	526, 0, 461, 462, 463, 0, 465, 466, 0, 0,
	467, 468, 469, 471, 472, 470, 474, 0, 475, 0,
	473, 476, 477, 478, 527, 528, 529, 0, 480, 479,
	530, 548, 0, 212, 0, 481, 482, 531, 483, 484,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 219, 220, 221, 222, 549, 223, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	0, 233, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 491, 492, 493, 0, 241, 494, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 552, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 495, 496, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 0, 0,
	0, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 0, 292, 0, 0, 0, 293, 294,
	553, 295, 501, 0, 502, 296, 0, 297, 298, 299,
	300, 503, 504, 505, 355, 0, 301, 302, 0, 303,
	304, 306, 0, 0, 0, 305, 307, 314, 0, 0,
	308, 506, 310, 309, 311, 312, 313, 507, 0, 508,
	0, 315, 0, 509, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 510, 0, 329, 330, 0, 0, 331,
	332, 0, 0, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 352, 350, 0, 349, 0, 0, 0, 353,
	0, 511, 354, 512, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	0, 367, 0, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 515, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 0, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 554, 426, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 0, 431,
	411, 412, 432, 433, 0, 434, 435, 519, 436, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 456, 0, 457, 521, 522, 523,
	524, 0, 464, 0, 458, 459, 525, 460, 526, 0,
	461, 462, 463, 0, 465, 466, 0, 0, 467, 468,
	469, 471, 472, 470, 474, 0, 475, 0, 473, 476,
	477, 478, 527, 528, 529, 212, 480, 479, 530, 0,
	0, 0, 0, 481, 482, 531, 483, 484, 485, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 0, 233, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 491, 492, 493, 0, 241, 494, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 495, 496, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	0, 215, 0, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 501, 0, 502, 296, 0, 297,
	298, 299, 300, 503, 504, 505, 355, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 216, 305, 307, 314,
	0, 0, 308, 506, 310, 309, 311, 312, 313, 507,
	0, 508, 0, 315, 0, 509, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 510, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 352, 350, 2813, 349, 0, 217,
	0, 353, 0, 511, 354, 512, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 0, 367, 0, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 515, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 0, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	0, 431, 411, 412, 432, 433, 0, 434, 435, 519,
	436, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 456, 0, 457, 521,
	522, 523, 524, 0, 464, 0, 458, 459, 525, 460,
	526, 0, 461, 462, 463, 0, 465, 466, 0, 0,
	467, 468, 469, 471, 472, 470, 474, 0, 475, 0,
	473, 476, 477, 478, 527, 528, 529, 212, 480, 479,
	530, 0, 0, 0, 0, 481, 482, 531, 483, 484,
	485, 0, 0, 0, 218, 219, 220, 221, 222, 0,
	223, 0, 0, 0, 0, 0, 486, 0, 0, 0,
	0, 224, 226, 225, 227, 228, 487, 488, 229, 489,
	232, 230, 231, 490, 0, 233, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 491, 492, 493, 0, 241,
	494, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 261, 262, 263, 264, 495,
	496, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	497, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	498, 499, 0, 215, 0, 0, 0, 0, 0, 286,
	287, 288, 500, 289, 290, 0, 291, 0, 292, 0,
	0, 0, 293, 294, 0, 295, 501, 0, 502, 296,
	0, 297, 298, 299, 300, 503, 504, 505, 355, 0,
	301, 302, 0, 303, 304, 306, 0, 0, 216, 305,
	307, 314, 0, 0, 308, 506, 310, 309, 311, 312,
	313, 507, 0, 508, 0, 315, 0, 509, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 510, 0, 329,
	330, 0, 0, 331, 332, 0, 0, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 352, 350, 0, 349,
	0, 217, 0, 353, 0, 511, 354, 512, 356, 357,
	0, 358, 359, 360, 0, 1022, 362, 363, 364, 0,
	0, 365, 366, 513, 0, 367, 0, 514, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	515, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 517, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 0, 405, 406, 407, 408,
	518, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 421, 423, 424, 425, 422, 428,
	429, 430, 0, 431, 411, 412, 432, 433, 0, 434,
	435, 519, 436, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 447, 443, 444, 445, 520, 0, 449, 450,
	448, 0, 451, 452, 453, 454, 455, 280, 456, 0,
	457, 521, 522, 523, 524, 0, 464, 0, 458, 459,
	525, 460, 526, 0, 461, 462, 463, 0, 465, 466,
	0, 0, 467, 468, 469, 471, 472, 470, 474, 0,
	475, 0, 473, 476, 477, 478, 527, 528, 529, 0,
	480, 479, 530, 2423, 0, 212, 0, 481, 482, 531,
	483, 484, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 0, 233, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 491, 492, 493, 0, 241, 494, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 495, 496, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	0, 215, 0, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 501, 0, 502, 296, 0, 297,
	298, 299, 300, 2422, 504, 505, 355, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 216, 305, 307, 314,
	0, 0, 308, 506, 310, 309, 311, 312, 313, 507,
	0, 508, 0, 315, 0, 509, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 510, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 352, 350, 0, 349, 0, 217,
	0, 353, 0, 511, 354, 512, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 0, 367, 0, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 515, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 0, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	0, 431, 411, 412, 432, 433, 0, 434, 435, 519,
	436, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 456, 0, 457, 521,
	522, 523, 524, 0, 464, 0, 458, 459, 525, 460,
	526, 0, 461, 462, 463, 0, 465, 466, 0, 0,
	467, 468, 469, 471, 472, 470, 474, 0, 475, 0,
	473, 476, 477, 478, 527, 528, 529, 0, 480, 479,
	530, 1930, 0, 212, 0, 481, 482, 531, 483, 484,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	0, 233, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 491, 492, 493, 0, 241, 494, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 495, 496, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 0, 215,
	0, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 0, 292, 0, 0, 0, 293, 294,
	0, 295, 501, 0, 502, 296, 0, 297, 298, 299,
	300, 503, 504, 505, 355, 0, 301, 302, 0, 303,
	304, 306, 0, 0, 216, 305, 307, 314, 0, 0,
	308, 506, 310, 309, 311, 312, 313, 507, 0, 508,
	0, 315, 0, 509, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 510, 0, 329, 330, 0, 0, 331,
	332, 0, 0, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 352, 350, 0, 349, 0, 217, 0, 353,
	0, 511, 354, 512, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	0, 367, 0, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 515, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 0, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 426, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 0, 431,
	411, 412, 432, 433, 0, 434, 435, 519, 436, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 456, 0, 457, 521, 522, 523,
	524, 0, 464, 0, 458, 459, 525, 460, 526, 0,
	461, 462, 463, 0, 465, 466, 0, 0, 467, 468,
	469, 471, 472, 470, 474, 0, 475, 0, 473, 476,
	477, 478, 527, 528, 529, 212, 480, 479, 530, 0,
	0, 0, 0, 481, 482, 531, 483, 484, 485, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 0, 233, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 491, 492, 493, 0, 241, 494, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 495, 496, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	0, 215, 0, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 501, 0, 502, 296, 0, 297,
	298, 299, 300, 503, 504, 505, 355, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 216, 305, 307, 314,
	0, 0, 308, 506, 310, 309, 311, 312, 313, 507,
	0, 508, 0, 315, 0, 509, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 510, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 352, 350, 0, 349, 0, 217,
	0, 353, 0, 511, 354, 512, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 0, 367, 0, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 515, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 0, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	0, 431, 411, 412, 432, 433, 0, 434, 435, 519,
	436, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 0, 449, 450, 448, 1858,
	451, 452, 453, 454, 455, 280, 456, 0, 457, 521,
	522, 523, 524, 0, 464, 0, 458, 459, 525, 460,
	526, 0, 461, 462, 463, 0, 465, 466, 0, 0,
	467, 468, 469, 471, 472, 470, 474, 0, 475, 0,
	473, 476, 477, 478, 527, 528, 529, 0, 480, 479,
	530, 1863, 0, 212, 0, 481, 482, 531, 483, 484,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	0, 233, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 491, 492, 493, 0, 241, 494, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 495, 496, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 0, 215,
	0, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 0, 292, 0, 0, 0, 293, 294,
	0, 295, 501, 0, 502, 296, 0, 297, 298, 299,
	300, 1862, 504, 505, 355, 0, 301, 302, 0, 303,
	304, 306, 0, 0, 216, 305, 307, 314, 0, 0,
	308, 506, 310, 309, 311, 312, 313, 507, 0, 508,
	0, 315, 0, 509, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 510, 0, 329, 330, 0, 0, 331,
	332, 0, 0, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 352, 350, 0, 349, 0, 217, 0, 353,
	0, 511, 354, 512, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	0, 367, 0, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 515, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 0, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 426, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 0, 431,
	411, 412, 432, 433, 0, 434, 435, 519, 436, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 456, 0, 457, 521, 522, 523,
	524, 0, 464, 0, 458, 459, 525, 460, 526, 0,
	461, 462, 463, 0, 465, 466, 0, 0, 467, 468,
	469, 471, 472, 470, 474, 0, 475, 0, 473, 476,
	477, 478, 527, 528, 529, 0, 480, 479, 530, 1851,
	0, 212, 0, 481, 482, 531, 483, 484, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	486, 0, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 488, 229, 489, 232, 230, 231, 490, 0, 233,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 491,
	492, 493, 0, 241, 494, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 495, 496, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 497, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 498, 499, 0, 215, 0, 0,
	0, 0, 0, 286, 287, 288, 500, 289, 290, 0,
	291, 0, 292, 0, 0, 0, 293, 294, 0, 295,
	501, 0, 502, 296, 0, 297, 298, 299, 300, 1853,
	504, 505, 355, 0, 301, 302, 0, 303, 304, 306,
	0, 0, 216, 305, 307, 314, 0, 0, 308, 506,
	310, 309, 311, 312, 313, 507, 0, 508, 0, 315,
	0, 509, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 510, 0, 329, 330, 0, 0, 331, 332, 0,
	0, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	352, 350, 0, 349, 0, 217, 0, 353, 0, 511,
	354, 512, 356, 357, 0, 358, 359, 360, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 0, 367,
	0, 514, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 515, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 517,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 0,
	405, 406, 407, 408, 518, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 421, 423,
	424, 425, 422, 428, 429, 430, 0, 431, 411, 412,
	432, 433, 0, 434, 435, 519, 436, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 447, 443, 444, 445,
	520, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 456, 0, 457, 521, 522, 523, 524, 0,
	464, 0, 458, 459, 525, 460, 526, 0, 461, 462,
	463, 0, 465, 466, 0, 0, 467, 468, 469, 471,
	472, 470, 474, 0, 475, 0, 473, 476, 477, 478,
	527, 528, 529, 0, 480, 479, 530, 1324, 0, 212,
	0, 481, 482, 531, 483, 484, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 486, 0,
	0, 0, 0, 224, 226, 225, 227, 228, 487, 488,
	229, 489, 232, 230, 231, 490, 0, 233, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 491, 492, 493,
	0, 241, 494, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 261, 262, 263,
	264, 495, 496, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 497, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 498, 499, 0, 215, 0, 0, 0, 0,
	0, 286, 287, 288, 500, 289, 290, 0, 291, 0,
	292, 0, 0, 0, 293, 294, 0, 295, 501, 0,
	502, 296, 0, 297, 298, 299, 300, 1323, 504, 505,
	355, 0, 301, 302, 0, 303, 304, 306, 0, 0,
	216, 305, 307, 314, 0, 0, 308, 506, 310, 309,
	311, 312, 313, 507, 0, 508, 0, 315, 0, 509,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 510,
	0, 329, 330, 0, 0, 331, 332, 0, 0, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 352, 350,
	0, 349, 0, 217, 0, 353, 0, 511, 354, 512,
	356, 357, 0, 358, 359, 360, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 0, 367, 0, 514,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 515, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 517, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 0, 405, 406,
	407, 408, 518, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 0, 426, 427, 421, 423, 424, 425,
	422, 428, 429, 430, 0, 431, 411, 412, 432, 433,
	0, 434, 435, 519, 436, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 447, 443, 444, 445, 520, 0,
	449, 450, 448, 0, 451, 452, 453, 454, 455, 280,
	456, 0, 457, 521, 522, 523, 524, 0, 464, 0,
	458, 459, 525, 460, 526, 0, 461, 462, 463, 0,
	465, 466, 0, 0, 467, 468, 469, 471, 472, 470,
	474, 0, 475, 0, 473, 476, 477, 478, 527, 528,
	529, 0, 480, 479, 530, 1321, 0, 212, 0, 481,
	482, 531, 483, 484, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 219, 220, 221, 222, 0,
	223, 0, 0, 0, 0, 0, 486, 0, 0, 0,
	0, 224, 226, 225, 227, 228, 487, 488, 229, 489,
	232, 230, 231, 490, 0, 233, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 491, 492, 493, 0, 241,
	494, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 261, 262, 263, 264, 495,
	496, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	497, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	498, 499, 0, 215, 0, 0, 0, 0, 0, 286,
	287, 288, 500, 289, 290, 0, 291, 0, 292, 0,
	0, 0, 293, 294, 0, 295, 501, 0, 502, 296,
	0, 297, 298, 299, 300, 1320, 504, 505, 355, 0,
	301, 302, 0, 303, 304, 306, 0, 0, 216, 305,
	307, 314, 0, 0, 308, 506, 310, 309, 311, 312,
	313, 507, 0, 508, 0, 315, 0, 509, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 510, 0, 329,
	330, 0, 0, 331, 332, 0, 0, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 352, 350, 0, 349,
	0, 217, 0, 353, 0, 511, 354, 512, 356, 357,
	0, 358, 359, 360, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 513, 0, 367, 0, 514, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	515, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 517, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 0, 405, 406, 407, 408,
	518, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 421, 423, 424, 425, 422, 428,
	429, 430, 0, 431, 411, 412, 432, 433, 0, 434,
	435, 519, 436, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 447, 443, 444, 445, 520, 0, 449, 450,
	448, 0, 451, 452, 453, 454, 455, 280, 456, 0,
	457, 521, 522, 523, 524, 0, 464, 0, 458, 459,
	525, 460, 526, 0, 461, 462, 463, 0, 465, 466,
	0, 0, 467, 468, 469, 471, 472, 470, 474, 0,
	475, 0, 473, 476, 477, 478, 527, 528, 529, 0,
	480, 479, 530, 1318, 0, 212, 0, 481, 482, 531,
	483, 484, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 0, 233, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 491, 492, 493, 0, 241, 494, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 495, 496, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	0, 215, 0, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 501, 0, 502, 296, 0, 297,
	298, 299, 300, 1317, 504, 505, 355, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 216, 305, 307, 314,
	0, 0, 308, 506, 310, 309, 311, 312, 313, 507,
	0, 508, 0, 315, 0, 509, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 510, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 352, 350, 0, 349, 0, 217,
	0, 353, 0, 511, 354, 512, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 0, 367, 0, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 515, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 0, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	0, 431, 411, 412, 432, 433, 0, 434, 435, 519,
	436, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 456, 0, 457, 521,
	522, 523, 524, 0, 464, 0, 458, 459, 525, 460,
	526, 0, 461, 462, 463, 0, 465, 466, 0, 0,
	467, 468, 469, 471, 472, 470, 474, 0, 475, 0,
	473, 476, 477, 478, 527, 528, 529, 0, 480, 479,
	530, 1314, 0, 212, 0, 481, 482, 531, 483, 484,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	0, 233, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 491, 492, 493, 0, 241, 494, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 495, 496, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 0, 215,
	0, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 0, 292, 0, 0, 0, 293, 294,
	0, 295, 501, 0, 502, 296, 0, 297, 298, 299,
	300, 1313, 504, 505, 355, 0, 301, 302, 0, 303,
	304, 306, 0, 0, 216, 305, 307, 314, 0, 0,
	308, 506, 310, 309, 311, 312, 313, 507, 0, 508,
	0, 315, 0, 509, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 510, 0, 329, 330, 0, 0, 331,
	332, 0, 0, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 352, 350, 0, 349, 0, 217, 0, 353,
	0, 511, 354, 512, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	0, 367, 0, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 515, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 0, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 426, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 0, 431,
	411, 412, 432, 433, 0, 434, 435, 519, 436, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 456, 0, 457, 521, 522, 523,
	524, 0, 464, 0, 458, 459, 525, 460, 526, 0,
	461, 462, 463, 0, 465, 466, 0, 0, 467, 468,
	469, 471, 472, 470, 474, 0, 475, 0, 473, 476,
	477, 478, 527, 528, 529, 0, 480, 479, 530, 1188,
	0, 212, 0, 481, 482, 531, 483, 484, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	486, 0, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 488, 229, 489, 232, 230, 231, 490, 0, 233,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 491,
	492, 493, 0, 241, 494, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 495, 496, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 497, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 498, 499, 0, 215, 0, 0,
	0, 0, 0, 286, 287, 288, 500, 289, 290, 0,
	291, 0, 292, 0, 0, 0, 293, 294, 0, 295,
	501, 0, 502, 296, 0, 297, 298, 299, 300, 1190,
	504, 505, 355, 0, 301, 302, 0, 303, 304, 306,
	0, 0, 216, 305, 307, 314, 0, 0, 308, 506,
	310, 309, 311, 312, 313, 507, 0, 508, 0, 315,
	0, 509, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 510, 0, 329, 330, 0, 0, 331, 332, 0,
	0, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	352, 350, 0, 349, 0, 217, 0, 353, 0, 511,
	354, 512, 356, 357, 0, 358, 359, 360, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 0, 367,
	0, 514, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 515, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 517,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 0,
	405, 406, 407, 408, 518, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 421, 423,
	424, 425, 422, 428, 429, 430, 0, 431, 411, 412,
	432, 433, 0, 434, 435, 519, 436, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 447, 443, 444, 445,
	520, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 456, 0, 457, 521, 522, 523, 524, 0,
	464, 0, 458, 459, 525, 460, 526, 0, 461, 462,
	463, 0, 465, 466, 0, 0, 467, 468, 469, 471,
	472, 470, 474, 0, 475, 0, 473, 476, 477, 478,
	527, 528, 529, 212, 480, 479, 530, 0, 0, 0,
	0, 481, 482, 531, 483, 484, 485, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	0, 233, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 491, 492, 493, 0, 241, 494, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 495, 496, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 0, 215,
	0, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 0, 292, 0, 0, 0, 293, 294,
	0, 295, 501, 0, 502, 296, 0, 297, 298, 299,
	300, 503, 504, 505, 355, 0, 301, 302, 0, 303,
	304, 306, 0, 0, 216, 305, 307, 314, 0, 0,
	308, 506, 310, 309, 311, 312, 313, 507, 0, 508,
	0, 315, 0, 509, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 510, 0, 329, 330, 0, 0, 331,
	332, 0, 0, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 352, 350, 0, 349, 0, 217, 0, 353,
	0, 511, 354, 512, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	0, 367, 0, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 515, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 0, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 426, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 0, 431,
	411, 412, 432, 433, 0, 434, 435, 519, 436, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 456, 0, 457, 521, 522, 523,
	524, 0, 464, 0, 458, 459, 525, 460, 526, 0,
	461, 462, 463, 0, 465, 466, 0, 0, 467, 468,
	469, 471, 472, 470, 474, 0, 475, 0, 473, 476,
	477, 478, 527, 528, 529, 212, 480, 479, 530, 0,
	0, 0, 0, 481, 482, 531, 483, 484, 485, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 0, 233, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 491, 492, 493, 0, 241, 494, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 552,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 495, 496, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	0, 0, 0, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 553, 295, 501, 0, 502, 296, 0, 297,
	298, 299, 300, 503, 504, 505, 355, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 0, 308, 506, 310, 309, 311, 312, 313, 507,
	0, 508, 0, 315, 0, 509, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 510, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 352, 350, 0, 349, 0, 0,
	0, 353, 0, 511, 354, 512, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 0, 367, 0, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 515, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 0, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 554,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	0, 431, 411, 412, 432, 433, 0, 434, 435, 519,
	436, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 456, 0, 457, 521,
	522, 523, 524, 0, 464, 0, 458, 459, 525, 460,
	526, 0, 461, 462, 463, 0, 465, 466, 0, 0,
	467, 468, 469, 471, 472, 470, 474, 0, 475, 0,
	473, 476, 477, 478, 527, 528, 529, 212, 480, 479,
	530, 0, 0, 0, 0, 481, 482, 531, 483, 484,
	485, 0, 0, 0, 218, 219, 220, 221, 222, 0,
	223, 0, 0, 0, 0, 0, 486, 0, 0, 0,
	0, 224, 226, 225, 227, 228, 487, 488, 229, 489,
	232, 230, 231, 490, 0, 233, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 491, 492, 493, 0, 241,
	494, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 1961, 262, 263, 264, 495,
	496, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	497, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	498, 499, 0, 215, 0, 0, 0, 0, 0, 286,
	287, 288, 500, 289, 290, 0, 291, 0, 292, 0,
	0, 0, 293, 294, 0, 295, 501, 0, 502, 296,
	0, 297, 298, 299, 300, 503, 504, 505, 355, 0,
	301, 302, 0, 303, 304, 306, 0, 0, 216, 305,
	307, 314, 0, 0, 308, 506, 310, 309, 311, 312,
	313, 507, 0, 508, 0, 315, 0, 509, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 510, 0, 329,
	330, 0, 0, 331, 332, 0, 0, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 352, 350, 0, 349,
	0, 217, 0, 353, 0, 511, 354, 512, 356, 357,
	0, 358, 359, 360, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 513, 0, 367, 0, 514, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	515, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 517, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 0, 405, 406, 407, 408,
	518, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 421, 423, 424, 425, 422, 428,
	429, 430, 0, 431, 411, 412, 432, 433, 0, 434,
	435, 519, 436, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 447, 443, 444, 445, 520, 0, 449, 450,
	448, 0, 451, 452, 453, 454, 455, 280, 456, 0,
	457, 521, 522, 523, 524, 0, 464, 0, 458, 459,
	525, 460, 526, 0, 461, 462, 463, 0, 465, 466,
	0, 0, 467, 468, 469, 471, 472, 470, 474, 0,
	475, 0, 473, 476, 477, 478, 527, 528, 529, 212,
	480, 479, 530, 0, 0, 0, 0, 481, 482, 531,
	483, 484, 485, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 486, 0,
	0, 0, 0, 224, 226, 225, 227, 228, 487, 488,
	229, 489, 232, 230, 231, 490, 0, 233, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 491, 492, 493,
	0, 241, 494, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 1959, 262, 263,
	264, 495, 496, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 497, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 498, 499, 0, 215, 0, 0, 0, 0,
	0, 286, 287, 288, 500, 289, 290, 0, 291, 0,
	292, 0, 0, 0, 293, 294, 0, 295, 501, 0,
	502, 296, 0, 297, 298, 299, 300, 503, 504, 505,
	355, 0, 301, 302, 0, 303, 304, 306, 0, 0,
	216, 305, 307, 314, 0, 0, 308, 506, 310, 309,
	311, 312, 313, 507, 0, 508, 0, 315, 0, 509,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 510,
	0, 329, 330, 0, 0, 331, 332, 0, 0, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 352, 350,
	0, 349, 0, 217, 0, 353, 0, 511, 354, 512,
	356, 357, 0, 358, 359, 360, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 0, 367, 0, 514,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 515, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 517, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 0, 405, 406,
	407, 408, 518, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 0, 426, 427, 421, 423, 424, 425,
	422, 428, 429, 430, 0, 431, 411, 412, 432, 433,
	0, 434, 435, 519, 436, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 447, 443, 444, 445, 520, 0,
	449, 450, 448, 0, 451, 452, 453, 454, 455, 280,
	456, 0, 457, 521, 522, 523, 524, 0, 464, 0,
	458, 459, 525, 460, 526, 0, 461, 462, 463, 0,
	465, 466, 0, 0, 467, 468, 469, 471, 472, 470,
	474, 0, 475, 0, 473, 476, 477, 478, 527, 528,
	529, 212, 480, 479, 530, 0, 0, 0, 0, 481,
	482, 531, 483, 484, 485, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	486, 0, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 488, 229, 489, 232, 230, 231, 490, 0, 233,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 491,
	492, 493, 0, 241, 494, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 1957,
	262, 263, 264, 495, 496, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 497, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 498, 499, 0, 215, 0, 0,
	0, 0, 0, 286, 287, 288, 500, 289, 290, 0,
	291, 0, 292, 0, 0, 0, 293, 294, 0, 295,
	501, 0, 502, 296, 0, 297, 298, 299, 300, 503,
	504, 505, 355, 0, 301, 302, 0, 303, 304, 306,
	0, 0, 216, 305, 307, 314, 0, 0, 308, 506,
	310, 309, 311, 312, 313, 507, 0, 508, 0, 315,
	0, 509, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 510, 0, 329, 330, 0, 0, 331, 332, 0,
	0, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	352, 350, 0, 349, 0, 217, 0, 353, 0, 511,
	354, 512, 356, 357, 0, 358, 359, 360, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 0, 367,
	0, 514, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 515, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 517,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 0,
	405, 406, 407, 408, 518, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 421, 423,
	424, 425, 422, 428, 429, 430, 0, 431, 411, 412,
	432, 433, 0, 434, 435, 519, 436, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 447, 443, 444, 445,
	520, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 456, 0, 457, 521, 522, 523, 524, 0,
	464, 0, 458, 459, 525, 460, 526, 0, 461, 462,
	463, 0, 465, 466, 0, 0, 467, 468, 469, 471,
	472, 470, 474, 0, 475, 0, 473, 476, 477, 478,
	527, 528, 529, 0, 480, 479, 530, 699, 0, 212,
	0, 481, 482, 531, 483, 484, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 486, 0,
	0, 0, 0, 224, 226, 225, 227, 228, 487, 488,
	229, 489, 232, 230, 231, 490, 0, 233, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 491, 492, 493,
	0, 241, 494, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 261, 262, 263,
	264, 495, 496, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 497, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 498, 499, 0, 0, 0, 0, 0, 0,
	0, 286, 287, 288, 500, 289, 290, 0, 291, 0,
	292, 0, 0, 0, 293, 294, 0, 295, 501, 0,
	502, 296, 0, 297, 298, 299, 300, 503, 504, 505,
	355, 0, 301, 302, 0, 303, 304, 306, 0, 0,
	0, 305, 307, 314, 0, 0, 308, 506, 310, 309,
	311, 312, 313, 507, 0, 508, 698, 315, 0, 509,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 510,
	0, 329, 330, 0, 0, 331, 332, 0, 0, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 352, 350,
	0, 349, 0, 0, 0, 353, 0, 511, 354, 512,
	356, 357, 0, 358, 359, 360, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 0, 367, 0, 514,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 515, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 517, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 0, 405, 406,
	407, 408, 518, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 0, 426, 427, 421, 423, 424, 425,
	422, 428, 429, 430, 0, 431, 411, 412, 432, 433,
	0, 434, 435, 519, 436, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 447, 443, 444, 445, 520, 0,
	449, 450, 448, 697, 451, 452, 453, 454, 455, 280,
	456, 0, 457, 521, 522, 523, 524, 0, 464, 0,
	458, 459, 525, 460, 526, 0, 461, 462, 463, 0,
	465, 466, 0, 0, 467, 468, 469, 471, 472, 470,
	474, 0, 475, 0, 473, 476, 477, 478, 527, 528,
	529, 212, 480, 479, 530, 0, 0, 0, 0, 481,
	482, 531, 483, 484, 485, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	486, 0, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 488, 229, 489, 232, 230, 231, 490, 0, 233,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 491,
	492, 493, 0, 241, 494, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 495, 496, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 497, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 498, 499, 0, 2485, 0, 0,
	0, 0, 0, 286, 287, 288, 500, 289, 290, 0,
	291, 0, 292, 0, 0, 0, 293, 294, 0, 295,
	501, 0, 502, 296, 0, 297, 298, 299, 300, 503,
	504, 505, 355, 0, 301, 302, 0, 303, 304, 306,
	0, 0, 0, 305, 307, 314, 0, 0, 308, 506,
	310, 309, 311, 312, 313, 507, 0, 508, 0, 315,
	0, 509, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 510, 0, 329, 330, 0, 0, 331, 332, 0,
	0, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	352, 350, 0, 349, 0, 0, 0, 353, 0, 511,
	354, 512, 356, 357, 0, 358, 359, 360, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 0, 367,
	0, 514, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 515, 378, 516, 379, 380, 3324,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 517,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 0,
	405, 406, 407, 408, 518, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 421, 423,
	424, 425, 422, 428, 429, 430, 0, 431, 411, 412,
	432, 433, 0, 434, 435, 519, 436, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 447, 443, 444, 445,
	520, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 456, 0, 457, 521, 522, 523, 524, 0,
	464, 0, 458, 459, 525, 460, 526, 0, 461, 462,
	463, 0, 465, 466, 0, 0, 467, 468, 469, 471,
	472, 470, 474, 0, 475, 0, 473, 476, 477, 478,
	527, 528, 529, 0, 480, 479, 530, 539, 0, 212,
	0, 481, 482, 531, 483, 484, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 538, 223, 0, 0, 0, 0, 0, 486, 0,
	0, 0, 0, 224, 226, 225, 227, 228, 487, 488,
	229, 489, 232, 230, 231, 490, 0, 233, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 491, 492, 493,
	0, 241, 494, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 261, 262, 263,
	264, 495, 496, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 497, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 498, 499, 0, 0, 0, 0, 0, 0,
	0, 286, 287, 288, 500, 289, 290, 0, 291, 0,
	292, 0, 0, 0, 293, 294, 0, 295, 501, 0,
	502, 296, 0, 297, 298, 299, 300, 503, 504, 505,
	355, 0, 301, 302, 0, 303, 304, 306, 0, 0,
	0, 305, 307, 314, 0, 0, 308, 506, 310, 309,
	311, 312, 313, 507, 0, 508, 0, 315, 0, 509,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 510,
	0, 329, 330, 0, 0, 331, 332, 0, 0, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 352, 350,
	0, 349, 0, 0, 0, 353, 0, 511, 354, 512,
	356, 357, 0, 358, 359, 360, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 0, 367, 0, 514,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 515, 378, 516, 537, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 517, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 0, 405, 406,
	407, 408, 518, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 0, 426, 427, 421, 423, 424, 425,
	422, 428, 429, 430, 0, 431, 411, 412, 432, 433,
	0, 434, 435, 519, 436, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 447, 443, 444, 445, 520, 0,
	449, 450, 448, 0, 451, 452, 453, 454, 455, 280,
	456, 0, 457, 521, 522, 523, 524, 0, 464, 0,
	458, 459, 525, 460, 526, 0, 461, 462, 463, 0,
	465, 466, 0, 0, 467, 468, 469, 471, 472, 470,
	474, 0, 475, 0, 473, 476, 477, 478, 527, 528,
	529, 0, 480, 479, 530, 212, 3333, 0, 0, 481,
	482, 531, 483, 484, 485, 0, 0, 0, 0, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 0, 233, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 491, 492, 493, 0, 241, 494, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 495, 496, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	0, 0, 0, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 501, 0, 502, 296, 0, 297,
	298, 299, 300, 503, 504, 505, 355, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 0, 308, 506, 310, 309, 311, 312, 313, 507,
	0, 508, 0, 315, 0, 509, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 510, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 352, 350, 0, 349, 0, 0,
	0, 353, 0, 511, 354, 512, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 0, 367, 0, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 515, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 0, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	0, 431, 411, 412, 432, 433, 0, 434, 435, 519,
	436, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 456, 0, 457, 521,
	522, 523, 524, 0, 464, 0, 458, 459, 525, 460,
	526, 0, 461, 462, 463, 0, 465, 466, 0, 0,
	467, 468, 469, 471, 472, 470, 474, 0, 475, 0,
	473, 476, 477, 478, 527, 528, 529, 0, 480, 479,
	530, 212, 2472, 0, 0, 481, 482, 531, 483, 484,
	485, 0, 0, 0, 0, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	486, 0, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 488, 229, 489, 232, 230, 231, 490, 0, 233,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 491,
	492, 493, 0, 241, 494, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 495, 496, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 497, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 498, 499, 0, 0, 0, 0,
	0, 0, 0, 286, 287, 288, 500, 289, 290, 0,
	291, 0, 292, 0, 0, 0, 293, 294, 0, 295,
	501, 0, 502, 296, 0, 297, 298, 299, 300, 503,
	504, 505, 355, 0, 301, 302, 0, 303, 304, 306,
	0, 0, 0, 305, 307, 314, 0, 0, 308, 506,
	310, 309, 311, 312, 313, 507, 0, 508, 0, 315,
	0, 509, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 510, 0, 329, 330, 0, 0, 331, 332, 0,
	0, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	352, 350, 0, 349, 0, 0, 0, 353, 0, 511,
	354, 512, 356, 357, 0, 358, 359, 360, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 0, 367,
	0, 514, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 515, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 517,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 0,
	405, 406, 407, 408, 518, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 421, 423,
	424, 425, 422, 428, 429, 430, 0, 431, 411, 412,
	432, 433, 0, 434, 435, 519, 436, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 447, 443, 444, 445,
	520, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 456, 0, 457, 521, 522, 523, 524, 0,
	464, 0, 458, 459, 525, 460, 526, 0, 461, 462,
	463, 0, 465, 466, 0, 0, 467, 468, 469, 471,
	472, 470, 474, 0, 475, 0, 473, 476, 477, 478,
	527, 528, 529, 212, 480, 479, 530, 0, 0, 0,
	0, 481, 482, 531, 483, 484, 485, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	0, 233, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 491, 492, 493, 0, 241, 494, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 495, 496, 3114, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 0, 0,
	0, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 0, 292, 0, 0, 0, 293, 294,
	0, 295, 501, 0, 502, 296, 0, 297, 298, 299,
	300, 503, 504, 505, 355, 0, 301, 302, 0, 303,
	304, 306, 0, 0, 0, 305, 307, 314, 0, 0,
	308, 506, 310, 309, 311, 312, 313, 507, 0, 508,
	0, 315, 0, 509, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 510, 0, 329, 330, 0, 0, 331,
	332, 0, 0, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 352, 350, 0, 349, 0, 0, 0, 353,
	0, 511, 354, 512, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	0, 367, 0, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 515, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 0, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 426, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 0, 431,
	411, 412, 432, 433, 0, 434, 435, 519, 436, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 456, 0, 457, 521, 522, 523,
	524, 0, 464, 0, 458, 459, 525, 460, 526, 0,
	461, 462, 463, 0, 465, 466, 0, 0, 467, 468,
	469, 471, 472, 470, 474, 0, 475, 0, 473, 476,
	477, 478, 527, 528, 529, 212, 480, 479, 530, 0,
	0, 0, 0, 481, 482, 531, 483, 484, 485, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 486, 0, 2252, 0, 0, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 0, 233, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 491, 492, 493, 0, 241, 494, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 495, 496, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	0, 0, 0, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 501, 0, 502, 296, 0, 297,
	298, 299, 300, 503, 504, 505, 355, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 0, 308, 506, 310, 309, 311, 312, 313, 507,
	0, 508, 0, 315, 0, 509, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 510, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 352, 350, 0, 349, 0, 0,
	0, 353, 0, 511, 354, 512, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 0, 367, 0, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 515, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 0, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	0, 431, 411, 412, 432, 433, 0, 434, 435, 519,
	436, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 456, 0, 457, 521,
	522, 523, 524, 0, 464, 0, 458, 459, 525, 460,
	526, 0, 461, 462, 463, 0, 465, 466, 0, 0,
	467, 468, 469, 471, 472, 470, 474, 0, 475, 0,
	473, 476, 477, 478, 527, 528, 529, 0, 480, 479,
	530, 212, 2472, 0, 0, 481, 482, 531, 483, 484,
	485, 0, 0, 0, 0, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	486, 0, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 488, 229, 489, 232, 230, 231, 490, 0, 233,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 491,
	492, 493, 0, 241, 494, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 495, 496, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 497, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 498, 499, 0, 0, 0, 0,
	0, 0, 0, 286, 287, 288, 500, 289, 290, 0,
	291, 0, 292, 0, 0, 0, 293, 294, 0, 295,
	501, 0, 502, 296, 0, 297, 298, 299, 300, 503,
	504, 505, 355, 0, 301, 302, 0, 303, 304, 306,
	0, 0, 0, 305, 307, 314, 0, 0, 308, 506,
	310, 309, 311, 312, 313, 507, 0, 508, 0, 315,
	0, 509, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 510, 0, 329, 330, 0, 0, 331, 332, 0,
	0, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	352, 350, 0, 349, 0, 0, 0, 353, 0, 511,
	354, 512, 356, 357, 0, 358, 359, 360, 0, 0,
	362, 363, 2469, 0, 0, 365, 366, 513, 0, 367,
	0, 514, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 515, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 517,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 0,
	405, 406, 407, 408, 518, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 421, 423,
	424, 425, 422, 428, 429, 430, 0, 431, 411, 412,
	432, 433, 0, 434, 435, 519, 436, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 447, 443, 444, 445,
	520, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 456, 0, 457, 521, 522, 523, 524, 0,
	464, 0, 458, 459, 525, 460, 526, 0, 461, 462,
	463, 0, 465, 466, 0, 0, 467, 468, 469, 471,
	472, 470, 474, 0, 475, 0, 473, 476, 477, 478,
	527, 528, 529, 212, 480, 479, 530, 0, 0, 0,
	0, 481, 482, 531, 483, 484, 485, 0, 0, 0,
	218, 219, 220, 221, 222, 1938, 223, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	0, 233, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 491, 492, 493, 0, 241, 494, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 495, 496, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 0, 0,
	0, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 0, 292, 0, 0, 0, 293, 294,
	0, 295, 501, 0, 502, 296, 0, 297, 298, 299,
	300, 503, 504, 505, 355, 0, 301, 302, 0, 303,
	304, 306, 0, 0, 0, 305, 307, 314, 0, 0,
	308, 506, 310, 309, 311, 312, 313, 507, 0, 508,
	0, 315, 0, 509, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 510, 0, 329, 330, 0, 0, 331,
	332, 0, 0, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 352, 350, 0, 349, 0, 0, 0, 353,
	0, 511, 354, 512, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	0, 367, 0, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 515, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 0, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 426, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 0, 431,
	411, 412, 432, 433, 0, 434, 435, 519, 436, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 456, 0, 457, 521, 522, 523,
	524, 0, 464, 0, 458, 459, 525, 460, 526, 0,
	461, 462, 463, 0, 465, 466, 0, 0, 467, 468,
	469, 471, 472, 470, 474, 0, 475, 0, 473, 476,
	477, 478, 527, 528, 529, 0, 480, 479, 530, 1928,
	0, 212, 0, 481, 482, 531, 483, 484, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	486, 0, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 488, 229, 489, 232, 230, 231, 490, 0, 233,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 491,
	492, 493, 0, 241, 494, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 495, 496, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 497, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 498, 499, 0, 0, 0, 0,
	0, 0, 0, 286, 287, 288, 500, 289, 290, 0,
	291, 0, 292, 0, 0, 0, 293, 294, 0, 295,
	501, 0, 502, 296, 0, 297, 298, 299, 300, 503,
	504, 505, 355, 0, 301, 302, 0, 303, 304, 306,
	0, 0, 0, 305, 307, 314, 0, 0, 308, 506,
	310, 309, 311, 312, 313, 507, 0, 508, 0, 315,
	0, 509, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 510, 0, 329, 330, 0, 0, 331, 332, 0,
	0, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	352, 350, 0, 349, 0, 0, 0, 353, 0, 511,
	354, 512, 356, 357, 0, 358, 359, 360, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 0, 367,
	0, 514, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 515, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 517,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 0,
	405, 406, 407, 408, 518, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 421, 423,
	424, 425, 422, 428, 429, 430, 0, 431, 411, 412,
	432, 433, 0, 434, 435, 519, 436, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 447, 443, 444, 445,
	520, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 456, 0, 457, 521, 522, 523, 524, 0,
	464, 0, 458, 459, 525, 460, 526, 0, 461, 462,
	463, 0, 465, 466, 0, 0, 467, 468, 469, 471,
	472, 470, 474, 0, 475, 0, 473, 476, 477, 478,
	527, 528, 529, 0, 480, 479, 530, 580, 0, 212,
	0, 481, 482, 531, 483, 484, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 486, 0,
	0, 0, 0, 224, 1059, 225, 227, 228, 487, 488,
	229, 489, 232, 230, 231, 490, 0, 233, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 491, 492, 1057,
	0, 241, 494, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 261, 262, 263,
	264, 495, 496, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 497, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 498, 499, 0, 0, 0, 0, 0, 0,
	0, 286, 287, 288, 500, 289, 290, 0, 291, 0,
	292, 0, 0, 0, 293, 294, 0, 295, 501, 0,
	502, 296, 0, 297, 298, 299, 300, 503, 504, 505,
	355, 0, 301, 302, 0, 303, 304, 306, 0, 0,
	0, 305, 307, 314, 0, 0, 308, 506, 310, 309,
	311, 312, 313, 507, 0, 508, 0, 315, 0, 509,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 510,
	0, 329, 330, 0, 0, 331, 332, 0, 0, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 581, 0, 347, 348, 351, 352, 350,
	0, 349, 0, 0, 0, 353, 0, 511, 354, 512,
	356, 357, 0, 358, 359, 360, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 0, 367, 0, 514,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 515, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 517, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 0, 405, 406,
	407, 408, 518, 409, 0, 410, 414, 415, 577, 417,
	418, 419, 420, 0, 426, 427, 421, 423, 424, 425,
	422, 428, 1060, 430, 0, 431, 411, 412, 432, 433,
	0, 434, 435, 519, 436, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 447, 443, 444, 445, 520, 0,
	449, 450, 448, 0, 451, 452, 453, 454, 455, 280,
	456, 0, 457, 576, 522, 523, 524, 0, 464, 0,
	458, 459, 525, 460, 526, 0, 461, 462, 463, 0,
	465, 466, 0, 0, 467, 468, 469, 471, 472, 470,
	474, 0, 475, 0, 473, 476, 477, 478, 527, 528,
	529, 0, 480, 479, 530, 1873, 0, 212, 0, 481,
	482, 531, 483, 484, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 219, 220, 221, 222, 0,
	223, 0, 0, 0, 0, 0, 486, 0, 0, 0,
	0, 224, 226, 225, 227, 228, 487, 488, 229, 489,
	232, 230, 231, 490, 0, 233, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 491, 492, 493, 0, 241,
	494, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 261, 262, 263, 264, 495,
	496, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	497, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	498, 499, 0, 0, 0, 0, 0, 0, 0, 286,
	287, 288, 500, 289, 290, 0, 291, 0, 292, 0,
	0, 0, 293, 294, 0, 295, 501, 0, 502, 296,
	0, 297, 298, 299, 300, 1872, 504, 505, 355, 0,
	301, 302, 0, 303, 304, 306, 0, 0, 0, 305,
	307, 314, 0, 0, 308, 506, 310, 309, 311, 312,
	313, 507, 0, 508, 0, 315, 0, 509, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 510, 0, 329,
	330, 0, 0, 331, 332, 0, 0, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 352, 350, 0, 349,
	0, 0, 0, 353, 0, 511, 354, 512, 356, 357,
	0, 358, 359, 360, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 513, 0, 367, 0, 514, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	515, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 517, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 0, 405, 406, 407, 408,
	518, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 421, 423, 424, 425, 422, 428,
	429, 430, 0, 431, 411, 412, 432, 433, 0, 434,
	435, 519, 436, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 447, 443, 444, 445, 520, 0, 449, 450,
	448, 0, 451, 452, 453, 454, 455, 280, 456, 0,
	457, 521, 522, 523, 524, 0, 464, 0, 458, 459,
	525, 460, 526, 0, 461, 462, 463, 0, 465, 466,
	0, 0, 467, 468, 469, 471, 472, 470, 474, 0,
	475, 0, 473, 476, 477, 478, 527, 528, 529, 0,
	480, 479, 530, 580, 0, 212, 0, 481, 482, 531,
	483, 484, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 0, 233, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 491, 492, 493, 0, 570, 494, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 495, 496, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	0, 0, 0, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 501, 0, 502, 296, 0, 297,
	298, 299, 300, 503, 504, 505, 355, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 0, 308, 506, 310, 309, 311, 312, 313, 507,
	0, 508, 0, 315, 0, 509, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 510, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 581,
	0, 347, 348, 351, 352, 350, 0, 349, 0, 0,
	0, 353, 0, 511, 354, 512, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 0, 367, 0, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 515, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 0, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 577, 417, 418, 419, 420, 0,
	426, 427, 421, 423, 424, 425, 422, 428, 1342, 430,
	0, 431, 411, 412, 432, 433, 0, 434, 435, 519,
	436, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 456, 0, 457, 576,
	522, 523, 524, 0, 464, 0, 458, 459, 525, 460,
	526, 0, 461, 462, 463, 0, 465, 466, 0, 0,
	467, 468, 469, 471, 472, 470, 474, 0, 475, 0,
	473, 476, 477, 478, 527, 528, 529, 0, 480, 479,
	530, 1328, 0, 212, 0, 481, 482, 531, 483, 484,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	0, 233, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 491, 492, 493, 0, 241, 494, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 495, 496, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 0, 0,
	0, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 0, 292, 0, 0, 0, 293, 294,
	0, 295, 501, 0, 502, 296, 0, 297, 298, 299,
	300, 1327, 504, 505, 355, 0, 301, 302, 0, 303,
	304, 306, 0, 0, 0, 305, 307, 314, 0, 0,
	308, 506, 310, 309, 311, 312, 313, 507, 0, 508,
	0, 315, 0, 509, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 510, 0, 329, 330, 0, 0, 331,
	332, 0, 0, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 352, 350, 0, 349, 0, 0, 0, 353,
	0, 511, 354, 512, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	0, 367, 0, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 515, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 0, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 426, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 0, 431,
	411, 412, 432, 433, 0, 434, 435, 519, 436, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 456, 0, 457, 521, 522, 523,
	524, 0, 464, 0, 458, 459, 525, 460, 526, 0,
	461, 462, 463, 0, 465, 466, 0, 0, 467, 468,
	469, 471, 472, 470, 474, 0, 475, 0, 473, 476,
	477, 478, 527, 528, 529, 0, 480, 479, 530, 1275,
	0, 212, 0, 481, 482, 531, 483, 484, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	486, 0, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 488, 229, 489, 232, 230, 231, 490, 0, 233,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 491,
	492, 493, 0, 241, 494, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 495, 496, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 497, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 498, 499, 0, 0, 0, 0,
	0, 0, 0, 286, 287, 288, 500, 289, 290, 0,
	291, 0, 292, 0, 0, 0, 293, 294, 0, 295,
	501, 0, 502, 296, 0, 297, 298, 299, 300, 1274,
	504, 505, 355, 0, 301, 302, 0, 303, 304, 306,
	0, 0, 0, 305, 307, 314, 0, 0, 308, 506,
	310, 309, 311, 312, 313, 507, 0, 508, 0, 315,
	0, 509, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 510, 0, 329, 330, 0, 0, 331, 332, 0,
	0, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	352, 350, 0, 349, 0, 0, 0, 353, 0, 511,
	354, 512, 356, 357, 0, 358, 359, 360, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 0, 367,
	0, 514, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 515, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 517,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 0,
	405, 406, 407, 408, 518, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 421, 423,
	424, 425, 422, 428, 429, 430, 0, 431, 411, 412,
	432, 433, 0, 434, 435, 519, 436, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 447, 443, 444, 445,
	520, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 456, 0, 457, 521, 522, 523, 524, 0,
	464, 0, 458, 459, 525, 460, 526, 0, 461, 462,
	463, 0, 465, 466, 0, 0, 467, 468, 469, 471,
	472, 470, 474, 0, 475, 0, 473, 476, 477, 478,
	527, 528, 529, 0, 480, 479, 530, 1260, 0, 212,
	0, 481, 482, 531, 483, 484, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 486, 0,
	0, 0, 0, 224, 226, 225, 227, 228, 487, 488,
	229, 489, 232, 230, 231, 490, 0, 233, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 491, 492, 493,
	0, 241, 494, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 261, 262, 263,
	264, 495, 496, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 497, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 498, 499, 0, 0, 0, 0, 0, 0,
	0, 286, 287, 288, 500, 289, 290, 0, 291, 0,
	292, 0, 0, 0, 293, 294, 0, 295, 501, 0,
	502, 296, 0, 297, 298, 299, 300, 1259, 504, 505,
	355, 0, 301, 302, 0, 303, 304, 306, 0, 0,
	0, 305, 307, 314, 0, 0, 308, 506, 310, 309,
	311, 312, 313, 507, 0, 508, 0, 315, 0, 509,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 510,
	0, 329, 330, 0, 0, 331, 332, 0, 0, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 352, 350,
	0, 349, 0, 0, 0, 353, 0, 511, 354, 512,
	356, 357, 0, 358, 359, 360, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 0, 367, 0, 514,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 515, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 517, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 0, 405, 406,
	407, 408, 518, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 0, 426, 427, 421, 423, 424, 425,
	422, 428, 429, 430, 0, 431, 411, 412, 432, 433,
	0, 434, 435, 519, 436, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 447, 443, 444, 445, 520, 0,
	449, 450, 448, 0, 451, 452, 453, 454, 455, 280,
	456, 0, 457, 521, 522, 523, 524, 0, 464, 0,
	458, 459, 525, 460, 526, 0, 461, 462, 463, 0,
	465, 466, 0, 0, 467, 468, 469, 471, 472, 470,
	474, 0, 475, 0, 473, 476, 477, 478, 527, 528,
	529, 0, 480, 479, 530, 1255, 0, 212, 0, 481,
	482, 531, 483, 484, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 219, 220, 221, 222, 0,
	223, 0, 0, 0, 0, 0, 486, 0, 0, 0,
	0, 224, 226, 225, 227, 228, 487, 488, 229, 489,
	232, 230, 231, 490, 0, 233, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 491, 492, 493, 0, 241,
	494, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 261, 262, 263, 264, 495,
	496, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	497, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	498, 499, 0, 0, 0, 0, 0, 0, 0, 286,
	287, 288, 500, 289, 290, 0, 291, 0, 292, 0,
	0, 0, 293, 294, 0, 295, 501, 0, 502, 296,
	0, 297, 298, 299, 300, 503, 504, 505, 355, 0,
	301, 302, 0, 303, 304, 306, 0, 0, 0, 305,
	307, 314, 0, 0, 308, 506, 310, 309, 311, 312,
	313, 507, 0, 508, 0, 315, 0, 509, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 510, 0, 329,
	330, 0, 0, 331, 332, 0, 0, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 352, 350, 0, 349,
	0, 0, 0, 353, 0, 511, 354, 512, 356, 357,
	0, 358, 359, 360, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 513, 0, 367, 0, 514, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	515, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 517, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 0, 405, 406, 407, 408,
	518, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 421, 423, 424, 425, 422, 428,
	429, 430, 0, 431, 411, 412, 432, 433, 0, 434,
	435, 519, 436, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 447, 443, 444, 445, 520, 0, 449, 450,
	448, 0, 451, 452, 453, 454, 455, 280, 456, 0,
	457, 521, 522, 523, 524, 0, 464, 0, 458, 459,
	525, 460, 526, 0, 461, 462, 463, 0, 465, 466,
	0, 0, 467, 468, 469, 471, 472, 470, 474, 0,
	475, 0, 473, 476, 477, 478, 527, 528, 529, 0,
	480, 479, 530, 1182, 0, 212, 0, 481, 482, 531,
	483, 484, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 0, 233, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 491, 492, 493, 0, 241, 494, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 495, 496, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	0, 0, 0, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 501, 0, 502, 296, 0, 297,
	298, 299, 300, 503, 504, 505, 355, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 0, 308, 506, 310, 309, 311, 312, 313, 507,
	0, 508, 0, 315, 0, 509, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 510, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 352, 350, 0, 349, 0, 0,
	0, 353, 0, 511, 354, 512, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 0, 367, 0, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 515, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 0, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	0, 431, 411, 412, 432, 433, 0, 434, 435, 519,
	436, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 456, 0, 457, 521,
	522, 523, 524, 0, 464, 0, 458, 459, 525, 460,
	526, 0, 461, 462, 463, 0, 465, 466, 0, 0,
	467, 468, 469, 471, 472, 470, 474, 0, 475, 0,
	473, 476, 477, 478, 527, 528, 529, 0, 480, 479,
	530, 580, 0, 212, 0, 481, 482, 531, 483, 484,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 224, 1059, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	0, 233, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 491, 492, 1057, 0, 241, 494, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 495, 496, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 0, 0,
	0, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 0, 292, 0, 0, 0, 293, 294,
	0, 295, 501, 0, 502, 296, 0, 297, 298, 299,
	300, 503, 504, 505, 355, 0, 301, 302, 0, 303,
	304, 306, 0, 0, 0, 305, 307, 314, 0, 0,
	308, 506, 310, 309, 311, 312, 313, 507, 0, 508,
	0, 315, 0, 509, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 510, 0, 329, 330, 0, 0, 331,
	332, 0, 0, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 581, 0, 347,
	348, 351, 352, 350, 0, 349, 0, 0, 0, 353,
	0, 511, 354, 512, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	0, 367, 0, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 515, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 0, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 577, 417, 418, 419, 420, 0, 426, 427,
	421, 423, 424, 425, 422, 428, 1060, 430, 0, 431,
	411, 412, 432, 433, 0, 434, 435, 519, 436, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 456, 0, 457, 576, 522, 523,
	524, 0, 464, 0, 458, 1058, 525, 460, 526, 0,
	461, 462, 463, 0, 465, 466, 0, 0, 467, 468,
	469, 471, 472, 470, 474, 0, 475, 0, 473, 476,
	477, 478, 527, 528, 529, 212, 480, 479, 530, 0,
	0, 0, 0, 481, 482, 531, 483, 484, 485, 0,
	0, 0, 218, 219, 220, 221, 222, 1041, 223, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 0, 233, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 491, 492, 493, 0, 241, 494, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 495, 496, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	0, 0, 0, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 501, 0, 502, 296, 0, 297,
	298, 299, 300, 503, 504, 505, 355, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 0, 308, 506, 310, 309, 311, 312, 313, 507,
	0, 508, 0, 315, 0, 509, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 510, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 352, 350, 0, 349, 0, 0,
	0, 353, 0, 511, 354, 512, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 0, 367, 0, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 515, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 0, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	0, 431, 411, 412, 432, 433, 0, 434, 435, 519,
	436, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 456, 0, 457, 521,
	522, 523, 524, 0, 464, 0, 458, 459, 525, 460,
	526, 0, 461, 462, 463, 0, 465, 466, 0, 0,
	467, 468, 469, 471, 472, 470, 474, 0, 475, 0,
	473, 476, 477, 478, 527, 528, 529, 0, 480, 479,
	530, 580, 0, 212, 0, 481, 482, 531, 483, 484,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	0, 233, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 491, 492, 493, 0, 570, 494, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 568, 0, 253, 254, 255, 0, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 495, 496, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 0, 0,
	0, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 0, 292, 0, 0, 0, 293, 294,
	0, 295, 501, 0, 502, 296, 0, 297, 298, 299,
	300, 503, 504, 505, 355, 0, 301, 302, 0, 303,
	304, 306, 0, 0, 0, 305, 307, 314, 0, 0,
	308, 506, 310, 309, 311, 312, 313, 507, 0, 508,
	0, 315, 0, 509, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 510, 0, 329, 330, 0, 0, 331,
	569, 0, 0, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 581, 0, 347,
	348, 351, 352, 350, 0, 349, 0, 0, 0, 353,
	0, 511, 354, 512, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	0, 367, 0, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 515, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 0, 405, 406, 407, 408, 571, 409, 0, 410,
	414, 415, 577, 417, 418, 419, 420, 0, 426, 427,
	421, 423, 424, 425, 422, 428, 572, 430, 0, 431,
	411, 412, 432, 433, 0, 434, 435, 519, 436, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 456, 0, 457, 576, 522, 523,
	524, 0, 464, 0, 458, 574, 525, 460, 526, 0,
	461, 462, 463, 0, 465, 466, 0, 0, 467, 468,
	469, 471, 472, 470, 474, 0, 475, 0, 473, 476,
	477, 478, 527, 528, 529, 0, 480, 479, 530, 564,
	0, 212, 0, 481, 482, 531, 483, 484, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	486, 0, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 488, 229, 489, 232, 230, 231, 490, 0, 233,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 491,
	492, 493, 0, 241, 494, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 495, 496, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 497, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 498, 499, 0, 0, 0, 0,
	0, 0, 0, 286, 287, 288, 500, 289, 290, 0,
	291, 0, 292, 0, 0, 0, 293, 294, 0, 295,
	501, 0, 502, 296, 0, 297, 298, 299, 300, 503,
	504, 505, 355, 0, 301, 302, 0, 303, 304, 306,
	0, 0, 0, 305, 307, 314, 0, 0, 308, 506,
	310, 309, 311, 312, 313, 507, 0, 508, 0, 315,
	0, 509, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 510, 0, 329, 330, 0, 0, 331, 332, 0,
	0, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	352, 350, 0, 349, 0, 0, 0, 353, 0, 511,
	354, 512, 356, 357, 0, 358, 359, 360, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 0, 367,
	0, 514, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 515, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 517,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 0,
	405, 406, 407, 408, 518, 409, 0, 410, 565, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 421, 423,
	424, 425, 422, 428, 429, 430, 0, 431, 411, 412,
	432, 433, 0, 434, 435, 519, 436, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 447, 443, 444, 445,
	520, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 456, 0, 457, 521, 522, 523, 524, 0,
	464, 0, 458, 459, 525, 460, 526, 0, 461, 462,
	463, 0, 465, 466, 0, 0, 467, 468, 469, 471,
	472, 470, 474, 0, 475, 0, 473, 476, 477, 478,
	527, 528, 529, 0, 480, 479, 530, 562, 0, 212,
	0, 481, 482, 531, 483, 484, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 486, 0,
	0, 0, 0, 224, 226, 225, 227, 228, 487, 488,
	229, 489, 232, 230, 231, 490, 0, 233, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 491, 492, 493,
	0, 241, 494, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 261, 262, 263,
	264, 495, 496, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 497, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 498, 499, 0, 0, 0, 0, 0, 0,
	0, 286, 287, 288, 500, 289, 290, 0, 291, 0,
	292, 0, 0, 0, 293, 294, 0, 295, 501, 0,
	502, 296, 0, 297, 298, 299, 300, 503, 504, 505,
	355, 0, 301, 302, 0, 303, 304, 306, 0, 0,
	0, 305, 307, 314, 0, 0, 308, 506, 310, 309,
	311, 312, 313, 507, 0, 508, 0, 315, 0, 509,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 510,
	0, 329, 330, 0, 0, 331, 332, 0, 0, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 352, 350,
	0, 349, 0, 0, 0, 353, 0, 511, 354, 512,
	356, 357, 0, 358, 359, 360, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 0, 367, 0, 514,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 515, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 517, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 0, 405, 406,
	407, 408, 518, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 0, 426, 427, 421, 423, 424, 425,
	422, 428, 429, 430, 0, 431, 411, 412, 432, 433,
	0, 434, 435, 519, 436, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 447, 443, 444, 445, 520, 0,
	449, 450, 448, 0, 451, 452, 453, 454, 455, 280,
	456, 0, 457, 521, 522, 523, 524, 0, 464, 0,
	458, 459, 525, 460, 526, 0, 461, 462, 463, 0,
	465, 466, 0, 0, 467, 468, 469, 471, 472, 470,
	474, 0, 475, 0, 473, 476, 477, 478, 527, 528,
	529, 0, 480, 479, 530, 556, 0, 212, 0, 481,
	482, 531, 483, 484, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 219, 220, 221, 222, 0,
	223, 0, 0, 0, 0, 0, 486, 0, 0, 0,
	0, 224, 226, 225, 227, 228, 487, 488, 229, 489,
	232, 230, 231, 490, 0, 233, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 491, 492, 493, 0, 241,
	494, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 261, 262, 263, 264, 495,
	496, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	497, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	498, 499, 0, 0, 0, 0, 0, 0, 0, 286,
	287, 288, 500, 289, 290, 0, 291, 0, 292, 0,
	0, 0, 293, 294, 0, 295, 501, 0, 502, 296,
	0, 297, 298, 299, 300, 503, 504, 505, 355, 0,
	301, 302, 0, 303, 304, 306, 0, 0, 0, 305,
	307, 314, 0, 0, 308, 506, 310, 309, 311, 312,
	313, 507, 0, 508, 0, 315, 0, 509, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 510, 0, 329,
	330, 0, 0, 331, 332, 0, 0, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 352, 350, 0, 349,
	0, 0, 0, 353, 0, 511, 354, 512, 356, 357,
	0, 358, 359, 360, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 513, 0, 367, 0, 514, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	515, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 517, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 0, 405, 406, 407, 408,
	518, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 421, 423, 424, 425, 422, 428,
	429, 430, 0, 431, 411, 412, 432, 433, 0, 434,
	435, 519, 436, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 447, 443, 444, 445, 520, 0, 449, 450,
	448, 0, 451, 452, 453, 454, 455, 280, 456, 0,
	457, 521, 522, 523, 524, 0, 464, 0, 458, 459,
	525, 460, 526, 0, 461, 462, 463, 0, 465, 466,
	0, 0, 467, 468, 469, 471, 472, 470, 474, 0,
	475, 0, 473, 476, 477, 478, 527, 528, 529, 0,
	480, 479, 530, 534, 0, 212, 0, 481, 482, 531,
	483, 484, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 0, 233, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 491, 492, 493, 0, 241, 494, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 495, 496, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	0, 0, 0, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 501, 0, 502, 296, 0, 297,
	298, 299, 300, 503, 504, 505, 355, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 0, 308, 506, 310, 309, 311, 312, 313, 507,
	0, 508, 0, 315, 0, 509, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 510, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 352, 350, 0, 349, 0, 0,
	0, 353, 0, 511, 354, 512, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 0, 367, 0, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 515, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 0, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	0, 431, 411, 412, 432, 433, 0, 434, 435, 519,
	436, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 456, 0, 457, 521,
	522, 523, 524, 0, 464, 0, 458, 459, 525, 460,
	526, 0, 461, 462, 463, 0, 465, 466, 0, 0,
	467, 468, 469, 471, 472, 470, 474, 0, 475, 0,
	473, 476, 477, 478, 527, 528, 529, 212, 480, 479,
	530, 0, 0, 0, 0, 481, 482, 531, 483, 484,
	485, 0, 0, 0, 218, 219, 220, 221, 222, 0,
	223, 0, 0, 0, 0, 0, 486, 0, 0, 0,
	0, 224, 226, 225, 227, 228, 487, 488, 229, 489,
	232, 230, 231, 490, 0, 233, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 491, 492, 493, 0, 241,
	494, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 261, 262, 263, 264, 495,
	496, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	497, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	498, 499, 0, 0, 0, 0, 0, 0, 0, 286,
	287, 288, 500, 289, 290, 0, 291, 0, 292, 0,
	0, 0, 293, 294, 0, 295, 501, 0, 502, 296,
	0, 297, 298, 299, 300, 503, 504, 505, 355, 0,
	301, 302, 0, 303, 304, 306, 0, 0, 0, 305,
	307, 314, 0, 0, 308, 506, 310, 309, 311, 312,
	313, 507, 0, 508, 0, 315, 0, 509, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 510, 0, 329,
	330, 0, 0, 331, 332, 0, 0, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 352, 350, 0, 349,
	0, 0, 0, 353, 0, 511, 354, 512, 356, 357,
	0, 358, 359, 360, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 513, 0, 367, 0, 514, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	515, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 517, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 0, 405, 406, 407, 408,
	518, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 421, 423, 424, 425, 422, 428,
	429, 430, 0, 431, 411, 412, 432, 433, 0, 434,
	435, 519, 436, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 447, 443, 444, 445, 520, 0, 449, 450,
	448, 0, 451, 452, 453, 454, 455, 280, 456, 0,
	457, 521, 522, 523, 524, 0, 464, 0, 458, 459,
	525, 460, 526, 0, 461, 462, 463, 0, 465, 466,
	0, 0, 467, 468, 469, 471, 472, 470, 474, 0,
	475, 0, 473, 476, 477, 478, 527, 528, 529, 212,
	480, 479, 530, 0, 0, 0, 0, 481, 482, 531,
	483, 484, 485, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 486, 0,
	0, 0, 0, 224, 226, 225, 227, 228, 487, 488,
	229, 489, 232, 230, 231, 490, 0, 233, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 491, 492, 493,
	0, 241, 494, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 261, 262, 263,
	264, 495, 496, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 497, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 498, 499, 0, 0, 0, 0, 0, 0,
	0, 286, 287, 288, 500, 289, 290, 0, 291, 0,
	292, 0, 0, 0, 293, 294, 0, 295, 501, 0,
	502, 296, 0, 297, 298, 299, 300, 2789, 504, 505,
	355, 0, 301, 302, 0, 303, 304, 306, 0, 0,
	0, 305, 307, 314, 0, 0, 308, 506, 310, 309,
	311, 312, 313, 507, 0, 508, 0, 315, 0, 509,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 510,
	0, 329, 330, 0, 0, 331, 332, 0, 0, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 352, 350,
	0, 349, 0, 0, 0, 353, 0, 511, 354, 512,
	356, 357, 0, 358, 359, 360, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 0, 367, 0, 514,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 515, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 517, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 0, 405, 406,
	407, 408, 518, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 0, 426, 427, 421, 423, 424, 425,
	422, 428, 429, 430, 0, 431, 411, 412, 432, 433,
	0, 434, 435, 519, 436, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 447, 443, 444, 445, 520, 0,
	449, 450, 448, 0, 451, 452, 453, 454, 455, 280,
	456, 0, 457, 521, 522, 523, 524, 0, 464, 0,
	458, 459, 525, 460, 526, 0, 461, 462, 463, 0,
	465, 466, 0, 0, 467, 468, 469, 471, 472, 470,
	474, 0, 475, 0, 473, 476, 477, 478, 527, 528,
	529, 212, 480, 479, 530, 0, 0, 0, 0, 481,
	482, 531, 483, 484, 485, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	486, 0, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 488, 229, 489, 232, 230, 231, 490, 0, 233,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 491,
	492, 493, 0, 241, 494, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 495, 496, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 497, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 498, 499, 0, 0, 0, 0,
	0, 0, 0, 286, 287, 288, 500, 289, 290, 0,
	291, 0, 292, 0, 0, 0, 293, 294, 0, 295,
	501, 0, 502, 296, 0, 297, 298, 299, 300, 2787,
	504, 505, 355, 0, 301, 302, 0, 303, 304, 306,
	0, 0, 0, 305, 307, 314, 0, 0, 308, 506,
	310, 309, 311, 312, 313, 507, 0, 508, 0, 315,
	0, 509, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 510, 0, 329, 330, 0, 0, 331, 332, 0,
	0, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	352, 350, 0, 349, 0, 0, 0, 353, 0, 511,
	354, 512, 356, 357, 0, 358, 359, 360, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 0, 367,
	0, 514, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 515, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 517,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 0,
	405, 406, 407, 408, 518, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 421, 423,
	424, 425, 422, 428, 429, 430, 0, 431, 411, 412,
	432, 433, 0, 434, 435, 519, 436, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 447, 443, 444, 445,
	520, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 456, 0, 457, 521, 522, 523, 524, 0,
	464, 0, 458, 459, 525, 460, 526, 0, 461, 462,
	463, 0, 465, 466, 0, 0, 467, 468, 469, 471,
	472, 470, 474, 0, 475, 0, 473, 476, 477, 478,
	527, 528, 529, 212, 480, 479, 530, 0, 0, 0,
	0, 481, 482, 531, 483, 484, 485, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	0, 233, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 491, 492, 493, 0, 241, 494, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 495, 496, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 0, 0,
	0, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 0, 292, 0, 0, 0, 293, 294,
	0, 295, 501, 0, 502, 296, 0, 297, 298, 299,
	300, 2774, 504, 505, 355, 0, 301, 302, 0, 303,
	304, 306, 0, 0, 0, 305, 307, 314, 0, 0,
	308, 506, 310, 309, 311, 312, 313, 507, 0, 508,
	0, 315, 0, 509, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 510, 0, 329, 330, 0, 0, 331,
	332, 0, 0, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 352, 350, 0, 349, 0, 0, 0, 353,
	0, 511, 354, 512, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	0, 367, 0, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 515, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 0, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 426, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 0, 431,
	411, 412, 432, 433, 0, 434, 435, 519, 436, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 456, 0, 457, 521, 522, 523,
	524, 0, 464, 0, 458, 459, 525, 460, 526, 0,
	461, 462, 463, 0, 465, 466, 0, 0, 467, 468,
	469, 471, 472, 470, 474, 0, 475, 0, 473, 476,
	477, 478, 527, 528, 529, 212, 480, 479, 530, 0,
	0, 0, 0, 481, 482, 531, 483, 484, 485, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 0, 233, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 491, 492, 493, 0, 241, 494, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 495, 496, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	0, 0, 0, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 501, 0, 502, 296, 0, 297,
	298, 299, 300, 2433, 504, 505, 355, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 0, 308, 506, 310, 309, 311, 312, 313, 507,
	0, 508, 0, 315, 0, 509, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 510, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 352, 350, 0, 349, 0, 0,
	0, 353, 0, 511, 354, 512, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 0, 367, 0, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 515, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 0, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	0, 431, 411, 412, 432, 433, 0, 434, 435, 519,
	436, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 456, 0, 457, 521,
	522, 523, 524, 0, 464, 0, 458, 459, 525, 460,
	526, 0, 461, 462, 463, 0, 465, 466, 0, 0,
	467, 468, 469, 471, 472, 470, 474, 0, 475, 0,
	473, 476, 477, 478, 527, 528, 529, 212, 480, 479,
	530, 0, 0, 0, 0, 481, 482, 531, 483, 484,
	485, 0, 0, 0, 218, 219, 220, 221, 222, 0,
	223, 0, 0, 0, 0, 0, 486, 0, 0, 0,
	0, 224, 226, 225, 227, 228, 487, 488, 229, 489,
	232, 230, 231, 490, 0, 233, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 491, 492, 493, 0, 241,
	494, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 261, 262, 263, 264, 495,
	496, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	497, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	498, 499, 0, 0, 0, 0, 0, 0, 0, 286,
	287, 288, 500, 289, 290, 0, 291, 0, 292, 0,
	0, 0, 293, 294, 0, 295, 501, 0, 502, 296,
	0, 297, 298, 299, 300, 503, 504, 505, 355, 0,
	301, 302, 0, 303, 304, 306, 0, 0, 0, 305,
	307, 314, 0, 0, 308, 506, 310, 309, 311, 312,
	313, 507, 0, 508, 0, 315, 0, 509, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 510, 0, 329,
	330, 0, 0, 331, 332, 0, 0, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 352, 350, 0, 349,
	0, 0, 0, 353, 0, 511, 354, 512, 356, 357,
	0, 358, 359, 360, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 513, 0, 367, 0, 514, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	515, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 517, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 0, 405, 406, 407, 408,
	518, 409, 0, 410, 565, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 421, 423, 424, 425, 422, 428,
	429, 430, 0, 431, 411, 412, 432, 433, 0, 434,
	435, 519, 436, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 447, 443, 444, 445, 520, 0, 449, 450,
	448, 0, 451, 452, 453, 454, 455, 280, 456, 0,
	457, 521, 522, 523, 524, 0, 464, 0, 458, 459,
	525, 460, 526, 0, 461, 462, 463, 0, 465, 466,
	0, 0, 467, 468, 469, 471, 472, 470, 474, 0,
	475, 0, 473, 476, 477, 478, 527, 528, 529, 212,
	480, 479, 530, 0, 0, 0, 0, 481, 482, 531,
	483, 484, 485, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 486, 0,
	1886, 0, 0, 224, 226, 225, 227, 228, 487, 488,
	229, 489, 232, 230, 231, 490, 0, 233, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 491, 492, 493,
	0, 241, 494, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 261, 262, 263,
	264, 495, 496, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 497, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 498, 499, 0, 0, 0, 0, 0, 0,
	0, 286, 287, 288, 500, 289, 290, 0, 291, 0,
	292, 0, 0, 0, 293, 294, 0, 295, 501, 0,
	502, 296, 0, 297, 298, 299, 300, 503, 504, 505,
	355, 0, 301, 302, 0, 303, 304, 306, 0, 0,
	0, 305, 307, 314, 0, 0, 308, 506, 310, 309,
	311, 312, 313, 507, 0, 508, 0, 315, 0, 509,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 510,
	0, 329, 330, 0, 0, 331, 332, 0, 0, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 352, 350,
	0, 349, 0, 0, 0, 353, 0, 511, 354, 512,
	356, 357, 0, 358, 359, 360, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 0, 367, 0, 514,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 515, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 517, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 0, 405, 406,
	407, 408, 518, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 0, 426, 427, 421, 423, 424, 425,
	422, 428, 429, 430, 0, 0, 411, 412, 432, 433,
	0, 434, 435, 519, 436, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 447, 443, 444, 445, 520, 0,
	449, 450, 448, 0, 451, 452, 453, 454, 455, 280,
	456, 0, 457, 521, 522, 523, 524, 0, 464, 0,
	458, 459, 525, 460, 526, 0, 461, 462, 463, 0,
	465, 466, 0, 0, 467, 468, 469, 471, 472, 470,
	474, 0, 475, 0, 473, 476, 477, 478, 527, 528,
	529, 212, 480, 479, 530, 0, 0, 0, 0, 481,
	482, 531, 483, 484, 485, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	486, 0, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 488, 229, 489, 232, 230, 231, 490, 0, 233,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 491,
	492, 493, 0, 241, 494, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 495, 496, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 497, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 498, 499, 0, 0, 0, 0,
	0, 0, 0, 286, 287, 288, 500, 289, 290, 0,
	291, 0, 292, 0, 0, 0, 293, 294, 0, 295,
	501, 0, 502, 296, 0, 297, 298, 299, 300, 1297,
	504, 505, 355, 0, 301, 302, 0, 303, 304, 306,
	0, 0, 0, 305, 307, 314, 0, 0, 308, 506,
	310, 309, 311, 312, 313, 507, 0, 508, 0, 315,
	0, 509, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 510, 0, 329, 330, 0, 0, 331, 332, 0,
	0, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	352, 350, 0, 349, 0, 0, 0, 353, 0, 511,
	354, 512, 356, 357, 0, 358, 359, 360, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 0, 367,
	0, 514, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 515, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 517,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 0,
	405, 406, 407, 408, 518, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 421, 423,
	424, 425, 422, 428, 429, 430, 0, 431, 411, 412,
	432, 433, 0, 434, 435, 519, 436, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 447, 443, 444, 445,
	520, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 456, 0, 457, 521, 522, 523, 524, 0,
	464, 0, 458, 459, 525, 460, 526, 0, 461, 462,
	463, 0, 465, 466, 0, 0, 467, 468, 469, 471,
	472, 470, 474, 0, 475, 0, 473, 476, 477, 478,
	527, 528, 529, 212, 480, 479, 530, 0, 0, 0,
	0, 481, 482, 531, 483, 484, 485, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	0, 233, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 491, 492, 493, 0, 241, 494, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 495, 496, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 0, 0,
	0, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 0, 292, 0, 0, 0, 293, 294,
	0, 295, 501, 0, 502, 296, 0, 297, 298, 299,
	300, 1237, 504, 505, 355, 0, 301, 302, 0, 303,
	304, 306, 0, 0, 0, 305, 307, 314, 0, 0,
	308, 506, 310, 309, 311, 312, 313, 507, 0, 508,
	0, 315, 0, 509, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 510, 0, 329, 330, 0, 0, 331,
	332, 0, 0, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 352, 350, 0, 349, 0, 0, 0, 353,
	0, 511, 354, 512, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	0, 367, 0, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 515, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 0, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 426, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 0, 431,
	411, 412, 432, 433, 0, 434, 435, 519, 436, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 456, 0, 457, 521, 522, 523,
	524, 0, 464, 0, 458, 459, 525, 460, 526, 0,
	461, 462, 463, 0, 465, 466, 0, 0, 467, 468,
	469, 471, 472, 470, 474, 0, 475, 0, 473, 476,
	477, 478, 527, 528, 529, 212, 480, 479, 530, 0,
	0, 0, 0, 481, 482, 531, 483, 484, 485, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 0, 233, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 491, 492, 493, 0, 241, 494, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 495, 496, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	0, 0, 0, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 501, 0, 502, 296, 0, 297,
	298, 299, 300, 503, 504, 505, 355, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 0, 308, 506, 310, 309, 311, 312, 313, 507,
	0, 508, 0, 315, 0, 509, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 510, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 352, 350, 0, 349, 0, 0,
	0, 353, 0, 511, 354, 512, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 0, 367, 0, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 515, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 995, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 0, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	0, 431, 411, 412, 432, 433, 0, 434, 435, 519,
	436, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 456, 0, 457, 521,
	522, 523, 524, 0, 464, 0, 458, 459, 525, 460,
	526, 0, 461, 462, 463, 0, 465, 466, 0, 0,
	467, 468, 469, 471, 472, 470, 474, 0, 475, 0,
	473, 476, 477, 478, 527, 528, 529, 212, 480, 479,
	530, 0, 0, 0, 0, 481, 482, 531, 483, 484,
	485, 0, 0, 0, 218, 219, 220, 221, 222, 0,
	223, 0, 0, 0, 0, 0, 486, 0, 0, 0,
	0, 224, 226, 225, 227, 228, 487, 488, 229, 489,
	232, 230, 231, 490, 0, 233, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 491, 492, 493, 0, 241,
	494, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 261, 262, 263, 264, 495,
	496, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	497, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	498, 499, 0, 0, 0, 0, 0, 0, 0, 286,
	287, 288, 500, 289, 290, 0, 291, 0, 292, 0,
	0, 0, 293, 294, 0, 295, 501, 0, 502, 0,
	0, 297, 298, 299, 300, 503, 504, 505, 355, 0,
	301, 302, 0, 303, 304, 306, 0, 0, 0, 305,
	307, 314, 0, 0, 308, 506, 310, 309, 311, 312,
	313, 507, 0, 508, 0, 315, 0, 509, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 510, 0, 329,
	330, 0, 0, 331, 332, 0, 0, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 352, 350, 0, 349,
	0, 0, 0, 353, 0, 511, 354, 512, 356, 357,
	0, 358, 359, 360, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 513, 0, 367, 0, 514, 368, 361,
	369, 370, 0, 372, 373, 374, 375, 0, 376, 377,
	515, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 0, 387, 388, 517, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 0, 405, 406, 407, 408,
	518, 0, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 421, 423, 424, 425, 422, 428,
	429, 430, 0, 431, 411, 412, 432, 433, 0, 434,
	435, 519, 436, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 447, 443, 444, 445, 520, 0, 449, 450,
	448, 0, 451, 452, 453, 454, 455, 280, 456, 0,
	457, 521, 522, 523, 524, 0, 464, 0, 458, 459,
	525, 460, 526, 0, 461, 462, 463, 0, 465, 466,
	0, 0, 467, 468, 469, 471, 472, 470, 474, 0,
	475, 0, 473, 476, 477, 478, 527, 528, 529, 0,
	480, 479, 530, 0, 0, 0, 0, 481, 482, 531,
	483, 484, 485, 1472, 1473, 0, 1505, 1506, 1507, 1515,
	1516, 1517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 1503, 0, 0, 0, 0, 0, 0,
	1475, 0, 0, 0, 0, 1521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1472, 1473, 0, 1505,
	1506, 1507, 1515, 1516, 1517, 0, 0, 0, 0, 0,
	1474, 0, 0, 0, 0, 1508, 1503, 0, 0, 1494,
	0, 0, 0, 1475, 0, 0, 1491, 0, 1521, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1474, 0, 0, 0, 0, 0, 0,
	0, 0, 1494, 0, 0, 0, 0, 0, 0, 1491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1497, 1498, 1499, 1500, 0, 0,
	0, 0, 0, 0, 1480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1512, 0,
	0, 1522, 0, 0, 0, 1502, 1504, 1497, 1498, 1499,
	1500, 0, 0, 0, 0, 0, 0, 1480, 0, 0,
	0, 0, 0, 0, 0, 1518, 0, 1519, 0, 0,
	0, 0, 0, 0, 1489, 1490, 0, 0, 0, 0,
	0, 1512, 0, 0, 1522, 0, 0, 0, 1502, 1504,
	1510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1495, 0, 0, 0, 0, 0, 0, 0, 1518, 0,
	1519, 0, 0, 0, 0, 0, 0, 1489, 1490, 0,
	0, 1520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 0, 0, 0, 0, 1509, 0,
	0, 0, 0, 1495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1509, 0, 1501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1472, 1473, 0, 1505, 1506, 1507, 1515, 1516, 1517,
	0, 0, 0, 0, 0, 0, 1501, 1513, 0, 0,
	1508, 1503, 0, 0, 0, 0, 0, 0, 1475, 0,
	0, 0, 0, 1521, 1496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1474, 0,
	1513, 0, 0, 0, 0, 0, 0, 1494, 0, 0,
	0, 0, 0, 0, 1491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1511, 0, 0, 1486, 1487, 1493, 1514, 1492,
	1488, 0, 1485, 1483, 1484, 1476, 1477, 1478, 1479, 1481,
	1482, 0, 0, 0, 0, 0, 0, 0, 0, 3235,
	0, 0, 1497, 1498, 1499, 1500, 0, 0, 0, 0,
	0, 0, 1480, 0, 0, 1511, 0, 0, 1486, 1487,
	1493, 1514, 1492, 1488, 0, 1485, 1483, 1484, 1476, 1477,
	1478, 1479, 1481, 1482, 0, 0, 1512, 0, 0, 1522,
	0, 0, 2960, 1502, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 0, 1519, 0, 0, 0, 0,
	0, 0, 1489, 1490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1495, 0,
	0, 0, 1472, 1473, 0, 1505, 1506, 1507, 1515, 1516,
	1517, 0, 0, 0, 0, 0, 0, 0, 0, 1520,
	0, 1508, 1503, 0, 0, 0, 0, 0, 0, 1475,
	0, 0, 0, 0, 1521, 0, 1509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1474,
	0, 0, 0, 0, 0, 0, 0, 0, 1494, 0,
	0, 0, 0, 0, 0, 1491, 0, 0, 0, 0,
	0, 1501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1472, 1473, 0, 1505, 1506, 1507, 1515, 1516,
	1517, 0, 0, 0, 0, 1513, 0, 0, 0, 0,
	0, 1508, 1503, 1497, 1498, 1499, 1500, 0, 0, 1475,
	0, 0, 0, 1480, 1521, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1512, 0, 1474,
	1522, 0, 0, 0, 1502, 1504, 0, 0, 1494, 0,
	0, 0, 0, 0, 0, 1491, 0, 0, 0, 0,
	0, 0, 0, 0, 1518, 0, 1519, 0, 0, 0,
	0, 0, 0, 1489, 1490, 0, 0, 0, 0, 0,
	1511, 0, 0, 1486, 1487, 1493, 1514, 1492, 1488, 1510,
	1485, 1483, 1484, 1476, 1477, 1478, 1479, 1481, 1482, 1495,
	0, 0, 0, 0, 0, 0, 0, 2641, 0, 0,
	0, 0, 0, 1497, 1498, 1499, 1500, 0, 0, 0,
	1520, 0, 0, 1480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1512, 0, 0,
	1522, 0, 0, 0, 1502, 1504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1518, 0, 1519, 0, 0, 0,
	0, 0, 1501, 1489, 1490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	1496, 0, 0, 0, 0, 0, 0, 0, 0, 1495,
	0, 0, 0, 1472, 1473, 0, 1505, 1506, 1507, 1515,
	1516, 1517, 0, 0, 0, 0, 1513, 0, 0, 0,
	1520, 0, 1508, 1503, 0, 0, 0, 0, 0, 0,
	1475, 0, 0, 0, 0, 1521, 0, 1509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1474, 0, 0, 0, 0, 0, 0, 0, 0, 1494,
	0, 0, 0, 0, 0, 0, 1491, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1496, 1511, 0, 0, 1486, 1487, 1493, 1514, 1492, 1488,
	0, 1485, 1483, 1484, 1476, 1477, 1478, 1479, 1481, 1482,
	0, 0, 0, 0, 0, 0, 1513, 0, 2640, 0,
	0, 0, 0, 0, 1497, 1498, 1499, 1500, 0, 0,
	0, 0, 0, 0, 1480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1512, 0,
	0, 1522, 0, 0, 0, 1502, 1504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 0, 1519, 0, 0,
	0, 0, 0, 0, 1489, 1490, 0, 0, 0, 0,
	0, 1511, 0, 0, 1486, 1487, 1493, 1514, 1492, 1488,
	1510, 1485, 1483, 1484, 1476, 1477, 1478, 1479, 1481, 1482,
	1495, 0, 0, 0, 0, 0, 0, 0, 2637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1509, 0,
	0, 1472, 1473, 0, 1505, 1506, 1507, 1515, 1516, 1517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 1503, 0, 0, 0, 0, 0, 0, 1475, 0,
	0, 0, 0, 1521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1474, 0,
	0, 1496, 0, 0, 0, 0, 0, 1494, 0, 0,
	0, 0, 0, 0, 1491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1513, 1472, 1473,
	0, 1505, 1506, 1507, 1515, 1516, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 1503, 0,
	0, 0, 0, 0, 0, 1475, 0, 0, 0, 0,
	1521, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1497, 1498, 1499, 1500, 0, 0, 0, 0,
	0, 0, 1480, 0, 0, 1474, 0, 0, 0, 0,
	0, 0, 0, 0, 1494, 0, 0, 0, 0, 0,
	0, 1491, 0, 0, 0, 0, 1512, 0, 0, 1522,
	0, 0, 1511, 1502, 1504, 1486, 1487, 1493, 1514, 1492,
	1488, 0, 1485, 1483, 1484, 1476, 1477, 1478, 1479, 1481,
	1482, 0, 0, 1518, 0, 1519, 0, 0, 0, 2636,
	0, 0, 1489, 1490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 1497,
	1498, 1499, 1500, 0, 0, 0, 0, 0, 1495, 1480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1520,
	0, 0, 0, 1512, 0, 0, 1522, 0, 0, 0,
	1502, 1504, 0, 0, 0, 0, 1509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 1519, 0, 0, 0, 0, 0, 0, 1489,
	1490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 0, 0, 0, 0,
	0, 1501, 0, 0, 0, 1495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1496,
	0, 0, 0, 0, 0, 0, 1520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1509, 0, 1513, 1472, 1473, 0, 1505,
	1506, 1507, 1515, 1516, 1517, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 1503, 0, 0, 0,
	0, 0, 0, 1475, 0, 0, 0, 0, 1521, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1474, 0, 0, 1496, 0, 0, 0,
	0, 0, 1494, 0, 0, 0, 0, 0, 0, 1491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1511, 0, 1513, 1486, 1487, 1493, 1514, 1492, 1488, 0,
	1485, 1483, 1484, 1476, 1477, 1478, 1479, 1481, 1482, 0,
	0, 0, 0, 0, 0, 0, 0, 2635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1497, 1498, 1499,
	1500, 0, 0, 0, 0, 0, 0, 1480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1512, 0, 0, 1522, 0, 0, 1511, 1502, 1504,
	1486, 1487, 1493, 1514, 1492, 1488, 0, 1485, 1483, 1484,
	1476, 1477, 1478, 1479, 1481, 1482, 0, 0, 1518, 0,
	1519, 0, 0, 0, 2116, 0, 0, 1489, 1490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1495, 0, 0, 0, 1472, 1473, 0,
	1505, 1506, 1507, 1515, 1516, 1517, 0, 0, 0, 0,
	0, 0, 0, 0, 1520, 0, 1508, 1503, 0, 0,
	0, 0, 0, 0, 1475, 0, 0, 0, 0, 1521,
	0, 1509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1474, 0, 0, 0, 0, 0,
	0, 0, 0, 1494, 0, 0, 0, 0, 0, 0,
	1491, 0, 0, 0, 0, 0, 1501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1472, 1473, 0,
	1505, 1506, 1507, 1515, 1516, 1517, 0, 0, 0, 0,
	1513, 0, 0, 0, 0, 0, 1508, 1503, 1497, 1498,
	1499, 1500, 0, 0, 1475, 0, 0, 0, 1480, 1521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1512, 0, 1474, 1522, 0, 0, 0, 1502,
	1504, 0, 0, 1494, 0, 0, 0, 0, 0, 0,
	1491, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	0, 1519, 0, 0, 0, 0, 0, 0, 1489, 1490,
	0, 0, 0, 0, 0, 1511, 0, 0, 1486, 1487,
	1493, 1514, 1492, 1488, 1510, 1485, 1483, 1484, 1476, 1477,
	1478, 1479, 1481, 1482, 1495, 0, 0, 0, 3591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1497, 1498,
	1499, 1500, 0, 0, 0, 1520, 0, 0, 1480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1512, 0, 0, 1522, 0, 0, 0, 1502,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	0, 1519, 0, 0, 0, 0, 0, 1501, 1489, 1490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1510, 1496, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 0, 0, 0, 1472, 1473,
	0, 1505, 1506, 1507, 1515, 1516, 1517, 0, 0, 0,
	0, 1513, 0, 0, 0, 1520, 0, 1508, 1503, 0,
	0, 0, 0, 0, 0, 1475, 0, 0, 0, 0,
	1521, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1474, 0, 0, 0, 0,
	0, 0, 0, 0, 1494, 0, 0, 0, 0, 0,
	0, 1491, 0, 0, 0, 0, 0, 1501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1496, 1511, 0, 0, 1486,
	1487, 1493, 1514, 1492, 1488, 0, 1485, 1483, 1484, 1476,
	1477, 1478, 1479, 1481, 1482, 0, 0, 0, 0, 3587,
	0, 1513, 0, 0, 0, 0, 0, 0, 0, 1497,
	1498, 1499, 1500, 0, 0, 0, 0, 0, 0, 1480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1512, 0, 0, 1522, 0, 0, 0,
	1502, 1504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 1519, 0, 0, 0, 0, 0, 0, 1489,
	1490, 0, 0, 0, 0, 0, 1511, 0, 0, 1486,
	1487, 1493, 1514, 1492, 1488, 1510, 1485, 1483, 1484, 1476,
	1477, 1478, 1479, 1481, 1482, 1495, 0, 0, 0, 3506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1472, 1473, 0, 1505, 1506, 1507, 1515, 1516, 1517,
	0, 0, 0, 0, 0, 0, 0, 0, 1501, 0,
	1508, 1503, 0, 0, 0, 0, 0, 0, 1475, 0,
	0, 0, 0, 1521, 0, 0, 1496, 0, 0, 0,
	0, 0, 0, 0, 1472, 1473, 0, 1505, 1506, 1507,
	1515, 1516, 1517, 0, 0, 0, 0, 0, 1474, 0,
	0, 0, 1513, 1508, 1503, 0, 0, 1494, 0, 0,
	0, 1475, 0, 0, 1491, 0, 1521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1474, 0, 0, 0, 0, 0, 0, 0, 0,
	1494, 0, 0, 0, 0, 0, 0, 1491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1497, 1498, 1499, 1500, 0, 0, 0, 0,
	0, 0, 1480, 0, 0, 0, 0, 1511, 0, 0,
	1486, 1487, 1493, 1514, 1492, 1488, 0, 1485, 1483, 1484,
	1476, 1477, 1478, 1479, 1481, 1482, 1512, 0, 0, 1522,
	3505, 0, 0, 1502, 1504, 1497, 1498, 1499, 1500, 0,
	0, 0, 0, 0, 0, 1480, 0, 0, 0, 0,
	0, 0, 0, 1518, 0, 1519, 0, 0, 0, 0,
	0, 0, 1489, 1490, 0, 0, 0, 0, 0, 1512,
	0, 0, 1522, 0, 0, 0, 1502, 1504, 1510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1495, 0,
	0, 0, 0, 0, 0, 0, 1518, 0, 1519, 0,
	0, 0, 0, 0, 0, 1489, 1490, 0, 0, 1520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 0, 0, 0, 0, 1509, 0, 0, 0,
	0, 1495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1509,
	0, 1501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1496,
	0, 0, 0, 0, 0, 0, 0, 1472, 1473, 0,
	1505, 1506, 1507, 1515, 1516, 1517, 0, 0, 0, 0,
	0, 0, 0, 0, 1501, 1513, 1508, 1503, 0, 0,
	0, 0, 0, 0, 1475, 0, 0, 0, 0, 1521,
	0, 0, 1496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1474, 0, 0, 0, 1513, 0,
	0, 0, 0, 1494, 0, 0, 0, 0, 0, 0,
	1491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1511, 0, 0, 1486, 1487, 1493, 1514, 1492, 1488, 0,
	1485, 1483, 1484, 1476, 1477, 1478, 1479, 1481, 1482, 0,
	0, 0, 0, 3390, 0, 0, 0, 0, 1497, 1498,
	1499, 1500, 0, 0, 0, 0, 0, 0, 1480, 0,
	0, 0, 0, 1511, 0, 0, 1486, 1487, 1493, 1514,
	1492, 1488, 0, 1485, 1483, 1484, 1476, 1477, 1478, 1479,
	1481, 1482, 1512, 0, 0, 1522, 3287, 0, 0, 1502,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	0, 1519, 0, 0, 0, 0, 0, 0, 1489, 1490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 0, 0, 0, 1472, 1473,
	0, 1505, 1506, 1507, 1515, 1516, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 1520, 0, 1508, 1503, 0,
	0, 0, 0, 0, 0, 1475, 0, 0, 0, 0,
	1521, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1474, 0, 0, 0, 0,
	0, 0, 0, 0, 1494, 0, 0, 0, 0, 0,
	0, 1491, 0, 0, 0, 0, 0, 1501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1472, 1473,
	0, 1505, 1506, 1507, 1515, 1516, 1517, 0, 0, 0,
	0, 1513, 0, 0, 0, 0, 0, 1508, 1503, 1497,
	1498, 1499, 1500, 0, 0, 1475, 0, 0, 0, 1480,
	1521, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1512, 0, 1474, 1522, 0, 0, 0,
	1502, 1504, 0, 0, 1494, 0, 0, 0, 0, 0,
	0, 1491, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 1519, 0, 0, 0, 0, 0, 0, 1489,
	1490, 0, 0, 0, 0, 0, 1511, 0, 0, 1486,
	1487, 1493, 1514, 1492, 1488, 1510, 1485, 1483, 1484, 1476,
	1477, 1478, 1479, 1481, 1482, 1495, 0, 0, 0, 3240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1497,
	1498, 1499, 1500, 0, 0, 0, 1520, 0, 0, 1480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1512, 0, 0, 1522, 0, 0, 0,
	1502, 1504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 1519, 0, 0, 0, 0, 0, 1501, 1489,
	1490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 1496, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 0, 0, 0, 1472,
	1473, 0, 1505, 1506, 1507, 1515, 1516, 1517, 0, 0,
	0, 0, 1513, 0, 0, 0, 1520, 0, 1508, 1503,
	0, 0, 0, 0, 0, 0, 1475, 0, 0, 0,
	0, 1521, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1474, 0, 0, 0,
	0, 0, 0, 0, 0, 1494, 0, 0, 0, 0,
	0, 0, 1491, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1496, 1511, 0, 0,
	1486, 1487, 1493, 1514, 1492, 1488, 0, 1485, 1483, 1484,
	1476, 1477, 1478, 1479, 1481, 1482, 0, 0, 0, 0,
	3239, 0, 1513, 0, 0, 0, 0, 0, 0, 0,
	1497, 1498, 1499, 1500, 0, 0, 0, 0, 0, 0,
	1480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1512, 0, 0, 1522, 0, 0,
	0, 1502, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 1519, 0, 0, 0, 0, 0, 0,
	1489, 1490, 0, 0, 0, 0, 0, 1511, 0, 0,
	1486, 1487, 1493, 1514, 1492, 1488, 1510, 1485, 1483, 1484,
	1476, 1477, 1478, 1479, 1481, 1482, 1495, 0, 0, 0,
	3238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1472, 1473, 0, 1505, 1506, 1507, 1515, 1516,
	1517, 0, 0, 0, 0, 0, 0, 0, 0, 1501,
	0, 1508, 1503, 0, 0, 0, 0, 0, 0, 1475,
	0, 0, 0, 0, 1521, 0, 0, 1496, 0, 0,
	0, 0, 0, 0, 0, 1472, 1473, 0, 1505, 1506,
	1507, 1515, 1516, 1517, 0, 0, 0, 0, 0, 1474,
	0, 0, 0, 1513, 1508, 1503, 0, 0, 1494, 0,
	0, 0, 1475, 0, 0, 1491, 0, 1521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1474, 0, 0, 0, 0, 0, 0, 0,
	0, 1494, 0, 0, 0, 0, 0, 0, 1491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1497, 1498, 1499, 1500, 0, 0, 0,
	0, 0, 0, 1480, 0, 0, 0, 0, 1511, 0,
	0, 1486, 1487, 1493, 1514, 1492, 1488, 0, 1485, 1483,
	1484, 1476, 1477, 1478, 1479, 1481, 1482, 1512, 0, 0,
	1522, 2996, 0, 0, 1502, 1504, 1497, 1498, 1499, 1500,
	0, 0, 0, 0, 0, 0, 1480, 0, 0, 0,
	0, 0, 0, 0, 1518, 0, 1519, 0, 0, 0,
	0, 0, 0, 1489, 1490, 0, 0, 0, 0, 0,
	1512, 0, 0, 1522, 0, 0, 0, 1502, 1504, 1510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1495,
	0, 0, 0, 0, 0, 0, 0, 1518, 0, 1519,
	0, 0, 0, 0, 0, 0, 1489, 1490, 0, 0,
	1520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 0, 0, 0, 0, 1509, 0, 0,
	0, 0, 1495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1509, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1496, 0, 0, 0, 0, 0, 0, 0, 1472, 1473,
	0, 1505, 1506, 1507, 1515, 1516, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 1501, 1513, 1508, 1503, 0,
	0, 0, 0, 0, 0, 1475, 0, 0, 0, 0,
	1521, 0, 0, 1496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1474, 0, 0, 0, 1513,
	0, 0, 0, 0, 1494, 0, 0, 0, 0, 0,
	0, 1491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1511, 0, 0, 1486, 1487, 1493, 1514, 1492, 1488,
	0, 1485, 1483, 1484, 1476, 1477, 1478, 1479, 1481, 1482,
	0, 0, 0, 0, 2633, 0, 0, 0, 0, 1497,
	1498, 1499, 1500, 0, 0, 0, 0, 0, 0, 1480,
	0, 0, 0, 0, 1511, 0, 0, 1486, 1487, 1493,
	1514, 1492, 1488, 0, 1485, 1483, 1484, 1476, 1477, 1478,
	1479, 1481, 1482, 1512, 0, 0, 1522, 2632, 0, 0,
	1502, 1504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 1519, 0, 0, 0, 0, 0, 0, 1489,
	1490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 0, 0, 0, 1472,
	1473, 0, 1505, 1506, 1507, 1515, 1516, 1517, 0, 0,
	0, 0, 0, 0, 0, 0, 1520, 0, 1508, 1503,
	0, 0, 0, 0, 0, 0, 1475, 0, 0, 0,
	0, 1521, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1474, 0, 0, 0,
	0, 0, 0, 0, 0, 1494, 0, 0, 0, 0,
	0, 0, 1491, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1472,
	1473, 0, 1505, 1506, 1507, 1515, 1516, 1517, 0, 0,
	0, 0, 1513, 0, 0, 0, 0, 0, 1508, 1503,
	1497, 1498, 1499, 1500, 0, 0, 1475, 0, 0, 0,
	1480, 1521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1512, 0, 1474, 1522, 0, 0,
	0, 1502, 1504, 0, 0, 1494, 0, 0, 0, 0,
	0, 0, 1491, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 1519, 0, 0, 0, 0, 0, 0,
	1489, 1490, 0, 0, 0, 0, 0, 1511, 0, 0,
	1486, 1487, 1493, 1514, 1492, 1488, 1510, 1485, 1483, 1484,
	1476, 1477, 1478, 1479, 1481, 1482, 1495, 0, 0, 0,
	2631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1497, 1498, 1499, 1500, 0, 0, 0, 1520, 0, 0,
	1480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1512, 0, 0, 1522, 0, 0,
	0, 1502, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 1519, 0, 0, 0, 0, 0, 1501,
	1489, 1490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 1496, 0, 0,
	0, 0, 0, 0, 0, 0, 1495, 0, 0, 0,
	1472, 1473, 0, 1505, 1506, 1507, 1515, 1516, 1517, 0,
	0, 0, 0, 1513, 0, 0, 0, 1520, 0, 1508,
	1503, 0, 0, 0, 0, 0, 0, 1475, 0, 0,
	0, 0, 1521, 0, 1509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1474, 0, 0,
	0, 0, 0, 0, 0, 0, 1494, 0, 0, 0,
	0, 0, 0, 1491, 0, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1496, 1511, 0,
	0, 1486, 1487, 1493, 1514, 1492, 1488, 0, 1485, 1483,
	1484, 1476, 1477, 1478, 1479, 1481, 1482, 0, 0, 0,
	0, 2630, 0, 1513, 0, 0, 0, 0, 0, 0,
	0, 1497, 1498, 1499, 1500, 0, 0, 0, 0, 0,
	0, 1480, 3701, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1512, 0, 0, 1522, 0,
	0, 0, 1502, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1518, 0, 1519, 0, 0, 0, 0, 0,
	0, 1489, 1490, 0, 0, 0, 0, 0, 1511, 0,
	0, 1486, 1487, 1493, 1514, 1492, 1488, 1510, 1485, 1483,
	1484, 1476, 1477, 1478, 1479, 1481, 1482, 1495, 0, 2588,
	0, 1472, 1473, 0, 1505, 1506, 1507, 1515, 1516, 1517,
	0, 0, 0, 0, 0, 0, 0, 0, 1520, 0,
	1508, 1503, 0, 0, 0, 0, 2559, 0, 1475, 0,
	0, 0, 0, 1521, 0, 1509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3700, 1474, 0,
	0, 0, 0, 0, 0, 0, 0, 1494, 0, 0,
	0, 0, 0, 0, 1491, 0, 0, 0, 0, 0,
	1501, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1496, 0,
	0, 0, 0, 2560, 0, 0, 0, 0, 0, 0,
	0, 1472, 1473, 0, 1505, 1506, 1507, 1515, 1516, 1517,
	0, 0, 0, 0, 1513, 0, 0, 0, 0, 0,
	1508, 1503, 1497, 1498, 1499, 1500, 0, 0, 1475, 0,
	0, 0, 1480, 1521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1512, 0, 1474, 1522,
	0, 0, 0, 1502, 1504, 0, 0, 1494, 0, 0,
	0, 0, 0, 0, 1491, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 0, 1519, 0, 0, 0, 0,
	0, 0, 1489, 1490, 0, 0, 0, 0, 0, 1511,
	0, 0, 1486, 1487, 1493, 1514, 1492, 1488, 1510, 1485,
	1483, 1484, 1476, 1477, 1478, 1479, 1481, 1482, 1495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1497, 1498, 1499, 1500, 0, 0, 0, 1520,
	0, 0, 1480, 0, 2680, 0, 0, 2679, 0, 0,
	0, 0, 0, 0, 0, 0, 1509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1512, 0, 0, 1522,
	0, 0, 0, 1502, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 0, 1519, 0, 0, 0, 0,
	0, 1501, 1489, 1490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 1496,
	0, 0, 0, 0, 0, 2226, 0, 0, 1495, 0,
	0, 0, 1472, 1473, 0, 1505, 1506, 1507, 1515, 1516,
	1517, 0, 0, 0, 0, 1513, 0, 0, 0, 1520,
	0, 1508, 1503, 0, 0, 0, 2225, 0, 0, 1475,
	0, 0, 0, 0, 1521, 0, 1509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1474,
	0, 0, 0, 0, 0, 0, 0, 0, 1494, 0,
	0, 0, 0, 0, 0, 1491, 0, 0, 0, 0,
	0, 1501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1496,
	1511, 0, 0, 1486, 1487, 1493, 1514, 1492, 1488, 0,
	1485, 1483, 1484, 1476, 1477, 1478, 1479, 1481, 1482, 0,
	0, 0, 0, 0, 0, 1513, 0, 0, 0, 0,
	0, 0, 0, 1497, 1498, 1499, 1500, 0, 0, 0,
	0, 0, 0, 1480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1512, 0, 0,
	1522, 0, 0, 0, 1502, 1504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1518, 0, 1519, 0, 0, 0,
	0, 0, 0, 1489, 1490, 0, 0, 0, 0, 0,
	1511, 0, 0, 1486, 1487, 1493, 1514, 1492, 1488, 1510,
	1485, 1483, 1484, 1476, 1477, 1478, 1479, 1481, 1482, 1495,
	0, 0, 0, 1472, 1473, 0, 1505, 1506, 1507, 1515,
	1516, 1517, 0, 0, 0, 0, 0, 0, 0, 0,
	1520, 0, 1508, 1503, 0, 0, 0, 0, 0, 0,
	1475, 0, 0, 0, 0, 1521, 0, 1509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1474, 0, 0, 0, 0, 0, 0, 0, 0, 1494,
	0, 0, 0, 0, 0, 0, 1491, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1472, 1473, 0, 1505, 1506, 1507, 1515,
	1516, 1517, 0, 0, 0, 0, 1513, 0, 0, 0,
	0, 0, 1508, 1503, 1497, 1498, 1499, 1500, 0, 0,
	1475, 0, 0, 0, 1480, 1521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1512, 0,
	1474, 1522, 0, 0, 0, 1502, 1504, 0, 0, 1494,
	0, 0, 0, 0, 0, 0, 1491, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 0, 1519, 0, 0,
	0, 0, 0, 0, 1489, 1490, 0, 0, 0, 0,
	0, 1511, 0, 0, 1486, 1487, 1493, 1514, 1492, 1488,
	1510, 1485, 1483, 1484, 1476, 1477, 1478, 1479, 1481, 1482,
	1495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1497, 1498, 1499, 1500, 0, 0,
	0, 1520, 0, 0, 1480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1509, 836,
	0, 0, 0, 0, 0, 0, 0, 0, 1512, 0,
	0, 1522, 0, 0, 0, 1502, 1504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 0, 1519, 0, 0,
	0, 0, 0, 1501, 1489, 1490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 1496, 0, 0, 0, 0, 0, 0, 0, 0,
	1495, 0, 0, 0, 1472, 1473, 0, 1505, 1506, 1507,
	1515, 1516, 1517, 0, 0, 0, 0, 1513, 0, 0,
	0, 1520, 0, 1508, 1503, 0, 0, 0, 0, 0,
	0, 1475, 0, 0, 0, 0, 1521, 0, 1509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1474, 0, 0, 0, 0, 0, 0, 0, 0,
	1494, 0, 0, 0, 0, 0, 0, 1491, 0, 0,
	0, 0, 0, 1501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1496, 1511, 0, 0, 1486, 1487, 1493, 1514, 1492,
	1488, 0, 1485, 1483, 1484, 1476, 1477, 1478, 1479, 1481,
	1482, 0, 0, 0, 0, 0, 0, 1513, 0, 0,
	0, 0, 0, 0, 0, 1497, 1498, 1499, 1500, 0,
	0, 0, 0, 0, 0, 1480, 0, 0, 0, 0,
	2686, 0, 0, 0, 0, 0, 0, 0, 2975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1512,
	0, 0, 1522, 0, 0, 0, 1502, 1504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1518, 0, 1519, 0,
	0, 0, 0, 0, 0, 1489, 1490, 0, 0, 0,
	0, 0, 1511, 0, 0, 1486, 1487, 1493, 1514, 1492,
	1488, 1510, 1485, 1483, 1484, 1476, 1477, 1478, 1479, 1481,
	1482, 1495, 0, 0, 0, 1472, 1473, 0, 1505, 1506,
	1507, 1515, 1516, 1517, 0, 0, 0, 0, 0, 0,
	0, 0, 1520, 0, 1508, 1503, 0, 0, 0, 2681,
	0, 0, 1475, 0, 0, 0, 0, 1521, 0, 1509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1474, 0, 0, 0, 0, 0, 0, 0,
	0, 1494, 0, 0, 0, 0, 0, 0, 1491, 0,
	0, 0, 0, 0, 1501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1472, 1473, 0, 1505, 1506,
	1507, 1515, 1516, 1517, 0, 0, 0, 0, 1513, 0,
	0, 0, 0, 0, 1508, 1503, 1497, 1498, 1499, 1500,
	0, 0, 1475, 0, 0, 0, 1480, 1521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1512, 0, 1474, 1522, 0, 0, 0, 1502, 1504, 0,
	0, 1494, 0, 0, 0, 0, 0, 0, 1491, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 0, 1519,
	0, 0, 0, 0, 0, 0, 1489, 1490, 0, 0,
	0, 0, 0, 1511, 0, 0, 1486, 1487, 1493, 1514,
	1492, 1488, 1510, 1485, 1483, 1484, 1476, 1477, 1478, 1479,
	1481, 1482, 1495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1497, 1498, 1499, 1500,
	0, 0, 0, 1520, 0, 0, 1480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1512, 0, 0, 1522, 0, 0, 0, 1502, 1504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 0, 1519,
	0, 0, 0, 0, 0, 1501, 1489, 1490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 1496, 0, 0, 0, 0, 0, 0,
	0, 0, 1495, 0, 0, 0, 1472, 1473, 0, 1505,
	1506, 1507, 1515, 1516, 1517, 0, 0, 0, 0, 1513,
	0, 0, 0, 1520, 0, 1508, 1503, 0, 0, 0,
	2634, 0, 0, 1475, 0, 0, 0, 0, 1521, 0,
	1509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2648, 0,
	0, 0, 0, 1474, 0, 0, 0, 0, 0, 0,
	0, 0, 1494, 0, 0, 0, 0, 0, 0, 1491,
	0, 0, 0, 0, 0, 1501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1496, 1511, 0, 0, 1486, 1487, 1493,
	1514, 1492, 1488, 0, 1485, 1483, 1484, 1476, 1477, 1478,
	1479, 1481, 1482, 0, 0, 0, 0, 0, 0, 1513,
	0, 0, 0, 0, 0, 0, 0, 1497, 1498, 1499,
	1500, 0, 0, 0, 0, 0, 0, 1480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1512, 0, 0, 1522, 0, 0, 0, 1502, 1504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1518, 0,
	1519, 0, 0, 0, 0, 0, 0, 1489, 1490, 0,
	0, 0, 0, 0, 1511, 0, 0, 1486, 1487, 1493,
	1514, 1492, 1488, 1510, 1485, 1483, 1484, 1476, 1477, 1478,
	1479, 1481, 1482, 1495, 0, 0, 0, 1472, 1473, 0,
	1505, 1506, 1507, 1515, 1516, 1517, 0, 0, 0, 0,
	0, 0, 0, 0, 1520, 0, 1508, 1503, 0, 0,
	0, 0, 0, 0, 1475, 0, 0, 0, 0, 1521,
	0, 1509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1474, 0, 0, 0, 0, 0,
	0, 0, 0, 1494, 0, 0, 0, 0, 0, 0,
	1491, 0, 0, 0, 0, 0, 1501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1472, 1473, 0,
	1505, 1506, 1507, 1515, 1516, 1517, 0, 0, 0, 0,
	1513, 0, 0, 0, 0, 0, 1508, 1503, 1497, 1498,
	1499, 1500, 0, 0, 1475, 0, 0, 0, 1480, 1521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1512, 0, 1474, 1522, 0, 0, 0, 1502,
	1504, 0, 0, 1494, 0, 0, 0, 0, 0, 0,
	1491, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	0, 1519, 0, 0, 0, 0, 0, 0, 1489, 1490,
	0, 0, 0, 0, 0, 1511, 0, 0, 1486, 1487,
	1493, 1514, 1492, 1488, 1510, 1485, 1483, 1484, 1476, 1477,
	1478, 1479, 1481, 1482, 1495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1497, 1498,
	1499, 1500, 0, 0, 0, 1520, 0, 0, 1480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1512, 0, 0, 1522, 0, 0, 0, 1502,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1472, 1473, 0, 1505, 1506, 1507, 1515, 1516, 1517, 1518,
	0, 1519, 0, 0, 0, 0, 0, 1501, 1489, 1490,
	1503, 0, 0, 0, 0, 0, 0, 1475, 0, 0,
	0, 0, 1521, 0, 1510, 1496, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1474, 0, 0,
	0, 1513, 0, 0, 0, 1520, 1494, 0, 0, 0,
	0, 0, 0, 1491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1501, 0, 0,
	0, 1497, 1498, 1499, 1500, 0, 0, 0, 0, 0,
	0, 1480, 0, 0, 0, 1496, 1511, 0, 0, 1486,
	1487, 1493, 1514, 1492, 1488, 0, 1485, 1483, 1484, 1476,
	1477, 1478, 1479, 1481, 1482, 1512, 0, 0, 1522, 0,
	0, 1513, 1502, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1518, 0, 1519, 0, 0, 0, 0, 0,
	0, 1489, 1490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 744, 0, 780, 0, 0, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1495, 0, 0,
	0, 0, 0, 0, 0, 0, 751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1520, 0,
	763, 749, 0, 0, 0, 0, 1511, 0, 0, 1486,
	1487, 1493, 1514, 1492, 1488, 0, 1485, 1483, 1484, 1476,
	1477, 1478, 1479, 1481, 1482, 0, 750, 0, 0, 0,
	0, 753, 0, 0, 0, 786, 0, 0, 0, 0,
	0, 0, 760, 761, 0, 0, 0, 0, 773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1501, 0, 781, 755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 756, 0, 0, 0, 0, 0, 0, 0,
	748, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 757, 758, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 765, 764, 0,
	0, 0, 0, 0, 0, 759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1511,
	0, 785, 1486, 1487, 1493, 1514, 1492, 1488, 0, 1485,
	1483, 1484, 1476, 1477, 1478, 1479, 1481, 1482, 782, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 752, 0, 0, 0, 777,
	778, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 775, 0, 0, 0, 0, 0,
	0, 771, 0, 0, 768, 0, 0, 0, 0, 0,
	769, 0, 0, 0, 0, 0, 0, 746, 0, 783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 770, 0, 0, 0, 767,
	0, 0, 0, 0, 0, 0, 0, 0, 784, 0,
	0, 0, 0, 0, 0, 0, 772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 776,
}
var sqlPact = [...]int{

	4245, -1000, -1000, -1000, -1000, -1000, -1000, 167, 165, 164,
	163, 161, 153, 151, 149, -1000, -1000, -1000, 143, -1000,
	-1000, 142, -1000, 141, 140, 139, 138, -1000, 137, 135,
	130, -1000, -1000, -1000, -1000, 129, 127, 123, 59819, 1795,
	72461, 62855, 1805, 54149, 72023, 53711, 71585, 71147, 122, -1000,
	70709, 111, 110, 109, -1000, -1000, 107, 3578, 44923, 105,
	104, 103, 2140, 100, -1000, 99, -1000, 6640, 1271, -1000,
	97, -1000, 7920, 500, 61985, 2265, 96, 93, 44484, 2263,
	2289, -1000, -1000, 1691, -1000, -1000, 89, 87, 86, 85,
	84, 81, 79, 78, 77, -1000, 74, 73, 72, 71,
	70, 69, 67, -1000, 64, 62, 61, 60, 58, 57,
	56, 55, 50, 49, 48, 46, -1000, 84620, 1535, 1436,
	1435, 1420, 1415, 1399, 876, 45, 43, 42, 37, 32,
	31, 30, -1000, 26, 25, 23, 22, 21, -1000, 20,
	19, 134, 16, 13, 12, 9, 8, 1541, -1000, 1298,
	664, 21314, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 76781, 72893, 6, -39, 5,
	-1000, 2633, 847, 37026, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 398, -1000, -1000, -1000, 235, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1472, 633, -1000, -1000, -1000, 70271, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1787, -28, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 631, -1000, 1785, 190, 1614,
	-1000, -1000, -1000, -1000, -1000, 72893, -1000, -1000, 2969, 2966,
	1609, 630, 69839, -1000, 1209, -1000, 788, 24092, -1000, 1006,
	-1000, 24092, 220, -1000, -1000, -1000, -1000, -1000, 53273, 15726,
	52835, 52397, 69401, 15278, 59387, 48475, -1000, -1000, -1000, 39672,
	1111, -1000, -1000, -1000, -1000, -1000, -13, 49353, 72893, -1000,
	209, -1000, -1000, -1000, -1000, -1000, -1000, 30678, 541, 30205,
	885, 29732, 450, -1000, -1000, -1000, 2964, 2963, 984, 2961,
	2558, 76349, 1457, 2960, 1389, 1081, 900, 2959, 2958, 2957,
	2956, 2952, 2951, 1169, 68963, 2365, 68525, 1369, 48027, 59819,
	59819, 2099, 68087, 1146, 1131, -1000, -1000, -1000, -1000, 2427,
	2286, 2283, 41866, -1000, 2950, 2949, 2947, 2946, 2945, 75917,
	1424, 2938, 1975, 2937, 2932, 2930, 2928, 2926, 2925, 2924,
	2922, 2921, -1000, 58949, 58511, 58073, 57635, 67649, 47579, -1000,
	-1000, -1000, 38774, 4866, 4824, 67211, 40118, 59819, 59819, -1000,
	-1000, 31139, 83, -1000, -1000, -1000, 39672, 2300, -1000, 31139,
	83, -1000, 72893, -1000, 2362, 1578, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2066, 1351, 2797, 47131,
	1677, 1173, 2615, 2417, 2415, 1253, 1928, 2412, 2409, 2408,
	2397, 2396, 1359, 1986, 488, 20841, 1299, 1249, 2395, 2393,
	2817, 1589, 1656, 51959, 2917, 2916, 2584, 2364, 2342, 2298,
	-1000, -1000, -1000, -1000, 1223, -1000, -1000, 55013, -1000, -1000,
	1024, -1000, -1000, 1024, -1000, -1000, -1000, -1000, -1000, 1108,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1298, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1911, -1000, 1602,
	-1000, -1000, 1980, 2598, 2598, 2598, 2637, 367, 362, -1000,
	134, -1000, -1000, 84106, -1000, -1000, 31139, 31139, 31139, 31139,
	31139, 1546, -1000, 629, -1000, -1000, 670, -1000, 627, 482,
	-1000, -1000, -1000, -1000, -1000, -1000, 626, 2823, -1000, -1000,
	-1000, -1000, -1000, 2795, -1000, 18015, -1000, -1000, -1000, 435,
	621, 31139, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 832, -1000, 206, 809,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 525, 1498, 519, 519, 519, -1000,
	-1000, 887, -1000, -1000, -1000, 265, 518, 263, 517, -1000,
	-1000, -1000, -1000, 2353, 620, 619, -1000, 618, 617, 616,
	615, 614, -1000, -1000, -1000, 613, 610, 605, 602, 601,
	596, 594, 587, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 883, -1000, 584, 575, 574, 570, 569, 567, 560,
	559, 555, -1000, -1000, -14, 72893, -1000, 398, -14, -1000,
	-1000, 552, -1000, 24553, 24553, 24553, -1000, -1000, 1771, 31139,
	-1000, 2425, -1000, -8, -8, 764, 37898, -1000, 36150, 764,
	239, 669, 41428, -1000, 2296, -1000, -1000, 550, 205, -1000,
	-1000, 2288, 72893, 16172, 72893, 59819, 59819, 59819, 2511, 31139,
	-1000, -1000, 46683, 72893, 60251, 2742, 10280, 46683, 72893, 2351,
	-1000, -1000, -1000, 72893, -1000, 31139, -1000, 2739, 1140, 49789,
	2680, -22, -1000, -1000, -1000, -1000, -1000, -1000, 1959, 1950,
	966, 1832, 1151, -1000, 24092, 2549, -1000, -1000, -1000, 201,
	16172, -1000, 2079, 2494, 1087, -1000, 1830, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1443, 2492, -1000, 1595, 2490,
	1423, -1000, -1000, 1639, -1000, -1000, 2574, -1000, -1000, 1809,
	2487, -7, -1000, -1000, 826, 2486, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 720, -1000, 48921, 39672, 49353,
	-16, -1000, -1000, -35, -1000, 14830, 84106, -1000, -1000, -1000,
	84106, 734, -1000, -1000, 2484, -1000, 84106, 717, -1000, -1000,
	2483, -1000, -1000, -1000, 2915, -1000, 2913, 1915, 2895, 2894,
	2893, -1000, 1382, 1483, 2892, -1000, 2891, -1000, -1000, -1000,
	-1000, -1000, -1000, 57197, 1769, -1000, -1000, 56321, -1000, 1913,
	-1000, -1000, 56759, 894, -1000, 826, 1909, -1000, 523, -1000,
	2890, 66773, 2119, 826, 1903, -1000, -1000, -1000, -1000, -1000,
	42738, -1000, 42738, -1000, 42738, -1000, 1303, -1000, 75485, -8,
	-8, 2795, -1000, -1000, -1000, -1000, -1000, 2482, 2888, 2884,
	2881, -1000, 72893, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 183, 2479, -1000, -1000, 183, 2478, -1000, 183,
	2477, -1000, 182, 2467, -1000, -1000, 1715, 2462, -1000, -37,
	2461, -1000, -1000, -43, -1000, -1000, -1000, 847, -1000, 38336,
	-1000, 38336, 66335, 48921, 813, 604, 44046, 84106, -1000, -70,
	-1000, 39672, 84106, -1000, 48921, 56321, -1000, 65897, 55889, -1000,
	-1000, 1158, 2022, -1000, -1000, -1000, 813, 48921, 48921, 48921,
	-1000, 65459, -1000, -1000, 1660, 1348, 2588, 1652, 59819, -1000,
	1491, -1000, -1000, -1000, 2605, 2346, -1000, 46247, 61547, -1000,
	61115, -1000, 60683, -1000, 59819, -1000, 59819, -1000, 2880, 2879,
	2878, -1000, 2877, 2593, 84106, 2592, -1000, 2466, 1408, 1405,
	72893, -1000, -1000, 72893, -1000, 72893, -1000, -1000, -1000, -1000,
	-1000, 1958, -1000, -1000, -1000, -1000, 59819, -1000, -1000, -1000,
	-1000, -1000, -1000, 2340, -1000, 1393, -1000, 1475, -1000, 1152,
	-1000, -1000, 185, -1000, -1000, -22, -1000, 75053, -1000, 1980,
	-1000, 72893, -1000, 1985, 2324, 2339, 1268, 1802, 2049, -1000,
	29259, 2030, 33444, 1823, 134, -1000, -1000, 134, 134, 23631,
	-1000, -1000, 10280, 10280, 16172, 1120, 31139, 31139, 31139, 31139,
	31139, 31139, 31139, 31139, 31139, 31139, 31139, 31139, 31139, 31139,
	31139, 31139, 31139, 31139, 31139, 31139, 31139, 31139, 31139, 31139,
	31139, 31139, 31139, 31139, 31139, 31139, 31139, 31139, 31139, 31139,
	31139, 1800, 31139, 1107, 31139, 31139, 31139, 31139, 1910, -1000,
	-1000, 1547, 431, 1607, -1000, 2782, 2782, 2782, 84399, 84399,
	522, 2876, 670, -1000, 31139, -1000, 83, 31139, 16620, -1000,
	-1000, -1000, 362, 10057, 1793, -1000, 359, 17093, -1000, -1000,
	-1000, 18015, 482, 28786, 31139, 848, 84106, 1225, 2803, 14384,
	2293, 2159, -1000, 2809, -1000, -1000, 2803, -1000, -1000, -1000,
	-1000, 2803, 1118, 1116, 2803, -1000, 2803, 2803, 549, 679,
	662, 20368, 19895, 19422, 18949, 654, 31139, 31139, 31139, 31139,
	31139, 31139, 31139, 31139, -1000, 28325, 27852, 27379, 33905, 26906,
	31139, 18476, 26433, 25960, 72893, -14, 2738, 31139, 180, -1000,
	82731, -1000, 180, 180, 547, -48, 84106, 2032, 2032, 37462,
	2052, 1584, 1584, 1584, -1000, 764, 10790, 764, 64591, 1590,
	764, 764, 200, 255, 358, 35714, 2425, 64591, 657, 546,
	4, 3, 2, -1000, -1000, 1, -2, -1000, -1000, 59819,
	543, 16620, 16172, 1187, -49, 199, 2080, 2076, 2069, -1000,
	2068, 1367, -50, 1105, -21, -1000, 542, -58, -1000, 1089,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 877, 538, 537, 264, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 525, 1498, 519, 519, 519, -1000, -1000, -1000,
	265, 518, 263, 517, -1000, -1000, -1000, -1000, -1000, -1000,
	2284, -35, 60251, 752, -59, 994, -22, -1000, -1000, -1000,
	49789, 1024, -1000, 1333, -1000, -1000, -1000, -1000, -1000, -1000,
	1175, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 832, -1000,
	-1000, -1000, -1000, -1000, -1000, 2789, 2787, -15, -1000, -1000,
	16172, -1000, -24, 1383, -1000, 51521, 1825, 2578, 2570, 1287,
	-1000, 1193, 2636, 55013, 2696, 2717, 632, -1000, 2277, -1000,
	-1000, 787, 1381, 1104, 55013, 1595, -1000, 10280, -1000, 2084,
	2635, 1156, 1160, 1156, 1156, 1178, -1000, 55013, 1102, -1000,
	1098, -1000, -29, 2692, 2695, 628, -1000, 2276, 1094, -1000,
	-1000, 59819, 16172, -1000, 1282, -1000, 48921, 2124, -1000, -61,
	720, -16, 49353, 72893, 195, -1000, 31139, 83, 31139, 83,
	-1000, -1000, 2459, -1000, -1000, -1000, 2874, 1464, 1974, -1000,
	-1000, -1000, 516, 1897, 2273, 72893, 2086, -18, 59819, -1000,
	2455, 1595, 1896, -1000, -1000, 55451, -1000, 2454, 545, 2871,
	-1000, 1756, 1895, -1000, -1000, -1000, 74621, 1133, 2434, 939,
	536, 2735, -1000, 536, 43174, -1000, 72893, -1000, -1000, 72893,
	-1000, -1000, -1000, 2869, -1000, 59819, -1000, -1000, 59819, -1000,
	59819, -1000, 59819, -1000, 59819, 59819, -1000, 72893, 48921, 48921,
	3856, 50657, -64, -67, 357, -1000, 65027, 72893, 937, 51089,
	72893, 2538, 813, 39672, -70, 813, 813, 720, -1000, 720,
	-1000, 59819, 2338, -1000, 813, 813, 813, -1000, -1000, -1000,
	-1000, 2867, 2866, -1000, -1000, -1000, 824, 59819, 72893, 59819,
	-1000, -1000, 72893, -1000, 72893, -1000, 824, 72893, 824, 72893,
	824, 72893, -1000, -1000, -1000, -1000, -1000, -1000, 83, 31139,
	1324, -1000, 2335, -1000, 2327, -1000, 29, -1000, -1000, -1000,
	-1000, 1831, 59819, 59819, 59819, 59819, 72893, 59819, -1000, 55013,
	-1000, 1985, 2324, -1000, -1000, -1000, -1000, -1000, -1000, 1188,
	1630, -1000, 2017, -1000, 1231, -1000, -1000, -1000, 84106, 34366,
	-1000, -1000, 84106, 1362, -1000, 32983, 32522, -1000, -1000, 1316,
	59819, 2093, -1000, 2093, -17, -1000, 82390, 2015, 59819, -1000,
	-1000, -1000, -1000, -1000, 785, 1460, 1460, 1058, 1058, 1058,
	1058, 2764, 1295, 237, 539, 6028, 6028, 1387, 1387, 1387,
	1387, 1387, 6028, 4017, 1597, 1597, 4017, 4017, 4017, 4017,
	4017, 1597, 1597, 1597, 6028, 6028, 6028, 84399, 84216, 8808,
	31139, 31139, 1093, 1545, 431, 8323, 31139, 5860, 5860, 5860,
	5860, -1000, 1876, -1000, -1000, -1000, -1000, 2271, 510, 33905,
	33905, -1000, -1000, -1000, -1000, 17554, 31139, -1000, -1000, -1000,
	-1000, 25487, -1000, -1000, 81928, -242, 355, -168, -3, -1000,
	31139, 31139, 31139, 352, -1000, 191, 31139, 72893, -1000, 78917,
	651, -66, -1000, -69, 1196, -1000, 31139, -1000, -1000, 1086,
	-1000, 1084, 1082, 1075, -1000, 509, 351, -1000, 184, -1000,
	1575, 501, 499, 350, -74, 344, 782, 777, 340, 338,
	337, 31139, -1000, -1000, -1000, -1000, -1000, 81818, -1000, -1000,
	81587, -1000, -1000, 81294, -1000, -1000, 81251, -1000, -1000, -1000,
	83875, 78830, 78562, 78331, 9718, 78221, 77990, -75, 336, -1000,
	2264, -168, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	332, -1000, 331, -1000, 83644, -168, 328, 6064, -1000, 33905,
	33905, 33905, -1000, 326, -1000, 82500, -1000, 83534, 25026, 25026,
	25026, 322, 83303, 31139, -168, -77, -1000, -80, -1000, -1000,
	498, -82, 845, 24553, 36588, 16172, -1000, 845, 845, 31139,
	-1000, 31139, 2060, -1000, -1000, -1000, 2050, 3569, 2032, 37462,
	-1000, -1000, -1000, -1000, 64591, -1000, 2795, 2121, -1000, 64591,
	-1000, -1000, 72893, 398, -1000, 64591, 64591, 16172, 764, -1000,
	764, 64591, 646, -1000, -1000, -1000, -1000, -1000, 321, 40554,
	-3, 181, 813, -1000, 16172, 2112, 2112, 2112, 2112, -1000,
	-1000, 72893, 2756, -1000, 1514, -1000, 10280, -1000, 667, 970,
	496, -1000, 2803, 2803, -1000, 2803, 72893, 154, 24092, -1000,
	1024, -1000, -1000, 1320, -1000, 1455, -1000, 1028, -1000, -1000,
	-1000, -1000, 24092, -1000, 1971, 72893, 72893, 59819, -1000, -1000,
	1892, 74189, 1882, 10280, 72893, -1000, -1000, 494, 492, 2014,
	2002, 72893, 72893, 1999, 73757, 73325, 72893, 1550, 31139, 1852,
	1765, 83, 83, -1000, -1000, 83, 491, 1018, 59819, 59819,
	59819, 1416, -1000, -1000, -1000, -1000, -1000, 54581, -1000, -1000,
	2808, 2806, -1000, 1156, -1000, -1000, -1000, 1156, 1595, 1402,
	59819, 72893, 1513, 83, 83, -1000, -1000, 83, 489, 16172,
	1431, -1000, 1282, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	45815, 940, 826, 813, 2256, -1000, 2124, -1000, -1000, 13938,
	84106, -1000, 84106, -1000, 72893, -1000, 892, 72893, 51089, 807,
	2433, 42302, -35, 813, 48921, 59819, -18, 72893, -1000, 1595,
	2430, 398, 1881, -1000, -1000, 48921, 2865, 487, 2857, -1000,
	59819, 2429, 1747, 1868, 2423, 711, 72893, 845, 37462, 1452,
	-1000, 40992, 912, 72893, 1386, 88, -1000, -1000, -1000, 15,
	72893, -1000, 2856, -1000, -1000, 183, 183, 183, -1000, 182,
	1715, -1000, -37, -1000, -1000, 3856, 3856, 813, -19, 484,
	-1000, 750, 749, 39226, 48921, -83, -1000, -1000, -1000, -1000,
	-1000, 59819, 72893, 608, 2118, 72893, -85, -1000, 178, 483,
	-1000, -1000, 813, 2246, -1000, -1000, 831, -1000, 1139, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -9, -35,
	-35, -1000, 824, -1000, 824, -1000, 824, -1000, 84106, -1000,
	1314, 1256, 72893, -1000, 16172, 72893, 59819, 16172, 59819, 2322,
	2315, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 965,
	-1000, 1362, 1622, -1000, 482, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1948, -1000, -20, 23631, 1845, -1000,
	-1000, 59819, -10, 31139, 31139, 7452, 5512, 31139, 33905, 33905,
	-1000, 31139, 5354, -1000, -1000, -1000, -1000, -1000, 2225, 470,
	31139, 10280, 4714, 4665, -1000, 317, 77695, 4017, -1000, 31139,
	-1000, 316, 23170, -1000, 82962, -27, -90, -1000, 11248, -168,
	-93, -1000, -1000, 663, -1000, 2471, -1000, 31139, 83072, 1934,
	1733, 1453, 1281, 2803, 2820, 13492, -1000, 43610, 852, 1596,
	-1000, -1000, 2803, 784, -1000, -1000, -1000, 784, -1000, 80958,
	-1000, -1000, -1000, -1000, 10280, 10280, 31139, 31139, -1000, 31139,
	31139, 31139, -1000, -1000, 31139, -1000, -1000, 2202, 31139, -1000,
	10280, 10280, 33905, 33905, 33905, 33905, 33905, 33905, 33905, 33905,
	33905, 33905, 33905, 33905, 33905, 33905, 33905, 33905, 33905, 33905,
	33905, 1984, 33905, 2780, 2780, 2780, -1000, 2266, 2202, 31139,
	31139, 10280, 314, 313, 312, -1000, 31139, -168, -1000, -1000,
	3856, -1000, 2157, -1000, 31139, -1000, -180, -1000, 2425, -1000,
	-1000, 2157, 2157, -96, 84106, 37462, 37462, -1000, 469, 31139,
	2024, -1000, -1000, 649, -240, -1000, 748, -1000, -1000, -1000,
	-1000, -1000, 398, -1000, -1000, -1000, 174, 64591, 64591, 645,
	-1000, -102, -1000, -1000, -105, -1000, 2726, 311, 16172, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -35, 1612, 2819,
	-1000, 2804, 660, 643, 2803, 308, 307, 303, -35, 72893,
	-1000, -22, -1000, -1000, -1000, 31139, -1000, -1000, 2576, 1066,
	1056, -1000, 2424, -1000, 1866, -1000, 919, -1000, 1338, -1000,
	31139, 31139, 468, 466, 1507, 2853, 934, 2422, 1715, 2421,
	1715, -1000, -1000, 796, -1000, 84106, 465, 464, -1000, -24,
	1349, 828, -1000, -1000, 31139, 31139, 64159, -1000, 371, 2574,
	-11, -1000, 1048, -1000, -1000, -1000, -1000, 1595, 1047, -1000,
	-1000, -1000, 827, -1000, -1000, 31139, -1000, -29, 1043, -1000,
	-1000, -1000, 45369, -1000, -1000, 48921, 813, -1000, 2852, 2851,
	2850, 300, -110, -34, 10280, 2724, 1776, 485, 59819, 776,
	-1000, 2795, -1000, -1000, -1000, -1000, 59819, 2723, 2420, 826,
	-1000, 2849, -1000, 932, 16172, 59819, 2419, 1967, 711, 50225,
	-1000, 826, 1596, -40, -1000, 1386, 22697, 2572, -111, -1000,
	-1000, -1000, 845, 43174, 37462, 31139, 2848, -112, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 63727, 63727, 48921,
	48921, 48921, 813, 72893, 72893, 51089, 2846, 463, 72893, 72893,
	455, -1000, 72893, 72893, 2845, 48921, -1000, 83, -1000, 1606,
	59819, 13046, -1000, -1000, -1000, -1000, -1000, 824, -1000, -1000,
	1526, 1820, 1526, 1374, 1373, -1000, 1619, -1000, -1000, -1000,
	-1000, 2045, 2604, 16172, 2672, 5860, 31139, 31139, 302, 4638,
	1135, 5860, 31139, 31139, 10280, 6925, -113, 31139, 31139, -1000,
	31139, 641, 84106, 2815, 31139, 298, 285, -1000, -1000, -1000,
	2798, -1000, -1000, -1000, 84106, 31139, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 283, -1000, 172, -1000, -1000, -1000, 77213,
	-1000, 31139, 282, 280, -1000, -1000, -1000, 278, 261, 77652,
	9026, 80727, 80617, 80386, 84106, 2266, 84106, -1000, -1000, 810,
	810, 1150, 1150, 1150, 1150, 2780, 846, 481, 281, 714,
	714, 714, 834, 728, 728, 714, 714, 714, 2200, 1989,
	454, 4175, -1000, -1000, 84106, 84106, 260, -1000, -1000, -1000,
	-168, 259, 2146, 2632, 84106, -1000, 37462, 2146, 2146, -1000,
	-1000, 3569, 72893, 84106, 37462, -1000, 2121, -1000, 11704, -1000,
	16172, -1000, -1000, -1000, -1000, 2795, -1000, 40554, -1000, 451,
	-1000, 169, -1000, -1000, 639, 2843, 659, 254, -1000, -1000,
	-1000, -35, 84106, 72893, 72893, 72893, 2414, -1000, 3739, -1000,
	80093, -118, -1000, 82390, 31139, 72893, -1000, 1601, 2042, 977,
	-1000, 2608, 72893, -1000, 72893, -1000, -1000, 72893, 72893, 59819,
	2389, -119, 84106, -36, -1000, 747, -1000, 1141, -1000, 12600,
	59819, 59819, 2387, -120, 16172, -1000, -1000, -37, -1000, -1000,
	-1000, -1000, 2110, -1000, 62417, 1724, 83, -1000, 63291, 2842,
	448, -1000, 1600, -1000, 635, 1595, 83, 59819, -1000, -1000,
	447, 72893, 1741, 445, 16172, 1969, 711, 50225, -1000, 1133,
	2049, -1000, -38, -1000, 460, 83, 1596, -1000, -40, 84106,
	-1000, 745, -1000, -121, -1000, -1000, 251, -1000, 2537, 2535,
	-1000, -1000, 31139, 444, 443, 72893, 2532, -1000, -1000, -127,
	-1000, 1890, -1000, -1000, -1000, -1000, -1000, 16172, 1380, -1000,
	441, 440, -1000, -1000, -1000, -1000, 2604, 5860, 5860, 31139,
	31139, 31139, 5860, 6925, -128, -1000, 5860, 5860, -168, -1000,
	-1000, 82962, -1000, -1000, -1000, 84106, -1000, 12154, 1528, -1000,
	80050, -1000, -1000, -1000, -1000, 31139, 31139, -1000, -1000, -1000,
	-1000, -1000, 33905, 2198, 438, 10280, -1000, -1000, 838, 31139,
	31139, 2425, 838, 838, -1000, -129, -1000, -1000, -1000, 2795,
	169, -1000, -1000, 2841, 16172, 647, -1000, 2836, -1000, -1000,
	-1000, -1000, 72893, -1000, 72893, -1000, 16172, 72893, 2168, 1855,
	-1000, -1000, 1998, 437, 33905, 59819, 727, 2192, 1494, 31139,
	1845, -134, -135, 1854, -1000, -1000, 1853, 31139, -1000, 10280,
	436, 1715, 1715, -141, -142, -1000, 31139, 1042, 72893, 22236,
	-1000, 2835, 2574, -1000, -1000, 31139, 1033, -1000, 1513, 2128,
	-1000, -1000, -1000, -1000, 1994, -1000, -1000, 72893, 1993, 814,
	-143, -1000, 735, 733, -1000, 51089, 807, 780, -1000, -1000,
	-1000, 398, 31139, -1000, 59819, 31139, 1728, -1000, 711, 50225,
	-1000, 2423, 1386, -1000, 2506, 72893, 2562, -1000, 2049, 431,
	-1000, 813, 427, 426, -148, 31139, 31139, -149, 425, 813,
	-45, -1000, 726, 478, -1000, -1000, 59819, 59819, 31139, 31139,
	-1000, 5860, 5860, 5860, -1000, 248, -1000, -1000, 1596, 2629,
	-1000, 79757, 79526, 5672, 33905, 10280, -150, -1000, 72893, 84106,
	-168, -1000, -1000, -1000, 540, -1000, 2833, -1000, -1000, 2371,
	-1000, -1000, -1000, 72893, 1856, -1000, 933, 31139, 4175, 423,
	31139, -1000, -1000, 2105, 2230, 2110, 420, -1000, -1000, -1000,
	-1000, 922, 1406, -1000, -1000, 84106, 2612, 31139, -1000, -1000,
	419, 413, 84106, 410, 703, 2189, -1000, -1000, -1000, 84106,
	409, 807, -1000, 1537, 1724, 405, -1000, -1000, 1663, 2073,
	-1000, 63291, 34812, 34812, 245, 2718, 780, -1000, 2777, -1000,
	2709, -151, 932, -156, 59819, 50225, -1000, 1967, -1000, 1128,
	-161, 72893, 1386, -1000, -1000, 48921, 48921, 922, -167, -169,
	-1000, 48921, -1000, 1890, -1000, 72893, -1000, 72893, -1000, -1000,
	-170, -175, -1000, 1774, 31139, -1000, -1000, 5672, -177, -1000,
	-92, -1000, 2701, -1000, -1000, -1000, -1000, 2404, 2144, 79416,
	1941, 72893, 79185, 2217, -1000, -1000, 1513, 72893, 2110, 2142,
	59819, 926, 16172, -178, 1526, 1526, 31139, 21775, 1532, 31139,
	1663, 59819, 72893, -1000, 2597, -1000, 2526, -1000, -1000, -1000,
	2110, 83, -1000, -1000, 83, 922, 403, 1494, 401, -1000,
	1969, 1272, -1000, 845, -1000, -1000, -183, -186, 1494, 922,
	-1000, -188, -1000, -189, -191, -1000, -1000, 242, 32061, 32061,
	32061, -168, -1000, 72893, 400, 2378, 823, -1000, 1665, 1459,
	90, 936, -1000, -1000, 2192, -194, -1000, 817, 398, -1000,
	31139, -1000, 922, -196, -1000, 908, -204, -1000, 906, -206,
	-1000, 2186, -1000, -207, -1000, 395, -213, -1000, -1000, 1988,
	-1000, 1513, 814, -1000, 1494, 31139, 2110, 31139, -1000, 43174,
	-1000, 813, 813, 2110, 1494, 813, -1000, -1000, -1000, 2398,
	-1000, 35258, 1719, 1370, 82159, 2398, 2398, -1000, -1000, 72893,
	2673, -1000, 1726, 1696, 1262, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2671, 1941, 84106, 2110, -1000, 1526, 2127,
	-1000, 1526, 2173, -1000, 1531, -1000, 72893, -1000, 72893, 1363,
	1353, 2832, 807, 1663, 2110, -214, 1513, -215, -197, -1000,
	-1000, 1513, 2110, -1000, -1000, 1495, 2722, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 693, -1000, 2514, -1000, 958,
	1745, 1745, 689, 1665, -1000, -1000, 391, -1000, 390, -1000,
	-216, -1000, -1000, 2829, -1000, 1663, -1000, 1513, 922, 843,
	1494, -1000, -1000, 1513, 1352, -1000, -1000, 1591, 31600, 31139,
	-1000, 2768, -1000, -1000, 2003, -1000, 31139, 2192, 31139, 31139,
	1692, -1000, -1000, 843, 1494, -1000, 2828, 2110, -1000, -1000,
	-1000, -1000, 84106, -1000, -1000, -1000, 84106, -1000, -221, -222,
	-1000, -1000, -1000, -1000, 2110, -1000, 1513, 1513, 1026, 1513,
	843, -1000, 378, 843, -1000, 31139, -1000, -231, 1513, -1000,
}
var sqlPgo = [...]int{

	0, 3513, 3509, 3508, 3507, 3505, 3504, 3500, 3499, 3495,
	3493, 3491, 3490, 3489, 3484, 3483, 3480, 3477, 3474, 3473,
	3471, 3470, 3468, 3467, 3466, 3460, 3458, 3456, 3455, 3454,
	3453, 3452, 3447, 3446, 3445, 3440, 3437, 3435, 3432, 3431,
	3429, 3427, 3426, 3425, 3424, 3422, 3421, 31, 3419, 3413,
	3412, 3408, 3407, 3406, 3405, 3404, 3402, 3401, 3398, 3397,
	3395, 3394, 3392, 3390, 3388, 36, 3387, 227, 3381, 3376,
	3375, 3373, 3372, 3371, 3368, 3367, 3366, 226, 3365, 113,
	3364, 3363, 3361, 3360, 3358, 225, 3357, 3354, 3349, 3344,
	3343, 3342, 3339, 3338, 157, 203, 3337, 193, 3335, 3334,
	3332, 3327, 3324, 3322, 3321, 3320, 3319, 3318, 205, 3317,
	223, 3316, 3315, 3313, 3312, 3311, 3310, 3308, 3307, 3306,
	3305, 3304, 3303, 3300, 3299, 3298, 3297, 3296, 3295, 3294,
	3293, 3292, 3291, 3290, 3289, 3288, 3287, 3285, 3284, 230,
	145, 3279, 3276, 221, 220, 3274, 135, 97, 102, 66,
	3270, 93, 35, 3269, 11, 150, 209, 5587, 199, 3267,
	3266, 3264, 196, 152, 3263, 192, 3262, 3261, 3260, 3259,
	73, 64, 139, 147, 136, 130, 140, 3257, 3231, 96,
	58, 34, 30, 3229, 3217, 3215, 2176, 89, 3210, 216,
	201, 129, 3208, 3203, 3201, 894, 3197, 186, 128, 87,
	53, 86, 3196, 109, 24, 3192, 143, 56, 3191, 126,
	74, 37, 6233, 6721, 3185, 85, 235, 84, 146, 175,
	174, 127, 171, 167, 133, 94, 3184, 206, 3183, 100,
	161, 3182, 3180, 3179, 67, 158, 77, 3178, 4, 15,
	9, 222, 17, 82, 21, 3177, 13, 3176, 3175, 3174,
	3173, 27, 122, 3171, 115, 60, 3170, 50, 3169, 18,
	183, 3168, 185, 99, 3166, 3165, 214, 164, 156, 3159,
	131, 190, 3153, 3144, 3143, 3136, 3133, 103, 22, 105,
	3132, 3131, 107, 195, 155, 3129, 32, 3128, 144, 76,
	123, 228, 132, 170, 90, 180, 148, 181, 3118, 3117,
	3116, 168, 3115, 3113, 173, 111, 3112, 3107, 231, 33,
	52, 194, 61, 154, 119, 3106, 163, 3104, 3102, 3101,
	236, 142, 172, 6, 10, 68, 101, 29, 8, 189,
	120, 212, 83, 3100, 3271, 581, 376, 54, 108, 88,
	49, 98, 121, 219, 55, 3099, 3098, 38, 3097, 3095,
	3093, 3091, 149, 3090, 3089, 3088, 114, 182, 204, 3087,
	118, 57, 12, 134, 202, 232, 95, 178, 211, 208,
	3083, 141, 3082, 62, 116, 3081, 160, 207, 80, 3080,
	1264, 117, 3079, 166, 3078, 3077, 3076, 3075, 3074, 3073,
	3070, 1157, 3069, 112, 3068, 3067, 218, 153, 3066, 217,
	165, 138, 91, 43, 3065, 70, 730, 3064, 159, 65,
	3063, 3017, 71, 0, 7288, 5335, 6503, 3058, 2612, 3057,
	169, 106, 3056, 3055, 3054, 81, 3052, 63, 3051, 3050,
	40, 3048, 16, 3, 7, 14, 19, 417, 315, 3028,
	3027, 92, 104, 124, 3026, 224, 191, 3025, 3024, 3023,
	72, 3020, 28, 3019, 25, 3018, 3014, 26, 5, 23,
	3013, 3012, 197, 3011, 200, 3009, 3008, 2726, 110, 3004,
	3002, 215, 78, 2994, 213, 2992, 2678, 137, 179, 2991,
	2986, 2985, 2983, 210, 2982, 2981, 20, 2, 2978, 2977,
	162, 1, 2542, 2975, 2974, 69, 2973, 2972, 151,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 11, 11, 7, 7, 8, 8, 8, 35,
	35, 9, 9, 9, 10, 10, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 14, 14, 25, 25, 15,
	15, 27, 27, 16, 16, 28, 28, 471, 471, 19,
	30, 20, 31, 13, 472, 472, 472, 472, 24, 21,
	32, 22, 22, 22, 22, 22, 150, 150, 150, 150,
	18, 18, 26, 26, 173, 173, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 470, 470,
	175, 175, 174, 169, 169, 473, 473, 176, 176, 176,
	178, 178, 36, 36, 36, 93, 93, 93, 94, 94,
	95, 95, 151, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 81, 81, 411, 411, 412, 412, 146, 146,
	147, 147, 147, 147, 148, 148, 149, 149, 149, 50,
	38, 38, 38, 38, 38, 38, 38, 39, 39, 39,
	39, 40, 40, 40, 40, 40, 40, 41, 41, 41,
	41, 41, 41, 48, 48, 48, 48, 140, 140, 51,
	51, 51, 51, 51, 51, 51, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 481, 481, 482, 482,
	483, 483, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 62,
	62, 253, 253, 228, 228, 63, 63, 63, 64, 64,
	65, 65, 52, 52, 464, 464, 267, 267, 375, 375,
	67, 67, 287, 287, 68, 68, 68, 68, 68, 68,
	69, 69, 69, 69, 69, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 75, 75, 75, 76, 76,
	76, 74, 74, 74, 72, 72, 72, 71, 71, 71,
	73, 73, 73, 268, 268, 77, 77, 77, 77, 77,
	77, 77, 77, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 377, 377,
	78, 78, 78, 345, 345, 82, 82, 82, 302, 302,
	83, 83, 83, 83, 83, 84, 84, 84, 84, 96,
	96, 96, 96, 467, 467, 260, 260, 189, 189, 189,
	189, 89, 89, 89, 89, 90, 90, 90, 91, 91,
	145, 145, 102, 102, 102, 102, 102, 101, 101, 101,
	101, 101, 101, 42, 42, 42, 43, 43, 44, 44,
	45, 45, 46, 46, 47, 47, 47, 47, 47, 104,
	104, 477, 477, 106, 103, 103, 103, 105, 105, 105,
	105, 107, 108, 108, 108, 108, 108, 108, 108, 108,
	109, 109, 405, 405, 276, 276, 403, 403, 419, 419,
	404, 404, 232, 232, 232, 232, 232, 233, 233, 233,
	410, 410, 410, 410, 410, 410, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	129, 129, 129, 139, 139, 139, 139, 139, 139, 139,
	132, 132, 132, 119, 119, 111, 111, 111, 111, 111,
	115, 115, 115, 115, 115, 115, 115, 115, 112, 112,
	121, 121, 121, 121, 121, 116, 116, 118, 118, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 113, 113,
	113, 113, 123, 123, 123, 123, 308, 308, 308, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 135,
	135, 135, 135, 135, 135, 359, 359, 130, 130, 130,
	130, 134, 134, 134, 134, 292, 292, 127, 127, 127,
	128, 128, 128, 133, 133, 131, 131, 136, 136, 136,
	136, 114, 114, 114, 485, 485, 485, 137, 137, 126,
	126, 138, 138, 138, 138, 138, 138, 138, 138, 125,
	125, 125, 124, 124, 124, 124, 117, 465, 465, 462,
	462, 462, 462, 462, 462, 462, 463, 463, 466, 466,
	87, 87, 87, 57, 57, 57, 58, 58, 154, 154,
	154, 154, 238, 238, 238, 238, 152, 152, 153, 153,
	59, 59, 486, 486, 486, 474, 474, 474, 475, 475,
	475, 475, 475, 475, 234, 234, 235, 235, 326, 326,
	326, 326, 326, 239, 239, 177, 177, 177, 242, 243,
	243, 240, 240, 241, 241, 241, 245, 245, 244, 247,
	247, 246, 325, 426, 426, 428, 428, 428, 428, 428,
	428, 428, 430, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 424, 424, 424, 425, 420, 420, 421,
	421, 421, 421, 236, 236, 237, 237, 237, 237, 422,
	423, 258, 258, 362, 427, 427, 429, 429, 431, 487,
	487, 487, 487, 487, 487, 488, 488, 324, 324, 323,
	323, 251, 251, 432, 432, 432, 432, 433, 433, 433,
	433, 433, 436, 435, 434, 434, 434, 434, 434, 61,
	61, 61, 289, 289, 288, 288, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 142, 142, 192, 192, 56, 56, 56, 12, 12,
	12, 476, 476, 476, 60, 60, 60, 60, 191, 191,
	191, 191, 191, 191, 469, 469, 468, 468, 193, 193,
	490, 490, 66, 66, 66, 66, 66, 66, 55, 55,
	55, 55, 55, 491, 491, 309, 309, 307, 307, 257,
	257, 361, 196, 196, 170, 170, 170, 23, 17, 17,
	33, 33, 34, 34, 29, 29, 478, 478, 479, 479,
	88, 88, 92, 92, 92, 100, 100, 141, 141, 141,
	141, 141, 141, 141, 37, 37, 37, 37, 49, 49,
	49, 49, 98, 493, 493, 493, 99, 99, 99, 492,
	492, 190, 190, 320, 320, 321, 321, 494, 494, 322,
	322, 322, 322, 184, 183, 185, 185, 54, 54, 54,
	179, 179, 180, 180, 181, 181, 182, 182, 495, 495,
	85, 85, 85, 144, 144, 227, 227, 227, 316, 316,
	316, 252, 252, 201, 201, 319, 319, 317, 317, 317,
	317, 286, 286, 286, 143, 143, 265, 265, 278, 278,
	279, 279, 372, 372, 280, 97, 97, 157, 157, 155,
	155, 155, 155, 155, 155, 155, 155, 162, 162, 163,
	163, 164, 164, 165, 166, 166, 166, 166, 269, 269,
	167, 167, 167, 156, 156, 156, 158, 158, 158, 158,
	158, 158, 158, 161, 161, 161, 161, 168, 168, 168,
	160, 160, 443, 443, 443, 445, 445, 446, 442, 442,
	444, 444, 489, 489, 291, 291, 291, 249, 250, 248,
	248, 255, 255, 254, 256, 256, 360, 360, 360, 171,
	171, 171, 283, 283, 283, 283, 284, 284, 312, 312,
	310, 310, 310, 310, 311, 311, 313, 313, 313, 314,
	314, 315, 315, 282, 282, 341, 341, 159, 159, 159,
	262, 262, 262, 263, 263, 332, 332, 332, 332, 332,
	332, 333, 333, 331, 331, 331, 331, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 364, 365, 365, 264,
	264, 366, 318, 318, 460, 460, 460, 461, 461, 358,
	358, 367, 367, 367, 367, 367, 367, 356, 356, 357,
	357, 373, 374, 374, 295, 295, 295, 295, 293, 293,
	296, 296, 296, 296, 294, 294, 368, 368, 368, 368,
	285, 285, 369, 369, 369, 369, 370, 327, 328, 328,
	378, 378, 378, 378, 393, 261, 261, 261, 261, 261,
	496, 496, 379, 379, 379, 379, 379, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 383,
	383, 383, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	392, 392, 392, 392, 392, 384, 384, 389, 389, 390,
	390, 390, 385, 386, 391, 391, 391, 391, 497, 497,
	395, 395, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 381, 381, 381, 388, 388, 388, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	303, 303, 305, 305, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	335, 335, 335, 335, 335, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 335, 335, 335, 336,
	336, 336, 336, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 437, 437,
	437, 437, 437, 437, 437, 437, 440, 440, 441, 441,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 447,
	447, 448, 448, 450, 450, 451, 451, 452, 453, 453,
	453, 454, 455, 455, 449, 449, 456, 456, 456, 456,
	457, 457, 458, 458, 458, 458, 458, 459, 459, 459,
	459, 459, 347, 347, 348, 348, 354, 354, 354, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 194, 194, 194, 194, 194,
	274, 274, 272, 272, 272, 275, 275, 273, 273, 271,
	271, 270, 270, 344, 344, 342, 342, 346, 346, 297,
	297, 394, 394, 394, 394, 394, 394, 394, 394, 298,
	298, 298, 306, 299, 299, 300, 300, 300, 300, 300,
	338, 339, 301, 301, 301, 340, 340, 349, 353, 353,
	352, 351, 351, 350, 350, 329, 329, 330, 330, 281,
	281, 498, 498, 277, 277, 371, 371, 371, 371, 230,
	230, 266, 266, 229, 229, 222, 222, 223, 223, 223,
	223, 259, 259, 355, 355, 396, 396, 397, 397, 398,
	398, 399, 399, 400, 401, 402, 343, 343, 211, 210,
	198, 199, 209, 208, 207, 197, 200, 204, 205, 206,
	202, 203, 217, 216, 215, 221, 213, 214, 376, 224,
	224, 225, 225, 225, 226, 226, 226, 226, 195, 195,
	218, 218, 219, 220, 220, 212, 212, 212, 186, 186,
	186, 187, 187, 188, 188, 409, 409, 407, 407, 407,
	408, 408, 408, 408, 406, 406, 406, 406, 406, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 415, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 418, 418,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 0, 1, 1, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 3, 1, 1, 3, 4,
	6, 1, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 5,
	5, 6, 6, 4, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 6, 5, 6, 6, 4, 8, 3,
	4, 10, 3, 6, 4, 3, 1, 3, 2, 1,
	1, 3, 1, 3, 2, 2, 0, 1, 1, 0,
	2, 0, 6, 7, 2, 5, 6, 2, 1, 3,
	1, 3, 1, 6, 4, 9, 7, 12, 12, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 6,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 6, 6, 6, 6, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 3, 3, 4, 3,
	4, 7, 4, 4, 4, 3, 5, 7, 4, 3,
	3, 4, 3, 3, 3, 3, 2, 0, 1, 0,
	1, 0, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 2, 1, 3, 2, 0,
	9, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 6, 3, 4, 6,
	3, 4, 6, 3, 4, 6, 3, 4, 6, 3,
	3, 5, 3, 1, 3, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 6, 4, 7, 2, 6,
	4, 7, 2, 1, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 1, 3, 5, 4, 6, 4,
	3, 0, 1, 3, 2, 4, 2, 4, 1, 6,
	3, 1, 1, 5, 3, 2, 6, 3, 3, 4,
	4, 3, 1, 3, 2, 3, 3, 1, 3, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 1, 1, 1, 1, 1, 2, 2,
	5, 7, 3, 3, 3, 4, 5, 5, 5, 3,
	4, 4, 3, 4, 4, 3, 4, 4, 5, 3,
	5, 5, 5, 7, 3, 3, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 4, 3,
	4, 3, 3, 4, 4, 5, 0, 1, 1, 3,
	2, 4, 3, 3, 5, 4, 3, 5, 3, 5,
	4, 6, 4, 6, 4, 1, 0, 3, 4, 4,
	5, 7, 5, 3, 3, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 3, 3, 4, 3, 3,
	3, 3, 4, 3, 1, 1, 1, 2, 3, 2,
	3, 6, 6, 7, 9, 7, 9, 3, 4, 10,
	10, 3, 5, 5, 5, 3, 5, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 1, 2, 0,
	3, 3, 2, 3, 6, 3, 11, 14, 0, 2,
	4, 3, 0, 4, 5, 4, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 1, 3, 8, 0, 1, 1, 0, 2, 1,
	0, 1, 0, 9, 9, 3, 1, 3, 7, 1,
	3, 11, 3, 2, 0, 3, 1, 2, 2, 3,
	2, 6, 2, 1, 1, 2, 8, 4, 2, 5,
	5, 5, 2, 9, 10, 6, 5, 3, 1, 5,
	8, 7, 11, 3, 0, 2, 4, 3, 3, 1,
	5, 1, 3, 1, 2, 0, 1, 2, 2, 0,
	1, 3, 3, 2, 2, 1, 1, 4, 0, 6,
	0, 3, 0, 2, 2, 2, 0, 1, 1, 2,
	2, 0, 3, 3, 2, 1, 1, 2, 2, 5,
	8, 4, 1, 0, 1, 2, 2, 1, 2, 3,
	3, 2, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 4, 2, 2, 2, 4, 7, 3, 4, 6,
	3, 1, 1, 1, 8, 11, 7, 5, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 6, 7, 6, 5, 3, 4, 15, 18,
	14, 17, 4, 0, 2, 2, 0, 1, 0, 1,
	3, 3, 2, 0, 1, 1, 0, 6, 6, 8,
	6, 8, 6, 8, 6, 8, 1, 0, 2, 0,
	2, 2, 3, 3, 2, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 2, 3, 2, 2, 8, 11, 3,
	3, 0, 3, 0, 3, 0, 3, 0, 1, 0,
	6, 7, 3, 6, 3, 1, 3, 1, 1, 4,
	2, 1, 3, 1, 3, 8, 5, 3, 4, 3,
	0, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 1, 1, 3, 3, 1,
	2, 4, 4, 2, 3, 5, 5, 1, 3, 1,
	0, 1, 2, 3, 2, 4, 2, 3, 0, 2,
	0, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 8, 8, 8, 2, 4, 4, 4,
	2, 2, 2, 2, 3, 1, 3, 6, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 3, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 0, 4, 2, 1, 2, 2, 4,
	1, 3, 1, 2, 3, 2, 2, 2, 1, 0,
	2, 5, 7, 2, 1, 2, 4, 3, 5, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 5,
	4, 6, 3, 5, 4, 6, 4, 6, 5, 7,
	3, 3, 3, 3, 3, 4, 3, 2, 4, 2,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	1, 3, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 5, 6, 6, 7, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 6, 2,
	1, 1, 1, 1, 1, 2, 1, 5, 5, 6,
	3, 1, 1, 1, 2, 2, 2, 4, 3, 5,
	6, 8, 6, 5, 4, 3, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 3, 3, 1, 1, 1, 1, 5, 3,
	1, 1, 3, 1, 1, 1, 1, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 7, 1, 7, 5, 3, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 475, -79, -50, -48, -82, -83, -68,
	-84, -78, -96, -100, -88, -102, -141, -3, -36, -38,
	-51, -67, -69, -77, -86, -85, -87, -89, -93, -92,
	-81, -42, -97, -101, -110, -142, -143, -144, 86, 72,
	128, 109, 114, 161, 300, 331, 341, 325, -105, -106,
	360, -37, -49, -99, -98, -4, -12, 27, 41, -39,
	-40, -41, 57, -56, -53, -62, -480, 88, -444, -70,
	-73, -484, 119, 134, 178, 292, -90, -91, 327, 329,
	135, -44, -43, 129, -155, -157, -103, -104, -145, -111,
	-112, -113, -114, -115, -116, -117, -118, -119, -120, -121,
	-122, -123, -124, -125, -126, -131, -127, -128, -129, -130,
	-132, -133, -134, -135, -136, -137, -138, 364, 411, 42,
	374, 73, 122, 335, 21, -5, -6, -7, -8, -9,
	-10, -11, -52, -54, -55, -57, -58, -59, -66, -60,
	-61, -443, -71, -72, -74, -75, -76, 326, -158, -156,
	472, 425, -14, -19, -20, -15, -16, -18, -21, -17,
	-25, -30, -31, -27, -28, -26, -29, -32, -33, -34,
	-35, -23, -24, -13, -22, 443, 451, -161, -159, -160,
	-168, 348, 433, 388, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, -213, -218, -219, -220, -212, -186,
	-415, -418, 4, -413, -416, 140, 185, 258, 21, 22,
	23, 24, 25, 27, 38, 40, 39, 41, 42, 45,
	48, 49, 47, 52, 53, 54, 55, 56, 57, 58,
	61, 66, 71, 72, 73, 74, 75, 76, 81, 78,
	79, 80, 83, 85, 86, 87, 89, 91, 92, 100,
	101, 102, 103, 104, 105, 109, 112, 111, 114, 117,
	118, 119, 121, 123, 124, 126, 128, 129, 132, 130,
	394, 131, 133, 134, 135, 136, 146, 147, 148, 150,
	151, 153, 155, 159, 160, 162, 166, 168, 169, 170,
	171, 177, 178, 180, 181, 186, 182, 187, 191, 194,
	193, 195, 196, 197, 188, 202, 206, 207, 208, 210,
	211, 214, 215, 216, 217, 218, 221, 220, 223, 226,
	227, 230, 231, 234, 235, 236, 237, 239, 240, 243,
	241, 244, 242, 245, 248, 246, 247, 250, 251, 256,
	254, 252, 253, 260, 263, 175, 265, 266, 268, 269,
	270, 286, 273, 274, 275, 278, 279, 282, 285, 287,
	288, 289, 290, 291, 292, 293, 295, 296, 298, 300,
	301, 303, 305, 306, 307, 308, 309, 310, 311, 313,
	314, 316, 317, 318, 319, 320, 325, 322, 323, 324,
	326, 327, 328, 329, 331, 333, 334, 335, 336, 338,
	340, 361, 362, 376, 341, 342, 343, 344, 345, 346,
	347, 351, 355, 352, 353, 354, 349, 350, 356, 357,
	358, 360, 363, 364, 366, 367, 369, 370, 372, 373,
	374, 375, 377, 380, 381, 382, 378, 379, 387, 385,
	386, 389, 390, 391, 392, 393, 395, 397, 405, 406,
	408, 411, 412, 413, 403, 415, 416, 419, 420, 421,
	424, 422, 423, 429, 425, 427, 430, 431, 432, 438,
	437, 444, 445, 447, 448, 449, 33, 43, 44, 46,
	50, 62, 63, 64, 67, 106, 107, 127, 137, 138,
	149, 163, 165, 172, 173, 174, 192, 198, 200, 204,
	224, 262, 264, 280, 284, 297, 299, 312, 337, 368,
	383, 398, 399, 400, 401, 407, 409, 433, 434, 435,
	439, 446, 271, -206, 2, -186, -186, 300, 26, 2,
	26, 296, 350, 390, 392, 2, -467, -260, 2, 26,
	-189, -186, 88, 161, 348, -206, 2, -467, -260, 24,
	2, -186, 2, -190, 2, 341, -186, 475, 83, 231,
	66, 337, 357, -108, 406, -107, 398, 343, -109, -405,
	2, 248, -186, 475, 475, 475, 475, 2, 388, 289,
	437, 349, 102, 309, 185, -476, 333, 164, 426, 402,
	-462, 2, 4, -416, -413, -223, -222, 388, 102, -220,
	-212, 465, -219, 475, 475, 475, 2, 207, 208, 308,
	307, 357, 358, 475, 475, 2, 25, 60, 82, 85,
	108, 136, 156, 159, 276, -481, 240, 286, 306, 356,
	387, 395, 408, -475, 375, 61, 343, -474, -476, 413,
	117, -307, 102, 231, 160, 420, 392, 390, 418, 112,
	191, 423, 422, 475, 25, 60, 69, 85, 117, 136,
	156, 159, -483, 286, 306, 340, 343, 356, 387, 395,
	413, 408, 2, 437, 349, 388, 185, 102, -476, 304,
	-79, 2, 472, 29, 28, 360, -151, 388, 201, 2,
	-186, 207, 208, 2, 475, 475, 157, -462, 2, 207,
	208, 2, 201, 2, 61, 345, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 2, -139, 357, 375, 170, 41,
	66, 26, 305, 71, 290, 103, 162, 185, 186, 215,
	82, 83, -308, 40, 208, 207, -359, 389, 344, 350,
	385, 341, 406, 88, 427, 334, 449, 309, 310, 130,
	4, 102, 248, 359, 398, 231, 75, -489, 2, 388,
	-492, 2, 406, 406, 2, -492, 2, -492, 2, -492,
	2, -493, 406, 446, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, -156, -158,
	-157, 475, 475, 475, 475, 475, -139, 357, 2, 66,
	26, -254, -255, 417, 199, 125, 277, -155, -157, 2,
	-443, -403, 2, -334, -419, -336, 463, 464, 456, 257,
	450, -347, 108, 418, 271, -418, -337, -349, 127, 337,
	-275, 8, 9, 5, 6, 7, -195, -380, -343, 410,
	139, 261, -226, 476, 10, 472, -440, -157, -348, 34,
	165, 59, -407, -225, -382, -390, -386, -387, -496, 48,
	55, 54, 395, 247, 351, 352, 369, 353, 354, 45,
	429, 182, 268, 270, 193, 4, 200, -224, -212, -437,
	-438, -413, -414, 192, 198, 194, 368, 195, 196, 197,
	44, 312, 150, 151, 149, 118, 107, 106, 264, 50,
	49, 46, 434, -391, 104, 398, 399, 400, 401, 210,
	211, -186, -415, 69, 94, 95, 93, 98, 97, 233,
	232, 99, 96, 359, 426, 60, 33, 172, 173, 204,
	262, 174, 67, -439, 379, 90, 158, 190, 176, 203,
	205, 209, 225, 228, 249, 255, 259, 281, 283, 332,
	365, -497, 435, 137, 138, 284, 297, 383, 407, 409,
	163, 224, 62, 63, -445, 313, -446, -206, -445, 475,
	475, 477, 475, -248, -249, -250, 2, 26, 115, 472,
	2, -363, 2, -364, -368, -157, 219, -367, 472, -365,
	470, -213, 272, -441, 338, -437, -438, -195, -212, -225,
	4, -251, 472, 474, 102, 388, 70, 185, -302, 472,
	-186, 26, 271, 402, 477, -345, 472, 271, 157, 274,
	-186, 2, 2, 361, 2, 472, -108, 64, 406, 39,
	357, -321, 2, -322, -183, -184, -185, -373, 206, 303,
	311, 452, 449, -403, -477, 157, 455, 402, -403, -276,
	474, 2, -368, 172, -213, 2, -210, -406, 4, -413,
	-416, -414, -417, 69, -415, 26, 28, 29, 30, 32,
	34, 35, 36, 37, 51, 59, 60, 65, 68, 70,
	82, 88, 93, 94, 96, 95, 97, 98, 99, 108,
	110, 113, 115, 116, 120, 122, 125, 139, 141, 154,
	156, 157, 161, 164, 167, 179, 189, 199, 201, 219,
	222, 229, 232, 233, 257, 261, 267, 271, 272, 276,
	277, 294, 302, 315, 330, 348, 359, 371, 384, 388,
	396, 402, 404, 410, 417, 418, 426, 428, 436, 440,
	441, 442, 443, -418, 2, -368, 172, 2, -215, 172,
	-368, -218, 2, -197, -186, 2, -209, -406, 2, -229,
	172, -213, -214, -218, -411, 172, 2, -409, 10, -408,
	5, 4, -413, -416, -414, -94, -411, 472, 402, 477,
	-266, -222, -223, -259, -186, 474, -334, 2, -97, 2,
	-334, 172, 2, -97, 172, 2, -334, 172, 2, -97,
	172, 2, 2, 2, 408, 2, 85, 172, -186, 388,
	101, 2, 324, -482, 340, 412, 437, 2, 2, 2,
	2, 2, 2, 388, -202, 2, -186, 154, -221, 172,
	2, -186, 349, -490, 313, -411, 172, 2, -216, -218,
	-216, 185, 202, -197, 172, 2, 392, 390, 392, 390,
	157, 2, 201, 2, 201, 2, -369, 2, -370, -364,
	-213, 470, 2, 2, 2, 2, 2, 172, -186, 388,
	101, 2, 217, 2, 2, 2, 2, 2, 2, 2,
	2, 2, -268, 172, 2, -213, -268, 172, 2, -268,
	172, 2, -230, 172, 2, -229, -197, 172, 2, -412,
	172, 2, -411, -377, 2, -376, -408, 433, -79, 472,
	-79, 472, 357, 472, -411, -213, -213, -334, -97, -95,
	-94, 157, -334, -97, -151, 154, 2, 102, 388, -139,
	2, 154, 428, 2, 8, 2, -411, 344, 310, 146,
	2, 361, 2, 362, 66, -308, 449, 66, 157, 2,
	157, 2, -292, 2, 443, -465, 2, 271, 157, 2,
	157, 2, 157, 2, 157, 2, 157, 2, 307, 358,
	208, 2, -97, 440, -334, 440, 2, 405, 216, 131,
	157, -292, 2, 157, 2, 157, 2, 5, 2, 376,
	2, 206, 303, 376, 2, -213, -485, 2, 388, 437,
	349, 2, 2, 78, 79, 157, 2, 157, 2, 157,
	449, 2, -285, -368, -320, -321, -320, 402, -254, -255,
	-139, 361, 2, -162, -283, -164, 154, -310, -311, -165,
	229, 141, 267, -166, -291, 26, 115, -291, -291, 53,
	473, 473, 11, 12, 68, 38, 463, 464, 465, 466,
	152, 467, 468, 461, 462, 460, 453, 454, 458, 212,
	213, 84, 457, 455, 77, 238, 339, 142, 143, 144,
	145, 321, 183, 31, 184, 14, 15, 16, 30, 276,
	228, 450, 176, 365, 456, 17, 18, 19, 203, 205,
	259, 43, 179, -194, -231, -334, -334, -334, -334, -334,
	283, 472, -281, -329, 470, -157, 472, 472, 472, 5,
	-402, 8, -157, -334, -347, 473, -273, 472, -157, -347,
	-342, 472, 337, 470, 472, -350, -334, 5, 472, 474,
	-447, 444, -384, 472, 299, -383, 472, -383, -383, 438,
	-381, 472, 451, 445, 472, -381, 472, 472, 154, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 438, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 477, -445, -251, 472, -277, -371,
	-334, 465, -277, -277, 271, -270, -334, 90, -295, 209,
	249, 158, 225, 332, 190, -331, 476, -331, -358, 451,
	-157, -365, -212, -157, -367, 472, -363, -358, -80, -402,
	-67, -77, -85, -97, -110, -143, -144, 465, -213, 472,
	157, 472, 474, 157, -259, -406, -197, -213, -224, -225,
	-229, 114, -270, -462, -259, -189, 35, -344, -378, -379,
	-380, -389, -385, -388, -392, 48, 55, 54, 395, 247,
	351, 352, 369, 353, 354, 45, 429, 182, 268, 270,
	193, 4, 46, 434, -391, 200, 317, 318, 316, 320,
	319, 192, 198, 194, 368, 195, 196, 197, 44, 312,
	150, 151, 149, 118, 107, 106, 264, 50, 49, 104,
	398, 399, 400, 401, 210, 211, 435, 379, 62, 63,
	-462, -259, 154, -405, -270, 35, -321, 2, 108, -409,
	39, -494, 477, 227, -233, 237, 256, 169, 272, 447,
	265, -410, 5, 4, -343, -355, 108, 231, 200, -396,
	-398, 8, -397, 9, -399, 463, 464, -404, -403, 92,
	474, -406, -173, 322, -172, 23, 27, 119, 431, 132,
	-241, 187, 289, 127, 372, 421, -471, -472, 342, 393,
	394, 80, 265, 322, 127, -288, -290, 35, 100, 251,
	285, 56, 180, 242, 243, 374, 439, 127, 322, -472,
	322, -472, -175, 372, 421, -471, -472, 342, 322, -174,
	-241, 127, 476, -468, -442, 443, 127, -374, -373, -412,
	-94, -266, 477, 477, -406, 465, 127, 127, 127, 127,
	2, 2, 257, 2, 2, 2, 159, -474, -483, 2,
	2, 2, -213, 172, -253, 271, -464, -267, 388, -213,
	257, -215, 172, 2, -218, 437, -468, 257, 35, 472,
	2, -199, 172, 2, -187, -186, 185, -442, 257, -369,
	-227, -213, -364, -227, 360, -206, 35, -331, -331, 127,
	2, 2, 2, -186, -176, 477, 58, 328, 127, -176,
	127, -176, 127, -176, 477, 127, -176, 127, 477, 127,
	473, 477, -377, -377, -411, -149, 443, 157, 88, 472,
	472, -151, -374, 477, -95, -411, -464, -197, 2, -213,
	2, 388, 210, -149, -411, -411, -411, -405, 26, 362,
	2, 307, 358, 79, 362, 2, -213, 388, 102, 185,
	72, -466, 154, -463, 333, -462, -213, 102, -213, 102,
	-213, 102, -213, -213, 2, 2, 2, 2, 76, 76,
	154, 2, 405, 2, 405, 2, -186, -186, -186, 227,
	-213, 154, 388, 185, 388, 185, 102, 388, -176, 477,
	-190, -162, -283, -405, -284, -283, -163, -162, -165, 154,
	311, 422, 251, 363, 214, -311, -310, 26, -334, -315,
	148, 250, -334, -313, -336, 463, 464, -397, -399, -269,
	265, -156, -156, -156, -256, -360, -334, 302, 185, -393,
	-378, -378, -211, -406, 398, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	228, 176, 365, 43, 179, -334, 402, -334, -334, -334,
	-334, 246, 257, 261, 410, 139, 419, 115, 265, -498,
	384, 37, -340, -157, -274, 472, -354, 32, 371, 26,
	-347, 472, 2, -329, -334, -330, -271, -270, -270, 473,
	436, 26, 115, 465, 2, 473, 477, 35, 473, -334,
	-271, -346, -342, -270, -353, -352, 440, -303, -304, 448,
	245, 105, 171, 244, -305, 347, -400, 8, -406, 465,
	-448, 147, 164, 8, -400, -400, 398, 398, -400, -400,
	-400, 472, 473, 2, 473, 2, 473, -334, 2, 473,
	-334, 2, 473, -334, 2, 473, -334, 2, 473, 2,
	-334, -334, -334, -334, -334, -334, -334, -270, -297, 2,
	-394, -270, 4, 448, 245, 105, 171, 244, 347, 5,
	-297, 2, -298, 2, -334, -270, -299, -335, -336, 463,
	464, 456, -347, -300, 2, -334, -271, -334, 51, 222,
	404, -301, -334, 157, -270, -270, 2, -270, 2, -446,
	35, -270, -262, 477, 157, 35, 4, -262, -262, 472,
	473, 477, -296, 168, 241, 236, -296, -363, -295, 209,
	-293, 281, -293, -293, -358, -198, 470, 478, -406, -358,
	-357, -356, 35, -206, 278, -358, -358, 474, 473, -357,
	471, -460, 472, 475, 475, 475, 475, 475, -213, 472,
	-270, -406, 377, 473, 474, 203, 203, 203, 203, 338,
	473, 402, 443, -79, 273, 473, 477, -261, 34, 470,
	-395, 438, 472, 472, -304, 472, 157, -260, -477, 473,
	406, -322, -232, 311, 370, 323, 355, 386, 8, 9,
	8, 9, 477, -406, 477, -478, 82, 402, 70, -325,
	172, 70, -420, -200, 82, -421, -186, 65, 418, 302,
	156, -478, 82, 302, -478, 82, 82, 360, 375, 53,
	-368, 38, 38, 26, -97, 223, 157, 449, 388, 185,
	402, -368, -290, -378, 100, 242, 243, 53, -401, -396,
	463, 464, -401, 53, -401, -401, -401, 443, -215, -368,
	402, 402, 477, 38, 38, 26, -97, 223, 157, 402,
	-229, -198, -469, -191, 89, 252, 235, 253, -192, -193,
	291, 430, -411, -146, 181, 473, -374, -222, -186, 474,
	-334, -97, -334, -97, 127, 2, -490, 217, 472, -236,
	257, 157, -259, -375, 201, 477, -267, 127, -289, -288,
	257, -217, 172, 2, -213, 127, 472, 123, 309, 2,
	271, 257, -199, 172, -179, 391, 127, -287, 428, -316,
	-97, 472, 108, 35, -316, -278, -279, -372, -280, -200,
	472, -206, -186, 2, -213, -268, -268, -268, -229, -230,
	-197, -411, -412, -79, -376, 473, 473, 473, -148, 275,
	-147, -186, 5, -151, 428, -235, -326, -325, -424, -425,
	-420, 228, 185, 418, 202, 140, -252, -201, -200, 101,
	-149, -94, -374, -149, -149, -374, -374, -213, 154, -149,
	-149, -149, 2, 2, -292, -213, -197, -229, -213, -259,
	-259, -292, -197, -292, -197, -292, -197, -97, -334, 357,
	154, 154, 474, -292, 309, 102, 388, 289, 185, -213,
	-229, -213, -229, -197, -213, -368, -284, -163, 272, 214,
	363, -313, -314, -336, 337, 338, -314, 337, 338, 8,
	9, 8, 9, -167, 367, 260, -268, 477, -170, 36,
	113, 214, -213, 449, 124, -334, -334, 402, -498, 384,
	-340, 124, -334, 246, 261, 410, 139, 419, 115, 265,
	157, 472, -335, -335, 473, -272, -334, -334, 471, 480,
	473, -255, 477, -254, -334, -270, -270, 473, 474, -270,
	-259, 471, 471, 477, 473, -351, -352, 120, -334, 402,
	402, 402, 402, 472, 473, 474, -453, 282, 472, 472,
	473, 473, 477, 473, 449, 449, 473, 473, 473, -334,
	473, 473, 473, 473, 35, 477, 477, 477, 473, 477,
	477, 477, 473, 473, 157, 473, 473, -306, 294, 473,
	11, 12, 463, 464, 465, 466, 152, 467, 468, 461,
	462, 460, 453, 454, 455, 77, 238, 339, 14, 15,
	16, 203, 179, -335, -335, -335, 473, -338, -339, 157,
	154, 35, -301, -301, -301, 473, 157, -270, 473, 473,
	472, 473, -328, -327, 441, -371, -263, 2, -363, -208,
	-406, -328, -328, -270, -334, 209, 209, -294, 428, 271,
	-296, -363, -357, -402, -333, -332, 155, 36, 113, 254,
	175, -357, -206, -251, -357, -357, -406, -358, -358, -356,
	473, -461, -402, 473, -264, -366, -441, -255, 474, -149,
	-406, -140, 5, 261, -140, -140, -140, -259, 24, 295,
	-378, 470, 471, 8, 472, -400, -400, -400, -259, 157,
	-403, -321, 416, 74, 311, 398, -403, -172, 322, -200,
	-200, -213, 257, -325, 172, -178, 257, -378, -207, -186,
	472, 472, 214, 214, -200, -207, 214, 172, -200, 172,
	-207, -207, -470, 311, 266, -334, 230, 309, 258, -173,
	322, -97, -97, -97, 472, -477, 428, 114, -213, -229,
	-213, -217, 322, 255, -224, -401, -401, -288, 322, -215,
	-197, -174, -97, -97, -97, 472, -198, -175, 322, -191,
	-411, 261, 424, -468, -149, 157, -146, 465, -186, 437,
	-186, -234, -237, -235, -200, -154, 445, 443, 127, -228,
	-213, 470, -149, -411, -213, -221, 127, -251, 257, -411,
	2, 472, 2, -213, 127, 271, 257, -180, 121, -495,
	455, -197, -328, -263, -286, -319, 330, 271, -252, 433,
	-206, -286, -265, 477, 157, 455, 474, -252, 2, -176,
	-176, -176, -176, -176, -79, -79, -149, 477, 472, 455,
	455, 472, -411, -411, 473, 477, -213, -199, 185, 185,
	-205, -187, 473, 477, 474, 472, -149, 157, -45, 443,
	388, 476, -292, -292, -292, 357, 357, -186, -209, -197,
	-213, -210, -229, 154, 154, 422, -314, 272, 234, -360,
	-171, 263, -213, 476, -334, -334, 124, 124, -334, -335,
	-335, -334, 124, 157, 472, -334, -344, 30, 30, 473,
	477, -330, -334, 473, 436, -255, -255, 473, 465, -406,
	476, 473, -342, 122, -334, 396, 245, 171, 244, -305,
	244, -305, -305, -400, 5, -406, 465, -454, -203, 472,
	-186, 441, -254, -400, -381, -381, 473, -393, -378, -334,
	-334, -334, -334, -334, -334, -338, -334, -393, -378, -335,
	-335, -335, -335, -335, -335, -335, -335, -335, -335, -335,
	-335, -335, -335, -335, -335, -335, -335, -335, 115, 257,
	265, -335, -339, -338, -334, -334, -378, 473, 473, 473,
	-270, -79, -282, 164, -334, -374, 477, -282, -282, 473,
	-363, -363, 472, -334, 209, 471, 477, 479, 455, -251,
	474, -356, -357, 471, 473, 477, 473, 477, -318, 35,
	473, -406, 274, 5, 8, 470, 471, -400, 473, 473,
	473, -259, -334, 402, 402, 127, 257, 430, -426, -421,
	-334, -257, -361, -334, 472, 472, -169, 119, 360, -479,
	2, 428, 127, -176, 127, -176, 447, 472, 472, 402,
	443, -270, -334, -150, 108, -405, -472, 476, -472, 476,
	402, 402, 443, -270, 402, -411, 261, -412, -149, 2,
	2, 2, 473, 473, 477, -427, 35, 269, 472, 269,
	-213, -63, 443, -373, -402, -215, 35, 127, -468, 2,
	-309, 428, -198, -213, 127, -181, 221, -495, -409, -442,
	-255, -286, -277, 258, 81, 473, -328, -279, -263, -334,
	2, 473, -147, -148, -411, -411, -411, -149, -151, -151,
	-326, 2, 472, -199, -187, 472, -151, -201, 2, -412,
	-97, 275, -213, 465, -292, -243, -242, 289, 265, -243,
	337, 337, 272, 148, 218, -170, -198, -334, -334, 124,
	30, 30, -334, -334, -344, 473, -334, -334, -270, 471,
	5, -334, 473, 473, 8, -334, 473, 474, -455, -186,
	-334, 473, 473, 473, 473, 477, 477, 473, 473, 473,
	473, -339, 157, 115, 265, 472, 473, 473, -341, 167,
	53, -363, -341, -341, -294, -259, -363, -332, -198, 470,
	-406, -402, -366, 472, 474, 471, 2, 470, 473, -200,
	-200, -325, 127, -428, 82, -430, 68, 140, 88, 257,
	261, 418, 302, 65, 108, 315, 35, 473, 473, 477,
	-170, -257, -259, 257, 381, 108, 257, 108, 101, 413,
	71, -200, -207, -259, -259, -213, 133, 473, 477, 455,
	2, 465, 465, -217, -215, 133, 473, -198, -239, 188,
	-200, -425, -422, -423, 302, -429, -431, 140, 302, -97,
	-153, -152, -186, 5, 2, 472, -236, 275, 471, -289,
	-97, -217, 472, -186, 271, 472, -198, -182, 220, -495,
	-409, -179, -312, -310, -317, 472, 271, -97, -255, 455,
	473, 473, 101, 101, -257, 472, 472, -259, 101, 473,
	-46, -47, 185, 82, 293, -210, 388, 185, 472, 472,
	-170, -334, -334, -334, 473, -255, -406, 465, -449, 289,
	473, -334, -334, -335, 157, 472, -344, -450, 442, -334,
	-270, -450, -450, 473, -402, 2, 470, 2, -325, -207,
	-211, -204, -186, 140, 172, 261, 214, 472, -335, -213,
	472, 2, -487, 110, 189, -324, -488, 87, 382, -361,
	-171, 473, 473, 261, 261, -334, -378, 472, -176, -176,
	473, 473, -334, 402, -405, 86, -403, 2, -472, -334,
	402, -240, -241, 179, -427, 214, -204, 214, -486, 443,
	473, 477, 455, 455, -234, -154, -64, -65, 403, -373,
	-251, -257, -213, -257, 271, -495, -409, -180, -286, 116,
	-259, 82, -312, -340, -149, 472, 472, 473, -257, -257,
	473, 472, -149, 477, 26, 472, 26, 472, -213, -229,
	-270, -270, 473, -255, 53, 473, 473, -335, -344, 473,
	-451, -452, -203, 471, 2, -430, -204, 257, 428, -334,
	-188, 472, -334, 189, 111, 177, -239, 472, -323, 428,
	315, -196, 68, -257, 472, 472, 472, 455, 157, 472,
	-154, 287, 472, -238, 271, 101, 251, -152, -337, -337,
	473, 35, -65, 9, 35, 473, -309, 473, -213, -409,
	-181, 422, 258, 473, -207, -286, -412, -412, -323, 473,
	473, -412, -47, -259, -259, 473, 473, -456, 309, 338,
	166, -270, 473, 477, 35, 127, 168, 473, -432, 239,
	-186, 473, 111, 177, -240, -259, -239, 168, -213, -473,
	428, -211, 473, -245, -244, -242, -247, -246, -242, -270,
	-403, 86, 287, -270, -238, -213, -258, -362, -200, 73,
	101, -239, -97, -97, -323, 472, -324, 472, -182, 360,
	-327, 473, 473, -324, -323, 473, 473, 473, 473, -457,
	-458, 43, 415, 92, -334, -457, -457, -452, -454, 140,
	443, -433, -436, -435, 271, 366, 158, 288, 473, 381,
	439, -487, 473, 443, -251, -334, -323, 473, 477, 433,
	473, 477, 433, 473, 157, 473, 472, 473, 477, 301,
	112, 119, -240, -486, -324, -257, -239, -257, -278, -149,
	-149, -239, -324, -149, -459, 126, -458, 298, 153, 337,
	298, 153, -459, -459, -204, 47, -435, 271, -436, 271,
	422, 112, 47, -432, -239, -244, 179, -246, 157, 287,
	-259, -362, 338, 338, 2, -154, -238, -239, 473, -240,
	473, -328, -240, -239, 92, 164, 397, 251, 30, 455,
	-434, 251, 328, 58, 360, -434, 455, -433, 472, 472,
	473, 2, -238, -240, -323, -491, 441, -324, -240, 337,
	279, -458, -334, 22, 261, 108, -334, -487, -270, -270,
	-177, 58, 328, -491, -324, 2, -239, 473, 473, -239,
	-240, -240, 402, -240, -491, 472, -491, -270, 473, -240,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 5, 6, 8, 10,
	12, 14, 16, 18, 20, 22, 23, 363, 364, 366,
	367, 368, 370, 371, 373, 375, 377, 379, 380, 382,
	384, 386, 387, 388, 389, 390, 392, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 452, 454,
	0, 957, 959, 961, 963, 25, 26, 0, 0, 190,
	192, 194, 0, 219, 221, 222, 224, -2, 0, 320,
	321, 323, -2, -2, 0, 0, 441, 443, 0, 0,
	0, 463, 464, 0, 1045, -2, 457, 459, 461, 526,
	528, 530, 532, 534, 536, 538, 539, 541, 543, 545,
	547, 549, 551, 553, 554, 556, 558, 560, 562, 564,
	566, 568, 570, 572, 574, 576, 578, -2, -2, -2,
	0, -2, -2, -2, 975, 29, 31, 33, 35, 37,
	39, 41, 272, 273, 275, 277, 279, 281, 284, 285,
	287, 1100, 325, 327, 329, 331, 333, 0, -2, 1112,
	0, 0, 43, 44, 45, 46, 47, 48, 49, 50,
	66, 67, 68, 69, 70, 71, 72, 73, 54, 56,
	57, 61, 62, 64, 52, 0, 0, 1076, 1078, 1080,
	1082, -2, 0, 0, 7, 9, 11, 13, 15, 17,
	19, 21, 365, 369, 372, 374, 376, 378, 381, 383,
	385, 391, 393, 395, 842, 1736, 1750, 1751, 1752, 1755,
	1756, 1757, 1758, 1759, 1760, 2111, 2191, 2192, 1779, 1780,
	1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790,
	1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800,
	1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810,
	1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820,
	1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830,
	1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840,
	1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850,
	1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860,
	1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870,
	1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880,
	1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890,
	1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900,
	1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910,
	1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920,
	1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930,
	1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940,
	1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950,
	1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960,
	1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970,
	1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980,
	1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990,
	1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
	2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
	2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020,
	2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030,
	2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040,
	2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050,
	2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060,
	2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070,
	2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080,
	2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090,
	2091, 2092, 0, 419, 417, 1729, 420, 1940, 422, 424,
	314, 315, 316, 317, 318, 319, 0, 434, 428, 433,
	435, 437, 438, 439, 440, 414, 412, 0, 434, 1782,
	432, 955, 956, 950, 951, 1975, 982, 453, -2, -2,
	-2, 2079, -2, 485, -2, 492, 2082, 1977, 497, 0,
	499, -2, 502, 958, 960, 962, 27, 28, 0, 0,
	0, 0, 0, 0, 0, 0, 891, 892, 893, 0,
	0, 154, -2, -2, -2, -2, 0, 0, 1822, 1697,
	1752, 1700, 1695, 191, 193, 195, 196, 0, 0, 0,
	0, 0, 0, 220, 223, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 753, 745, 746, 927, 0,
	0, 0, 0, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 0, 0, 0, 0, 0, 250,
	355, 356, 0, 1101, 1101, 0, 0, 0, 0, 171,
	162, 0, 0, 722, 442, 444, 0, 0, 157, 0,
	0, 954, 0, 173, 0, 0, 458, 460, 462, 527,
	529, 531, 533, 535, 537, 540, 542, 544, 546, 548,
	550, 552, 555, 557, 559, 561, 563, 565, 567, 569,
	571, 573, 575, 577, 579, 580, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, -2, -2, -2,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	583, 585, 586, 587, 0, 638, 655, 0, 882, 1102,
	984, 965, 979, 984, 967, 968, 969, 970, 971, 976,
	978, 972, 973, 974, 30, 32, 34, 36, 38, 40,
	42, 274, 276, 278, 280, 282, 286, 288, -2, 1074,
	1075, 326, 328, 330, 332, 334, 445, 0, 447, 0,
	584, -2, 0, 1106, 1106, 1106, 0, 0, 1075, 1073,
	0, 450, 451, 506, 507, 1344, 0, 0, 0, 0,
	0, 1594, 1428, 0, 508, -2, 1459, 1461, 2058, 2079,
	1593, 1463, 1464, 1465, 1466, 1467, 0, 0, 1470, 1471,
	1472, 1473, 1474, 0, 1476, 0, 1481, 1482, 1483, 0,
	2063, 1674, 1748, -2, 1247, 1248, 1249, 1250, 1251, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 2069, 1744, 0, 1560,
	1497, -2, 1769, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1831, -2, -2, -2, -2,
	-2, -2, -2, 1303, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 2093, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 0, 2047, 2064, 2065, 2070,
	2072, 2066, 2055, 1522, -2, 2094, 2095, 2096, 2097, 2098,
	2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108,
	2109, 1304, -2, 2059, 2060, 2075, 2076, 2081, 2086, 2087,
	2062, 2071, -2, -2, 1092, 1950, 1095, 842, 1093, 1077,
	1079, 0, 1081, 0, 0, 0, 1086, 1109, 1107, 0,
	1148, 1090, 1091, 1166, 1166, 1190, 0, 1171, 0, 1190,
	1101, 1216, 0, 1177, 1970, 1498, 1499, 0, 1752, 1749,
	-2, 0, 0, 0, 0, 0, 0, 0, 415, 0,
	421, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	981, 455, 456, 0, 480, 0, 484, 2054, -2, 1787,
	1990, -2, 488, 985, 989, 990, 991, 992, 0, 0,
	0, 0, 0, 494, 0, 0, 481, 482, 500, 503,
	0, 51, 0, 2064, 1216, 53, 0, 1719, 1774, 1775,
	1776, 1777, 1778, 2093, 2110, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186,
	2187, 2188, 2189, 2190, 55, 0, 2064, 58, 0, 2064,
	0, -2, 63, 0, 1725, 65, 0, 1722, 74, 0,
	2064, 0, 1694, -2, -2, 2064, 890, 174, 175, 1765,
	1766, 1770, 1771, 1772, 1773, 1203, 158, 0, 0, 0,
	714, 1691, 1696, 715, 1701, 0, 197, 198, 199, 200,
	201, 2064, 203, 204, 0, 206, 207, 2064, 209, 210,
	0, 212, 226, 227, 0, 229, 0, 2064, 0, 0,
	0, 235, -2, 251, 0, 248, 0, 239, 240, 242,
	243, 244, 245, 0, 292, 290, 1730, 0, 723, 2064,
	725, 1735, 0, 0, 911, -2, 2064, 887, 916, 1733,
	0, -2, 0, 1099, 2064, 999, 749, 750, 751, 752,
	0, 311, 0, 1012, 0, 1014, 0, 1035, 1222, 1166,
	1166, 0, 252, 253, 254, 255, 256, 2064, 0, 0,
	0, 261, 0, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 149, 2064, 337, 353, 149, 2064, 340, 149,
	2064, 343, 149, 2064, 346, 1689, 149, 2064, 349, 350,
	2064, 352, 176, 0, -2, 408, 1738, -2, 358, 0,
	359, 0, -2, 0, 188, 0, 0, 720, 721, 1203,
	160, 0, 952, 953, 0, 0, 465, 0, 0, 581,
	582, 0, 0, 592, 593, 594, 188, 1978, 1948, 1847,
	599, 0, 602, 605, -2, 0, 0, 0, 0, 609,
	0, 614, 615, 616, 0, 719, 618, 0, 0, 620,
	0, 624, 0, 627, 0, 629, 0, 631, -2, -2,
	-2, 642, -2, 0, 646, 0, 648, 0, 0, 0,
	0, 663, 664, 0, 669, 0, 672, 673, 674, 675,
	676, 0, 678, 679, 680, 681, 0, 683, 684, -2,
	-2, 688, 690, 0, 697, 0, 701, 0, 705, 0,
	588, 589, 149, 1220, 964, -2, 966, 0, -2, 0,
	446, 0, 449, 1127, 1060, 1057, 0, 1124, 1125, 1061,
	0, 0, 0, 1068, 0, 1104, 1105, 0, 0, 0,
	1047, 1048, 0, 0, 0, 0, 1599, 1600, 1601, 1602,
	1603, 1604, 1607, 1608, 1605, 1606, 1609, 1610, 0, 0,
	0, 0, 0, 1611, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1612, 1613, 1614, 0, 0,
	1616, 0, 1618, 0, 0, 0, 0, 0, 0, 1407,
	1409, 1682, 0, 0, 1615, 1349, 1350, 1351, 1386, 1387,
	0, 0, 1460, 1679, 1678, 1462, 0, 1630, 0, 1469,
	1475, 1715, -2, 0, 1594, 1625, 0, 0, 1484, 1485,
	1486, 0, 0, 1630, 0, 0, 1673, 1341, 0, 0,
	1562, 0, 1283, 0, 1284, 1285, 0, 1286, 1287, 1300,
	1313, 0, 0, 0, 0, 1317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1305, 0, 0, 0, 1654, -2,
	0, 0, 0, 0, 0, 1094, 0, 0, 1152, 1683,
	1687, 1688, 1152, 1152, 0, 0, 1631, 1213, 1213, 0,
	0, 1209, 1209, 1209, 1207, 1190, 0, 1190, 1200, 0,
	1190, 1190, 0, -2, 1171, 0, 0, 1200, 0, 1184,
	396, 398, 400, 402, 403, 404, 406, 1217, 1218, 0,
	0, 0, 0, 0, 0, 1753, 0, 0, 0, 1740,
	0, 0, 0, 0, 426, 436, 1101, 0, 1633, 1239,
	1242, 1243, 1244, 1245, 1246, 1252, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, -2, 1301, 1303, 1324, 1290, 1291, 1292, 1293,
	1294, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1296, 0, 1271, 1271, 1271, 1288, 1289, 1312,
	1323, 1315, 1323, 1319, 1240, 1241, 1306, 1307, 1308, 1309,
	0, 430, 0, 0, 0, 0, -2, 490, 495, 496,
	0, 0, 987, 0, 993, 517, 518, 519, 995, 996,
	0, 493, 520, 521, 522, 523, 524, 525, 0, 1703,
	1704, 1705, 1706, 1709, 1710, 0, 0, 491, 510, 498,
	0, 504, 75, 947, 114, 0, 947, 947, 0, 0,
	136, 0, 0, 0, 0, 0, 0, 99, 110, 87,
	88, 0, 0, 0, 0, 59, 864, 0, 867, 0,
	0, 0, 0, 0, 0, 0, 880, 0, 0, 98,
	0, 93, 77, 0, 0, 0, 100, 112, 0, 140,
	142, 0, 0, 888, 0, 1098, 0, 179, 1202, 0,
	1203, 713, 0, 0, 1753, 1699, 0, 0, 0, 0,
	228, 230, 0, 232, 233, 234, 0, 910, 0, 241,
	238, 283, 814, 2064, 0, 0, 309, 304, 0, 306,
	0, 863, 2064, 861, 1734, 0, 885, 0, 0, 0,
	917, 0, 2064, 922, 1721, 1761, 1762, 1001, 0, 313,
	0, 1015, 1017, 0, 0, 1223, 0, 1225, 1226, 0,
	258, 259, 260, 0, 335, 0, 147, 148, 0, 338,
	0, 341, 0, 344, 0, 0, 347, 0, 0, 0,
	1101, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 188, 0, 1203, 188, 188, 1203, 467, 1203,
	469, 0, 0, 595, 188, 188, 188, 600, 601, 603,
	604, -2, -2, 698, 606, 607, 666, 0, 0, 0,
	665, 617, 0, 707, 1966, 717, 666, 1822, 666, 1822,
	666, 1822, 628, 630, 633, 658, 641, 645, 0, 0,
	0, 650, 0, 652, 0, 654, 666, 667, 670, 677,
	682, 0, 0, 0, 0, 0, 0, 0, 881, 0,
	977, 1127, 1060, 448, 1051, 1126, 1052, 1059, 1062, 0,
	0, 1064, 0, 1066, 0, 1122, 1123, 1130, 1131, 0,
	1141, 1142, 1134, 0, -2, 0, 0, 1137, 1138, 1070,
	0, 1087, 1088, 1089, 1113, 1114, 936, 0, 2191, 1345,
	1234, 1346, 1347, 1718, 0, 1352, 1353, 1354, 1355, 1356,
	1357, 1358, 1359, 1360, 1361, -2, -2, -2, -2, -2,
	-2, -2, -2, 1370, 1371, 1372, 1373, 1374, 1375, 1376,
	1377, 1378, 1379, 1380, -2, -2, -2, 1384, 1385, -2,
	1617, 1619, 0, 1682, 0, -2, 0, -2, -2, -2,
	-2, 1404, 0, 1406, 1411, 1413, 1415, 0, 0, 0,
	0, 1681, 1425, 1665, 1666, 0, 0, 1596, 1597, 1598,
	1410, 0, 1429, 1680, 1677, 0, 0, 1629, 1112, 1488,
	0, 0, 0, 0, 1495, 1480, 1627, 0, 1626, 0,
	0, 0, 1637, 0, 1672, 1668, 0, 1716, 1340, 1327,
	1328, 1329, 1330, 1331, 1332, 1342, 0, 1713, 1741, 1747,
	1570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1523, 1524, 1525, 1526, 1527, 0, 1529, 1530,
	0, 1532, 1533, 0, 1535, 1536, 0, 1538, 1539, 1540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1542,
	0, 1640, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 1544, 0, 1546, 1631, 1651, 0, 0, 1430, 0,
	0, 0, 1594, 0, 1549, 1631, 1659, 0, 0, 0,
	0, 0, 1631, 0, 1664, 0, 1556, 0, 1558, 1096,
	0, 0, 1229, 0, 0, 0, 1686, 1229, 1229, 0,
	1147, 0, 0, 1210, 1211, 1212, 0, 0, 1213, 0,
	1204, 1208, 1205, 1206, 1200, 1163, 0, 0, 1720, 1200,
	1169, 1199, 0, 842, 1189, 1200, 1200, 0, -2, 1173,
	1190, 0, 0, 397, 399, 401, 405, 407, 0, 0,
	1112, -2, 188, 841, 0, 0, 0, 0, 0, 416,
	418, 0, 0, 410, 0, 413, 0, 1230, 1233, 0,
	0, -2, 0, 0, 1325, 0, 0, 0, 0, 483,
	0, 986, 994, 0, 514, 0, 516, 0, 1707, 1711,
	1708, 1712, 0, 505, 0, 0, 0, 0, 946, 118,
	2064, 0, 151, 0, 0, 808, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 89, 0, 0, 0, 0, 0,
	0, 0, 865, 866, 868, 875, 877, 0, 871, 1714,
	0, 0, 872, 0, 874, 876, 878, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 90, 0, 0, 0,
	0, 1693, 906, 904, 898, 899, 900, 901, 902, 903,
	0, 0, -2, 188, 0, 159, 179, 1692, 1702, 0,
	202, 205, 208, 211, 0, 236, 0, 0, 755, 728,
	0, 0, 291, 188, 0, 0, 305, 0, 859, 862,
	0, 842, 2064, 897, 1732, 0, 0, 0, 0, 915,
	0, 0, 0, 2064, 1003, 1009, 0, 1229, 0, 1033,
	1018, 0, 0, 0, 1033, 1037, 1038, 1040, 1041, 0,
	0, 1224, 0, 262, 354, 149, 149, 149, 1690, 149,
	149, 177, 351, 357, 409, 1101, 1101, 188, 186, 1925,
	184, 181, 183, 0, 0, 0, 756, 758, 759, 760,
	761, 0, 1762, 0, 1876, 1762, 0, 1021, 1023, 0,
	155, 161, 188, 0, 303, 466, 471, 590, 0, 596,
	597, 598, 635, 660, 608, 610, 611, 612, 0, 718,
	716, 619, 666, 622, 666, 625, 666, 644, 647, 649,
	0, 0, 0, 662, 0, 0, 0, 0, 0, 0,
	0, 702, 703, 704, 706, 1221, 1055, 1056, 1058, 0,
	1067, 0, 0, 1136, -2, -2, 1135, 1139, 1140, -2,
	-2, -2, -2, 1063, 0, 1072, 1069, 0, 1121, 934,
	935, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	1426, 0, -2, 1405, 1408, 1412, 1414, 1416, 0, 0,
	0, 0, 0, 0, 1620, 0, 1622, 1427, 1675, 1678,
	1592, 0, 0, 1111, 1112, 1112, 0, 1494, 0, 1628,
	0, 1635, 1636, 0, 1487, 0, 1669, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1496, 0, 0, 0,
	1295, 1269, 0, 1323, 1321, 1322, 1316, 1323, 1320, 0,
	1528, 1531, 1534, 1537, 0, 0, 0, 0, 1517, 0,
	0, 0, 1521, 1541, 0, 1543, 1545, 0, 0, 1547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1433, 1434, 1435, 1548, 1657, 1658, 0,
	0, 0, 0, 0, 0, 1554, 0, 1663, 1555, 1557,
	1101, 1149, 1144, 1228, 0, 1684, 1203, 1151, 1153, 1685,
	1723, 1144, 1144, 0, 1632, 0, 0, 1194, 0, 0,
	0, 1196, 1167, 0, 0, 1161, 0, 1157, 1158, 1159,
	1160, 1168, 842, 1198, 1170, 1174, 1741, 0, 1200, 0,
	1185, 0, 1187, 1219, 0, 1179, 1182, 0, 0, 189,
	1754, 213, 217, 218, 214, 215, 216, 425, 0, 0,
	1634, 0, 1235, 0, 0, 0, 0, 0, 429, 0,
	479, -2, 512, 513, 515, 0, 511, 115, 947, 0,
	0, 938, 0, 120, 2064, 129, 0, 784, 0, 1724,
	0, 0, 0, 0, 949, 0, 0, 2064, 149, 2064,
	149, 132, 135, 0, 139, 137, 0, 0, 775, 76,
	947, 79, 83, 91, 0, 0, 0, 97, 0, 0,
	0, 940, 0, 869, 870, 873, 879, 60, 0, 942,
	937, 141, 81, 85, 92, 0, 944, 78, 0, 905,
	883, 884, 0, 889, 152, 0, 188, 1698, 0, 0,
	0, 0, 0, 754, 825, 0, 0, 0, 0, 297,
	293, 0, 302, 308, 307, 724, 0, 0, 0, -2,
	912, 0, 914, 926, 0, 0, 0, 1005, 1009, 0,
	1008, 1099, 1112, 312, 1010, 1033, 0, 0, 0, 1020,
	1016, 1013, 1229, 0, 0, 0, 0, 0, 257, 336,
	339, 342, 345, 348, 360, 361, 163, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 1762, 1762,
	0, 1728, 0, 0, 0, 0, 156, 0, 468, 0,
	0, 0, 621, 623, 626, 651, 653, 666, 691, 692,
	770, 0, 770, 0, 0, 1065, 0, 1133, 1071, 1115,
	1116, 0, 936, 0, 1348, 1389, 0, 0, -2, 0,
	0, 1393, 0, 0, 0, -2, 0, 0, 0, 1621,
	1623, 0, 1677, 1489, 0, 0, 0, 1493, 1477, 1478,
	0, 1595, 1638, 1667, 1671, 0, 1333, 1334, 1335, 1336,
	1337, 1338, 1339, 0, 1717, 1742, 1746, 1568, 1569, 1573,
	1731, 0, 0, 0, 1314, 1318, 1500, 0, 0, 0,
	0, 0, 0, 0, 1639, 1650, 1652, 1431, 1432, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, -2,
	-2, -2, 1449, 1450, 1451, -2, -2, -2, 0, 0,
	0, 1653, 1655, 1656, 1660, 1661, 0, 1551, 1552, 1553,
	1662, 0, 1146, 0, 1227, 1150, 0, 1146, 1146, 1108,
	1192, 0, 0, 1215, 0, 1164, 0, 1165, 0, 1197,
	0, 1172, 1175, 1176, 1186, 0, 1178, 0, 1181, 0,
	1489, -2, 427, 411, 0, 0, 1237, 0, 1298, 1302,
	1326, 431, 1201, 0, 0, 0, 0, 150, 782, 807,
	0, 0, 929, 936, 0, 0, 122, 0, 0, 0,
	130, 0, 0, 127, 0, 134, 138, 0, 0, 0,
	0, 0, 94, 95, 96, 0, 101, 0, 102, 0,
	0, 0, 0, 0, 0, 908, 909, 178, 153, 231,
	896, 237, 764, 813, 0, 815, 0, 729, 0, 0,
	814, 289, 0, 296, 0, 863, 0, 0, 886, 913,
	0, 0, 0, 0, 0, 1007, 1009, 0, 1000, 1001,
	1129, 1011, 1031, -2, 1030, 0, 1112, 1039, 1036, 1042,
	1043, 0, 185, 0, 180, 182, 0, 166, 0, 0,
	757, 762, 0, 0, 0, 0, 0, 1022, 1024, 0,
	172, 0, 591, 613, 661, 693, 769, 0, 0, 695,
	0, 0, 1132, 1119, 1120, 1117, 936, 1391, 1395, 0,
	0, 0, 1397, -2, 0, 1419, -2, -2, 1624, 1676,
	1468, 1112, 1490, 1492, 1479, 1670, 1343, 0, 1575, 1572,
	0, 1559, 1270, 1512, 1513, 0, 0, 1516, 1518, 1519,
	1520, 1649, 0, 0, 0, 0, 1550, 1097, 1564, 0,
	0, 1154, 1564, 1564, 1193, 0, 1195, 1162, 1155, 0,
	1742, 1188, 1180, 0, 0, 1231, 1236, 0, 1297, 116,
	117, 119, 0, 783, 0, 786, 0, 0, 0, 0,
	793, 794, 0, 0, 0, 0, 0, 829, 838, 0,
	1121, 0, 0, 0, 124, 144, 0, 0, 948, 0,
	0, 149, 149, 0, 0, 939, 0, 0, 0, 0,
	104, 0, 0, 941, 943, 0, 0, 945, 772, 0,
	825, 817, 818, 819, 0, 824, 826, 0, 0, 742,
	0, 738, 0, 0, 731, 755, 728, 0, 294, 860,
	894, 842, 0, 925, 0, 0, 0, 997, 1009, 0,
	1002, 1003, 1033, 1128, 0, 0, 0, 1019, 1129, 0,
	187, 188, 0, 0, 0, 0, 0, 0, 0, 188,
	470, 472, 0, 0, 478, 768, 0, 0, 0, 0,
	1118, 1399, -2, -2, 1420, 0, 1743, 1745, 1112, 0,
	1561, 0, 0, -2, 0, 0, 0, 1083, 0, 1145,
	1143, 1084, 1085, 1214, 0, 1183, 0, 1238, 121, 0,
	787, 788, 1727, 790, 0, 792, 795, 0, 798, 1764,
	0, 802, 809, 830, 0, 764, 0, 835, 836, 930,
	931, 840, 0, 123, 125, 143, 933, 0, 126, 133,
	0, 0, 80, 0, 0, 1815, 107, 105, 103, 82,
	0, 728, 771, 0, 816, 0, 827, 828, 732, 0,
	730, 0, 0, 0, 0, 0, 295, 298, 0, 301,
	0, 0, 926, 0, 0, 0, 1004, 1005, 310, 0,
	0, 0, 1033, 1044, 165, 0, 0, 840, 0, 0,
	806, 0, 170, 0, 474, 0, 476, 0, 694, 696,
	0, 0, 1491, 1579, 0, 1514, 1515, -2, 0, 1457,
	1563, 1565, 0, 1156, 1232, 785, 789, 0, 0, 0,
	846, 0, 0, 0, 833, 834, 772, 0, 764, 0,
	0, 146, 0, 0, 0, 0, 0, 0, 0, 0,
	732, 0, 0, 740, 0, 743, 0, 739, 736, 737,
	764, 0, 299, 300, 0, 840, 0, 838, 0, 1006,
	1007, 0, 1026, 1027, 1029, 1034, 0, 0, 838, 840,
	805, 0, 473, 0, 0, 699, 700, 0, 0, 0,
	0, 1574, 1458, 0, 0, 0, 0, 797, 851, 0,
	0, 0, 831, 832, 829, 0, 811, 0, 842, 128,
	0, 932, 840, 0, 776, 0, 0, 779, 0, 0,
	108, 1815, 106, 0, 726, 0, 0, 821, 823, 0,
	744, 772, 742, 895, 838, 0, 764, 0, 998, 0,
	1028, 188, 188, 764, 838, 188, 475, 477, 1571, 1591,
	1580, -2, 2026, 1819, 0, 1591, 1591, 1566, 1567, 0,
	0, 799, 847, 848, 0, 843, 844, 845, 1763, 800,
	801, 810, 837, 0, 846, 145, 764, 773, 0, 0,
	774, 0, 0, 111, 0, 113, 0, 820, 0, 0,
	0, 0, 728, 732, 764, 0, 772, 0, 1229, 167,
	168, 772, 764, 169, 1576, 0, 0, 1582, 1583, 1584,
	1585, 1586, 1577, 1578, 791, 0, 849, 0, 850, 0,
	0, 0, 0, 851, 131, 777, 0, 780, 0, 109,
	0, 822, 733, 0, 735, 732, 741, 772, 840, 923,
	838, 1025, 803, 772, 0, 1588, 1589, 0, 0, 0,
	852, 0, 855, 856, 0, 853, 0, 829, 0, 0,
	767, 734, 727, 923, 838, 920, 0, 764, 804, 1587,
	1590, 1581, 796, 854, 857, 858, 839, 812, 0, 0,
	763, 765, 766, 918, 764, 924, 772, 772, 0, 772,
	923, 778, 0, 923, 921, 0, 919, 0, 772, 781,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 461, 3, 467, 462, 3,
	472, 473, 465, 463, 477, 464, 474, 466, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 480, 3,
	453, 455, 454, 458, 476, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 470, 3, 471, 468, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 478, 460, 479, 456,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 457, 57796, 459, 57797, 469, 57798, 475, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1120
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1125
		{
			return helpWith(sqllex, "")
		}
	case 7:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1129
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1130
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1131
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1132
		{
			return helpWith(sqllex, "GRANT")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1133
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1134
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1135
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1136
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1140
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1149
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1150
		{
			return helpWith(sqllex, "ALTER")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1153
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1154
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1155
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1156
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1157
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1158
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1159
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1213
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1239
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1265
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1269
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 60:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1273
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1287
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1306
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1338
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1342
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 76:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1346
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 77:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1352
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 78:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1356
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1362
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 80:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1371
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1382
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1386
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1392
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1400
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1410
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1414
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1424
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1435
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1442
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1454
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1461
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1469
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1474
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1478
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1483
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1489
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1497
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1508
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 101:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1518
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 102:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1528
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 103:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1537
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 104:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1548
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 105:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1554
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1562
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1566
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1570
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 109:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1574
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1580
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1585
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1596
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1600
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1606
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1610
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1617
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1622
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1627
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1632
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1637
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1642
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1647
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1652
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1657
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1662
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1667
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1676
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1688
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.colType(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1698
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1705
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 131:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1709
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1717
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1724
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1742
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1747
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1754
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1762
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1763
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1767
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1771
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1777
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1785
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = nil
		}
	case 145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1795
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 146:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1799
		{
			sqlVAL.union.val = nil
		}
	case 147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1806
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1814
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1820
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1824
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1850
		{
			sqlVAL.union.val = &tree.Backup{DescriptorCoverage: tree.AllDescriptors, To: sqlDollar[3].union.partitionedBackup(), IncrementalFrom: sqlDollar[5].union.exprs(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = &tree.Backup{Targets: sqlDollar[2].union.targetList(), To: sqlDollar[4].union.partitionedBackup(), IncrementalFrom: sqlDollar[6].union.exprs(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[7].union.kvOptions()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1857
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1887
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1901
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1905
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1911
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1948
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1957
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1963
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1968
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1973
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1978
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1983
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1987
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2003
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2006
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2014
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2026
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2032
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2036
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2042
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2050
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2054
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2060
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2064
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2078
		{
			sqlVAL.union.val = nil
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2084
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2098
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2099
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2100
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2101
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2119
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2121
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2124
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2134
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2151
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2153
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2160
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2187
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2189
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2193
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2196
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2200
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2204
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2208
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2221
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2227
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2232
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2244
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2246
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2247
		{
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2248
		{
			return helpWith(sqllex, "CREATE")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2251
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2252
		{
			return unimplemented(sqllex, "create cast")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2253
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2254
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2255
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2256
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2257
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2258
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2259
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2260
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 236:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2261
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 237:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2262
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2263
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2264
		{
			return unimplemented(sqllex, "create operator")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2265
		{
			return unimplemented(sqllex, "create publication")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2266
		{
			return unimplemented(sqllex, "create rule")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2267
		{
			return unimplemented(sqllex, "create server")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2268
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2269
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2270
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2273
		{
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2274
		{
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2277
		{
		}
	case 249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2278
		{
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2281
		{
		}
	case 251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2282
		{
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2285
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2286
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2287
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2288
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2289
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2290
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2291
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 259:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2292
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2293
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2294
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2295
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2296
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2297
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2298
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2299
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2300
		{
			return unimplemented(sqllex, "drop server")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2301
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2302
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2303
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "drop type")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2304
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2308
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2309
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2310
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2311
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2312
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2314
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2315
		{
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2316
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2317
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 289:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2335
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2343
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2353
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2362
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2385
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2396
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2408
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2416
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2424
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2444
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2455
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2459
		{

			sqlVAL.union.val = nil
		}
	case 310:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2473
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2483
		{
			return helpWith(sqllex, "DELETE")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2486
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2487
		{
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2498
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2499
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2500
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2501
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2502
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2511
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2512
		{
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2513
		{
			return helpWith(sqllex, "DROP")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2516
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2517
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2518
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2519
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2520
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2528
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2535
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2543
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2547
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2550
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2558
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2562
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2565
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[3].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2581
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[5].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2588
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2596
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2604
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2611
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2619
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2626
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2630
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2635
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2658
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2665
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2667
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2675
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2683
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2691
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2699
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2710
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2714
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2717
		{
			return helpWith(sqllex, "DELETE")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2719
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2720
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2721
		{
			return helpWith(sqllex, "INSERT")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2722
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2724
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2725
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2726
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2729
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2734
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2735
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2736
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2741
		{
			return helpWith(sqllex, "DELETE")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2742
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2743
		{
			return helpWith(sqllex, "INSERT")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2745
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2749
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2750
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2754
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 410:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2768
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2776
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2784
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2788
		{
			sqlVAL.union.val = sqlDollar[2].union.colTypes()
		}
	case 414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2792
		{
			sqlVAL.union.val = []*types.T(nil)
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2802
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2809
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2817
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2835
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2839
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2843
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2847
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2850
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2870
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2874
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2878
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2881
		{
			return helpWith(sqllex, "GRANT")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2905
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2909
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2912
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2921
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2931
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2949
		{
			return helpWith(sqllex, "RESET")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2950
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2958
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2962
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2965
		{
			return helpWith(sqllex, "RESET")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2973
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2976
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2987
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2990
		{
			return helpWith(sqllex, "USE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2994
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2995
		{
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2996
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2997
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3001
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3002
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3003
		{
			return helpWith(sqllex, "USE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3019
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3037
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3055
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3063
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3067
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3071
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3077
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3087
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3095
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3099
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3103
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3114
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3117
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3127
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3143
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3147
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3152
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3169
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3172
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3177
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3181
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3200
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3207
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3212
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3217
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3222
		{
			return unimplemented(sqllex, "set from current")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3223
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3231
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3236
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3243
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3253
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3257
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3303
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3307
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3311
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = tree.Low
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = tree.Normal
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3325
		{
			sqlVAL.union.val = tree.High
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3340
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3344
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3353
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3366
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3367
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3368
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3369
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3370
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3373
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3374
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3375
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3376
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3377
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3379
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3385
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3386
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3387
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3391
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3392
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3394
		{
			return helpWith(sqllex, "SHOW")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3403
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.str = "client_encoding"
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3417
		{
			sqlVAL.str = "timezone"
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3418
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3432
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3436
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3440
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3451
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3459
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3467
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3475
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3484
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3493
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3501
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3511
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3515
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3518
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3523
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3525
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3529
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3532
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3540
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3543
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3551
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3555
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3559
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3563
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3566
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3577
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3590
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3598
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3606
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3609
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3615
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3628
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3631
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3642
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3644
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3647
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3655
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3658
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3663
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = true
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3669
		{
			sqlVAL.union.val = true
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = false
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3681
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3685
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3688
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3689
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3691
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3695
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3698
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3708
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3716
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3725
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3728
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3730
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3733
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3735
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3739
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3742
		{
			sqlVAL.union.val = true
		}
	case 656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3743
		{
			sqlVAL.union.val = false
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3751
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3754
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3756
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3759
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3767
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3777
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3790
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = true
		}
	case 666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3794
		{
			sqlVAL.union.val = false
		}
	case 667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3801
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3808
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3829
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3833
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3840
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3843
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3851
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3856
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3861
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3865
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3873
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3877
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3881
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3894
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3897
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3908
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3916
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3920
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3928
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3936
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3943
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3950
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3954
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3965
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3973
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3979
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3988
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3993
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4000
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4004
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4011
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 708:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4016
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4144
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4183
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4187
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4205
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4216
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4254
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4260
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4299
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:4314
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4331
		{
			sqlVAL.union.val = nil
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4335
		{

			sqlVAL.union.val = nil
		}
	case 730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4341
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4346
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4356
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 734:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4361
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4366
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4373
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4377
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4383
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 740:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4393
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
			}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4406
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
			}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4420
		{
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4421
		{
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4422
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = true
		}
	case 746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4441
		{
			sqlVAL.union.val = true
		}
	case 747:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4442
		{
			sqlVAL.union.val = false
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = true
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4447
		{
			sqlVAL.union.val = true
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = true
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = true
		}
	case 753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4450
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4455
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4477
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4480
		{
			return unimplementedWithIssue(sqllex, 30840)
		}
	case 763:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4484
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4500
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4505
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 767:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 770:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4523
		{
			sqlVAL.str = ""
		}
	case 772:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 773:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4536
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4550
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4556
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 778:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 781:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4586
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4600
		{
			typ := sqlDollar[2].union.colType()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, isSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 784:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4615
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4621
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4625
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4629
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4633
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4637
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4641
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4645
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4667
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4671
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4675
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4686
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4690
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4694
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4708
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 803:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4730
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
				},
			}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4743
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:     tree.Name(sqlDollar[3].str),
				Columns:  sqlDollar[5].union.idxElems(),
				Inverted: true,
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 809:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
				},
			}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4793
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4805
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4819
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 814:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4829
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4839
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4854
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4882
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4894
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 825:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4898
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4904
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4914
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4919
		{
		}
	case 830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4920
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4921
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4922
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4923
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4941
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4945
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 839:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4951
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4987
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4991
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4995
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5008
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5012
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5016
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5020
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5036
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5044
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5052
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5060
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5079
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5088
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5096
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5100
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5103
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5104
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5107
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.colType().SQLString())
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5108
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5112
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5122
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5125
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5127
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5129
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5131
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5132
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5134
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5135
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5137
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5139
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5147
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5150
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5154
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5158
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5172
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5175
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5183
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5187
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5190
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5196
		{
			sqlVAL.union.val = true
		}
	case 892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5200
		{

			sqlVAL.union.val = true
		}
	case 893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5205
		{
			sqlVAL.union.val = false
		}
	case 894:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5215
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5226
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5236
		{
			return unimplementedWithIssue(sqllex, 24897)
		}
	case 897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5237
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5245
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5265
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5271
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5275
		{
			sqlVAL.union.val = nil
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5285
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5290
		{
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5291
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5297
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 913:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5299
		{
			return unimplementedWithIssue(sqllex, 24873)
		}
	case 914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5301
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5303
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5305
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5307
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5323
		{
			table := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[4].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Columns:     sqlDollar[9].union.idxElems(),
				Sharded:     sqlDollar[11].union.shardedIndexDef(),
				Storing:     sqlDollar[12].union.nameList(),
				Interleave:  sqlDollar[13].union.interleave(),
				PartitionBy: sqlDollar[14].union.partitionBy(),
				Inverted:    sqlDollar[7].union.bool(),
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:5338
		{
			table := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[7].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Sharded:     sqlDollar[14].union.shardedIndexDef(),
				Storing:     sqlDollar[15].union.nameList(),
				Interleave:  sqlDollar[16].union.interleave(),
				PartitionBy: sqlDollar[17].union.partitionBy(),
				Inverted:    sqlDollar[10].union.bool(),
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5354
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[5].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				Columns:     sqlDollar[9].union.idxElems(),
				Storing:     sqlDollar[11].union.nameList(),
				Interleave:  sqlDollar[12].union.interleave(),
				PartitionBy: sqlDollar[13].union.partitionBy(),
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:5368
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[8].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Storing:     sqlDollar[14].union.nameList(),
				Interleave:  sqlDollar[15].union.interleave(),
				PartitionBy: sqlDollar[16].union.partitionBy(),
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5382
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5385
		{
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5386
		{
			return unimplementedWithIssue(sqllex, 9683)
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5390
		{

			switch sqlDollar[2].str {
			case "gin":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "gist", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5405
		{
			sqlVAL.union.val = false
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5411
		{
			sqlVAL.union.val = true
		}
	case 928:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5415
		{
			sqlVAL.union.val = false
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5421
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5425
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5434
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5456
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5457
		{
			sqlVAL.str = ""
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = tree.Descending
		}
	case 936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5469
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5475
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5481
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5487
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5495
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5501
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5509
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5515
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5523
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5527
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5532
		{
		}
	case 947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5533
		{
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5536
		{
		}
	case 949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5537
		{
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5548
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5567
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5570
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5581
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5585
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5586
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5587
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5606
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5611
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5624
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5626
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5629
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5633
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5638
		{
		}
	case 974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5639
		{
		}
	case 975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5640
		{
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5650
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5654
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5657
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5660
		{
		}
	case 980:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5661
		{
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5665
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5669
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5685
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5689
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5702
		{
		}
	case 988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5704
		{
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5708
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5713
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5721
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5727
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 997:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5753
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5773
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.str = ""
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5791
		{
			sqlVAL.str = ""
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.str = ""
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.str = ""
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5816
		{
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5817
		{
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5829
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5843
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5861
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5865
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5874
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5893
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5923
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5927
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5931
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5937
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5940
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5941
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5943
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5949
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5954
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5975
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5987
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5993
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5999
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6016
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6019
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6023
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6072
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6095
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6124
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6128
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6129
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6152
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6155
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6158
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6162
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6169
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6204
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6205
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6206
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6241
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6267
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6271
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6280
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6289
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6311
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6323
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6327
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6356
		{
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6357
		{
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6361
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6365
		{
			sqlVAL.union.val = nil
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6370
		{
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6371
		{
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6375
		{
			sqlVAL.union.val = true
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6379
		{
			sqlVAL.union.val = false
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6383
		{
			sqlVAL.union.val = false
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6389
		{
			sqlVAL.union.val = true
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6400
		{
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6401
		{
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6405
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6415
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6431
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6452
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6457
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6473
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6486
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6506
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6519
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6574
		{
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6575
		{
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6578
		{
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6579
		{
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6596
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6632
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6634
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6649
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6651
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6661
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6671
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6676
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6681
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6692
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6699
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6704
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6715
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6723
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6762
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6772
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6782
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6799
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6803
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6807
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6818
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6848
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6859
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6871
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6881
		{
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6883
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = nil
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6888
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6896
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = true
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6906
		{
			sqlVAL.union.val = false
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6926
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6930
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6942
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6946
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.str = tree.AstFull
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6986
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.str = tree.AstRight
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.str = tree.AstInner
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7000
		{
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7001
		{
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.str = tree.AstHash
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7026
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.str = ""
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7051
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7058
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7063
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7068
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7086
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7092
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7098
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7108
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7118
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7137
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.colType()
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7150
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7158
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7159
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7169
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7177
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7179
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7187
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = types.Jsonb
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = types.String
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7236
		{
			sqlVAL.union.val = types.Name
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7240
		{
			switch sqllex.(*lexer).nakedIntType.Width() {
			case 32:
				sqlVAL.union.val = &serial4Type
			default:
				sqlVAL.union.val = &serial8Type
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = &serial4Type
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = types.Uuid
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = types.INet
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7277
		{
			sqlVAL.union.val = types.Oid
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.union.val = types.OidVector
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = types.Int2Vector
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7289
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else {
				var ok bool
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						sqllex.Error("type does not exist")
						return 1
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7320
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7328
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7336
		{
			sqlVAL.union.val = nil
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = types.Int2
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = types.Int2
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = types.Int4
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = types.Int
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = types.Int
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = types.Int
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = types.Float4
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7379
		{
			sqlVAL.union.val = types.Float4
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = types.Float
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = types.Float
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7395
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7403
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7411
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = types.Bool
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = types.Bool
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = types.RegProc
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = types.RegProcedure
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7438
		{
			sqlVAL.union.val = types.RegClass
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = types.RegType
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = types.RegNamespace
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7452
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7465
		{
			sqlVAL.union.val = types.Float
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7471
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7477
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7485
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7489
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7499
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7511
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = types.String
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = true
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = false
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = types.Date
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7548
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7556
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7570
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7579
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7587
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7604
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = true
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7615
		{
			sqlVAL.union.val = false
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = false
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = types.Interval
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7624
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7628
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7655
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7663
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7671
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7712
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7727
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7743
		{
			sqlVAL.union.val = nil
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7749
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7757
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7794
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7798
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7806
		{

			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7819
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7844
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7884
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7900
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7992
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8063
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8069
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8073
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8077
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8081
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8085
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8089
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8093
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8101
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8113
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8129
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8146
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8151
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8211
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8219
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8223
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8239
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8243
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8251
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8345
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8350
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8352
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8368
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8376
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8385
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8400
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8430
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy()}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8441
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8442
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8457
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8468
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8508
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8512
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8530
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.CastExplicit}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8558
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8562
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8588
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8593
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8602
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8604
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8608
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8611
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8620
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8629
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8631
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8634
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8636
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8639
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8641
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8644
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8649
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8651
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8658
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8659
		{
			return unimplemented(sqllex, "treat")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8661
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8677
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8680
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8685
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8690
		{
			return unimplemented(sqllex, "within group")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8691
		{
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8720
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8726
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8738
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.str = ""
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8785
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8809
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8815
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8828
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8896
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8925
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = tree.Any
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = tree.Some
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = tree.All
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = tree.Div
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8956
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8960
		{
			sqlVAL.union.val = tree.LT
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = tree.GT
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = tree.LE
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8964
		{
			sqlVAL.union.val = tree.GE
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.union.val = tree.NE
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = tree.Like
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8972
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9005
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9009
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9013
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9024
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9045
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = []*types.T{sqlDollar[1].union.colType()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colTypes(), sqlDollar[3].union.colType())
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9071
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9091
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9231
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9286
		{
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9287
		{
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9336
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9359
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9367
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.TableName)
			name.TableName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9440
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9456
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9465
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9476
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9485
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9493
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9505
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9672
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9685
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9692
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.str = ""
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
